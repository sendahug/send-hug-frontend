version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.8
  cypress: cypress-io/cypress@3.3.1
  codecov: codecov/codecov@4.0.1
jobs:
  format:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: send-hug-v1-
      - run: npm install
      - save_cache:
          key: send-hug-v1-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run: npx prettier --check .
  test:
    docker:
      - image: cimg/node:lts
    environment:
      CHROME_BIN: /usr/bin/google-chrome
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - run: google-chrome --version
      - restore_cache:
          key: send-hug-v1-
      - run: npm install
      - save_cache:
          key: send-hug-v1-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - codecov/upload
  e2e:
    docker:
      - image: cimg/python:3.11-node
        environment:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test_sah?sslmode=disable
          FLASK_APP: send-hug-backend/app.py
          FLASK_ENV: development
          FRONTEND: http://localhost:3000
      - image: cimg/postgres:14.10
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_sah
          POSTGRES_PASSWORD: "password"
    environment:
      CHROME_BIN: /usr/bin/google-chrome
    steps:
      - checkout
      - run: |
          sudo npm install -g gulp pa11y-ci --unsafe-perm=true --allow-root
          sudo apt-get update
          sudo apt-get install -y postgresql-client python3-pip xvfb
      - run: |
          cd ..
          git clone https://github.com/sendahug/send-hug-backend
      - run:
          name: Install Python deps
          command: |
            cd ..
            pip3 install -r send-hug-backend/requirements.txt
            python3 -m pip install --upgrade pip
      # Dockerize installation to wait for the database to load
      # Taken from: https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Restore database
          command: |
            cd ..
            psql -h localhost -p 5432 -U postgres test_sah < send-hug-backend/tests/capstone_db.sql
      - run:
          name: Start backend
          command: |
            cd ..
            flask run
          background: true
      - browser-tools/install-browser-tools
      - run: google-chrome --version
      - cypress/install
      - restore_cache:
          key: send-hug-v1-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: send-hug-v1-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Run setup
          command: gulp localDev
      - run:
          name: Start frontend server
          command: gulp e2eServe
          background: true
      - run:
          name: Run e2e tests
          command: npm run cypress
  accessibility:
    docker:
      - image: shirblc/python-npm-tools:3.0
        environment:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test_sah?sslmode=disable
          FLASK_APP: send-hug-backend/app.py
          FLASK_ENV: development
          FRONTEND: http://localhost:3000
      - image: cimg/postgres:14.10
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_sah
          POSTGRES_PASSWORD: "password"
    environment:
      CHROME_BIN: /usr/bin/google-chrome
    steps:
      - checkout
      - run: |
          cd ..
          git clone https://github.com/sendahug/send-hug-backend
      - run:
          name: Install Python deps
          command: |
            cd ..
            pip3 install -r send-hug-backend/requirements.txt
            python3 -m pip install --upgrade pip
      # Dockerize installation to wait for the database to load
      # Taken from: https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Restore database
          command: |
            cd ..
            psql -h localhost -p 5432 -U postgres test_sah < send-hug-backend/tests/capstone_db.sql
      - run:
          name: Start backend
          command: |
            cd ..
            flask run
          background: true
      - browser-tools/install-browser-tools
      - run: google-chrome --version
      - restore_cache:
          key: send-hug-v1-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: send-hug-v1-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: Run setup
          command: gulp localDev
      - run:
          name: Start frontend server
          command: gulp e2eServe
          background: true
      - run: sleep 15
      - run:
          name: Run accessibility tests
          command: pa11y-ci --sitemap http://localhost:3000/sitemap.xml

workflows:
  run-testing:
    jobs:
      - format
      - test
      - e2e
      - accessibility
