"use strict";function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass2(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof require&&require,i=0;i<t.length;i++){o(t[i]);}return o;}return r;})()({1:[function(require,module,exports){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('@angular/core'),require('rxjs'),require('rxjs/operators'),require('@angular/common')):typeof define==='function'&&define.amd?define('@angular/common/http',['exports','@angular/core','rxjs','rxjs/operators','@angular/common'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.common=global.ng.common||{},global.ng.common.http={}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common));})(this,function(exports,core,rxjs,operators,common){'use strict';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a
     * `HttpResponse`.
     *
     * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the
     * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the
     * `HttpBackend`.
     *
     * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.
     *
     * @publicApi
     */var HttpHandler=/** @class */function(){function HttpHandler(){}return HttpHandler;}();/**
     * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.
     *
     * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.
     *
     * When injected, `HttpBackend` dispatches requests directly to the backend, without going
     * through the interceptor chain.
     *
     * @publicApi
     */var HttpBackend=/** @class */function(){function HttpBackend(){}return HttpBackend;}();/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};function __extends(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign=function __assign(){_assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents the header configuration options for an HTTP request.
     * Instances are immutable. Modifying methods return a cloned
     * instance with the change. The original object is never changed.
     *
     * @publicApi
     */var HttpHeaders=/** @class */function(){/**  Constructs a new HTTP header object with the given values.*/function HttpHeaders(headers){var _this=this;/**
             * Internal map of lowercased header names to the normalized
             * form of the name (the form seen first).
             */this.normalizedNames=new Map();/**
             * Queued updates to be materialized the next initialization.
             */this.lazyUpdate=null;if(!headers){this.headers=new Map();}else if(typeof headers==='string'){this.lazyInit=function(){_this.headers=new Map();headers.split('\n').forEach(function(line){var index=line.indexOf(':');if(index>0){var name_1=line.slice(0,index);var key=name_1.toLowerCase();var value=line.slice(index+1).trim();_this.maybeSetNormalizedName(name_1,key);if(_this.headers.has(key)){_this.headers.get(key).push(value);}else{_this.headers.set(key,[value]);}}});};}else{this.lazyInit=function(){_this.headers=new Map();Object.keys(headers).forEach(function(name){var values=headers[name];var key=name.toLowerCase();if(typeof values==='string'){values=[values];}if(values.length>0){_this.headers.set(key,values);_this.maybeSetNormalizedName(name,key);}});};}}/**
         * Checks for existence of a given header.
         *
         * @param name The header name to check for existence.
         *
         * @returns True if the header exists, false otherwise.
         */HttpHeaders.prototype.has=function(name){this.init();return this.headers.has(name.toLowerCase());};/**
         * Retrieves the first value of a given header.
         *
         * @param name The header name.
         *
         * @returns The value string if the header exists, null otherwise
         */HttpHeaders.prototype.get=function(name){this.init();var values=this.headers.get(name.toLowerCase());return values&&values.length>0?values[0]:null;};/**
         * Retrieves the names of the headers.
         *
         * @returns A list of header names.
         */HttpHeaders.prototype.keys=function(){this.init();return Array.from(this.normalizedNames.values());};/**
         * Retrieves a list of values for a given header.
         *
         * @param name The header name from which to retrieve values.
         *
         * @returns A string of values if the header exists, null otherwise.
         */HttpHeaders.prototype.getAll=function(name){this.init();return this.headers.get(name.toLowerCase())||null;};/**
         * Appends a new value to the existing set of values for a header
         * and returns them in a clone of the original instance.
         *
         * @param name The header name for which to append the values.
         * @param value The value to append.
         *
         * @returns A clone of the HTTP headers object with the value appended to the given header.
         */HttpHeaders.prototype.append=function(name,value){return this.clone({name:name,value:value,op:'a'});};/**
         * Sets or modifies a value for a given header in a clone of the original instance.
         * If the header already exists, its value is replaced with the given value
         * in the returned object.
         *
         * @param name The header name.
         * @param value The value or values to set or overide for the given header.
         *
         * @returns A clone of the HTTP headers object with the newly set header value.
         */HttpHeaders.prototype.set=function(name,value){return this.clone({name:name,value:value,op:'s'});};/**
         * Deletes values for a given header in a clone of the original instance.
         *
         * @param name The header name.
         * @param value The value or values to delete for the given header.
         *
         * @returns A clone of the HTTP headers object with the given value deleted.
         */HttpHeaders.prototype["delete"]=function(name,value){return this.clone({name:name,value:value,op:'d'});};HttpHeaders.prototype.maybeSetNormalizedName=function(name,lcName){if(!this.normalizedNames.has(lcName)){this.normalizedNames.set(lcName,name);}};HttpHeaders.prototype.init=function(){var _this=this;if(!!this.lazyInit){if(this.lazyInit instanceof HttpHeaders){this.copyFrom(this.lazyInit);}else{this.lazyInit();}this.lazyInit=null;if(!!this.lazyUpdate){this.lazyUpdate.forEach(function(update){return _this.applyUpdate(update);});this.lazyUpdate=null;}}};HttpHeaders.prototype.copyFrom=function(other){var _this=this;other.init();Array.from(other.headers.keys()).forEach(function(key){_this.headers.set(key,other.headers.get(key));_this.normalizedNames.set(key,other.normalizedNames.get(key));});};HttpHeaders.prototype.clone=function(update){var clone=new HttpHeaders();clone.lazyInit=!!this.lazyInit&&this.lazyInit instanceof HttpHeaders?this.lazyInit:this;clone.lazyUpdate=(this.lazyUpdate||[]).concat([update]);return clone;};HttpHeaders.prototype.applyUpdate=function(update){var key=update.name.toLowerCase();switch(update.op){case'a':case's':var value=update.value;if(typeof value==='string'){value=[value];}if(value.length===0){return;}this.maybeSetNormalizedName(update.name,key);var base=(update.op==='a'?this.headers.get(key):undefined)||[];base.push.apply(base,__spread(value));this.headers.set(key,base);break;case'd':var toDelete_1=update.value;if(!toDelete_1){this.headers["delete"](key);this.normalizedNames["delete"](key);}else{var existing=this.headers.get(key);if(!existing){return;}existing=existing.filter(function(value){return toDelete_1.indexOf(value)===-1;});if(existing.length===0){this.headers["delete"](key);this.normalizedNames["delete"](key);}else{this.headers.set(key,existing);}}break;}};/**
         * @internal
         */HttpHeaders.prototype.forEach=function(fn){var _this=this;this.init();Array.from(this.normalizedNames.keys()).forEach(function(key){return fn(_this.normalizedNames.get(key),_this.headers.get(key));});};return HttpHeaders;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provides encoding and decoding of URL parameter and query-string values.
     *
     * Serializes and parses URL parameter keys and values to encode and decode them.
     * If you pass URL query parameters without encoding,
     * the query parameters can be misinterpreted at the receiving end.
     *
     *
     * @publicApi
     */var HttpUrlEncodingCodec=/** @class */function(){function HttpUrlEncodingCodec(){}/**
         * Encodes a key name for a URL parameter or query-string.
         * @param key The key name.
         * @returns The encoded key name.
         */HttpUrlEncodingCodec.prototype.encodeKey=function(key){return standardEncoding(key);};/**
         * Encodes the value of a URL parameter or query-string.
         * @param value The value.
         * @returns The encoded value.
         */HttpUrlEncodingCodec.prototype.encodeValue=function(value){return standardEncoding(value);};/**
         * Decodes an encoded URL parameter or query-string key.
         * @param key The encoded key name.
         * @returns The decoded key name.
         */HttpUrlEncodingCodec.prototype.decodeKey=function(key){return decodeURIComponent(key);};/**
         * Decodes an encoded URL parameter or query-string value.
         * @param value The encoded value.
         * @returns The decoded value.
         */HttpUrlEncodingCodec.prototype.decodeValue=function(value){return decodeURIComponent(value);};return HttpUrlEncodingCodec;}();function paramParser(rawParams,codec){var map=new Map();if(rawParams.length>0){var params=rawParams.split('&');params.forEach(function(param){var eqIdx=param.indexOf('=');var _a=__read(eqIdx==-1?[codec.decodeKey(param),'']:[codec.decodeKey(param.slice(0,eqIdx)),codec.decodeValue(param.slice(eqIdx+1))],2),key=_a[0],val=_a[1];var list=map.get(key)||[];list.push(val);map.set(key,list);});}return map;}function standardEncoding(v){return encodeURIComponent(v).replace(/%40/gi,'@').replace(/%3A/gi,':').replace(/%24/gi,'$').replace(/%2C/gi,',').replace(/%3B/gi,';').replace(/%2B/gi,'+').replace(/%3D/gi,'=').replace(/%3F/gi,'?').replace(/%2F/gi,'/');}/**
     * An HTTP request/response body that represents serialized parameters,
     * per the MIME type `application/x-www-form-urlencoded`.
     *
     * This class is immutable; all mutation operations return a new instance.
     *
     * @publicApi
     */var HttpParams=/** @class */function(){function HttpParams(options){var _this=this;if(options===void 0){options={};}this.updates=null;this.cloneFrom=null;this.encoder=options.encoder||new HttpUrlEncodingCodec();if(!!options.fromString){if(!!options.fromObject){throw new Error("Cannot specify both fromString and fromObject.");}this.map=paramParser(options.fromString,this.encoder);}else if(!!options.fromObject){this.map=new Map();Object.keys(options.fromObject).forEach(function(key){var value=options.fromObject[key];_this.map.set(key,Array.isArray(value)?value:[value]);});}else{this.map=null;}}/**
         * Reports whether the body includes one or more values for a given parameter.
         * @param param The parameter name.
         * @returns True if the parameter has one or more values,
         * false if it has no value or is not present.
         */HttpParams.prototype.has=function(param){this.init();return this.map.has(param);};/**
         * Retrieves the first value for a parameter.
         * @param param The parameter name.
         * @returns The first value of the given parameter,
         * or `null` if the parameter is not present.
         */HttpParams.prototype.get=function(param){this.init();var res=this.map.get(param);return!!res?res[0]:null;};/**
         * Retrieves all values for a  parameter.
         * @param param The parameter name.
         * @returns All values in a string array,
         * or `null` if the parameter not present.
         */HttpParams.prototype.getAll=function(param){this.init();return this.map.get(param)||null;};/**
         * Retrieves all the parameters for this body.
         * @returns The parameter names in a string array.
         */HttpParams.prototype.keys=function(){this.init();return Array.from(this.map.keys());};/**
         * Appends a new value to existing values for a parameter.
         * @param param The parameter name.
         * @param value The new value to add.
         * @return A new body with the appended value.
         */HttpParams.prototype.append=function(param,value){return this.clone({param:param,value:value,op:'a'});};/**
         * Replaces the value for a parameter.
         * @param param The parameter name.
         * @param value The new value.
         * @return A new body with the new value.
         */HttpParams.prototype.set=function(param,value){return this.clone({param:param,value:value,op:'s'});};/**
         * Removes a given value or all values from a parameter.
         * @param param The parameter name.
         * @param value The value to remove, if provided.
         * @return A new body with the given value removed, or with all values
         * removed if no value is specified.
         */HttpParams.prototype["delete"]=function(param,value){return this.clone({param:param,value:value,op:'d'});};/**
         * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are
         * separated by `&`s.
         */HttpParams.prototype.toString=function(){var _this=this;this.init();return this.keys().map(function(key){var eKey=_this.encoder.encodeKey(key);// `a: ['1']` produces `'a=1'`
// `b: []` produces `''`
// `c: ['1', '2']` produces `'c=1&c=2'`
return _this.map.get(key).map(function(value){return eKey+'='+_this.encoder.encodeValue(value);}).join('&');})// filter out empty values because `b: []` produces `''`
// which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't
.filter(function(param){return param!=='';}).join('&');};HttpParams.prototype.clone=function(update){var clone=new HttpParams({encoder:this.encoder});clone.cloneFrom=this.cloneFrom||this;clone.updates=(this.updates||[]).concat([update]);return clone;};HttpParams.prototype.init=function(){var _this=this;if(this.map===null){this.map=new Map();}if(this.cloneFrom!==null){this.cloneFrom.init();this.cloneFrom.keys().forEach(function(key){return _this.map.set(key,_this.cloneFrom.map.get(key));});this.updates.forEach(function(update){switch(update.op){case'a':case's':var base=(update.op==='a'?_this.map.get(update.param):undefined)||[];base.push(update.value);_this.map.set(update.param,base);break;case'd':if(update.value!==undefined){var base_1=_this.map.get(update.param)||[];var idx=base_1.indexOf(update.value);if(idx!==-1){base_1.splice(idx,1);}if(base_1.length>0){_this.map.set(update.param,base_1);}else{_this.map["delete"](update.param);}}else{_this.map["delete"](update.param);break;}}});this.cloneFrom=this.updates=null;}};return HttpParams;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Determine whether the given HTTP method may include a body.
     */function mightHaveBody(method){switch(method){case'DELETE':case'GET':case'HEAD':case'OPTIONS':case'JSONP':return false;default:return true;}}/**
     * Safely assert whether the given value is an ArrayBuffer.
     *
     * In some execution environments ArrayBuffer is not defined.
     */function isArrayBuffer(value){return typeof ArrayBuffer!=='undefined'&&value instanceof ArrayBuffer;}/**
     * Safely assert whether the given value is a Blob.
     *
     * In some execution environments Blob is not defined.
     */function isBlob(value){return typeof Blob!=='undefined'&&value instanceof Blob;}/**
     * Safely assert whether the given value is a FormData instance.
     *
     * In some execution environments FormData is not defined.
     */function isFormData(value){return typeof FormData!=='undefined'&&value instanceof FormData;}/**
     * An outgoing HTTP request with an optional typed body.
     *
     * `HttpRequest` represents an outgoing request, including URL, method,
     * headers, body, and other request configuration options. Instances should be
     * assumed to be immutable. To modify a `HttpRequest`, the `clone`
     * method should be used.
     *
     * @publicApi
     */var HttpRequest=/** @class */function(){function HttpRequest(method,url,third,fourth){this.url=url;/**
             * The request body, or `null` if one isn't set.
             *
             * Bodies are not enforced to be immutable, as they can include a reference to any
             * user-defined data type. However, interceptors should take care to preserve
             * idempotence by treating them as such.
             */this.body=null;/**
             * Whether this request should be made in a way that exposes progress events.
             *
             * Progress events are expensive (change detection runs on each event) and so
             * they should only be requested if the consumer intends to monitor them.
             */this.reportProgress=false;/**
             * Whether this request should be sent with outgoing credentials (cookies).
             */this.withCredentials=false;/**
             * The expected response type of the server.
             *
             * This is used to parse the response appropriately before returning it to
             * the requestee.
             */this.responseType='json';this.method=method.toUpperCase();// Next, need to figure out which argument holds the HttpRequestInit
// options, if any.
var options;// Check whether a body argument is expected. The only valid way to omit
// the body argument is to use a known no-body method like GET.
if(mightHaveBody(this.method)||!!fourth){// Body is the third argument, options are the fourth.
this.body=third!==undefined?third:null;options=fourth;}else{// No body required, options are the third argument. The body stays null.
options=third;}// If options have been passed, interpret them.
if(options){// Normalize reportProgress and withCredentials.
this.reportProgress=!!options.reportProgress;this.withCredentials=!!options.withCredentials;// Override default response type of 'json' if one is provided.
if(!!options.responseType){this.responseType=options.responseType;}// Override headers if they're provided.
if(!!options.headers){this.headers=options.headers;}if(!!options.params){this.params=options.params;}}// If no headers have been passed in, construct a new HttpHeaders instance.
if(!this.headers){this.headers=new HttpHeaders();}// If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.
if(!this.params){this.params=new HttpParams();this.urlWithParams=url;}else{// Encode the parameters to a string in preparation for inclusion in the URL.
var params=this.params.toString();if(params.length===0){// No parameters, the visible URL is just the URL given at creation time.
this.urlWithParams=url;}else{// Does the URL already have query parameters? Look for '?'.
var qIdx=url.indexOf('?');// There are 3 cases to handle:
// 1) No existing parameters -> append '?' followed by params.
// 2) '?' exists and is followed by existing query string ->
//    append '&' followed by params.
// 3) '?' exists at the end of the url -> append params directly.
// This basically amounts to determining the character, if any, with
// which to join the URL and parameters.
var sep=qIdx===-1?'?':qIdx<url.length-1?'&':'';this.urlWithParams=url+sep+params;}}}/**
         * Transform the free-form body into a serialized format suitable for
         * transmission to the server.
         */HttpRequest.prototype.serializeBody=function(){// If no body is present, no need to serialize it.
if(this.body===null){return null;}// Check whether the body is already in a serialized form. If so,
// it can just be returned directly.
if(isArrayBuffer(this.body)||isBlob(this.body)||isFormData(this.body)||typeof this.body==='string'){return this.body;}// Check whether the body is an instance of HttpUrlEncodedParams.
if(this.body instanceof HttpParams){return this.body.toString();}// Check whether the body is an object or array, and serialize with JSON if so.
if(_typeof(this.body)==='object'||typeof this.body==='boolean'||Array.isArray(this.body)){return JSON.stringify(this.body);}// Fall back on toString() for everything else.
return this.body.toString();};/**
         * Examine the body and attempt to infer an appropriate MIME type
         * for it.
         *
         * If no such type can be inferred, this method will return `null`.
         */HttpRequest.prototype.detectContentTypeHeader=function(){// An empty body has no content type.
if(this.body===null){return null;}// FormData bodies rely on the browser's content type assignment.
if(isFormData(this.body)){return null;}// Blobs usually have their own content type. If it doesn't, then
// no type can be inferred.
if(isBlob(this.body)){return this.body.type||null;}// Array buffers have unknown contents and thus no type can be inferred.
if(isArrayBuffer(this.body)){return null;}// Technically, strings could be a form of JSON data, but it's safe enough
// to assume they're plain strings.
if(typeof this.body==='string'){return'text/plain';}// `HttpUrlEncodedParams` has its own content-type.
if(this.body instanceof HttpParams){return'application/x-www-form-urlencoded;charset=UTF-8';}// Arrays, objects, and numbers will be encoded as JSON.
if(_typeof(this.body)==='object'||typeof this.body==='number'||Array.isArray(this.body)){return'application/json';}// No type could be inferred.
return null;};HttpRequest.prototype.clone=function(update){if(update===void 0){update={};}// For method, url, and responseType, take the current value unless
// it is overridden in the update hash.
var method=update.method||this.method;var url=update.url||this.url;var responseType=update.responseType||this.responseType;// The body is somewhat special - a `null` value in update.body means
// whatever current body is present is being overridden with an empty
// body, whereas an `undefined` value in update.body implies no
// override.
var body=update.body!==undefined?update.body:this.body;// Carefully handle the boolean options to differentiate between
// `false` and `undefined` in the update args.
var withCredentials=update.withCredentials!==undefined?update.withCredentials:this.withCredentials;var reportProgress=update.reportProgress!==undefined?update.reportProgress:this.reportProgress;// Headers and params may be appended to if `setHeaders` or
// `setParams` are used.
var headers=update.headers||this.headers;var params=update.params||this.params;// Check whether the caller has asked to add headers.
if(update.setHeaders!==undefined){// Set every requested header.
headers=Object.keys(update.setHeaders).reduce(function(headers,name){return headers.set(name,update.setHeaders[name]);},headers);}// Check whether the caller has asked to set params.
if(update.setParams){// Set every requested param.
params=Object.keys(update.setParams).reduce(function(params,param){return params.set(param,update.setParams[param]);},params);}// Finally, construct the new HttpRequest using the pieces from above.
return new HttpRequest(method,url,body,{params:params,headers:headers,reportProgress:reportProgress,responseType:responseType,withCredentials:withCredentials});};return HttpRequest;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(HttpEventType){/**
         * The request was sent out over the wire.
         */HttpEventType[HttpEventType["Sent"]=0]="Sent";/**
         * An upload progress event was received.
         */HttpEventType[HttpEventType["UploadProgress"]=1]="UploadProgress";/**
         * The response status code and headers were received.
         */HttpEventType[HttpEventType["ResponseHeader"]=2]="ResponseHeader";/**
         * A download progress event was received.
         */HttpEventType[HttpEventType["DownloadProgress"]=3]="DownloadProgress";/**
         * The full response including the body was received.
         */HttpEventType[HttpEventType["Response"]=4]="Response";/**
         * A custom event from an interceptor or a backend.
         */HttpEventType[HttpEventType["User"]=5]="User";})(exports.HttpEventType||(exports.HttpEventType={}));/**
     * Base class for both `HttpResponse` and `HttpHeaderResponse`.
     *
     * @publicApi
     */var HttpResponseBase=/** @class */function(){/**
         * Super-constructor for all responses.
         *
         * The single parameter accepted is an initialization hash. Any properties
         * of the response passed there will override the default values.
         */function HttpResponseBase(init,defaultStatus,defaultStatusText){if(defaultStatus===void 0){defaultStatus=200;}if(defaultStatusText===void 0){defaultStatusText='OK';}// If the hash has values passed, use them to initialize the response.
// Otherwise use the default values.
this.headers=init.headers||new HttpHeaders();this.status=init.status!==undefined?init.status:defaultStatus;this.statusText=init.statusText||defaultStatusText;this.url=init.url||null;// Cache the ok value to avoid defining a getter.
this.ok=this.status>=200&&this.status<300;}return HttpResponseBase;}();/**
     * A partial HTTP response which only includes the status and header data,
     * but no response body.
     *
     * `HttpHeaderResponse` is a `HttpEvent` available on the response
     * event stream, only when progress events are requested.
     *
     * @publicApi
     */var HttpHeaderResponse=/** @class */function(_super){__extends(HttpHeaderResponse,_super);/**
         * Create a new `HttpHeaderResponse` with the given parameters.
         */function HttpHeaderResponse(init){if(init===void 0){init={};}var _this=_super.call(this,init)||this;_this.type=exports.HttpEventType.ResponseHeader;return _this;}/**
         * Copy this `HttpHeaderResponse`, overriding its contents with the
         * given parameter hash.
         */HttpHeaderResponse.prototype.clone=function(update){if(update===void 0){update={};}// Perform a straightforward initialization of the new HttpHeaderResponse,
// overriding the current parameters with new ones if given.
return new HttpHeaderResponse({headers:update.headers||this.headers,status:update.status!==undefined?update.status:this.status,statusText:update.statusText||this.statusText,url:update.url||this.url||undefined});};return HttpHeaderResponse;}(HttpResponseBase);/**
     * A full HTTP response, including a typed response body (which may be `null`
     * if one was not returned).
     *
     * `HttpResponse` is a `HttpEvent` available on the response event
     * stream.
     *
     * @publicApi
     */var HttpResponse=/** @class */function(_super){__extends(HttpResponse,_super);/**
         * Construct a new `HttpResponse`.
         */function HttpResponse(init){if(init===void 0){init={};}var _this=_super.call(this,init)||this;_this.type=exports.HttpEventType.Response;_this.body=init.body!==undefined?init.body:null;return _this;}HttpResponse.prototype.clone=function(update){if(update===void 0){update={};}return new HttpResponse({body:update.body!==undefined?update.body:this.body,headers:update.headers||this.headers,status:update.status!==undefined?update.status:this.status,statusText:update.statusText||this.statusText,url:update.url||this.url||undefined});};return HttpResponse;}(HttpResponseBase);/**
     * A response that represents an error or failure, either from a
     * non-successful HTTP status, an error while executing the request,
     * or some other failure which occurred during the parsing of the response.
     *
     * Any error returned on the `Observable` response stream will be
     * wrapped in an `HttpErrorResponse` to provide additional context about
     * the state of the HTTP layer when the error occurred. The error property
     * will contain either a wrapped Error object or the error response returned
     * from the server.
     *
     * @publicApi
     */var HttpErrorResponse=/** @class */function(_super){__extends(HttpErrorResponse,_super);function HttpErrorResponse(init){var _this=// Initialize with a default status of 0 / Unknown Error.
_super.call(this,init,0,'Unknown Error')||this;_this.name='HttpErrorResponse';/**
             * Errors are never okay, even when the status code is in the 2xx success range.
             */_this.ok=false;// If the response was successful, then this was a parse error. Otherwise, it was
// a protocol-level failure of some sort. Either the request failed in transit
// or the server returned an unsuccessful status code.
if(_this.status>=200&&_this.status<300){_this.message="Http failure during parsing for "+(init.url||'(unknown url)');}else{_this.message="Http failure response for "+(init.url||'(unknown url)')+": "+init.status+" "+init.statusText;}_this.error=init.error||null;return _this;}return HttpErrorResponse;}(HttpResponseBase);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and
     * the given `body`. This function clones the object and adds the body.
     *
     * Note that the `responseType` *options* value is a String that identifies the
     * single data type of the response.
     * A single overload version of the method handles each response type.
     * The value of `responseType` cannot be a union, as the combined signature could imply.
     *
     */function addBody(options,body){return{body:body,headers:options.headers,observe:options.observe,params:options.params,reportProgress:options.reportProgress,responseType:options.responseType,withCredentials:options.withCredentials};}/**
     * Performs HTTP requests.
     * This service is available as an injectable class, with methods to perform HTTP requests.
     * Each request method has multiple signatures, and the return type varies based on
     * the signature that is called (mainly the values of `observe` and `responseType`).
     *
     * Note that the `responseType` *options* value is a String that identifies the
     * single data type of the response.
     * A single overload version of the method handles each response type.
     * The value of `responseType` cannot be a union, as the combined signature could imply.

     *
     * @usageNotes
     * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.
     *
     * ### HTTP Request Example
     *
     * ```
     *  // GET heroes whose name contains search term
     * searchHeroes(term: string): observable<Hero[]>{
     *
     *  const params = new HttpParams({fromString: 'name=term'});
     *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});
     * }
     * ```
     * ### JSONP Example
     * ```
     * requestJsonp(url, callback = 'callback') {
     *  return this.httpClient.jsonp(this.heroesURL, callback);
     * }
     * ```
     *
     * ### PATCH Example
     * ```
     * // PATCH one of the heroes' name
     * patchHero (id: number, heroName: string): Observable<{}> {
     * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42
     *  return this.httpClient.patch(url, {name: heroName}, httpOptions)
     *    .pipe(catchError(this.handleError('patchHero')));
     * }
     * ```
     *
     * @see [HTTP Guide](guide/http)
     *
     * @publicApi
     */var HttpClient=/** @class */function(){function HttpClient(handler){this.handler=handler;}/**
         * Constructs an observable for a generic HTTP request that, when subscribed,
         * fires the request through the chain of registered interceptors and on to the
         * server.
         *
         * You can pass an `HttpRequest` directly as the only parameter. In this case,
         * the call returns an observable of the raw `HttpEvent` stream.
         *
         * Alternatively you can pass an HTTP method as the first parameter,
         * a URL string as the second, and an options hash containing the request body as the third.
         * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the
         * type of returned observable.
         *   * The `responseType` value determines how a successful response body is parsed.
         *   * If `responseType` is the default `json`, you can pass a type interface for the resulting
         * object as a type parameter to the call.
         *
         * The `observe` value determines the return type, according to what you are interested in
         * observing.
         *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including
         * progress events by default.
         *   * An `observe` value of response returns an observable of `HttpResponse<T>`,
         * where the `T` parameter depends on the `responseType` and any optionally provided type
         * parameter.
         *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.
         *
         */HttpClient.prototype.request=function(first,url,options){var _this=this;if(options===void 0){options={};}var req;// First, check whether the primary argument is an instance of `HttpRequest`.
if(first instanceof HttpRequest){// It is. The other arguments must be undefined (per the signatures) and can be
// ignored.
req=first;}else{// It's a string, so it represents a URL. Construct a request based on it,
// and incorporate the remaining arguments (assuming `GET` unless a method is
// provided.
// Figure out the headers.
var headers=undefined;if(options.headers instanceof HttpHeaders){headers=options.headers;}else{headers=new HttpHeaders(options.headers);}// Sort out parameters.
var params=undefined;if(!!options.params){if(options.params instanceof HttpParams){params=options.params;}else{params=new HttpParams({fromObject:options.params});}}// Construct the request.
req=new HttpRequest(first,url,options.body!==undefined?options.body:null,{headers:headers,params:params,reportProgress:options.reportProgress,// By default, JSON is assumed to be returned for all calls.
responseType:options.responseType||'json',withCredentials:options.withCredentials});}// Start with an Observable.of() the initial request, and run the handler (which
// includes all interceptors) inside a concatMap(). This way, the handler runs
// inside an Observable chain, which causes interceptors to be re-run on every
// subscription (this also makes retries re-run the handler, including interceptors).
var events$=rxjs.of(req).pipe(operators.concatMap(function(req){return _this.handler.handle(req);}));// If coming via the API signature which accepts a previously constructed HttpRequest,
// the only option is to get the event stream. Otherwise, return the event stream if
// that is what was requested.
if(first instanceof HttpRequest||options.observe==='events'){return events$;}// The requested stream contains either the full response or the body. In either
// case, the first step is to filter the event stream to extract a stream of
// responses(s).
var res$=events$.pipe(operators.filter(function(event){return event instanceof HttpResponse;}));// Decide which stream to return.
switch(options.observe||'body'){case'body':// The requested stream is the body. Map the response stream to the response
// body. This could be done more simply, but a misbehaving interceptor might
// transform the response body into a different format and ignore the requested
// responseType. Guard against this by validating that the response is of the
// requested type.
switch(req.responseType){case'arraybuffer':return res$.pipe(operators.map(function(res){// Validate that the body is an ArrayBuffer.
if(res.body!==null&&!(res.body instanceof ArrayBuffer)){throw new Error('Response is not an ArrayBuffer.');}return res.body;}));case'blob':return res$.pipe(operators.map(function(res){// Validate that the body is a Blob.
if(res.body!==null&&!(res.body instanceof Blob)){throw new Error('Response is not a Blob.');}return res.body;}));case'text':return res$.pipe(operators.map(function(res){// Validate that the body is a string.
if(res.body!==null&&typeof res.body!=='string'){throw new Error('Response is not a string.');}return res.body;}));case'json':default:// No validation needed for JSON responses, as they can be of any type.
return res$.pipe(operators.map(function(res){return res.body;}));}case'response':// The response stream was requested directly, so return it.
return res$;default:// Guard against new future observe types being added.
throw new Error("Unreachable: unhandled observe type "+options.observe+"}");}};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `DELETE` request to execute on the server. See the individual overloads for
         * details on the return type.
         *
         * @param url     The endpoint URL.
         * @param options The HTTP options to send with the request.
         *
         */HttpClient.prototype["delete"]=function(url,options){if(options===void 0){options={};}return this.request('DELETE',url,options);};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `GET` request to execute on the server. See the individual overloads for
         * details on the return type.
         */HttpClient.prototype.get=function(url,options){if(options===void 0){options={};}return this.request('GET',url,options);};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `HEAD` request to execute on the server. The `HEAD` method returns
         * meta information about the resource without transferring the
         * resource itself. See the individual overloads for
         * details on the return type.
         */HttpClient.prototype.head=function(url,options){if(options===void 0){options={};}return this.request('HEAD',url,options);};/**
         * Constructs an `Observable` that, when subscribed, causes a request with the special method
         * `JSONP` to be dispatched via the interceptor pipeline.
         * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain
         * API endpoints that don't support newer,
         * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.
         * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the
         * requests even if the API endpoint is not located on the same domain (origin) as the client-side
         * application making the request.
         * The endpoint API must support JSONP callback for JSONP requests to work.
         * The resource API returns the JSON response wrapped in a callback function.
         * You can pass the callback function name as one of the query parameters.
         * Note that JSONP requests can only be used with `GET` requests.
         *
         * @param url The resource URL.
         * @param callbackParam The callback function name.
         *
         */HttpClient.prototype.jsonp=function(url,callbackParam){return this.request('JSONP',url,{params:new HttpParams().append(callbackParam,'JSONP_CALLBACK'),observe:'body',responseType:'json'});};/**
         * Constructs an `Observable` that, when subscribed, causes the configured
         * `OPTIONS` request to execute on the server. This method allows the client
         * to determine the supported HTTP methods and other capabilites of an endpoint,
         * without implying a resource action. See the individual overloads for
         * details on the return type.
         */HttpClient.prototype.options=function(url,options){if(options===void 0){options={};}return this.request('OPTIONS',url,options);};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `PATCH` request to execute on the server. See the individual overloads for
         * details on the return type.
         */HttpClient.prototype.patch=function(url,body,options){if(options===void 0){options={};}return this.request('PATCH',url,addBody(options,body));};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `POST` request to execute on the server. The server responds with the location of
         * the replaced resource. See the individual overloads for
         * details on the return type.
         */HttpClient.prototype.post=function(url,body,options){if(options===void 0){options={};}return this.request('POST',url,addBody(options,body));};/**
         * Constructs an observable that, when subscribed, causes the configured
         * `PUT` request to execute on the server. The `PUT` method replaces an existing resource
         * with a new set of values.
         * See the individual overloads for details on the return type.
         */HttpClient.prototype.put=function(url,body,options){if(options===void 0){options={};}return this.request('PUT',url,addBody(options,body));};HttpClient=__decorate([core.Injectable(),__metadata("design:paramtypes",[HttpHandler])],HttpClient);return HttpClient;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.
     *
     *
     */var HttpInterceptorHandler=/** @class */function(){function HttpInterceptorHandler(next,interceptor){this.next=next;this.interceptor=interceptor;}HttpInterceptorHandler.prototype.handle=function(req){return this.interceptor.intercept(req,this.next);};return HttpInterceptorHandler;}();/**
     * A multi-provider token that represents the array of registered
     * `HttpInterceptor` objects.
     *
     * @publicApi
     */var HTTP_INTERCEPTORS=new core.InjectionToken('HTTP_INTERCEPTORS');var NoopInterceptor=/** @class */function(){function NoopInterceptor(){}NoopInterceptor.prototype.intercept=function(req,next){return next.handle(req);};NoopInterceptor=__decorate([core.Injectable()],NoopInterceptor);return NoopInterceptor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Every request made through JSONP needs a callback name that's unique across the
// whole page. Each request is assigned an id and the callback name is constructed
// from that. The next id to be assigned is tracked in a global variable here that
// is shared among all applications on the page.
var nextRequestId=0;// Error text given when a JSONP script is injected, but doesn't invoke the callback
// passed in its URL.
var JSONP_ERR_NO_CALLBACK='JSONP injected script did not invoke callback.';// Error text given when a request is passed to the JsonpClientBackend that doesn't
// have a request method JSONP.
var JSONP_ERR_WRONG_METHOD='JSONP requests must use JSONP request method.';var JSONP_ERR_WRONG_RESPONSE_TYPE='JSONP requests must use Json response type.';/**
     * DI token/abstract type representing a map of JSONP callbacks.
     *
     * In the browser, this should always be the `window` object.
     *
     *
     */var JsonpCallbackContext=/** @class */function(){function JsonpCallbackContext(){}return JsonpCallbackContext;}();/**
     * Processes an `HttpRequest` with the JSONP method,
     * by performing JSONP style requests.
     * @see `HttpHandler`
     * @see `HttpXhrBackend`
     *
     * @publicApi
     */var JsonpClientBackend=/** @class */function(){function JsonpClientBackend(callbackMap,document){this.callbackMap=callbackMap;this.document=document;}/**
         * Get the name of the next callback method, by incrementing the global `nextRequestId`.
         */JsonpClientBackend.prototype.nextCallback=function(){return"ng_jsonp_callback_"+nextRequestId++;};/**
         * Processes a JSONP request and returns an event stream of the results.
         * @param req The request object.
         * @returns An observable of the response events.
         *
         */JsonpClientBackend.prototype.handle=function(req){var _this=this;// Firstly, check both the method and response type. If either doesn't match
// then the request was improperly routed here and cannot be handled.
if(req.method!=='JSONP'){throw new Error(JSONP_ERR_WRONG_METHOD);}else if(req.responseType!=='json'){throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);}// Everything else happens inside the Observable boundary.
return new rxjs.Observable(function(observer){// The first step to make a request is to generate the callback name, and replace the
// callback placeholder in the URL with the name. Care has to be taken here to ensure
// a trailing &, if matched, gets inserted back into the URL in the correct place.
var callback=_this.nextCallback();var url=req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/,"="+callback+"$1");// Construct the <script> tag and point it at the URL.
var node=_this.document.createElement('script');node.src=url;// A JSONP request requires waiting for multiple callbacks. These variables
// are closed over and track state across those callbacks.
// The response object, if one has been received, or null otherwise.
var body=null;// Whether the response callback has been called.
var finished=false;// Whether the request has been cancelled (and thus any other callbacks)
// should be ignored.
var cancelled=false;// Set the response callback in this.callbackMap (which will be the window
// object in the browser. The script being loaded via the <script> tag will
// eventually call this callback.
_this.callbackMap[callback]=function(data){// Data has been received from the JSONP script. Firstly, delete this callback.
delete _this.callbackMap[callback];// Next, make sure the request wasn't cancelled in the meantime.
if(cancelled){return;}// Set state to indicate data was received.
body=data;finished=true;};// cleanup() is a utility closure that removes the <script> from the page and
// the response callback from the window. This logic is used in both the
// success, error, and cancellation paths, so it's extracted out for convenience.
var cleanup=function cleanup(){// Remove the <script> tag if it's still on the page.
if(node.parentNode){node.parentNode.removeChild(node);}// Remove the response callback from the callbackMap (window object in the
// browser).
delete _this.callbackMap[callback];};// onLoad() is the success callback which runs after the response callback
// if the JSONP script loads successfully. The event itself is unimportant.
// If something went wrong, onLoad() may run without the response callback
// having been invoked.
var onLoad=function onLoad(event){// Do nothing if the request has been cancelled.
if(cancelled){return;}// Cleanup the page.
cleanup();// Check whether the response callback has run.
if(!finished){// It hasn't, something went wrong with the request. Return an error via
// the Observable error path. All JSONP errors have status 0.
observer.error(new HttpErrorResponse({url:url,status:0,statusText:'JSONP Error',error:new Error(JSONP_ERR_NO_CALLBACK)}));return;}// Success. body either contains the response body or null if none was
// returned.
observer.next(new HttpResponse({body:body,status:200,statusText:'OK',url:url}));// Complete the stream, the response is over.
observer.complete();};// onError() is the error callback, which runs if the script returned generates
// a Javascript error. It emits the error via the Observable error channel as
// a HttpErrorResponse.
var onError=function onError(error){// If the request was already cancelled, no need to emit anything.
if(cancelled){return;}cleanup();// Wrap the error in a HttpErrorResponse.
observer.error(new HttpErrorResponse({error:error,status:0,statusText:'JSONP Error',url:url}));};// Subscribe to both the success (load) and error events on the <script> tag,
// and add it to the page.
node.addEventListener('load',onLoad);node.addEventListener('error',onError);_this.document.body.appendChild(node);// The request has now been successfully sent.
observer.next({type:exports.HttpEventType.Sent});// Cancellation handler.
return function(){// Track the cancellation so event listeners won't do anything even if already scheduled.
cancelled=true;// Remove the event listeners so they won't run if the events later fire.
node.removeEventListener('load',onLoad);node.removeEventListener('error',onError);// And finally, clean up the page.
cleanup();};});};JsonpClientBackend=__decorate([core.Injectable(),__param(1,core.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[JsonpCallbackContext,Object])],JsonpClientBackend);return JsonpClientBackend;}();/**
     * Identifies requests with the method JSONP and
     * shifts them to the `JsonpClientBackend`.
     *
     * @see `HttpInterceptor`
     *
     * @publicApi
     */var JsonpInterceptor=/** @class */function(){function JsonpInterceptor(jsonp){this.jsonp=jsonp;}/**
         * Identifies and handles a given JSONP request.
         * @param req The outgoing request object to handle.
         * @param next The next interceptor in the chain, or the backend
         * if no interceptors remain in the chain.
         * @returns An observable of the event stream.
         */JsonpInterceptor.prototype.intercept=function(req,next){if(req.method==='JSONP'){return this.jsonp.handle(req);}// Fall through for normal HTTP requests.
return next.handle(req);};JsonpInterceptor=__decorate([core.Injectable(),__metadata("design:paramtypes",[JsonpClientBackend])],JsonpInterceptor);return JsonpInterceptor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var XSSI_PREFIX=/^\)\]\}',?\n/;/**
     * Determine an appropriate URL for the response, by checking either
     * XMLHttpRequest.responseURL or the X-Request-URL header.
     */function getResponseUrl(xhr){if('responseURL'in xhr&&xhr.responseURL){return xhr.responseURL;}if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){return xhr.getResponseHeader('X-Request-URL');}return null;}/**
     * A wrapper around the `XMLHttpRequest` constructor.
     *
     * @publicApi
     */var XhrFactory=/** @class */function(){function XhrFactory(){}return XhrFactory;}();/**
     * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.
     *
     */var BrowserXhr=/** @class */function(){function BrowserXhr(){}BrowserXhr.prototype.build=function(){return new XMLHttpRequest();};BrowserXhr=__decorate([core.Injectable(),__metadata("design:paramtypes",[])],BrowserXhr);return BrowserXhr;}();/**
     * Uses `XMLHttpRequest` to send requests to a backend server.
     * @see `HttpHandler`
     * @see `JsonpClientBackend`
     *
     * @publicApi
     */var HttpXhrBackend=/** @class */function(){function HttpXhrBackend(xhrFactory){this.xhrFactory=xhrFactory;}/**
         * Processes a request and returns a stream of response events.
         * @param req The request object.
         * @returns An observable of the response events.
         */HttpXhrBackend.prototype.handle=function(req){var _this=this;// Quick check to give a better error message when a user attempts to use
// HttpClient.jsonp() without installing the JsonpClientModule
if(req.method==='JSONP'){throw new Error("Attempted to construct Jsonp request without JsonpClientModule installed.");}// Everything happens on Observable subscription.
return new rxjs.Observable(function(observer){// Start by setting up the XHR object with request method, URL, and withCredentials flag.
var xhr=_this.xhrFactory.build();xhr.open(req.method,req.urlWithParams);if(!!req.withCredentials){xhr.withCredentials=true;}// Add all the requested headers.
req.headers.forEach(function(name,values){return xhr.setRequestHeader(name,values.join(','));});// Add an Accept header if one isn't present already.
if(!req.headers.has('Accept')){xhr.setRequestHeader('Accept','application/json, text/plain, */*');}// Auto-detect the Content-Type header if one isn't present already.
if(!req.headers.has('Content-Type')){var detectedType=req.detectContentTypeHeader();// Sometimes Content-Type detection fails.
if(detectedType!==null){xhr.setRequestHeader('Content-Type',detectedType);}}// Set the responseType if one was requested.
if(req.responseType){var responseType=req.responseType.toLowerCase();// JSON responses need to be processed as text. This is because if the server
// returns an XSSI-prefixed JSON response, the browser will fail to parse it,
// xhr.response will be null, and xhr.responseText cannot be accessed to
// retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON
// is parsed by first requesting text and then applying JSON.parse.
xhr.responseType=responseType!=='json'?responseType:'text';}// Serialize the request body if one is present. If not, this will be set to null.
var reqBody=req.serializeBody();// If progress events are enabled, response headers will be delivered
// in two events - the HttpHeaderResponse event and the full HttpResponse
// event. However, since response headers don't change in between these
// two events, it doesn't make sense to parse them twice. So headerResponse
// caches the data extracted from the response whenever it's first parsed,
// to ensure parsing isn't duplicated.
var headerResponse=null;// partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest
// state, and memoizes it into headerResponse.
var partialFromXhr=function partialFromXhr(){if(headerResponse!==null){return headerResponse;}// Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).
var status=xhr.status===1223?204:xhr.status;var statusText=xhr.statusText||'OK';// Parse headers from XMLHttpRequest - this step is lazy.
var headers=new HttpHeaders(xhr.getAllResponseHeaders());// Read the response URL from the XMLHttpResponse instance and fall back on the
// request URL.
var url=getResponseUrl(xhr)||req.url;// Construct the HttpHeaderResponse and memoize it.
headerResponse=new HttpHeaderResponse({headers:headers,status:status,statusText:statusText,url:url});return headerResponse;};// Next, a few closures are defined for the various events which XMLHttpRequest can
// emit. This allows them to be unregistered as event listeners later.
// First up is the load event, which represents a response being fully available.
var onLoad=function onLoad(){// Read response state from the memoized partial data.
var _a=partialFromXhr(),headers=_a.headers,status=_a.status,statusText=_a.statusText,url=_a.url;// The body will be read out if present.
var body=null;if(status!==204){// Use XMLHttpRequest.response if set, responseText otherwise.
body=typeof xhr.response==='undefined'?xhr.responseText:xhr.response;}// Normalize another potential bug (this one comes from CORS).
if(status===0){status=!!body?200:0;}// ok determines whether the response will be transmitted on the event or
// error channel. Unsuccessful status codes (not 2xx) will always be errors,
// but a successful status code can still result in an error if the user
// asked for JSON data and the body cannot be parsed as such.
var ok=status>=200&&status<300;// Check whether the body needs to be parsed as JSON (in many cases the browser
// will have done that already).
if(req.responseType==='json'&&typeof body==='string'){// Save the original body, before attempting XSSI prefix stripping.
var originalBody=body;body=body.replace(XSSI_PREFIX,'');try{// Attempt the parse. If it fails, a parse error should be delivered to the user.
body=body!==''?JSON.parse(body):null;}catch(error){// Since the JSON.parse failed, it's reasonable to assume this might not have been a
// JSON response. Restore the original body (including any XSSI prefix) to deliver
// a better error response.
body=originalBody;// If this was an error request to begin with, leave it as a string, it probably
// just isn't JSON. Otherwise, deliver the parsing error to the user.
if(ok){// Even though the response status was 2xx, this is still an error.
ok=false;// The parse error contains the text of the body that failed to parse.
body={error:error,text:body};}}}if(ok){// A successful response is delivered on the event stream.
observer.next(new HttpResponse({body:body,headers:headers,status:status,statusText:statusText,url:url||undefined}));// The full body has been received and delivered, no further events
// are possible. This request is complete.
observer.complete();}else{// An unsuccessful request is delivered on the error channel.
observer.error(new HttpErrorResponse({// The error in this case is the response body (error from the server).
error:body,headers:headers,status:status,statusText:statusText,url:url||undefined}));}};// The onError callback is called when something goes wrong at the network level.
// Connection timeout, DNS error, offline, etc. These are actual errors, and are
// transmitted on the error channel.
var onError=function onError(error){var url=partialFromXhr().url;var res=new HttpErrorResponse({error:error,status:xhr.status||0,statusText:xhr.statusText||'Unknown Error',url:url||undefined});observer.error(res);};// The sentHeaders flag tracks whether the HttpResponseHeaders event
// has been sent on the stream. This is necessary to track if progress
// is enabled since the event will be sent on only the first download
// progerss event.
var sentHeaders=false;// The download progress event handler, which is only registered if
// progress events are enabled.
var onDownProgress=function onDownProgress(event){// Send the HttpResponseHeaders event if it hasn't been sent already.
if(!sentHeaders){observer.next(partialFromXhr());sentHeaders=true;}// Start building the download progress event to deliver on the response
// event stream.
var progressEvent={type:exports.HttpEventType.DownloadProgress,loaded:event.loaded};// Set the total number of bytes in the event if it's available.
if(event.lengthComputable){progressEvent.total=event.total;}// If the request was for text content and a partial response is
// available on XMLHttpRequest, include it in the progress event
// to allow for streaming reads.
if(req.responseType==='text'&&!!xhr.responseText){progressEvent.partialText=xhr.responseText;}// Finally, fire the event.
observer.next(progressEvent);};// The upload progress event handler, which is only registered if
// progress events are enabled.
var onUpProgress=function onUpProgress(event){// Upload progress events are simpler. Begin building the progress
// event.
var progress={type:exports.HttpEventType.UploadProgress,loaded:event.loaded};// If the total number of bytes being uploaded is available, include
// it.
if(event.lengthComputable){progress.total=event.total;}// Send the event.
observer.next(progress);};// By default, register for load and error events.
xhr.addEventListener('load',onLoad);xhr.addEventListener('error',onError);// Progress events are only enabled if requested.
if(req.reportProgress){// Download progress is always enabled if requested.
xhr.addEventListener('progress',onDownProgress);// Upload progress depends on whether there is a body to upload.
if(reqBody!==null&&xhr.upload){xhr.upload.addEventListener('progress',onUpProgress);}}// Fire the request, and notify the event stream that it was fired.
xhr.send(reqBody);observer.next({type:exports.HttpEventType.Sent});// This is the return from the Observable function, which is the
// request cancellation handler.
return function(){// On a cancellation, remove all registered event listeners.
xhr.removeEventListener('error',onError);xhr.removeEventListener('load',onLoad);if(req.reportProgress){xhr.removeEventListener('progress',onDownProgress);if(reqBody!==null&&xhr.upload){xhr.upload.removeEventListener('progress',onUpProgress);}}// Finally, abort the in-flight request.
xhr.abort();};});};HttpXhrBackend=__decorate([core.Injectable(),__metadata("design:paramtypes",[XhrFactory])],HttpXhrBackend);return HttpXhrBackend;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var XSRF_COOKIE_NAME=new core.InjectionToken('XSRF_COOKIE_NAME');var XSRF_HEADER_NAME=new core.InjectionToken('XSRF_HEADER_NAME');/**
     * Retrieves the current XSRF token to use with the next outgoing request.
     *
     * @publicApi
     */var HttpXsrfTokenExtractor=/** @class */function(){function HttpXsrfTokenExtractor(){}return HttpXsrfTokenExtractor;}();/**
     * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.
     */var HttpXsrfCookieExtractor=/** @class */function(){function HttpXsrfCookieExtractor(doc,platform,cookieName){this.doc=doc;this.platform=platform;this.cookieName=cookieName;this.lastCookieString='';this.lastToken=null;/**
             * @internal for testing
             */this.parseCount=0;}HttpXsrfCookieExtractor.prototype.getToken=function(){if(this.platform==='server'){return null;}var cookieString=this.doc.cookie||'';if(cookieString!==this.lastCookieString){this.parseCount++;this.lastToken=common.ɵparseCookieValue(cookieString,this.cookieName);this.lastCookieString=cookieString;}return this.lastToken;};HttpXsrfCookieExtractor=__decorate([core.Injectable(),__param(0,core.Inject(common.DOCUMENT)),__param(1,core.Inject(core.PLATFORM_ID)),__param(2,core.Inject(XSRF_COOKIE_NAME)),__metadata("design:paramtypes",[Object,String,String])],HttpXsrfCookieExtractor);return HttpXsrfCookieExtractor;}();/**
     * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.
     */var HttpXsrfInterceptor=/** @class */function(){function HttpXsrfInterceptor(tokenService,headerName){this.tokenService=tokenService;this.headerName=headerName;}HttpXsrfInterceptor.prototype.intercept=function(req,next){var lcUrl=req.url.toLowerCase();// Skip both non-mutating requests and absolute URLs.
// Non-mutating requests don't require a token, and absolute URLs require special handling
// anyway as the cookie set
// on our origin is not the same as the token expected by another origin.
if(req.method==='GET'||req.method==='HEAD'||lcUrl.startsWith('http://')||lcUrl.startsWith('https://')){return next.handle(req);}var token=this.tokenService.getToken();// Be careful not to overwrite an existing header of the same name.
if(token!==null&&!req.headers.has(this.headerName)){req=req.clone({headers:req.headers.set(this.headerName,token)});}return next.handle(req);};HttpXsrfInterceptor=__decorate([core.Injectable(),__param(1,core.Inject(XSRF_HEADER_NAME)),__metadata("design:paramtypes",[HttpXsrfTokenExtractor,String])],HttpXsrfInterceptor);return HttpXsrfInterceptor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An injectable `HttpHandler` that applies multiple interceptors
     * to a request before passing it to the given `HttpBackend`.
     *
     * The interceptors are loaded lazily from the injector, to allow
     * interceptors to themselves inject classes depending indirectly
     * on `HttpInterceptingHandler` itself.
     * @see `HttpInterceptor`
     */var HttpInterceptingHandler=/** @class */function(){function HttpInterceptingHandler(backend,injector){this.backend=backend;this.injector=injector;this.chain=null;}HttpInterceptingHandler.prototype.handle=function(req){if(this.chain===null){var interceptors=this.injector.get(HTTP_INTERCEPTORS,[]);this.chain=interceptors.reduceRight(function(next,interceptor){return new HttpInterceptorHandler(next,interceptor);},this.backend);}return this.chain.handle(req);};HttpInterceptingHandler=__decorate([core.Injectable(),__metadata("design:paramtypes",[HttpBackend,core.Injector])],HttpInterceptingHandler);return HttpInterceptingHandler;}();/**
     * Constructs an `HttpHandler` that applies interceptors
     * to a request before passing it to the given `HttpBackend`.
     *
     * Use as a factory function within `HttpClientModule`.
     *
     *
     */function interceptingHandler(backend,interceptors){if(interceptors===void 0){interceptors=[];}if(!interceptors){return backend;}return interceptors.reduceRight(function(next,interceptor){return new HttpInterceptorHandler(next,interceptor);},backend);}/**
     * Factory function that determines where to store JSONP callbacks.
     *
     * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist
     * in test environments. In that case, callbacks are stored on an anonymous object instead.
     *
     *
     */function jsonpCallbackContext(){if((typeof window==="undefined"?"undefined":_typeof(window))==='object'){return window;}return{};}/**
     * Configures XSRF protection support for outgoing requests.
     *
     * For a server that supports a cookie-based XSRF protection system,
     * use directly to configure XSRF protection with the correct
     * cookie and header names.
     *
     * If no names are supplied, the default cookie name is `XSRF-TOKEN`
     * and the default header name is `X-XSRF-TOKEN`.
     *
     * @publicApi
     */var HttpClientXsrfModule=/** @class */function(){function HttpClientXsrfModule(){}HttpClientXsrfModule_1=HttpClientXsrfModule;/**
         * Disable the default XSRF protection.
         */HttpClientXsrfModule.disable=function(){return{ngModule:HttpClientXsrfModule_1,providers:[{provide:HttpXsrfInterceptor,useClass:NoopInterceptor}]};};/**
         * Configure XSRF protection.
         * @param options An object that can specify either or both
         * cookie name or header name.
         * - Cookie name default is `XSRF-TOKEN`.
         * - Header name default is `X-XSRF-TOKEN`.
         *
         */HttpClientXsrfModule.withOptions=function(options){if(options===void 0){options={};}return{ngModule:HttpClientXsrfModule_1,providers:[options.cookieName?{provide:XSRF_COOKIE_NAME,useValue:options.cookieName}:[],options.headerName?{provide:XSRF_HEADER_NAME,useValue:options.headerName}:[]]};};var HttpClientXsrfModule_1;HttpClientXsrfModule=HttpClientXsrfModule_1=__decorate([core.NgModule({providers:[HttpXsrfInterceptor,{provide:HTTP_INTERCEPTORS,useExisting:HttpXsrfInterceptor,multi:true},{provide:HttpXsrfTokenExtractor,useClass:HttpXsrfCookieExtractor},{provide:XSRF_COOKIE_NAME,useValue:'XSRF-TOKEN'},{provide:XSRF_HEADER_NAME,useValue:'X-XSRF-TOKEN'}]})],HttpClientXsrfModule);return HttpClientXsrfModule;}();/**
     * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`
     * with supporting services for XSRF. Automatically imported by `HttpClientModule`.
     *
     * You can add interceptors to the chain behind `HttpClient` by binding them to the
     * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.
     *
     * @publicApi
     */var HttpClientModule=/** @class */function(){function HttpClientModule(){}HttpClientModule=__decorate([core.NgModule({/**
                 * Optional configuration for XSRF protection.
                 */imports:[HttpClientXsrfModule.withOptions({cookieName:'XSRF-TOKEN',headerName:'X-XSRF-TOKEN'})],/**
                 * Configures the [dependency injector](guide/glossary#injector) where it is imported
                 * with supporting services for HTTP communications.
                 */providers:[HttpClient,{provide:HttpHandler,useClass:HttpInterceptingHandler},HttpXhrBackend,{provide:HttpBackend,useExisting:HttpXhrBackend},BrowserXhr,{provide:XhrFactory,useExisting:BrowserXhr}]})],HttpClientModule);return HttpClientModule;}();/**
     * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`
     * with supporting services for JSONP.
     * Without this module, Jsonp requests reach the backend
     * with method JSONP, where they are rejected.
     *
     * You can add interceptors to the chain behind `HttpClient` by binding them to the
     * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.
     *
     * @publicApi
     */var HttpClientJsonpModule=/** @class */function(){function HttpClientJsonpModule(){}HttpClientJsonpModule=__decorate([core.NgModule({providers:[JsonpClientBackend,{provide:JsonpCallbackContext,useFactory:jsonpCallbackContext},{provide:HTTP_INTERCEPTORS,useClass:JsonpInterceptor,multi:true}]})],HttpClientJsonpModule);return HttpClientJsonpModule;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */exports.HTTP_INTERCEPTORS=HTTP_INTERCEPTORS;exports.HttpBackend=HttpBackend;exports.HttpClient=HttpClient;exports.HttpClientJsonpModule=HttpClientJsonpModule;exports.HttpClientModule=HttpClientModule;exports.HttpClientXsrfModule=HttpClientXsrfModule;exports.HttpErrorResponse=HttpErrorResponse;exports.HttpHandler=HttpHandler;exports.HttpHeaderResponse=HttpHeaderResponse;exports.HttpHeaders=HttpHeaders;exports.HttpParams=HttpParams;exports.HttpRequest=HttpRequest;exports.HttpResponse=HttpResponse;exports.HttpResponseBase=HttpResponseBase;exports.HttpUrlEncodingCodec=HttpUrlEncodingCodec;exports.HttpXhrBackend=HttpXhrBackend;exports.HttpXsrfTokenExtractor=HttpXsrfTokenExtractor;exports.JsonpClientBackend=JsonpClientBackend;exports.JsonpInterceptor=JsonpInterceptor;exports.XhrFactory=XhrFactory;exports.ɵHttpInterceptingHandler=HttpInterceptingHandler;exports.ɵangular_packages_common_http_http_a=NoopInterceptor;exports.ɵangular_packages_common_http_http_b=JsonpCallbackContext;exports.ɵangular_packages_common_http_http_c=jsonpCallbackContext;exports.ɵangular_packages_common_http_http_d=BrowserXhr;exports.ɵangular_packages_common_http_http_e=XSRF_COOKIE_NAME;exports.ɵangular_packages_common_http_http_f=XSRF_HEADER_NAME;exports.ɵangular_packages_common_http_http_g=HttpXsrfCookieExtractor;exports.ɵangular_packages_common_http_http_h=HttpXsrfInterceptor;Object.defineProperty(exports,'__esModule',{value:true});});},{"@angular/common":2,"@angular/core":4,"rxjs":120,"rxjs/operators":318}],2:[function(require,module,exports){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('@angular/core')):typeof define==='function'&&define.amd?define('@angular/common',['exports','@angular/core'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.common={}),global.ng.core));})(this,function(exports,i0){'use strict';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _DOM=null;function getDOM(){return _DOM;}function setDOM(adapter){_DOM=adapter;}function setRootDomAdapter(adapter){if(!_DOM){_DOM=adapter;}}/* tslint:disable:requireParameterType */ /**
     * Provides DOM operations in an environment-agnostic way.
     *
     * @security Tread carefully! Interacting with the DOM directly is dangerous and
     * can introduce XSS risks.
     */var DomAdapter=/** @class */function(){function DomAdapter(){}return DomAdapter;}();/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics2=function extendStatics(d,b){_extendStatics2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics2(d,b);};function __extends(d,b){_extendStatics2(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign2=function __assign(){_assign2=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign2.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A DI Token representing the main rendering context. In a browser this is the DOM Document.
     *
     * Note: Document might not be available in the Application Context when Application and Rendering
     * Contexts are not the same (e.g. when running the application in a Web Worker).
     *
     * @publicApi
     */var DOCUMENT=new i0.InjectionToken('DocumentToken');/**
     * This class should not be used directly by an application developer. Instead, use
     * {@link Location}.
     *
     * `PlatformLocation` encapsulates all calls to DOM APIs, which allows the Router to be
     * platform-agnostic.
     * This means that we can have different implementation of `PlatformLocation` for the different
     * platforms that Angular supports. For example, `@angular/platform-browser` provides an
     * implementation specific to the browser environment, while `@angular/platform-server` provides
     * one suitable for use with server-side rendering.
     *
     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}
     * when they need to interact with the DOM APIs like pushState, popState, etc.
     *
     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly
     * by the {@link Router} in order to navigate between routes. Since all interactions between {@link
     * Router} /
     * {@link Location} / {@link LocationStrategy} and DOM APIs flow through the `PlatformLocation`
     * class, they are all platform-agnostic.
     *
     * @publicApi
     */var PlatformLocation=/** @class */function(){function PlatformLocation(){}PlatformLocation.ɵprov=i0.ɵɵdefineInjectable({factory:useBrowserPlatformLocation,token:PlatformLocation,providedIn:"platform"});PlatformLocation=__decorate([i0.Injectable({providedIn:'platform',// See #23917
useFactory:useBrowserPlatformLocation})],PlatformLocation);return PlatformLocation;}();function useBrowserPlatformLocation(){return i0.ɵɵinject(BrowserPlatformLocation);}/**
     * @description
     * Indicates when a location is initialized.
     *
     * @publicApi
     */var LOCATION_INITIALIZED=new i0.InjectionToken('Location Initialized');/**
     * `PlatformLocation` encapsulates all of the direct calls to platform APIs.
     * This class should not be used directly by an application developer. Instead, use
     * {@link Location}.
     */var BrowserPlatformLocation=/** @class */function(_super){__extends(BrowserPlatformLocation,_super);function BrowserPlatformLocation(_doc){var _this=_super.call(this)||this;_this._doc=_doc;_this._init();return _this;}// This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it
/** @internal */BrowserPlatformLocation.prototype._init=function(){this.location=getDOM().getLocation();this._history=getDOM().getHistory();};BrowserPlatformLocation.prototype.getBaseHrefFromDOM=function(){return getDOM().getBaseHref(this._doc);};BrowserPlatformLocation.prototype.onPopState=function(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('popstate',fn,false);};BrowserPlatformLocation.prototype.onHashChange=function(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('hashchange',fn,false);};Object.defineProperty(BrowserPlatformLocation.prototype,"href",{get:function get(){return this.location.href;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"protocol",{get:function get(){return this.location.protocol;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"hostname",{get:function get(){return this.location.hostname;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"port",{get:function get(){return this.location.port;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"pathname",{get:function get(){return this.location.pathname;},set:function set(newPath){this.location.pathname=newPath;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"search",{get:function get(){return this.location.search;},enumerable:true,configurable:true});Object.defineProperty(BrowserPlatformLocation.prototype,"hash",{get:function get(){return this.location.hash;},enumerable:true,configurable:true});BrowserPlatformLocation.prototype.pushState=function(state,title,url){if(supportsState()){this._history.pushState(state,title,url);}else{this.location.hash=url;}};BrowserPlatformLocation.prototype.replaceState=function(state,title,url){if(supportsState()){this._history.replaceState(state,title,url);}else{this.location.hash=url;}};BrowserPlatformLocation.prototype.forward=function(){this._history.forward();};BrowserPlatformLocation.prototype.back=function(){this._history.back();};BrowserPlatformLocation.prototype.getState=function(){return this._history.state;};BrowserPlatformLocation.ɵprov=i0.ɵɵdefineInjectable({factory:createBrowserPlatformLocation,token:BrowserPlatformLocation,providedIn:"platform"});BrowserPlatformLocation=__decorate([i0.Injectable({providedIn:'platform',// See #23917
useFactory:createBrowserPlatformLocation}),__param(0,i0.Inject(DOCUMENT)),__metadata("design:paramtypes",[Object])],BrowserPlatformLocation);return BrowserPlatformLocation;}(PlatformLocation);function supportsState(){return!!window.history.pushState;}function createBrowserPlatformLocation(){return new BrowserPlatformLocation(i0.ɵɵinject(DOCUMENT));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Joins two parts of a URL with a slash if needed.
     *
     * @param start  URL string
     * @param end    URL string
     *
     *
     * @returns The joined URL string.
     */function joinWithSlash(start,end){if(start.length==0){return end;}if(end.length==0){return start;}var slashes=0;if(start.endsWith('/')){slashes++;}if(end.startsWith('/')){slashes++;}if(slashes==2){return start+end.substring(1);}if(slashes==1){return start+end;}return start+'/'+end;}/**
     * Removes a trailing slash from a URL string if needed.
     * Looks for the first occurrence of either `#`, `?`, or the end of the
     * line as `/` characters and removes the trailing slash if one exists.
     *
     * @param url URL string.
     *
     * @returns The URL string, modified if needed.
     */function stripTrailingSlash(url){var match=url.match(/#|\?|$/);var pathEndIdx=match&&match.index||url.length;var droppedSlashIdx=pathEndIdx-(url[pathEndIdx-1]==='/'?1:0);return url.slice(0,droppedSlashIdx)+url.slice(pathEndIdx);}/**
     * Normalizes URL parameters by prepending with `?` if needed.
     *
     * @param  params String of URL parameters.
     *
     * @returns The normalized URL parameters string.
     */function normalizeQueryParams(params){return params&&params[0]!=='?'?'?'+params:params;}/**
     * Enables the `Location` service to read route state from the browser's URL.
     * Angular provides two strategies:
     * `HashLocationStrategy` and `PathLocationStrategy`.
     *
     * Applications should use the `Router` or `Location` services to
     * interact with application route state.
     *
     * For instance, `HashLocationStrategy` produces URLs like
     * <code class="no-auto-link">http://example.com#/foo</code>,
     * and `PathLocationStrategy` produces
     * <code class="no-auto-link">http://example.com/foo</code> as an equivalent URL.
     *
     * See these two classes for more.
     *
     * @publicApi
     */var LocationStrategy=/** @class */function(){function LocationStrategy(){}LocationStrategy.ɵprov=i0.ɵɵdefineInjectable({factory:provideLocationStrategy,token:LocationStrategy,providedIn:"root"});LocationStrategy=__decorate([i0.Injectable({providedIn:'root',useFactory:provideLocationStrategy})],LocationStrategy);return LocationStrategy;}();function provideLocationStrategy(platformLocation){// See #23917
var location=i0.ɵɵinject(DOCUMENT).location;return new PathLocationStrategy(i0.ɵɵinject(PlatformLocation),location&&location.origin||'');}/**
     * A predefined [DI token](guide/glossary#di-token) for the base href
     * to be used with the `PathLocationStrategy`.
     * The base href is the URL prefix that should be preserved when generating
     * and recognizing URLs.
     *
     * @usageNotes
     *
     * The following example shows how to use this token to configure the root app injector
     * with a base href value, so that the DI framework can supply the dependency anywhere in the app.
     *
     * ```typescript
     * import {Component, NgModule} from '@angular/core';
     * import {APP_BASE_HREF} from '@angular/common';
     *
     * @NgModule({
     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
     * })
     * class AppModule {}
     * ```
     *
     * @publicApi
     */var APP_BASE_HREF=new i0.InjectionToken('appBaseHref');/**
     * @description
     * A {@link LocationStrategy} used to configure the {@link Location} service to
     * represent its state in the
     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the
     * browser's URL.
     *
     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}
     * or add a base element to the document. This URL prefix that will be preserved
     * when generating and recognizing URLs.
     *
     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call
     * `location.go('/foo')`, the browser's URL will become
     * `example.com/my/app/foo`.
     *
     * Similarly, if you add `<base href='/my/app'/>` to the document and call
     * `location.go('/foo')`, the browser's URL will become
     * `example.com/my/app/foo`.
     *
     * @usageNotes
     *
     * ### Example
     *
     * {@example common/location/ts/path_location_component.ts region='LocationComponent'}
     *
     * @publicApi
     */var PathLocationStrategy=/** @class */function(_super){__extends(PathLocationStrategy,_super);function PathLocationStrategy(_platformLocation,href){var _this=_super.call(this)||this;_this._platformLocation=_platformLocation;if(href==null){href=_this._platformLocation.getBaseHrefFromDOM();}if(href==null){throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");}_this._baseHref=href;return _this;}PathLocationStrategy.prototype.onPopState=function(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);};PathLocationStrategy.prototype.getBaseHref=function(){return this._baseHref;};PathLocationStrategy.prototype.prepareExternalUrl=function(internal){return joinWithSlash(this._baseHref,internal);};PathLocationStrategy.prototype.path=function(includeHash){if(includeHash===void 0){includeHash=false;}var pathname=this._platformLocation.pathname+normalizeQueryParams(this._platformLocation.search);var hash=this._platformLocation.hash;return hash&&includeHash?""+pathname+hash:pathname;};PathLocationStrategy.prototype.pushState=function(state,title,url,queryParams){var externalUrl=this.prepareExternalUrl(url+normalizeQueryParams(queryParams));this._platformLocation.pushState(state,title,externalUrl);};PathLocationStrategy.prototype.replaceState=function(state,title,url,queryParams){var externalUrl=this.prepareExternalUrl(url+normalizeQueryParams(queryParams));this._platformLocation.replaceState(state,title,externalUrl);};PathLocationStrategy.prototype.forward=function(){this._platformLocation.forward();};PathLocationStrategy.prototype.back=function(){this._platformLocation.back();};PathLocationStrategy=__decorate([i0.Injectable(),__param(1,i0.Optional()),__param(1,i0.Inject(APP_BASE_HREF)),__metadata("design:paramtypes",[PlatformLocation,String])],PathLocationStrategy);return PathLocationStrategy;}(LocationStrategy);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     * A {@link LocationStrategy} used to configure the {@link Location} service to
     * represent its state in the
     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)
     * of the browser's URL.
     *
     * For instance, if you call `location.go('/foo')`, the browser's URL will become
     * `example.com#/foo`.
     *
     * @usageNotes
     *
     * ### Example
     *
     * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}
     *
     * @publicApi
     */var HashLocationStrategy=/** @class */function(_super){__extends(HashLocationStrategy,_super);function HashLocationStrategy(_platformLocation,_baseHref){var _this=_super.call(this)||this;_this._platformLocation=_platformLocation;_this._baseHref='';if(_baseHref!=null){_this._baseHref=_baseHref;}return _this;}HashLocationStrategy.prototype.onPopState=function(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);};HashLocationStrategy.prototype.getBaseHref=function(){return this._baseHref;};HashLocationStrategy.prototype.path=function(includeHash){if(includeHash===void 0){includeHash=false;}// the hash value is always prefixed with a `#`
// and if it is empty then it will stay empty
var path=this._platformLocation.hash;if(path==null)path='#';return path.length>0?path.substring(1):path;};HashLocationStrategy.prototype.prepareExternalUrl=function(internal){var url=joinWithSlash(this._baseHref,internal);return url.length>0?'#'+url:url;};HashLocationStrategy.prototype.pushState=function(state,title,path,queryParams){var url=this.prepareExternalUrl(path+normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.pushState(state,title,url);};HashLocationStrategy.prototype.replaceState=function(state,title,path,queryParams){var url=this.prepareExternalUrl(path+normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.replaceState(state,title,url);};HashLocationStrategy.prototype.forward=function(){this._platformLocation.forward();};HashLocationStrategy.prototype.back=function(){this._platformLocation.back();};HashLocationStrategy=__decorate([i0.Injectable(),__param(1,i0.Optional()),__param(1,i0.Inject(APP_BASE_HREF)),__metadata("design:paramtypes",[PlatformLocation,String])],HashLocationStrategy);return HashLocationStrategy;}(LocationStrategy);/**
     * @description
     *
     * A service that applications can use to interact with a browser's URL.
     *
     * Depending on the `LocationStrategy` used, `Location` persists
     * to the URL's path or the URL's hash segment.
     *
     * @usageNotes
     *
     * It's better to use the `Router#navigate` service to trigger route changes. Use
     * `Location` only if you need to interact with or create normalized URLs outside of
     * routing.
     *
     * `Location` is responsible for normalizing the URL against the application's base href.
     * A normalized URL is absolute from the URL host, includes the application's base href, and has no
     * trailing slash:
     * - `/my/app/user/123` is normalized
     * - `my/app/user/123` **is not** normalized
     * - `/my/app/user/123/` **is not** normalized
     *
     * ### Example
     *
     * <code-example path='common/location/ts/path_location_component.ts'
     * region='LocationComponent'></code-example>
     *
     * @publicApi
     */var Location=/** @class */function(){function Location(platformStrategy,platformLocation){var _this=this;/** @internal */this._subject=new i0.EventEmitter();/** @internal */this._urlChangeListeners=[];this._platformStrategy=platformStrategy;var browserBaseHref=this._platformStrategy.getBaseHref();this._platformLocation=platformLocation;this._baseHref=stripTrailingSlash(_stripIndexHtml(browserBaseHref));this._platformStrategy.onPopState(function(ev){_this._subject.emit({'url':_this.path(true),'pop':true,'state':ev.state,'type':ev.type});});}Location_1=Location;/**
         * Normalizes the URL path for this location.
         *
         * @param includeHash True to include an anchor fragment in the path.
         *
         * @returns The normalized URL path.
         */ // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is
// removed.
Location.prototype.path=function(includeHash){if(includeHash===void 0){includeHash=false;}return this.normalize(this._platformStrategy.path(includeHash));};/**
         * Reports the current state of the location history.
         * @returns The current value of the `history.state` object.
         */Location.prototype.getState=function(){return this._platformLocation.getState();};/**
         * Normalizes the given path and compares to the current normalized path.
         *
         * @param path The given URL path.
         * @param query Query parameters.
         *
         * @returns True if the given URL path is equal to the current normalized path, false
         * otherwise.
         */Location.prototype.isCurrentPathEqualTo=function(path,query){if(query===void 0){query='';}return this.path()==this.normalize(path+normalizeQueryParams(query));};/**
         * Normalizes a URL path by stripping any trailing slashes.
         *
         * @param url String representing a URL.
         *
         * @returns The normalized URL string.
         */Location.prototype.normalize=function(url){return Location_1.stripTrailingSlash(_stripBaseHref(this._baseHref,_stripIndexHtml(url)));};/**
         * Normalizes an external URL path.
         * If the given URL doesn't begin with a leading slash (`'/'`), adds one
         * before normalizing. Adds a hash if `HashLocationStrategy` is
         * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
         *
         * @param url String representing a URL.
         *
         * @returns  A normalized platform-specific URL.
         */Location.prototype.prepareExternalUrl=function(url){if(url&&url[0]!=='/'){url='/'+url;}return this._platformStrategy.prepareExternalUrl(url);};// TODO: rename this method to pushState
/**
         * Changes the browser's URL to a normalized version of a given URL, and pushes a
         * new item onto the platform's history.
         *
         * @param path  URL path to normalize.
         * @param query Query parameters.
         * @param state Location history state.
         *
         */Location.prototype.go=function(path,query,state){if(query===void 0){query='';}if(state===void 0){state=null;}this._platformStrategy.pushState(state,'',path,query);this._notifyUrlChangeListeners(this.prepareExternalUrl(path+normalizeQueryParams(query)),state);};/**
         * Changes the browser's URL to a normalized version of the given URL, and replaces
         * the top item on the platform's history stack.
         *
         * @param path  URL path to normalize.
         * @param query Query parameters.
         * @param state Location history state.
         */Location.prototype.replaceState=function(path,query,state){if(query===void 0){query='';}if(state===void 0){state=null;}this._platformStrategy.replaceState(state,'',path,query);this._notifyUrlChangeListeners(this.prepareExternalUrl(path+normalizeQueryParams(query)),state);};/**
         * Navigates forward in the platform's history.
         */Location.prototype.forward=function(){this._platformStrategy.forward();};/**
         * Navigates back in the platform's history.
         */Location.prototype.back=function(){this._platformStrategy.back();};/**
         * Registers a URL change listener. Use to catch updates performed by the Angular
         * framework that are not detectible through "popstate" or "hashchange" events.
         *
         * @param fn The change handler function, which take a URL and a location history state.
         */Location.prototype.onUrlChange=function(fn){var _this=this;this._urlChangeListeners.push(fn);this.subscribe(function(v){_this._notifyUrlChangeListeners(v.url,v.state);});};/** @internal */Location.prototype._notifyUrlChangeListeners=function(url,state){if(url===void 0){url='';}this._urlChangeListeners.forEach(function(fn){return fn(url,state);});};/**
         * Subscribes to the platform's `popState` events.
         *
         * @param value Event that is triggered when the state history changes.
         * @param exception The exception to throw.
         *
         * @returns Subscribed events.
         */Location.prototype.subscribe=function(onNext,onThrow,onReturn){return this._subject.subscribe({next:onNext,error:onThrow,complete:onReturn});};var Location_1;/**
         * Normalizes URL parameters by prepending with `?` if needed.
         *
         * @param  params String of URL parameters.
         *
         * @returns The normalized URL parameters string.
         */Location.normalizeQueryParams=normalizeQueryParams;/**
         * Joins two parts of a URL with a slash if needed.
         *
         * @param start  URL string
         * @param end    URL string
         *
         *
         * @returns The joined URL string.
         */Location.joinWithSlash=joinWithSlash;/**
         * Removes a trailing slash from a URL string if needed.
         * Looks for the first occurrence of either `#`, `?`, or the end of the
         * line as `/` characters and removes the trailing slash if one exists.
         *
         * @param url URL string.
         *
         * @returns The URL string, modified if needed.
         */Location.stripTrailingSlash=stripTrailingSlash;Location.ɵprov=i0.ɵɵdefineInjectable({factory:createLocation,token:Location,providedIn:"root"});Location=Location_1=__decorate([i0.Injectable({providedIn:'root',// See #23917
useFactory:createLocation}),__metadata("design:paramtypes",[LocationStrategy,PlatformLocation])],Location);return Location;}();function createLocation(){return new Location(i0.ɵɵinject(LocationStrategy),i0.ɵɵinject(PlatformLocation));}function _stripBaseHref(baseHref,url){return baseHref&&url.startsWith(baseHref)?url.substring(baseHref.length):url;}function _stripIndexHtml(url){return url.replace(/\/index.html$/,'');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /** @internal */var CURRENCIES_EN={'ADP':[undefined,undefined,0],'AFN':[undefined,undefined,0],'ALL':[undefined,undefined,0],'AMD':[undefined,undefined,2],'AOA':[undefined,'Kz'],'ARS':[undefined,'$'],'AUD':['A$','$'],'BAM':[undefined,'KM'],'BBD':[undefined,'$'],'BDT':[undefined,'৳'],'BHD':[undefined,undefined,3],'BIF':[undefined,undefined,0],'BMD':[undefined,'$'],'BND':[undefined,'$'],'BOB':[undefined,'Bs'],'BRL':['R$'],'BSD':[undefined,'$'],'BWP':[undefined,'P'],'BYN':[undefined,'р.',2],'BYR':[undefined,undefined,0],'BZD':[undefined,'$'],'CAD':['CA$','$',2],'CHF':[undefined,undefined,2],'CLF':[undefined,undefined,4],'CLP':[undefined,'$',0],'CNY':['CN¥','¥'],'COP':[undefined,'$',2],'CRC':[undefined,'₡',2],'CUC':[undefined,'$'],'CUP':[undefined,'$'],'CZK':[undefined,'Kč',2],'DJF':[undefined,undefined,0],'DKK':[undefined,'kr',2],'DOP':[undefined,'$'],'EGP':[undefined,'E£'],'ESP':[undefined,'₧',0],'EUR':['€'],'FJD':[undefined,'$'],'FKP':[undefined,'£'],'GBP':['£'],'GEL':[undefined,'₾'],'GIP':[undefined,'£'],'GNF':[undefined,'FG',0],'GTQ':[undefined,'Q'],'GYD':[undefined,'$',2],'HKD':['HK$','$'],'HNL':[undefined,'L'],'HRK':[undefined,'kn'],'HUF':[undefined,'Ft',2],'IDR':[undefined,'Rp',2],'ILS':['₪'],'INR':['₹'],'IQD':[undefined,undefined,0],'IRR':[undefined,undefined,0],'ISK':[undefined,'kr',0],'ITL':[undefined,undefined,0],'JMD':[undefined,'$'],'JOD':[undefined,undefined,3],'JPY':['¥',undefined,0],'KHR':[undefined,'៛'],'KMF':[undefined,'CF',0],'KPW':[undefined,'₩',0],'KRW':['₩',undefined,0],'KWD':[undefined,undefined,3],'KYD':[undefined,'$'],'KZT':[undefined,'₸'],'LAK':[undefined,'₭',0],'LBP':[undefined,'L£',0],'LKR':[undefined,'Rs'],'LRD':[undefined,'$'],'LTL':[undefined,'Lt'],'LUF':[undefined,undefined,0],'LVL':[undefined,'Ls'],'LYD':[undefined,undefined,3],'MGA':[undefined,'Ar',0],'MGF':[undefined,undefined,0],'MMK':[undefined,'K',0],'MNT':[undefined,'₮',2],'MRO':[undefined,undefined,0],'MUR':[undefined,'Rs',2],'MXN':['MX$','$'],'MYR':[undefined,'RM'],'NAD':[undefined,'$'],'NGN':[undefined,'₦'],'NIO':[undefined,'C$'],'NOK':[undefined,'kr',2],'NPR':[undefined,'Rs'],'NZD':['NZ$','$'],'OMR':[undefined,undefined,3],'PHP':[undefined,'₱'],'PKR':[undefined,'Rs',2],'PLN':[undefined,'zł'],'PYG':[undefined,'₲',0],'RON':[undefined,'lei'],'RSD':[undefined,undefined,0],'RUB':[undefined,'₽'],'RUR':[undefined,'р.'],'RWF':[undefined,'RF',0],'SBD':[undefined,'$'],'SEK':[undefined,'kr',2],'SGD':[undefined,'$'],'SHP':[undefined,'£'],'SLL':[undefined,undefined,0],'SOS':[undefined,undefined,0],'SRD':[undefined,'$'],'SSP':[undefined,'£'],'STD':[undefined,undefined,0],'STN':[undefined,'Db'],'SYP':[undefined,'£',0],'THB':[undefined,'฿'],'TMM':[undefined,undefined,0],'TND':[undefined,undefined,3],'TOP':[undefined,'T$'],'TRL':[undefined,undefined,0],'TRY':[undefined,'₺'],'TTD':[undefined,'$'],'TWD':['NT$','$',2],'TZS':[undefined,undefined,2],'UAH':[undefined,'₴'],'UGX':[undefined,undefined,0],'USD':['$'],'UYI':[undefined,undefined,0],'UYU':[undefined,'$'],'UYW':[undefined,undefined,4],'UZS':[undefined,undefined,2],'VEF':[undefined,'Bs',2],'VND':['₫',undefined,0],'VUV':[undefined,undefined,0],'XAF':['FCFA',undefined,0],'XCD':['EC$','$'],'XOF':['CFA',undefined,0],'XPF':['CFPF',undefined,0],'XXX':['¤'],'YER':[undefined,undefined,0],'ZAR':[undefined,'R'],'ZMK':[undefined,undefined,0],'ZMW':[undefined,'ZK'],'ZWD':[undefined,undefined,0]};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(NumberFormatStyle){NumberFormatStyle[NumberFormatStyle["Decimal"]=0]="Decimal";NumberFormatStyle[NumberFormatStyle["Percent"]=1]="Percent";NumberFormatStyle[NumberFormatStyle["Currency"]=2]="Currency";NumberFormatStyle[NumberFormatStyle["Scientific"]=3]="Scientific";})(exports.NumberFormatStyle||(exports.NumberFormatStyle={}));(function(Plural){Plural[Plural["Zero"]=0]="Zero";Plural[Plural["One"]=1]="One";Plural[Plural["Two"]=2]="Two";Plural[Plural["Few"]=3]="Few";Plural[Plural["Many"]=4]="Many";Plural[Plural["Other"]=5]="Other";})(exports.Plural||(exports.Plural={}));(function(FormStyle){FormStyle[FormStyle["Format"]=0]="Format";FormStyle[FormStyle["Standalone"]=1]="Standalone";})(exports.FormStyle||(exports.FormStyle={}));(function(TranslationWidth){/** 1 character for `en-US`. For example: 'S' */TranslationWidth[TranslationWidth["Narrow"]=0]="Narrow";/** 3 characters for `en-US`. For example: 'Sun' */TranslationWidth[TranslationWidth["Abbreviated"]=1]="Abbreviated";/** Full length for `en-US`. For example: "Sunday" */TranslationWidth[TranslationWidth["Wide"]=2]="Wide";/** 2 characters for `en-US`, For example: "Su" */TranslationWidth[TranslationWidth["Short"]=3]="Short";})(exports.TranslationWidth||(exports.TranslationWidth={}));(function(FormatWidth){/**
         * For `en-US`, 'M/d/yy, h:mm a'`
         * (Example: `6/15/15, 9:03 AM`)
         */FormatWidth[FormatWidth["Short"]=0]="Short";/**
         * For `en-US`, `'MMM d, y, h:mm:ss a'`
         * (Example: `Jun 15, 2015, 9:03:01 AM`)
         */FormatWidth[FormatWidth["Medium"]=1]="Medium";/**
         * For `en-US`, `'MMMM d, y, h:mm:ss a z'`
         * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)
         */FormatWidth[FormatWidth["Long"]=2]="Long";/**
         * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`
         * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)
         */FormatWidth[FormatWidth["Full"]=3]="Full";})(exports.FormatWidth||(exports.FormatWidth={}));(function(NumberSymbol){/**
         * Decimal separator.
         * For `en-US`, the dot character.
         * Example : 2,345`.`67
         */NumberSymbol[NumberSymbol["Decimal"]=0]="Decimal";/**
         * Grouping separator, typically for thousands.
         * For `en-US`, the comma character.
         * Example: 2`,`345.67
         */NumberSymbol[NumberSymbol["Group"]=1]="Group";/**
         * List-item separator.
         * Example: "one, two, and three"
         */NumberSymbol[NumberSymbol["List"]=2]="List";/**
         * Sign for percentage (out of 100).
         * Example: 23.4%
         */NumberSymbol[NumberSymbol["PercentSign"]=3]="PercentSign";/**
         * Sign for positive numbers.
         * Example: +23
         */NumberSymbol[NumberSymbol["PlusSign"]=4]="PlusSign";/**
         * Sign for negative numbers.
         * Example: -23
         */NumberSymbol[NumberSymbol["MinusSign"]=5]="MinusSign";/**
         * Computer notation for exponential value (n times a power of 10).
         * Example: 1.2E3
         */NumberSymbol[NumberSymbol["Exponential"]=6]="Exponential";/**
         * Human-readable format of exponential.
         * Example: 1.2x103
         */NumberSymbol[NumberSymbol["SuperscriptingExponent"]=7]="SuperscriptingExponent";/**
         * Sign for permille (out of 1000).
         * Example: 23.4‰
         */NumberSymbol[NumberSymbol["PerMille"]=8]="PerMille";/**
         * Infinity, can be used with plus and minus.
         * Example: ∞, +∞, -∞
         */NumberSymbol[NumberSymbol["Infinity"]=9]="Infinity";/**
         * Not a number.
         * Example: NaN
         */NumberSymbol[NumberSymbol["NaN"]=10]="NaN";/**
         * Symbol used between time units.
         * Example: 10:52
         */NumberSymbol[NumberSymbol["TimeSeparator"]=11]="TimeSeparator";/**
         * Decimal separator for currency values (fallback to `Decimal`).
         * Example: $2,345.67
         */NumberSymbol[NumberSymbol["CurrencyDecimal"]=12]="CurrencyDecimal";/**
         * Group separator for currency values (fallback to `Group`).
         * Example: $2,345.67
         */NumberSymbol[NumberSymbol["CurrencyGroup"]=13]="CurrencyGroup";})(exports.NumberSymbol||(exports.NumberSymbol={}));(function(WeekDay){WeekDay[WeekDay["Sunday"]=0]="Sunday";WeekDay[WeekDay["Monday"]=1]="Monday";WeekDay[WeekDay["Tuesday"]=2]="Tuesday";WeekDay[WeekDay["Wednesday"]=3]="Wednesday";WeekDay[WeekDay["Thursday"]=4]="Thursday";WeekDay[WeekDay["Friday"]=5]="Friday";WeekDay[WeekDay["Saturday"]=6]="Saturday";})(exports.WeekDay||(exports.WeekDay={}));/**
     * Retrieves the locale ID from the currently loaded locale.
     * The loaded locale could be, for example, a global one rather than a regional one.
     * @param locale A locale code, such as `fr-FR`.
     * @returns The locale code. For example, `fr`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleId(locale){return i0.ɵfindLocaleData(locale)[i0.ɵLocaleDataIndex.LocaleId];}/**
     * Retrieves day period strings for the given locale.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param formStyle The required grammatical form.
     * @param width The required character width.
     * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleDayPeriods(locale,formStyle,width){var data=i0.ɵfindLocaleData(locale);var amPmData=[data[i0.ɵLocaleDataIndex.DayPeriodsFormat],data[i0.ɵLocaleDataIndex.DayPeriodsStandalone]];var amPm=getLastDefinedValue(amPmData,formStyle);return getLastDefinedValue(amPm,width);}/**
     * Retrieves days of the week for the given locale, using the Gregorian calendar.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param formStyle The required grammatical form.
     * @param width The required character width.
     * @returns An array of localized name strings.
     * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleDayNames(locale,formStyle,width){var data=i0.ɵfindLocaleData(locale);var daysData=[data[i0.ɵLocaleDataIndex.DaysFormat],data[i0.ɵLocaleDataIndex.DaysStandalone]];var days=getLastDefinedValue(daysData,formStyle);return getLastDefinedValue(days,width);}/**
     * Retrieves months of the year for the given locale, using the Gregorian calendar.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param formStyle The required grammatical form.
     * @param width The required character width.
     * @returns An array of localized name strings.
     * For example,  `[January, February, ...]` for `en-US`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleMonthNames(locale,formStyle,width){var data=i0.ɵfindLocaleData(locale);var monthsData=[data[i0.ɵLocaleDataIndex.MonthsFormat],data[i0.ɵLocaleDataIndex.MonthsStandalone]];var months=getLastDefinedValue(monthsData,formStyle);return getLastDefinedValue(months,width);}/**
     * Retrieves Gregorian-calendar eras for the given locale.
     * @param locale A locale code for the locale format rules to use.
     * @param formStyle The required grammatical form.
     * @param width The required character width.

     * @returns An array of localized era strings.
     * For example, `[AD, BC]` for `en-US`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleEraNames(locale,width){var data=i0.ɵfindLocaleData(locale);var erasData=data[i0.ɵLocaleDataIndex.Eras];return getLastDefinedValue(erasData,width);}/**
     * Retrieves the first day of the week for the given locale.
     *
     * @param locale A locale code for the locale format rules to use.
     * @returns A day index number, using the 0-based week-day index for `en-US`
     * (Sunday = 0, Monday = 1, ...).
     * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleFirstDayOfWeek(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.FirstDayOfWeek];}/**
     * Range of week days that are considered the week-end for the given locale.
     *
     * @param locale A locale code for the locale format rules to use.
     * @returns The range of day values, `[startDay, endDay]`.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleWeekEndRange(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.WeekendRange];}/**
     * Retrieves a localized date-value formating string.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param width The format type.
     * @returns The localized formating string.
     * @see `FormatWidth`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleDateFormat(locale,width){var data=i0.ɵfindLocaleData(locale);return getLastDefinedValue(data[i0.ɵLocaleDataIndex.DateFormat],width);}/**
     * Retrieves a localized time-value formatting string.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param width The format type.
     * @returns The localized formatting string.
     * @see `FormatWidth`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)

     * @publicApi
     */function getLocaleTimeFormat(locale,width){var data=i0.ɵfindLocaleData(locale);return getLastDefinedValue(data[i0.ɵLocaleDataIndex.TimeFormat],width);}/**
     * Retrieves a localized date-time formatting string.
     *
     * @param locale A locale code for the locale format rules to use.
     * @param width The format type.
     * @returns The localized formatting string.
     * @see `FormatWidth`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleDateTimeFormat(locale,width){var data=i0.ɵfindLocaleData(locale);var dateTimeFormatData=data[i0.ɵLocaleDataIndex.DateTimeFormat];return getLastDefinedValue(dateTimeFormatData,width);}/**
     * Retrieves a localized number symbol that can be used to replace placeholders in number formats.
     * @param locale The locale code.
     * @param symbol The symbol to localize.
     * @returns The character for the localized symbol.
     * @see `NumberSymbol`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleNumberSymbol(locale,symbol){var data=i0.ɵfindLocaleData(locale);var res=data[i0.ɵLocaleDataIndex.NumberSymbols][symbol];if(typeof res==='undefined'){if(symbol===exports.NumberSymbol.CurrencyDecimal){return data[i0.ɵLocaleDataIndex.NumberSymbols][exports.NumberSymbol.Decimal];}else if(symbol===exports.NumberSymbol.CurrencyGroup){return data[i0.ɵLocaleDataIndex.NumberSymbols][exports.NumberSymbol.Group];}}return res;}/**
     * Retrieves a number format for a given locale.
     *
     * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`
     * when used to format the number 12345.678 could result in "12'345,678". That would happen if the
     * grouping separator for your language is an apostrophe, and the decimal separator is a comma.
     *
     * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders
     * that stand for the decimal separator, and so on, and are NOT real characters.
     * You must NOT "translate" the placeholders. For example, don't change `.` to `,` even though in
     * your language the decimal point is written with a comma. The symbols should be replaced by the
     * local equivalents, using the appropriate `NumberSymbol` for your language.
     *
     * Here are the special characters used in number patterns:
     *
     * | Symbol | Meaning |
     * |--------|---------|
     * | . | Replaced automatically by the character used for the decimal point. |
     * | , | Replaced by the "grouping" (thousands) separator. |
     * | 0 | Replaced by a digit (or zero if there aren't enough digits). |
     * | # | Replaced by a digit (or nothing if there aren't enough). |
     * | ¤ | Replaced by a currency symbol, such as $ or USD. |
     * | % | Marks a percent format. The % symbol may change position, but must be retained. |
     * | E | Marks a scientific format. The E symbol may change position, but must be retained. |
     * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |
     *
     * @param locale A locale code for the locale format rules to use.
     * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)
     * @returns The localized format string.
     * @see `NumberFormatStyle`
     * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleNumberFormat(locale,type){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.NumberFormats][type];}/**
     * Retrieves the symbol used to represent the currency for the main country
     * corresponding to a given locale. For example, '$' for `en-US`.
     *
     * @param locale A locale code for the locale format rules to use.
     * @returns The localized symbol character,
     * or `null` if the main country cannot be determined.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleCurrencySymbol(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.CurrencySymbol]||null;}/**
     * Retrieves the name of the currency for the main country corresponding
     * to a given locale. For example, 'US Dollar' for `en-US`.
     * @param locale A locale code for the locale format rules to use.
     * @returns The currency name,
     * or `null` if the main country cannot be determined.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleCurrencyName(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.CurrencyName]||null;}/**
     * Retrieves the default currency code for the given locale.
     *
     * The default is defined as the first currency which is still in use.
     *
     * @param locale The code of the locale whose currency code we want.
     * @returns The code of the default currency for the given locale.
     *
     * @publicApi
     */function getLocaleCurrencyCode(locale){return i0.ɵgetLocaleCurrencyCode(locale);}/**
     * Retrieves the currency values for a given locale.
     * @param locale A locale code for the locale format rules to use.
     * @returns The currency values.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     */function getLocaleCurrencies(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.Currencies];}/**
     * @alias core/ɵgetLocalePluralCase
     * @publicApi
     */var getLocalePluralCase=i0.ɵgetLocalePluralCase;function checkFullData(data){if(!data[i0.ɵLocaleDataIndex.ExtraData]){throw new Error("Missing extra locale data for the locale \""+data[i0.ɵLocaleDataIndex.LocaleId]+"\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.");}}/**
     * Retrieves locale-specific rules used to determine which day period to use
     * when more than one period is defined for a locale.
     *
     * There is a rule for each defined day period. The
     * first rule is applied to the first day period and so on.
     * Fall back to AM/PM when no rules are available.
     *
     * A rule can specify a period as time range, or as a single time value.
     *
     * This functionality is only available when you have loaded the full locale data.
     * See the ["I18n guide"](guide/i18n#i18n-pipes).
     *
     * @param locale A locale code for the locale format rules to use.
     * @returns The rules for the locale, a single time value or array of *from-time, to-time*,
     * or null if no periods are available.
     *
     * @see `getLocaleExtraDayPeriods()`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleExtraDayPeriodRules(locale){var data=i0.ɵfindLocaleData(locale);checkFullData(data);var rules=data[i0.ɵLocaleDataIndex.ExtraData][2/* ExtraDayPeriodsRules */]||[];return rules.map(function(rule){if(typeof rule==='string'){return extractTime(rule);}return[extractTime(rule[0]),extractTime(rule[1])];});}/**
     * Retrieves locale-specific day periods, which indicate roughly how a day is broken up
     * in different languages.
     * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.
     *
     * This functionality is only available when you have loaded the full locale data.
     * See the ["I18n guide"](guide/i18n#i18n-pipes).
     *
     * @param locale A locale code for the locale format rules to use.
     * @param formStyle The required grammatical form.
     * @param width The required character width.
     * @returns The translated day-period strings.
     * @see `getLocaleExtraDayPeriodRules()`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLocaleExtraDayPeriods(locale,formStyle,width){var data=i0.ɵfindLocaleData(locale);checkFullData(data);var dayPeriodsData=[data[i0.ɵLocaleDataIndex.ExtraData][0/* ExtraDayPeriodFormats */],data[i0.ɵLocaleDataIndex.ExtraData][1/* ExtraDayPeriodStandalone */]];var dayPeriods=getLastDefinedValue(dayPeriodsData,formStyle)||[];return getLastDefinedValue(dayPeriods,width)||[];}/**
     * Retrieves the writing direction of a specified locale
     * @param locale A locale code for the locale format rules to use.
     * @publicApi
     * @returns 'rtl' or 'ltr'
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     */function getLocaleDirection(locale){var data=i0.ɵfindLocaleData(locale);return data[i0.ɵLocaleDataIndex.Directionality];}/**
     * Retrieves the first value that is defined in an array, going backwards from an index position.
     *
     * To avoid repeating the same data (as when the "format" and "standalone" forms are the same)
     * add the first value to the locale data arrays, and add other values only if they are different.
     *
     * @param data The data array to retrieve from.
     * @param index A 0-based index into the array to start from.
     * @returns The value immediately before the given index position.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getLastDefinedValue(data,index){for(var i=index;i>-1;i--){if(typeof data[i]!=='undefined'){return data[i];}}throw new Error('Locale data API: locale data undefined');}/**
     * Extracts the hours and minutes from a string like "15:45"
     */function extractTime(time){var _a=__read(time.split(':'),2),h=_a[0],m=_a[1];return{hours:+h,minutes:+m};}/**
     * Retrieves the currency symbol for a given currency code.
     *
     * For example, for the default `en-US` locale, the code `USD` can
     * be represented by the narrow symbol `$` or the wide symbol `US$`.
     *
     * @param code The currency code.
     * @param format The format, `wide` or `narrow`.
     * @param locale A locale code for the locale format rules to use.
     *
     * @returns The symbol, or the currency code if no symbol is available.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getCurrencySymbol(code,format,locale){if(locale===void 0){locale='en';}var currency=getLocaleCurrencies(locale)[code]||CURRENCIES_EN[code]||[];var symbolNarrow=currency[1/* SymbolNarrow */];if(format==='narrow'&&typeof symbolNarrow==='string'){return symbolNarrow;}return currency[0/* Symbol */]||code;}// Most currencies have cents, that's why the default is 2
var DEFAULT_NB_OF_CURRENCY_DIGITS=2;/**
     * Reports the number of decimal digits for a given currency.
     * The value depends upon the presence of cents in that particular currency.
     *
     * @param code The currency code.
     * @returns The number of decimal digits, typically 0 or 2.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function getNumberOfCurrencyDigits(code){var digits;var currency=CURRENCIES_EN[code];if(currency){digits=currency[2/* NbOfDigits */];}return typeof digits==='number'?digits:DEFAULT_NB_OF_CURRENCY_DIGITS;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ISO8601_DATE_REGEX=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;//    1        2       3         4          5          6          7          8  9     10      11
var NAMED_FORMATS={};var DATE_FORMATS_SPLIT=/((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var ZoneWidth;(function(ZoneWidth){ZoneWidth[ZoneWidth["Short"]=0]="Short";ZoneWidth[ZoneWidth["ShortGMT"]=1]="ShortGMT";ZoneWidth[ZoneWidth["Long"]=2]="Long";ZoneWidth[ZoneWidth["Extended"]=3]="Extended";})(ZoneWidth||(ZoneWidth={}));var DateType;(function(DateType){DateType[DateType["FullYear"]=0]="FullYear";DateType[DateType["Month"]=1]="Month";DateType[DateType["Date"]=2]="Date";DateType[DateType["Hours"]=3]="Hours";DateType[DateType["Minutes"]=4]="Minutes";DateType[DateType["Seconds"]=5]="Seconds";DateType[DateType["FractionalSeconds"]=6]="FractionalSeconds";DateType[DateType["Day"]=7]="Day";})(DateType||(DateType={}));var TranslationType;(function(TranslationType){TranslationType[TranslationType["DayPeriods"]=0]="DayPeriods";TranslationType[TranslationType["Days"]=1]="Days";TranslationType[TranslationType["Months"]=2]="Months";TranslationType[TranslationType["Eras"]=3]="Eras";})(TranslationType||(TranslationType={}));/**
     * @ngModule CommonModule
     * @description
     *
     * Formats a date according to locale rules.
     *
     * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)
     * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).
     * @param format The date-time components to include. See `DatePipe` for details.
     * @param locale A locale code for the locale format rules to use.
     * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),
     * or a standard UTC/GMT or continental US time zone abbreviation.
     * If not specified, uses host system settings.
     *
     * @returns The formatted date string.
     *
     * @see `DatePipe`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function formatDate(value,format,locale,timezone){var date=toDate(value);var namedFormat=getNamedFormat(locale,format);format=namedFormat||format;var parts=[];var match;while(format){match=DATE_FORMATS_SPLIT.exec(format);if(match){parts=parts.concat(match.slice(1));var part=parts.pop();if(!part){break;}format=part;}else{parts.push(format);break;}}var dateTimezoneOffset=date.getTimezoneOffset();if(timezone){dateTimezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);date=convertTimezoneToLocal(date,timezone,true);}var text='';parts.forEach(function(value){var dateFormatter=getDateFormatter(value);text+=dateFormatter?dateFormatter(date,locale,dateTimezoneOffset):value==='\'\''?'\'':value.replace(/(^'|'$)/g,'').replace(/''/g,'\'');});return text;}function getNamedFormat(locale,format){var localeId=getLocaleId(locale);NAMED_FORMATS[localeId]=NAMED_FORMATS[localeId]||{};if(NAMED_FORMATS[localeId][format]){return NAMED_FORMATS[localeId][format];}var formatValue='';switch(format){case'shortDate':formatValue=getLocaleDateFormat(locale,exports.FormatWidth.Short);break;case'mediumDate':formatValue=getLocaleDateFormat(locale,exports.FormatWidth.Medium);break;case'longDate':formatValue=getLocaleDateFormat(locale,exports.FormatWidth.Long);break;case'fullDate':formatValue=getLocaleDateFormat(locale,exports.FormatWidth.Full);break;case'shortTime':formatValue=getLocaleTimeFormat(locale,exports.FormatWidth.Short);break;case'mediumTime':formatValue=getLocaleTimeFormat(locale,exports.FormatWidth.Medium);break;case'longTime':formatValue=getLocaleTimeFormat(locale,exports.FormatWidth.Long);break;case'fullTime':formatValue=getLocaleTimeFormat(locale,exports.FormatWidth.Full);break;case'short':var shortTime=getNamedFormat(locale,'shortTime');var shortDate=getNamedFormat(locale,'shortDate');formatValue=formatDateTime(getLocaleDateTimeFormat(locale,exports.FormatWidth.Short),[shortTime,shortDate]);break;case'medium':var mediumTime=getNamedFormat(locale,'mediumTime');var mediumDate=getNamedFormat(locale,'mediumDate');formatValue=formatDateTime(getLocaleDateTimeFormat(locale,exports.FormatWidth.Medium),[mediumTime,mediumDate]);break;case'long':var longTime=getNamedFormat(locale,'longTime');var longDate=getNamedFormat(locale,'longDate');formatValue=formatDateTime(getLocaleDateTimeFormat(locale,exports.FormatWidth.Long),[longTime,longDate]);break;case'full':var fullTime=getNamedFormat(locale,'fullTime');var fullDate=getNamedFormat(locale,'fullDate');formatValue=formatDateTime(getLocaleDateTimeFormat(locale,exports.FormatWidth.Full),[fullTime,fullDate]);break;}if(formatValue){NAMED_FORMATS[localeId][format]=formatValue;}return formatValue;}function formatDateTime(str,opt_values){if(opt_values){str=str.replace(/\{([^}]+)}/g,function(match,key){return opt_values!=null&&key in opt_values?opt_values[key]:match;});}return str;}function padNumber(num,digits,minusSign,trim,negWrap){if(minusSign===void 0){minusSign='-';}var neg='';if(num<0||negWrap&&num<=0){if(negWrap){num=-num+1;}else{num=-num;neg=minusSign;}}var strNum=String(num);while(strNum.length<digits){strNum='0'+strNum;}if(trim){strNum=strNum.substr(strNum.length-digits);}return neg+strNum;}function formatFractionalSeconds(milliseconds,digits){var strMs=padNumber(milliseconds,3);return strMs.substr(0,digits);}/**
     * Returns a date formatter that transforms a date into its locale digit representation
     */function dateGetter(name,size,offset,trim,negWrap){if(offset===void 0){offset=0;}if(trim===void 0){trim=false;}if(negWrap===void 0){negWrap=false;}return function(date,locale){var part=getDatePart(name,date);if(offset>0||part>-offset){part+=offset;}if(name===DateType.Hours){if(part===0&&offset===-12){part=12;}}else if(name===DateType.FractionalSeconds){return formatFractionalSeconds(part,size);}var localeMinus=getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign);return padNumber(part,size,localeMinus,trim,negWrap);};}function getDatePart(part,date){switch(part){case DateType.FullYear:return date.getFullYear();case DateType.Month:return date.getMonth();case DateType.Date:return date.getDate();case DateType.Hours:return date.getHours();case DateType.Minutes:return date.getMinutes();case DateType.Seconds:return date.getSeconds();case DateType.FractionalSeconds:return date.getMilliseconds();case DateType.Day:return date.getDay();default:throw new Error("Unknown DateType value \""+part+"\".");}}/**
     * Returns a date formatter that transforms a date into its locale string representation
     */function dateStrGetter(name,width,form,extended){if(form===void 0){form=exports.FormStyle.Format;}if(extended===void 0){extended=false;}return function(date,locale){return getDateTranslation(date,locale,name,width,form,extended);};}/**
     * Returns the locale translation of a date for a given form, type and width
     */function getDateTranslation(date,locale,name,width,form,extended){switch(name){case TranslationType.Months:return getLocaleMonthNames(locale,form,width)[date.getMonth()];case TranslationType.Days:return getLocaleDayNames(locale,form,width)[date.getDay()];case TranslationType.DayPeriods:var currentHours_1=date.getHours();var currentMinutes_1=date.getMinutes();if(extended){var rules=getLocaleExtraDayPeriodRules(locale);var dayPeriods_1=getLocaleExtraDayPeriods(locale,form,width);var result_1;rules.forEach(function(rule,index){if(Array.isArray(rule)){// morning, afternoon, evening, night
var _a=rule[0],hoursFrom=_a.hours,minutesFrom=_a.minutes;var _b=rule[1],hoursTo=_b.hours,minutesTo=_b.minutes;if(currentHours_1>=hoursFrom&&currentMinutes_1>=minutesFrom&&(currentHours_1<hoursTo||currentHours_1===hoursTo&&currentMinutes_1<minutesTo)){result_1=dayPeriods_1[index];}}else{// noon or midnight
var hours=rule.hours,minutes=rule.minutes;if(hours===currentHours_1&&minutes===currentMinutes_1){result_1=dayPeriods_1[index];}}});if(result_1){return result_1;}}// if no rules for the day periods, we use am/pm by default
return getLocaleDayPeriods(locale,form,width)[currentHours_1<12?0:1];case TranslationType.Eras:return getLocaleEraNames(locale,width)[date.getFullYear()<=0?0:1];default:// This default case is not needed by TypeScript compiler, as the switch is exhaustive.
// However Closure Compiler does not understand that and reports an error in typed mode.
// The `throw new Error` below works around the problem, and the unexpected: never variable
// makes sure tsc still checks this code is unreachable.
var unexpected=name;throw new Error("unexpected translation type "+unexpected);}}/**
     * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or
     * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,
     * extended = +04:30)
     */function timeZoneGetter(width){return function(date,locale,offset){var zone=-1*offset;var minusSign=getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign);var hours=zone>0?Math.floor(zone/60):Math.ceil(zone/60);switch(width){case ZoneWidth.Short:return(zone>=0?'+':'')+padNumber(hours,2,minusSign)+padNumber(Math.abs(zone%60),2,minusSign);case ZoneWidth.ShortGMT:return'GMT'+(zone>=0?'+':'')+padNumber(hours,1,minusSign);case ZoneWidth.Long:return'GMT'+(zone>=0?'+':'')+padNumber(hours,2,minusSign)+':'+padNumber(Math.abs(zone%60),2,minusSign);case ZoneWidth.Extended:if(offset===0){return'Z';}else{return(zone>=0?'+':'')+padNumber(hours,2,minusSign)+':'+padNumber(Math.abs(zone%60),2,minusSign);}default:throw new Error("Unknown zone width \""+width+"\"");}};}var JANUARY=0;var THURSDAY=4;function getFirstThursdayOfYear(year){var firstDayOfYear=new Date(year,JANUARY,1).getDay();return new Date(year,0,1+(firstDayOfYear<=THURSDAY?THURSDAY:THURSDAY+7)-firstDayOfYear);}function getThursdayThisWeek(datetime){return new Date(datetime.getFullYear(),datetime.getMonth(),datetime.getDate()+(THURSDAY-datetime.getDay()));}function weekGetter(size,monthBased){if(monthBased===void 0){monthBased=false;}return function(date,locale){var result;if(monthBased){var nbDaysBefore1stDayOfMonth=new Date(date.getFullYear(),date.getMonth(),1).getDay()-1;var today=date.getDate();result=1+Math.floor((today+nbDaysBefore1stDayOfMonth)/7);}else{var firstThurs=getFirstThursdayOfYear(date.getFullYear());var thisThurs=getThursdayThisWeek(date);var diff=thisThurs.getTime()-firstThurs.getTime();result=1+Math.round(diff/6.048e8);// 6.048e8 ms per week
}return padNumber(result,size,getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign));};}var DATE_FORMATS={};// Based on CLDR formats:
// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
// See also explanations: http://cldr.unicode.org/translation/date-time
// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x
function getDateFormatter(format){if(DATE_FORMATS[format]){return DATE_FORMATS[format];}var formatter;switch(format){// Era name (AD/BC)
case'G':case'GG':case'GGG':formatter=dateStrGetter(TranslationType.Eras,exports.TranslationWidth.Abbreviated);break;case'GGGG':formatter=dateStrGetter(TranslationType.Eras,exports.TranslationWidth.Wide);break;case'GGGGG':formatter=dateStrGetter(TranslationType.Eras,exports.TranslationWidth.Narrow);break;// 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)
case'y':formatter=dateGetter(DateType.FullYear,1,0,false,true);break;// 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
case'yy':formatter=dateGetter(DateType.FullYear,2,0,true,true);break;// 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)
case'yyy':formatter=dateGetter(DateType.FullYear,3,0,false,true);break;// 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)
case'yyyy':formatter=dateGetter(DateType.FullYear,4,0,false,true);break;// Month of the year (1-12), numeric
case'M':case'L':formatter=dateGetter(DateType.Month,1,1);break;case'MM':case'LL':formatter=dateGetter(DateType.Month,2,1);break;// Month of the year (January, ...), string, format
case'MMM':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Abbreviated);break;case'MMMM':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Wide);break;case'MMMMM':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Narrow);break;// Month of the year (January, ...), string, standalone
case'LLL':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Abbreviated,exports.FormStyle.Standalone);break;case'LLLL':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Wide,exports.FormStyle.Standalone);break;case'LLLLL':formatter=dateStrGetter(TranslationType.Months,exports.TranslationWidth.Narrow,exports.FormStyle.Standalone);break;// Week of the year (1, ... 52)
case'w':formatter=weekGetter(1);break;case'ww':formatter=weekGetter(2);break;// Week of the month (1, ...)
case'W':formatter=weekGetter(1,true);break;// Day of the month (1-31)
case'd':formatter=dateGetter(DateType.Date,1);break;case'dd':formatter=dateGetter(DateType.Date,2);break;// Day of the Week
case'E':case'EE':case'EEE':formatter=dateStrGetter(TranslationType.Days,exports.TranslationWidth.Abbreviated);break;case'EEEE':formatter=dateStrGetter(TranslationType.Days,exports.TranslationWidth.Wide);break;case'EEEEE':formatter=dateStrGetter(TranslationType.Days,exports.TranslationWidth.Narrow);break;case'EEEEEE':formatter=dateStrGetter(TranslationType.Days,exports.TranslationWidth.Short);break;// Generic period of the day (am-pm)
case'a':case'aa':case'aaa':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Abbreviated);break;case'aaaa':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Wide);break;case'aaaaa':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Narrow);break;// Extended period of the day (midnight, at night, ...), standalone
case'b':case'bb':case'bbb':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Abbreviated,exports.FormStyle.Standalone,true);break;case'bbbb':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Wide,exports.FormStyle.Standalone,true);break;case'bbbbb':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Narrow,exports.FormStyle.Standalone,true);break;// Extended period of the day (midnight, night, ...), standalone
case'B':case'BB':case'BBB':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Abbreviated,exports.FormStyle.Format,true);break;case'BBBB':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Wide,exports.FormStyle.Format,true);break;case'BBBBB':formatter=dateStrGetter(TranslationType.DayPeriods,exports.TranslationWidth.Narrow,exports.FormStyle.Format,true);break;// Hour in AM/PM, (1-12)
case'h':formatter=dateGetter(DateType.Hours,1,-12);break;case'hh':formatter=dateGetter(DateType.Hours,2,-12);break;// Hour of the day (0-23)
case'H':formatter=dateGetter(DateType.Hours,1);break;// Hour in day, padded (00-23)
case'HH':formatter=dateGetter(DateType.Hours,2);break;// Minute of the hour (0-59)
case'm':formatter=dateGetter(DateType.Minutes,1);break;case'mm':formatter=dateGetter(DateType.Minutes,2);break;// Second of the minute (0-59)
case's':formatter=dateGetter(DateType.Seconds,1);break;case'ss':formatter=dateGetter(DateType.Seconds,2);break;// Fractional second
case'S':formatter=dateGetter(DateType.FractionalSeconds,1);break;case'SS':formatter=dateGetter(DateType.FractionalSeconds,2);break;case'SSS':formatter=dateGetter(DateType.FractionalSeconds,3);break;// Timezone ISO8601 short format (-0430)
case'Z':case'ZZ':case'ZZZ':formatter=timeZoneGetter(ZoneWidth.Short);break;// Timezone ISO8601 extended format (-04:30)
case'ZZZZZ':formatter=timeZoneGetter(ZoneWidth.Extended);break;// Timezone GMT short format (GMT+4)
case'O':case'OO':case'OOO':// Should be location, but fallback to format O instead because we don't have the data yet
case'z':case'zz':case'zzz':formatter=timeZoneGetter(ZoneWidth.ShortGMT);break;// Timezone GMT long format (GMT+0430)
case'OOOO':case'ZZZZ':// Should be location, but fallback to format O instead because we don't have the data yet
case'zzzz':formatter=timeZoneGetter(ZoneWidth.Long);break;default:return null;}DATE_FORMATS[format]=formatter;return formatter;}function timezoneToOffset(timezone,fallback){// Support: IE 9-11 only, Edge 13-15+
// IE/Edge do not "understand" colon (`:`) in timezone
timezone=timezone.replace(/:/g,'');var requestedTimezoneOffset=Date.parse('Jan 01, 1970 00:00:00 '+timezone)/60000;return isNaN(requestedTimezoneOffset)?fallback:requestedTimezoneOffset;}function addDateMinutes(date,minutes){date=new Date(date.getTime());date.setMinutes(date.getMinutes()+minutes);return date;}function convertTimezoneToLocal(date,timezone,reverse){var reverseValue=reverse?-1:1;var dateTimezoneOffset=date.getTimezoneOffset();var timezoneOffset=timezoneToOffset(timezone,dateTimezoneOffset);return addDateMinutes(date,reverseValue*(timezoneOffset-dateTimezoneOffset));}/**
     * Converts a value to date.
     *
     * Supported input formats:
     * - `Date`
     * - number: timestamp
     * - string: numeric (e.g. "1234"), ISO and date strings in a format supported by
     *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).
     *   Note: ISO strings without time return a date without timeoffset.
     *
     * Throws if unable to convert to a date.
     */function toDate(value){if(isDate(value)){return value;}if(typeof value==='number'&&!isNaN(value)){return new Date(value);}if(typeof value==='string'){value=value.trim();var parsedNb=parseFloat(value);// any string that only contains numbers, like "1234" but not like "1234hello"
if(!isNaN(value-parsedNb)){return new Date(parsedNb);}if(/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)){/* For ISO Strings without time the day, month and year must be extracted from the ISO String
                before Date creation to avoid time offset and errors in the new Date.
                If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
                date, some browsers (e.g. IE 9) will throw an invalid Date error.
                If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
                is applied.
                Note: ISO months are 0 for January, 1 for February, ... */var _a=__read(value.split('-').map(function(val){return+val;}),3),y=_a[0],m=_a[1],d=_a[2];return new Date(y,m-1,d);}var match=void 0;if(match=value.match(ISO8601_DATE_REGEX)){return isoStringToDate(match);}}var date=new Date(value);if(!isDate(date)){throw new Error("Unable to convert \""+value+"\" into a date");}return date;}/**
     * Converts a date in ISO8601 to a Date.
     * Used instead of `Date.parse` because of browser discrepancies.
     */function isoStringToDate(match){var date=new Date(0);var tzHour=0;var tzMin=0;// match[8] means that the string contains "Z" (UTC) or a timezone like "+01:00" or "+0100"
var dateSetter=match[8]?date.setUTCFullYear:date.setFullYear;var timeSetter=match[8]?date.setUTCHours:date.setHours;// if there is a timezone defined like "+01:00" or "+0100"
if(match[9]){tzHour=Number(match[9]+match[10]);tzMin=Number(match[9]+match[11]);}dateSetter.call(date,Number(match[1]),Number(match[2])-1,Number(match[3]));var h=Number(match[4]||0)-tzHour;var m=Number(match[5]||0)-tzMin;var s=Number(match[6]||0);var ms=Math.round(parseFloat('0.'+(match[7]||0))*1000);timeSetter.call(date,h,m,s,ms);return date;}function isDate(value){return value instanceof Date&&!isNaN(value.valueOf());}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NUMBER_FORMAT_REGEXP=/^(\d+)?\.((\d+)(-(\d+))?)?$/;var MAX_DIGITS=22;var DECIMAL_SEP='.';var ZERO_CHAR='0';var PATTERN_SEP=';';var GROUP_SEP=',';var DIGIT_CHAR='#';var CURRENCY_CHAR='¤';var PERCENT_CHAR='%';/**
     * Transforms a number to a locale string based on a style and a format.
     */function formatNumberToLocaleString(value,pattern,locale,groupSymbol,decimalSymbol,digitsInfo,isPercent){if(isPercent===void 0){isPercent=false;}var formattedText='';var isZero=false;if(!isFinite(value)){formattedText=getLocaleNumberSymbol(locale,exports.NumberSymbol.Infinity);}else{var parsedNumber=parseNumber(value);if(isPercent){parsedNumber=toPercent(parsedNumber);}var minInt=pattern.minInt;var minFraction=pattern.minFrac;var maxFraction=pattern.maxFrac;if(digitsInfo){var parts=digitsInfo.match(NUMBER_FORMAT_REGEXP);if(parts===null){throw new Error(digitsInfo+" is not a valid digit info");}var minIntPart=parts[1];var minFractionPart=parts[3];var maxFractionPart=parts[5];if(minIntPart!=null){minInt=parseIntAutoRadix(minIntPart);}if(minFractionPart!=null){minFraction=parseIntAutoRadix(minFractionPart);}if(maxFractionPart!=null){maxFraction=parseIntAutoRadix(maxFractionPart);}else if(minFractionPart!=null&&minFraction>maxFraction){maxFraction=minFraction;}}roundNumber(parsedNumber,minFraction,maxFraction);var digits=parsedNumber.digits;var integerLen=parsedNumber.integerLen;var exponent=parsedNumber.exponent;var decimals=[];isZero=digits.every(function(d){return!d;});// pad zeros for small numbers
for(;integerLen<minInt;integerLen++){digits.unshift(0);}// pad zeros for small numbers
for(;integerLen<0;integerLen++){digits.unshift(0);}// extract decimals digits
if(integerLen>0){decimals=digits.splice(integerLen,digits.length);}else{decimals=digits;digits=[0];}// format the integer digits with grouping separators
var groups=[];if(digits.length>=pattern.lgSize){groups.unshift(digits.splice(-pattern.lgSize,digits.length).join(''));}while(digits.length>pattern.gSize){groups.unshift(digits.splice(-pattern.gSize,digits.length).join(''));}if(digits.length){groups.unshift(digits.join(''));}formattedText=groups.join(getLocaleNumberSymbol(locale,groupSymbol));// append the decimal digits
if(decimals.length){formattedText+=getLocaleNumberSymbol(locale,decimalSymbol)+decimals.join('');}if(exponent){formattedText+=getLocaleNumberSymbol(locale,exports.NumberSymbol.Exponential)+'+'+exponent;}}if(value<0&&!isZero){formattedText=pattern.negPre+formattedText+pattern.negSuf;}else{formattedText=pattern.posPre+formattedText+pattern.posSuf;}return formattedText;}/**
     * @ngModule CommonModule
     * @description
     *
     * Formats a number as currency using locale rules.
     *
     * @param value The number to format.
     * @param locale A locale code for the locale format rules to use.
     * @param currency A string containing the currency symbol or its name,
     * such as "$" or "Canadian Dollar". Used in output string, but does not affect the operation
     * of the function.
     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
     * currency code, such as `USD` for the US dollar and `EUR` for the euro.
     * Used to determine the number of digits in the decimal part.
     * @param digitInfo Decimal representation options, specified by a string in the following format:
     * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
     *
     * @returns The formatted currency value.
     *
     * @see `formatNumber()`
     * @see `DecimalPipe`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function formatCurrency(value,locale,currency,currencyCode,digitsInfo){var format=getLocaleNumberFormat(locale,exports.NumberFormatStyle.Currency);var pattern=parseNumberFormat(format,getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign));pattern.minFrac=getNumberOfCurrencyDigits(currencyCode);pattern.maxFrac=pattern.minFrac;var res=formatNumberToLocaleString(value,pattern,locale,exports.NumberSymbol.CurrencyGroup,exports.NumberSymbol.CurrencyDecimal,digitsInfo);return res.replace(CURRENCY_CHAR,currency)// if we have 2 time the currency character, the second one is ignored
.replace(CURRENCY_CHAR,'')// If there is a spacing between currency character and the value and
// the currency character is supressed by passing an empty string, the
// spacing character would remain as part of the string. Then we
// should remove it.
.trim();}/**
     * @ngModule CommonModule
     * @description
     *
     * Formats a number as a percentage according to locale rules.
     *
     * @param value The number to format.
     * @param locale A locale code for the locale format rules to use.
     * @param digitInfo Decimal representation options, specified by a string in the following format:
     * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
     *
     * @returns The formatted percentage value.
     *
     * @see `formatNumber()`
     * @see `DecimalPipe`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     * @publicApi
     *
     */function formatPercent(value,locale,digitsInfo){var format=getLocaleNumberFormat(locale,exports.NumberFormatStyle.Percent);var pattern=parseNumberFormat(format,getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign));var res=formatNumberToLocaleString(value,pattern,locale,exports.NumberSymbol.Group,exports.NumberSymbol.Decimal,digitsInfo,true);return res.replace(new RegExp(PERCENT_CHAR,'g'),getLocaleNumberSymbol(locale,exports.NumberSymbol.PercentSign));}/**
     * @ngModule CommonModule
     * @description
     *
     * Formats a number as text, with group sizing, separator, and other
     * parameters based on the locale.
     *
     * @param value The number to format.
     * @param locale A locale code for the locale format rules to use.
     * @param digitInfo Decimal representation options, specified by a string in the following format:
     * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.
     *
     * @returns The formatted text string.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     *
     * @publicApi
     */function formatNumber(value,locale,digitsInfo){var format=getLocaleNumberFormat(locale,exports.NumberFormatStyle.Decimal);var pattern=parseNumberFormat(format,getLocaleNumberSymbol(locale,exports.NumberSymbol.MinusSign));return formatNumberToLocaleString(value,pattern,locale,exports.NumberSymbol.Group,exports.NumberSymbol.Decimal,digitsInfo);}function parseNumberFormat(format,minusSign){if(minusSign===void 0){minusSign='-';}var p={minInt:1,minFrac:0,maxFrac:0,posPre:'',posSuf:'',negPre:'',negSuf:'',gSize:0,lgSize:0};var patternParts=format.split(PATTERN_SEP);var positive=patternParts[0];var negative=patternParts[1];var positiveParts=positive.indexOf(DECIMAL_SEP)!==-1?positive.split(DECIMAL_SEP):[positive.substring(0,positive.lastIndexOf(ZERO_CHAR)+1),positive.substring(positive.lastIndexOf(ZERO_CHAR)+1)],integer=positiveParts[0],fraction=positiveParts[1]||'';p.posPre=integer.substr(0,integer.indexOf(DIGIT_CHAR));for(var i=0;i<fraction.length;i++){var ch=fraction.charAt(i);if(ch===ZERO_CHAR){p.minFrac=p.maxFrac=i+1;}else if(ch===DIGIT_CHAR){p.maxFrac=i+1;}else{p.posSuf+=ch;}}var groups=integer.split(GROUP_SEP);p.gSize=groups[1]?groups[1].length:0;p.lgSize=groups[2]||groups[1]?(groups[2]||groups[1]).length:0;if(negative){var trunkLen=positive.length-p.posPre.length-p.posSuf.length,pos=negative.indexOf(DIGIT_CHAR);p.negPre=negative.substr(0,pos).replace(/'/g,'');p.negSuf=negative.substr(pos+trunkLen).replace(/'/g,'');}else{p.negPre=minusSign+p.posPre;p.negSuf=p.posSuf;}return p;}// Transforms a parsed number into a percentage by multiplying it by 100
function toPercent(parsedNumber){// if the number is 0, don't do anything
if(parsedNumber.digits[0]===0){return parsedNumber;}// Getting the current number of decimals
var fractionLen=parsedNumber.digits.length-parsedNumber.integerLen;if(parsedNumber.exponent){parsedNumber.exponent+=2;}else{if(fractionLen===0){parsedNumber.digits.push(0,0);}else if(fractionLen===1){parsedNumber.digits.push(0);}parsedNumber.integerLen+=2;}return parsedNumber;}/**
     * Parses a number.
     * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/
     */function parseNumber(num){var numStr=Math.abs(num)+'';var exponent=0,digits,integerLen;var i,j,zeros;// Decimal point?
if((integerLen=numStr.indexOf(DECIMAL_SEP))>-1){numStr=numStr.replace(DECIMAL_SEP,'');}// Exponential form?
if((i=numStr.search(/e/i))>0){// Work out the exponent.
if(integerLen<0)integerLen=i;integerLen+=+numStr.slice(i+1);numStr=numStr.substring(0,i);}else if(integerLen<0){// There was no decimal point or exponent so it is an integer.
integerLen=numStr.length;}// Count the number of leading zeros.
for(i=0;numStr.charAt(i)===ZERO_CHAR;i++){/* empty */}if(i===(zeros=numStr.length)){// The digits are all zero.
digits=[0];integerLen=1;}else{// Count the number of trailing zeros
zeros--;while(numStr.charAt(zeros)===ZERO_CHAR){zeros--;}// Trailing zeros are insignificant so ignore them
integerLen-=i;digits=[];// Convert string to array of digits without leading/trailing zeros.
for(j=0;i<=zeros;i++,j++){digits[j]=Number(numStr.charAt(i));}}// If the number overflows the maximum allowed digits then use an exponent.
if(integerLen>MAX_DIGITS){digits=digits.splice(0,MAX_DIGITS-1);exponent=integerLen-1;integerLen=1;}return{digits:digits,exponent:exponent,integerLen:integerLen};}/**
     * Round the parsed number to the specified number of decimal places
     * This function changes the parsedNumber in-place
     */function roundNumber(parsedNumber,minFrac,maxFrac){if(minFrac>maxFrac){throw new Error("The minimum number of digits after fraction ("+minFrac+") is higher than the maximum ("+maxFrac+").");}var digits=parsedNumber.digits;var fractionLen=digits.length-parsedNumber.integerLen;var fractionSize=Math.min(Math.max(minFrac,fractionLen),maxFrac);// The index of the digit to where rounding is to occur
var roundAt=fractionSize+parsedNumber.integerLen;var digit=digits[roundAt];if(roundAt>0){// Drop fractional digits beyond `roundAt`
digits.splice(Math.max(parsedNumber.integerLen,roundAt));// Set non-fractional digits beyond `roundAt` to 0
for(var j=roundAt;j<digits.length;j++){digits[j]=0;}}else{// We rounded to zero so reset the parsedNumber
fractionLen=Math.max(0,fractionLen);parsedNumber.integerLen=1;digits.length=Math.max(1,roundAt=fractionSize+1);digits[0]=0;for(var i=1;i<roundAt;i++){digits[i]=0;}}if(digit>=5){if(roundAt-1<0){for(var k=0;k>roundAt;k--){digits.unshift(0);parsedNumber.integerLen++;}digits.unshift(1);parsedNumber.integerLen++;}else{digits[roundAt-1]++;}}// Pad out with zeros to get the required fraction length
for(;fractionLen<Math.max(0,fractionSize);fractionLen++){digits.push(0);}var dropTrailingZeros=fractionSize!==0;// Minimal length = nb of decimals required + current nb of integers
// Any number besides that is optional and can be removed if it's a trailing 0
var minLen=minFrac+parsedNumber.integerLen;// Do any carrying, e.g. a digit was rounded up to 10
var carry=digits.reduceRight(function(carry,d,i,digits){d=d+carry;digits[i]=d<10?d:d-10;// d % 10
if(dropTrailingZeros){// Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)
if(digits[i]===0&&i>=minLen){digits.pop();}else{dropTrailingZeros=false;}}return d>=10?1:0;// Math.floor(d / 10);
},0);if(carry){digits.unshift(carry);parsedNumber.integerLen++;}}function parseIntAutoRadix(text){var result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var NgLocalization=/** @class */function(){function NgLocalization(){}return NgLocalization;}();/**
     * Returns the plural category for a given value.
     * - "=value" when the case exists,
     * - the plural category otherwise
     */function getPluralCategory(value,cases,ngLocalization,locale){var key="="+value;if(cases.indexOf(key)>-1){return key;}key=ngLocalization.getPluralCategory(value,locale);if(cases.indexOf(key)>-1){return key;}if(cases.indexOf('other')>-1){return'other';}throw new Error("No plural message found for value \""+value+"\"");}/**
     * Returns the plural case based on the locale
     *
     * @publicApi
     */var NgLocaleLocalization=/** @class */function(_super){__extends(NgLocaleLocalization,_super);function NgLocaleLocalization(locale){var _this=_super.call(this)||this;_this.locale=locale;return _this;}NgLocaleLocalization.prototype.getPluralCategory=function(value,locale){var plural=getLocalePluralCase(locale||this.locale)(value);switch(plural){case exports.Plural.Zero:return'zero';case exports.Plural.One:return'one';case exports.Plural.Two:return'two';case exports.Plural.Few:return'few';case exports.Plural.Many:return'many';default:return'other';}};NgLocaleLocalization=__decorate([i0.Injectable(),__param(0,i0.Inject(i0.LOCALE_ID)),__metadata("design:paramtypes",[String])],NgLocaleLocalization);return NgLocaleLocalization;}(NgLocalization);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Register global data to be used internally by Angular. See the
     * ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale data.
     *
     * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1
     *
     * @publicApi
     */function registerLocaleData(data,localeId,extraData){return i0.ɵregisterLocaleData(data,localeId,extraData);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function parseCookieValue(cookieStr,name){var e_1,_a;name=encodeURIComponent(name);try{for(var _b=__values(cookieStr.split(';')),_c=_b.next();!_c.done;_c=_b.next()){var cookie=_c.value;var eqIndex=cookie.indexOf('=');var _d=__read(eqIndex==-1?[cookie,'']:[cookie.slice(0,eqIndex),cookie.slice(eqIndex+1)],2),cookieName=_d[0],cookieValue=_d[1];if(cookieName.trim()===name){return decodeURIComponent(cookieValue);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return null;}/**
     * @ngModule CommonModule
     *
     * @usageNotes
     * ```
     *     <some-element [ngClass]="'first second'">...</some-element>
     *
     *     <some-element [ngClass]="['first', 'second']">...</some-element>
     *
     *     <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
     *
     *     <some-element [ngClass]="stringExp|arrayExp|objExp">...</some-element>
     *
     *     <some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>
     * ```
     *
     * @description
     *
     * Adds and removes CSS classes on an HTML element.
     *
     * The CSS classes are updated as follows, depending on the type of the expression evaluation:
     * - `string` - the CSS classes listed in the string (space delimited) are added,
     * - `Array` - the CSS classes declared as Array elements are added,
     * - `Object` - keys are CSS classes that get added when the expression given in the value
     *              evaluates to a truthy value, otherwise they are removed.
     *
     * @publicApi
     */var NgClass=/** @class */function(){function NgClass(_iterableDiffers,_keyValueDiffers,_ngEl,_renderer){this._iterableDiffers=_iterableDiffers;this._keyValueDiffers=_keyValueDiffers;this._ngEl=_ngEl;this._renderer=_renderer;this._iterableDiffer=null;this._keyValueDiffer=null;this._initialClasses=[];this._rawClass=null;}Object.defineProperty(NgClass.prototype,"klass",{set:function set(value){this._removeClasses(this._initialClasses);this._initialClasses=typeof value==='string'?value.split(/\s+/):[];this._applyClasses(this._initialClasses);this._applyClasses(this._rawClass);},enumerable:true,configurable:true});Object.defineProperty(NgClass.prototype,"ngClass",{set:function set(value){this._removeClasses(this._rawClass);this._applyClasses(this._initialClasses);this._iterableDiffer=null;this._keyValueDiffer=null;this._rawClass=typeof value==='string'?value.split(/\s+/):value;if(this._rawClass){if(i0.ɵisListLikeIterable(this._rawClass)){this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create();}else{this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create();}}},enumerable:true,configurable:true});NgClass.prototype.ngDoCheck=function(){if(this._iterableDiffer){var iterableChanges=this._iterableDiffer.diff(this._rawClass);if(iterableChanges){this._applyIterableChanges(iterableChanges);}}else if(this._keyValueDiffer){var keyValueChanges=this._keyValueDiffer.diff(this._rawClass);if(keyValueChanges){this._applyKeyValueChanges(keyValueChanges);}}};NgClass.prototype._applyKeyValueChanges=function(changes){var _this=this;changes.forEachAddedItem(function(record){return _this._toggleClass(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this._toggleClass(record.key,record.currentValue);});changes.forEachRemovedItem(function(record){if(record.previousValue){_this._toggleClass(record.key,false);}});};NgClass.prototype._applyIterableChanges=function(changes){var _this=this;changes.forEachAddedItem(function(record){if(typeof record.item==='string'){_this._toggleClass(record.item,true);}else{throw new Error("NgClass can only toggle CSS classes expressed as strings, got "+i0.ɵstringify(record.item));}});changes.forEachRemovedItem(function(record){return _this._toggleClass(record.item,false);});};/**
         * Applies a collection of CSS classes to the DOM element.
         *
         * For argument of type Set and Array CSS class names contained in those collections are always
         * added.
         * For argument of type Map CSS class name in the map's key is toggled based on the value (added
         * for truthy and removed for falsy).
         */NgClass.prototype._applyClasses=function(rawClassVal){var _this=this;if(rawClassVal){if(Array.isArray(rawClassVal)||rawClassVal instanceof Set){rawClassVal.forEach(function(klass){return _this._toggleClass(klass,true);});}else{Object.keys(rawClassVal).forEach(function(klass){return _this._toggleClass(klass,!!rawClassVal[klass]);});}}};/**
         * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup
         * purposes.
         */NgClass.prototype._removeClasses=function(rawClassVal){var _this=this;if(rawClassVal){if(Array.isArray(rawClassVal)||rawClassVal instanceof Set){rawClassVal.forEach(function(klass){return _this._toggleClass(klass,false);});}else{Object.keys(rawClassVal).forEach(function(klass){return _this._toggleClass(klass,false);});}}};NgClass.prototype._toggleClass=function(klass,enabled){var _this=this;klass=klass.trim();if(klass){klass.split(/\s+/g).forEach(function(klass){if(enabled){_this._renderer.addClass(_this._ngEl.nativeElement,klass);}else{_this._renderer.removeClass(_this._ngEl.nativeElement,klass);}});}};__decorate([i0.Input('class'),__metadata("design:type",String),__metadata("design:paramtypes",[String])],NgClass.prototype,"klass",null);__decorate([i0.Input('ngClass'),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgClass.prototype,"ngClass",null);NgClass=__decorate([i0.Directive({selector:'[ngClass]'}),__metadata("design:paramtypes",[i0.IterableDiffers,i0.KeyValueDiffers,i0.ElementRef,i0.Renderer2])],NgClass);return NgClass;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Instantiates a single {@link Component} type and inserts its Host View into current View.
     * `NgComponentOutlet` provides a declarative approach for dynamic component creation.
     *
     * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and
     * any existing component will get destroyed.
     *
     * @usageNotes
     *
     * ### Fine tune control
     *
     * You can control the component creation process by using the following optional attributes:
     *
     * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for
     * the Component. Defaults to the injector of the current view container.
     *
     * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content
     * section of the component, if exists.
     *
     * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other
     * module, then load a component from that module.
     *
     * ### Syntax
     *
     * Simple
     * ```
     * <ng-container *ngComponentOutlet="componentTypeExpression"></ng-container>
     * ```
     *
     * Customized injector/content
     * ```
     * <ng-container *ngComponentOutlet="componentTypeExpression;
     *                                   injector: injectorExpression;
     *                                   content: contentNodesExpression;">
     * </ng-container>
     * ```
     *
     * Customized ngModuleFactory
     * ```
     * <ng-container *ngComponentOutlet="componentTypeExpression;
     *                                   ngModuleFactory: moduleFactory;">
     * </ng-container>
     * ```
     *
     * ### A simple example
     *
     * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}
     *
     * A more complete example with additional options:
     *
     * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}
     *
     * @publicApi
     * @ngModule CommonModule
     */var NgComponentOutlet=/** @class */function(){function NgComponentOutlet(_viewContainerRef){this._viewContainerRef=_viewContainerRef;this._componentRef=null;this._moduleRef=null;}NgComponentOutlet.prototype.ngOnChanges=function(changes){this._viewContainerRef.clear();this._componentRef=null;if(this.ngComponentOutlet){var elInjector=this.ngComponentOutletInjector||this._viewContainerRef.parentInjector;if(changes['ngComponentOutletNgModuleFactory']){if(this._moduleRef)this._moduleRef.destroy();if(this.ngComponentOutletNgModuleFactory){var parentModule=elInjector.get(i0.NgModuleRef);this._moduleRef=this.ngComponentOutletNgModuleFactory.create(parentModule.injector);}else{this._moduleRef=null;}}var componentFactoryResolver=this._moduleRef?this._moduleRef.componentFactoryResolver:elInjector.get(i0.ComponentFactoryResolver);var componentFactory=componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);this._componentRef=this._viewContainerRef.createComponent(componentFactory,this._viewContainerRef.length,elInjector,this.ngComponentOutletContent);}};NgComponentOutlet.prototype.ngOnDestroy=function(){if(this._moduleRef)this._moduleRef.destroy();};__decorate([i0.Input(),__metadata("design:type",i0.Type)],NgComponentOutlet.prototype,"ngComponentOutlet",void 0);__decorate([i0.Input(),__metadata("design:type",i0.Injector)],NgComponentOutlet.prototype,"ngComponentOutletInjector",void 0);__decorate([i0.Input(),__metadata("design:type",Array)],NgComponentOutlet.prototype,"ngComponentOutletContent",void 0);__decorate([i0.Input(),__metadata("design:type",i0.NgModuleFactory)],NgComponentOutlet.prototype,"ngComponentOutletNgModuleFactory",void 0);NgComponentOutlet=__decorate([i0.Directive({selector:'[ngComponentOutlet]'}),__metadata("design:paramtypes",[i0.ViewContainerRef])],NgComponentOutlet);return NgComponentOutlet;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var NgForOfContext=/** @class */function(){function NgForOfContext($implicit,ngForOf,index,count){this.$implicit=$implicit;this.ngForOf=ngForOf;this.index=index;this.count=count;}Object.defineProperty(NgForOfContext.prototype,"first",{get:function get(){return this.index===0;},enumerable:true,configurable:true});Object.defineProperty(NgForOfContext.prototype,"last",{get:function get(){return this.index===this.count-1;},enumerable:true,configurable:true});Object.defineProperty(NgForOfContext.prototype,"even",{get:function get(){return this.index%2===0;},enumerable:true,configurable:true});Object.defineProperty(NgForOfContext.prototype,"odd",{get:function get(){return!this.even;},enumerable:true,configurable:true});return NgForOfContext;}();/**
     * A [structural directive](guide/structural-directives) that renders
     * a template for each item in a collection.
     * The directive is placed on an element, which becomes the parent
     * of the cloned templates.
     *
     * The `ngForOf` directive is generally used in the
     * [shorthand form](guide/structural-directives#the-asterisk--prefix) `*ngFor`.
     * In this form, the template to be rendered for each iteration is the content
     * of an anchor element containing the directive.
     *
     * The following example shows the shorthand syntax with some options,
     * contained in an `<li>` element.
     *
     * ```
     * <li *ngFor="let item of items; index as i; trackBy: trackByFn">...</li>
     * ```
     *
     * The shorthand form expands into a long form that uses the `ngForOf` selector
     * on an `<ng-template>` element.
     * The content of the `<ng-template>` element is the `<li>` element that held the
     * short-form directive.
     *
     * Here is the expanded version of the short-form example.
     *
     * ```
     * <ng-template ngFor let-item [ngForOf]="items" let-i="index" [ngForTrackBy]="trackByFn">
     *   <li>...</li>
     * </ng-template>
     * ```
     *
     * Angular automatically expands the shorthand syntax as it compiles the template.
     * The context for each embedded view is logically merged to the current component
     * context according to its lexical position.
     *
     * When using the shorthand syntax, Angular allows only [one structural directive
     * on an element](guide/structural-directives#one-structural-directive-per-host-element).
     * If you want to iterate conditionally, for example,
     * put the `*ngIf` on a container element that wraps the `*ngFor` element.
     * For futher discussion, see
     * [Structural Directives](guide/structural-directives#one-per-element).
     *
     * @usageNotes
     *
     * ### Local variables
     *
     * `NgForOf` provides exported values that can be aliased to local variables.
     * For example:
     *
     *  ```
     * <li *ngFor="let user of users; index as i; first as isFirst">
     *    {{i}}/{{users.length}}. {{user}} <span *ngIf="isFirst">default</span>
     * </li>
     * ```
     *
     * The following exported values can be aliased to local variables:
     *
     * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).
     * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is
     * more complex then a property access, for example when using the async pipe (`userStreams |
     * async`).
     * - `index: number`: The index of the current item in the iterable.
     * - `count: number`: The length of the iterable.
     * - `first: boolean`: True when the item is the first item in the iterable.
     * - `last: boolean`: True when the item is the last item in the iterable.
     * - `even: boolean`: True when the item has an even index in the iterable.
     * - `odd: boolean`: True when the item has an odd index in the iterable.
     *
     * ### Change propagation
     *
     * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:
     *
     * * When an item is added, a new instance of the template is added to the DOM.
     * * When an item is removed, its template instance is removed from the DOM.
     * * When items are reordered, their respective templates are reordered in the DOM.
     *
     * Angular uses object identity to track insertions and deletions within the iterator and reproduce
     * those changes in the DOM. This has important implications for animations and any stateful
     * controls that are present, such as `<input>` elements that accept user input. Inserted rows can
     * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state
     * such as user input.
     * For more on animations, see [Transitions and Triggers](guide/transition-and-triggers).
     *
     * The identities of elements in the iterator can change while the data does not.
     * This can happen, for example, if the iterator is produced from an RPC to the server, and that
     * RPC is re-run. Even if the data hasn't changed, the second response produces objects with
     * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old
     * elements were deleted and all new elements inserted).
     *
     * To avoid this expensive operation, you can customize the default tracking algorithm.
     * by supplying the `trackBy` option to `NgForOf`.
     * `trackBy` takes a function that has two arguments: `index` and `item`.
     * If `trackBy` is given, Angular tracks changes by the return value of the function.
     *
     * @see [Structural Directives](guide/structural-directives)
     * @ngModule CommonModule
     * @publicApi
     */var NgForOf=/** @class */function(){function NgForOf(_viewContainer,_template,_differs){this._viewContainer=_viewContainer;this._template=_template;this._differs=_differs;this._ngForOf=null;this._ngForOfDirty=true;this._differ=null;}Object.defineProperty(NgForOf.prototype,"ngForOf",{/**
             * The value of the iterable expression, which can be used as a
             * [template input variable](guide/structural-directives#template-input-variable).
             */set:function set(ngForOf){this._ngForOf=ngForOf;this._ngForOfDirty=true;},enumerable:true,configurable:true});Object.defineProperty(NgForOf.prototype,"ngForTrackBy",{get:function get(){return this._trackByFn;},/**
             * A function that defines how to track changes for items in the iterable.
             *
             * When items are added, moved, or removed in the iterable,
             * the directive must re-render the appropriate DOM nodes.
             * To minimize churn in the DOM, only nodes that have changed
             * are re-rendered.
             *
             * By default, the change detector assumes that
             * the object instance identifies the node in the iterable.
             * When this function is supplied, the directive uses
             * the result of calling this function to identify the item node,
             * rather than the identity of the object itself.
             *
             * The function receives two inputs,
             * the iteration index and the node object ID.
             */set:function set(fn){if(i0.isDevMode()&&fn!=null&&typeof fn!=='function'){// TODO(vicb): use a log service once there is a public one available
if(console&&console.warn){console.warn("trackBy must be a function, but received "+JSON.stringify(fn)+". "+"See https://angular.io/api/common/NgForOf#change-propagation for more information.");}}this._trackByFn=fn;},enumerable:true,configurable:true});Object.defineProperty(NgForOf.prototype,"ngForTemplate",{/**
             * A reference to the template that is stamped out for each item in the iterable.
             * @see [template reference variable](guide/template-syntax#template-reference-variables--var-)
             */set:function set(value){// TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
// The current type is too restrictive; a template that just uses index, for example,
// should be acceptable.
if(value){this._template=value;}},enumerable:true,configurable:true});/**
         * Applies the changes when needed.
         */NgForOf.prototype.ngDoCheck=function(){if(this._ngForOfDirty){this._ngForOfDirty=false;// React on ngForOf changes only once all inputs have been initialized
var value=this._ngForOf;if(!this._differ&&value){try{this._differ=this._differs.find(value).create(this.ngForTrackBy);}catch(_a){throw new Error("Cannot find a differ supporting object '"+value+"' of type '"+getTypeName(value)+"'. NgFor only supports binding to Iterables such as Arrays.");}}}if(this._differ){var changes=this._differ.diff(this._ngForOf);if(changes)this._applyChanges(changes);}};NgForOf.prototype._applyChanges=function(changes){var _this=this;var insertTuples=[];changes.forEachOperation(function(item,adjustedPreviousIndex,currentIndex){if(item.previousIndex==null){// NgForOf is never "null" or "undefined" here because the differ detected
// that a new item needs to be inserted from the iterable. This implies that
// there is an iterable value for "_ngForOf".
var view=_this._viewContainer.createEmbeddedView(_this._template,new NgForOfContext(null,_this._ngForOf,-1,-1),currentIndex===null?undefined:currentIndex);var tuple=new RecordViewTuple(item,view);insertTuples.push(tuple);}else if(currentIndex==null){_this._viewContainer.remove(adjustedPreviousIndex===null?undefined:adjustedPreviousIndex);}else if(adjustedPreviousIndex!==null){var view=_this._viewContainer.get(adjustedPreviousIndex);_this._viewContainer.move(view,currentIndex);var tuple=new RecordViewTuple(item,view);insertTuples.push(tuple);}});for(var i=0;i<insertTuples.length;i++){this._perViewChange(insertTuples[i].view,insertTuples[i].record);}for(var i=0,ilen=this._viewContainer.length;i<ilen;i++){var viewRef=this._viewContainer.get(i);viewRef.context.index=i;viewRef.context.count=ilen;viewRef.context.ngForOf=this._ngForOf;}changes.forEachIdentityChange(function(record){var viewRef=_this._viewContainer.get(record.currentIndex);viewRef.context.$implicit=record.item;});};NgForOf.prototype._perViewChange=function(view,record){view.context.$implicit=record.item;};/**
         * Asserts the correct type of the context for the template that `NgForOf` will render.
         *
         * The presence of this method is a signal to the Ivy template type-check compiler that the
         * `NgForOf` structural directive renders its template with a specific context type.
         */NgForOf.ngTemplateContextGuard=function(dir,ctx){return true;};__decorate([i0.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgForOf.prototype,"ngForOf",null);__decorate([i0.Input(),__metadata("design:type",Function),__metadata("design:paramtypes",[Function])],NgForOf.prototype,"ngForTrackBy",null);__decorate([i0.Input(),__metadata("design:type",i0.TemplateRef),__metadata("design:paramtypes",[i0.TemplateRef])],NgForOf.prototype,"ngForTemplate",null);NgForOf=__decorate([i0.Directive({selector:'[ngFor][ngForOf]'}),__metadata("design:paramtypes",[i0.ViewContainerRef,i0.TemplateRef,i0.IterableDiffers])],NgForOf);return NgForOf;}();var RecordViewTuple=/** @class */function(){function RecordViewTuple(record,view){this.record=record;this.view=view;}return RecordViewTuple;}();function getTypeName(type){return type['name']||_typeof(type);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A structural directive that conditionally includes a template based on the value of
     * an expression coerced to Boolean.
     * When the expression evaluates to true, Angular renders the template
     * provided in a `then` clause, and when  false or null,
     * Angular renders the template provided in an optional `else` clause. The default
     * template for the `else` clause is blank.
     *
     * A [shorthand form](guide/structural-directives#the-asterisk--prefix) of the directive,
     * `*ngIf="condition"`, is generally used, provided
     * as an attribute of the anchor element for the inserted template.
     * Angular expands this into a more explicit version, in which the anchor element
     * is contained in an `<ng-template>` element.
     *
     * Simple form with shorthand syntax:
     *
     * ```
     * <div *ngIf="condition">Content to render when condition is true.</div>
     * ```
     *
     * Simple form with expanded syntax:
     *
     * ```
     * <ng-template [ngIf]="condition"><div>Content to render when condition is
     * true.</div></ng-template>
     * ```
     *
     * Form with an "else" block:
     *
     * ```
     * <div *ngIf="condition; else elseBlock">Content to render when condition is true.</div>
     * <ng-template #elseBlock>Content to render when condition is false.</ng-template>
     * ```
     *
     * Shorthand form with "then" and "else" blocks:
     *
     * ```
     * <div *ngIf="condition; then thenBlock else elseBlock"></div>
     * <ng-template #thenBlock>Content to render when condition is true.</ng-template>
     * <ng-template #elseBlock>Content to render when condition is false.</ng-template>
     * ```
     *
     * Form with storing the value locally:
     *
     * ```
     * <div *ngIf="condition as value; else elseBlock">{{value}}</div>
     * <ng-template #elseBlock>Content to render when value is null.</ng-template>
     * ```
     *
     * @usageNotes
     *
     * The `*ngIf` directive is most commonly used to conditionally show an inline template,
     * as seen in the following  example.
     * The default `else` template is blank.
     *
     * {@example common/ngIf/ts/module.ts region='NgIfSimple'}
     *
     * ### Showing an alternative template using `else`
     *
     * To display a template when `expression` evaluates to false, use an `else` template
     * binding as shown in the following example.
     * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.
     * The template can be defined anywhere in the component view, but is typically placed right after
     * `ngIf` for readability.
     *
     * {@example common/ngIf/ts/module.ts region='NgIfElse'}
     *
     * ### Using an external `then` template
     *
     * In the previous example, the then-clause template is specified inline, as the content of the
     * tag that contains the `ngIf` directive. You can also specify a template that is defined
     * externally, by referencing a labeled `<ng-template>` element. When you do this, you can
     * change which template to use at runtime, as shown in the following example.
     *
     * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}
     *
     * ### Storing a conditional result in a variable
     *
     * You might want to show a set of properties from the same object. If you are waiting
     * for asynchronous data, the object can be undefined.
     * In this case, you can use `ngIf` and store the result of the condition in a local
     * variable as shown in the the following example.
     *
     * {@example common/ngIf/ts/module.ts region='NgIfAs'}
     *
     * This code uses only one `AsyncPipe`, so only one subscription is created.
     * The conditional statement stores the result of `userStream|async` in the local variable `user`.
     * You can then bind the local `user` repeatedly.
     *
     * The conditional displays the data only if `userStream` returns a value,
     * so you don't need to use the
     * [safe-navigation-operator](guide/template-syntax#safe-navigation-operator) (`?.`)
     * to guard against null values when accessing properties.
     * You can display an alternative template while waiting for the data.
     *
     * ### Shorthand syntax
     *
     * The shorthand syntax `*ngIf` expands into two separate template specifications
     * for the "then" and "else" clauses. For example, consider the following shorthand statement,
     * that is meant to show a loading page while waiting for data to be loaded.
     *
     * ```
     * <div class="hero-list" *ngIf="heroes else loading">
     *  ...
     * </div>
     *
     * <ng-template #loading>
     *  <div>Loading...</div>
     * </ng-template>
     * ```
     *
     * You can see that the "else" clause references the `<ng-template>`
     * with the `#loading` label, and the template for the "then" clause
     * is provided as the content of the anchor element.
     *
     * However, when Angular expands the shorthand syntax, it creates
     * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.
     * The anchor element containing the template for the "then" clause becomes
     * the content of this unlabeled `<ng-template>` tag.
     *
     * ```
     * <ng-template [ngIf]="heroes" [ngIfElse]="loading">
     *  <div class="hero-list">
     *   ...
     *  </div>
     * </ng-template>
     *
     * <ng-template #loading>
     *  <div>Loading...</div>
     * </ng-template>
     * ```
     *
     * The presence of the implicit template object has implications for the nesting of
     * structural directives. For more on this subject, see
     * [Structural Directives](https://angular.io/guide/structural-directives#one-per-element).
     *
     * @ngModule CommonModule
     * @publicApi
     */var NgIf=/** @class */function(){function NgIf(_viewContainer,templateRef){this._viewContainer=_viewContainer;this._context=new NgIfContext();this._thenTemplateRef=null;this._elseTemplateRef=null;this._thenViewRef=null;this._elseViewRef=null;this._thenTemplateRef=templateRef;}Object.defineProperty(NgIf.prototype,"ngIf",{/**
             * The Boolean expression to evaluate as the condition for showing a template.
             */set:function set(condition){this._context.$implicit=this._context.ngIf=condition;this._updateView();},enumerable:true,configurable:true});Object.defineProperty(NgIf.prototype,"ngIfThen",{/**
             * A template to show if the condition expression evaluates to true.
             */set:function set(templateRef){assertTemplate('ngIfThen',templateRef);this._thenTemplateRef=templateRef;this._thenViewRef=null;// clear previous view if any.
this._updateView();},enumerable:true,configurable:true});Object.defineProperty(NgIf.prototype,"ngIfElse",{/**
             * A template to show if the condition expression evaluates to false.
             */set:function set(templateRef){assertTemplate('ngIfElse',templateRef);this._elseTemplateRef=templateRef;this._elseViewRef=null;// clear previous view if any.
this._updateView();},enumerable:true,configurable:true});NgIf.prototype._updateView=function(){if(this._context.$implicit){if(!this._thenViewRef){this._viewContainer.clear();this._elseViewRef=null;if(this._thenTemplateRef){this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context);}}}else{if(!this._elseViewRef){this._viewContainer.clear();this._thenViewRef=null;if(this._elseTemplateRef){this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context);}}}};/**
         * Asserts the correct type of the context for the template that `NgIf` will render.
         *
         * The presence of this method is a signal to the Ivy template type-check compiler that the
         * `NgIf` structural directive renders its template with a specific context type.
         */NgIf.ngTemplateContextGuard=function(dir,ctx){return true;};__decorate([i0.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgIf.prototype,"ngIf",null);__decorate([i0.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgIf.prototype,"ngIfThen",null);__decorate([i0.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgIf.prototype,"ngIfElse",null);NgIf=__decorate([i0.Directive({selector:'[ngIf]'}),__metadata("design:paramtypes",[i0.ViewContainerRef,i0.TemplateRef])],NgIf);return NgIf;}();/**
     * @publicApi
     */var NgIfContext=/** @class */function(){function NgIfContext(){this.$implicit=null;this.ngIf=null;}return NgIfContext;}();function assertTemplate(property,templateRef){var isTemplateRefOrNull=!!(!templateRef||templateRef.createEmbeddedView);if(!isTemplateRefOrNull){throw new Error(property+" must be a TemplateRef, but received '"+i0.ɵstringify(templateRef)+"'.");}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SwitchView=/** @class */function(){function SwitchView(_viewContainerRef,_templateRef){this._viewContainerRef=_viewContainerRef;this._templateRef=_templateRef;this._created=false;}SwitchView.prototype.create=function(){this._created=true;this._viewContainerRef.createEmbeddedView(this._templateRef);};SwitchView.prototype.destroy=function(){this._created=false;this._viewContainerRef.clear();};SwitchView.prototype.enforceState=function(created){if(created&&!this._created){this.create();}else if(!created&&this._created){this.destroy();}};return SwitchView;}();/**
     * @ngModule CommonModule
     *
     * @description
     * The `[ngSwitch]` directive on a container specifies an expression to match against.
     * The expressions to match are provided by `ngSwitchCase` directives on views within the container.
     * - Every view that matches is rendered.
     * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.
     * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`
     * or `ngSwitchDefault` directive are preserved at the location.
     *
     * @usageNotes
     * Define a container element for the directive, and specify the switch expression
     * to match against as an attribute:
     *
     * ```
     * <container-element [ngSwitch]="switch_expression">
     * ```
     *
     * Within the container, `*ngSwitchCase` statements specify the match expressions
     * as attributes. Include `*ngSwitchDefault` as the final case.
     *
     * ```
     * <container-element [ngSwitch]="switch_expression">
     *    <some-element *ngSwitchCase="match_expression_1">...</some-element>
     * ...
     *    <some-element *ngSwitchDefault>...</some-element>
     * </container-element>
     * ```
     *
     * ### Usage Examples
     *
     * The following example shows how to use more than one case to display the same view:
     *
     * ```
     * <container-element [ngSwitch]="switch_expression">
     *   <!-- the same view can be shown in more than one case -->
     *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
     *   <some-element *ngSwitchCase="match_expression_2">...</some-element>
     *   <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
     *   <!--default case when there are no matches -->
     *   <some-element *ngSwitchDefault>...</some-element>
     * </container-element>
     * ```
     *
     * The following example shows how cases can be nested:
     * ```
     * <container-element [ngSwitch]="switch_expression">
     *       <some-element *ngSwitchCase="match_expression_1">...</some-element>
     *       <some-element *ngSwitchCase="match_expression_2">...</some-element>
     *       <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
     *       <ng-container *ngSwitchCase="match_expression_3">
     *         <!-- use a ng-container to group multiple root nodes -->
     *         <inner-element></inner-element>
     *         <inner-other-element></inner-other-element>
     *       </ng-container>
     *       <some-element *ngSwitchDefault>...</some-element>
     *     </container-element>
     * ```
     *
     * @publicApi
     * @see `NgSwitchCase`
     * @see `NgSwitchDefault`
     * @see [Structural Directives](guide/structural-directives)
     *
     */var NgSwitch=/** @class */function(){function NgSwitch(){this._defaultUsed=false;this._caseCount=0;this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}Object.defineProperty(NgSwitch.prototype,"ngSwitch",{set:function set(newValue){this._ngSwitch=newValue;if(this._caseCount===0){this._updateDefaultCases(true);}},enumerable:true,configurable:true});/** @internal */NgSwitch.prototype._addCase=function(){return this._caseCount++;};/** @internal */NgSwitch.prototype._addDefault=function(view){if(!this._defaultViews){this._defaultViews=[];}this._defaultViews.push(view);};/** @internal */NgSwitch.prototype._matchCase=function(value){var matched=value==this._ngSwitch;this._lastCasesMatched=this._lastCasesMatched||matched;this._lastCaseCheckIndex++;if(this._lastCaseCheckIndex===this._caseCount){this._updateDefaultCases(!this._lastCasesMatched);this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}return matched;};NgSwitch.prototype._updateDefaultCases=function(useDefault){if(this._defaultViews&&useDefault!==this._defaultUsed){this._defaultUsed=useDefault;for(var i=0;i<this._defaultViews.length;i++){var defaultView=this._defaultViews[i];defaultView.enforceState(useDefault);}}};__decorate([i0.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgSwitch.prototype,"ngSwitch",null);NgSwitch=__decorate([i0.Directive({selector:'[ngSwitch]'})],NgSwitch);return NgSwitch;}();/**
     * @ngModule CommonModule
     *
     * @description
     * Provides a switch case expression to match against an enclosing `ngSwitch` expression.
     * When the expressions match, the given `NgSwitchCase` template is rendered.
     * If multiple match expressions match the switch expression value, all of them are displayed.
     *
     * @usageNotes
     *
     * Within a switch container, `*ngSwitchCase` statements specify the match expressions
     * as attributes. Include `*ngSwitchDefault` as the final case.
     *
     * ```
     * <container-element [ngSwitch]="switch_expression">
     *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
     *   ...
     *   <some-element *ngSwitchDefault>...</some-element>
     * </container-element>
     * ```
     *
     * Each switch-case statement contains an in-line HTML template or template reference
     * that defines the subtree to be selected if the value of the match expression
     * matches the value of the switch expression.
     *
     * Unlike JavaScript, which uses strict equality, Angular uses loose equality.
     * This means that the empty string, `""` matches 0.
     *
     * @publicApi
     * @see `NgSwitch`
     * @see `NgSwitchDefault`
     *
     */var NgSwitchCase=/** @class */function(){function NgSwitchCase(viewContainer,templateRef,ngSwitch){this.ngSwitch=ngSwitch;ngSwitch._addCase();this._view=new SwitchView(viewContainer,templateRef);}/**
         * Performs case matching. For internal use only.
         */NgSwitchCase.prototype.ngDoCheck=function(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));};__decorate([i0.Input(),__metadata("design:type",Object)],NgSwitchCase.prototype,"ngSwitchCase",void 0);NgSwitchCase=__decorate([i0.Directive({selector:'[ngSwitchCase]'}),__param(2,i0.Host()),__metadata("design:paramtypes",[i0.ViewContainerRef,i0.TemplateRef,NgSwitch])],NgSwitchCase);return NgSwitchCase;}();/**
     * @ngModule CommonModule
     *
     * @description
     *
     * Creates a view that is rendered when no `NgSwitchCase` expressions
     * match the `NgSwitch` expression.
     * This statement should be the final case in an `NgSwitch`.
     *
     * @publicApi
     * @see `NgSwitch`
     * @see `NgSwitchCase`
     *
     */var NgSwitchDefault=/** @class */function(){function NgSwitchDefault(viewContainer,templateRef,ngSwitch){ngSwitch._addDefault(new SwitchView(viewContainer,templateRef));}NgSwitchDefault=__decorate([i0.Directive({selector:'[ngSwitchDefault]'}),__param(2,i0.Host()),__metadata("design:paramtypes",[i0.ViewContainerRef,i0.TemplateRef,NgSwitch])],NgSwitchDefault);return NgSwitchDefault;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     *
     * @usageNotes
     * ```
     * <some-element [ngPlural]="value">
     *   <ng-template ngPluralCase="=0">there is nothing</ng-template>
     *   <ng-template ngPluralCase="=1">there is one</ng-template>
     *   <ng-template ngPluralCase="few">there are a few</ng-template>
     * </some-element>
     * ```
     *
     * @description
     *
     * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.
     *
     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees
     * that match the switch expression's pluralization category.
     *
     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute
     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their
     * expression:
     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value
     *   matches the switch expression exactly,
     * - otherwise, the view will be treated as a "category match", and will only display if exact
     *   value matches aren't found and the value maps to its category for the defined locale.
     *
     * See http://cldr.unicode.org/index/cldr-spec/plural-rules
     *
     * @publicApi
     */var NgPlural=/** @class */function(){function NgPlural(_localization){this._localization=_localization;this._caseViews={};}Object.defineProperty(NgPlural.prototype,"ngPlural",{set:function set(value){this._switchValue=value;this._updateView();},enumerable:true,configurable:true});NgPlural.prototype.addCase=function(value,switchView){this._caseViews[value]=switchView;};NgPlural.prototype._updateView=function(){this._clearViews();var cases=Object.keys(this._caseViews);var key=getPluralCategory(this._switchValue,cases,this._localization);this._activateView(this._caseViews[key]);};NgPlural.prototype._clearViews=function(){if(this._activeView)this._activeView.destroy();};NgPlural.prototype._activateView=function(view){if(view){this._activeView=view;this._activeView.create();}};__decorate([i0.Input(),__metadata("design:type",Number),__metadata("design:paramtypes",[Number])],NgPlural.prototype,"ngPlural",null);NgPlural=__decorate([i0.Directive({selector:'[ngPlural]'}),__metadata("design:paramtypes",[NgLocalization])],NgPlural);return NgPlural;}();/**
     * @ngModule CommonModule
     *
     * @description
     *
     * Creates a view that will be added/removed from the parent {@link NgPlural} when the
     * given expression matches the plural expression according to CLDR rules.
     *
     * @usageNotes
     * ```
     * <some-element [ngPlural]="value">
     *   <ng-template ngPluralCase="=0">...</ng-template>
     *   <ng-template ngPluralCase="other">...</ng-template>
     * </some-element>
     *```
     *
     * See {@link NgPlural} for more details and example.
     *
     * @publicApi
     */var NgPluralCase=/** @class */function(){function NgPluralCase(value,template,viewContainer,ngPlural){this.value=value;var isANumber=!isNaN(Number(value));ngPlural.addCase(isANumber?"="+value:value,new SwitchView(viewContainer,template));}NgPluralCase=__decorate([i0.Directive({selector:'[ngPluralCase]'}),__param(0,i0.Attribute('ngPluralCase')),__param(3,i0.Host()),__metadata("design:paramtypes",[String,i0.TemplateRef,i0.ViewContainerRef,NgPlural])],NgPluralCase);return NgPluralCase;}();/**
     * @ngModule CommonModule
     *
     * @usageNotes
     *
     * Set the font of the containing element to the result of an expression.
     *
     * ```
     * <some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
     * ```
     *
     * Set the width of the containing element to a pixel value returned by an expression.
     *
     * ```
     * <some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
     * ```
     *
     * Set a collection of style values using an expression that returns key-value pairs.
     *
     * ```
     * <some-element [ngStyle]="objExp">...</some-element>
     * ```
     *
     * @description
     *
     * An attribute directive that updates styles for the containing HTML element.
     * Sets one or more style properties, specified as colon-separated key-value pairs.
     * The key is a style name, with an optional `.<unit>` suffix
     * (such as 'top.px', 'font-style.em').
     * The value is an expression to be evaluated.
     * The resulting non-null value, expressed in the given unit,
     * is assigned to the given style property.
     * If the result of evaluation is null, the corresponding style is removed.
     *
     * @publicApi
     */var NgStyle=/** @class */function(){function NgStyle(_ngEl,_differs,_renderer){this._ngEl=_ngEl;this._differs=_differs;this._renderer=_renderer;this._ngStyle=null;this._differ=null;}Object.defineProperty(NgStyle.prototype,"ngStyle",{set:function set(values){this._ngStyle=values;if(!this._differ&&values){this._differ=this._differs.find(values).create();}},enumerable:true,configurable:true});NgStyle.prototype.ngDoCheck=function(){if(this._differ){var changes=this._differ.diff(this._ngStyle);if(changes){this._applyChanges(changes);}}};NgStyle.prototype._setStyle=function(nameAndUnit,value){var _a=__read(nameAndUnit.split('.'),2),name=_a[0],unit=_a[1];value=value!=null&&unit?""+value+unit:value;if(value!=null){this._renderer.setStyle(this._ngEl.nativeElement,name,value);}else{this._renderer.removeStyle(this._ngEl.nativeElement,name);}};NgStyle.prototype._applyChanges=function(changes){var _this=this;changes.forEachRemovedItem(function(record){return _this._setStyle(record.key,null);});changes.forEachAddedItem(function(record){return _this._setStyle(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this._setStyle(record.key,record.currentValue);});};__decorate([i0.Input('ngStyle'),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],NgStyle.prototype,"ngStyle",null);NgStyle=__decorate([i0.Directive({selector:'[ngStyle]'}),__metadata("design:paramtypes",[i0.ElementRef,i0.KeyValueDiffers,i0.Renderer2])],NgStyle);return NgStyle;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     *
     * @description
     *
     * Inserts an embedded view from a prepared `TemplateRef`.
     *
     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.
     * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding
     * by the local template `let` declarations.
     *
     * @usageNotes
     * ```
     * <ng-container *ngTemplateOutlet="templateRefExp; context: contextExp"></ng-container>
     * ```
     *
     * Using the key `$implicit` in the context object will set its value as default.
     *
     * ### Example
     *
     * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}
     *
     * @publicApi
     */var NgTemplateOutlet=/** @class */function(){function NgTemplateOutlet(_viewContainerRef){this._viewContainerRef=_viewContainerRef;this._viewRef=null;/**
             * A context object to attach to the {@link EmbeddedViewRef}. This should be an
             * object, the object's keys will be available for binding by the local template `let`
             * declarations.
             * Using the key `$implicit` in the context object will set its value as default.
             */this.ngTemplateOutletContext=null;/**
             * A string defining the template reference and optionally the context object for the template.
             */this.ngTemplateOutlet=null;}NgTemplateOutlet.prototype.ngOnChanges=function(changes){var recreateView=this._shouldRecreateView(changes);if(recreateView){var viewContainerRef=this._viewContainerRef;if(this._viewRef){viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));}this._viewRef=this.ngTemplateOutlet?viewContainerRef.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null;}else if(this._viewRef&&this.ngTemplateOutletContext){this._updateExistingContext(this.ngTemplateOutletContext);}};/**
         * We need to re-create existing embedded view if:
         * - templateRef has changed
         * - context has changes
         *
         * We mark context object as changed when the corresponding object
         * shape changes (new properties are added or existing properties are removed).
         * In other words we consider context with the same properties as "the same" even
         * if object reference changes (see https://github.com/angular/angular/issues/13407).
         */NgTemplateOutlet.prototype._shouldRecreateView=function(changes){var ctxChange=changes['ngTemplateOutletContext'];return!!changes['ngTemplateOutlet']||ctxChange&&this._hasContextShapeChanged(ctxChange);};NgTemplateOutlet.prototype._hasContextShapeChanged=function(ctxChange){var e_1,_a;var prevCtxKeys=Object.keys(ctxChange.previousValue||{});var currCtxKeys=Object.keys(ctxChange.currentValue||{});if(prevCtxKeys.length===currCtxKeys.length){try{for(var currCtxKeys_1=__values(currCtxKeys),currCtxKeys_1_1=currCtxKeys_1.next();!currCtxKeys_1_1.done;currCtxKeys_1_1=currCtxKeys_1.next()){var propName=currCtxKeys_1_1.value;if(prevCtxKeys.indexOf(propName)===-1){return true;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(currCtxKeys_1_1&&!currCtxKeys_1_1.done&&(_a=currCtxKeys_1["return"]))_a.call(currCtxKeys_1);}finally{if(e_1)throw e_1.error;}}return false;}return true;};NgTemplateOutlet.prototype._updateExistingContext=function(ctx){var e_2,_a;try{for(var _b=__values(Object.keys(ctx)),_c=_b.next();!_c.done;_c=_b.next()){var propName=_c.value;this._viewRef.context[propName]=this.ngTemplateOutletContext[propName];}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_2)throw e_2.error;}}};__decorate([i0.Input(),__metadata("design:type",Object)],NgTemplateOutlet.prototype,"ngTemplateOutletContext",void 0);__decorate([i0.Input(),__metadata("design:type",Object)],NgTemplateOutlet.prototype,"ngTemplateOutlet",void 0);NgTemplateOutlet=__decorate([i0.Directive({selector:'[ngTemplateOutlet]'}),__metadata("design:paramtypes",[i0.ViewContainerRef])],NgTemplateOutlet);return NgTemplateOutlet;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A collection of Angular directives that are likely to be used in each and every Angular
     * application.
     */var COMMON_DIRECTIVES=[NgClass,NgComponentOutlet,NgForOf,NgIf,NgTemplateOutlet,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgPlural,NgPluralCase];/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function invalidPipeArgumentError(type,value){return Error("InvalidPipeArgument: '"+value+"' for pipe '"+i0.ɵstringify(type)+"'");}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ObservableStrategy=/** @class */function(){function ObservableStrategy(){}ObservableStrategy.prototype.createSubscription=function(async,updateLatestValue){return async.subscribe({next:updateLatestValue,error:function error(e){throw e;}});};ObservableStrategy.prototype.dispose=function(subscription){subscription.unsubscribe();};ObservableStrategy.prototype.onDestroy=function(subscription){subscription.unsubscribe();};return ObservableStrategy;}();var PromiseStrategy=/** @class */function(){function PromiseStrategy(){}PromiseStrategy.prototype.createSubscription=function(async,updateLatestValue){return async.then(updateLatestValue,function(e){throw e;});};PromiseStrategy.prototype.dispose=function(subscription){};PromiseStrategy.prototype.onDestroy=function(subscription){};return PromiseStrategy;}();var _promiseStrategy=new PromiseStrategy();var _observableStrategy=new ObservableStrategy();/**
     * @ngModule CommonModule
     * @description
     *
     * Unwraps a value from an asynchronous primitive.
     *
     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has
     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for
     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid
     * potential memory leaks.
     *
     * @usageNotes
     *
     * ### Examples
     *
     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the
     * promise.
     *
     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}
     *
     * It's also possible to use `async` with Observables. The example below binds the `time` Observable
     * to the view. The Observable continuously updates the view with the current time.
     *
     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}
     *
     * @publicApi
     */var AsyncPipe=/** @class */function(){function AsyncPipe(_ref){this._ref=_ref;this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;this._strategy=null;}AsyncPipe_1=AsyncPipe;AsyncPipe.prototype.ngOnDestroy=function(){if(this._subscription){this._dispose();}};AsyncPipe.prototype.transform=function(obj){if(!this._obj){if(obj){this._subscribe(obj);}this._latestReturnedValue=this._latestValue;return this._latestValue;}if(obj!==this._obj){this._dispose();return this.transform(obj);}if(i0.ɵlooseIdentical(this._latestValue,this._latestReturnedValue)){return this._latestReturnedValue;}this._latestReturnedValue=this._latestValue;return i0.WrappedValue.wrap(this._latestValue);};AsyncPipe.prototype._subscribe=function(obj){var _this=this;this._obj=obj;this._strategy=this._selectStrategy(obj);this._subscription=this._strategy.createSubscription(obj,function(value){return _this._updateLatestValue(obj,value);});};AsyncPipe.prototype._selectStrategy=function(obj){if(i0.ɵisPromise(obj)){return _promiseStrategy;}if(i0.ɵisObservable(obj)){return _observableStrategy;}throw invalidPipeArgumentError(AsyncPipe_1,obj);};AsyncPipe.prototype._dispose=function(){this._strategy.dispose(this._subscription);this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;};AsyncPipe.prototype._updateLatestValue=function(async,value){if(async===this._obj){this._latestValue=value;this._ref.markForCheck();}};var AsyncPipe_1;AsyncPipe=AsyncPipe_1=__decorate([i0.Pipe({name:'async',pure:false}),__metadata("design:paramtypes",[i0.ChangeDetectorRef])],AsyncPipe);return AsyncPipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Transforms text to all lower case.
     *
     * @see `UpperCasePipe`
     * @see `TitleCasePipe`
     * @usageNotes
     *
     * The following example defines a view that allows the user to enter
     * text, and then uses the pipe to convert the input text to all lower case.
     *
     * <code-example path="common/pipes/ts/lowerupper_pipe.ts" region='LowerUpperPipe'></code-example>
     *
     * @ngModule CommonModule
     * @publicApi
     */var LowerCasePipe=/** @class */function(){function LowerCasePipe(){}LowerCasePipe_1=LowerCasePipe;/**
         * @param value The string to transform to lower case.
         */LowerCasePipe.prototype.transform=function(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(LowerCasePipe_1,value);}return value.toLowerCase();};var LowerCasePipe_1;LowerCasePipe=LowerCasePipe_1=__decorate([i0.Pipe({name:'lowercase'})],LowerCasePipe);return LowerCasePipe;}();//
// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result
// can be achieved by using /\p{L}\S*/gu and also known as Unicode Property Escapes
// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no
// transpilation of this functionality down to ES5 without external tool, the only solution is
// to use already transpiled form. Example can be found here -
// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1
//
var unicodeWordMatch=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;/**
     * Transforms text to title case.
     * Capitalizes the first letter of each word and transforms the
     * rest of the word to lower case.
     * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.
     *
     * @see `LowerCasePipe`
     * @see `UpperCasePipe`
     *
     * @usageNotes
     * The following example shows the result of transforming various strings into title case.
     *
     * <code-example path="common/pipes/ts/titlecase_pipe.ts" region='TitleCasePipe'></code-example>
     *
     * @ngModule CommonModule
     * @publicApi
     */var TitleCasePipe=/** @class */function(){function TitleCasePipe(){}TitleCasePipe_1=TitleCasePipe;/**
         * @param value The string to transform to title case.
         */TitleCasePipe.prototype.transform=function(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(TitleCasePipe_1,value);}return value.replace(unicodeWordMatch,function(txt){return txt[0].toUpperCase()+txt.substr(1).toLowerCase();});};var TitleCasePipe_1;TitleCasePipe=TitleCasePipe_1=__decorate([i0.Pipe({name:'titlecase'})],TitleCasePipe);return TitleCasePipe;}();/**
     * Transforms text to all upper case.
     * @see `LowerCasePipe`
     * @see `TitleCasePipe`
     *
     * @ngModule CommonModule
     * @publicApi
     */var UpperCasePipe=/** @class */function(){function UpperCasePipe(){}UpperCasePipe_1=UpperCasePipe;/**
         * @param value The string to transform to upper case.
         */UpperCasePipe.prototype.transform=function(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(UpperCasePipe_1,value);}return value.toUpperCase();};var UpperCasePipe_1;UpperCasePipe=UpperCasePipe_1=__decorate([i0.Pipe({name:'uppercase'})],UpperCasePipe);return UpperCasePipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // clang-format off
/**
     * @ngModule CommonModule
     * @description
     *
     * Formats a date value according to locale rules.
     *
     * Only the `en-US` locale data comes with Angular. To localize dates
     * in another language, you must import the corresponding locale data.
     * See the [I18n guide](guide/i18n#i18n-pipes) for more information.
     *
     * @see `formatDate()`
     *
     *
     * @usageNotes
     *
     * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to
     * reformat the date on every change-detection cycle, treat the date as an immutable object
     * and change the reference when the pipe needs to run again.
     *
     * ### Pre-defined format options
     *
     * Examples are given in `en-US` locale.
     *
     * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).
     * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).
     * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM
     * GMT+1`).
     * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at
     * 9:03:01 AM GMT+01:00`).
     * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).
     * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).
     * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).
     * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).
     * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).
     * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).
     * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).
     * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).
     *
     * ### Custom format options
     *
     * You can construct a format string using symbols to specify the components
     * of a date-time value, as described in the following table.
     * Format details depend on the locale.
     * Fields marked with (*) are only available in the extra data set for the given locale.
     *
     *  | Field type         | Format      | Description                                                   | Example Value                                              |
     *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|
     *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |
     *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |
     *  |                    | GGGGG       | Narrow                                                        | A                                                          |
     *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |
     *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |
     *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |
     *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |
     *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |
     *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
     *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |
     *  |                    | MMMM        | Wide                                                          | September                                                  |
     *  |                    | MMMMM       | Narrow                                                        | S                                                          |
     *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |
     *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |
     *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |
     *  |                    | LLLL        | Wide                                                          | September                                                  |
     *  |                    | LLLLL       | Narrow                                                        | S                                                          |
     *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |
     *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |
     *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |
     *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |
     *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |
     *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |
     *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |
     *  |                    | EEEEE       | Narrow                                                        | T                                                          |
     *  |                    | EEEEEE      | Short                                                         | Tu                                                         |
     *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |
     *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |
     *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |
     *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |
     *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
     *  |                    | BBBBB       | Narrow                                                        | md                                                         |
     *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |
     *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |
     *  |                    | bbbbb       | Narrow                                                        | md                                                         |
     *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |
     *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |
     *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |
     *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |
     *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |
     *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |
     *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |
     *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |
     *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |
     *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |
     *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |
     *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |
     *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |
     *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |
     *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |
     *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |
     *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |
     *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |
     *
     * Note that timezone correction is not applied to an ISO string that has no time component, such as "2016-09-19"
     *
     * ### Format examples
     *
     * These examples transform a date into various formats,
     * assuming that `dateObj` is a JavaScript `Date` object for
     * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,
     * given in the local time for the `en-US` locale.
     *
     * ```
     * {{ dateObj | date }}               // output is 'Jun 15, 2015'
     * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'
     * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'
     * {{ dateObj | date:'mm:ss' }}       // output is '43:11'
     * ```
     *
     * ### Usage example
     *
     * The following component uses a date pipe to display the current date in different formats.
     *
     * ```
     * @Component({
     *  selector: 'date-pipe',
     *  template: `<div>
     *    <p>Today is {{today | date}}</p>
     *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>
     *    <p>The time is {{today | date:'h:mm a z'}}</p>
     *  </div>`
     * })
     * // Get the current date and time as a date-time value.
     * export class DatePipeComponent {
     *   today: number = Date.now();
     * }
     * ```
     *
     * @publicApi
     */ // clang-format on
var DatePipe=/** @class */function(){function DatePipe(locale){this.locale=locale;}DatePipe_1=DatePipe;/**
         * @param value The date expression: a `Date` object,  a number
         * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).
         * @param format The date/time components to include, using predefined options or a
         * custom format string.
         * @param timezone A timezone offset (such as `'+0430'`), or a standard
         * UTC/GMT or continental US timezone abbreviation.
         * When not supplied, uses the end-user's local system timezone.
         * @param locale A locale code for the locale format rules to use.
         * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
         * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
         * @returns A date string in the desired format.
         */DatePipe.prototype.transform=function(value,format,timezone,locale){if(format===void 0){format='mediumDate';}if(value==null||value===''||value!==value)return null;try{return formatDate(value,format,locale||this.locale,timezone);}catch(error){throw invalidPipeArgumentError(DatePipe_1,error.message);}};var DatePipe_1;DatePipe=DatePipe_1=__decorate([i0.Pipe({name:'date',pure:true}),__param(0,i0.Inject(i0.LOCALE_ID)),__metadata("design:paramtypes",[String])],DatePipe);return DatePipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _INTERPOLATION_REGEXP=/#/g;/**
     * @ngModule CommonModule
     * @description
     *
     * Maps a value to a string that pluralizes the value according to locale rules.
     *
     * @usageNotes
     *
     * ### Example
     *
     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}
     *
     * @publicApi
     */var I18nPluralPipe=/** @class */function(){function I18nPluralPipe(_localization){this._localization=_localization;}I18nPluralPipe_1=I18nPluralPipe;/**
         * @param value the number to be formatted
         * @param pluralMap an object that mimics the ICU format, see
         * http://userguide.icu-project.org/formatparse/messages.
         * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by
         * default).
         */I18nPluralPipe.prototype.transform=function(value,pluralMap,locale){if(value==null)return'';if(_typeof(pluralMap)!=='object'||pluralMap===null){throw invalidPipeArgumentError(I18nPluralPipe_1,pluralMap);}var key=getPluralCategory(value,Object.keys(pluralMap),this._localization,locale);return pluralMap[key].replace(_INTERPOLATION_REGEXP,value.toString());};var I18nPluralPipe_1;I18nPluralPipe=I18nPluralPipe_1=__decorate([i0.Pipe({name:'i18nPlural',pure:true}),__metadata("design:paramtypes",[NgLocalization])],I18nPluralPipe);return I18nPluralPipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     * @description
     *
     * Generic selector that displays the string that matches the current value.
     *
     * If none of the keys of the `mapping` match the `value`, then the content
     * of the `other` key is returned when present, otherwise an empty string is returned.
     *
     * @usageNotes
     *
     * ### Example
     *
     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}
     *
     * @publicApi
     */var I18nSelectPipe=/** @class */function(){function I18nSelectPipe(){}I18nSelectPipe_1=I18nSelectPipe;/**
         * @param value a string to be internationalized.
         * @param mapping an object that indicates the text that should be displayed
         * for different values of the provided `value`.
         */I18nSelectPipe.prototype.transform=function(value,mapping){if(value==null)return'';if(_typeof(mapping)!=='object'||typeof value!=='string'){throw invalidPipeArgumentError(I18nSelectPipe_1,mapping);}if(mapping.hasOwnProperty(value)){return mapping[value];}if(mapping.hasOwnProperty('other')){return mapping['other'];}return'';};var I18nSelectPipe_1;I18nSelectPipe=I18nSelectPipe_1=__decorate([i0.Pipe({name:'i18nSelect',pure:true})],I18nSelectPipe);return I18nSelectPipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     * @description
     *
     * Converts a value into its JSON-format representation.  Useful for debugging.
     *
     * @usageNotes
     *
     * The following component uses a JSON pipe to convert an object
     * to JSON format, and displays the string in both formats for comparison.
     *
     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}
     *
     * @publicApi
     */var JsonPipe=/** @class */function(){function JsonPipe(){}/**
         * @param value A value of any type to convert into a JSON-format string.
         */JsonPipe.prototype.transform=function(value){return JSON.stringify(value,null,2);};JsonPipe=__decorate([i0.Pipe({name:'json',pure:false})],JsonPipe);return JsonPipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function makeKeyValuePair(key,value){return{key:key,value:value};}/**
     * @ngModule CommonModule
     * @description
     *
     * Transforms Object or Map into an array of key value pairs.
     *
     * The output array will be ordered by keys.
     * By default the comparator will be by Unicode point value.
     * You can optionally pass a compareFn if your keys are complex types.
     *
     * @usageNotes
     * ### Examples
     *
     * This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue
     * pipe.
     *
     * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}
     *
     * @publicApi
     */var KeyValuePipe=/** @class */function(){function KeyValuePipe(differs){this.differs=differs;this.keyValues=[];}KeyValuePipe.prototype.transform=function(input,compareFn){var _this=this;if(compareFn===void 0){compareFn=defaultComparator;}if(!input||!(input instanceof Map)&&_typeof(input)!=='object'){return null;}if(!this.differ){// make a differ for whatever type we've been passed in
this.differ=this.differs.find(input).create();}var differChanges=this.differ.diff(input);if(differChanges){this.keyValues=[];differChanges.forEachItem(function(r){_this.keyValues.push(makeKeyValuePair(r.key,r.currentValue));});this.keyValues.sort(compareFn);}return this.keyValues;};KeyValuePipe=__decorate([i0.Pipe({name:'keyvalue',pure:false}),__metadata("design:paramtypes",[i0.KeyValueDiffers])],KeyValuePipe);return KeyValuePipe;}();function defaultComparator(keyValueA,keyValueB){var a=keyValueA.key;var b=keyValueB.key;// if same exit with 0;
if(a===b)return 0;// make sure that undefined are at the end of the sort.
if(a===undefined)return 1;if(b===undefined)return-1;// make sure that nulls are at the end of the sort.
if(a===null)return 1;if(b===null)return-1;if(typeof a=='string'&&typeof b=='string'){return a<b?-1:1;}if(typeof a=='number'&&typeof b=='number'){return a-b;}if(typeof a=='boolean'&&typeof b=='boolean'){return a<b?-1:1;}// `a` and `b` are of different types. Compare their string values.
var aString=String(a);var bString=String(b);return aString==bString?0:aString<bString?-1:1;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     * @description
     *
     * Transforms a number into a string,
     * formatted according to locale rules that determine group sizing and
     * separator, decimal-point character, and other locale-specific
     * configurations.
     *
     * If no parameters are specified, the function rounds off to the nearest value using this
     * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).
     * The behavior differs from that of the JavaScript ```Math.round()``` function.
     * In the following case for example, the pipe rounds down where
     * ```Math.round()``` rounds up:
     *
     * ```html
     * -2.5 | number:'1.0-0'
     * > -3
     * Math.round(-2.5)
     * > -2
     * ```
     *
     * @see `formatNumber()`
     *
     * @usageNotes
     * The following code shows how the pipe transforms numbers
     * into text strings, according to various format specifications,
     * where the caller's default locale is `en-US`.
     *
     * ### Example
     *
     * <code-example path="common/pipes/ts/number_pipe.ts" region='NumberPipe'></code-example>
     *
     * @publicApi
     */var DecimalPipe=/** @class */function(){function DecimalPipe(_locale){this._locale=_locale;}DecimalPipe_1=DecimalPipe;/**
         * @param value The number to be formatted.
         * @param digitsInfo Decimal representation options, specified by a string
         * in the following format:<br>
         * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
         *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
         * Default is `1`.
         *   - `minFractionDigits`: The minimum number of digits after the decimal point.
         * Default is `0`.
         *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
         * Default is `3`.
         * @param locale A locale code for the locale format rules to use.
         * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
         * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
         */DecimalPipe.prototype.transform=function(value,digitsInfo,locale){if(isEmpty(value))return null;locale=locale||this._locale;try{var num=strToNumber(value);return formatNumber(num,locale,digitsInfo);}catch(error){throw invalidPipeArgumentError(DecimalPipe_1,error.message);}};var DecimalPipe_1;DecimalPipe=DecimalPipe_1=__decorate([i0.Pipe({name:'number'}),__param(0,i0.Inject(i0.LOCALE_ID)),__metadata("design:paramtypes",[String])],DecimalPipe);return DecimalPipe;}();/**
     * @ngModule CommonModule
     * @description
     *
     * Transforms a number to a percentage
     * string, formatted according to locale rules that determine group sizing and
     * separator, decimal-point character, and other locale-specific
     * configurations.
     *
     * @see `formatPercent()`
     *
     * @usageNotes
     * The following code shows how the pipe transforms numbers
     * into text strings, according to various format specifications,
     * where the caller's default locale is `en-US`.
     *
     * <code-example path="common/pipes/ts/percent_pipe.ts" region='PercentPipe'></code-example>
     *
     * @publicApi
     */var PercentPipe=/** @class */function(){function PercentPipe(_locale){this._locale=_locale;}PercentPipe_1=PercentPipe;/**
         *
         * @param value The number to be formatted as a percentage.
         * @param digitsInfo Decimal representation options, specified by a string
         * in the following format:<br>
         * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
         *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
         * Default is `1`.
         *   - `minFractionDigits`: The minimum number of digits after the decimal point.
         * Default is `0`.
         *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
         * Default is `0`.
         * @param locale A locale code for the locale format rules to use.
         * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
         * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
         */PercentPipe.prototype.transform=function(value,digitsInfo,locale){if(isEmpty(value))return null;locale=locale||this._locale;try{var num=strToNumber(value);return formatPercent(num,locale,digitsInfo);}catch(error){throw invalidPipeArgumentError(PercentPipe_1,error.message);}};var PercentPipe_1;PercentPipe=PercentPipe_1=__decorate([i0.Pipe({name:'percent'}),__param(0,i0.Inject(i0.LOCALE_ID)),__metadata("design:paramtypes",[String])],PercentPipe);return PercentPipe;}();/**
     * @ngModule CommonModule
     * @description
     *
     * Transforms a number to a currency string, formatted according to locale rules
     * that determine group sizing and separator, decimal-point character,
     * and other locale-specific configurations.
     *
     * {@a currency-code-deprecation}
     * <div class="alert is-helpful">
     *
     * **Deprecation notice:**
     *
     * The default currency code is currently always `USD` but this is deprecated from v9.
     *
     * **In v11 the default currency code will be taken from the current locale identified by
     * the `LOCAL_ID` token. See the [i18n guide](guide/i18n#setting-up-the-locale-of-your-app) for
     * more information.**
     *
     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in
     * your application `NgModule`:
     *
     * ```ts
     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}
     * ```
     *
     * </div>
     *
     * @see `getCurrencySymbol()`
     * @see `formatCurrency()`
     *
     * @usageNotes
     * The following code shows how the pipe transforms numbers
     * into text strings, according to various format specifications,
     * where the caller's default locale is `en-US`.
     *
     * <code-example path="common/pipes/ts/currency_pipe.ts" region='CurrencyPipe'></code-example>
     *
     * @publicApi
     */var CurrencyPipe=/** @class */function(){function CurrencyPipe(_locale,_defaultCurrencyCode){if(_defaultCurrencyCode===void 0){_defaultCurrencyCode='USD';}this._locale=_locale;this._defaultCurrencyCode=_defaultCurrencyCode;}CurrencyPipe_1=CurrencyPipe;/**
         *
         * @param value The number to be formatted as currency.
         * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,
         * such as `USD` for the US dollar and `EUR` for the euro. The default currency code can be
         * configured using the `DEFAULT_CURRENCY_CODE` injection token.
         * @param display The format for the currency indicator. One of the following:
         *   - `code`: Show the code (such as `USD`).
         *   - `symbol`(default): Show the symbol (such as `$`).
         *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their
         * currency.
         * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the
         * locale has no narrow symbol, uses the standard symbol for the locale.
         *   - String: Use the given string value instead of a code or a symbol.
         * For example, an empty string will suppress the currency & symbol.
         *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.
         *
         * @param digitsInfo Decimal representation options, specified by a string
         * in the following format:<br>
         * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.
         *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.
         * Default is `1`.
         *   - `minFractionDigits`: The minimum number of digits after the decimal point.
         * Default is `2`.
         *   - `maxFractionDigits`: The maximum number of digits after the decimal point.
         * Default is `2`.
         * If not provided, the number will be formatted with the proper amount of digits,
         * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.
         * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.
         * @param locale A locale code for the locale format rules to use.
         * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.
         * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).
         */CurrencyPipe.prototype.transform=function(value,currencyCode,display,digitsInfo,locale){if(display===void 0){display='symbol';}if(isEmpty(value))return null;locale=locale||this._locale;if(typeof display==='boolean'){if(console&&console.warn){console.warn("Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".");}display=display?'symbol':'code';}var currency=currencyCode||this._defaultCurrencyCode;if(display!=='code'){if(display==='symbol'||display==='symbol-narrow'){currency=getCurrencySymbol(currency,display==='symbol'?'wide':'narrow',locale);}else{currency=display;}}try{var num=strToNumber(value);return formatCurrency(num,locale,currency,currencyCode,digitsInfo);}catch(error){throw invalidPipeArgumentError(CurrencyPipe_1,error.message);}};var CurrencyPipe_1;CurrencyPipe=CurrencyPipe_1=__decorate([i0.Pipe({name:'currency'}),__param(0,i0.Inject(i0.LOCALE_ID)),__param(1,i0.Inject(i0.DEFAULT_CURRENCY_CODE)),__metadata("design:paramtypes",[String,String])],CurrencyPipe);return CurrencyPipe;}();function isEmpty(value){return value==null||value===''||value!==value;}/**
     * Transforms a string into a number (if needed).
     */function strToNumber(value){// Convert strings to numbers
if(typeof value==='string'&&!isNaN(Number(value)-parseFloat(value))){return Number(value);}if(typeof value!=='number'){throw new Error(value+" is not a number");}return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @ngModule CommonModule
     * @description
     *
     * Creates a new `Array` or `String` containing a subset (slice) of the elements.
     *
     * @usageNotes
     *
     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`
     * and `String.prototype.slice()`.
     *
     * When operating on an `Array`, the returned `Array` is always a copy even when all
     * the elements are being returned.
     *
     * When operating on a blank value, the pipe returns the blank value.
     *
     * ### List Example
     *
     * This `ngFor` example:
     *
     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}
     *
     * produces the following:
     *
     * ```html
     * <li>b</li>
     * <li>c</li>
     * ```
     *
     * ### String Examples
     *
     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}
     *
     * @publicApi
     */var SlicePipe=/** @class */function(){function SlicePipe(){}SlicePipe_1=SlicePipe;SlicePipe.prototype.transform=function(value,start,end){if(value==null)return value;if(!this.supports(value)){throw invalidPipeArgumentError(SlicePipe_1,value);}return value.slice(start,end);};SlicePipe.prototype.supports=function(obj){return typeof obj==='string'||Array.isArray(obj);};var SlicePipe_1;SlicePipe=SlicePipe_1=__decorate([i0.Pipe({name:'slice',pure:false})],SlicePipe);return SlicePipe;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A collection of Angular pipes that are likely to be used in each and every application.
     */var COMMON_PIPES=[AsyncPipe,UpperCasePipe,LowerCasePipe,JsonPipe,SlicePipe,DecimalPipe,PercentPipe,TitleCasePipe,CurrencyPipe,DatePipe,I18nPluralPipe,I18nSelectPipe,KeyValuePipe];/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Note: This does not contain the location providers,
// as they need some platform specific implementations to work.
/**
     * Exports all the basic Angular directives and pipes,
     * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.
     * Re-exported by `BrowserModule`, which is included automatically in the root
     * `AppModule` when you create a new app with the CLI `new` command.
     *
     * * The `providers` options configure the NgModule's injector to provide
     * localization dependencies to members.
     * * The `exports` options make the declared directives and pipes available for import
     * by other NgModules.
     *
     * @publicApi
     */var CommonModule=/** @class */function(){function CommonModule(){}CommonModule=__decorate([i0.NgModule({declarations:[COMMON_DIRECTIVES,COMMON_PIPES],exports:[COMMON_DIRECTIVES,COMMON_PIPES],providers:[{provide:NgLocalization,useClass:NgLocaleLocalization}]})],CommonModule);return CommonModule;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var PLATFORM_BROWSER_ID='browser';var PLATFORM_SERVER_ID='server';var PLATFORM_WORKER_APP_ID='browserWorkerApp';var PLATFORM_WORKER_UI_ID='browserWorkerUi';/**
     * Returns whether a platform id represents a browser platform.
     * @publicApi
     */function isPlatformBrowser(platformId){return platformId===PLATFORM_BROWSER_ID;}/**
     * Returns whether a platform id represents a server platform.
     * @publicApi
     */function isPlatformServer(platformId){return platformId===PLATFORM_SERVER_ID;}/**
     * Returns whether a platform id represents a web worker app platform.
     * @publicApi
     */function isPlatformWorkerApp(platformId){return platformId===PLATFORM_WORKER_APP_ID;}/**
     * Returns whether a platform id represents a web worker UI platform.
     * @publicApi
     */function isPlatformWorkerUi(platformId){return platformId===PLATFORM_WORKER_UI_ID;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var VERSION=new i0.Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.
     *
     * @publicApi
     */var ViewportScroller=/** @class */function(){function ViewportScroller(){}// De-sugared tree-shakable injection
// See #23917
/** @nocollapse */ViewportScroller.ɵprov=i0.ɵɵdefineInjectable({token:ViewportScroller,providedIn:'root',factory:function factory(){return new BrowserViewportScroller(i0.ɵɵinject(DOCUMENT),window,i0.ɵɵinject(i0.ErrorHandler));}});return ViewportScroller;}();/**
     * Manages the scroll position for a browser window.
     */var BrowserViewportScroller=/** @class */function(){function BrowserViewportScroller(document,window,errorHandler){this.document=document;this.window=window;this.errorHandler=errorHandler;this.offset=function(){return[0,0];};}/**
         * Configures the top offset used when scrolling to an anchor.
         * @param offset A position in screen coordinates (a tuple with x and y values)
         * or a function that returns the top offset position.
         *
         */BrowserViewportScroller.prototype.setOffset=function(offset){if(Array.isArray(offset)){this.offset=function(){return offset;};}else{this.offset=offset;}};/**
         * Retrieves the current scroll position.
         * @returns The position in screen coordinates.
         */BrowserViewportScroller.prototype.getScrollPosition=function(){if(this.supportScrollRestoration()){return[this.window.scrollX,this.window.scrollY];}else{return[0,0];}};/**
         * Sets the scroll position.
         * @param position The new position in screen coordinates.
         */BrowserViewportScroller.prototype.scrollToPosition=function(position){if(this.supportScrollRestoration()){this.window.scrollTo(position[0],position[1]);}};/**
         * Scrolls to an anchor element.
         * @param anchor The ID of the anchor element.
         */BrowserViewportScroller.prototype.scrollToAnchor=function(anchor){if(this.supportScrollRestoration()){// Escape anything passed to `querySelector` as it can throw errors and stop the application
// from working if invalid values are passed.
if(this.window.CSS&&this.window.CSS.escape){anchor=this.window.CSS.escape(anchor);}else{anchor=anchor.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g,'\\$1');}try{var elSelectedById=this.document.querySelector("#"+anchor);if(elSelectedById){this.scrollToElement(elSelectedById);return;}var elSelectedByName=this.document.querySelector("[name='"+anchor+"']");if(elSelectedByName){this.scrollToElement(elSelectedByName);return;}}catch(e){this.errorHandler.handleError(e);}}};/**
         * Disables automatic scroll restoration provided by the browser.
         */BrowserViewportScroller.prototype.setHistoryScrollRestoration=function(scrollRestoration){if(this.supportScrollRestoration()){var history_1=this.window.history;if(history_1&&history_1.scrollRestoration){history_1.scrollRestoration=scrollRestoration;}}};BrowserViewportScroller.prototype.scrollToElement=function(el){var rect=el.getBoundingClientRect();var left=rect.left+this.window.pageXOffset;var top=rect.top+this.window.pageYOffset;var offset=this.offset();this.window.scrollTo(left-offset[0],top-offset[1]);};/**
         * We only support scroll restoration when we can get a hold of window.
         * This means that we do not support this behavior when running in a web worker.
         *
         * Lifting this restriction right now would require more changes in the dom adapter.
         * Since webworkers aren't widely used, we will lift it once RouterScroller is
         * battle-tested.
         */BrowserViewportScroller.prototype.supportScrollRestoration=function(){try{return!!this.window&&!!this.window.scrollTo;}catch(_a){return false;}};return BrowserViewportScroller;}();/**
     * Provides an empty implementation of the viewport scroller. This will
     * live in @angular/common as it will be used by both platform-server and platform-webworker.
     */var NullViewportScroller=/** @class */function(){function NullViewportScroller(){}/**
         * Empty implementation
         */NullViewportScroller.prototype.setOffset=function(offset){};/**
         * Empty implementation
         */NullViewportScroller.prototype.getScrollPosition=function(){return[0,0];};/**
         * Empty implementation
         */NullViewportScroller.prototype.scrollToPosition=function(position){};/**
         * Empty implementation
         */NullViewportScroller.prototype.scrollToAnchor=function(anchor){};/**
         * Empty implementation
         */NullViewportScroller.prototype.setHistoryScrollRestoration=function(scrollRestoration){};return NullViewportScroller;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */exports.APP_BASE_HREF=APP_BASE_HREF;exports.AsyncPipe=AsyncPipe;exports.CommonModule=CommonModule;exports.CurrencyPipe=CurrencyPipe;exports.DOCUMENT=DOCUMENT;exports.DatePipe=DatePipe;exports.DecimalPipe=DecimalPipe;exports.HashLocationStrategy=HashLocationStrategy;exports.I18nPluralPipe=I18nPluralPipe;exports.I18nSelectPipe=I18nSelectPipe;exports.JsonPipe=JsonPipe;exports.KeyValuePipe=KeyValuePipe;exports.LOCATION_INITIALIZED=LOCATION_INITIALIZED;exports.Location=Location;exports.LocationStrategy=LocationStrategy;exports.LowerCasePipe=LowerCasePipe;exports.NgClass=NgClass;exports.NgComponentOutlet=NgComponentOutlet;exports.NgForOf=NgForOf;exports.NgForOfContext=NgForOfContext;exports.NgIf=NgIf;exports.NgIfContext=NgIfContext;exports.NgLocaleLocalization=NgLocaleLocalization;exports.NgLocalization=NgLocalization;exports.NgPlural=NgPlural;exports.NgPluralCase=NgPluralCase;exports.NgStyle=NgStyle;exports.NgSwitch=NgSwitch;exports.NgSwitchCase=NgSwitchCase;exports.NgSwitchDefault=NgSwitchDefault;exports.NgTemplateOutlet=NgTemplateOutlet;exports.PathLocationStrategy=PathLocationStrategy;exports.PercentPipe=PercentPipe;exports.PlatformLocation=PlatformLocation;exports.SlicePipe=SlicePipe;exports.TitleCasePipe=TitleCasePipe;exports.UpperCasePipe=UpperCasePipe;exports.VERSION=VERSION;exports.ViewportScroller=ViewportScroller;exports.formatCurrency=formatCurrency;exports.formatDate=formatDate;exports.formatNumber=formatNumber;exports.formatPercent=formatPercent;exports.getCurrencySymbol=getCurrencySymbol;exports.getLocaleCurrencyCode=getLocaleCurrencyCode;exports.getLocaleCurrencyName=getLocaleCurrencyName;exports.getLocaleCurrencySymbol=getLocaleCurrencySymbol;exports.getLocaleDateFormat=getLocaleDateFormat;exports.getLocaleDateTimeFormat=getLocaleDateTimeFormat;exports.getLocaleDayNames=getLocaleDayNames;exports.getLocaleDayPeriods=getLocaleDayPeriods;exports.getLocaleDirection=getLocaleDirection;exports.getLocaleEraNames=getLocaleEraNames;exports.getLocaleExtraDayPeriodRules=getLocaleExtraDayPeriodRules;exports.getLocaleExtraDayPeriods=getLocaleExtraDayPeriods;exports.getLocaleFirstDayOfWeek=getLocaleFirstDayOfWeek;exports.getLocaleId=getLocaleId;exports.getLocaleMonthNames=getLocaleMonthNames;exports.getLocaleNumberFormat=getLocaleNumberFormat;exports.getLocaleNumberSymbol=getLocaleNumberSymbol;exports.getLocalePluralCase=getLocalePluralCase;exports.getLocaleTimeFormat=getLocaleTimeFormat;exports.getLocaleWeekEndRange=getLocaleWeekEndRange;exports.getNumberOfCurrencyDigits=getNumberOfCurrencyDigits;exports.isPlatformBrowser=isPlatformBrowser;exports.isPlatformServer=isPlatformServer;exports.isPlatformWorkerApp=isPlatformWorkerApp;exports.isPlatformWorkerUi=isPlatformWorkerUi;exports.registerLocaleData=registerLocaleData;exports.ɵBrowserPlatformLocation=BrowserPlatformLocation;exports.ɵDomAdapter=DomAdapter;exports.ɵNullViewportScroller=NullViewportScroller;exports.ɵPLATFORM_BROWSER_ID=PLATFORM_BROWSER_ID;exports.ɵPLATFORM_SERVER_ID=PLATFORM_SERVER_ID;exports.ɵPLATFORM_WORKER_APP_ID=PLATFORM_WORKER_APP_ID;exports.ɵPLATFORM_WORKER_UI_ID=PLATFORM_WORKER_UI_ID;exports.ɵangular_packages_common_common_a=useBrowserPlatformLocation;exports.ɵangular_packages_common_common_b=createBrowserPlatformLocation;exports.ɵangular_packages_common_common_c=createLocation;exports.ɵangular_packages_common_common_d=provideLocationStrategy;exports.ɵangular_packages_common_common_e=COMMON_DIRECTIVES;exports.ɵangular_packages_common_common_f=COMMON_PIPES;exports.ɵgetDOM=getDOM;exports.ɵparseCookieValue=parseCookieValue;exports.ɵsetRootDomAdapter=setRootDomAdapter;Object.defineProperty(exports,'__esModule',{value:true});});},{"@angular/core":4}],3:[function(require,module,exports){(function(global){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define('@angular/compiler',['exports'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.compiler={})));})(this,function(exports){'use strict';/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics3=function extendStatics(d,b){_extendStatics3=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics3(d,b);};function __extends(d,b){_extendStatics3(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign3=function __assign(){_assign3=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign3.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(TagContentType){TagContentType[TagContentType["RAW_TEXT"]=0]="RAW_TEXT";TagContentType[TagContentType["ESCAPABLE_RAW_TEXT"]=1]="ESCAPABLE_RAW_TEXT";TagContentType[TagContentType["PARSABLE_DATA"]=2]="PARSABLE_DATA";})(exports.TagContentType||(exports.TagContentType={}));function splitNsName(elementName){if(elementName[0]!=':'){return[null,elementName];}var colonIndex=elementName.indexOf(':',1);if(colonIndex==-1){throw new Error("Unsupported format \""+elementName+"\" expecting \":namespace:name\"");}return[elementName.slice(1,colonIndex),elementName.slice(colonIndex+1)];}// `<ng-container>` tags work the same regardless the namespace
function isNgContainer(tagName){return splitNsName(tagName)[1]==='ng-container';}// `<ng-content>` tags work the same regardless the namespace
function isNgContent(tagName){return splitNsName(tagName)[1]==='ng-content';}// `<ng-template>` tags work the same regardless the namespace
function isNgTemplate(tagName){return splitNsName(tagName)[1]==='ng-template';}function getNsPrefix(fullName){return fullName===null?null:splitNsName(fullName)[0];}function mergeNsAndName(prefix,localName){return prefix?":"+prefix+":"+localName:localName;}// see http://www.w3.org/TR/html51/syntax.html#named-character-references
// see https://html.spec.whatwg.org/multipage/entities.json
// This list is not exhaustive to keep the compiler footprint low.
// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not
// exist.
var NAMED_ENTITIES={'Aacute':"\xC1",'aacute':"\xE1",'Acirc':"\xC2",'acirc':"\xE2",'acute':"\xB4",'AElig':"\xC6",'aelig':"\xE6",'Agrave':"\xC0",'agrave':"\xE0",'alefsym':"\u2135",'Alpha':"\u0391",'alpha':"\u03B1",'amp':'&','and':"\u2227",'ang':"\u2220",'apos':"'",'Aring':"\xC5",'aring':"\xE5",'asymp':"\u2248",'Atilde':"\xC3",'atilde':"\xE3",'Auml':"\xC4",'auml':"\xE4",'bdquo':"\u201E",'Beta':"\u0392",'beta':"\u03B2",'brvbar':"\xA6",'bull':"\u2022",'cap':"\u2229",'Ccedil':"\xC7",'ccedil':"\xE7",'cedil':"\xB8",'cent':"\xA2",'Chi':"\u03A7",'chi':"\u03C7",'circ':"\u02C6",'clubs':"\u2663",'cong':"\u2245",'copy':"\xA9",'crarr':"\u21B5",'cup':"\u222A",'curren':"\xA4",'dagger':"\u2020",'Dagger':"\u2021",'darr':"\u2193",'dArr':"\u21D3",'deg':"\xB0",'Delta':"\u0394",'delta':"\u03B4",'diams':"\u2666",'divide':"\xF7",'Eacute':"\xC9",'eacute':"\xE9",'Ecirc':"\xCA",'ecirc':"\xEA",'Egrave':"\xC8",'egrave':"\xE8",'empty':"\u2205",'emsp':"\u2003",'ensp':"\u2002",'Epsilon':"\u0395",'epsilon':"\u03B5",'equiv':"\u2261",'Eta':"\u0397",'eta':"\u03B7",'ETH':"\xD0",'eth':"\xF0",'Euml':"\xCB",'euml':"\xEB",'euro':"\u20AC",'exist':"\u2203",'fnof':"\u0192",'forall':"\u2200",'frac12':"\xBD",'frac14':"\xBC",'frac34':"\xBE",'frasl':"\u2044",'Gamma':"\u0393",'gamma':"\u03B3",'ge':"\u2265",'gt':'>','harr':"\u2194",'hArr':"\u21D4",'hearts':"\u2665",'hellip':"\u2026",'Iacute':"\xCD",'iacute':"\xED",'Icirc':"\xCE",'icirc':"\xEE",'iexcl':"\xA1",'Igrave':"\xCC",'igrave':"\xEC",'image':"\u2111",'infin':"\u221E",'int':"\u222B",'Iota':"\u0399",'iota':"\u03B9",'iquest':"\xBF",'isin':"\u2208",'Iuml':"\xCF",'iuml':"\xEF",'Kappa':"\u039A",'kappa':"\u03BA",'Lambda':"\u039B",'lambda':"\u03BB",'lang':"\u27E8",'laquo':"\xAB",'larr':"\u2190",'lArr':"\u21D0",'lceil':"\u2308",'ldquo':"\u201C",'le':"\u2264",'lfloor':"\u230A",'lowast':"\u2217",'loz':"\u25CA",'lrm':"\u200E",'lsaquo':"\u2039",'lsquo':"\u2018",'lt':'<','macr':"\xAF",'mdash':"\u2014",'micro':"\xB5",'middot':"\xB7",'minus':"\u2212",'Mu':"\u039C",'mu':"\u03BC",'nabla':"\u2207",'nbsp':"\xA0",'ndash':"\u2013",'ne':"\u2260",'ni':"\u220B",'not':"\xAC",'notin':"\u2209",'nsub':"\u2284",'Ntilde':"\xD1",'ntilde':"\xF1",'Nu':"\u039D",'nu':"\u03BD",'Oacute':"\xD3",'oacute':"\xF3",'Ocirc':"\xD4",'ocirc':"\xF4",'OElig':"\u0152",'oelig':"\u0153",'Ograve':"\xD2",'ograve':"\xF2",'oline':"\u203E",'Omega':"\u03A9",'omega':"\u03C9",'Omicron':"\u039F",'omicron':"\u03BF",'oplus':"\u2295",'or':"\u2228",'ordf':"\xAA",'ordm':"\xBA",'Oslash':"\xD8",'oslash':"\xF8",'Otilde':"\xD5",'otilde':"\xF5",'otimes':"\u2297",'Ouml':"\xD6",'ouml':"\xF6",'para':"\xB6",'permil':"\u2030",'perp':"\u22A5",'Phi':"\u03A6",'phi':"\u03C6",'Pi':"\u03A0",'pi':"\u03C0",'piv':"\u03D6",'plusmn':"\xB1",'pound':"\xA3",'prime':"\u2032",'Prime':"\u2033",'prod':"\u220F",'prop':"\u221D",'Psi':"\u03A8",'psi':"\u03C8",'quot':"\"",'radic':"\u221A",'rang':"\u27E9",'raquo':"\xBB",'rarr':"\u2192",'rArr':"\u21D2",'rceil':"\u2309",'rdquo':"\u201D",'real':"\u211C",'reg':"\xAE",'rfloor':"\u230B",'Rho':"\u03A1",'rho':"\u03C1",'rlm':"\u200F",'rsaquo':"\u203A",'rsquo':"\u2019",'sbquo':"\u201A",'Scaron':"\u0160",'scaron':"\u0161",'sdot':"\u22C5",'sect':"\xA7",'shy':"\xAD",'Sigma':"\u03A3",'sigma':"\u03C3",'sigmaf':"\u03C2",'sim':"\u223C",'spades':"\u2660",'sub':"\u2282",'sube':"\u2286",'sum':"\u2211",'sup':"\u2283",'sup1':"\xB9",'sup2':"\xB2",'sup3':"\xB3",'supe':"\u2287",'szlig':"\xDF",'Tau':"\u03A4",'tau':"\u03C4",'there4':"\u2234",'Theta':"\u0398",'theta':"\u03B8",'thetasym':"\u03D1",'thinsp':"\u2009",'THORN':"\xDE",'thorn':"\xFE",'tilde':"\u02DC",'times':"\xD7",'trade':"\u2122",'Uacute':"\xDA",'uacute':"\xFA",'uarr':"\u2191",'uArr':"\u21D1",'Ucirc':"\xDB",'ucirc':"\xFB",'Ugrave':"\xD9",'ugrave':"\xF9",'uml':"\xA8",'upsih':"\u03D2",'Upsilon':"\u03A5",'upsilon':"\u03C5",'Uuml':"\xDC",'uuml':"\xFC",'weierp':"\u2118",'Xi':"\u039E",'xi':"\u03BE",'Yacute':"\xDD",'yacute':"\xFD",'yen':"\xA5",'yuml':"\xFF",'Yuml':"\u0178",'Zeta':"\u0396",'zeta':"\u03B6",'zwj':"\u200D",'zwnj':"\u200C"};// The &ngsp; pseudo-entity is denoting a space. see:
// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart
var NGSP_UNICODE="\uE500";NAMED_ENTITIES['ngsp']=NGSP_UNICODE;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var HtmlTagDefinition=/** @class */function(){function HtmlTagDefinition(_a){var _this=this;var _b=_a===void 0?{}:_a,closedByChildren=_b.closedByChildren,implicitNamespacePrefix=_b.implicitNamespacePrefix,_c=_b.contentType,contentType=_c===void 0?exports.TagContentType.PARSABLE_DATA:_c,_d=_b.closedByParent,closedByParent=_d===void 0?false:_d,_e=_b.isVoid,isVoid=_e===void 0?false:_e,_f=_b.ignoreFirstLf,ignoreFirstLf=_f===void 0?false:_f;this.closedByChildren={};this.closedByParent=false;this.canSelfClose=false;if(closedByChildren&&closedByChildren.length>0){closedByChildren.forEach(function(tagName){return _this.closedByChildren[tagName]=true;});}this.isVoid=isVoid;this.closedByParent=closedByParent||isVoid;this.implicitNamespacePrefix=implicitNamespacePrefix||null;this.contentType=contentType;this.ignoreFirstLf=ignoreFirstLf;}HtmlTagDefinition.prototype.isClosedByChild=function(name){return this.isVoid||name.toLowerCase()in this.closedByChildren;};return HtmlTagDefinition;}();var _DEFAULT_TAG_DEFINITION;// see http://www.w3.org/TR/html51/syntax.html#optional-tags
// This implementation does not fully conform to the HTML5 spec.
var TAG_DEFINITIONS;function getHtmlTagDefinition(tagName){if(!TAG_DEFINITIONS){_DEFAULT_TAG_DEFINITION=new HtmlTagDefinition();TAG_DEFINITIONS={'base':new HtmlTagDefinition({isVoid:true}),'meta':new HtmlTagDefinition({isVoid:true}),'area':new HtmlTagDefinition({isVoid:true}),'embed':new HtmlTagDefinition({isVoid:true}),'link':new HtmlTagDefinition({isVoid:true}),'img':new HtmlTagDefinition({isVoid:true}),'input':new HtmlTagDefinition({isVoid:true}),'param':new HtmlTagDefinition({isVoid:true}),'hr':new HtmlTagDefinition({isVoid:true}),'br':new HtmlTagDefinition({isVoid:true}),'source':new HtmlTagDefinition({isVoid:true}),'track':new HtmlTagDefinition({isVoid:true}),'wbr':new HtmlTagDefinition({isVoid:true}),'p':new HtmlTagDefinition({closedByChildren:['address','article','aside','blockquote','div','dl','fieldset','footer','form','h1','h2','h3','h4','h5','h6','header','hgroup','hr','main','nav','ol','p','pre','section','table','ul'],closedByParent:true}),'thead':new HtmlTagDefinition({closedByChildren:['tbody','tfoot']}),'tbody':new HtmlTagDefinition({closedByChildren:['tbody','tfoot'],closedByParent:true}),'tfoot':new HtmlTagDefinition({closedByChildren:['tbody'],closedByParent:true}),'tr':new HtmlTagDefinition({closedByChildren:['tr'],closedByParent:true}),'td':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'th':new HtmlTagDefinition({closedByChildren:['td','th'],closedByParent:true}),'col':new HtmlTagDefinition({isVoid:true}),'svg':new HtmlTagDefinition({implicitNamespacePrefix:'svg'}),'math':new HtmlTagDefinition({implicitNamespacePrefix:'math'}),'li':new HtmlTagDefinition({closedByChildren:['li'],closedByParent:true}),'dt':new HtmlTagDefinition({closedByChildren:['dt','dd']}),'dd':new HtmlTagDefinition({closedByChildren:['dt','dd'],closedByParent:true}),'rb':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rt':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'rtc':new HtmlTagDefinition({closedByChildren:['rb','rtc','rp'],closedByParent:true}),'rp':new HtmlTagDefinition({closedByChildren:['rb','rt','rtc','rp'],closedByParent:true}),'optgroup':new HtmlTagDefinition({closedByChildren:['optgroup'],closedByParent:true}),'option':new HtmlTagDefinition({closedByChildren:['option','optgroup'],closedByParent:true}),'pre':new HtmlTagDefinition({ignoreFirstLf:true}),'listing':new HtmlTagDefinition({ignoreFirstLf:true}),'style':new HtmlTagDefinition({contentType:exports.TagContentType.RAW_TEXT}),'script':new HtmlTagDefinition({contentType:exports.TagContentType.RAW_TEXT}),'title':new HtmlTagDefinition({contentType:exports.TagContentType.ESCAPABLE_RAW_TEXT}),'textarea':new HtmlTagDefinition({contentType:exports.TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:true})};}return TAG_DEFINITIONS[tagName.toLowerCase()]||_DEFAULT_TAG_DEFINITION;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _SELECTOR_REGEXP=new RegExp('(\\:not\\()|'+// 1: ":not("
'(([\\.\\#]?)[-\\w]+)|'+// 2: "tag"; 3: "."/"#";
// "-" should appear first in the regexp below as FF31 parses "[.-\w]" as a range
// 4: attribute; 5: attribute_string; 6: attribute_value
'(?:\\[([-.\\w*]+)(?:=([\"\']?)([^\\]\"\']*)\\5)?\\])|'+// "[name]", "[name=value]",
// "[name="value"]",
// "[name='value']"
'(\\))|'+// 7: ")"
'(\\s*,\\s*)',// 8: ","
'g');/**
     * A css selector contains an element name,
     * css classes and attribute/value pairs with the purpose
     * of selecting subsets out of them.
     */var CssSelector=/** @class */function(){function CssSelector(){this.element=null;this.classNames=[];/**
             * The selectors are encoded in pairs where:
             * - even locations are attribute names
             * - odd locations are attribute values.
             *
             * Example:
             * Selector: `[key1=value1][key2]` would parse to:
             * ```
             * ['key1', 'value1', 'key2', '']
             * ```
             */this.attrs=[];this.notSelectors=[];}CssSelector.parse=function(selector){var results=[];var _addResult=function _addResult(res,cssSel){if(cssSel.notSelectors.length>0&&!cssSel.element&&cssSel.classNames.length==0&&cssSel.attrs.length==0){cssSel.element='*';}res.push(cssSel);};var cssSelector=new CssSelector();var match;var current=cssSelector;var inNot=false;_SELECTOR_REGEXP.lastIndex=0;while(match=_SELECTOR_REGEXP.exec(selector)){if(match[1/* NOT */]){if(inNot){throw new Error('Nesting :not in a selector is not allowed');}inNot=true;current=new CssSelector();cssSelector.notSelectors.push(current);}var tag=match[2/* TAG */];if(tag){var prefix=match[3/* PREFIX */];if(prefix==='#'){// #hash
current.addAttribute('id',tag.substr(1));}else if(prefix==='.'){// Class
current.addClassName(tag.substr(1));}else{// Element
current.setElement(tag);}}var attribute=match[4/* ATTRIBUTE */];if(attribute){current.addAttribute(attribute,match[6/* ATTRIBUTE_VALUE */]);}if(match[7/* NOT_END */]){inNot=false;current=cssSelector;}if(match[8/* SEPARATOR */]){if(inNot){throw new Error('Multiple selectors in :not are not supported');}_addResult(results,cssSelector);cssSelector=current=new CssSelector();}}_addResult(results,cssSelector);return results;};CssSelector.prototype.isElementSelector=function(){return this.hasElementSelector()&&this.classNames.length==0&&this.attrs.length==0&&this.notSelectors.length===0;};CssSelector.prototype.hasElementSelector=function(){return!!this.element;};CssSelector.prototype.setElement=function(element){if(element===void 0){element=null;}this.element=element;};/** Gets a template string for an element that matches the selector. */CssSelector.prototype.getMatchingElementTemplate=function(){var tagName=this.element||'div';var classAttr=this.classNames.length>0?" class=\""+this.classNames.join(' ')+"\"":'';var attrs='';for(var i=0;i<this.attrs.length;i+=2){var attrName=this.attrs[i];var attrValue=this.attrs[i+1]!==''?"=\""+this.attrs[i+1]+"\"":'';attrs+=" "+attrName+attrValue;}return getHtmlTagDefinition(tagName).isVoid?"<"+tagName+classAttr+attrs+"/>":"<"+tagName+classAttr+attrs+"></"+tagName+">";};CssSelector.prototype.getAttrs=function(){var result=[];if(this.classNames.length>0){result.push('class',this.classNames.join(' '));}return result.concat(this.attrs);};CssSelector.prototype.addAttribute=function(name,value){if(value===void 0){value='';}this.attrs.push(name,value&&value.toLowerCase()||'');};CssSelector.prototype.addClassName=function(name){this.classNames.push(name.toLowerCase());};CssSelector.prototype.toString=function(){var res=this.element||'';if(this.classNames){this.classNames.forEach(function(klass){return res+="."+klass;});}if(this.attrs){for(var i=0;i<this.attrs.length;i+=2){var name_1=this.attrs[i];var value=this.attrs[i+1];res+="["+name_1+(value?'='+value:'')+"]";}}this.notSelectors.forEach(function(notSelector){return res+=":not("+notSelector+")";});return res;};return CssSelector;}();/**
     * Reads a list of CssSelectors and allows to calculate which ones
     * are contained in a given CssSelector.
     */var SelectorMatcher=/** @class */function(){function SelectorMatcher(){this._elementMap=new Map();this._elementPartialMap=new Map();this._classMap=new Map();this._classPartialMap=new Map();this._attrValueMap=new Map();this._attrValuePartialMap=new Map();this._listContexts=[];}SelectorMatcher.createNotMatcher=function(notSelectors){var notMatcher=new SelectorMatcher();notMatcher.addSelectables(notSelectors,null);return notMatcher;};SelectorMatcher.prototype.addSelectables=function(cssSelectors,callbackCtxt){var listContext=null;if(cssSelectors.length>1){listContext=new SelectorListContext(cssSelectors);this._listContexts.push(listContext);}for(var i=0;i<cssSelectors.length;i++){this._addSelectable(cssSelectors[i],callbackCtxt,listContext);}};/**
         * Add an object that can be found later on by calling `match`.
         * @param cssSelector A css selector
         * @param callbackCtxt An opaque object that will be given to the callback of the `match` function
         */SelectorMatcher.prototype._addSelectable=function(cssSelector,callbackCtxt,listContext){var matcher=this;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;var selectable=new SelectorContext(cssSelector,callbackCtxt,listContext);if(element){var isTerminal=attrs.length===0&&classNames.length===0;if(isTerminal){this._addTerminal(matcher._elementMap,element,selectable);}else{matcher=this._addPartial(matcher._elementPartialMap,element);}}if(classNames){for(var i=0;i<classNames.length;i++){var isTerminal=attrs.length===0&&i===classNames.length-1;var className=classNames[i];if(isTerminal){this._addTerminal(matcher._classMap,className,selectable);}else{matcher=this._addPartial(matcher._classPartialMap,className);}}}if(attrs){for(var i=0;i<attrs.length;i+=2){var isTerminal=i===attrs.length-2;var name_2=attrs[i];var value=attrs[i+1];if(isTerminal){var terminalMap=matcher._attrValueMap;var terminalValuesMap=terminalMap.get(name_2);if(!terminalValuesMap){terminalValuesMap=new Map();terminalMap.set(name_2,terminalValuesMap);}this._addTerminal(terminalValuesMap,value,selectable);}else{var partialMap=matcher._attrValuePartialMap;var partialValuesMap=partialMap.get(name_2);if(!partialValuesMap){partialValuesMap=new Map();partialMap.set(name_2,partialValuesMap);}matcher=this._addPartial(partialValuesMap,value);}}}};SelectorMatcher.prototype._addTerminal=function(map,name,selectable){var terminalList=map.get(name);if(!terminalList){terminalList=[];map.set(name,terminalList);}terminalList.push(selectable);};SelectorMatcher.prototype._addPartial=function(map,name){var matcher=map.get(name);if(!matcher){matcher=new SelectorMatcher();map.set(name,matcher);}return matcher;};/**
         * Find the objects that have been added via `addSelectable`
         * whose css selector is contained in the given css selector.
         * @param cssSelector A css selector
         * @param matchedCallback This callback will be called with the object handed into `addSelectable`
         * @return boolean true if a match was found
         */SelectorMatcher.prototype.match=function(cssSelector,matchedCallback){var result=false;var element=cssSelector.element;var classNames=cssSelector.classNames;var attrs=cssSelector.attrs;for(var i=0;i<this._listContexts.length;i++){this._listContexts[i].alreadyMatched=false;}result=this._matchTerminal(this._elementMap,element,cssSelector,matchedCallback)||result;result=this._matchPartial(this._elementPartialMap,element,cssSelector,matchedCallback)||result;if(classNames){for(var i=0;i<classNames.length;i++){var className=classNames[i];result=this._matchTerminal(this._classMap,className,cssSelector,matchedCallback)||result;result=this._matchPartial(this._classPartialMap,className,cssSelector,matchedCallback)||result;}}if(attrs){for(var i=0;i<attrs.length;i+=2){var name_3=attrs[i];var value=attrs[i+1];var terminalValuesMap=this._attrValueMap.get(name_3);if(value){result=this._matchTerminal(terminalValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchTerminal(terminalValuesMap,value,cssSelector,matchedCallback)||result;var partialValuesMap=this._attrValuePartialMap.get(name_3);if(value){result=this._matchPartial(partialValuesMap,'',cssSelector,matchedCallback)||result;}result=this._matchPartial(partialValuesMap,value,cssSelector,matchedCallback)||result;}}return result;};/** @internal */SelectorMatcher.prototype._matchTerminal=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var selectables=map.get(name)||[];var starSelectables=map.get('*');if(starSelectables){selectables=selectables.concat(starSelectables);}if(selectables.length===0){return false;}var selectable;var result=false;for(var i=0;i<selectables.length;i++){selectable=selectables[i];result=selectable.finalize(cssSelector,matchedCallback)||result;}return result;};/** @internal */SelectorMatcher.prototype._matchPartial=function(map,name,cssSelector,matchedCallback){if(!map||typeof name!=='string'){return false;}var nestedSelector=map.get(name);if(!nestedSelector){return false;}// TODO(perf): get rid of recursion and measure again
// TODO(perf): don't pass the whole selector into the recursion,
// but only the not processed parts
return nestedSelector.match(cssSelector,matchedCallback);};return SelectorMatcher;}();var SelectorListContext=/** @class */function(){function SelectorListContext(selectors){this.selectors=selectors;this.alreadyMatched=false;}return SelectorListContext;}();// Store context to pass back selector and context when a selector is matched
var SelectorContext=/** @class */function(){function SelectorContext(selector,cbContext,listContext){this.selector=selector;this.cbContext=cbContext;this.listContext=listContext;this.notSelectors=selector.notSelectors;}SelectorContext.prototype.finalize=function(cssSelector,callback){var result=true;if(this.notSelectors.length>0&&(!this.listContext||!this.listContext.alreadyMatched)){var notMatcher=SelectorMatcher.createNotMatcher(this.notSelectors);result=!notMatcher.match(cssSelector,null);}if(result&&callback&&(!this.listContext||!this.listContext.alreadyMatched)){if(this.listContext){this.listContext.alreadyMatched=true;}callback(this.selector,this.cbContext);}return result;};return SelectorContext;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var createInject=makeMetadataFactory('Inject',function(token){return{token:token};});var createInjectionToken=makeMetadataFactory('InjectionToken',function(desc){return{_desc:desc,ɵprov:undefined};});var createAttribute=makeMetadataFactory('Attribute',function(attributeName){return{attributeName:attributeName};});var createContentChildren=makeMetadataFactory('ContentChildren',function(selector,data){if(data===void 0){data={};}return _assign3({selector:selector,first:false,isViewQuery:false,descendants:false},data);});var createContentChild=makeMetadataFactory('ContentChild',function(selector,data){if(data===void 0){data={};}return _assign3({selector:selector,first:true,isViewQuery:false,descendants:true},data);});var createViewChildren=makeMetadataFactory('ViewChildren',function(selector,data){if(data===void 0){data={};}return _assign3({selector:selector,first:false,isViewQuery:true,descendants:true},data);});var createViewChild=makeMetadataFactory('ViewChild',function(selector,data){return _assign3({selector:selector,first:true,isViewQuery:true,descendants:true},data);});var createDirective=makeMetadataFactory('Directive',function(dir){if(dir===void 0){dir={};}return dir;});var ViewEncapsulation;(function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";ViewEncapsulation[ViewEncapsulation["None"]=2]="None";ViewEncapsulation[ViewEncapsulation["ShadowDom"]=3]="ShadowDom";})(ViewEncapsulation||(ViewEncapsulation={}));var ChangeDetectionStrategy;(function(ChangeDetectionStrategy){ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(ChangeDetectionStrategy||(ChangeDetectionStrategy={}));var createComponent=makeMetadataFactory('Component',function(c){if(c===void 0){c={};}return _assign3({changeDetection:ChangeDetectionStrategy.Default},c);});var createPipe=makeMetadataFactory('Pipe',function(p){return _assign3({pure:true},p);});var createInput=makeMetadataFactory('Input',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createOutput=makeMetadataFactory('Output',function(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};});var createHostBinding=makeMetadataFactory('HostBinding',function(hostPropertyName){return{hostPropertyName:hostPropertyName};});var createHostListener=makeMetadataFactory('HostListener',function(eventName,args){return{eventName:eventName,args:args};});var createNgModule=makeMetadataFactory('NgModule',function(ngModule){return ngModule;});var createInjectable=makeMetadataFactory('Injectable',function(injectable){if(injectable===void 0){injectable={};}return injectable;});var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};var NO_ERRORS_SCHEMA={name:'no-errors-schema'};var createOptional=makeMetadataFactory('Optional');var createSelf=makeMetadataFactory('Self');var createSkipSelf=makeMetadataFactory('SkipSelf');var createHost=makeMetadataFactory('Host');var Type=Function;var SecurityContext;(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(SecurityContext||(SecurityContext={}));var MissingTranslationStrategy;(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(MissingTranslationStrategy||(MissingTranslationStrategy={}));function makeMetadataFactory(name,props){// This must be declared as a function, not a fat arrow, so that ES2015 devmode produces code
// that works with the static_reflector.ts in the ViewEngine compiler.
// In particular, `_registerDecoratorOrConstructor` assumes that the value returned here can be
// new'ed.
function factory(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var values=props?props.apply(void 0,__spread(args)):{};return _assign3({ngMetadataName:name},values);}factory.isTypeOf=function(obj){return obj&&obj.ngMetadataName===name;};factory.ngMetadataName=name;return factory;}function parserSelectorToSimpleSelector(selector){var classes=selector.classNames&&selector.classNames.length?__spread([8/* CLASS */],selector.classNames):[];var elementName=selector.element&&selector.element!=='*'?selector.element:'';return __spread([elementName],selector.attrs,classes);}function parserSelectorToNegativeSelector(selector){var classes=selector.classNames&&selector.classNames.length?__spread([8/* CLASS */],selector.classNames):[];if(selector.element){return __spread([1/* NOT */|4/* ELEMENT */,selector.element],selector.attrs,classes);}else if(selector.attrs.length){return __spread([1/* NOT */|2/* ATTRIBUTE */],selector.attrs,classes);}else{return selector.classNames&&selector.classNames.length?__spread([1/* NOT */|8/* CLASS */],selector.classNames):[];}}function parserSelectorToR3Selector(selector){var positive=parserSelectorToSimpleSelector(selector);var negative=selector.notSelectors&&selector.notSelectors.length?selector.notSelectors.map(function(notSelector){return parserSelectorToNegativeSelector(notSelector);}):[];return positive.concat.apply(positive,__spread(negative));}function parseSelectorToR3Selector(selector){return selector?CssSelector.parse(selector).map(parserSelectorToR3Selector):[];}var core=/*#__PURE__*/Object.freeze({__proto__:null,createInject:createInject,createInjectionToken:createInjectionToken,createAttribute:createAttribute,createContentChildren:createContentChildren,createContentChild:createContentChild,createViewChildren:createViewChildren,createViewChild:createViewChild,createDirective:createDirective,get ViewEncapsulation(){return ViewEncapsulation;},get ChangeDetectionStrategy(){return ChangeDetectionStrategy;},createComponent:createComponent,createPipe:createPipe,createInput:createInput,createOutput:createOutput,createHostBinding:createHostBinding,createHostListener:createHostListener,createNgModule:createNgModule,createInjectable:createInjectable,CUSTOM_ELEMENTS_SCHEMA:CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA:NO_ERRORS_SCHEMA,createOptional:createOptional,createSelf:createSelf,createSkipSelf:createSkipSelf,createHost:createHost,Type:Type,get SecurityContext(){return SecurityContext;},get MissingTranslationStrategy(){return MissingTranslationStrategy;},parseSelectorToR3Selector:parseSelectorToR3Selector});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ //// Types
var TypeModifier;(function(TypeModifier){TypeModifier[TypeModifier["Const"]=0]="Const";})(TypeModifier||(TypeModifier={}));var Type$1=/** @class */function(){function Type(modifiers){if(modifiers===void 0){modifiers=null;}this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}}Type.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Type;}();(function(BuiltinTypeName){BuiltinTypeName[BuiltinTypeName["Dynamic"]=0]="Dynamic";BuiltinTypeName[BuiltinTypeName["Bool"]=1]="Bool";BuiltinTypeName[BuiltinTypeName["String"]=2]="String";BuiltinTypeName[BuiltinTypeName["Int"]=3]="Int";BuiltinTypeName[BuiltinTypeName["Number"]=4]="Number";BuiltinTypeName[BuiltinTypeName["Function"]=5]="Function";BuiltinTypeName[BuiltinTypeName["Inferred"]=6]="Inferred";BuiltinTypeName[BuiltinTypeName["None"]=7]="None";})(exports.BuiltinTypeName||(exports.BuiltinTypeName={}));var BuiltinType=/** @class */function(_super){__extends(BuiltinType,_super);function BuiltinType(name,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.name=name;return _this;}BuiltinType.prototype.visitType=function(visitor,context){return visitor.visitBuiltinType(this,context);};return BuiltinType;}(Type$1);var ExpressionType=/** @class */function(_super){__extends(ExpressionType,_super);function ExpressionType(value,modifiers,typeParams){if(modifiers===void 0){modifiers=null;}if(typeParams===void 0){typeParams=null;}var _this=_super.call(this,modifiers)||this;_this.value=value;_this.typeParams=typeParams;return _this;}ExpressionType.prototype.visitType=function(visitor,context){return visitor.visitExpressionType(this,context);};return ExpressionType;}(Type$1);var ArrayType=/** @class */function(_super){__extends(ArrayType,_super);function ArrayType(of,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.of=of;return _this;}ArrayType.prototype.visitType=function(visitor,context){return visitor.visitArrayType(this,context);};return ArrayType;}(Type$1);var MapType=/** @class */function(_super){__extends(MapType,_super);function MapType(valueType,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers)||this;_this.valueType=valueType||null;return _this;}MapType.prototype.visitType=function(visitor,context){return visitor.visitMapType(this,context);};return MapType;}(Type$1);var DYNAMIC_TYPE=new BuiltinType(exports.BuiltinTypeName.Dynamic);var INFERRED_TYPE=new BuiltinType(exports.BuiltinTypeName.Inferred);var BOOL_TYPE=new BuiltinType(exports.BuiltinTypeName.Bool);var INT_TYPE=new BuiltinType(exports.BuiltinTypeName.Int);var NUMBER_TYPE=new BuiltinType(exports.BuiltinTypeName.Number);var STRING_TYPE=new BuiltinType(exports.BuiltinTypeName.String);var FUNCTION_TYPE=new BuiltinType(exports.BuiltinTypeName.Function);var NONE_TYPE=new BuiltinType(exports.BuiltinTypeName.None);(function(BinaryOperator){BinaryOperator[BinaryOperator["Equals"]=0]="Equals";BinaryOperator[BinaryOperator["NotEquals"]=1]="NotEquals";BinaryOperator[BinaryOperator["Identical"]=2]="Identical";BinaryOperator[BinaryOperator["NotIdentical"]=3]="NotIdentical";BinaryOperator[BinaryOperator["Minus"]=4]="Minus";BinaryOperator[BinaryOperator["Plus"]=5]="Plus";BinaryOperator[BinaryOperator["Divide"]=6]="Divide";BinaryOperator[BinaryOperator["Multiply"]=7]="Multiply";BinaryOperator[BinaryOperator["Modulo"]=8]="Modulo";BinaryOperator[BinaryOperator["And"]=9]="And";BinaryOperator[BinaryOperator["Or"]=10]="Or";BinaryOperator[BinaryOperator["BitwiseAnd"]=11]="BitwiseAnd";BinaryOperator[BinaryOperator["Lower"]=12]="Lower";BinaryOperator[BinaryOperator["LowerEquals"]=13]="LowerEquals";BinaryOperator[BinaryOperator["Bigger"]=14]="Bigger";BinaryOperator[BinaryOperator["BiggerEquals"]=15]="BiggerEquals";})(exports.BinaryOperator||(exports.BinaryOperator={}));function nullSafeIsEquivalent(base,other){if(base==null||other==null){return base==other;}return base.isEquivalent(other);}function areAllEquivalent(base,other){var len=base.length;if(len!==other.length){return false;}for(var i=0;i<len;i++){if(!base[i].isEquivalent(other[i])){return false;}}return true;}var Expression=/** @class */function(){function Expression(type,sourceSpan){this.type=type||null;this.sourceSpan=sourceSpan||null;}Expression.prototype.prop=function(name,sourceSpan){return new ReadPropExpr(this,name,null,sourceSpan);};Expression.prototype.key=function(index,type,sourceSpan){return new ReadKeyExpr(this,index,type,sourceSpan);};Expression.prototype.callMethod=function(name,params,sourceSpan){return new InvokeMethodExpr(this,name,params,null,sourceSpan);};Expression.prototype.callFn=function(params,sourceSpan){return new InvokeFunctionExpr(this,params,null,sourceSpan);};Expression.prototype.instantiate=function(params,type,sourceSpan){return new InstantiateExpr(this,params,type,sourceSpan);};Expression.prototype.conditional=function(trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=null;}return new ConditionalExpr(this,trueCase,falseCase,null,sourceSpan);};Expression.prototype.equals=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Equals,this,rhs,null,sourceSpan);};Expression.prototype.notEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.NotEquals,this,rhs,null,sourceSpan);};Expression.prototype.identical=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Identical,this,rhs,null,sourceSpan);};Expression.prototype.notIdentical=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.NotIdentical,this,rhs,null,sourceSpan);};Expression.prototype.minus=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Minus,this,rhs,null,sourceSpan);};Expression.prototype.plus=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Plus,this,rhs,null,sourceSpan);};Expression.prototype.divide=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Divide,this,rhs,null,sourceSpan);};Expression.prototype.multiply=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Multiply,this,rhs,null,sourceSpan);};Expression.prototype.modulo=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Modulo,this,rhs,null,sourceSpan);};Expression.prototype.and=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.And,this,rhs,null,sourceSpan);};Expression.prototype.bitwiseAnd=function(rhs,sourceSpan,parens){if(parens===void 0){parens=true;}return new BinaryOperatorExpr(exports.BinaryOperator.BitwiseAnd,this,rhs,null,sourceSpan,parens);};Expression.prototype.or=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Or,this,rhs,null,sourceSpan);};Expression.prototype.lower=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Lower,this,rhs,null,sourceSpan);};Expression.prototype.lowerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.LowerEquals,this,rhs,null,sourceSpan);};Expression.prototype.bigger=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.Bigger,this,rhs,null,sourceSpan);};Expression.prototype.biggerEquals=function(rhs,sourceSpan){return new BinaryOperatorExpr(exports.BinaryOperator.BiggerEquals,this,rhs,null,sourceSpan);};Expression.prototype.isBlank=function(sourceSpan){// Note: We use equals by purpose here to compare to null and undefined in JS.
// We use the typed null to allow strictNullChecks to narrow types.
return this.equals(TYPED_NULL_EXPR,sourceSpan);};Expression.prototype.cast=function(type,sourceSpan){return new CastExpr(this,type,sourceSpan);};Expression.prototype.toStmt=function(){return new ExpressionStatement(this,null);};return Expression;}();(function(BuiltinVar){BuiltinVar[BuiltinVar["This"]=0]="This";BuiltinVar[BuiltinVar["Super"]=1]="Super";BuiltinVar[BuiltinVar["CatchError"]=2]="CatchError";BuiltinVar[BuiltinVar["CatchStack"]=3]="CatchStack";})(exports.BuiltinVar||(exports.BuiltinVar={}));var ReadVarExpr=/** @class */function(_super){__extends(ReadVarExpr,_super);function ReadVarExpr(name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;if(typeof name==='string'){_this.name=name;_this.builtin=null;}else{_this.name=null;_this.builtin=name;}return _this;}ReadVarExpr.prototype.isEquivalent=function(e){return e instanceof ReadVarExpr&&this.name===e.name&&this.builtin===e.builtin;};ReadVarExpr.prototype.isConstant=function(){return false;};ReadVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadVarExpr(this,context);};ReadVarExpr.prototype.set=function(value){if(!this.name){throw new Error("Built in variable "+this.builtin+" can not be assigned to.");}return new WriteVarExpr(this.name,value,null,this.sourceSpan);};return ReadVarExpr;}(Expression);var TypeofExpr=/** @class */function(_super){__extends(TypeofExpr,_super);function TypeofExpr(expr,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.expr=expr;return _this;}TypeofExpr.prototype.visitExpression=function(visitor,context){return visitor.visitTypeofExpr(this,context);};TypeofExpr.prototype.isEquivalent=function(e){return e instanceof TypeofExpr&&e.expr.isEquivalent(this.expr);};TypeofExpr.prototype.isConstant=function(){return this.expr.isConstant();};return TypeofExpr;}(Expression);var WrappedNodeExpr=/** @class */function(_super){__extends(WrappedNodeExpr,_super);function WrappedNodeExpr(node,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.node=node;return _this;}WrappedNodeExpr.prototype.isEquivalent=function(e){return e instanceof WrappedNodeExpr&&this.node===e.node;};WrappedNodeExpr.prototype.isConstant=function(){return false;};WrappedNodeExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWrappedNodeExpr(this,context);};return WrappedNodeExpr;}(Expression);var WriteVarExpr=/** @class */function(_super){__extends(WriteVarExpr,_super);function WriteVarExpr(name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.name=name;_this.value=value;return _this;}WriteVarExpr.prototype.isEquivalent=function(e){return e instanceof WriteVarExpr&&this.name===e.name&&this.value.isEquivalent(e.value);};WriteVarExpr.prototype.isConstant=function(){return false;};WriteVarExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteVarExpr(this,context);};WriteVarExpr.prototype.toDeclStmt=function(type,modifiers){return new DeclareVarStmt(this.name,this.value,type,modifiers,this.sourceSpan);};WriteVarExpr.prototype.toConstDecl=function(){return this.toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Final]);};return WriteVarExpr;}(Expression);var WriteKeyExpr=/** @class */function(_super){__extends(WriteKeyExpr,_super);function WriteKeyExpr(receiver,index,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;_this.value=value;return _this;}WriteKeyExpr.prototype.isEquivalent=function(e){return e instanceof WriteKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index)&&this.value.isEquivalent(e.value);};WriteKeyExpr.prototype.isConstant=function(){return false;};WriteKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWriteKeyExpr(this,context);};return WriteKeyExpr;}(Expression);var WritePropExpr=/** @class */function(_super){__extends(WritePropExpr,_super);function WritePropExpr(receiver,name,value,type,sourceSpan){var _this=_super.call(this,type||value.type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}WritePropExpr.prototype.isEquivalent=function(e){return e instanceof WritePropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.value.isEquivalent(e.value);};WritePropExpr.prototype.isConstant=function(){return false;};WritePropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitWritePropExpr(this,context);};return WritePropExpr;}(Expression);(function(BuiltinMethod){BuiltinMethod[BuiltinMethod["ConcatArray"]=0]="ConcatArray";BuiltinMethod[BuiltinMethod["SubscribeObservable"]=1]="SubscribeObservable";BuiltinMethod[BuiltinMethod["Bind"]=2]="Bind";})(exports.BuiltinMethod||(exports.BuiltinMethod={}));var InvokeMethodExpr=/** @class */function(_super){__extends(InvokeMethodExpr,_super);function InvokeMethodExpr(receiver,method,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.args=args;if(typeof method==='string'){_this.name=method;_this.builtin=null;}else{_this.name=null;_this.builtin=method;}return _this;}InvokeMethodExpr.prototype.isEquivalent=function(e){return e instanceof InvokeMethodExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name&&this.builtin===e.builtin&&areAllEquivalent(this.args,e.args);};InvokeMethodExpr.prototype.isConstant=function(){return false;};InvokeMethodExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeMethodExpr(this,context);};return InvokeMethodExpr;}(Expression);var InvokeFunctionExpr=/** @class */function(_super){__extends(InvokeFunctionExpr,_super);function InvokeFunctionExpr(fn,args,type,sourceSpan,pure){if(pure===void 0){pure=false;}var _this=_super.call(this,type,sourceSpan)||this;_this.fn=fn;_this.args=args;_this.pure=pure;return _this;}InvokeFunctionExpr.prototype.isEquivalent=function(e){return e instanceof InvokeFunctionExpr&&this.fn.isEquivalent(e.fn)&&areAllEquivalent(this.args,e.args)&&this.pure===e.pure;};InvokeFunctionExpr.prototype.isConstant=function(){return false;};InvokeFunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInvokeFunctionExpr(this,context);};return InvokeFunctionExpr;}(Expression);var InstantiateExpr=/** @class */function(_super){__extends(InstantiateExpr,_super);function InstantiateExpr(classExpr,args,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.classExpr=classExpr;_this.args=args;return _this;}InstantiateExpr.prototype.isEquivalent=function(e){return e instanceof InstantiateExpr&&this.classExpr.isEquivalent(e.classExpr)&&areAllEquivalent(this.args,e.args);};InstantiateExpr.prototype.isConstant=function(){return false;};InstantiateExpr.prototype.visitExpression=function(visitor,context){return visitor.visitInstantiateExpr(this,context);};return InstantiateExpr;}(Expression);var LiteralExpr=/** @class */function(_super){__extends(LiteralExpr,_super);function LiteralExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}LiteralExpr.prototype.isEquivalent=function(e){return e instanceof LiteralExpr&&this.value===e.value;};LiteralExpr.prototype.isConstant=function(){return true;};LiteralExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralExpr(this,context);};return LiteralExpr;}(Expression);var LocalizedString=/** @class */function(_super){__extends(LocalizedString,_super);function LocalizedString(metaBlock,messageParts,placeHolderNames,expressions,sourceSpan){var _this=_super.call(this,STRING_TYPE,sourceSpan)||this;_this.metaBlock=metaBlock;_this.messageParts=messageParts;_this.placeHolderNames=placeHolderNames;_this.expressions=expressions;return _this;}LocalizedString.prototype.isEquivalent=function(e){// return e instanceof LocalizedString && this.message === e.message;
return false;};LocalizedString.prototype.isConstant=function(){return false;};LocalizedString.prototype.visitExpression=function(visitor,context){return visitor.visitLocalizedString(this,context);};/**
         * Serialize the given `meta` and `messagePart` into "cooked" and "raw" strings that can be used
         * in a `$localize` tagged string. The format of the metadata is the same as that parsed by
         * `parseI18nMeta()`.
         *
         * @param meta The metadata to serialize
         * @param messagePart The first part of the tagged string
         */LocalizedString.prototype.serializeI18nHead=function(){var MEANING_SEPARATOR='|';var ID_SEPARATOR='@@';var LEGACY_ID_INDICATOR='␟';var metaBlock=this.metaBlock.description||'';if(this.metaBlock.meaning){metaBlock=""+this.metaBlock.meaning+MEANING_SEPARATOR+metaBlock;}if(this.metaBlock.customId){metaBlock=""+metaBlock+ID_SEPARATOR+this.metaBlock.customId;}if(this.metaBlock.legacyIds){this.metaBlock.legacyIds.forEach(function(legacyId){metaBlock=""+metaBlock+LEGACY_ID_INDICATOR+legacyId;});}return createCookedRawString(metaBlock,this.messageParts[0]);};/**
         * Serialize the given `placeholderName` and `messagePart` into "cooked" and "raw" strings that
         * can be used in a `$localize` tagged string.
         *
         * @param placeholderName The placeholder name to serialize
         * @param messagePart The following message string after this placeholder
         */LocalizedString.prototype.serializeI18nTemplatePart=function(partIndex){var placeholderName=this.placeHolderNames[partIndex-1];var messagePart=this.messageParts[partIndex];return createCookedRawString(placeholderName,messagePart);};return LocalizedString;}(Expression);var escapeSlashes=function escapeSlashes(str){return str.replace(/\\/g,'\\\\');};var escapeStartingColon=function escapeStartingColon(str){return str.replace(/^:/,'\\:');};var escapeColons=function escapeColons(str){return str.replace(/:/g,'\\:');};var escapeForMessagePart=function escapeForMessagePart(str){return str.replace(/`/g,'\\`').replace(/\${/g,'$\\{');};/**
     * Creates a `{cooked, raw}` object from the `metaBlock` and `messagePart`.
     *
     * The `raw` text must have various character sequences escaped:
     * * "\" would otherwise indicate that the next character is a control character.
     * * "`" and "${" are template string control sequences that would otherwise prematurely indicate
     *   the end of a message part.
     * * ":" inside a metablock would prematurely indicate the end of the metablock.
     * * ":" at the start of a messagePart with no metablock would erroneously indicate the start of a
     *   metablock.
     *
     * @param metaBlock Any metadata that should be prepended to the string
     * @param messagePart The message part of the string
     */function createCookedRawString(metaBlock,messagePart){if(metaBlock===''){return{cooked:messagePart,raw:escapeForMessagePart(escapeStartingColon(escapeSlashes(messagePart)))};}else{return{cooked:":"+metaBlock+":"+messagePart,raw:escapeForMessagePart(":"+escapeColons(escapeSlashes(metaBlock))+":"+escapeSlashes(messagePart))};}}var ExternalExpr=/** @class */function(_super){__extends(ExternalExpr,_super);function ExternalExpr(value,type,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;_this.typeParams=typeParams;return _this;}ExternalExpr.prototype.isEquivalent=function(e){return e instanceof ExternalExpr&&this.value.name===e.value.name&&this.value.moduleName===e.value.moduleName&&this.value.runtime===e.value.runtime;};ExternalExpr.prototype.isConstant=function(){return false;};ExternalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitExternalExpr(this,context);};return ExternalExpr;}(Expression);var ExternalReference=/** @class */function(){function ExternalReference(moduleName,name,runtime){this.moduleName=moduleName;this.name=name;this.runtime=runtime;}return ExternalReference;}();var ConditionalExpr=/** @class */function(_super){__extends(ConditionalExpr,_super);function ConditionalExpr(condition,trueCase,falseCase,type,sourceSpan){if(falseCase===void 0){falseCase=null;}var _this=_super.call(this,type||trueCase.type,sourceSpan)||this;_this.condition=condition;_this.falseCase=falseCase;_this.trueCase=trueCase;return _this;}ConditionalExpr.prototype.isEquivalent=function(e){return e instanceof ConditionalExpr&&this.condition.isEquivalent(e.condition)&&this.trueCase.isEquivalent(e.trueCase)&&nullSafeIsEquivalent(this.falseCase,e.falseCase);};ConditionalExpr.prototype.isConstant=function(){return false;};ConditionalExpr.prototype.visitExpression=function(visitor,context){return visitor.visitConditionalExpr(this,context);};return ConditionalExpr;}(Expression);var NotExpr=/** @class */function(_super){__extends(NotExpr,_super);function NotExpr(condition,sourceSpan){var _this=_super.call(this,BOOL_TYPE,sourceSpan)||this;_this.condition=condition;return _this;}NotExpr.prototype.isEquivalent=function(e){return e instanceof NotExpr&&this.condition.isEquivalent(e.condition);};NotExpr.prototype.isConstant=function(){return false;};NotExpr.prototype.visitExpression=function(visitor,context){return visitor.visitNotExpr(this,context);};return NotExpr;}(Expression);var AssertNotNull=/** @class */function(_super){__extends(AssertNotNull,_super);function AssertNotNull(condition,sourceSpan){var _this=_super.call(this,condition.type,sourceSpan)||this;_this.condition=condition;return _this;}AssertNotNull.prototype.isEquivalent=function(e){return e instanceof AssertNotNull&&this.condition.isEquivalent(e.condition);};AssertNotNull.prototype.isConstant=function(){return false;};AssertNotNull.prototype.visitExpression=function(visitor,context){return visitor.visitAssertNotNullExpr(this,context);};return AssertNotNull;}(Expression);var CastExpr=/** @class */function(_super){__extends(CastExpr,_super);function CastExpr(value,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.value=value;return _this;}CastExpr.prototype.isEquivalent=function(e){return e instanceof CastExpr&&this.value.isEquivalent(e.value);};CastExpr.prototype.isConstant=function(){return false;};CastExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCastExpr(this,context);};return CastExpr;}(Expression);var FnParam=/** @class */function(){function FnParam(name,type){if(type===void 0){type=null;}this.name=name;this.type=type;}FnParam.prototype.isEquivalent=function(param){return this.name===param.name;};return FnParam;}();var FunctionExpr=/** @class */function(_super){__extends(FunctionExpr,_super);function FunctionExpr(params,statements,type,sourceSpan,name){var _this=_super.call(this,type,sourceSpan)||this;_this.params=params;_this.statements=statements;_this.name=name;return _this;}FunctionExpr.prototype.isEquivalent=function(e){return e instanceof FunctionExpr&&areAllEquivalent(this.params,e.params)&&areAllEquivalent(this.statements,e.statements);};FunctionExpr.prototype.isConstant=function(){return false;};FunctionExpr.prototype.visitExpression=function(visitor,context){return visitor.visitFunctionExpr(this,context);};FunctionExpr.prototype.toDeclStmt=function(name,modifiers){if(modifiers===void 0){modifiers=null;}return new DeclareFunctionStmt(name,this.params,this.statements,this.type,modifiers,this.sourceSpan);};return FunctionExpr;}(Expression);var BinaryOperatorExpr=/** @class */function(_super){__extends(BinaryOperatorExpr,_super);function BinaryOperatorExpr(operator,lhs,rhs,type,sourceSpan,parens){if(parens===void 0){parens=true;}var _this=_super.call(this,type||lhs.type,sourceSpan)||this;_this.operator=operator;_this.rhs=rhs;_this.parens=parens;_this.lhs=lhs;return _this;}BinaryOperatorExpr.prototype.isEquivalent=function(e){return e instanceof BinaryOperatorExpr&&this.operator===e.operator&&this.lhs.isEquivalent(e.lhs)&&this.rhs.isEquivalent(e.rhs);};BinaryOperatorExpr.prototype.isConstant=function(){return false;};BinaryOperatorExpr.prototype.visitExpression=function(visitor,context){return visitor.visitBinaryOperatorExpr(this,context);};return BinaryOperatorExpr;}(Expression);var ReadPropExpr=/** @class */function(_super){__extends(ReadPropExpr,_super);function ReadPropExpr(receiver,name,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.name=name;return _this;}ReadPropExpr.prototype.isEquivalent=function(e){return e instanceof ReadPropExpr&&this.receiver.isEquivalent(e.receiver)&&this.name===e.name;};ReadPropExpr.prototype.isConstant=function(){return false;};ReadPropExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadPropExpr(this,context);};ReadPropExpr.prototype.set=function(value){return new WritePropExpr(this.receiver,this.name,value,null,this.sourceSpan);};return ReadPropExpr;}(Expression);var ReadKeyExpr=/** @class */function(_super){__extends(ReadKeyExpr,_super);function ReadKeyExpr(receiver,index,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.receiver=receiver;_this.index=index;return _this;}ReadKeyExpr.prototype.isEquivalent=function(e){return e instanceof ReadKeyExpr&&this.receiver.isEquivalent(e.receiver)&&this.index.isEquivalent(e.index);};ReadKeyExpr.prototype.isConstant=function(){return false;};ReadKeyExpr.prototype.visitExpression=function(visitor,context){return visitor.visitReadKeyExpr(this,context);};ReadKeyExpr.prototype.set=function(value){return new WriteKeyExpr(this.receiver,this.index,value,null,this.sourceSpan);};return ReadKeyExpr;}(Expression);var LiteralArrayExpr=/** @class */function(_super){__extends(LiteralArrayExpr,_super);function LiteralArrayExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;return _this;}LiteralArrayExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.isConstant();});};LiteralArrayExpr.prototype.isEquivalent=function(e){return e instanceof LiteralArrayExpr&&areAllEquivalent(this.entries,e.entries);};LiteralArrayExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralArrayExpr(this,context);};return LiteralArrayExpr;}(Expression);var LiteralMapEntry=/** @class */function(){function LiteralMapEntry(key,value,quoted){this.key=key;this.value=value;this.quoted=quoted;}LiteralMapEntry.prototype.isEquivalent=function(e){return this.key===e.key&&this.value.isEquivalent(e.value);};return LiteralMapEntry;}();var LiteralMapExpr=/** @class */function(_super){__extends(LiteralMapExpr,_super);function LiteralMapExpr(entries,type,sourceSpan){var _this=_super.call(this,type,sourceSpan)||this;_this.entries=entries;_this.valueType=null;if(type){_this.valueType=type.valueType;}return _this;}LiteralMapExpr.prototype.isEquivalent=function(e){return e instanceof LiteralMapExpr&&areAllEquivalent(this.entries,e.entries);};LiteralMapExpr.prototype.isConstant=function(){return this.entries.every(function(e){return e.value.isConstant();});};LiteralMapExpr.prototype.visitExpression=function(visitor,context){return visitor.visitLiteralMapExpr(this,context);};return LiteralMapExpr;}(Expression);var CommaExpr=/** @class */function(_super){__extends(CommaExpr,_super);function CommaExpr(parts,sourceSpan){var _this=_super.call(this,parts[parts.length-1].type,sourceSpan)||this;_this.parts=parts;return _this;}CommaExpr.prototype.isEquivalent=function(e){return e instanceof CommaExpr&&areAllEquivalent(this.parts,e.parts);};CommaExpr.prototype.isConstant=function(){return false;};CommaExpr.prototype.visitExpression=function(visitor,context){return visitor.visitCommaExpr(this,context);};return CommaExpr;}(Expression);var THIS_EXPR=new ReadVarExpr(exports.BuiltinVar.This,null,null);var SUPER_EXPR=new ReadVarExpr(exports.BuiltinVar.Super,null,null);var CATCH_ERROR_VAR=new ReadVarExpr(exports.BuiltinVar.CatchError,null,null);var CATCH_STACK_VAR=new ReadVarExpr(exports.BuiltinVar.CatchStack,null,null);var NULL_EXPR=new LiteralExpr(null,null,null);var TYPED_NULL_EXPR=new LiteralExpr(null,INFERRED_TYPE,null);(function(StmtModifier){StmtModifier[StmtModifier["Final"]=0]="Final";StmtModifier[StmtModifier["Private"]=1]="Private";StmtModifier[StmtModifier["Exported"]=2]="Exported";StmtModifier[StmtModifier["Static"]=3]="Static";})(exports.StmtModifier||(exports.StmtModifier={}));var Statement=/** @class */function(){function Statement(modifiers,sourceSpan){this.modifiers=modifiers||[];this.sourceSpan=sourceSpan||null;}Statement.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return Statement;}();var DeclareVarStmt=/** @class */function(_super){__extends(DeclareVarStmt,_super);function DeclareVarStmt(name,value,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.value=value;_this.type=type||value&&value.type||null;return _this;}DeclareVarStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareVarStmt&&this.name===stmt.name&&(this.value?!!stmt.value&&this.value.isEquivalent(stmt.value):!stmt.value);};DeclareVarStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareVarStmt(this,context);};return DeclareVarStmt;}(Statement);var DeclareFunctionStmt=/** @class */function(_super){__extends(DeclareFunctionStmt,_super);function DeclareFunctionStmt(name,params,statements,type,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.params=params;_this.statements=statements;_this.type=type||null;return _this;}DeclareFunctionStmt.prototype.isEquivalent=function(stmt){return stmt instanceof DeclareFunctionStmt&&areAllEquivalent(this.params,stmt.params)&&areAllEquivalent(this.statements,stmt.statements);};DeclareFunctionStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareFunctionStmt(this,context);};return DeclareFunctionStmt;}(Statement);var ExpressionStatement=/** @class */function(_super){__extends(ExpressionStatement,_super);function ExpressionStatement(expr,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.expr=expr;return _this;}ExpressionStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ExpressionStatement&&this.expr.isEquivalent(stmt.expr);};ExpressionStatement.prototype.visitStatement=function(visitor,context){return visitor.visitExpressionStmt(this,context);};return ExpressionStatement;}(Statement);var ReturnStatement=/** @class */function(_super){__extends(ReturnStatement,_super);function ReturnStatement(value,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.value=value;return _this;}ReturnStatement.prototype.isEquivalent=function(stmt){return stmt instanceof ReturnStatement&&this.value.isEquivalent(stmt.value);};ReturnStatement.prototype.visitStatement=function(visitor,context){return visitor.visitReturnStmt(this,context);};return ReturnStatement;}(Statement);var AbstractClassPart=/** @class */function(){function AbstractClassPart(type,modifiers){this.modifiers=modifiers;if(!modifiers){this.modifiers=[];}this.type=type||null;}AbstractClassPart.prototype.hasModifier=function(modifier){return this.modifiers.indexOf(modifier)!==-1;};return AbstractClassPart;}();var ClassField=/** @class */function(_super){__extends(ClassField,_super);function ClassField(name,type,modifiers,initializer){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.initializer=initializer;return _this;}ClassField.prototype.isEquivalent=function(f){return this.name===f.name;};return ClassField;}(AbstractClassPart);var ClassMethod=/** @class */function(_super){__extends(ClassMethod,_super);function ClassMethod(name,params,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.params=params;_this.body=body;return _this;}ClassMethod.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassMethod;}(AbstractClassPart);var ClassGetter=/** @class */function(_super){__extends(ClassGetter,_super);function ClassGetter(name,body,type,modifiers){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,type,modifiers)||this;_this.name=name;_this.body=body;return _this;}ClassGetter.prototype.isEquivalent=function(m){return this.name===m.name&&areAllEquivalent(this.body,m.body);};return ClassGetter;}(AbstractClassPart);var ClassStmt=/** @class */function(_super){__extends(ClassStmt,_super);function ClassStmt(name,parent,fields,getters,constructorMethod,methods,modifiers,sourceSpan){if(modifiers===void 0){modifiers=null;}var _this=_super.call(this,modifiers,sourceSpan)||this;_this.name=name;_this.parent=parent;_this.fields=fields;_this.getters=getters;_this.constructorMethod=constructorMethod;_this.methods=methods;return _this;}ClassStmt.prototype.isEquivalent=function(stmt){return stmt instanceof ClassStmt&&this.name===stmt.name&&nullSafeIsEquivalent(this.parent,stmt.parent)&&areAllEquivalent(this.fields,stmt.fields)&&areAllEquivalent(this.getters,stmt.getters)&&this.constructorMethod.isEquivalent(stmt.constructorMethod)&&areAllEquivalent(this.methods,stmt.methods);};ClassStmt.prototype.visitStatement=function(visitor,context){return visitor.visitDeclareClassStmt(this,context);};return ClassStmt;}(Statement);var IfStmt=/** @class */function(_super){__extends(IfStmt,_super);function IfStmt(condition,trueCase,falseCase,sourceSpan){if(falseCase===void 0){falseCase=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.condition=condition;_this.trueCase=trueCase;_this.falseCase=falseCase;return _this;}IfStmt.prototype.isEquivalent=function(stmt){return stmt instanceof IfStmt&&this.condition.isEquivalent(stmt.condition)&&areAllEquivalent(this.trueCase,stmt.trueCase)&&areAllEquivalent(this.falseCase,stmt.falseCase);};IfStmt.prototype.visitStatement=function(visitor,context){return visitor.visitIfStmt(this,context);};return IfStmt;}(Statement);var CommentStmt=/** @class */function(_super){__extends(CommentStmt,_super);function CommentStmt(comment,multiline,sourceSpan){if(multiline===void 0){multiline=false;}var _this=_super.call(this,null,sourceSpan)||this;_this.comment=comment;_this.multiline=multiline;return _this;}CommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof CommentStmt;};CommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitCommentStmt(this,context);};return CommentStmt;}(Statement);var JSDocCommentStmt=/** @class */function(_super){__extends(JSDocCommentStmt,_super);function JSDocCommentStmt(tags,sourceSpan){if(tags===void 0){tags=[];}var _this=_super.call(this,null,sourceSpan)||this;_this.tags=tags;return _this;}JSDocCommentStmt.prototype.isEquivalent=function(stmt){return stmt instanceof JSDocCommentStmt&&this.toString()===stmt.toString();};JSDocCommentStmt.prototype.visitStatement=function(visitor,context){return visitor.visitJSDocCommentStmt(this,context);};JSDocCommentStmt.prototype.toString=function(){return serializeTags(this.tags);};return JSDocCommentStmt;}(Statement);var TryCatchStmt=/** @class */function(_super){__extends(TryCatchStmt,_super);function TryCatchStmt(bodyStmts,catchStmts,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.bodyStmts=bodyStmts;_this.catchStmts=catchStmts;return _this;}TryCatchStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&areAllEquivalent(this.bodyStmts,stmt.bodyStmts)&&areAllEquivalent(this.catchStmts,stmt.catchStmts);};TryCatchStmt.prototype.visitStatement=function(visitor,context){return visitor.visitTryCatchStmt(this,context);};return TryCatchStmt;}(Statement);var ThrowStmt=/** @class */function(_super){__extends(ThrowStmt,_super);function ThrowStmt(error,sourceSpan){var _this=_super.call(this,null,sourceSpan)||this;_this.error=error;return _this;}ThrowStmt.prototype.isEquivalent=function(stmt){return stmt instanceof TryCatchStmt&&this.error.isEquivalent(stmt.error);};ThrowStmt.prototype.visitStatement=function(visitor,context){return visitor.visitThrowStmt(this,context);};return ThrowStmt;}(Statement);var AstTransformer=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.transformExpr=function(expr,context){return expr;};AstTransformer.prototype.transformStmt=function(stmt,context){return stmt;};AstTransformer.prototype.visitReadVarExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitWrappedNodeExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitTypeofExpr=function(expr,context){return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWriteVarExpr=function(expr,context){return this.transformExpr(new WriteVarExpr(expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWriteKeyExpr=function(expr,context){return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this,context),expr.index.visitExpression(this,context),expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitWritePropExpr=function(expr,context){return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this,context),expr.name,expr.value.visitExpression(this,context),expr.type,expr.sourceSpan),context);};AstTransformer.prototype.visitInvokeMethodExpr=function(ast,context){var method=ast.builtin||ast.name;return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this,context),method,this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInvokeFunctionExpr=function(ast,context){return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitInstantiateExpr=function(ast,context){return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this,context),this.visitAllExpressions(ast.args,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitLocalizedString=function(ast,context){return this.transformExpr(new LocalizedString(ast.metaBlock,ast.messageParts,ast.placeHolderNames,this.visitAllExpressions(ast.expressions,context),ast.sourceSpan),context);};AstTransformer.prototype.visitExternalExpr=function(ast,context){return this.transformExpr(ast,context);};AstTransformer.prototype.visitConditionalExpr=function(ast,context){return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this,context),ast.trueCase.visitExpression(this,context),ast.falseCase.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitNotExpr=function(ast,context){return this.transformExpr(new NotExpr(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAssertNotNullExpr=function(ast,context){return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this,context),ast.sourceSpan),context);};AstTransformer.prototype.visitCastExpr=function(ast,context){return this.transformExpr(new CastExpr(ast.value.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitFunctionExpr=function(ast,context){return this.transformExpr(new FunctionExpr(ast.params,this.visitAllStatements(ast.statements,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitBinaryOperatorExpr=function(ast,context){return this.transformExpr(new BinaryOperatorExpr(ast.operator,ast.lhs.visitExpression(this,context),ast.rhs.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadPropExpr=function(ast,context){return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this,context),ast.name,ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitReadKeyExpr=function(ast,context){return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this,context),ast.index.visitExpression(this,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralArrayExpr=function(ast,context){return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries,context),ast.type,ast.sourceSpan),context);};AstTransformer.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var entries=ast.entries.map(function(entry){return new LiteralMapEntry(entry.key,entry.value.visitExpression(_this,context),entry.quoted);});var mapType=new MapType(ast.valueType,null);return this.transformExpr(new LiteralMapExpr(entries,mapType,ast.sourceSpan),context);};AstTransformer.prototype.visitCommaExpr=function(ast,context){return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts,context),ast.sourceSpan),context);};AstTransformer.prototype.visitAllExpressions=function(exprs,context){var _this=this;return exprs.map(function(expr){return expr.visitExpression(_this,context);});};AstTransformer.prototype.visitDeclareVarStmt=function(stmt,context){var value=stmt.value&&stmt.value.visitExpression(this,context);return this.transformStmt(new DeclareVarStmt(stmt.name,value,stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareFunctionStmt=function(stmt,context){return this.transformStmt(new DeclareFunctionStmt(stmt.name,stmt.params,this.visitAllStatements(stmt.statements,context),stmt.type,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitExpressionStmt=function(stmt,context){return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitReturnStmt=function(stmt,context){return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;var parent=stmt.parent.visitExpression(this,context);var getters=stmt.getters.map(function(getter){return new ClassGetter(getter.name,_this.visitAllStatements(getter.body,context),getter.type,getter.modifiers);});var ctorMethod=stmt.constructorMethod&&new ClassMethod(stmt.constructorMethod.name,stmt.constructorMethod.params,this.visitAllStatements(stmt.constructorMethod.body,context),stmt.constructorMethod.type,stmt.constructorMethod.modifiers);var methods=stmt.methods.map(function(method){return new ClassMethod(method.name,method.params,_this.visitAllStatements(method.body,context),method.type,method.modifiers);});return this.transformStmt(new ClassStmt(stmt.name,parent,stmt.fields,getters,ctorMethod,methods,stmt.modifiers,stmt.sourceSpan),context);};AstTransformer.prototype.visitIfStmt=function(stmt,context){return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this,context),this.visitAllStatements(stmt.trueCase,context),this.visitAllStatements(stmt.falseCase,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitTryCatchStmt=function(stmt,context){return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts,context),this.visitAllStatements(stmt.catchStmts,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitThrowStmt=function(stmt,context){return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this,context),stmt.sourceSpan),context);};AstTransformer.prototype.visitCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitJSDocCommentStmt=function(stmt,context){return this.transformStmt(stmt,context);};AstTransformer.prototype.visitAllStatements=function(stmts,context){var _this=this;return stmts.map(function(stmt){return stmt.visitStatement(_this,context);});};return AstTransformer;}();var RecursiveAstVisitor=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visitType=function(ast,context){return ast;};RecursiveAstVisitor.prototype.visitExpression=function(ast,context){if(ast.type){ast.type.visitType(this,context);}return ast;};RecursiveAstVisitor.prototype.visitBuiltinType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitExpressionType=function(type,context){var _this=this;type.value.visitExpression(this,context);if(type.typeParams!==null){type.typeParams.forEach(function(param){return _this.visitType(param,context);});}return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitArrayType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitMapType=function(type,context){return this.visitType(type,context);};RecursiveAstVisitor.prototype.visitWrappedNodeExpr=function(ast,context){return ast;};RecursiveAstVisitor.prototype.visitTypeofExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadVarExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteVarExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWriteKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitWritePropExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeMethodExpr=function(ast,context){ast.receiver.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInvokeFunctionExpr=function(ast,context){ast.fn.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitInstantiateExpr=function(ast,context){ast.classExpr.visitExpression(this,context);this.visitAllExpressions(ast.args,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralExpr=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLocalizedString=function(ast,context){return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitExternalExpr=function(ast,context){var _this=this;if(ast.typeParams){ast.typeParams.forEach(function(type){return type.visitType(_this,context);});}return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitConditionalExpr=function(ast,context){ast.condition.visitExpression(this,context);ast.trueCase.visitExpression(this,context);ast.falseCase.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitNotExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAssertNotNullExpr=function(ast,context){ast.condition.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCastExpr=function(ast,context){ast.value.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitFunctionExpr=function(ast,context){this.visitAllStatements(ast.statements,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitBinaryOperatorExpr=function(ast,context){ast.lhs.visitExpression(this,context);ast.rhs.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadPropExpr=function(ast,context){ast.receiver.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitReadKeyExpr=function(ast,context){ast.receiver.visitExpression(this,context);ast.index.visitExpression(this,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralArrayExpr=function(ast,context){this.visitAllExpressions(ast.entries,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;ast.entries.forEach(function(entry){return entry.value.visitExpression(_this,context);});return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitCommaExpr=function(ast,context){this.visitAllExpressions(ast.parts,context);return this.visitExpression(ast,context);};RecursiveAstVisitor.prototype.visitAllExpressions=function(exprs,context){var _this=this;exprs.forEach(function(expr){return expr.visitExpression(_this,context);});};RecursiveAstVisitor.prototype.visitDeclareVarStmt=function(stmt,context){if(stmt.value){stmt.value.visitExpression(this,context);}if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){this.visitAllStatements(stmt.statements,context);if(stmt.type){stmt.type.visitType(this,context);}return stmt;};RecursiveAstVisitor.prototype.visitExpressionStmt=function(stmt,context){stmt.expr.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitReturnStmt=function(stmt,context){stmt.value.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitDeclareClassStmt=function(stmt,context){var _this=this;stmt.parent.visitExpression(this,context);stmt.getters.forEach(function(getter){return _this.visitAllStatements(getter.body,context);});if(stmt.constructorMethod){this.visitAllStatements(stmt.constructorMethod.body,context);}stmt.methods.forEach(function(method){return _this.visitAllStatements(method.body,context);});return stmt;};RecursiveAstVisitor.prototype.visitIfStmt=function(stmt,context){stmt.condition.visitExpression(this,context);this.visitAllStatements(stmt.trueCase,context);this.visitAllStatements(stmt.falseCase,context);return stmt;};RecursiveAstVisitor.prototype.visitTryCatchStmt=function(stmt,context){this.visitAllStatements(stmt.bodyStmts,context);this.visitAllStatements(stmt.catchStmts,context);return stmt;};RecursiveAstVisitor.prototype.visitThrowStmt=function(stmt,context){stmt.error.visitExpression(this,context);return stmt;};RecursiveAstVisitor.prototype.visitCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitJSDocCommentStmt=function(stmt,context){return stmt;};RecursiveAstVisitor.prototype.visitAllStatements=function(stmts,context){var _this=this;stmts.forEach(function(stmt){return stmt.visitStatement(_this,context);});};return RecursiveAstVisitor;}();function findReadVarNames(stmts){var visitor=new _ReadVarVisitor();visitor.visitAllStatements(stmts,null);return visitor.varNames;}var _ReadVarVisitor=/** @class */function(_super){__extends(_ReadVarVisitor,_super);function _ReadVarVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.varNames=new Set();return _this;}_ReadVarVisitor.prototype.visitDeclareFunctionStmt=function(stmt,context){// Don't descend into nested functions
return stmt;};_ReadVarVisitor.prototype.visitDeclareClassStmt=function(stmt,context){// Don't descend into nested classes
return stmt;};_ReadVarVisitor.prototype.visitReadVarExpr=function(ast,context){if(ast.name){this.varNames.add(ast.name);}return null;};return _ReadVarVisitor;}(RecursiveAstVisitor);function collectExternalReferences(stmts){var visitor=new _FindExternalReferencesVisitor();visitor.visitAllStatements(stmts,null);return visitor.externalReferences;}var _FindExternalReferencesVisitor=/** @class */function(_super){__extends(_FindExternalReferencesVisitor,_super);function _FindExternalReferencesVisitor(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.externalReferences=[];return _this;}_FindExternalReferencesVisitor.prototype.visitExternalExpr=function(e,context){this.externalReferences.push(e.value);return _super.prototype.visitExternalExpr.call(this,e,context);};return _FindExternalReferencesVisitor;}(RecursiveAstVisitor);function applySourceSpanToStatementIfNeeded(stmt,sourceSpan){if(!sourceSpan){return stmt;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return stmt.visitStatement(transformer,null);}function applySourceSpanToExpressionIfNeeded(expr,sourceSpan){if(!sourceSpan){return expr;}var transformer=new _ApplySourceSpanTransformer(sourceSpan);return expr.visitExpression(transformer,null);}var _ApplySourceSpanTransformer=/** @class */function(_super){__extends(_ApplySourceSpanTransformer,_super);function _ApplySourceSpanTransformer(sourceSpan){var _this=_super.call(this)||this;_this.sourceSpan=sourceSpan;return _this;}_ApplySourceSpanTransformer.prototype._clone=function(obj){var e_1,_a;var clone=Object.create(obj.constructor.prototype);try{for(var _b=__values(Object.keys(obj)),_c=_b.next();!_c.done;_c=_b.next()){var prop=_c.value;clone[prop]=obj[prop];}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return clone;};_ApplySourceSpanTransformer.prototype.transformExpr=function(expr,context){if(!expr.sourceSpan){expr=this._clone(expr);expr.sourceSpan=this.sourceSpan;}return expr;};_ApplySourceSpanTransformer.prototype.transformStmt=function(stmt,context){if(!stmt.sourceSpan){stmt=this._clone(stmt);stmt.sourceSpan=this.sourceSpan;}return stmt;};return _ApplySourceSpanTransformer;}(AstTransformer);function variable(name,type,sourceSpan){return new ReadVarExpr(name,type,sourceSpan);}function importExpr(id,typeParams,sourceSpan){if(typeParams===void 0){typeParams=null;}return new ExternalExpr(id,null,typeParams,sourceSpan);}function importType(id,typeParams,typeModifiers){if(typeParams===void 0){typeParams=null;}if(typeModifiers===void 0){typeModifiers=null;}return id!=null?expressionType(importExpr(id,typeParams,null),typeModifiers):null;}function expressionType(expr,typeModifiers,typeParams){if(typeModifiers===void 0){typeModifiers=null;}if(typeParams===void 0){typeParams=null;}return new ExpressionType(expr,typeModifiers,typeParams);}function typeofExpr(expr){return new TypeofExpr(expr);}function literalArr(values,type,sourceSpan){return new LiteralArrayExpr(values,type,sourceSpan);}function literalMap(values,type){if(type===void 0){type=null;}return new LiteralMapExpr(values.map(function(e){return new LiteralMapEntry(e.key,e.value,e.quoted);}),type,null);}function not(expr,sourceSpan){return new NotExpr(expr,sourceSpan);}function assertNotNull(expr,sourceSpan){return new AssertNotNull(expr,sourceSpan);}function fn(params,body,type,sourceSpan,name){return new FunctionExpr(params,body,type,sourceSpan,name);}function ifStmt(condition,thenClause,elseClause){return new IfStmt(condition,thenClause,elseClause);}function literal(value,type,sourceSpan){return new LiteralExpr(value,type,sourceSpan);}function localizedString(metaBlock,messageParts,placeholderNames,expressions,sourceSpan){return new LocalizedString(metaBlock,messageParts,placeholderNames,expressions,sourceSpan);}function isNull(exp){return exp instanceof LiteralExpr&&exp.value===null;}/*
     * Serializes a `Tag` into a string.
     * Returns a string like " @foo {bar} baz" (note the leading whitespace before `@foo`).
     */function tagToString(tag){var out='';if(tag.tagName){out+=" @"+tag.tagName;}if(tag.text){if(tag.text.match(/\/\*|\*\//)){throw new Error('JSDoc text cannot contain "/*" and "*/"');}out+=' '+tag.text.replace(/@/g,'\\@');}return out;}function serializeTags(tags){var e_2,_a;if(tags.length===0)return'';var out='*\n';try{for(var tags_1=__values(tags),tags_1_1=tags_1.next();!tags_1_1.done;tags_1_1=tags_1.next()){var tag=tags_1_1.value;out+=' *';// If the tagToString is multi-line, insert " * " prefixes on subsequent lines.
out+=tagToString(tag).replace(/\n/g,'\n * ');out+='\n';}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(tags_1_1&&!tags_1_1.done&&(_a=tags_1["return"]))_a.call(tags_1);}finally{if(e_2)throw e_2.error;}}out+=' ';return out;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var DASH_CASE_REGEXP=/-+([a-z0-9])/g;function dashCaseToCamelCase(input){return input.replace(DASH_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[1].toUpperCase();});}function splitAtColon(input,defaultValues){return _splitAt(input,':',defaultValues);}function splitAtPeriod(input,defaultValues){return _splitAt(input,'.',defaultValues);}function _splitAt(input,character,defaultValues){var characterIndex=input.indexOf(character);if(characterIndex==-1)return defaultValues;return[input.slice(0,characterIndex).trim(),input.slice(characterIndex+1).trim()];}function visitValue(value,visitor,context){if(Array.isArray(value)){return visitor.visitArray(value,context);}if(isStrictStringMap(value)){return visitor.visitStringMap(value,context);}if(value==null||typeof value=='string'||typeof value=='number'||typeof value=='boolean'){return visitor.visitPrimitive(value,context);}return visitor.visitOther(value,context);}function isDefined(val){return val!==null&&val!==undefined;}function noUndefined(val){return val===undefined?null:val;}var ValueTransformer=/** @class */function(){function ValueTransformer(){}ValueTransformer.prototype.visitArray=function(arr,context){var _this=this;return arr.map(function(value){return visitValue(value,_this,context);});};ValueTransformer.prototype.visitStringMap=function(map,context){var _this=this;var result={};Object.keys(map).forEach(function(key){result[key]=visitValue(map[key],_this,context);});return result;};ValueTransformer.prototype.visitPrimitive=function(value,context){return value;};ValueTransformer.prototype.visitOther=function(value,context){return value;};return ValueTransformer;}();var SyncAsync={assertSync:function assertSync(value){if(isPromise(value)){throw new Error("Illegal state: value cannot be a promise");}return value;},then:function then(value,cb){return isPromise(value)?value.then(cb):cb(value);},all:function all(syncAsyncValues){return syncAsyncValues.some(isPromise)?Promise.all(syncAsyncValues):syncAsyncValues;}};function error(msg){throw new Error("Internal Error: "+msg);}function syntaxError(msg,parseErrors){var error=Error(msg);error[ERROR_SYNTAX_ERROR]=true;if(parseErrors)error[ERROR_PARSE_ERRORS]=parseErrors;return error;}var ERROR_SYNTAX_ERROR='ngSyntaxError';var ERROR_PARSE_ERRORS='ngParseErrors';function isSyntaxError(error){return error[ERROR_SYNTAX_ERROR];}function getParseErrors(error){return error[ERROR_PARSE_ERRORS]||[];}// Escape characters that have a special meaning in Regular Expressions
function escapeRegExp(s){return s.replace(/([.*+?^=!:${}()|[\]\/\\])/g,'\\$1');}var STRING_MAP_PROTO=Object.getPrototypeOf({});function isStrictStringMap(obj){return _typeof(obj)==='object'&&obj!==null&&Object.getPrototypeOf(obj)===STRING_MAP_PROTO;}function utf8Encode(str){var encoded='';for(var index=0;index<str.length;index++){var codePoint=str.charCodeAt(index);// decode surrogate
// see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
if(codePoint>=0xd800&&codePoint<=0xdbff&&str.length>index+1){var low=str.charCodeAt(index+1);if(low>=0xdc00&&low<=0xdfff){index++;codePoint=(codePoint-0xd800<<10)+low-0xdc00+0x10000;}}if(codePoint<=0x7f){encoded+=String.fromCharCode(codePoint);}else if(codePoint<=0x7ff){encoded+=String.fromCharCode(codePoint>>6&0x1F|0xc0,codePoint&0x3f|0x80);}else if(codePoint<=0xffff){encoded+=String.fromCharCode(codePoint>>12|0xe0,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}else if(codePoint<=0x1fffff){encoded+=String.fromCharCode(codePoint>>18&0x07|0xf0,codePoint>>12&0x3f|0x80,codePoint>>6&0x3f|0x80,codePoint&0x3f|0x80);}}return encoded;}function stringify(token){if(typeof token==='string'){return token;}if(Array.isArray(token)){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}if(!token.toString){return'object';}// WARNING: do not try to `JSON.stringify(token)` here
// see https://github.com/angular/angular/issues/23440
var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
     * Lazily retrieves the reference value from a forwardRef.
     */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')){return type();}else{return type;}}/**
     * Determine if the argument is shaped like a Promise
     */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}var Version=/** @class */function(){function Version(full){this.full=full;var splits=full.split('.');this.major=splits[0];this.minor=splits[1];this.patch=splits.slice(2).join('.');}return Version;}();var __window=typeof window!=='undefined'&&window;var __self=typeof self!=='undefined'&&typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope&&self;var __global=typeof global!=='undefined'&&global;// Check __global first, because in Node tests both __global and __window may be defined and _global
// should be __global in that case.
var _global=__global||__window||__self;function newArray(size,value){var list=[];for(var i=0;i<size;i++){list.push(value);}return list;}/**
     * Partitions a given array into 2 arrays, based on a boolean value returned by the condition
     * function.
     *
     * @param arr Input array that should be partitioned
     * @param conditionFn Condition function that is called for each item in a given array and returns a
     * boolean value.
     */function partitionArray(arr,conditionFn){var truthy=[];var falsy=[];arr.forEach(function(item){(conditionFn(item)?truthy:falsy).push(item);});return[truthy,falsy];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CONSTANT_PREFIX='_c';/**
     * `ConstantPool` tries to reuse literal factories when two or more literals are identical.
     * We determine whether literals are identical by creating a key out of their AST using the
     * `KeyVisitor`. This constant is used to replace dynamic expressions which can't be safely
     * converted into a key. E.g. given an expression `{foo: bar()}`, since we don't know what
     * the result of `bar` will be, we create a key that looks like `{foo: <unknown>}`. Note
     * that we use a variable, rather than something like `null` in order to avoid collisions.
     */var UNKNOWN_VALUE_KEY=variable('<unknown>');/**
     * Context to use when producing a key.
     *
     * This ensures we see the constant not the reference variable when producing
     * a key.
     */var KEY_CONTEXT={};/**
     * A node that is a place-holder that allows the node to be replaced when the actual
     * node is known.
     *
     * This allows the constant pool to change an expression from a direct reference to
     * a constant to a shared constant. It returns a fix-up node that is later allowed to
     * change the referenced expression.
     */var FixupExpression=/** @class */function(_super){__extends(FixupExpression,_super);function FixupExpression(resolved){var _this=_super.call(this,resolved.type)||this;_this.resolved=resolved;_this.original=resolved;return _this;}FixupExpression.prototype.visitExpression=function(visitor,context){if(context===KEY_CONTEXT){// When producing a key we want to traverse the constant not the
// variable used to refer to it.
return this.original.visitExpression(visitor,context);}else{return this.resolved.visitExpression(visitor,context);}};FixupExpression.prototype.isEquivalent=function(e){return e instanceof FixupExpression&&this.resolved.isEquivalent(e.resolved);};FixupExpression.prototype.isConstant=function(){return true;};FixupExpression.prototype.fixup=function(expression){this.resolved=expression;this.shared=true;};return FixupExpression;}(Expression);/**
     * A constant pool allows a code emitter to share constant in an output context.
     *
     * The constant pool also supports sharing access to ivy definitions references.
     */var ConstantPool=/** @class */function(){function ConstantPool(){this.statements=[];this.literals=new Map();this.literalFactories=new Map();this.injectorDefinitions=new Map();this.directiveDefinitions=new Map();this.componentDefinitions=new Map();this.pipeDefinitions=new Map();this.nextNameIndex=0;}ConstantPool.prototype.getConstLiteral=function(literal,forceShared){if(literal instanceof LiteralExpr||literal instanceof FixupExpression){// Do no put simple literals into the constant pool or try to produce a constant for a
// reference to a constant.
return literal;}var key=this.keyOf(literal);var fixup=this.literals.get(key);var newValue=false;if(!fixup){fixup=new FixupExpression(literal);this.literals.set(key,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){// Replace the expression with a variable
var name_1=this.freshName();this.statements.push(variable(name_1).set(literal).toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Final]));fixup.fixup(variable(name_1));}return fixup;};ConstantPool.prototype.getDefinition=function(type,kind,ctx,forceShared){if(forceShared===void 0){forceShared=false;}var definitions=this.definitionsOf(kind);var fixup=definitions.get(type);var newValue=false;if(!fixup){var property=this.propertyNameOf(kind);fixup=new FixupExpression(ctx.importExpr(type).prop(property));definitions.set(type,fixup);newValue=true;}if(!newValue&&!fixup.shared||newValue&&forceShared){var name_2=this.freshName();this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Final]));fixup.fixup(variable(name_2));}return fixup;};ConstantPool.prototype.getLiteralFactory=function(literal){// Create a pure function that builds an array of a mix of constant and variable expressions
if(literal instanceof LiteralArrayExpr){var argumentsForKey=literal.entries.map(function(e){return e.isConstant()?e:UNKNOWN_VALUE_KEY;});var key=this.keyOf(literalArr(argumentsForKey));return this._getLiteralFactory(key,literal.entries,function(entries){return literalArr(entries);});}else{var expressionForKey=literalMap(literal.entries.map(function(e){return{key:e.key,value:e.value.isConstant()?e.value:UNKNOWN_VALUE_KEY,quoted:e.quoted};}));var key=this.keyOf(expressionForKey);return this._getLiteralFactory(key,literal.entries.map(function(e){return e.value;}),function(entries){return literalMap(entries.map(function(value,index){return{key:literal.entries[index].key,value:value,quoted:literal.entries[index].quoted};}));});}};ConstantPool.prototype._getLiteralFactory=function(key,values,resultMap){var _this=this;var literalFactory=this.literalFactories.get(key);var literalFactoryArguments=values.filter(function(e){return!e.isConstant();});if(!literalFactory){var resultExpressions=values.map(function(e,index){return e.isConstant()?_this.getConstLiteral(e,true):variable("a"+index);});var parameters=resultExpressions.filter(isVariable).map(function(e){return new FnParam(e.name,DYNAMIC_TYPE);});var pureFunctionDeclaration=fn(parameters,[new ReturnStatement(resultMap(resultExpressions))],INFERRED_TYPE);var name_3=this.freshName();this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Final]));literalFactory=variable(name_3);this.literalFactories.set(key,literalFactory);}return{literalFactory:literalFactory,literalFactoryArguments:literalFactoryArguments};};/**
         * Produce a unique name.
         *
         * The name might be unique among different prefixes if any of the prefixes end in
         * a digit so the prefix should be a constant string (not based on user input) and
         * must not end in a digit.
         */ConstantPool.prototype.uniqueName=function(prefix){return""+prefix+this.nextNameIndex++;};ConstantPool.prototype.definitionsOf=function(kind){switch(kind){case 2/* Component */:return this.componentDefinitions;case 1/* Directive */:return this.directiveDefinitions;case 0/* Injector */:return this.injectorDefinitions;case 3/* Pipe */:return this.pipeDefinitions;}error("Unknown definition kind "+kind);return this.componentDefinitions;};ConstantPool.prototype.propertyNameOf=function(kind){switch(kind){case 2/* Component */:return'ɵcmp';case 1/* Directive */:return'ɵdir';case 0/* Injector */:return'ɵinj';case 3/* Pipe */:return'ɵpipe';}error("Unknown definition kind "+kind);return'<unknown>';};ConstantPool.prototype.freshName=function(){return this.uniqueName(CONSTANT_PREFIX);};ConstantPool.prototype.keyOf=function(expression){return expression.visitExpression(new KeyVisitor(),KEY_CONTEXT);};return ConstantPool;}();/**
     * Visitor used to determine if 2 expressions are equivalent and can be shared in the
     * `ConstantPool`.
     *
     * When the id (string) generated by the visitor is equal, expressions are considered equivalent.
     */var KeyVisitor=/** @class */function(){function KeyVisitor(){this.visitWrappedNodeExpr=invalid;this.visitWriteVarExpr=invalid;this.visitWriteKeyExpr=invalid;this.visitWritePropExpr=invalid;this.visitInvokeMethodExpr=invalid;this.visitInvokeFunctionExpr=invalid;this.visitInstantiateExpr=invalid;this.visitConditionalExpr=invalid;this.visitNotExpr=invalid;this.visitAssertNotNullExpr=invalid;this.visitCastExpr=invalid;this.visitFunctionExpr=invalid;this.visitBinaryOperatorExpr=invalid;this.visitReadPropExpr=invalid;this.visitReadKeyExpr=invalid;this.visitCommaExpr=invalid;this.visitLocalizedString=invalid;}KeyVisitor.prototype.visitLiteralExpr=function(ast){return""+(typeof ast.value==='string'?'"'+ast.value+'"':ast.value);};KeyVisitor.prototype.visitLiteralArrayExpr=function(ast,context){var _this=this;return"["+ast.entries.map(function(entry){return entry.visitExpression(_this,context);}).join(',')+"]";};KeyVisitor.prototype.visitLiteralMapExpr=function(ast,context){var _this=this;var mapKey=function mapKey(entry){var quote=entry.quoted?'"':'';return""+quote+entry.key+quote;};var mapEntry=function mapEntry(entry){return mapKey(entry)+":"+entry.value.visitExpression(_this,context);};return"{"+ast.entries.map(mapEntry).join(',');};KeyVisitor.prototype.visitExternalExpr=function(ast){return ast.value.moduleName?"EX:"+ast.value.moduleName+":"+ast.value.name:"EX:"+ast.value.runtime.name;};KeyVisitor.prototype.visitReadVarExpr=function(node){return"VAR:"+node.name;};KeyVisitor.prototype.visitTypeofExpr=function(node,context){return"TYPEOF:"+node.expr.visitExpression(this,context);};return KeyVisitor;}();function invalid(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+arg.constructor.name);}function isVariable(e){return e instanceof ReadVarExpr;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CORE='@angular/core';var Identifiers=/** @class */function(){function Identifiers(){}Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS={name:'ANALYZE_FOR_ENTRY_COMPONENTS',moduleName:CORE};Identifiers.ElementRef={name:'ElementRef',moduleName:CORE};Identifiers.NgModuleRef={name:'NgModuleRef',moduleName:CORE};Identifiers.ViewContainerRef={name:'ViewContainerRef',moduleName:CORE};Identifiers.ChangeDetectorRef={name:'ChangeDetectorRef',moduleName:CORE};Identifiers.QueryList={name:'QueryList',moduleName:CORE};Identifiers.TemplateRef={name:'TemplateRef',moduleName:CORE};Identifiers.Renderer2={name:'Renderer2',moduleName:CORE};Identifiers.CodegenComponentFactoryResolver={name:'ɵCodegenComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactoryResolver={name:'ComponentFactoryResolver',moduleName:CORE};Identifiers.ComponentFactory={name:'ComponentFactory',moduleName:CORE};Identifiers.ComponentRef={name:'ComponentRef',moduleName:CORE};Identifiers.NgModuleFactory={name:'NgModuleFactory',moduleName:CORE};Identifiers.createModuleFactory={name:'ɵcmf',moduleName:CORE};Identifiers.moduleDef={name:'ɵmod',moduleName:CORE};Identifiers.moduleProviderDef={name:'ɵmpd',moduleName:CORE};Identifiers.RegisterModuleFactoryFn={name:'ɵregisterModuleFactory',moduleName:CORE};Identifiers.inject={name:'ɵɵinject',moduleName:CORE};Identifiers.directiveInject={name:'ɵɵdirectiveInject',moduleName:CORE};Identifiers.INJECTOR={name:'INJECTOR',moduleName:CORE};Identifiers.Injector={name:'Injector',moduleName:CORE};Identifiers.ɵɵdefineInjectable={name:'ɵɵdefineInjectable',moduleName:CORE};Identifiers.InjectableDef={name:'ɵɵInjectableDef',moduleName:CORE};Identifiers.ViewEncapsulation={name:'ViewEncapsulation',moduleName:CORE};Identifiers.ChangeDetectionStrategy={name:'ChangeDetectionStrategy',moduleName:CORE};Identifiers.SecurityContext={name:'SecurityContext',moduleName:CORE};Identifiers.LOCALE_ID={name:'LOCALE_ID',moduleName:CORE};Identifiers.TRANSLATIONS_FORMAT={name:'TRANSLATIONS_FORMAT',moduleName:CORE};Identifiers.inlineInterpolate={name:'ɵinlineInterpolate',moduleName:CORE};Identifiers.interpolate={name:'ɵinterpolate',moduleName:CORE};Identifiers.EMPTY_ARRAY={name:'ɵEMPTY_ARRAY',moduleName:CORE};Identifiers.EMPTY_MAP={name:'ɵEMPTY_MAP',moduleName:CORE};Identifiers.Renderer={name:'Renderer',moduleName:CORE};Identifiers.viewDef={name:'ɵvid',moduleName:CORE};Identifiers.elementDef={name:'ɵeld',moduleName:CORE};Identifiers.anchorDef={name:'ɵand',moduleName:CORE};Identifiers.textDef={name:'ɵted',moduleName:CORE};Identifiers.directiveDef={name:'ɵdid',moduleName:CORE};Identifiers.providerDef={name:'ɵprd',moduleName:CORE};Identifiers.queryDef={name:'ɵqud',moduleName:CORE};Identifiers.pureArrayDef={name:'ɵpad',moduleName:CORE};Identifiers.pureObjectDef={name:'ɵpod',moduleName:CORE};Identifiers.purePipeDef={name:'ɵppd',moduleName:CORE};Identifiers.pipeDef={name:'ɵpid',moduleName:CORE};Identifiers.nodeValue={name:'ɵnov',moduleName:CORE};Identifiers.ngContentDef={name:'ɵncd',moduleName:CORE};Identifiers.unwrapValue={name:'ɵunv',moduleName:CORE};Identifiers.createRendererType2={name:'ɵcrt',moduleName:CORE};// type only
Identifiers.RendererType2={name:'RendererType2',moduleName:CORE};// type only
Identifiers.ViewDefinition={name:'ɵViewDefinition',moduleName:CORE};Identifiers.createComponentFactory={name:'ɵccf',moduleName:CORE};Identifiers.setClassMetadata={name:'ɵsetClassMetadata',moduleName:CORE};return Identifiers;}();function createTokenForReference(reference){return{identifier:{reference:reference}};}function createTokenForExternalReference(reflector,reference){return createTokenForReference(reflector.resolveExternalReference(reference));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A token representing the a reference to a static type.
     *
     * This token is unique for a filePath and name and can be used as a hash table key.
     */var StaticSymbol=/** @class */function(){function StaticSymbol(filePath,name,members){this.filePath=filePath;this.name=name;this.members=members;}StaticSymbol.prototype.assertNoMembers=function(){if(this.members.length){throw new Error("Illegal state: symbol without members expected, but got "+JSON.stringify(this)+".");}};return StaticSymbol;}();/**
     * A cache of static symbol used by the StaticReflector to return the same symbol for the
     * same symbol values.
     */var StaticSymbolCache=/** @class */function(){function StaticSymbolCache(){this.cache=new Map();}StaticSymbolCache.prototype.get=function(declarationFile,name,members){members=members||[];var memberSuffix=members.length?"."+members.join('.'):'';var key="\""+declarationFile+"\"."+name+memberSuffix;var result=this.cache.get(key);if(!result){result=new StaticSymbol(declarationFile,name,members);this.cache.set(key,result);}return result;};return StaticSymbolCache;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // group 0: "[prop] or (event) or @trigger"
// group 1: "prop" from "[prop]"
// group 2: "event" from "(event)"
// group 3: "@trigger" from "@trigger"
var HOST_REG_EXP=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function sanitizeIdentifier(name){return name.replace(/\W/g,'_');}var _anonymousTypeIndex=0;function identifierName(compileIdentifier){if(!compileIdentifier||!compileIdentifier.reference){return null;}var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.name;}if(ref['__anonymousType']){return ref['__anonymousType'];}var identifier=stringify(ref);if(identifier.indexOf('(')>=0){// case: anonymous functions!
identifier="anonymous_"+_anonymousTypeIndex++;ref['__anonymousType']=identifier;}else{identifier=sanitizeIdentifier(identifier);}return identifier;}function identifierModuleUrl(compileIdentifier){var ref=compileIdentifier.reference;if(ref instanceof StaticSymbol){return ref.filePath;}// Runtime type
return"./"+stringify(ref);}function viewClassName(compType,embeddedTemplateIndex){return"View_"+identifierName({reference:compType})+"_"+embeddedTemplateIndex;}function rendererTypeName(compType){return"RenderType_"+identifierName({reference:compType});}function hostViewClassName(compType){return"HostView_"+identifierName({reference:compType});}function componentFactoryName(compType){return identifierName({reference:compType})+"NgFactory";}(function(CompileSummaryKind){CompileSummaryKind[CompileSummaryKind["Pipe"]=0]="Pipe";CompileSummaryKind[CompileSummaryKind["Directive"]=1]="Directive";CompileSummaryKind[CompileSummaryKind["NgModule"]=2]="NgModule";CompileSummaryKind[CompileSummaryKind["Injectable"]=3]="Injectable";})(exports.CompileSummaryKind||(exports.CompileSummaryKind={}));function tokenName(token){return token.value!=null?sanitizeIdentifier(token.value):identifierName(token.identifier);}function tokenReference(token){if(token.identifier!=null){return token.identifier.reference;}else{return token.value;}}/**
     * Metadata about a stylesheet
     */var CompileStylesheetMetadata=/** @class */function(){function CompileStylesheetMetadata(_a){var _b=_a===void 0?{}:_a,moduleUrl=_b.moduleUrl,styles=_b.styles,styleUrls=_b.styleUrls;this.moduleUrl=moduleUrl||null;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);}return CompileStylesheetMetadata;}();/**
     * Metadata regarding compilation of a template.
     */var CompileTemplateMetadata=/** @class */function(){function CompileTemplateMetadata(_a){var encapsulation=_a.encapsulation,template=_a.template,templateUrl=_a.templateUrl,htmlAst=_a.htmlAst,styles=_a.styles,styleUrls=_a.styleUrls,externalStylesheets=_a.externalStylesheets,animations=_a.animations,ngContentSelectors=_a.ngContentSelectors,interpolation=_a.interpolation,isInline=_a.isInline,preserveWhitespaces=_a.preserveWhitespaces;this.encapsulation=encapsulation;this.template=template;this.templateUrl=templateUrl;this.htmlAst=htmlAst;this.styles=_normalizeArray(styles);this.styleUrls=_normalizeArray(styleUrls);this.externalStylesheets=_normalizeArray(externalStylesheets);this.animations=animations?flatten(animations):[];this.ngContentSelectors=ngContentSelectors||[];if(interpolation&&interpolation.length!=2){throw new Error("'interpolation' should have a start and an end symbol.");}this.interpolation=interpolation;this.isInline=isInline;this.preserveWhitespaces=preserveWhitespaces;}CompileTemplateMetadata.prototype.toSummary=function(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations};};return CompileTemplateMetadata;}();/**
     * Metadata regarding compilation of a directive.
     */var CompileDirectiveMetadata=/** @class */function(){function CompileDirectiveMetadata(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,hostListeners=_a.hostListeners,hostProperties=_a.hostProperties,hostAttributes=_a.hostAttributes,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;this.isHost=!!isHost;this.type=type;this.isComponent=isComponent;this.selector=selector;this.exportAs=exportAs;this.changeDetection=changeDetection;this.inputs=inputs;this.outputs=outputs;this.hostListeners=hostListeners;this.hostProperties=hostProperties;this.hostAttributes=hostAttributes;this.providers=_normalizeArray(providers);this.viewProviders=_normalizeArray(viewProviders);this.queries=_normalizeArray(queries);this.guards=guards;this.viewQueries=_normalizeArray(viewQueries);this.entryComponents=_normalizeArray(entryComponents);this.template=template;this.componentViewType=componentViewType;this.rendererType=rendererType;this.componentFactory=componentFactory;}CompileDirectiveMetadata.create=function(_a){var isHost=_a.isHost,type=_a.type,isComponent=_a.isComponent,selector=_a.selector,exportAs=_a.exportAs,changeDetection=_a.changeDetection,inputs=_a.inputs,outputs=_a.outputs,host=_a.host,providers=_a.providers,viewProviders=_a.viewProviders,queries=_a.queries,guards=_a.guards,viewQueries=_a.viewQueries,entryComponents=_a.entryComponents,template=_a.template,componentViewType=_a.componentViewType,rendererType=_a.rendererType,componentFactory=_a.componentFactory;var hostListeners={};var hostProperties={};var hostAttributes={};if(host!=null){Object.keys(host).forEach(function(key){var value=host[key];var matches=key.match(HOST_REG_EXP);if(matches===null){hostAttributes[key]=value;}else if(matches[1]!=null){hostProperties[matches[1]]=value;}else if(matches[2]!=null){hostListeners[matches[2]]=value;}});}var inputsMap={};if(inputs!=null){inputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);inputsMap[parts[0]]=parts[1];});}var outputsMap={};if(outputs!=null){outputs.forEach(function(bindConfig){// canonical syntax: `dirProp: elProp`
// if there is no `:`, use dirProp = elProp
var parts=splitAtColon(bindConfig,[bindConfig,bindConfig]);outputsMap[parts[0]]=parts[1];});}return new CompileDirectiveMetadata({isHost:isHost,type:type,isComponent:!!isComponent,selector:selector,exportAs:exportAs,changeDetection:changeDetection,inputs:inputsMap,outputs:outputsMap,hostListeners:hostListeners,hostProperties:hostProperties,hostAttributes:hostAttributes,providers:providers,viewProviders:viewProviders,queries:queries,guards:guards,viewQueries:viewQueries,entryComponents:entryComponents,template:template,componentViewType:componentViewType,rendererType:rendererType,componentFactory:componentFactory});};CompileDirectiveMetadata.prototype.toSummary=function(){return{summaryKind:exports.CompileSummaryKind.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory};};return CompileDirectiveMetadata;}();var CompilePipeMetadata=/** @class */function(){function CompilePipeMetadata(_a){var type=_a.type,name=_a.name,pure=_a.pure;this.type=type;this.name=name;this.pure=!!pure;}CompilePipeMetadata.prototype.toSummary=function(){return{summaryKind:exports.CompileSummaryKind.Pipe,type:this.type,name:this.name,pure:this.pure};};return CompilePipeMetadata;}();var CompileShallowModuleMetadata=/** @class */function(){function CompileShallowModuleMetadata(){}return CompileShallowModuleMetadata;}();/**
     * Metadata regarding compilation of a module.
     */var CompileNgModuleMetadata=/** @class */function(){function CompileNgModuleMetadata(_a){var type=_a.type,providers=_a.providers,declaredDirectives=_a.declaredDirectives,exportedDirectives=_a.exportedDirectives,declaredPipes=_a.declaredPipes,exportedPipes=_a.exportedPipes,entryComponents=_a.entryComponents,bootstrapComponents=_a.bootstrapComponents,importedModules=_a.importedModules,exportedModules=_a.exportedModules,schemas=_a.schemas,transitiveModule=_a.transitiveModule,id=_a.id;this.type=type||null;this.declaredDirectives=_normalizeArray(declaredDirectives);this.exportedDirectives=_normalizeArray(exportedDirectives);this.declaredPipes=_normalizeArray(declaredPipes);this.exportedPipes=_normalizeArray(exportedPipes);this.providers=_normalizeArray(providers);this.entryComponents=_normalizeArray(entryComponents);this.bootstrapComponents=_normalizeArray(bootstrapComponents);this.importedModules=_normalizeArray(importedModules);this.exportedModules=_normalizeArray(exportedModules);this.schemas=_normalizeArray(schemas);this.id=id||null;this.transitiveModule=transitiveModule||null;}CompileNgModuleMetadata.prototype.toSummary=function(){var module=this.transitiveModule;return{summaryKind:exports.CompileSummaryKind.NgModule,type:this.type,entryComponents:module.entryComponents,providers:module.providers,modules:module.modules,exportedDirectives:module.exportedDirectives,exportedPipes:module.exportedPipes};};return CompileNgModuleMetadata;}();var TransitiveCompileNgModuleMetadata=/** @class */function(){function TransitiveCompileNgModuleMetadata(){this.directivesSet=new Set();this.directives=[];this.exportedDirectivesSet=new Set();this.exportedDirectives=[];this.pipesSet=new Set();this.pipes=[];this.exportedPipesSet=new Set();this.exportedPipes=[];this.modulesSet=new Set();this.modules=[];this.entryComponentsSet=new Set();this.entryComponents=[];this.providers=[];}TransitiveCompileNgModuleMetadata.prototype.addProvider=function(provider,module){this.providers.push({provider:provider,module:module});};TransitiveCompileNgModuleMetadata.prototype.addDirective=function(id){if(!this.directivesSet.has(id.reference)){this.directivesSet.add(id.reference);this.directives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedDirective=function(id){if(!this.exportedDirectivesSet.has(id.reference)){this.exportedDirectivesSet.add(id.reference);this.exportedDirectives.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addPipe=function(id){if(!this.pipesSet.has(id.reference)){this.pipesSet.add(id.reference);this.pipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addExportedPipe=function(id){if(!this.exportedPipesSet.has(id.reference)){this.exportedPipesSet.add(id.reference);this.exportedPipes.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addModule=function(id){if(!this.modulesSet.has(id.reference)){this.modulesSet.add(id.reference);this.modules.push(id);}};TransitiveCompileNgModuleMetadata.prototype.addEntryComponent=function(ec){if(!this.entryComponentsSet.has(ec.componentType)){this.entryComponentsSet.add(ec.componentType);this.entryComponents.push(ec);}};return TransitiveCompileNgModuleMetadata;}();function _normalizeArray(obj){return obj||[];}var ProviderMeta=/** @class */function(){function ProviderMeta(token,_a){var useClass=_a.useClass,useValue=_a.useValue,useExisting=_a.useExisting,useFactory=_a.useFactory,deps=_a.deps,multi=_a.multi;this.token=token;this.useClass=useClass||null;this.useValue=useValue;this.useExisting=useExisting;this.useFactory=useFactory||null;this.dependencies=deps||null;this.multi=!!multi;}return ProviderMeta;}();function flatten(list){return list.reduce(function(flat,item){var flatItem=Array.isArray(item)?flatten(item):item;return flat.concat(flatItem);},[]);}function jitSourceUrl(url){// Note: We need 3 "/" so that ng shows up as a separate domain
// in the chrome dev tools.
return url.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,'ng:///');}function templateSourceUrl(ngModuleType,compMeta,templateMeta){var url;if(templateMeta.isInline){if(compMeta.type.reference instanceof StaticSymbol){// Note: a .ts file might contain multiple components with inline templates,
// so we need to give them unique urls, as these will be used for sourcemaps.
url=compMeta.type.reference.filePath+"."+compMeta.type.reference.name+".html";}else{url=identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".html";}}else{url=templateMeta.templateUrl;}return compMeta.type.reference instanceof StaticSymbol?url:jitSourceUrl(url);}function sharedStylesheetJitUrl(meta,id){var pathParts=meta.moduleUrl.split(/\/\\/g);var baseName=pathParts[pathParts.length-1];return jitSourceUrl("css/"+id+baseName+".ngstyle.js");}function ngModuleJitUrl(moduleMeta){return jitSourceUrl(identifierName(moduleMeta.type)+"/module.ngfactory.js");}function templateJitUrl(ngModuleType,compMeta){return jitSourceUrl(identifierName(ngModuleType)+"/"+identifierName(compMeta.type)+".ngfactory.js");}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CORE$1='@angular/core';var Identifiers$1=/** @class */function(){function Identifiers(){}/* Methods */Identifiers.NEW_METHOD='factory';Identifiers.TRANSFORM_METHOD='transform';Identifiers.PATCH_DEPS='patchedDeps';/* Instructions */Identifiers.namespaceHTML={name:'ɵɵnamespaceHTML',moduleName:CORE$1};Identifiers.namespaceMathML={name:'ɵɵnamespaceMathML',moduleName:CORE$1};Identifiers.namespaceSVG={name:'ɵɵnamespaceSVG',moduleName:CORE$1};Identifiers.element={name:'ɵɵelement',moduleName:CORE$1};Identifiers.elementStart={name:'ɵɵelementStart',moduleName:CORE$1};Identifiers.elementEnd={name:'ɵɵelementEnd',moduleName:CORE$1};Identifiers.select={name:'ɵɵselect',moduleName:CORE$1};Identifiers.advance={name:'ɵɵadvance',moduleName:CORE$1};Identifiers.updateSyntheticHostBinding={name:'ɵɵupdateSyntheticHostBinding',moduleName:CORE$1};Identifiers.componentHostSyntheticListener={name:'ɵɵcomponentHostSyntheticListener',moduleName:CORE$1};Identifiers.attribute={name:'ɵɵattribute',moduleName:CORE$1};Identifiers.attributeInterpolate1={name:'ɵɵattributeInterpolate1',moduleName:CORE$1};Identifiers.attributeInterpolate2={name:'ɵɵattributeInterpolate2',moduleName:CORE$1};Identifiers.attributeInterpolate3={name:'ɵɵattributeInterpolate3',moduleName:CORE$1};Identifiers.attributeInterpolate4={name:'ɵɵattributeInterpolate4',moduleName:CORE$1};Identifiers.attributeInterpolate5={name:'ɵɵattributeInterpolate5',moduleName:CORE$1};Identifiers.attributeInterpolate6={name:'ɵɵattributeInterpolate6',moduleName:CORE$1};Identifiers.attributeInterpolate7={name:'ɵɵattributeInterpolate7',moduleName:CORE$1};Identifiers.attributeInterpolate8={name:'ɵɵattributeInterpolate8',moduleName:CORE$1};Identifiers.attributeInterpolateV={name:'ɵɵattributeInterpolateV',moduleName:CORE$1};Identifiers.classProp={name:'ɵɵclassProp',moduleName:CORE$1};Identifiers.elementContainerStart={name:'ɵɵelementContainerStart',moduleName:CORE$1};Identifiers.elementContainerEnd={name:'ɵɵelementContainerEnd',moduleName:CORE$1};Identifiers.elementContainer={name:'ɵɵelementContainer',moduleName:CORE$1};Identifiers.styleMap={name:'ɵɵstyleMap',moduleName:CORE$1};Identifiers.styleMapInterpolate1={name:'ɵɵstyleMapInterpolate1',moduleName:CORE$1};Identifiers.styleMapInterpolate2={name:'ɵɵstyleMapInterpolate2',moduleName:CORE$1};Identifiers.styleMapInterpolate3={name:'ɵɵstyleMapInterpolate3',moduleName:CORE$1};Identifiers.styleMapInterpolate4={name:'ɵɵstyleMapInterpolate4',moduleName:CORE$1};Identifiers.styleMapInterpolate5={name:'ɵɵstyleMapInterpolate5',moduleName:CORE$1};Identifiers.styleMapInterpolate6={name:'ɵɵstyleMapInterpolate6',moduleName:CORE$1};Identifiers.styleMapInterpolate7={name:'ɵɵstyleMapInterpolate7',moduleName:CORE$1};Identifiers.styleMapInterpolate8={name:'ɵɵstyleMapInterpolate8',moduleName:CORE$1};Identifiers.styleMapInterpolateV={name:'ɵɵstyleMapInterpolateV',moduleName:CORE$1};Identifiers.classMap={name:'ɵɵclassMap',moduleName:CORE$1};Identifiers.classMapInterpolate1={name:'ɵɵclassMapInterpolate1',moduleName:CORE$1};Identifiers.classMapInterpolate2={name:'ɵɵclassMapInterpolate2',moduleName:CORE$1};Identifiers.classMapInterpolate3={name:'ɵɵclassMapInterpolate3',moduleName:CORE$1};Identifiers.classMapInterpolate4={name:'ɵɵclassMapInterpolate4',moduleName:CORE$1};Identifiers.classMapInterpolate5={name:'ɵɵclassMapInterpolate5',moduleName:CORE$1};Identifiers.classMapInterpolate6={name:'ɵɵclassMapInterpolate6',moduleName:CORE$1};Identifiers.classMapInterpolate7={name:'ɵɵclassMapInterpolate7',moduleName:CORE$1};Identifiers.classMapInterpolate8={name:'ɵɵclassMapInterpolate8',moduleName:CORE$1};Identifiers.classMapInterpolateV={name:'ɵɵclassMapInterpolateV',moduleName:CORE$1};Identifiers.styleProp={name:'ɵɵstyleProp',moduleName:CORE$1};Identifiers.stylePropInterpolate1={name:'ɵɵstylePropInterpolate1',moduleName:CORE$1};Identifiers.stylePropInterpolate2={name:'ɵɵstylePropInterpolate2',moduleName:CORE$1};Identifiers.stylePropInterpolate3={name:'ɵɵstylePropInterpolate3',moduleName:CORE$1};Identifiers.stylePropInterpolate4={name:'ɵɵstylePropInterpolate4',moduleName:CORE$1};Identifiers.stylePropInterpolate5={name:'ɵɵstylePropInterpolate5',moduleName:CORE$1};Identifiers.stylePropInterpolate6={name:'ɵɵstylePropInterpolate6',moduleName:CORE$1};Identifiers.stylePropInterpolate7={name:'ɵɵstylePropInterpolate7',moduleName:CORE$1};Identifiers.stylePropInterpolate8={name:'ɵɵstylePropInterpolate8',moduleName:CORE$1};Identifiers.stylePropInterpolateV={name:'ɵɵstylePropInterpolateV',moduleName:CORE$1};Identifiers.nextContext={name:'ɵɵnextContext',moduleName:CORE$1};Identifiers.templateCreate={name:'ɵɵtemplate',moduleName:CORE$1};Identifiers.text={name:'ɵɵtext',moduleName:CORE$1};Identifiers.enableBindings={name:'ɵɵenableBindings',moduleName:CORE$1};Identifiers.disableBindings={name:'ɵɵdisableBindings',moduleName:CORE$1};Identifiers.getCurrentView={name:'ɵɵgetCurrentView',moduleName:CORE$1};Identifiers.textInterpolate={name:'ɵɵtextInterpolate',moduleName:CORE$1};Identifiers.textInterpolate1={name:'ɵɵtextInterpolate1',moduleName:CORE$1};Identifiers.textInterpolate2={name:'ɵɵtextInterpolate2',moduleName:CORE$1};Identifiers.textInterpolate3={name:'ɵɵtextInterpolate3',moduleName:CORE$1};Identifiers.textInterpolate4={name:'ɵɵtextInterpolate4',moduleName:CORE$1};Identifiers.textInterpolate5={name:'ɵɵtextInterpolate5',moduleName:CORE$1};Identifiers.textInterpolate6={name:'ɵɵtextInterpolate6',moduleName:CORE$1};Identifiers.textInterpolate7={name:'ɵɵtextInterpolate7',moduleName:CORE$1};Identifiers.textInterpolate8={name:'ɵɵtextInterpolate8',moduleName:CORE$1};Identifiers.textInterpolateV={name:'ɵɵtextInterpolateV',moduleName:CORE$1};Identifiers.restoreView={name:'ɵɵrestoreView',moduleName:CORE$1};Identifiers.pureFunction0={name:'ɵɵpureFunction0',moduleName:CORE$1};Identifiers.pureFunction1={name:'ɵɵpureFunction1',moduleName:CORE$1};Identifiers.pureFunction2={name:'ɵɵpureFunction2',moduleName:CORE$1};Identifiers.pureFunction3={name:'ɵɵpureFunction3',moduleName:CORE$1};Identifiers.pureFunction4={name:'ɵɵpureFunction4',moduleName:CORE$1};Identifiers.pureFunction5={name:'ɵɵpureFunction5',moduleName:CORE$1};Identifiers.pureFunction6={name:'ɵɵpureFunction6',moduleName:CORE$1};Identifiers.pureFunction7={name:'ɵɵpureFunction7',moduleName:CORE$1};Identifiers.pureFunction8={name:'ɵɵpureFunction8',moduleName:CORE$1};Identifiers.pureFunctionV={name:'ɵɵpureFunctionV',moduleName:CORE$1};Identifiers.pipeBind1={name:'ɵɵpipeBind1',moduleName:CORE$1};Identifiers.pipeBind2={name:'ɵɵpipeBind2',moduleName:CORE$1};Identifiers.pipeBind3={name:'ɵɵpipeBind3',moduleName:CORE$1};Identifiers.pipeBind4={name:'ɵɵpipeBind4',moduleName:CORE$1};Identifiers.pipeBindV={name:'ɵɵpipeBindV',moduleName:CORE$1};Identifiers.hostProperty={name:'ɵɵhostProperty',moduleName:CORE$1};Identifiers.property={name:'ɵɵproperty',moduleName:CORE$1};Identifiers.propertyInterpolate={name:'ɵɵpropertyInterpolate',moduleName:CORE$1};Identifiers.propertyInterpolate1={name:'ɵɵpropertyInterpolate1',moduleName:CORE$1};Identifiers.propertyInterpolate2={name:'ɵɵpropertyInterpolate2',moduleName:CORE$1};Identifiers.propertyInterpolate3={name:'ɵɵpropertyInterpolate3',moduleName:CORE$1};Identifiers.propertyInterpolate4={name:'ɵɵpropertyInterpolate4',moduleName:CORE$1};Identifiers.propertyInterpolate5={name:'ɵɵpropertyInterpolate5',moduleName:CORE$1};Identifiers.propertyInterpolate6={name:'ɵɵpropertyInterpolate6',moduleName:CORE$1};Identifiers.propertyInterpolate7={name:'ɵɵpropertyInterpolate7',moduleName:CORE$1};Identifiers.propertyInterpolate8={name:'ɵɵpropertyInterpolate8',moduleName:CORE$1};Identifiers.propertyInterpolateV={name:'ɵɵpropertyInterpolateV',moduleName:CORE$1};Identifiers.i18n={name:'ɵɵi18n',moduleName:CORE$1};Identifiers.i18nAttributes={name:'ɵɵi18nAttributes',moduleName:CORE$1};Identifiers.i18nExp={name:'ɵɵi18nExp',moduleName:CORE$1};Identifiers.i18nStart={name:'ɵɵi18nStart',moduleName:CORE$1};Identifiers.i18nEnd={name:'ɵɵi18nEnd',moduleName:CORE$1};Identifiers.i18nApply={name:'ɵɵi18nApply',moduleName:CORE$1};Identifiers.i18nPostprocess={name:'ɵɵi18nPostprocess',moduleName:CORE$1};Identifiers.pipe={name:'ɵɵpipe',moduleName:CORE$1};Identifiers.projection={name:'ɵɵprojection',moduleName:CORE$1};Identifiers.projectionDef={name:'ɵɵprojectionDef',moduleName:CORE$1};Identifiers.reference={name:'ɵɵreference',moduleName:CORE$1};Identifiers.inject={name:'ɵɵinject',moduleName:CORE$1};Identifiers.injectAttribute={name:'ɵɵinjectAttribute',moduleName:CORE$1};Identifiers.injectPipeChangeDetectorRef={name:'ɵɵinjectPipeChangeDetectorRef',moduleName:CORE$1};Identifiers.directiveInject={name:'ɵɵdirectiveInject',moduleName:CORE$1};Identifiers.invalidFactory={name:'ɵɵinvalidFactory',moduleName:CORE$1};Identifiers.invalidFactoryDep={name:'ɵɵinvalidFactoryDep',moduleName:CORE$1};Identifiers.templateRefExtractor={name:'ɵɵtemplateRefExtractor',moduleName:CORE$1};Identifiers.resolveWindow={name:'ɵɵresolveWindow',moduleName:CORE$1};Identifiers.resolveDocument={name:'ɵɵresolveDocument',moduleName:CORE$1};Identifiers.resolveBody={name:'ɵɵresolveBody',moduleName:CORE$1};Identifiers.defineComponent={name:'ɵɵdefineComponent',moduleName:CORE$1};Identifiers.setComponentScope={name:'ɵɵsetComponentScope',moduleName:CORE$1};Identifiers.ComponentDefWithMeta={name:'ɵɵComponentDefWithMeta',moduleName:CORE$1};Identifiers.FactoryDef={name:'ɵɵFactoryDef',moduleName:CORE$1};Identifiers.defineDirective={name:'ɵɵdefineDirective',moduleName:CORE$1};Identifiers.DirectiveDefWithMeta={name:'ɵɵDirectiveDefWithMeta',moduleName:CORE$1};Identifiers.InjectorDef={name:'ɵɵInjectorDef',moduleName:CORE$1};Identifiers.defineInjector={name:'ɵɵdefineInjector',moduleName:CORE$1};Identifiers.NgModuleDefWithMeta={name:'ɵɵNgModuleDefWithMeta',moduleName:CORE$1};Identifiers.ModuleWithProviders={name:'ModuleWithProviders',moduleName:CORE$1};Identifiers.defineNgModule={name:'ɵɵdefineNgModule',moduleName:CORE$1};Identifiers.setNgModuleScope={name:'ɵɵsetNgModuleScope',moduleName:CORE$1};Identifiers.PipeDefWithMeta={name:'ɵɵPipeDefWithMeta',moduleName:CORE$1};Identifiers.definePipe={name:'ɵɵdefinePipe',moduleName:CORE$1};Identifiers.queryRefresh={name:'ɵɵqueryRefresh',moduleName:CORE$1};Identifiers.viewQuery={name:'ɵɵviewQuery',moduleName:CORE$1};Identifiers.staticViewQuery={name:'ɵɵstaticViewQuery',moduleName:CORE$1};Identifiers.staticContentQuery={name:'ɵɵstaticContentQuery',moduleName:CORE$1};Identifiers.loadQuery={name:'ɵɵloadQuery',moduleName:CORE$1};Identifiers.contentQuery={name:'ɵɵcontentQuery',moduleName:CORE$1};Identifiers.NgOnChangesFeature={name:'ɵɵNgOnChangesFeature',moduleName:CORE$1};Identifiers.InheritDefinitionFeature={name:'ɵɵInheritDefinitionFeature',moduleName:CORE$1};Identifiers.CopyDefinitionFeature={name:'ɵɵCopyDefinitionFeature',moduleName:CORE$1};Identifiers.ProvidersFeature={name:'ɵɵProvidersFeature',moduleName:CORE$1};Identifiers.listener={name:'ɵɵlistener',moduleName:CORE$1};Identifiers.getFactoryOf={name:'ɵɵgetFactoryOf',moduleName:CORE$1};Identifiers.getInheritedFactory={name:'ɵɵgetInheritedFactory',moduleName:CORE$1};// sanitization-related functions
Identifiers.sanitizeHtml={name:'ɵɵsanitizeHtml',moduleName:CORE$1};Identifiers.sanitizeStyle={name:'ɵɵsanitizeStyle',moduleName:CORE$1};Identifiers.defaultStyleSanitizer={name:'ɵɵdefaultStyleSanitizer',moduleName:CORE$1};Identifiers.sanitizeResourceUrl={name:'ɵɵsanitizeResourceUrl',moduleName:CORE$1};Identifiers.sanitizeScript={name:'ɵɵsanitizeScript',moduleName:CORE$1};Identifiers.sanitizeUrl={name:'ɵɵsanitizeUrl',moduleName:CORE$1};Identifiers.sanitizeUrlOrResourceUrl={name:'ɵɵsanitizeUrlOrResourceUrl',moduleName:CORE$1};return Identifiers;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Convert an object map with `Expression` values into a `LiteralMapExpr`.
     */function mapToMapExpression(map){var result=Object.keys(map).map(function(key){return{key:key,// The assertion here is because really TypeScript doesn't allow us to express that if the
// key is present, it will have a value, but this is true in reality.
value:map[key],quoted:false};});return literalMap(result);}/**
     * Convert metadata into an `Expression` in the given `OutputContext`.
     *
     * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.
     */function convertMetaToOutput(meta,ctx){if(Array.isArray(meta)){return literalArr(meta.map(function(entry){return convertMetaToOutput(entry,ctx);}));}if(meta instanceof StaticSymbol){return ctx.importExpr(meta);}if(meta==null){return literal(meta);}throw new Error("Internal error: Unsupported or unknown metadata: "+meta);}function typeWithParameters(type,numParams){var params=null;if(numParams>0){params=[];for(var i=0;i<numParams;i++){params.push(DYNAMIC_TYPE);}}return expressionType(type,null,params);}var ANIMATE_SYMBOL_PREFIX='@';function prepareSyntheticPropertyName(name){return""+ANIMATE_SYMBOL_PREFIX+name;}function prepareSyntheticListenerName(name,phase){return""+ANIMATE_SYMBOL_PREFIX+name+"."+phase;}function isSyntheticPropertyOrListener(name){return name.charAt(0)==ANIMATE_SYMBOL_PREFIX;}function getSyntheticPropertyName(name){// this will strip out listener phase values...
// @foo.start => @foo
var i=name.indexOf('.');name=i>0?name.substring(0,i):name;if(name.charAt(0)!==ANIMATE_SYMBOL_PREFIX){name=ANIMATE_SYMBOL_PREFIX+name;}return name;}function prepareSyntheticListenerFunctionName(name,phase){return"animation_"+name+"_"+phase;}function jitOnlyGuardedExpression(expr){var ngJitMode=new ExternalExpr({name:'ngJitMode',moduleName:null});var jitFlagNotDefined=new BinaryOperatorExpr(exports.BinaryOperator.Identical,new TypeofExpr(ngJitMode),literal('undefined'));var jitFlagUndefinedOrTrue=new BinaryOperatorExpr(exports.BinaryOperator.Or,jitFlagNotDefined,ngJitMode,/* type */undefined,/* sourceSpan */undefined,true);return new BinaryOperatorExpr(exports.BinaryOperator.And,jitFlagUndefinedOrTrue,expr);}function wrapReference(value){var wrapped=new WrappedNodeExpr(value);return{value:wrapped,type:wrapped};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var $EOF=0;var $BSPACE=8;var $TAB=9;var $LF=10;var $VTAB=11;var $FF=12;var $CR=13;var $SPACE=32;var $BANG=33;var $DQ=34;var $HASH=35;var $$=36;var $PERCENT=37;var $AMPERSAND=38;var $SQ=39;var $LPAREN=40;var $RPAREN=41;var $STAR=42;var $PLUS=43;var $COMMA=44;var $MINUS=45;var $PERIOD=46;var $SLASH=47;var $COLON=58;var $SEMICOLON=59;var $LT=60;var $EQ=61;var $GT=62;var $QUESTION=63;var $0=48;var $7=55;var $9=57;var $A=65;var $E=69;var $F=70;var $X=88;var $Z=90;var $LBRACKET=91;var $BACKSLASH=92;var $RBRACKET=93;var $CARET=94;var $_=95;var $a=97;var $b=98;var $e=101;var $f=102;var $n=110;var $r=114;var $t=116;var $u=117;var $v=118;var $x=120;var $z=122;var $LBRACE=123;var $BAR=124;var $RBRACE=125;var $NBSP=160;var $PIPE=124;var $TILDA=126;var $AT=64;var $BT=96;function isWhitespace(code){return code>=$TAB&&code<=$SPACE||code==$NBSP;}function isDigit(code){return $0<=code&&code<=$9;}function isAsciiLetter(code){return code>=$a&&code<=$z||code>=$A&&code<=$Z;}function isAsciiHexDigit(code){return code>=$a&&code<=$f||code>=$A&&code<=$F||isDigit(code);}function isNewLine(code){return code===$LF||code===$CR;}function isOctalDigit(code){return $0<=code&&code<=$7;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ParseLocation=/** @class */function(){function ParseLocation(file,offset,line,col){this.file=file;this.offset=offset;this.line=line;this.col=col;}ParseLocation.prototype.toString=function(){return this.offset!=null?this.file.url+"@"+this.line+":"+this.col:this.file.url;};ParseLocation.prototype.moveBy=function(delta){var source=this.file.content;var len=source.length;var offset=this.offset;var line=this.line;var col=this.col;while(offset>0&&delta<0){offset--;delta++;var ch=source.charCodeAt(offset);if(ch==$LF){line--;var priorLine=source.substr(0,offset-1).lastIndexOf(String.fromCharCode($LF));col=priorLine>0?offset-priorLine:offset;}else{col--;}}while(offset<len&&delta>0){var ch=source.charCodeAt(offset);offset++;delta--;if(ch==$LF){line++;col=0;}else{col++;}}return new ParseLocation(this.file,offset,line,col);};// Return the source around the location
// Up to `maxChars` or `maxLines` on each side of the location
ParseLocation.prototype.getContext=function(maxChars,maxLines){var content=this.file.content;var startOffset=this.offset;if(startOffset!=null){if(startOffset>content.length-1){startOffset=content.length-1;}var endOffset=startOffset;var ctxChars=0;var ctxLines=0;while(ctxChars<maxChars&&startOffset>0){startOffset--;ctxChars++;if(content[startOffset]=='\n'){if(++ctxLines==maxLines){break;}}}ctxChars=0;ctxLines=0;while(ctxChars<maxChars&&endOffset<content.length-1){endOffset++;ctxChars++;if(content[endOffset]=='\n'){if(++ctxLines==maxLines){break;}}}return{before:content.substring(startOffset,this.offset),after:content.substring(this.offset,endOffset+1)};}return null;};return ParseLocation;}();var ParseSourceFile=/** @class */function(){function ParseSourceFile(content,url){this.content=content;this.url=url;}return ParseSourceFile;}();var ParseSourceSpan=/** @class */function(){function ParseSourceSpan(start,end,details){if(details===void 0){details=null;}this.start=start;this.end=end;this.details=details;}ParseSourceSpan.prototype.toString=function(){return this.start.file.content.substring(this.start.offset,this.end.offset);};return ParseSourceSpan;}();(function(ParseErrorLevel){ParseErrorLevel[ParseErrorLevel["WARNING"]=0]="WARNING";ParseErrorLevel[ParseErrorLevel["ERROR"]=1]="ERROR";})(exports.ParseErrorLevel||(exports.ParseErrorLevel={}));var ParseError=/** @class */function(){function ParseError(span,msg,level){if(level===void 0){level=exports.ParseErrorLevel.ERROR;}this.span=span;this.msg=msg;this.level=level;}ParseError.prototype.contextualMessage=function(){var ctx=this.span.start.getContext(100,3);return ctx?this.msg+" (\""+ctx.before+"["+exports.ParseErrorLevel[this.level]+" ->]"+ctx.after+"\")":this.msg;};ParseError.prototype.toString=function(){var details=this.span.details?", "+this.span.details:'';return this.contextualMessage()+": "+this.span.start+details;};return ParseError;}();function typeSourceSpan(kind,type){var moduleUrl=identifierModuleUrl(type);var sourceFileName=moduleUrl!=null?"in "+kind+" "+identifierName(type)+" in "+moduleUrl:"in "+kind+" "+identifierName(type);var sourceFile=new ParseSourceFile('',sourceFileName);return new ParseSourceSpan(new ParseLocation(sourceFile,-1,-1,-1),new ParseLocation(sourceFile,-1,-1,-1));}/**
     * Generates Source Span object for a given R3 Type for JIT mode.
     *
     * @param kind Component or Directive.
     * @param typeName name of the Component or Directive.
     * @param sourceUrl reference to Component or Directive source.
     * @returns instance of ParseSourceSpan that represent a given Component or Directive.
     */function r3JitTypeSourceSpan(kind,typeName,sourceUrl){var sourceFileName="in "+kind+" "+typeName+" in "+sourceUrl;var sourceFile=new ParseSourceFile('',sourceFileName);return new ParseSourceSpan(new ParseLocation(sourceFile,-1,-1,-1),new ParseLocation(sourceFile,-1,-1,-1));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Text=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor){return visitor.visitText(this);};return Text;}();var BoundText=/** @class */function(){function BoundText(value,sourceSpan,i18n){this.value=value;this.sourceSpan=sourceSpan;this.i18n=i18n;}BoundText.prototype.visit=function(visitor){return visitor.visitBoundText(this);};return BoundText;}();var TextAttribute=/** @class */function(){function TextAttribute(name,value,sourceSpan,valueSpan,i18n){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;this.i18n=i18n;}TextAttribute.prototype.visit=function(visitor){return visitor.visitTextAttribute(this);};return TextAttribute;}();var BoundAttribute=/** @class */function(){function BoundAttribute(name,type,securityContext,value,unit,sourceSpan,valueSpan,i18n){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;this.i18n=i18n;}BoundAttribute.fromBoundElementProperty=function(prop,i18n){return new BoundAttribute(prop.name,prop.type,prop.securityContext,prop.value,prop.unit,prop.sourceSpan,prop.valueSpan,i18n);};BoundAttribute.prototype.visit=function(visitor){return visitor.visitBoundAttribute(this);};return BoundAttribute;}();var BoundEvent=/** @class */function(){function BoundEvent(name,type,handler,target,phase,sourceSpan,handlerSpan){this.name=name;this.type=type;this.handler=handler;this.target=target;this.phase=phase;this.sourceSpan=sourceSpan;this.handlerSpan=handlerSpan;}BoundEvent.fromParsedEvent=function(event){var target=event.type===0/* Regular */?event.targetOrPhase:null;var phase=event.type===1/* Animation */?event.targetOrPhase:null;return new BoundEvent(event.name,event.type,event.handler,target,phase,event.sourceSpan,event.handlerSpan);};BoundEvent.prototype.visit=function(visitor){return visitor.visitBoundEvent(this);};return BoundEvent;}();var Element=/** @class */function(){function Element(name,attributes,inputs,outputs,children,references,sourceSpan,startSourceSpan,endSourceSpan,i18n){this.name=name;this.attributes=attributes;this.inputs=inputs;this.outputs=outputs;this.children=children;this.references=references;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;this.i18n=i18n;// If the element is empty then the source span should include any closing tag
if(children.length===0&&startSourceSpan&&endSourceSpan){this.sourceSpan=new ParseSourceSpan(sourceSpan.start,endSourceSpan.end);}}Element.prototype.visit=function(visitor){return visitor.visitElement(this);};return Element;}();var Template=/** @class */function(){function Template(tagName,attributes,inputs,outputs,templateAttrs,children,references,variables,sourceSpan,startSourceSpan,endSourceSpan,i18n){this.tagName=tagName;this.attributes=attributes;this.inputs=inputs;this.outputs=outputs;this.templateAttrs=templateAttrs;this.children=children;this.references=references;this.variables=variables;this.sourceSpan=sourceSpan;this.startSourceSpan=startSourceSpan;this.endSourceSpan=endSourceSpan;this.i18n=i18n;}Template.prototype.visit=function(visitor){return visitor.visitTemplate(this);};return Template;}();var Content=/** @class */function(){function Content(selector,attributes,sourceSpan,i18n){this.selector=selector;this.attributes=attributes;this.sourceSpan=sourceSpan;this.i18n=i18n;}Content.prototype.visit=function(visitor){return visitor.visitContent(this);};return Content;}();var Variable=/** @class */function(){function Variable(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}Variable.prototype.visit=function(visitor){return visitor.visitVariable(this);};return Variable;}();var Reference=/** @class */function(){function Reference(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}Reference.prototype.visit=function(visitor){return visitor.visitReference(this);};return Reference;}();var Icu=/** @class */function(){function Icu(vars,placeholders,sourceSpan,i18n){this.vars=vars;this.placeholders=placeholders;this.sourceSpan=sourceSpan;this.i18n=i18n;}Icu.prototype.visit=function(visitor){return visitor.visitIcu(this);};return Icu;}();var NullVisitor=/** @class */function(){function NullVisitor(){}NullVisitor.prototype.visitElement=function(element){};NullVisitor.prototype.visitTemplate=function(template){};NullVisitor.prototype.visitContent=function(content){};NullVisitor.prototype.visitVariable=function(variable){};NullVisitor.prototype.visitReference=function(reference){};NullVisitor.prototype.visitTextAttribute=function(attribute){};NullVisitor.prototype.visitBoundAttribute=function(attribute){};NullVisitor.prototype.visitBoundEvent=function(attribute){};NullVisitor.prototype.visitText=function(text){};NullVisitor.prototype.visitBoundText=function(text){};NullVisitor.prototype.visitIcu=function(icu){};return NullVisitor;}();var RecursiveVisitor=/** @class */function(){function RecursiveVisitor(){}RecursiveVisitor.prototype.visitElement=function(element){visitAll(this,element.attributes);visitAll(this,element.children);visitAll(this,element.references);};RecursiveVisitor.prototype.visitTemplate=function(template){visitAll(this,template.attributes);visitAll(this,template.children);visitAll(this,template.references);visitAll(this,template.variables);};RecursiveVisitor.prototype.visitContent=function(content){};RecursiveVisitor.prototype.visitVariable=function(variable){};RecursiveVisitor.prototype.visitReference=function(reference){};RecursiveVisitor.prototype.visitTextAttribute=function(attribute){};RecursiveVisitor.prototype.visitBoundAttribute=function(attribute){};RecursiveVisitor.prototype.visitBoundEvent=function(attribute){};RecursiveVisitor.prototype.visitText=function(text){};RecursiveVisitor.prototype.visitBoundText=function(text){};RecursiveVisitor.prototype.visitIcu=function(icu){};return RecursiveVisitor;}();var TransformVisitor=/** @class */function(){function TransformVisitor(){}TransformVisitor.prototype.visitElement=function(element){var newAttributes=transformAll(this,element.attributes);var newInputs=transformAll(this,element.inputs);var newOutputs=transformAll(this,element.outputs);var newChildren=transformAll(this,element.children);var newReferences=transformAll(this,element.references);if(newAttributes!=element.attributes||newInputs!=element.inputs||newOutputs!=element.outputs||newChildren!=element.children||newReferences!=element.references){return new Element(element.name,newAttributes,newInputs,newOutputs,newChildren,newReferences,element.sourceSpan,element.startSourceSpan,element.endSourceSpan);}return element;};TransformVisitor.prototype.visitTemplate=function(template){var newAttributes=transformAll(this,template.attributes);var newInputs=transformAll(this,template.inputs);var newOutputs=transformAll(this,template.outputs);var newTemplateAttrs=transformAll(this,template.templateAttrs);var newChildren=transformAll(this,template.children);var newReferences=transformAll(this,template.references);var newVariables=transformAll(this,template.variables);if(newAttributes!=template.attributes||newInputs!=template.inputs||newOutputs!=template.outputs||newTemplateAttrs!=template.templateAttrs||newChildren!=template.children||newReferences!=template.references||newVariables!=template.variables){return new Template(template.tagName,newAttributes,newInputs,newOutputs,newTemplateAttrs,newChildren,newReferences,newVariables,template.sourceSpan,template.startSourceSpan,template.endSourceSpan);}return template;};TransformVisitor.prototype.visitContent=function(content){return content;};TransformVisitor.prototype.visitVariable=function(variable){return variable;};TransformVisitor.prototype.visitReference=function(reference){return reference;};TransformVisitor.prototype.visitTextAttribute=function(attribute){return attribute;};TransformVisitor.prototype.visitBoundAttribute=function(attribute){return attribute;};TransformVisitor.prototype.visitBoundEvent=function(attribute){return attribute;};TransformVisitor.prototype.visitText=function(text){return text;};TransformVisitor.prototype.visitBoundText=function(text){return text;};TransformVisitor.prototype.visitIcu=function(icu){return icu;};return TransformVisitor;}();function visitAll(visitor,nodes){var e_1,_a,e_2,_b;var result=[];if(visitor.visit){try{for(var nodes_1=__values(nodes),nodes_1_1=nodes_1.next();!nodes_1_1.done;nodes_1_1=nodes_1.next()){var node=nodes_1_1.value;var newNode=visitor.visit(node)||node.visit(visitor);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(nodes_1_1&&!nodes_1_1.done&&(_a=nodes_1["return"]))_a.call(nodes_1);}finally{if(e_1)throw e_1.error;}}}else{try{for(var nodes_2=__values(nodes),nodes_2_1=nodes_2.next();!nodes_2_1.done;nodes_2_1=nodes_2.next()){var node=nodes_2_1.value;var newNode=node.visit(visitor);if(newNode){result.push(newNode);}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(nodes_2_1&&!nodes_2_1.done&&(_b=nodes_2["return"]))_b.call(nodes_2);}finally{if(e_2)throw e_2.error;}}}return result;}function transformAll(visitor,nodes){var e_3,_a;var result=[];var changed=false;try{for(var nodes_3=__values(nodes),nodes_3_1=nodes_3.next();!nodes_3_1.done;nodes_3_1=nodes_3.next()){var node=nodes_3_1.value;var newNode=node.visit(visitor);if(newNode){result.push(newNode);}changed=changed||newNode!=node;}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(nodes_3_1&&!nodes_3_1.done&&(_a=nodes_3["return"]))_a.call(nodes_3);}finally{if(e_3)throw e_3.error;}}return changed?result:nodes;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Message=/** @class */function(){/**
         * @param nodes message AST
         * @param placeholders maps placeholder names to static content
         * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)
         * @param meaning
         * @param description
         * @param customId
         */function Message(nodes,placeholders,placeholderToMessage,meaning,description,customId){this.nodes=nodes;this.placeholders=placeholders;this.placeholderToMessage=placeholderToMessage;this.meaning=meaning;this.description=description;this.customId=customId;this.id=this.customId;/** The ids to use if there are no custom id and if `i18nLegacyMessageIdFormat` is not empty */this.legacyIds=[];if(nodes.length){this.sources=[{filePath:nodes[0].sourceSpan.start.file.url,startLine:nodes[0].sourceSpan.start.line+1,startCol:nodes[0].sourceSpan.start.col+1,endLine:nodes[nodes.length-1].sourceSpan.end.line+1,endCol:nodes[0].sourceSpan.start.col+1}];}else{this.sources=[];}}return Message;}();var Text$1=/** @class */function(){function Text(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}();// TODO(vicb): do we really need this node (vs an array) ?
var Container=/** @class */function(){function Container(children,sourceSpan){this.children=children;this.sourceSpan=sourceSpan;}Container.prototype.visit=function(visitor,context){return visitor.visitContainer(this,context);};return Container;}();var Icu$1=/** @class */function(){function Icu(expression,type,cases,sourceSpan){this.expression=expression;this.type=type;this.cases=cases;this.sourceSpan=sourceSpan;}Icu.prototype.visit=function(visitor,context){return visitor.visitIcu(this,context);};return Icu;}();var TagPlaceholder=/** @class */function(){function TagPlaceholder(tag,attrs,startName,closeName,children,isVoid,sourceSpan){this.tag=tag;this.attrs=attrs;this.startName=startName;this.closeName=closeName;this.children=children;this.isVoid=isVoid;this.sourceSpan=sourceSpan;}TagPlaceholder.prototype.visit=function(visitor,context){return visitor.visitTagPlaceholder(this,context);};return TagPlaceholder;}();var Placeholder=/** @class */function(){function Placeholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}Placeholder.prototype.visit=function(visitor,context){return visitor.visitPlaceholder(this,context);};return Placeholder;}();var IcuPlaceholder=/** @class */function(){function IcuPlaceholder(value,name,sourceSpan){this.value=value;this.name=name;this.sourceSpan=sourceSpan;}IcuPlaceholder.prototype.visit=function(visitor,context){return visitor.visitIcuPlaceholder(this,context);};return IcuPlaceholder;}();// Clone the AST
var CloneVisitor=/** @class */function(){function CloneVisitor(){}CloneVisitor.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};CloneVisitor.prototype.visitContainer=function(container,context){var _this=this;var children=container.children.map(function(n){return n.visit(_this,context);});return new Container(children,container.sourceSpan);};CloneVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases={};Object.keys(icu.cases).forEach(function(key){return cases[key]=icu.cases[key].visit(_this,context);});var msg=new Icu$1(icu.expression,icu.type,cases,icu.sourceSpan);msg.expressionPlaceholder=icu.expressionPlaceholder;return msg;};CloneVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var children=ph.children.map(function(n){return n.visit(_this,context);});return new TagPlaceholder(ph.tag,ph.attrs,ph.startName,ph.closeName,children,ph.isVoid,ph.sourceSpan);};CloneVisitor.prototype.visitPlaceholder=function(ph,context){return new Placeholder(ph.value,ph.name,ph.sourceSpan);};CloneVisitor.prototype.visitIcuPlaceholder=function(ph,context){return new IcuPlaceholder(ph.value,ph.name,ph.sourceSpan);};return CloneVisitor;}();// Visit all the nodes recursively
var RecurseVisitor=/** @class */function(){function RecurseVisitor(){}RecurseVisitor.prototype.visitText=function(text,context){};RecurseVisitor.prototype.visitContainer=function(container,context){var _this=this;container.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitIcu=function(icu,context){var _this=this;Object.keys(icu.cases).forEach(function(k){icu.cases[k].visit(_this);});};RecurseVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;ph.children.forEach(function(child){return child.visit(_this);});};RecurseVisitor.prototype.visitPlaceholder=function(ph,context){};RecurseVisitor.prototype.visitIcuPlaceholder=function(ph,context){};return RecurseVisitor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Return the message id or compute it using the XLIFF1 digest.
     */function digest(message){return message.id||computeDigest(message);}/**
     * Compute the message id using the XLIFF1 digest.
     */function computeDigest(message){return sha1(serializeNodes(message.nodes).join('')+("["+message.meaning+"]"));}/**
     * Return the message id or compute it using the XLIFF2/XMB/$localize digest.
     */function decimalDigest(message){return message.id||computeDecimalDigest(message);}/**
     * Compute the message id using the XLIFF2/XMB/$localize digest.
     */function computeDecimalDigest(message){var visitor=new _SerializerIgnoreIcuExpVisitor();var parts=message.nodes.map(function(a){return a.visit(visitor,null);});return computeMsgId(parts.join(''),message.meaning);}/**
     * Serialize the i18n ast to something xml-like in order to generate an UID.
     *
     * The visitor is also used in the i18n parser tests
     *
     * @internal
     */var _SerializerVisitor=/** @class */function(){function _SerializerVisitor(){}_SerializerVisitor.prototype.visitText=function(text,context){return text.value;};_SerializerVisitor.prototype.visitContainer=function(container,context){var _this=this;return"["+container.children.map(function(child){return child.visit(_this);}).join(', ')+"]";};_SerializerVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});return"{"+icu.expression+", "+icu.type+", "+strCases.join(', ')+"}";};_SerializerVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;return ph.isVoid?"<ph tag name=\""+ph.startName+"\"/>":"<ph tag name=\""+ph.startName+"\">"+ph.children.map(function(child){return child.visit(_this);}).join(', ')+"</ph name=\""+ph.closeName+"\">";};_SerializerVisitor.prototype.visitPlaceholder=function(ph,context){return ph.value?"<ph name=\""+ph.name+"\">"+ph.value+"</ph>":"<ph name=\""+ph.name+"\"/>";};_SerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){return"<ph icu name=\""+ph.name+"\">"+ph.value.visit(this)+"</ph>";};return _SerializerVisitor;}();var serializerVisitor=new _SerializerVisitor();function serializeNodes(nodes){return nodes.map(function(a){return a.visit(serializerVisitor,null);});}/**
     * Serialize the i18n ast to something xml-like in order to generate an UID.
     *
     * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.
     *
     * @internal
     */var _SerializerIgnoreIcuExpVisitor=/** @class */function(_super){__extends(_SerializerIgnoreIcuExpVisitor,_super);function _SerializerIgnoreIcuExpVisitor(){return _super!==null&&_super.apply(this,arguments)||this;}_SerializerIgnoreIcuExpVisitor.prototype.visitIcu=function(icu,context){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// Do not take the expression into account
return"{"+icu.type+", "+strCases.join(', ')+"}";};return _SerializerIgnoreIcuExpVisitor;}(_SerializerVisitor);/**
     * Compute the SHA1 of the given string
     *
     * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
     *
     * WARNING: this function has not been designed not tested with security in mind.
     *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.
     */function sha1(str){var utf8=utf8Encode(str);var words32=stringToWords32(utf8,Endian.Big);var len=utf8.length*8;var w=newArray(80);var a=0x67452301,b=0xefcdab89,c=0x98badcfe,d=0x10325476,e=0xc3d2e1f0;words32[len>>5]|=0x80<<24-len%32;words32[(len+64>>9<<4)+15]=len;for(var i=0;i<words32.length;i+=16){var h0=a,h1=b,h2=c,h3=d,h4=e;for(var j=0;j<80;j++){if(j<16){w[j]=words32[i+j];}else{w[j]=rol32(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);}var fkVal=fk(j,b,c,d);var f=fkVal[0];var k=fkVal[1];var temp=[rol32(a,5),f,e,k,w[j]].reduce(add32);e=d;d=c;c=rol32(b,30);b=a;a=temp;}a=add32(a,h0);b=add32(b,h1);c=add32(c,h2);d=add32(d,h3);e=add32(e,h4);}return byteStringToHexString(words32ToByteString([a,b,c,d,e]));}function fk(index,b,c,d){if(index<20){return[b&c|~b&d,0x5a827999];}if(index<40){return[b^c^d,0x6ed9eba1];}if(index<60){return[b&c|b&d|c&d,0x8f1bbcdc];}return[b^c^d,0xca62c1d6];}/**
     * Compute the fingerprint of the given string
     *
     * The output is 64 bit number encoded as a decimal string
     *
     * based on:
     * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
     */function fingerprint(str){var utf8=utf8Encode(str);var hi=hash32(utf8,0);var lo=hash32(utf8,102072);if(hi==0&&(lo==0||lo==1)){hi=hi^0x130f9bef;lo=lo^-0x6b5f56d8;}return[hi,lo];}function computeMsgId(msg,meaning){if(meaning===void 0){meaning='';}var msgFingerprint=fingerprint(msg);if(meaning){var meaningFingerprint=fingerprint(meaning);msgFingerprint=add64(rol64(msgFingerprint,1),meaningFingerprint);}var hi=msgFingerprint[0];var lo=msgFingerprint[1];return byteStringToDecString(words32ToByteString([hi&0x7fffffff,lo]));}function hash32(str,c){var a=0x9e3779b9,b=0x9e3779b9;var i;var len=str.length;for(i=0;i+12<=len;i+=12){a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));c=add32(c,wordAt(str,i+8,Endian.Little));var res=mix(a,b,c);a=res[0],b=res[1],c=res[2];}a=add32(a,wordAt(str,i,Endian.Little));b=add32(b,wordAt(str,i+4,Endian.Little));// the first byte of c is reserved for the length
c=add32(c,len);c=add32(c,wordAt(str,i+8,Endian.Little)<<8);return mix(a,b,c)[2];}// clang-format off
function mix(a,b,c){a=sub32(a,b);a=sub32(a,c);a^=c>>>13;b=sub32(b,c);b=sub32(b,a);b^=a<<8;c=sub32(c,a);c=sub32(c,b);c^=b>>>13;a=sub32(a,b);a=sub32(a,c);a^=c>>>12;b=sub32(b,c);b=sub32(b,a);b^=a<<16;c=sub32(c,a);c=sub32(c,b);c^=b>>>5;a=sub32(a,b);a=sub32(a,c);a^=c>>>3;b=sub32(b,c);b=sub32(b,a);b^=a<<10;c=sub32(c,a);c=sub32(c,b);c^=b>>>15;return[a,b,c];}// clang-format on
// Utils
var Endian;(function(Endian){Endian[Endian["Little"]=0]="Little";Endian[Endian["Big"]=1]="Big";})(Endian||(Endian={}));function add32(a,b){return add32to64(a,b)[1];}function add32to64(a,b){var low=(a&0xffff)+(b&0xffff);var high=(a>>>16)+(b>>>16)+(low>>>16);return[high>>>16,high<<16|low&0xffff];}function add64(a,b){var ah=a[0],al=a[1];var bh=b[0],bl=b[1];var result=add32to64(al,bl);var carry=result[0];var l=result[1];var h=add32(add32(ah,bh),carry);return[h,l];}function sub32(a,b){var low=(a&0xffff)-(b&0xffff);var high=(a>>16)-(b>>16)+(low>>16);return high<<16|low&0xffff;}// Rotate a 32b number left `count` position
function rol32(a,count){return a<<count|a>>>32-count;}// Rotate a 64b number left `count` position
function rol64(num,count){var hi=num[0],lo=num[1];var h=hi<<count|lo>>>32-count;var l=lo<<count|hi>>>32-count;return[h,l];}function stringToWords32(str,endian){var size=str.length+3>>>2;var words32=[];for(var i=0;i<size;i++){words32[i]=wordAt(str,i*4,endian);}return words32;}function byteAt(str,index){return index>=str.length?0:str.charCodeAt(index)&0xff;}function wordAt(str,index,endian){var word=0;if(endian===Endian.Big){for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<24-8*i;}}else{for(var i=0;i<4;i++){word+=byteAt(str,index+i)<<8*i;}}return word;}function words32ToByteString(words32){return words32.reduce(function(str,word){return str+word32ToByteString(word);},'');}function word32ToByteString(word){var str='';for(var i=0;i<4;i++){str+=String.fromCharCode(word>>>8*(3-i)&0xff);}return str;}function byteStringToHexString(str){var hex='';for(var i=0;i<str.length;i++){var b=byteAt(str,i);hex+=(b>>>4).toString(16)+(b&0x0f).toString(16);}return hex.toLowerCase();}// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)
function byteStringToDecString(str){var decimal='';var toThePower='1';for(var i=str.length-1;i>=0;i--){decimal=addBigInt(decimal,numberTimesBigInt(byteAt(str,i),toThePower));toThePower=numberTimesBigInt(256,toThePower);}return decimal.split('').reverse().join('');}// x and y decimal, lowest significant digit first
function addBigInt(x,y){var sum='';var len=Math.max(x.length,y.length);for(var i=0,carry=0;i<len||carry;i++){var tmpSum=carry+ +(x[i]||0)+ +(y[i]||0);if(tmpSum>=10){carry=1;sum+=tmpSum-10;}else{carry=0;sum+=tmpSum;}}return sum;}function numberTimesBigInt(num,b){var product='';var bToThePower=b;for(;num!==0;num=num>>>1){if(num&1)product=addBigInt(product,bToThePower);bToThePower=addBigInt(bToThePower,bToThePower);}return product;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Serializer=/** @class */function(){function Serializer(){}// Creates a name mapper, see `PlaceholderMapper`
// Returning `null` means that no name mapping is used.
Serializer.prototype.createNameMapper=function(message){return null;};return Serializer;}();/**
     * A simple mapper that take a function to transform an internal name to a public name
     */var SimplePlaceholderMapper=/** @class */function(_super){__extends(SimplePlaceholderMapper,_super);// create a mapping from the message
function SimplePlaceholderMapper(message,mapName){var _this=_super.call(this)||this;_this.mapName=mapName;_this.internalToPublic={};_this.publicToNextId={};_this.publicToInternal={};message.nodes.forEach(function(node){return node.visit(_this);});return _this;}SimplePlaceholderMapper.prototype.toPublicName=function(internalName){return this.internalToPublic.hasOwnProperty(internalName)?this.internalToPublic[internalName]:null;};SimplePlaceholderMapper.prototype.toInternalName=function(publicName){return this.publicToInternal.hasOwnProperty(publicName)?this.publicToInternal[publicName]:null;};SimplePlaceholderMapper.prototype.visitText=function(text,context){return null;};SimplePlaceholderMapper.prototype.visitTagPlaceholder=function(ph,context){this.visitPlaceholderName(ph.startName);_super.prototype.visitTagPlaceholder.call(this,ph,context);this.visitPlaceholderName(ph.closeName);};SimplePlaceholderMapper.prototype.visitPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};SimplePlaceholderMapper.prototype.visitIcuPlaceholder=function(ph,context){this.visitPlaceholderName(ph.name);};// XMB placeholders could only contains A-Z, 0-9 and _
SimplePlaceholderMapper.prototype.visitPlaceholderName=function(internalName){if(!internalName||this.internalToPublic.hasOwnProperty(internalName)){return;}var publicName=this.mapName(internalName);if(this.publicToInternal.hasOwnProperty(publicName)){// Create a new XMB when it has already been used
var nextId=this.publicToNextId[publicName];this.publicToNextId[publicName]=nextId+1;publicName=publicName+"_"+nextId;}else{this.publicToNextId[publicName]=1;}this.internalToPublic[internalName]=publicName;this.publicToInternal[publicName]=internalName;};return SimplePlaceholderMapper;}(RecurseVisitor);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _Visitor=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitTag=function(tag){var _this=this;var strAttrs=this._serializeAttributes(tag.attrs);if(tag.children.length==0){return"<"+tag.name+strAttrs+"/>";}var strChildren=tag.children.map(function(node){return node.visit(_this);});return"<"+tag.name+strAttrs+">"+strChildren.join('')+"</"+tag.name+">";};_Visitor.prototype.visitText=function(text){return text.value;};_Visitor.prototype.visitDeclaration=function(decl){return"<?xml"+this._serializeAttributes(decl.attrs)+" ?>";};_Visitor.prototype._serializeAttributes=function(attrs){var strAttrs=Object.keys(attrs).map(function(name){return name+"=\""+attrs[name]+"\"";}).join(' ');return strAttrs.length>0?' '+strAttrs:'';};_Visitor.prototype.visitDoctype=function(doctype){return"<!DOCTYPE "+doctype.rootTag+" [\n"+doctype.dtd+"\n]>";};return _Visitor;}();var _visitor=new _Visitor();function serialize(nodes){return nodes.map(function(node){return node.visit(_visitor);}).join('');}var Declaration=/** @class */function(){function Declaration(unescapedAttrs){var _this=this;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Declaration.prototype.visit=function(visitor){return visitor.visitDeclaration(this);};return Declaration;}();var Doctype=/** @class */function(){function Doctype(rootTag,dtd){this.rootTag=rootTag;this.dtd=dtd;}Doctype.prototype.visit=function(visitor){return visitor.visitDoctype(this);};return Doctype;}();var Tag=/** @class */function(){function Tag(name,unescapedAttrs,children){var _this=this;if(unescapedAttrs===void 0){unescapedAttrs={};}if(children===void 0){children=[];}this.name=name;this.children=children;this.attrs={};Object.keys(unescapedAttrs).forEach(function(k){_this.attrs[k]=escapeXml(unescapedAttrs[k]);});}Tag.prototype.visit=function(visitor){return visitor.visitTag(this);};return Tag;}();var Text$2=/** @class */function(){function Text(unescapedValue){this.value=escapeXml(unescapedValue);}Text.prototype.visit=function(visitor){return visitor.visitText(this);};return Text;}();var CR=/** @class */function(_super){__extends(CR,_super);function CR(ws){if(ws===void 0){ws=0;}return _super.call(this,"\n"+new Array(ws+1).join(' '))||this;}return CR;}(Text$2);var _ESCAPED_CHARS=[[/&/g,'&amp;'],[/"/g,'&quot;'],[/'/g,'&apos;'],[/</g,'&lt;'],[/>/g,'&gt;']];// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities
function escapeXml(text){return _ESCAPED_CHARS.reduce(function(text,entry){return text.replace(entry[0],entry[1]);},text);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _MESSAGES_TAG='messagebundle';var _MESSAGE_TAG='msg';var _PLACEHOLDER_TAG='ph';var _EXAMPLE_TAG='ex';var _SOURCE_TAG='source';var _DOCTYPE="<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>";var Xmb=/** @class */function(_super){__extends(Xmb,_super);function Xmb(){return _super!==null&&_super.apply(this,arguments)||this;}Xmb.prototype.write=function(messages,locale){var exampleVisitor=new ExampleVisitor();var visitor=new _Visitor$1();var rootNode=new Tag(_MESSAGES_TAG);messages.forEach(function(message){var attrs={id:message.id};if(message.description){attrs['desc']=message.description;}if(message.meaning){attrs['meaning']=message.meaning;}var sourceTags=[];message.sources.forEach(function(source){sourceTags.push(new Tag(_SOURCE_TAG,{},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});rootNode.children.push(new CR(2),new Tag(_MESSAGE_TAG,attrs,__spread(sourceTags,visitor.serialize(message.nodes))));});rootNode.children.push(new CR());return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),new Doctype(_MESSAGES_TAG,_DOCTYPE),new CR(),exampleVisitor.addDefaultExamples(rootNode),new CR()]);};Xmb.prototype.load=function(content,url){throw new Error('Unsupported');};Xmb.prototype.digest=function(message){return digest$1(message);};Xmb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xmb;}(Serializer);var _Visitor$1=/** @class */function(){function _Visitor(){}_Visitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_Visitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,__spread(node.visit(_this)));});return nodes;};_Visitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,__spread([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_Visitor.prototype.visitTagPlaceholder=function(ph,context){var startTagAsText=new Text$2("<"+ph.tag+">");var startEx=new Tag(_EXAMPLE_TAG,{},[startTagAsText]);// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
var startTagPh=new Tag(_PLACEHOLDER_TAG,{name:ph.startName},[startEx,startTagAsText]);if(ph.isVoid){// void tags have no children nor closing tags
return[startTagPh];}var closeTagAsText=new Text$2("</"+ph.tag+">");var closeEx=new Tag(_EXAMPLE_TAG,{},[closeTagAsText]);// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
var closeTagPh=new Tag(_PLACEHOLDER_TAG,{name:ph.closeName},[closeEx,closeTagAsText]);return __spread([startTagPh],this.serialize(ph.children),[closeTagPh]);};_Visitor.prototype.visitPlaceholder=function(ph,context){var interpolationAsText=new Text$2("{{"+ph.value+"}}");// Example tag needs to be not-empty for TC.
var exTag=new Tag(_EXAMPLE_TAG,{},[interpolationAsText]);return[// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
new Tag(_PLACEHOLDER_TAG,{name:ph.name},[exTag,interpolationAsText])];};_Visitor.prototype.visitIcuPlaceholder=function(ph,context){var icuExpression=ph.value.expression;var icuType=ph.value.type;var icuCases=Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ');var icuAsText=new Text$2("{"+icuExpression+", "+icuType+", "+icuCases+"}");var exTag=new Tag(_EXAMPLE_TAG,{},[icuAsText]);return[// TC requires PH to have a non empty EX, and uses the text node to show the "original" value.
new Tag(_PLACEHOLDER_TAG,{name:ph.name},[exTag,icuAsText])];};_Visitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],__spread(nodes.map(function(node){return node.visit(_this);})));};return _Visitor;}();function digest$1(message){return decimalDigest(message);}// TC requires at least one non-empty example on placeholders
var ExampleVisitor=/** @class */function(){function ExampleVisitor(){}ExampleVisitor.prototype.addDefaultExamples=function(node){node.visit(this);return node;};ExampleVisitor.prototype.visitTag=function(tag){var _this=this;if(tag.name===_PLACEHOLDER_TAG){if(!tag.children||tag.children.length==0){var exText=new Text$2(tag.attrs['name']||'...');tag.children=[new Tag(_EXAMPLE_TAG,{},[exText])];}}else if(tag.children){tag.children.forEach(function(node){return node.visit(_this);});}};ExampleVisitor.prototype.visitText=function(text){};ExampleVisitor.prototype.visitDeclaration=function(decl){};ExampleVisitor.prototype.visitDoctype=function(doctype){};return ExampleVisitor;}();// XMB/XTB placeholders can only contain A-Z, 0-9 and _
function toPublicName(internalName){return internalName.toUpperCase().replace(/[^A-Z0-9_]/g,'_');}/* Closure variables holding messages must be named `MSG_[A-Z0-9]+` */var CLOSURE_TRANSLATION_PREFIX='MSG_';/* Prefix for non-`goog.getMsg` i18n-related vars */var TRANSLATION_PREFIX='I18N_';/** Name of the i18n attributes **/var I18N_ATTR='i18n';var I18N_ATTR_PREFIX='i18n-';/** Prefix of var expressions used in ICUs */var I18N_ICU_VAR_PREFIX='VAR_';/** Prefix of ICU expressions for post processing */var I18N_ICU_MAPPING_PREFIX='I18N_EXP_';/** Placeholder wrapper for i18n expressions **/var I18N_PLACEHOLDER_SYMBOL='�';function isI18nAttribute(name){return name===I18N_ATTR||name.startsWith(I18N_ATTR_PREFIX);}function isI18nRootNode(meta){return meta instanceof Message;}function isSingleI18nIcu(meta){return isI18nRootNode(meta)&&meta.nodes.length===1&&meta.nodes[0]instanceof Icu$1;}function hasI18nMeta(node){return!!node.i18n;}function hasI18nAttrs(element){return element.attrs.some(function(attr){return isI18nAttribute(attr.name);});}function icuFromI18nMessage(message){return message.nodes[0];}function wrapI18nPlaceholder(content,contextId){if(contextId===void 0){contextId=0;}var blockId=contextId>0?":"+contextId:'';return""+I18N_PLACEHOLDER_SYMBOL+content+blockId+I18N_PLACEHOLDER_SYMBOL;}function assembleI18nBoundString(strings,bindingStartIndex,contextId){if(bindingStartIndex===void 0){bindingStartIndex=0;}if(contextId===void 0){contextId=0;}if(!strings.length)return'';var acc='';var lastIdx=strings.length-1;for(var i=0;i<lastIdx;i++){acc+=""+strings[i]+wrapI18nPlaceholder(bindingStartIndex+i,contextId);}acc+=strings[lastIdx];return acc;}function getSeqNumberGenerator(startsAt){if(startsAt===void 0){startsAt=0;}var current=startsAt;return function(){return current++;};}function placeholdersToParams(placeholders){var params={};placeholders.forEach(function(values,key){params[key]=literal(values.length>1?"["+values.join('|')+"]":values[0]);});return params;}function updatePlaceholderMap(map,name){var values=[];for(var _i=2;_i<arguments.length;_i++){values[_i-2]=arguments[_i];}var current=map.get(name)||[];current.push.apply(current,__spread(values));map.set(name,current);}function assembleBoundTextPlaceholders(meta,bindingStartIndex,contextId){if(bindingStartIndex===void 0){bindingStartIndex=0;}if(contextId===void 0){contextId=0;}var startIdx=bindingStartIndex;var placeholders=new Map();var node=meta instanceof Message?meta.nodes.find(function(node){return node instanceof Container;}):meta;if(node){node.children.filter(function(child){return child instanceof Placeholder;}).forEach(function(child,idx){var content=wrapI18nPlaceholder(startIdx+idx,contextId);updatePlaceholderMap(placeholders,child.name,content);});}return placeholders;}/**
     * Format the placeholder names in a map of placeholders to expressions.
     *
     * The placeholder names are converted from "internal" format (e.g. `START_TAG_DIV_1`) to "external"
     * format (e.g. `startTagDiv_1`).
     *
     * @param params A map of placeholder names to expressions.
     * @param useCamelCase whether to camelCase the placeholder name when formatting.
     * @returns A new map of formatted placeholder names to expressions.
     */function i18nFormatPlaceholderNames(params,useCamelCase){if(params===void 0){params={};}var _params={};if(params&&Object.keys(params).length){Object.keys(params).forEach(function(key){return _params[formatI18nPlaceholderName(key,useCamelCase)]=params[key];});}return _params;}/**
     * Converts internal placeholder names to public-facing format
     * (for example to use in goog.getMsg call).
     * Example: `START_TAG_DIV_1` is converted to `startTagDiv_1`.
     *
     * @param name The placeholder name that should be formatted
     * @returns Formatted placeholder name
     */function formatI18nPlaceholderName(name,useCamelCase){if(useCamelCase===void 0){useCamelCase=true;}var publicName=toPublicName(name);if(!useCamelCase){return publicName;}var chunks=publicName.split('_');if(chunks.length===1){// if no "_" found - just lowercase the value
return name.toLowerCase();}var postfix;// eject last element if it's a number
if(/^\d+$/.test(chunks[chunks.length-1])){postfix=chunks.pop();}var raw=chunks.shift().toLowerCase();if(chunks.length){raw+=chunks.map(function(c){return c.charAt(0).toUpperCase()+c.slice(1).toLowerCase();}).join('');}return postfix?raw+"_"+postfix:raw;}/**
     * Generates a prefix for translation const name.
     *
     * @param extra Additional local prefix that should be injected into translation var name
     * @returns Complete translation const prefix
     */function getTranslationConstPrefix(extra){return(""+CLOSURE_TRANSLATION_PREFIX+extra).toUpperCase();}/**
     * Generate AST to declare a variable. E.g. `var I18N_1;`.
     * @param variable the name of the variable to declare.
     */function declareI18nVariable(variable){return new DeclareVarStmt(variable.name,undefined,INFERRED_TYPE,null,variable.sourceSpan);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Checks whether an object key contains potentially unsafe chars, thus the key should be wrapped in
     * quotes. Note: we do not wrap all keys into quotes, as it may have impact on minification and may
     * bot work in some cases when object keys are mangled by minifier.
     *
     * TODO(FW-1136): this is a temporary solution, we need to come up with a better way of working with
     * inputs that contain potentially unsafe chars.
     */var UNSAFE_OBJECT_KEY_NAME_REGEXP=/[-.]/;/** Name of the temporary to use during data binding */var TEMPORARY_NAME='_t';/** Name of the context parameter passed into a template function */var CONTEXT_NAME='ctx';/** Name of the RenderFlag passed into a template function */var RENDER_FLAGS='rf';/** The prefix reference variables */var REFERENCE_PREFIX='_r';/** The name of the implicit context reference */var IMPLICIT_REFERENCE='$implicit';/** Non bindable attribute name **/var NON_BINDABLE_ATTR='ngNonBindable';/**
     * Creates an allocator for a temporary variable.
     *
     * A variable declaration is added to the statements the first time the allocator is invoked.
     */function temporaryAllocator(statements,name){var temp=null;return function(){if(!temp){statements.push(new DeclareVarStmt(TEMPORARY_NAME,undefined,DYNAMIC_TYPE));temp=variable(name);}return temp;};}function unsupported(feature){if(this){throw new Error("Builder "+this.constructor.name+" doesn't support "+feature+" yet");}throw new Error("Feature "+feature+" is not supported yet");}function invalid$1(arg){throw new Error("Invalid state: Visitor "+this.constructor.name+" doesn't handle "+arg.constructor.name);}function asLiteral(value){if(Array.isArray(value)){return literalArr(value.map(asLiteral));}return literal(value,INFERRED_TYPE);}function conditionallyCreateMapObjectLiteral(keys,keepDeclared){if(Object.getOwnPropertyNames(keys).length>0){return mapToExpression(keys,keepDeclared);}return null;}function mapToExpression(map,keepDeclared){return literalMap(Object.getOwnPropertyNames(map).map(function(key){var _a,_b;// canonical syntax: `dirProp: publicProp`
// if there is no `:`, use dirProp = elProp
var value=map[key];var declaredName;var publicName;var minifiedName;if(Array.isArray(value)){_a=__read(value,2),publicName=_a[0],declaredName=_a[1];}else{_b=__read(splitAtColon(key,[key,value]),2),declaredName=_b[0],publicName=_b[1];}minifiedName=declaredName;return{key:minifiedName,// put quotes around keys that contain potentially unsafe characters
quoted:UNSAFE_OBJECT_KEY_NAME_REGEXP.test(minifiedName),value:keepDeclared&&publicName!==declaredName?literalArr([asLiteral(publicName),asLiteral(declaredName)]):asLiteral(publicName)};}));}/**
     *  Remove trailing null nodes as they are implied.
     */function trimTrailingNulls(parameters){while(isNull(parameters[parameters.length-1])){parameters.pop();}return parameters;}function getQueryPredicate(query,constantPool){if(Array.isArray(query.predicate)){var predicate_1=[];query.predicate.forEach(function(selector){// Each item in predicates array may contain strings with comma-separated refs
// (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them
// as separate array entities
var selectors=selector.split(',').map(function(token){return literal(token.trim());});predicate_1.push.apply(predicate_1,__spread(selectors));});return constantPool.getConstLiteral(literalArr(predicate_1),true);}else{return query.predicate;}}function noop(){}var DefinitionMap=/** @class */function(){function DefinitionMap(){this.values=[];}DefinitionMap.prototype.set=function(key,value){if(value){this.values.push({key:key,value:value,quoted:false});}};DefinitionMap.prototype.toLiteralMap=function(){return literalMap(this.values);};return DefinitionMap;}();/**
     * Extract a map of properties to values for a given element or template node, which can be used
     * by the directive matching machinery.
     *
     * @param elOrTpl the element or template in question
     * @return an object set up for directive matching. For attributes on the element/template, this
     * object maps a property name to its (static) value. For any bindings, this map simply maps the
     * property name to an empty string.
     */function getAttrsForDirectiveMatching(elOrTpl){var attributesMap={};if(elOrTpl instanceof Template&&elOrTpl.tagName!=='ng-template'){elOrTpl.templateAttrs.forEach(function(a){return attributesMap[a.name]='';});}else{elOrTpl.attributes.forEach(function(a){if(!isI18nAttribute(a.name)){attributesMap[a.name]=a.value;}});elOrTpl.inputs.forEach(function(i){attributesMap[i.name]='';});elOrTpl.outputs.forEach(function(o){attributesMap[o.name]='';});}return attributesMap;}/** Returns a call expression to a chained instruction, e.g. `property(params[0])(params[1])`. */function chainedInstruction(reference,calls,span){var expression=importExpr(reference,null,span);if(calls.length>0){for(var i=0;i<calls.length;i++){expression=expression.callFn(calls[i],span);}}else{// Add a blank invocation, in case the `calls` array is empty.
expression=expression.callFn([],span);}return expression;}/**
     * Gets the number of arguments expected to be passed to a generated instruction in the case of
     * interpolation instructions.
     * @param interpolation An interpolation ast
     */function getInterpolationArgsLength(interpolation){var expressions=interpolation.expressions,strings=interpolation.strings;if(expressions.length===1&&strings.length===2&&strings[0]===''&&strings[1]===''){// If the interpolation has one interpolated value, but the prefix and suffix are both empty
// strings, we only pass one argument, to a special instruction like `propertyInterpolate` or
// `textInterpolate`.
return 1;}else{return expressions.length+strings.length;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var R3FactoryDelegateType;(function(R3FactoryDelegateType){R3FactoryDelegateType[R3FactoryDelegateType["Class"]=0]="Class";R3FactoryDelegateType[R3FactoryDelegateType["Function"]=1]="Function";R3FactoryDelegateType[R3FactoryDelegateType["Factory"]=2]="Factory";})(R3FactoryDelegateType||(R3FactoryDelegateType={}));(function(R3FactoryTarget){R3FactoryTarget[R3FactoryTarget["Directive"]=0]="Directive";R3FactoryTarget[R3FactoryTarget["Component"]=1]="Component";R3FactoryTarget[R3FactoryTarget["Injectable"]=2]="Injectable";R3FactoryTarget[R3FactoryTarget["Pipe"]=3]="Pipe";R3FactoryTarget[R3FactoryTarget["NgModule"]=4]="NgModule";})(exports.R3FactoryTarget||(exports.R3FactoryTarget={}));(function(R3ResolvedDependencyType){/**
         * A normal token dependency.
         */R3ResolvedDependencyType[R3ResolvedDependencyType["Token"]=0]="Token";/**
         * The dependency is for an attribute.
         *
         * The token expression is a string representing the attribute name.
         */R3ResolvedDependencyType[R3ResolvedDependencyType["Attribute"]=1]="Attribute";/**
         * Injecting the `ChangeDetectorRef` token. Needs special handling when injected into a pipe.
         */R3ResolvedDependencyType[R3ResolvedDependencyType["ChangeDetectorRef"]=2]="ChangeDetectorRef";/**
         * An invalid dependency (no token could be determined). An error should be thrown at runtime.
         */R3ResolvedDependencyType[R3ResolvedDependencyType["Invalid"]=3]="Invalid";})(exports.R3ResolvedDependencyType||(exports.R3ResolvedDependencyType={}));/**
     * Construct a factory function expression for the given `R3FactoryMetadata`.
     */function compileFactoryFunction(meta){var t=variable('t');var statements=[];var ctorDepsType=NONE_TYPE;// The type to instantiate via constructor invocation. If there is no delegated factory, meaning
// this type is always created by constructor invocation, then this is the type-to-create
// parameter provided by the user (t) if specified, or the current type if not. If there is a
// delegated factory (which is used to create the current type) then this is only the type-to-
// create parameter (t).
var typeForCtor=!isDelegatedMetadata(meta)?new BinaryOperatorExpr(exports.BinaryOperator.Or,t,meta.internalType):t;var ctorExpr=null;if(meta.deps!==null){// There is a constructor (either explicitly or implicitly defined).
if(meta.deps!=='invalid'){ctorExpr=new InstantiateExpr(typeForCtor,injectDependencies(meta.deps,meta.injectFn,meta.target===exports.R3FactoryTarget.Pipe));ctorDepsType=createCtorDepsType(meta.deps);}}else{var baseFactory=variable("\u0275"+meta.name+"_BaseFactory");var getInheritedFactory=importExpr(Identifiers$1.getInheritedFactory);var baseFactoryStmt=baseFactory.set(getInheritedFactory.callFn([meta.internalType])).toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Exported,exports.StmtModifier.Final]);statements.push(baseFactoryStmt);// There is no constructor, use the base class' factory to construct typeForCtor.
ctorExpr=baseFactory.callFn([typeForCtor]);}var ctorExprFinal=ctorExpr;var body=[];var retExpr=null;function makeConditionalFactory(nonCtorExpr){var r=variable('r');body.push(r.set(NULL_EXPR).toDeclStmt());var ctorStmt=null;if(ctorExprFinal!==null){ctorStmt=r.set(ctorExprFinal).toStmt();}else{ctorStmt=importExpr(Identifiers$1.invalidFactory).callFn([]).toStmt();}body.push(ifStmt(t,[ctorStmt],[r.set(nonCtorExpr).toStmt()]));return r;}if(isDelegatedMetadata(meta)&&meta.delegateType===R3FactoryDelegateType.Factory){var delegateFactory=variable("\u0275"+meta.name+"_BaseFactory");var getFactoryOf=importExpr(Identifiers$1.getFactoryOf);if(meta.delegate.isEquivalent(meta.internalType)){throw new Error("Illegal state: compiling factory that delegates to itself");}var delegateFactoryStmt=delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(INFERRED_TYPE,[exports.StmtModifier.Exported,exports.StmtModifier.Final]);statements.push(delegateFactoryStmt);retExpr=makeConditionalFactory(delegateFactory.callFn([]));}else if(isDelegatedMetadata(meta)){// This type is created with a delegated factory. If a type parameter is not specified, call
// the factory instead.
var delegateArgs=injectDependencies(meta.delegateDeps,meta.injectFn,meta.target===exports.R3FactoryTarget.Pipe);// Either call `new delegate(...)` or `delegate(...)` depending on meta.delegateType.
var factoryExpr=new(meta.delegateType===R3FactoryDelegateType.Class?InstantiateExpr:InvokeFunctionExpr)(meta.delegate,delegateArgs);retExpr=makeConditionalFactory(factoryExpr);}else if(isExpressionFactoryMetadata(meta)){// TODO(alxhub): decide whether to lower the value here or in the caller
retExpr=makeConditionalFactory(meta.expression);}else{retExpr=ctorExpr;}if(retExpr!==null){body.push(new ReturnStatement(retExpr));}else{body.push(importExpr(Identifiers$1.invalidFactory).callFn([]).toStmt());}return{factory:fn([new FnParam('t',DYNAMIC_TYPE)],body,INFERRED_TYPE,undefined,meta.name+"_Factory"),statements:statements,type:expressionType(importExpr(Identifiers$1.FactoryDef,[typeWithParameters(meta.type.type,meta.typeArgumentCount),ctorDepsType]))};}function injectDependencies(deps,injectFn,isPipe){return deps.map(function(dep,index){return compileInjectDependency(dep,injectFn,isPipe,index);});}function compileInjectDependency(dep,injectFn,isPipe,index){// Interpret the dependency according to its resolved type.
switch(dep.resolved){case exports.R3ResolvedDependencyType.Token:case exports.R3ResolvedDependencyType.ChangeDetectorRef:// Build up the injection flags according to the metadata.
var flags=0/* Default */|(dep.self?2/* Self */:0)|(dep.skipSelf?4/* SkipSelf */:0)|(dep.host?1/* Host */:0)|(dep.optional?8/* Optional */:0);// If this dependency is optional or otherwise has non-default flags, then additional
// parameters describing how to inject the dependency must be passed to the inject function
// that's being used.
var flagsParam=flags!==0/* Default */||dep.optional?literal(flags):null;// We have a separate instruction for injecting ChangeDetectorRef into a pipe.
if(isPipe&&dep.resolved===exports.R3ResolvedDependencyType.ChangeDetectorRef){return importExpr(Identifiers$1.injectPipeChangeDetectorRef).callFn(flagsParam?[flagsParam]:[]);}// Build up the arguments to the injectFn call.
var injectArgs=[dep.token];if(flagsParam){injectArgs.push(flagsParam);}return importExpr(injectFn).callFn(injectArgs);case exports.R3ResolvedDependencyType.Attribute:// In the case of attributes, the attribute name in question is given as the token.
return importExpr(Identifiers$1.injectAttribute).callFn([dep.token]);case exports.R3ResolvedDependencyType.Invalid:return importExpr(Identifiers$1.invalidFactoryDep).callFn([literal(index)]);default:return unsupported("Unknown R3ResolvedDependencyType: "+exports.R3ResolvedDependencyType[dep.resolved]);}}function createCtorDepsType(deps){var hasTypes=false;var attributeTypes=deps.map(function(dep){var type=createCtorDepType(dep);if(type!==null){hasTypes=true;return type;}else{return literal(null);}});if(hasTypes){return expressionType(literalArr(attributeTypes));}else{return NONE_TYPE;}}function createCtorDepType(dep){var entries=[];if(dep.resolved===exports.R3ResolvedDependencyType.Attribute){if(dep.attribute!==null){entries.push({key:'attribute',value:dep.attribute,quoted:false});}}if(dep.optional){entries.push({key:'optional',value:literal(true),quoted:false});}if(dep.host){entries.push({key:'host',value:literal(true),quoted:false});}if(dep.self){entries.push({key:'self',value:literal(true),quoted:false});}if(dep.skipSelf){entries.push({key:'skipSelf',value:literal(true),quoted:false});}return entries.length>0?literalMap(entries):null;}/**
     * A helper function useful for extracting `R3DependencyMetadata` from a Render2
     * `CompileTypeMetadata` instance.
     */function dependenciesFromGlobalMetadata(type,outputCtx,reflector){var e_1,_a;// Use the `CompileReflector` to look up references to some well-known Angular types. These will
// be compared with the token to statically determine whether the token has significance to
// Angular, and set the correct `R3ResolvedDependencyType` as a result.
var injectorRef=reflector.resolveExternalReference(Identifiers.Injector);// Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.
var deps=[];try{for(var _b=__values(type.diDeps),_c=_b.next();!_c.done;_c=_b.next()){var dependency=_c.value;if(dependency.token){var tokenRef=tokenReference(dependency.token);var resolved=dependency.isAttribute?exports.R3ResolvedDependencyType.Attribute:exports.R3ResolvedDependencyType.Token;// In the case of most dependencies, the token will be a reference to a type. Sometimes,
// however, it can be a string, in the case of older Angular code or @Attribute injection.
var token=tokenRef instanceof StaticSymbol?outputCtx.importExpr(tokenRef):literal(tokenRef);// Construct the dependency.
deps.push({token:token,attribute:null,resolved:resolved,host:!!dependency.isHost,optional:!!dependency.isOptional,self:!!dependency.isSelf,skipSelf:!!dependency.isSkipSelf});}else{unsupported('dependency without a token');}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return deps;}function isDelegatedMetadata(meta){return meta.delegateType!==undefined;}function isExpressionFactoryMetadata(meta){return meta.expression!==undefined;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function compileInjectable(meta){var result=null;var factoryMeta={name:meta.name,type:meta.type,internalType:meta.internalType,typeArgumentCount:meta.typeArgumentCount,deps:[],injectFn:Identifiers.inject,target:exports.R3FactoryTarget.Injectable};if(meta.useClass!==undefined){// meta.useClass has two modes of operation. Either deps are specified, in which case `new` is
// used to instantiate the class with dependencies injected, or deps are not specified and
// the factory of the class is used to instantiate it.
//
// A special case exists for useClass: Type where Type is the injectable type itself and no
// deps are specified, in which case 'useClass' is effectively ignored.
var useClassOnSelf=meta.useClass.isEquivalent(meta.internalType);var deps=undefined;if(meta.userDeps!==undefined){deps=meta.userDeps;}if(deps!==undefined){// factory: () => new meta.useClass(...deps)
result=compileFactoryFunction(_assign3(_assign3({},factoryMeta),{delegate:meta.useClass,delegateDeps:deps,delegateType:R3FactoryDelegateType.Class}));}else if(useClassOnSelf){result=compileFactoryFunction(factoryMeta);}else{result=delegateToFactory(meta.type.value,meta.useClass);}}else if(meta.useFactory!==undefined){if(meta.userDeps!==undefined){result=compileFactoryFunction(_assign3(_assign3({},factoryMeta),{delegate:meta.useFactory,delegateDeps:meta.userDeps||[],delegateType:R3FactoryDelegateType.Function}));}else{result={statements:[],factory:fn([],[new ReturnStatement(meta.useFactory.callFn([]))])};}}else if(meta.useValue!==undefined){// Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for
// client code because meta.useValue is an Expression which will be defined even if the actual
// value is undefined.
result=compileFactoryFunction(_assign3(_assign3({},factoryMeta),{expression:meta.useValue}));}else if(meta.useExisting!==undefined){// useExisting is an `inject` call on the existing token.
result=compileFactoryFunction(_assign3(_assign3({},factoryMeta),{expression:importExpr(Identifiers.inject).callFn([meta.useExisting])}));}else{result=delegateToFactory(meta.type.value,meta.internalType);}var token=meta.internalType;var injectableProps={token:token,factory:result.factory};// Only generate providedIn property if it has a non-null value
if(meta.providedIn.value!==null){injectableProps.providedIn=meta.providedIn;}var expression=importExpr(Identifiers.ɵɵdefineInjectable).callFn([mapToMapExpression(injectableProps)]);var type=new ExpressionType(importExpr(Identifiers.InjectableDef,[typeWithParameters(meta.type.type,meta.typeArgumentCount)]));return{expression:expression,type:type,statements:result.statements};}function delegateToFactory(type,internalType){return{statements:[],// If types are the same, we can generate `factory: type.ɵfac`
// If types are different, we have to generate a wrapper function to ensure
// the internal type has been resolved (`factory: function(t) { return type.ɵfac(t); }`)
factory:type.node===internalType.node?internalType.prop('ɵfac'):fn([new FnParam('t',DYNAMIC_TYPE)],[new ReturnStatement(internalType.callMethod('ɵfac',[variable('t')]))])};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function assertArrayOfStrings(identifier,value){if(value==null){return;}if(!Array.isArray(value)){throw new Error("Expected '"+identifier+"' to be an array of strings.");}for(var i=0;i<value.length;i+=1){if(typeof value[i]!=='string'){throw new Error("Expected '"+identifier+"' to be an array of strings.");}}}var UNUSABLE_INTERPOLATION_REGEXPS=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];function assertInterpolationSymbols(identifier,value){if(value!=null&&!(Array.isArray(value)&&value.length==2)){throw new Error("Expected '"+identifier+"' to be an array, [start, end].");}else if(value!=null){var start_1=value[0];var end_1=value[1];// Check for unusable interpolation symbols
UNUSABLE_INTERPOLATION_REGEXPS.forEach(function(regexp){if(regexp.test(start_1)||regexp.test(end_1)){throw new Error("['"+start_1+"', '"+end_1+"'] contains unusable interpolation symbol.");}});}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var InterpolationConfig=/** @class */function(){function InterpolationConfig(start,end){this.start=start;this.end=end;}InterpolationConfig.fromArray=function(markers){if(!markers){return DEFAULT_INTERPOLATION_CONFIG;}assertInterpolationSymbols('interpolation',markers);return new InterpolationConfig(markers[0],markers[1]);};return InterpolationConfig;}();var DEFAULT_INTERPOLATION_CONFIG=new InterpolationConfig('{{','}}');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit
var VERSION=3;var JS_B64_PREFIX='# sourceMappingURL=data:application/json;base64,';var SourceMapGenerator=/** @class */function(){function SourceMapGenerator(file){if(file===void 0){file=null;}this.file=file;this.sourcesContent=new Map();this.lines=[];this.lastCol0=0;this.hasMappings=false;}// The content is `null` when the content is expected to be loaded using the URL
SourceMapGenerator.prototype.addSource=function(url,content){if(content===void 0){content=null;}if(!this.sourcesContent.has(url)){this.sourcesContent.set(url,content);}return this;};SourceMapGenerator.prototype.addLine=function(){this.lines.push([]);this.lastCol0=0;return this;};SourceMapGenerator.prototype.addMapping=function(col0,sourceUrl,sourceLine0,sourceCol0){if(!this.currentLine){throw new Error("A line must be added before mappings can be added");}if(sourceUrl!=null&&!this.sourcesContent.has(sourceUrl)){throw new Error("Unknown source file \""+sourceUrl+"\"");}if(col0==null){throw new Error("The column in the generated code must be provided");}if(col0<this.lastCol0){throw new Error("Mapping should be added in output order");}if(sourceUrl&&(sourceLine0==null||sourceCol0==null)){throw new Error("The source location must be provided when a source url is provided");}this.hasMappings=true;this.lastCol0=col0;this.currentLine.push({col0:col0,sourceUrl:sourceUrl,sourceLine0:sourceLine0,sourceCol0:sourceCol0});return this;};Object.defineProperty(SourceMapGenerator.prototype,"currentLine",{/**
             * @internal strip this from published d.ts files due to
             * https://github.com/microsoft/TypeScript/issues/36216
             */get:function get(){return this.lines.slice(-1)[0];},enumerable:true,configurable:true});SourceMapGenerator.prototype.toJSON=function(){var _this=this;if(!this.hasMappings){return null;}var sourcesIndex=new Map();var sources=[];var sourcesContent=[];Array.from(this.sourcesContent.keys()).forEach(function(url,i){sourcesIndex.set(url,i);sources.push(url);sourcesContent.push(_this.sourcesContent.get(url)||null);});var mappings='';var lastCol0=0;var lastSourceIndex=0;var lastSourceLine0=0;var lastSourceCol0=0;this.lines.forEach(function(segments){lastCol0=0;mappings+=segments.map(function(segment){// zero-based starting column of the line in the generated code
var segAsStr=toBase64VLQ(segment.col0-lastCol0);lastCol0=segment.col0;if(segment.sourceUrl!=null){// zero-based index into the “sources” list
segAsStr+=toBase64VLQ(sourcesIndex.get(segment.sourceUrl)-lastSourceIndex);lastSourceIndex=sourcesIndex.get(segment.sourceUrl);// the zero-based starting line in the original source
segAsStr+=toBase64VLQ(segment.sourceLine0-lastSourceLine0);lastSourceLine0=segment.sourceLine0;// the zero-based starting column in the original source
segAsStr+=toBase64VLQ(segment.sourceCol0-lastSourceCol0);lastSourceCol0=segment.sourceCol0;}return segAsStr;}).join(',');mappings+=';';});mappings=mappings.slice(0,-1);return{'file':this.file||'','version':VERSION,'sourceRoot':'','sources':sources,'sourcesContent':sourcesContent,'mappings':mappings};};SourceMapGenerator.prototype.toJsComment=function(){return this.hasMappings?'//'+JS_B64_PREFIX+toBase64String(JSON.stringify(this,null,0)):'';};return SourceMapGenerator;}();function toBase64String(value){var b64='';value=utf8Encode(value);for(var i=0;i<value.length;){var i1=value.charCodeAt(i++);var i2=value.charCodeAt(i++);var i3=value.charCodeAt(i++);b64+=toBase64Digit(i1>>2);b64+=toBase64Digit((i1&3)<<4|(isNaN(i2)?0:i2>>4));b64+=isNaN(i2)?'=':toBase64Digit((i2&15)<<2|i3>>6);b64+=isNaN(i2)||isNaN(i3)?'=':toBase64Digit(i3&63);}return b64;}function toBase64VLQ(value){value=value<0?(-value<<1)+1:value<<1;var out='';do{var digit=value&31;value=value>>5;if(value>0){digit=digit|32;}out+=toBase64Digit(digit);}while(value>0);return out;}var B64_DIGITS='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';function toBase64Digit(value){if(value<0||value>=64){throw new Error("Can only encode value in the range [0, 63]");}return B64_DIGITS[value];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _SINGLE_QUOTE_ESCAPE_STRING_RE=/'|\\|\n|\r|\$/g;var _LEGAL_IDENTIFIER_RE=/^[$A-Z_][0-9A-Z_$]*$/i;var _INDENT_WITH='  ';var CATCH_ERROR_VAR$1=variable('error',null,null);var CATCH_STACK_VAR$1=variable('stack',null,null);var _EmittedLine=/** @class */function(){function _EmittedLine(indent){this.indent=indent;this.partsLength=0;this.parts=[];this.srcSpans=[];}return _EmittedLine;}();var EmitterVisitorContext=/** @class */function(){function EmitterVisitorContext(_indent){this._indent=_indent;this._classes=[];this._preambleLineCount=0;this._lines=[new _EmittedLine(_indent)];}EmitterVisitorContext.createRoot=function(){return new EmitterVisitorContext(0);};Object.defineProperty(EmitterVisitorContext.prototype,"_currentLine",{/**
             * @internal strip this from published d.ts files due to
             * https://github.com/microsoft/TypeScript/issues/36216
             */get:function get(){return this._lines[this._lines.length-1];},enumerable:true,configurable:true});EmitterVisitorContext.prototype.println=function(from,lastPart){if(lastPart===void 0){lastPart='';}this.print(from||null,lastPart,true);};EmitterVisitorContext.prototype.lineIsEmpty=function(){return this._currentLine.parts.length===0;};EmitterVisitorContext.prototype.lineLength=function(){return this._currentLine.indent*_INDENT_WITH.length+this._currentLine.partsLength;};EmitterVisitorContext.prototype.print=function(from,part,newLine){if(newLine===void 0){newLine=false;}if(part.length>0){this._currentLine.parts.push(part);this._currentLine.partsLength+=part.length;this._currentLine.srcSpans.push(from&&from.sourceSpan||null);}if(newLine){this._lines.push(new _EmittedLine(this._indent));}};EmitterVisitorContext.prototype.removeEmptyLastLine=function(){if(this.lineIsEmpty()){this._lines.pop();}};EmitterVisitorContext.prototype.incIndent=function(){this._indent++;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.decIndent=function(){this._indent--;if(this.lineIsEmpty()){this._currentLine.indent=this._indent;}};EmitterVisitorContext.prototype.pushClass=function(clazz){this._classes.push(clazz);};EmitterVisitorContext.prototype.popClass=function(){return this._classes.pop();};Object.defineProperty(EmitterVisitorContext.prototype,"currentClass",{get:function get(){return this._classes.length>0?this._classes[this._classes.length-1]:null;},enumerable:true,configurable:true});EmitterVisitorContext.prototype.toSource=function(){return this.sourceLines.map(function(l){return l.parts.length>0?_createIndent(l.indent)+l.parts.join(''):'';}).join('\n');};EmitterVisitorContext.prototype.toSourceMapGenerator=function(genFilePath,startsAtLine){if(startsAtLine===void 0){startsAtLine=0;}var map=new SourceMapGenerator(genFilePath);var firstOffsetMapped=false;var mapFirstOffsetIfNeeded=function mapFirstOffsetIfNeeded(){if(!firstOffsetMapped){// Add a single space so that tools won't try to load the file from disk.
// Note: We are using virtual urls like `ng:///`, so we have to
// provide a content here.
map.addSource(genFilePath,' ').addMapping(0,genFilePath,0,0);firstOffsetMapped=true;}};for(var i=0;i<startsAtLine;i++){map.addLine();mapFirstOffsetIfNeeded();}this.sourceLines.forEach(function(line,lineIdx){map.addLine();var spans=line.srcSpans;var parts=line.parts;var col0=line.indent*_INDENT_WITH.length;var spanIdx=0;// skip leading parts without source spans
while(spanIdx<spans.length&&!spans[spanIdx]){col0+=parts[spanIdx].length;spanIdx++;}if(spanIdx<spans.length&&lineIdx===0&&col0===0){firstOffsetMapped=true;}else{mapFirstOffsetIfNeeded();}while(spanIdx<spans.length){var span=spans[spanIdx];var source=span.start.file;var sourceLine=span.start.line;var sourceCol=span.start.col;map.addSource(source.url,source.content).addMapping(col0,source.url,sourceLine,sourceCol);col0+=parts[spanIdx].length;spanIdx++;// assign parts without span or the same span to the previous segment
while(spanIdx<spans.length&&(span===spans[spanIdx]||!spans[spanIdx])){col0+=parts[spanIdx].length;spanIdx++;}}});return map;};EmitterVisitorContext.prototype.setPreambleLineCount=function(count){return this._preambleLineCount=count;};EmitterVisitorContext.prototype.spanOf=function(line,column){var emittedLine=this._lines[line-this._preambleLineCount];if(emittedLine){var columnsLeft=column-_createIndent(emittedLine.indent).length;for(var partIndex=0;partIndex<emittedLine.parts.length;partIndex++){var part=emittedLine.parts[partIndex];if(part.length>columnsLeft){return emittedLine.srcSpans[partIndex];}columnsLeft-=part.length;}}return null;};Object.defineProperty(EmitterVisitorContext.prototype,"sourceLines",{/**
             * @internal strip this from published d.ts files due to
             * https://github.com/microsoft/TypeScript/issues/36216
             */get:function get(){if(this._lines.length&&this._lines[this._lines.length-1].parts.length===0){return this._lines.slice(0,-1);}return this._lines;},enumerable:true,configurable:true});return EmitterVisitorContext;}();var AbstractEmitterVisitor=/** @class */function(){function AbstractEmitterVisitor(_escapeDollarInStrings){this._escapeDollarInStrings=_escapeDollarInStrings;}AbstractEmitterVisitor.prototype.visitExpressionStmt=function(stmt,ctx){stmt.expr.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitReturnStmt=function(stmt,ctx){ctx.print(stmt,"return ");stmt.value.visitExpression(this,ctx);ctx.println(stmt,';');return null;};AbstractEmitterVisitor.prototype.visitIfStmt=function(stmt,ctx){ctx.print(stmt,"if (");stmt.condition.visitExpression(this,ctx);ctx.print(stmt,") {");var hasElseCase=stmt.falseCase!=null&&stmt.falseCase.length>0;if(stmt.trueCase.length<=1&&!hasElseCase){ctx.print(stmt," ");this.visitAllStatements(stmt.trueCase,ctx);ctx.removeEmptyLastLine();ctx.print(stmt," ");}else{ctx.println();ctx.incIndent();this.visitAllStatements(stmt.trueCase,ctx);ctx.decIndent();if(hasElseCase){ctx.println(stmt,"} else {");ctx.incIndent();this.visitAllStatements(stmt.falseCase,ctx);ctx.decIndent();}}ctx.println(stmt,"}");return null;};AbstractEmitterVisitor.prototype.visitThrowStmt=function(stmt,ctx){ctx.print(stmt,"throw ");stmt.error.visitExpression(this,ctx);ctx.println(stmt,";");return null;};AbstractEmitterVisitor.prototype.visitCommentStmt=function(stmt,ctx){if(stmt.multiline){ctx.println(stmt,"/* "+stmt.comment+" */");}else{stmt.comment.split('\n').forEach(function(line){ctx.println(stmt,"// "+line);});}return null;};AbstractEmitterVisitor.prototype.visitJSDocCommentStmt=function(stmt,ctx){ctx.println(stmt,"/*"+stmt.toString()+"*/");return null;};AbstractEmitterVisitor.prototype.visitWriteVarExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}ctx.print(expr,expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWriteKeyExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"[");expr.index.visitExpression(this,ctx);ctx.print(expr,"] = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitWritePropExpr=function(expr,ctx){var lineWasEmpty=ctx.lineIsEmpty();if(!lineWasEmpty){ctx.print(expr,'(');}expr.receiver.visitExpression(this,ctx);ctx.print(expr,"."+expr.name+" = ");expr.value.visitExpression(this,ctx);if(!lineWasEmpty){ctx.print(expr,')');}return null;};AbstractEmitterVisitor.prototype.visitInvokeMethodExpr=function(expr,ctx){expr.receiver.visitExpression(this,ctx);var name=expr.name;if(expr.builtin!=null){name=this.getBuiltinMethodName(expr.builtin);if(name==null){// some builtins just mean to skip the call.
return null;}}ctx.print(expr,"."+name+"(");this.visitAllExpressions(expr.args,ctx,",");ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){expr.fn.visitExpression(this,ctx);ctx.print(expr,"(");this.visitAllExpressions(expr.args,ctx,',');ctx.print(expr,")");return null;};AbstractEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');};AbstractEmitterVisitor.prototype.visitTypeofExpr=function(expr,ctx){ctx.print(expr,'typeof ');expr.expr.visitExpression(this,ctx);};AbstractEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case exports.BuiltinVar.Super:varName='super';break;case exports.BuiltinVar.This:varName='this';break;case exports.BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$1.name;break;case exports.BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$1.name;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}ctx.print(ast,varName);return null;};AbstractEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");ast.classExpr.visitExpression(this,ctx);ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(typeof value==='string'){ctx.print(ast,escapeIdentifier(value,this._escapeDollarInStrings));}else{ctx.print(ast,""+value);}return null;};AbstractEmitterVisitor.prototype.visitLocalizedString=function(ast,ctx){var head=ast.serializeI18nHead();ctx.print(ast,'$localize `'+head.raw);for(var i=1;i<ast.messageParts.length;i++){ctx.print(ast,'${');ast.expressions[i-1].visitExpression(this,ctx);ctx.print(ast,"}"+ast.serializeI18nTemplatePart(i).raw);}ctx.print(ast,'`');return null;};AbstractEmitterVisitor.prototype.visitConditionalExpr=function(ast,ctx){ctx.print(ast,"(");ast.condition.visitExpression(this,ctx);ctx.print(ast,'? ');ast.trueCase.visitExpression(this,ctx);ctx.print(ast,': ');ast.falseCase.visitExpression(this,ctx);ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitNotExpr=function(ast,ctx){ctx.print(ast,'!');ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){ast.condition.visitExpression(this,ctx);return null;};AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr=function(ast,ctx){var opStr;switch(ast.operator){case exports.BinaryOperator.Equals:opStr='==';break;case exports.BinaryOperator.Identical:opStr='===';break;case exports.BinaryOperator.NotEquals:opStr='!=';break;case exports.BinaryOperator.NotIdentical:opStr='!==';break;case exports.BinaryOperator.And:opStr='&&';break;case exports.BinaryOperator.BitwiseAnd:opStr='&';break;case exports.BinaryOperator.Or:opStr='||';break;case exports.BinaryOperator.Plus:opStr='+';break;case exports.BinaryOperator.Minus:opStr='-';break;case exports.BinaryOperator.Divide:opStr='/';break;case exports.BinaryOperator.Multiply:opStr='*';break;case exports.BinaryOperator.Modulo:opStr='%';break;case exports.BinaryOperator.Lower:opStr='<';break;case exports.BinaryOperator.LowerEquals:opStr='<=';break;case exports.BinaryOperator.Bigger:opStr='>';break;case exports.BinaryOperator.BiggerEquals:opStr='>=';break;default:throw new Error("Unknown operator "+ast.operator);}if(ast.parens)ctx.print(ast,"(");ast.lhs.visitExpression(this,ctx);ctx.print(ast," "+opStr+" ");ast.rhs.visitExpression(this,ctx);if(ast.parens)ctx.print(ast,")");return null;};AbstractEmitterVisitor.prototype.visitReadPropExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,".");ctx.print(ast,ast.name);return null;};AbstractEmitterVisitor.prototype.visitReadKeyExpr=function(ast,ctx){ast.receiver.visitExpression(this,ctx);ctx.print(ast,"[");ast.index.visitExpression(this,ctx);ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){ctx.print(ast,"[");this.visitAllExpressions(ast.entries,ctx,',');ctx.print(ast,"]");return null;};AbstractEmitterVisitor.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;ctx.print(ast,"{");this.visitAllObjects(function(entry){ctx.print(ast,escapeIdentifier(entry.key,_this._escapeDollarInStrings,entry.quoted)+":");entry.value.visitExpression(_this,ctx);},ast.entries,ctx,',');ctx.print(ast,"}");return null;};AbstractEmitterVisitor.prototype.visitCommaExpr=function(ast,ctx){ctx.print(ast,'(');this.visitAllExpressions(ast.parts,ctx,',');ctx.print(ast,')');return null;};AbstractEmitterVisitor.prototype.visitAllExpressions=function(expressions,ctx,separator){var _this=this;this.visitAllObjects(function(expr){return expr.visitExpression(_this,ctx);},expressions,ctx,separator);};AbstractEmitterVisitor.prototype.visitAllObjects=function(handler,expressions,ctx,separator){var incrementedIndent=false;for(var i=0;i<expressions.length;i++){if(i>0){if(ctx.lineLength()>80){ctx.print(null,separator,true);if(!incrementedIndent){// continuation are marked with double indent.
ctx.incIndent();ctx.incIndent();incrementedIndent=true;}}else{ctx.print(null,separator,false);}}handler(expressions[i]);}if(incrementedIndent){// continuation are marked with double indent.
ctx.decIndent();ctx.decIndent();}};AbstractEmitterVisitor.prototype.visitAllStatements=function(statements,ctx){var _this=this;statements.forEach(function(stmt){return stmt.visitStatement(_this,ctx);});};return AbstractEmitterVisitor;}();function escapeIdentifier(input,escapeDollar,alwaysQuote){if(alwaysQuote===void 0){alwaysQuote=true;}if(input==null){return null;}var body=input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE,function(){var match=[];for(var _i=0;_i<arguments.length;_i++){match[_i]=arguments[_i];}if(match[0]=='$'){return escapeDollar?'\\$':'$';}else if(match[0]=='\n'){return'\\n';}else if(match[0]=='\r'){return'\\r';}else{return"\\"+match[0];}});var requiresQuotes=alwaysQuote||!_LEGAL_IDENTIFIER_RE.test(body);return requiresQuotes?"'"+body+"'":body;}function _createIndent(count){var res='';for(var i=0;i<count;i++){res+=_INDENT_WITH;}return res;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var AbstractJsEmitterVisitor=/** @class */function(_super){__extends(AbstractJsEmitterVisitor,_super);function AbstractJsEmitterVisitor(){return _super.call(this,false)||this;}AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);this._visitClassConstructor(stmt,ctx);if(stmt.parent!=null){ctx.print(stmt,stmt.name+".prototype = Object.create(");stmt.parent.visitExpression(this,ctx);ctx.println(stmt,".prototype);");}stmt.getters.forEach(function(getter){return _this._visitClassGetter(stmt,getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(stmt,method,ctx);});ctx.popClass();return null;};AbstractJsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");if(stmt.constructorMethod!=null){this._visitParams(stmt.constructorMethod.params,ctx);}ctx.println(stmt,") {");ctx.incIndent();if(stmt.constructorMethod!=null){if(stmt.constructorMethod.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(stmt.constructorMethod.body,ctx);}}ctx.decIndent();ctx.println(stmt,"}");};AbstractJsEmitterVisitor.prototype._visitClassGetter=function(stmt,getter,ctx){ctx.println(stmt,"Object.defineProperty("+stmt.name+".prototype, '"+getter.name+"', { get: function() {");ctx.incIndent();if(getter.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(getter.body,ctx);}ctx.decIndent();ctx.println(stmt,"}});");};AbstractJsEmitterVisitor.prototype._visitClassMethod=function(stmt,method,ctx){ctx.print(stmt,stmt.name+".prototype."+method.name+" = function(");this._visitParams(method.params,ctx);ctx.println(stmt,") {");ctx.incIndent();if(method.body.length>0){ctx.println(stmt,"var self = this;");this.visitAllStatements(method.body,ctx);}ctx.decIndent();ctx.println(stmt,"};");};AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');};AbstractJsEmitterVisitor.prototype.visitReadVarExpr=function(ast,ctx){if(ast.builtin===exports.BuiltinVar.This){ctx.print(ast,'self');}else if(ast.builtin===exports.BuiltinVar.Super){throw new Error("'super' needs to be handled at a parent ast node, not at the variable level!");}else{_super.prototype.visitReadVarExpr.call(this,ast,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){ctx.print(stmt,"var "+stmt.name);if(stmt.value){ctx.print(stmt,' = ');stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};AbstractJsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ast.value.visitExpression(this,ctx);return null;};AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr=function(expr,ctx){var fnExpr=expr.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===exports.BuiltinVar.Super){ctx.currentClass.parent.visitExpression(this,ctx);ctx.print(expr,".call(this");if(expr.args.length>0){ctx.print(expr,", ");this.visitAllExpressions(expr.args,ctx,',');}ctx.print(expr,")");}else{_super.prototype.visitInvokeFunctionExpr.call(this,expr,ctx);}return null;};AbstractJsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){ctx.print(ast,"function"+(ast.name?' '+ast.name:'')+"(");this._visitParams(ast.params,ctx);ctx.println(ast,") {");ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null,[exports.StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};AbstractJsEmitterVisitor.prototype.visitLocalizedString=function(ast,ctx){var _this=this;// The following convoluted piece of code is effectively the downlevelled equivalent of
// ```
// $localize `...`
// ```
// which is effectively like:
// ```
// $localize(__makeTemplateObject(cooked, raw), expression1, expression2, ...);
// ```
//
// The `$localize` function expects a "template object", which is an array of "cooked" strings
// plus a `raw` property that contains an array of "raw" strings.
//
// In some environments a helper function called `__makeTemplateObject(cooked, raw)` might be
// available, in which case we use that. Otherwise we must create our own helper function
// inline.
//
// In the inline function, if `Object.defineProperty` is available we use that to attach the
// `raw` array.
ctx.print(ast,'$localize((this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e})(');var parts=[ast.serializeI18nHead()];for(var i=1;i<ast.messageParts.length;i++){parts.push(ast.serializeI18nTemplatePart(i));}ctx.print(ast,"["+parts.map(function(part){return escapeIdentifier(part.cooked,false);}).join(', ')+"], ");ctx.print(ast,"["+parts.map(function(part){return escapeIdentifier(part.raw,false);}).join(', ')+"])");ast.expressions.forEach(function(expression){ctx.print(ast,', ');expression.visitExpression(_this,ctx);});ctx.print(ast,')');return null;};AbstractJsEmitterVisitor.prototype._visitParams=function(params,ctx){this.visitAllObjects(function(param){return ctx.print(null,param.name);},params,ctx,',');};AbstractJsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case exports.BuiltinMethod.ConcatArray:name='concat';break;case exports.BuiltinMethod.SubscribeObservable:name='subscribe';break;case exports.BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};return AbstractJsEmitterVisitor;}(AbstractEmitterVisitor);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A helper class to manage the evaluation of JIT generated code.
     */var JitEvaluator=/** @class */function(){function JitEvaluator(){}/**
         *
         * @param sourceUrl The URL of the generated code.
         * @param statements An array of Angular statement AST nodes to be evaluated.
         * @param reflector A helper used when converting the statements to executable code.
         * @param createSourceMaps If true then create a source-map for the generated code and include it
         * inline as a source-map comment.
         * @returns A map of all the variables in the generated code.
         */JitEvaluator.prototype.evaluateStatements=function(sourceUrl,statements,reflector,createSourceMaps){var converter=new JitEmitterVisitor(reflector);var ctx=EmitterVisitorContext.createRoot();// Ensure generated code is in strict mode
if(statements.length>0&&!isUseStrictStatement(statements[0])){statements=__spread([literal('use strict').toStmt()],statements);}converter.visitAllStatements(statements,ctx);converter.createReturnStmt(ctx);return this.evaluateCode(sourceUrl,ctx,converter.getArgs(),createSourceMaps);};/**
         * Evaluate a piece of JIT generated code.
         * @param sourceUrl The URL of this generated code.
         * @param ctx A context object that contains an AST of the code to be evaluated.
         * @param vars A map containing the names and values of variables that the evaluated code might
         * reference.
         * @param createSourceMap If true then create a source-map for the generated code and include it
         * inline as a source-map comment.
         * @returns The result of evaluating the code.
         */JitEvaluator.prototype.evaluateCode=function(sourceUrl,ctx,vars,createSourceMap){var fnBody="\"use strict\";"+ctx.toSource()+"\n//# sourceURL="+sourceUrl;var fnArgNames=[];var fnArgValues=[];for(var argName in vars){fnArgValues.push(vars[argName]);fnArgNames.push(argName);}if(createSourceMap){// using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise
// E.g. ```
// function anonymous(a,b,c
// /**/) { ... }```
// We don't want to hard code this fact, so we auto detect it via an empty function first.
var emptyFn=new(Function.bind.apply(Function,__spread([void 0],fnArgNames.concat('return null;'))))().toString();var headerLines=emptyFn.slice(0,emptyFn.indexOf('return null;')).split('\n').length-1;fnBody+="\n"+ctx.toSourceMapGenerator(sourceUrl,headerLines).toJsComment();}var fn=new(Function.bind.apply(Function,__spread([void 0],fnArgNames.concat(fnBody))))();return this.executeFunction(fn,fnArgValues);};/**
         * Execute a JIT generated function by calling it.
         *
         * This method can be overridden in tests to capture the functions that are generated
         * by this `JitEvaluator` class.
         *
         * @param fn A function to execute.
         * @param args The arguments to pass to the function being executed.
         * @returns The return value of the executed function.
         */JitEvaluator.prototype.executeFunction=function(fn,args){return fn.apply(void 0,__spread(args));};return JitEvaluator;}();/**
     * An Angular AST visitor that converts AST nodes into executable JavaScript code.
     */var JitEmitterVisitor=/** @class */function(_super){__extends(JitEmitterVisitor,_super);function JitEmitterVisitor(reflector){var _this=_super.call(this)||this;_this.reflector=reflector;_this._evalArgNames=[];_this._evalArgValues=[];_this._evalExportedVars=[];return _this;}JitEmitterVisitor.prototype.createReturnStmt=function(ctx){var stmt=new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function(resultVar){return new LiteralMapEntry(resultVar,variable(resultVar),false);})));stmt.visitStatement(this,ctx);};JitEmitterVisitor.prototype.getArgs=function(){var result={};for(var i=0;i<this._evalArgNames.length;i++){result[this._evalArgNames[i]]=this._evalArgValues[i];}return result;};JitEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){this._emitReferenceToExternal(ast,this.reflector.resolveExternalReference(ast.value),ctx);return null;};JitEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){this._emitReferenceToExternal(ast,ast.node,ctx);return null;};JitEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(exports.StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareVarStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(exports.StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareFunctionStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){if(stmt.hasModifier(exports.StmtModifier.Exported)){this._evalExportedVars.push(stmt.name);}return _super.prototype.visitDeclareClassStmt.call(this,stmt,ctx);};JitEmitterVisitor.prototype._emitReferenceToExternal=function(ast,value,ctx){var id=this._evalArgValues.indexOf(value);if(id===-1){id=this._evalArgValues.length;this._evalArgValues.push(value);var name_1=identifierName({reference:value})||'val';this._evalArgNames.push("jit_"+name_1+"_"+id);}ctx.print(ast,this._evalArgNames[id]);};return JitEmitterVisitor;}(AbstractJsEmitterVisitor);function isUseStrictStatement(statement){return statement.isEquivalent(literal('use strict').toStmt());}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Implementation of `CompileReflector` which resolves references to @angular/core
     * symbols at runtime, according to a consumer-provided mapping.
     *
     * Only supports `resolveExternalReference`, all other methods throw.
     */var R3JitReflector=/** @class */function(){function R3JitReflector(context){this.context=context;}R3JitReflector.prototype.resolveExternalReference=function(ref){// This reflector only handles @angular/core imports.
if(ref.moduleName!=='@angular/core'){throw new Error("Cannot resolve external reference to "+ref.moduleName+", only references to @angular/core are supported.");}if(!this.context.hasOwnProperty(ref.name)){throw new Error("No value provided for @angular/core symbol '"+ref.name+"'.");}return this.context[ref.name];};R3JitReflector.prototype.parameters=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.annotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.shallowAnnotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.tryAnnotations=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.propMetadata=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.hasLifecycleHook=function(type,lcProperty){throw new Error('Not implemented.');};R3JitReflector.prototype.guards=function(typeOrFunc){throw new Error('Not implemented.');};R3JitReflector.prototype.componentModuleUrl=function(type,cmpMetadata){throw new Error('Not implemented.');};return R3JitReflector;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function mapEntry(key,value){return{key:key,value:value,quoted:false};}function mapLiteral(obj,quoted){if(quoted===void 0){quoted=false;}return literalMap(Object.keys(obj).map(function(key){return{key:key,quoted:quoted,value:obj[key]};}));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.
     */function compileNgModule(meta){var internalType=meta.internalType,moduleType=meta.type,bootstrap=meta.bootstrap,declarations=meta.declarations,imports=meta.imports,exports=meta.exports,schemas=meta.schemas,containsForwardDecls=meta.containsForwardDecls,emitInline=meta.emitInline,id=meta.id;var additionalStatements=[];var definitionMap={type:internalType};// Only generate the keys in the metadata if the arrays have values.
if(bootstrap.length){definitionMap.bootstrap=refsToArray(bootstrap,containsForwardDecls);}// If requested to emit scope information inline, pass the declarations, imports and exports to
// the `ɵɵdefineNgModule` call. The JIT compilation uses this.
if(emitInline){if(declarations.length){definitionMap.declarations=refsToArray(declarations,containsForwardDecls);}if(imports.length){definitionMap.imports=refsToArray(imports,containsForwardDecls);}if(exports.length){definitionMap.exports=refsToArray(exports,containsForwardDecls);}}// If not emitting inline, the scope information is not passed into `ɵɵdefineNgModule` as it would
// prevent tree-shaking of the declarations, imports and exports references.
else{var setNgModuleScopeCall=generateSetNgModuleScopeCall(meta);if(setNgModuleScopeCall!==null){additionalStatements.push(setNgModuleScopeCall);}}if(schemas&&schemas.length){definitionMap.schemas=literalArr(schemas.map(function(ref){return ref.value;}));}if(id){definitionMap.id=id;}var expression=importExpr(Identifiers$1.defineNgModule).callFn([mapToMapExpression(definitionMap)]);var type=new ExpressionType(importExpr(Identifiers$1.NgModuleDefWithMeta,[new ExpressionType(moduleType.type),tupleTypeOf(declarations),tupleTypeOf(imports),tupleTypeOf(exports)]));return{expression:expression,type:type,additionalStatements:additionalStatements};}/**
     * Generates a function call to `ɵɵsetNgModuleScope` with all necessary information so that the
     * transitive module scope can be computed during runtime in JIT mode. This call is marked pure
     * such that the references to declarations, imports and exports may be elided causing these
     * symbols to become tree-shakeable.
     */function generateSetNgModuleScopeCall(meta){var moduleType=meta.adjacentType,declarations=meta.declarations,imports=meta.imports,exports=meta.exports,containsForwardDecls=meta.containsForwardDecls;var scopeMap={};if(declarations.length){scopeMap.declarations=refsToArray(declarations,containsForwardDecls);}if(imports.length){scopeMap.imports=refsToArray(imports,containsForwardDecls);}if(exports.length){scopeMap.exports=refsToArray(exports,containsForwardDecls);}if(Object.keys(scopeMap).length===0){return null;}// setNgModuleScope(...)
var fnCall=new InvokeFunctionExpr(/* fn */importExpr(Identifiers$1.setNgModuleScope),/* args */[moduleType,mapToMapExpression(scopeMap)]);// (ngJitMode guard) && setNgModuleScope(...)
var guardedCall=jitOnlyGuardedExpression(fnCall);// function() { (ngJitMode guard) && setNgModuleScope(...); }
var iife=new FunctionExpr(/* params */[],/* statements */[guardedCall.toStmt()]);// (function() { (ngJitMode guard) && setNgModuleScope(...); })()
var iifeCall=new InvokeFunctionExpr(/* fn */iife,/* args */[]);return iifeCall.toStmt();}function compileInjector(meta){var result=compileFactoryFunction({name:meta.name,type:meta.type,internalType:meta.internalType,typeArgumentCount:0,deps:meta.deps,injectFn:Identifiers$1.inject,target:exports.R3FactoryTarget.NgModule});var definitionMap={factory:result.factory};if(meta.providers!==null){definitionMap.providers=meta.providers;}if(meta.imports.length>0){definitionMap.imports=literalArr(meta.imports);}var expression=importExpr(Identifiers$1.defineInjector).callFn([mapToMapExpression(definitionMap)]);var type=new ExpressionType(importExpr(Identifiers$1.InjectorDef,[new ExpressionType(meta.type.type)]));return{expression:expression,type:type,statements:result.statements};}// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.
function compileNgModuleFromRender2(ctx,ngModule,injectableCompiler){var className=identifierName(ngModule.type);var rawImports=ngModule.rawImports?[ngModule.rawImports]:[];var rawExports=ngModule.rawExports?[ngModule.rawExports]:[];var injectorDefArg=mapLiteral({'factory':injectableCompiler.factoryFor({type:ngModule.type,symbol:ngModule.type.reference},ctx),'providers':convertMetaToOutput(ngModule.rawProviders,ctx),'imports':convertMetaToOutput(__spread(rawImports,rawExports),ctx)});var injectorDef=importExpr(Identifiers$1.defineInjector).callFn([injectorDefArg]);ctx.statements.push(new ClassStmt(/* name */className,/* parent */null,/* fields */[new ClassField(/* name */'ɵinj',/* type */INFERRED_TYPE,/* modifiers */[exports.StmtModifier.Static],/* initializer */injectorDef)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]));}function accessExportScope(module){var selectorScope=new ReadPropExpr(module,'ɵmod');return new ReadPropExpr(selectorScope,'exported');}function tupleTypeOf(exp){var types=exp.map(function(ref){return typeofExpr(ref.type);});return exp.length>0?expressionType(literalArr(types)):NONE_TYPE;}function refsToArray(refs,shouldForwardDeclare){var values=literalArr(refs.map(function(ref){return ref.value;}));return shouldForwardDeclare?fn([],[new ReturnStatement(values)]):values;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function compilePipeFromMetadata(metadata){var definitionMapValues=[];// e.g. `name: 'myPipe'`
definitionMapValues.push({key:'name',value:literal(metadata.pipeName),quoted:false});// e.g. `type: MyPipe`
definitionMapValues.push({key:'type',value:metadata.type.value,quoted:false});// e.g. `pure: true`
definitionMapValues.push({key:'pure',value:literal(metadata.pure),quoted:false});var expression=importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]);var type=new ExpressionType(importExpr(Identifiers$1.PipeDefWithMeta,[typeWithParameters(metadata.type.type,metadata.typeArgumentCount),new ExpressionType(new LiteralExpr(metadata.pipeName))]));return{expression:expression,type:type};}/**
     * Write a pipe definition to the output context.
     */function compilePipeFromRender2(outputCtx,pipe,reflector){var name=identifierName(pipe.type);if(!name){return error("Cannot resolve the name of "+pipe.type);}var type=outputCtx.importExpr(pipe.type.reference);var metadata={name:name,type:wrapReference(type),internalType:type,pipeName:pipe.name,typeArgumentCount:0,deps:dependenciesFromGlobalMetadata(pipe.type,outputCtx,reflector),pure:pipe.pure};var res=compilePipeFromMetadata(metadata);var factoryRes=compileFactoryFunction(_assign3(_assign3({},metadata),{injectFn:Identifiers$1.directiveInject,target:exports.R3FactoryTarget.Pipe}));var definitionField=outputCtx.constantPool.propertyNameOf(3/* Pipe */);var ngFactoryDefStatement=new ClassStmt(/* name */name,/* parent */null,/* fields */[new ClassField(/* name */'ɵfac',/* type */INFERRED_TYPE,/* modifiers */[exports.StmtModifier.Static],/* initializer */factoryRes.factory)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]);var pipeDefStatement=new ClassStmt(/* name */name,/* parent */null,/* fields */[new ClassField(/* name */definitionField,/* type */INFERRED_TYPE,/* modifiers */[exports.StmtModifier.Static],/* initializer */res.expression)],/* getters */[],/* constructorMethod */new ClassMethod(null,[],[]),/* methods */[]);outputCtx.statements.push(ngFactoryDefStatement,pipeDefStatement);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ParserError=/** @class */function(){function ParserError(message,input,errLocation,ctxLocation){this.input=input;this.errLocation=errLocation;this.ctxLocation=ctxLocation;this.message="Parser Error: "+message+" "+errLocation+" ["+input+"] in "+ctxLocation;}return ParserError;}();var ParseSpan=/** @class */function(){function ParseSpan(start,end){this.start=start;this.end=end;}ParseSpan.prototype.toAbsolute=function(absoluteOffset){return new AbsoluteSourceSpan(absoluteOffset+this.start,absoluteOffset+this.end);};return ParseSpan;}();var AST=/** @class */function(){function AST(span,/**
         * Absolute location of the expression AST in a source code file.
         */sourceSpan){this.span=span;this.sourceSpan=sourceSpan;}AST.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return null;};AST.prototype.toString=function(){return'AST';};return AST;}();var ASTWithName=/** @class */function(_super){__extends(ASTWithName,_super);function ASTWithName(span,sourceSpan,nameSpan){var _this=_super.call(this,span,sourceSpan)||this;_this.nameSpan=nameSpan;return _this;}return ASTWithName;}(AST);/**
     * Represents a quoted expression of the form:
     *
     * quote = prefix `:` uninterpretedExpression
     * prefix = identifier
     * uninterpretedExpression = arbitrary string
     *
     * A quoted expression is meant to be pre-processed by an AST transformer that
     * converts it into another AST that no longer contains quoted expressions.
     * It is meant to allow third-party developers to extend Angular template
     * expression language. The `uninterpretedExpression` part of the quote is
     * therefore not interpreted by the Angular's own expression parser.
     */var Quote=/** @class */function(_super){__extends(Quote,_super);function Quote(span,sourceSpan,prefix,uninterpretedExpression,location){var _this=_super.call(this,span,sourceSpan)||this;_this.prefix=prefix;_this.uninterpretedExpression=uninterpretedExpression;_this.location=location;return _this;}Quote.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitQuote(this,context);};Quote.prototype.toString=function(){return'Quote';};return Quote;}(AST);var EmptyExpr=/** @class */function(_super){__extends(EmptyExpr,_super);function EmptyExpr(){return _super!==null&&_super.apply(this,arguments)||this;}EmptyExpr.prototype.visit=function(visitor,context){if(context===void 0){context=null;}// do nothing
};return EmptyExpr;}(AST);var ImplicitReceiver=/** @class */function(_super){__extends(ImplicitReceiver,_super);function ImplicitReceiver(){return _super!==null&&_super.apply(this,arguments)||this;}ImplicitReceiver.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitImplicitReceiver(this,context);};return ImplicitReceiver;}(AST);/**
     * Multiple expressions separated by a semicolon.
     */var Chain=/** @class */function(_super){__extends(Chain,_super);function Chain(span,sourceSpan,expressions){var _this=_super.call(this,span,sourceSpan)||this;_this.expressions=expressions;return _this;}Chain.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitChain(this,context);};return Chain;}(AST);var Conditional=/** @class */function(_super){__extends(Conditional,_super);function Conditional(span,sourceSpan,condition,trueExp,falseExp){var _this=_super.call(this,span,sourceSpan)||this;_this.condition=condition;_this.trueExp=trueExp;_this.falseExp=falseExp;return _this;}Conditional.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitConditional(this,context);};return Conditional;}(AST);var PropertyRead=/** @class */function(_super){__extends(PropertyRead,_super);function PropertyRead(span,sourceSpan,nameSpan,receiver,name){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.receiver=receiver;_this.name=name;return _this;}PropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyRead(this,context);};return PropertyRead;}(ASTWithName);var PropertyWrite=/** @class */function(_super){__extends(PropertyWrite,_super);function PropertyWrite(span,sourceSpan,nameSpan,receiver,name,value){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.receiver=receiver;_this.name=name;_this.value=value;return _this;}PropertyWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPropertyWrite(this,context);};return PropertyWrite;}(ASTWithName);var SafePropertyRead=/** @class */function(_super){__extends(SafePropertyRead,_super);function SafePropertyRead(span,sourceSpan,nameSpan,receiver,name){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.receiver=receiver;_this.name=name;return _this;}SafePropertyRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafePropertyRead(this,context);};return SafePropertyRead;}(ASTWithName);var KeyedRead=/** @class */function(_super){__extends(KeyedRead,_super);function KeyedRead(span,sourceSpan,obj,key){var _this=_super.call(this,span,sourceSpan)||this;_this.obj=obj;_this.key=key;return _this;}KeyedRead.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedRead(this,context);};return KeyedRead;}(AST);var KeyedWrite=/** @class */function(_super){__extends(KeyedWrite,_super);function KeyedWrite(span,sourceSpan,obj,key,value){var _this=_super.call(this,span,sourceSpan)||this;_this.obj=obj;_this.key=key;_this.value=value;return _this;}KeyedWrite.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitKeyedWrite(this,context);};return KeyedWrite;}(AST);var BindingPipe=/** @class */function(_super){__extends(BindingPipe,_super);function BindingPipe(span,sourceSpan,exp,name,args,nameSpan){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.exp=exp;_this.name=name;_this.args=args;return _this;}BindingPipe.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPipe(this,context);};return BindingPipe;}(ASTWithName);var LiteralPrimitive=/** @class */function(_super){__extends(LiteralPrimitive,_super);function LiteralPrimitive(span,sourceSpan,value){var _this=_super.call(this,span,sourceSpan)||this;_this.value=value;return _this;}LiteralPrimitive.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralPrimitive(this,context);};return LiteralPrimitive;}(AST);var LiteralArray=/** @class */function(_super){__extends(LiteralArray,_super);function LiteralArray(span,sourceSpan,expressions){var _this=_super.call(this,span,sourceSpan)||this;_this.expressions=expressions;return _this;}LiteralArray.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralArray(this,context);};return LiteralArray;}(AST);var LiteralMap=/** @class */function(_super){__extends(LiteralMap,_super);function LiteralMap(span,sourceSpan,keys,values){var _this=_super.call(this,span,sourceSpan)||this;_this.keys=keys;_this.values=values;return _this;}LiteralMap.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitLiteralMap(this,context);};return LiteralMap;}(AST);var Interpolation=/** @class */function(_super){__extends(Interpolation,_super);function Interpolation(span,sourceSpan,strings,expressions){var _this=_super.call(this,span,sourceSpan)||this;_this.strings=strings;_this.expressions=expressions;return _this;}Interpolation.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitInterpolation(this,context);};return Interpolation;}(AST);var Binary=/** @class */function(_super){__extends(Binary,_super);function Binary(span,sourceSpan,operation,left,right){var _this=_super.call(this,span,sourceSpan)||this;_this.operation=operation;_this.left=left;_this.right=right;return _this;}Binary.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitBinary(this,context);};return Binary;}(AST);var PrefixNot=/** @class */function(_super){__extends(PrefixNot,_super);function PrefixNot(span,sourceSpan,expression){var _this=_super.call(this,span,sourceSpan)||this;_this.expression=expression;return _this;}PrefixNot.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitPrefixNot(this,context);};return PrefixNot;}(AST);var NonNullAssert=/** @class */function(_super){__extends(NonNullAssert,_super);function NonNullAssert(span,sourceSpan,expression){var _this=_super.call(this,span,sourceSpan)||this;_this.expression=expression;return _this;}NonNullAssert.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitNonNullAssert(this,context);};return NonNullAssert;}(AST);var MethodCall=/** @class */function(_super){__extends(MethodCall,_super);function MethodCall(span,sourceSpan,nameSpan,receiver,name,args){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}MethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitMethodCall(this,context);};return MethodCall;}(ASTWithName);var SafeMethodCall=/** @class */function(_super){__extends(SafeMethodCall,_super);function SafeMethodCall(span,sourceSpan,nameSpan,receiver,name,args){var _this=_super.call(this,span,sourceSpan,nameSpan)||this;_this.receiver=receiver;_this.name=name;_this.args=args;return _this;}SafeMethodCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitSafeMethodCall(this,context);};return SafeMethodCall;}(ASTWithName);var FunctionCall=/** @class */function(_super){__extends(FunctionCall,_super);function FunctionCall(span,sourceSpan,target,args){var _this=_super.call(this,span,sourceSpan)||this;_this.target=target;_this.args=args;return _this;}FunctionCall.prototype.visit=function(visitor,context){if(context===void 0){context=null;}return visitor.visitFunctionCall(this,context);};return FunctionCall;}(AST);/**
     * Records the absolute position of a text span in a source file, where `start` and `end` are the
     * starting and ending byte offsets, respectively, of the text span in a source file.
     */var AbsoluteSourceSpan=/** @class */function(){function AbsoluteSourceSpan(start,end){this.start=start;this.end=end;}return AbsoluteSourceSpan;}();var ASTWithSource=/** @class */function(_super){__extends(ASTWithSource,_super);function ASTWithSource(ast,source,location,absoluteOffset,errors){var _this=_super.call(this,new ParseSpan(0,source===null?0:source.length),new AbsoluteSourceSpan(absoluteOffset,source===null?absoluteOffset:absoluteOffset+source.length))||this;_this.ast=ast;_this.source=source;_this.location=location;_this.errors=errors;return _this;}ASTWithSource.prototype.visit=function(visitor,context){if(context===void 0){context=null;}if(visitor.visitASTWithSource){return visitor.visitASTWithSource(this,context);}return this.ast.visit(visitor,context);};ASTWithSource.prototype.toString=function(){return this.source+" in "+this.location;};return ASTWithSource;}(AST);var VariableBinding=/** @class */function(){/**
         * @param sourceSpan entire span of the binding.
         * @param key name of the LHS along with its span.
         * @param value optional value for the RHS along with its span.
         */function VariableBinding(sourceSpan,key,value){this.sourceSpan=sourceSpan;this.key=key;this.value=value;}return VariableBinding;}();var ExpressionBinding=/** @class */function(){/**
         * @param sourceSpan entire span of the binding.
         * @param key binding name, like ngForOf, ngForTrackBy, ngIf, along with its
         * span. Note that the length of the span may not be the same as
         * `key.source.length`. For example,
         * 1. key.source = ngFor, key.span is for "ngFor"
         * 2. key.source = ngForOf, key.span is for "of"
         * 3. key.source = ngForTrackBy, key.span is for "trackBy"
         * @param value optional expression for the RHS.
         */function ExpressionBinding(sourceSpan,key,value){this.sourceSpan=sourceSpan;this.key=key;this.value=value;}return ExpressionBinding;}();var RecursiveAstVisitor$1=/** @class */function(){function RecursiveAstVisitor(){}RecursiveAstVisitor.prototype.visit=function(ast,context){// The default implementation just visits every node.
// Classes that extend RecursiveAstVisitor should override this function
// to selectively visit the specified node.
ast.visit(this,context);};RecursiveAstVisitor.prototype.visitBinary=function(ast,context){this.visit(ast.left,context);this.visit(ast.right,context);};RecursiveAstVisitor.prototype.visitChain=function(ast,context){this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitConditional=function(ast,context){this.visit(ast.condition,context);this.visit(ast.trueExp,context);this.visit(ast.falseExp,context);};RecursiveAstVisitor.prototype.visitPipe=function(ast,context){this.visit(ast.exp,context);this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitFunctionCall=function(ast,context){if(ast.target){this.visit(ast.target,context);}this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitImplicitReceiver=function(ast,context){};RecursiveAstVisitor.prototype.visitInterpolation=function(ast,context){this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitKeyedRead=function(ast,context){this.visit(ast.obj,context);this.visit(ast.key,context);};RecursiveAstVisitor.prototype.visitKeyedWrite=function(ast,context){this.visit(ast.obj,context);this.visit(ast.key,context);this.visit(ast.value,context);};RecursiveAstVisitor.prototype.visitLiteralArray=function(ast,context){this.visitAll(ast.expressions,context);};RecursiveAstVisitor.prototype.visitLiteralMap=function(ast,context){this.visitAll(ast.values,context);};RecursiveAstVisitor.prototype.visitLiteralPrimitive=function(ast,context){};RecursiveAstVisitor.prototype.visitMethodCall=function(ast,context){this.visit(ast.receiver,context);this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitPrefixNot=function(ast,context){this.visit(ast.expression,context);};RecursiveAstVisitor.prototype.visitNonNullAssert=function(ast,context){this.visit(ast.expression,context);};RecursiveAstVisitor.prototype.visitPropertyRead=function(ast,context){this.visit(ast.receiver,context);};RecursiveAstVisitor.prototype.visitPropertyWrite=function(ast,context){this.visit(ast.receiver,context);this.visit(ast.value,context);};RecursiveAstVisitor.prototype.visitSafePropertyRead=function(ast,context){this.visit(ast.receiver,context);};RecursiveAstVisitor.prototype.visitSafeMethodCall=function(ast,context){this.visit(ast.receiver,context);this.visitAll(ast.args,context);};RecursiveAstVisitor.prototype.visitQuote=function(ast,context){};// This is not part of the AstVisitor interface, just a helper method
RecursiveAstVisitor.prototype.visitAll=function(asts,context){var e_1,_a;try{for(var asts_1=__values(asts),asts_1_1=asts_1.next();!asts_1_1.done;asts_1_1=asts_1.next()){var ast=asts_1_1.value;this.visit(ast,context);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(asts_1_1&&!asts_1_1.done&&(_a=asts_1["return"]))_a.call(asts_1);}finally{if(e_1)throw e_1.error;}}};return RecursiveAstVisitor;}();var AstTransformer$1=/** @class */function(){function AstTransformer(){}AstTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstTransformer.prototype.visitInterpolation=function(ast,context){return new Interpolation(ast.span,ast.sourceSpan,ast.strings,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralPrimitive=function(ast,context){return new LiteralPrimitive(ast.span,ast.sourceSpan,ast.value);};AstTransformer.prototype.visitPropertyRead=function(ast,context){return new PropertyRead(ast.span,ast.sourceSpan,ast.nameSpan,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitPropertyWrite=function(ast,context){return new PropertyWrite(ast.span,ast.sourceSpan,ast.nameSpan,ast.receiver.visit(this),ast.name,ast.value.visit(this));};AstTransformer.prototype.visitSafePropertyRead=function(ast,context){return new SafePropertyRead(ast.span,ast.sourceSpan,ast.nameSpan,ast.receiver.visit(this),ast.name);};AstTransformer.prototype.visitMethodCall=function(ast,context){return new MethodCall(ast.span,ast.sourceSpan,ast.nameSpan,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitSafeMethodCall=function(ast,context){return new SafeMethodCall(ast.span,ast.sourceSpan,ast.nameSpan,ast.receiver.visit(this),ast.name,this.visitAll(ast.args));};AstTransformer.prototype.visitFunctionCall=function(ast,context){return new FunctionCall(ast.span,ast.sourceSpan,ast.target.visit(this),this.visitAll(ast.args));};AstTransformer.prototype.visitLiteralArray=function(ast,context){return new LiteralArray(ast.span,ast.sourceSpan,this.visitAll(ast.expressions));};AstTransformer.prototype.visitLiteralMap=function(ast,context){return new LiteralMap(ast.span,ast.sourceSpan,ast.keys,this.visitAll(ast.values));};AstTransformer.prototype.visitBinary=function(ast,context){return new Binary(ast.span,ast.sourceSpan,ast.operation,ast.left.visit(this),ast.right.visit(this));};AstTransformer.prototype.visitPrefixNot=function(ast,context){return new PrefixNot(ast.span,ast.sourceSpan,ast.expression.visit(this));};AstTransformer.prototype.visitNonNullAssert=function(ast,context){return new NonNullAssert(ast.span,ast.sourceSpan,ast.expression.visit(this));};AstTransformer.prototype.visitConditional=function(ast,context){return new Conditional(ast.span,ast.sourceSpan,ast.condition.visit(this),ast.trueExp.visit(this),ast.falseExp.visit(this));};AstTransformer.prototype.visitPipe=function(ast,context){return new BindingPipe(ast.span,ast.sourceSpan,ast.exp.visit(this),ast.name,this.visitAll(ast.args),ast.nameSpan);};AstTransformer.prototype.visitKeyedRead=function(ast,context){return new KeyedRead(ast.span,ast.sourceSpan,ast.obj.visit(this),ast.key.visit(this));};AstTransformer.prototype.visitKeyedWrite=function(ast,context){return new KeyedWrite(ast.span,ast.sourceSpan,ast.obj.visit(this),ast.key.visit(this),ast.value.visit(this));};AstTransformer.prototype.visitAll=function(asts){var res=[];for(var i=0;i<asts.length;++i){res[i]=asts[i].visit(this);}return res;};AstTransformer.prototype.visitChain=function(ast,context){return new Chain(ast.span,ast.sourceSpan,this.visitAll(ast.expressions));};AstTransformer.prototype.visitQuote=function(ast,context){return new Quote(ast.span,ast.sourceSpan,ast.prefix,ast.uninterpretedExpression,ast.location);};return AstTransformer;}();// A transformer that only creates new nodes if the transformer makes a change or
// a change is made a child node.
var AstMemoryEfficientTransformer=/** @class */function(){function AstMemoryEfficientTransformer(){}AstMemoryEfficientTransformer.prototype.visitImplicitReceiver=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitInterpolation=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions)return new Interpolation(ast.span,ast.sourceSpan,ast.strings,expressions);return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive=function(ast,context){return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new PropertyRead(ast.span,ast.sourceSpan,ast.nameSpan,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitPropertyWrite=function(ast,context){var receiver=ast.receiver.visit(this);var value=ast.value.visit(this);if(receiver!==ast.receiver||value!==ast.value){return new PropertyWrite(ast.span,ast.sourceSpan,ast.nameSpan,receiver,ast.name,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitSafePropertyRead=function(ast,context){var receiver=ast.receiver.visit(this);if(receiver!==ast.receiver){return new SafePropertyRead(ast.span,ast.sourceSpan,ast.nameSpan,receiver,ast.name);}return ast;};AstMemoryEfficientTransformer.prototype.visitMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);var args=this.visitAll(ast.args);if(receiver!==ast.receiver||args!==ast.args){return new MethodCall(ast.span,ast.sourceSpan,ast.nameSpan,receiver,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitSafeMethodCall=function(ast,context){var receiver=ast.receiver.visit(this);var args=this.visitAll(ast.args);if(receiver!==ast.receiver||args!==ast.args){return new SafeMethodCall(ast.span,ast.sourceSpan,ast.nameSpan,receiver,ast.name,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitFunctionCall=function(ast,context){var target=ast.target&&ast.target.visit(this);var args=this.visitAll(ast.args);if(target!==ast.target||args!==ast.args){return new FunctionCall(ast.span,ast.sourceSpan,target,args);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralArray=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new LiteralArray(ast.span,ast.sourceSpan,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitLiteralMap=function(ast,context){var values=this.visitAll(ast.values);if(values!==ast.values){return new LiteralMap(ast.span,ast.sourceSpan,ast.keys,values);}return ast;};AstMemoryEfficientTransformer.prototype.visitBinary=function(ast,context){var left=ast.left.visit(this);var right=ast.right.visit(this);if(left!==ast.left||right!==ast.right){return new Binary(ast.span,ast.sourceSpan,ast.operation,left,right);}return ast;};AstMemoryEfficientTransformer.prototype.visitPrefixNot=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new PrefixNot(ast.span,ast.sourceSpan,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitNonNullAssert=function(ast,context){var expression=ast.expression.visit(this);if(expression!==ast.expression){return new NonNullAssert(ast.span,ast.sourceSpan,expression);}return ast;};AstMemoryEfficientTransformer.prototype.visitConditional=function(ast,context){var condition=ast.condition.visit(this);var trueExp=ast.trueExp.visit(this);var falseExp=ast.falseExp.visit(this);if(condition!==ast.condition||trueExp!==ast.trueExp||falseExp!==ast.falseExp){return new Conditional(ast.span,ast.sourceSpan,condition,trueExp,falseExp);}return ast;};AstMemoryEfficientTransformer.prototype.visitPipe=function(ast,context){var exp=ast.exp.visit(this);var args=this.visitAll(ast.args);if(exp!==ast.exp||args!==ast.args){return new BindingPipe(ast.span,ast.sourceSpan,exp,ast.name,args,ast.nameSpan);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedRead=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);if(obj!==ast.obj||key!==ast.key){return new KeyedRead(ast.span,ast.sourceSpan,obj,key);}return ast;};AstMemoryEfficientTransformer.prototype.visitKeyedWrite=function(ast,context){var obj=ast.obj.visit(this);var key=ast.key.visit(this);var value=ast.value.visit(this);if(obj!==ast.obj||key!==ast.key||value!==ast.value){return new KeyedWrite(ast.span,ast.sourceSpan,obj,key,value);}return ast;};AstMemoryEfficientTransformer.prototype.visitAll=function(asts){var res=[];var modified=false;for(var i=0;i<asts.length;++i){var original=asts[i];var value=original.visit(this);res[i]=value;modified=modified||value!==original;}return modified?res:asts;};AstMemoryEfficientTransformer.prototype.visitChain=function(ast,context){var expressions=this.visitAll(ast.expressions);if(expressions!==ast.expressions){return new Chain(ast.span,ast.sourceSpan,expressions);}return ast;};AstMemoryEfficientTransformer.prototype.visitQuote=function(ast,context){return ast;};return AstMemoryEfficientTransformer;}();// Bindings
var ParsedProperty=/** @class */function(){function ParsedProperty(name,expression,type,sourceSpan,valueSpan){this.name=name;this.expression=expression;this.type=type;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;this.isLiteral=this.type===exports.ParsedPropertyType.LITERAL_ATTR;this.isAnimation=this.type===exports.ParsedPropertyType.ANIMATION;}return ParsedProperty;}();(function(ParsedPropertyType){ParsedPropertyType[ParsedPropertyType["DEFAULT"]=0]="DEFAULT";ParsedPropertyType[ParsedPropertyType["LITERAL_ATTR"]=1]="LITERAL_ATTR";ParsedPropertyType[ParsedPropertyType["ANIMATION"]=2]="ANIMATION";})(exports.ParsedPropertyType||(exports.ParsedPropertyType={}));var ParsedEvent=/** @class */function(){// Regular events have a target
// Animation events have a phase
function ParsedEvent(name,targetOrPhase,type,handler,sourceSpan,handlerSpan){this.name=name;this.targetOrPhase=targetOrPhase;this.type=type;this.handler=handler;this.sourceSpan=sourceSpan;this.handlerSpan=handlerSpan;}return ParsedEvent;}();/**
     * ParsedVariable represents a variable declaration in a microsyntax expression.
     */var ParsedVariable=/** @class */function(){function ParsedVariable(name,value,sourceSpan,keySpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.keySpan=keySpan;this.valueSpan=valueSpan;}return ParsedVariable;}();var BoundElementProperty=/** @class */function(){function BoundElementProperty(name,type,securityContext,value,unit,sourceSpan,valueSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}return BoundElementProperty;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var EventHandlerVars=/** @class */function(){function EventHandlerVars(){}EventHandlerVars.event=variable('$event');return EventHandlerVars;}();var ConvertActionBindingResult=/** @class */function(){function ConvertActionBindingResult(/**
         * Render2 compatible statements,
         */stmts,/**
         * Variable name used with render2 compatible statements.
         */allowDefault){this.stmts=stmts;this.allowDefault=allowDefault;/**
             * This is bit of a hack. It converts statements which render2 expects to statements which are
             * expected by render3.
             *
             * Example: `<div click="doSomething($event)">` will generate:
             *
             * Render3:
             * ```
             * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);
             * return pd_b;
             * ```
             *
             * but render2 expects:
             * ```
             * return ctx.doSomething($event);
             * ```
             */ // TODO(misko): remove this hack once we no longer support ViewEngine.
this.render3Stmts=stmts.map(function(statement){if(statement instanceof DeclareVarStmt&&statement.name==allowDefault.name&&statement.value instanceof BinaryOperatorExpr){var lhs=statement.value.lhs;return new ReturnStatement(lhs.value);}return statement;});}return ConvertActionBindingResult;}();/**
     * Converts the given expression AST into an executable output AST, assuming the expression is
     * used in an action binding (e.g. an event handler).
     */function convertActionBinding(localResolver,implicitReceiver,action,bindingId,interpolationFunction,baseSourceSpan,implicitReceiverAccesses){if(!localResolver){localResolver=new DefaultLocalResolver();}var actionWithoutBuiltins=convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){// Note: no caching for literal arrays in actions.
return function(args){return literalArr(args);};},createLiteralMapConverter:function createLiteralMapConverter(keys){// Note: no caching for literal maps in actions.
return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});return literalMap(entries);};},createPipeConverter:function createPipeConverter(name){throw new Error("Illegal State: Actions are not allowed to contain pipes. Pipe: "+name);}},action);var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction,baseSourceSpan,implicitReceiverAccesses);var actionStmts=[];flattenStatements(actionWithoutBuiltins.visit(visitor,_Mode.Statement),actionStmts);prependTemporaryDecls(visitor.temporaryCount,bindingId,actionStmts);if(visitor.usesImplicitReceiver){localResolver.notifyImplicitReceiverUse();}var lastIndex=actionStmts.length-1;var preventDefaultVar=null;if(lastIndex>=0){var lastStatement=actionStmts[lastIndex];var returnExpr=convertStmtIntoExpression(lastStatement);if(returnExpr){// Note: We need to cast the result of the method call to dynamic,
// as it might be a void method!
preventDefaultVar=createPreventDefaultVar(bindingId);actionStmts[lastIndex]=preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false))).toDeclStmt(null,[exports.StmtModifier.Final]);}}return new ConvertActionBindingResult(actionStmts,preventDefaultVar);}function convertPropertyBindingBuiltins(converterFactory,ast){return convertBuiltins(converterFactory,ast);}var ConvertPropertyBindingResult=/** @class */function(){function ConvertPropertyBindingResult(stmts,currValExpr){this.stmts=stmts;this.currValExpr=currValExpr;}return ConvertPropertyBindingResult;}();var BindingForm;(function(BindingForm){// The general form of binding expression, supports all expressions.
BindingForm[BindingForm["General"]=0]="General";// Try to generate a simple binding (no temporaries or statements)
// otherwise generate a general binding
BindingForm[BindingForm["TrySimple"]=1]="TrySimple";})(BindingForm||(BindingForm={}));/**
     * Converts the given expression AST into an executable output AST, assuming the expression
     * is used in property binding. The expression has to be preprocessed via
     * `convertPropertyBindingBuiltins`.
     */function convertPropertyBinding(localResolver,implicitReceiver,expressionWithoutBuiltins,bindingId,form,interpolationFunction){if(!localResolver){localResolver=new DefaultLocalResolver();}var currValExpr=createCurrValueExpr(bindingId);var visitor=new _AstToIrVisitor(localResolver,implicitReceiver,bindingId,interpolationFunction);var outputExpr=expressionWithoutBuiltins.visit(visitor,_Mode.Expression);var stmts=getStatementsFromVisitor(visitor,bindingId);if(visitor.usesImplicitReceiver){localResolver.notifyImplicitReceiverUse();}if(visitor.temporaryCount===0&&form==BindingForm.TrySimple){return new ConvertPropertyBindingResult([],outputExpr);}stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE,[exports.StmtModifier.Final]));return new ConvertPropertyBindingResult(stmts,currValExpr);}/**
     * Given some expression, such as a binding or interpolation expression, and a context expression to
     * look values up on, visit each facet of the given expression resolving values from the context
     * expression such that a list of arguments can be derived from the found values that can be used as
     * arguments to an external update instruction.
     *
     * @param localResolver The resolver to use to look up expressions by name appropriately
     * @param contextVariableExpression The expression representing the context variable used to create
     * the final argument expressions
     * @param expressionWithArgumentsToExtract The expression to visit to figure out what values need to
     * be resolved and what arguments list to build.
     * @param bindingId A name prefix used to create temporary variable names if they're needed for the
     * arguments generated
     * @returns An array of expressions that can be passed as arguments to instruction expressions like
     * `o.importExpr(R3.propertyInterpolate).callFn(result)`
     */function convertUpdateArguments(localResolver,contextVariableExpression,expressionWithArgumentsToExtract,bindingId){var visitor=new _AstToIrVisitor(localResolver,contextVariableExpression,bindingId,undefined);var outputExpr=expressionWithArgumentsToExtract.visit(visitor,_Mode.Expression);if(visitor.usesImplicitReceiver){localResolver.notifyImplicitReceiverUse();}var stmts=getStatementsFromVisitor(visitor,bindingId);// Removing the first argument, because it was a length for ViewEngine, not Ivy.
var args=outputExpr.args.slice(1);if(expressionWithArgumentsToExtract instanceof Interpolation){// If we're dealing with an interpolation of 1 value with an empty prefix and suffix, reduce the
// args returned to just the value, because we're going to pass it to a special instruction.
var strings=expressionWithArgumentsToExtract.strings;if(args.length===3&&strings[0]===''&&strings[1]===''){// Single argument interpolate instructions.
args=[args[1]];}else if(args.length>=19){// 19 or more arguments must be passed to the `interpolateV`-style instructions, which accept
// an array of arguments
args=[literalArr(args)];}}return{stmts:stmts,args:args};}function getStatementsFromVisitor(visitor,bindingId){var stmts=[];for(var i=0;i<visitor.temporaryCount;i++){stmts.push(temporaryDeclaration(bindingId,i));}return stmts;}function convertBuiltins(converterFactory,ast){var visitor=new _BuiltinAstConverter(converterFactory);return ast.visit(visitor);}function temporaryName(bindingId,temporaryNumber){return"tmp_"+bindingId+"_"+temporaryNumber;}function temporaryDeclaration(bindingId,temporaryNumber){return new DeclareVarStmt(temporaryName(bindingId,temporaryNumber),NULL_EXPR);}function prependTemporaryDecls(temporaryCount,bindingId,statements){for(var i=temporaryCount-1;i>=0;i--){statements.unshift(temporaryDeclaration(bindingId,i));}}var _Mode;(function(_Mode){_Mode[_Mode["Statement"]=0]="Statement";_Mode[_Mode["Expression"]=1]="Expression";})(_Mode||(_Mode={}));function ensureStatementMode(mode,ast){if(mode!==_Mode.Statement){throw new Error("Expected a statement, but saw "+ast);}}function ensureExpressionMode(mode,ast){if(mode!==_Mode.Expression){throw new Error("Expected an expression, but saw "+ast);}}function convertToStatementIfNeeded(mode,expr){if(mode===_Mode.Statement){return expr.toStmt();}else{return expr;}}var _BuiltinAstConverter=/** @class */function(_super){__extends(_BuiltinAstConverter,_super);function _BuiltinAstConverter(_converterFactory){var _this=_super.call(this)||this;_this._converterFactory=_converterFactory;return _this;}_BuiltinAstConverter.prototype.visitPipe=function(ast,context){var _this=this;var args=__spread([ast.exp],ast.args).map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,ast.sourceSpan,args,this._converterFactory.createPipeConverter(ast.name,args.length));};_BuiltinAstConverter.prototype.visitLiteralArray=function(ast,context){var _this=this;var args=ast.expressions.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,ast.sourceSpan,args,this._converterFactory.createLiteralArrayConverter(ast.expressions.length));};_BuiltinAstConverter.prototype.visitLiteralMap=function(ast,context){var _this=this;var args=ast.values.map(function(ast){return ast.visit(_this,context);});return new BuiltinFunctionCall(ast.span,ast.sourceSpan,args,this._converterFactory.createLiteralMapConverter(ast.keys));};return _BuiltinAstConverter;}(AstTransformer$1);var _AstToIrVisitor=/** @class */function(){function _AstToIrVisitor(_localResolver,_implicitReceiver,bindingId,interpolationFunction,baseSourceSpan,implicitReceiverAccesses){this._localResolver=_localResolver;this._implicitReceiver=_implicitReceiver;this.bindingId=bindingId;this.interpolationFunction=interpolationFunction;this.baseSourceSpan=baseSourceSpan;this.implicitReceiverAccesses=implicitReceiverAccesses;this._nodeMap=new Map();this._resultMap=new Map();this._currentTemporary=0;this.temporaryCount=0;this.usesImplicitReceiver=false;}_AstToIrVisitor.prototype.visitBinary=function(ast,mode){var op;switch(ast.operation){case'+':op=exports.BinaryOperator.Plus;break;case'-':op=exports.BinaryOperator.Minus;break;case'*':op=exports.BinaryOperator.Multiply;break;case'/':op=exports.BinaryOperator.Divide;break;case'%':op=exports.BinaryOperator.Modulo;break;case'&&':op=exports.BinaryOperator.And;break;case'||':op=exports.BinaryOperator.Or;break;case'==':op=exports.BinaryOperator.Equals;break;case'!=':op=exports.BinaryOperator.NotEquals;break;case'===':op=exports.BinaryOperator.Identical;break;case'!==':op=exports.BinaryOperator.NotIdentical;break;case'<':op=exports.BinaryOperator.Lower;break;case'>':op=exports.BinaryOperator.Bigger;break;case'<=':op=exports.BinaryOperator.LowerEquals;break;case'>=':op=exports.BinaryOperator.BiggerEquals;break;default:throw new Error("Unsupported operation "+ast.operation);}return convertToStatementIfNeeded(mode,new BinaryOperatorExpr(op,this._visit(ast.left,_Mode.Expression),this._visit(ast.right,_Mode.Expression),undefined,this.convertSourceSpan(ast.span)));};_AstToIrVisitor.prototype.visitChain=function(ast,mode){ensureStatementMode(mode,ast);return this.visitAll(ast.expressions,mode);};_AstToIrVisitor.prototype.visitConditional=function(ast,mode){var value=this._visit(ast.condition,_Mode.Expression);return convertToStatementIfNeeded(mode,value.conditional(this._visit(ast.trueExp,_Mode.Expression),this._visit(ast.falseExp,_Mode.Expression),this.convertSourceSpan(ast.span)));};_AstToIrVisitor.prototype.visitPipe=function(ast,mode){throw new Error("Illegal state: Pipes should have been converted into functions. Pipe: "+ast.name);};_AstToIrVisitor.prototype.visitFunctionCall=function(ast,mode){var convertedArgs=this.visitAll(ast.args,_Mode.Expression);var fnResult;if(ast instanceof BuiltinFunctionCall){fnResult=ast.converter(convertedArgs);}else{fnResult=this._visit(ast.target,_Mode.Expression).callFn(convertedArgs,this.convertSourceSpan(ast.span));}return convertToStatementIfNeeded(mode,fnResult);};_AstToIrVisitor.prototype.visitImplicitReceiver=function(ast,mode){ensureExpressionMode(mode,ast);this.usesImplicitReceiver=true;return this._implicitReceiver;};_AstToIrVisitor.prototype.visitInterpolation=function(ast,mode){ensureExpressionMode(mode,ast);var args=[literal(ast.expressions.length)];for(var i=0;i<ast.strings.length-1;i++){args.push(literal(ast.strings[i]));args.push(this._visit(ast.expressions[i],_Mode.Expression));}args.push(literal(ast.strings[ast.strings.length-1]));if(this.interpolationFunction){return this.interpolationFunction(args);}return ast.expressions.length<=9?importExpr(Identifiers.inlineInterpolate).callFn(args):importExpr(Identifiers.interpolate).callFn([args[0],literalArr(args.slice(1),undefined,this.convertSourceSpan(ast.span))]);};_AstToIrVisitor.prototype.visitKeyedRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{return convertToStatementIfNeeded(mode,this._visit(ast.obj,_Mode.Expression).key(this._visit(ast.key,_Mode.Expression)));}};_AstToIrVisitor.prototype.visitKeyedWrite=function(ast,mode){var obj=this._visit(ast.obj,_Mode.Expression);var key=this._visit(ast.key,_Mode.Expression);var value=this._visit(ast.value,_Mode.Expression);return convertToStatementIfNeeded(mode,obj.key(key).set(value));};_AstToIrVisitor.prototype.visitLiteralArray=function(ast,mode){throw new Error("Illegal State: literal arrays should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralMap=function(ast,mode){throw new Error("Illegal State: literal maps should have been converted into functions");};_AstToIrVisitor.prototype.visitLiteralPrimitive=function(ast,mode){// For literal values of null, undefined, true, or false allow type interference
// to infer the type.
var type=ast.value===null||ast.value===undefined||ast.value===true||ast.value===true?INFERRED_TYPE:undefined;return convertToStatementIfNeeded(mode,literal(ast.value,type,this.convertSourceSpan(ast.span)));};_AstToIrVisitor.prototype._getLocal=function(name){return this._localResolver.getLocal(name);};_AstToIrVisitor.prototype.visitMethodCall=function(ast,mode){if(ast.receiver instanceof ImplicitReceiver&&ast.name=='$any'){var args=this.visitAll(ast.args,_Mode.Expression);if(args.length!=1){throw new Error("Invalid call to $any, expected 1 argument but received "+(args.length||'none'));}return args[0].cast(DYNAMIC_TYPE,this.convertSourceSpan(ast.span));}var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var args=this.visitAll(ast.args,_Mode.Expression);var prevUsesImplicitReceiver=this.usesImplicitReceiver;var result=null;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){var varExpr=this._getLocal(ast.name);if(varExpr){// Restore the previous "usesImplicitReceiver" state since the implicit
// receiver has been replaced with a resolved local expression.
this.usesImplicitReceiver=prevUsesImplicitReceiver;result=varExpr.callFn(args);}this.addImplicitReceiverAccess(ast.name);}if(result==null){result=receiver.callMethod(ast.name,args,this.convertSourceSpan(ast.span));}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPrefixNot=function(ast,mode){return convertToStatementIfNeeded(mode,not(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitNonNullAssert=function(ast,mode){return convertToStatementIfNeeded(mode,assertNotNull(this._visit(ast.expression,_Mode.Expression)));};_AstToIrVisitor.prototype.visitPropertyRead=function(ast,mode){var leftMostSafe=this.leftMostSafeNode(ast);if(leftMostSafe){return this.convertSafeAccess(ast,leftMostSafe,mode);}else{var result=null;var prevUsesImplicitReceiver=this.usesImplicitReceiver;var receiver=this._visit(ast.receiver,_Mode.Expression);if(receiver===this._implicitReceiver){result=this._getLocal(ast.name);if(result){// Restore the previous "usesImplicitReceiver" state since the implicit
// receiver has been replaced with a resolved local expression.
this.usesImplicitReceiver=prevUsesImplicitReceiver;}this.addImplicitReceiverAccess(ast.name);}if(result==null){result=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,result);}};_AstToIrVisitor.prototype.visitPropertyWrite=function(ast,mode){var receiver=this._visit(ast.receiver,_Mode.Expression);var prevUsesImplicitReceiver=this.usesImplicitReceiver;var varExpr=null;if(receiver===this._implicitReceiver){var localExpr=this._getLocal(ast.name);if(localExpr){if(localExpr instanceof ReadPropExpr){// If the local variable is a property read expression, it's a reference
// to a 'context.property' value and will be used as the target of the
// write expression.
varExpr=localExpr;// Restore the previous "usesImplicitReceiver" state since the implicit
// receiver has been replaced with a resolved local expression.
this.usesImplicitReceiver=prevUsesImplicitReceiver;this.addImplicitReceiverAccess(ast.name);}else{// Otherwise it's an error.
var receiver_1=ast.name;var value=ast.value instanceof PropertyRead?ast.value.name:undefined;throw new Error("Cannot assign value \""+value+"\" to template variable \""+receiver_1+"\". Template variables are read-only.");}}}// If no local expression could be produced, use the original receiver's
// property as the target.
if(varExpr===null){varExpr=receiver.prop(ast.name);}return convertToStatementIfNeeded(mode,varExpr.set(this._visit(ast.value,_Mode.Expression)));};_AstToIrVisitor.prototype.visitSafePropertyRead=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitSafeMethodCall=function(ast,mode){return this.convertSafeAccess(ast,this.leftMostSafeNode(ast),mode);};_AstToIrVisitor.prototype.visitAll=function(asts,mode){var _this=this;return asts.map(function(ast){return _this._visit(ast,mode);});};_AstToIrVisitor.prototype.visitQuote=function(ast,mode){throw new Error("Quotes are not supported for evaluation!\n        Statement: "+ast.uninterpretedExpression+" located at "+ast.location);};_AstToIrVisitor.prototype._visit=function(ast,mode){var result=this._resultMap.get(ast);if(result)return result;return(this._nodeMap.get(ast)||ast).visit(this,mode);};_AstToIrVisitor.prototype.convertSafeAccess=function(ast,leftMostSafe,mode){// If the expression contains a safe access node on the left it needs to be converted to
// an expression that guards the access to the member by checking the receiver for blank. As
// execution proceeds from left to right, the left most part of the expression must be guarded
// first but, because member access is left associative, the right side of the expression is at
// the top of the AST. The desired result requires lifting a copy of the left part of the
// expression up to test it for blank before generating the unguarded version.
// Consider, for example the following expression: a?.b.c?.d.e
// This results in the ast:
//         .
//        / \
//       ?.   e
//      /  \
//     .    d
//    / \
//   ?.  c
//  /  \
// a    b
// The following tree should be generated:
//
//        /---- ? ----\
//       /      |      \
//     a   /--- ? ---\  null
//        /     |     \
//       .      .     null
//      / \    / \
//     .  c   .   e
//    / \    / \
//   a   b  .   d
//         / \
//        .   c
//       / \
//      a   b
//
// Notice that the first guard condition is the left hand of the left most safe access node
// which comes in as leftMostSafe to this routine.
var guardedExpression=this._visit(leftMostSafe.receiver,_Mode.Expression);var temporary=undefined;if(this.needsTemporary(leftMostSafe.receiver)){// If the expression has method calls or pipes then we need to save the result into a
// temporary variable to avoid calling stateful or impure code more than once.
temporary=this.allocateTemporary();// Preserve the result in the temporary variable
guardedExpression=temporary.set(guardedExpression);// Ensure all further references to the guarded expression refer to the temporary instead.
this._resultMap.set(leftMostSafe.receiver,temporary);}var condition=guardedExpression.isBlank();// Convert the ast to an unguarded access to the receiver's member. The map will substitute
// leftMostNode with its unguarded version in the call to `this.visit()`.
if(leftMostSafe instanceof SafeMethodCall){this._nodeMap.set(leftMostSafe,new MethodCall(leftMostSafe.span,leftMostSafe.sourceSpan,leftMostSafe.nameSpan,leftMostSafe.receiver,leftMostSafe.name,leftMostSafe.args));}else{this._nodeMap.set(leftMostSafe,new PropertyRead(leftMostSafe.span,leftMostSafe.sourceSpan,leftMostSafe.nameSpan,leftMostSafe.receiver,leftMostSafe.name));}// Recursively convert the node now without the guarded member access.
var access=this._visit(ast,_Mode.Expression);// Remove the mapping. This is not strictly required as the converter only traverses each node
// once but is safer if the conversion is changed to traverse the nodes more than once.
this._nodeMap["delete"](leftMostSafe);// If we allocated a temporary, release it.
if(temporary){this.releaseTemporary(temporary);}// Produce the conditional
return convertToStatementIfNeeded(mode,condition.conditional(literal(null),access));};// Given an expression of the form a?.b.c?.d.e then the left most safe node is
// the (a?.b). The . and ?. are left associative thus can be rewritten as:
// ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or
// safe method call as this needs to be transformed initially to:
//   a == null ? null : a.c.b.c?.d.e
// then to:
//   a == null ? null : a.b.c == null ? null : a.b.c.d.e
_AstToIrVisitor.prototype.leftMostSafeNode=function(ast){var _this=this;var visit=function visit(visitor,ast){return(_this._nodeMap.get(ast)||ast).visit(visitor);};return ast.visit({visitBinary:function visitBinary(ast){return null;},visitChain:function visitChain(ast){return null;},visitConditional:function visitConditional(ast){return null;},visitFunctionCall:function visitFunctionCall(ast){return null;},visitImplicitReceiver:function visitImplicitReceiver(ast){return null;},visitInterpolation:function visitInterpolation(ast){return null;},visitKeyedRead:function visitKeyedRead(ast){return visit(this,ast.obj);},visitKeyedWrite:function visitKeyedWrite(ast){return null;},visitLiteralArray:function visitLiteralArray(ast){return null;},visitLiteralMap:function visitLiteralMap(ast){return null;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return null;},visitMethodCall:function visitMethodCall(ast){return visit(this,ast.receiver);},visitPipe:function visitPipe(ast){return null;},visitPrefixNot:function visitPrefixNot(ast){return null;},visitNonNullAssert:function visitNonNullAssert(ast){return null;},visitPropertyRead:function visitPropertyRead(ast){return visit(this,ast.receiver);},visitPropertyWrite:function visitPropertyWrite(ast){return null;},visitQuote:function visitQuote(ast){return null;},visitSafeMethodCall:function visitSafeMethodCall(ast){return visit(this,ast.receiver)||ast;},visitSafePropertyRead:function visitSafePropertyRead(ast){return visit(this,ast.receiver)||ast;}});};// Returns true of the AST includes a method or a pipe indicating that, if the
// expression is used as the target of a safe property or method access then
// the expression should be stored into a temporary variable.
_AstToIrVisitor.prototype.needsTemporary=function(ast){var _this=this;var visit=function visit(visitor,ast){return ast&&(_this._nodeMap.get(ast)||ast).visit(visitor);};var visitSome=function visitSome(visitor,ast){return ast.some(function(ast){return visit(visitor,ast);});};return ast.visit({visitBinary:function visitBinary(ast){return visit(this,ast.left)||visit(this,ast.right);},visitChain:function visitChain(ast){return false;},visitConditional:function visitConditional(ast){return visit(this,ast.condition)||visit(this,ast.trueExp)||visit(this,ast.falseExp);},visitFunctionCall:function visitFunctionCall(ast){return true;},visitImplicitReceiver:function visitImplicitReceiver(ast){return false;},visitInterpolation:function visitInterpolation(ast){return visitSome(this,ast.expressions);},visitKeyedRead:function visitKeyedRead(ast){return false;},visitKeyedWrite:function visitKeyedWrite(ast){return false;},visitLiteralArray:function visitLiteralArray(ast){return true;},visitLiteralMap:function visitLiteralMap(ast){return true;},visitLiteralPrimitive:function visitLiteralPrimitive(ast){return false;},visitMethodCall:function visitMethodCall(ast){return true;},visitPipe:function visitPipe(ast){return true;},visitPrefixNot:function visitPrefixNot(ast){return visit(this,ast.expression);},visitNonNullAssert:function visitNonNullAssert(ast){return visit(this,ast.expression);},visitPropertyRead:function visitPropertyRead(ast){return false;},visitPropertyWrite:function visitPropertyWrite(ast){return false;},visitQuote:function visitQuote(ast){return false;},visitSafeMethodCall:function visitSafeMethodCall(ast){return true;},visitSafePropertyRead:function visitSafePropertyRead(ast){return false;}});};_AstToIrVisitor.prototype.allocateTemporary=function(){var tempNumber=this._currentTemporary++;this.temporaryCount=Math.max(this._currentTemporary,this.temporaryCount);return new ReadVarExpr(temporaryName(this.bindingId,tempNumber));};_AstToIrVisitor.prototype.releaseTemporary=function(temporary){this._currentTemporary--;if(temporary.name!=temporaryName(this.bindingId,this._currentTemporary)){throw new Error("Temporary "+temporary.name+" released out of order");}};/**
         * Creates an absolute `ParseSourceSpan` from the relative `ParseSpan`.
         *
         * `ParseSpan` objects are relative to the start of the expression.
         * This method converts these to full `ParseSourceSpan` objects that
         * show where the span is within the overall source file.
         *
         * @param span the relative span to convert.
         * @returns a `ParseSourceSpan` for the given span or null if no
         * `baseSourceSpan` was provided to this class.
         */_AstToIrVisitor.prototype.convertSourceSpan=function(span){if(this.baseSourceSpan){var start=this.baseSourceSpan.start.moveBy(span.start);var end=this.baseSourceSpan.start.moveBy(span.end);return new ParseSourceSpan(start,end);}else{return null;}};/** Adds the name of an AST to the list of implicit receiver accesses. */_AstToIrVisitor.prototype.addImplicitReceiverAccess=function(name){if(this.implicitReceiverAccesses){this.implicitReceiverAccesses.add(name);}};return _AstToIrVisitor;}();function flattenStatements(arg,output){if(Array.isArray(arg)){arg.forEach(function(entry){return flattenStatements(entry,output);});}else{output.push(arg);}}var DefaultLocalResolver=/** @class */function(){function DefaultLocalResolver(){}DefaultLocalResolver.prototype.notifyImplicitReceiverUse=function(){};DefaultLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){return EventHandlerVars.event;}return null;};return DefaultLocalResolver;}();function createCurrValueExpr(bindingId){return variable("currVal_"+bindingId);// fix syntax highlighting: `
}function createPreventDefaultVar(bindingId){return variable("pd_"+bindingId);}function convertStmtIntoExpression(stmt){if(stmt instanceof ExpressionStatement){return stmt.expr;}else if(stmt instanceof ReturnStatement){return stmt.value;}return null;}var BuiltinFunctionCall=/** @class */function(_super){__extends(BuiltinFunctionCall,_super);function BuiltinFunctionCall(span,sourceSpan,args,converter){var _this=_super.call(this,span,sourceSpan,null,args)||this;_this.args=args;_this.converter=converter;return _this;}return BuiltinFunctionCall;}(FunctionCall);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This file is a port of shadowCSS from webcomponents.js to TypeScript.
     *
     * Please make sure to keep to edits in sync with the source file.
     *
     * Source:
     * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js
     *
     * The original file level comment is reproduced below
     */ /*
      This is a limited shim for ShadowDOM css styling.
      https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles

      The intention here is to support only the styling features which can be
      relatively simply implemented. The goal is to allow users to avoid the
      most obvious pitfalls and do so without compromising performance significantly.
      For ShadowDOM styling that's not covered here, a set of best practices
      can be provided that should allow users to accomplish more complex styling.

      The following is a list of specific ShadowDOM styling features and a brief
      discussion of the approach used to shim.

      Shimmed features:

      * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host
      element using the :host rule. To shim this feature, the :host styles are
      reformatted and prefixed with a given scope name and promoted to a
      document level stylesheet.
      For example, given a scope name of .foo, a rule like this:

        :host {
            background: red;
          }
        }

      becomes:

        .foo {
          background: red;
        }

      * encapsulation: Styles defined within ShadowDOM, apply only to
      dom inside the ShadowDOM. Polymer uses one of two techniques to implement
      this feature.

      By default, rules are prefixed with the host element tag name
      as a descendant selector. This ensures styling does not leak out of the 'top'
      of the element's ShadowDOM. For example,

      div {
          font-weight: bold;
        }

      becomes:

      x-foo div {
          font-weight: bold;
        }

      becomes:


      Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then
      selectors are scoped by adding an attribute selector suffix to each
      simple selector that contains the host element tag name. Each element
      in the element's ShadowDOM template is also given the scope attribute.
      Thus, these rules match only elements that have the scope attribute.
      For example, given a scope name of x-foo, a rule like this:

        div {
          font-weight: bold;
        }

      becomes:

        div[x-foo] {
          font-weight: bold;
        }

      Note that elements that are dynamically added to a scope must have the scope
      selector added to them manually.

      * upper/lower bound encapsulation: Styles which are defined outside a
      shadowRoot should not cross the ShadowDOM boundary and should not apply
      inside a shadowRoot.

      This styling behavior is not emulated. Some possible ways to do this that
      were rejected due to complexity and/or performance concerns include: (1) reset
      every possible property for every possible selector for a given scope name;
      (2) re-implement css in javascript.

      As an alternative, users should make sure to use selectors
      specific to the scope in which they are working.

      * ::distributed: This behavior is not emulated. It's often not necessary
      to style the contents of a specific insertion point and instead, descendants
      of the host element can be styled selectively. Users can also create an
      extra node around an insertion point and style that node's contents
      via descendent selectors. For example, with a shadowRoot like this:

        <style>
          ::content(div) {
            background: red;
          }
        </style>
        <content></content>

      could become:

        <style>
          / *@polyfill .content-container div * /
          ::content(div) {
            background: red;
          }
        </style>
        <div class="content-container">
          <content></content>
        </div>

      Note the use of @polyfill in the comment above a ShadowDOM specific style
      declaration. This is a directive to the styling shim to use the selector
      in comments in lieu of the next selector when running under polyfill.
    */var ShadowCss=/** @class */function(){function ShadowCss(){this.strictStyling=true;}/*
         * Shim some cssText with the given selector. Returns cssText that can
         * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).
         *
         * When strictStyling is true:
         * - selector is the attribute added to all elements inside the host,
         * - hostSelector is the attribute added to the host itself.
         */ShadowCss.prototype.shimCssText=function(cssText,selector,hostSelector){if(hostSelector===void 0){hostSelector='';}var commentsWithHash=extractCommentsWithHash(cssText);cssText=stripComments(cssText);cssText=this._insertDirectives(cssText);var scopedCssText=this._scopeCssText(cssText,selector,hostSelector);return __spread([scopedCssText],commentsWithHash).join('\n');};ShadowCss.prototype._insertDirectives=function(cssText){cssText=this._insertPolyfillDirectivesInCssText(cssText);return this._insertPolyfillRulesInCssText(cssText);};/*
         * Process styles to convert native ShadowDOM rules that will trip
         * up the css parser; we rely on decorating the stylesheet with inert rules.
         *
         * For example, we convert this rule:
         *
         * polyfill-next-selector { content: ':host menu-item'; }
         * ::content menu-item {
         *
         * to this:
         *
         * scopeName menu-item {
         *
         **/ShadowCss.prototype._insertPolyfillDirectivesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentNextSelectorRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[2]+'{';});};/*
         * Process styles to add rules which will only apply under the polyfill
         *
         * For example, we convert this rule:
         *
         * polyfill-rule {
         *   content: ':host menu-item';
         * ...
         * }
         *
         * to this:
         *
         * scopeName menu-item {...}
         *
         **/ShadowCss.prototype._insertPolyfillRulesInCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
return cssText.replace(_cssContentRuleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var rule=m[0].replace(m[1],'').replace(m[2],'');return m[4]+rule;});};/* Ensure styles are scoped. Pseudo-scoping takes a rule like:
         *
         *  .foo {... }
         *
         *  and converts this to
         *
         *  scopeName .foo { ... }
         */ShadowCss.prototype._scopeCssText=function(cssText,scopeSelector,hostSelector){var unscopedRules=this._extractUnscopedRulesFromCssText(cssText);// replace :host and :host-context -shadowcsshost and -shadowcsshost respectively
cssText=this._insertPolyfillHostInCssText(cssText);cssText=this._convertColonHost(cssText);cssText=this._convertColonHostContext(cssText);cssText=this._convertShadowDOMSelectors(cssText);if(scopeSelector){cssText=this._scopeSelectors(cssText,scopeSelector,hostSelector);}cssText=cssText+'\n'+unscopedRules;return cssText.trim();};/*
         * Process styles to add rules which will only apply under the polyfill
         * and do not process via CSSOM. (CSSOM is destructive to rules on rare
         * occasions, e.g. -webkit-calc on Safari.)
         * For example, we convert this rule:
         *
         * @polyfill-unscoped-rule {
         *   content: 'menu-item';
         * ... }
         *
         * to this:
         *
         * menu-item {...}
         *
         **/ShadowCss.prototype._extractUnscopedRulesFromCssText=function(cssText){// Difference with webcomponents.js: does not handle comments
var r='';var m;_cssContentUnscopedRuleRe.lastIndex=0;while((m=_cssContentUnscopedRuleRe.exec(cssText))!==null){var rule=m[0].replace(m[2],'').replace(m[1],m[4]);r+=rule+'\n\n';}return r;};/*
         * convert a rule like :host(.foo) > .bar { }
         *
         * to
         *
         * .foo<scopeName> > .bar
         */ShadowCss.prototype._convertColonHost=function(cssText){return this._convertColonRule(cssText,_cssColonHostRe,this._colonHostPartReplacer);};/*
         * convert a rule like :host-context(.foo) > .bar { }
         *
         * to
         *
         * .foo<scopeName> > .bar, .foo scopeName > .bar { }
         *
         * and
         *
         * :host-context(.foo:host) .bar { ... }
         *
         * to
         *
         * .foo<scopeName> .bar { ... }
         */ShadowCss.prototype._convertColonHostContext=function(cssText){return this._convertColonRule(cssText,_cssColonHostContextRe,this._colonHostContextPartReplacer);};ShadowCss.prototype._convertColonRule=function(cssText,regExp,partReplacer){// m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule
return cssText.replace(regExp,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}if(m[2]){var parts=m[2].split(',');var r=[];for(var i=0;i<parts.length;i++){var p=parts[i].trim();if(!p)break;r.push(partReplacer(_polyfillHostNoCombinator,p,m[3]));}return r.join(',');}else{return _polyfillHostNoCombinator+m[3];}});};ShadowCss.prototype._colonHostContextPartReplacer=function(host,part,suffix){if(part.indexOf(_polyfillHost)>-1){return this._colonHostPartReplacer(host,part,suffix);}else{return host+part+suffix+', '+part+' '+host+suffix;}};ShadowCss.prototype._colonHostPartReplacer=function(host,part,suffix){return host+part.replace(_polyfillHost,'')+suffix;};/*
         * Convert combinators like ::shadow and pseudo-elements like ::content
         * by replacing with space.
         */ShadowCss.prototype._convertShadowDOMSelectors=function(cssText){return _shadowDOMSelectorsRe.reduce(function(result,pattern){return result.replace(pattern,' ');},cssText);};// change a selector like 'div' to 'name div'
ShadowCss.prototype._scopeSelectors=function(cssText,scopeSelector,hostSelector){var _this=this;return processRules(cssText,function(rule){var selector=rule.selector;var content=rule.content;if(rule.selector[0]!='@'){selector=_this._scopeSelector(rule.selector,scopeSelector,hostSelector,_this.strictStyling);}else if(rule.selector.startsWith('@media')||rule.selector.startsWith('@supports')||rule.selector.startsWith('@page')||rule.selector.startsWith('@document')){content=_this._scopeSelectors(rule.content,scopeSelector,hostSelector);}return new CssRule(selector,content);});};ShadowCss.prototype._scopeSelector=function(selector,scopeSelector,hostSelector,strict){var _this=this;return selector.split(',').map(function(part){return part.trim().split(_shadowDeepSelectors);}).map(function(deepParts){var _a=__read(deepParts),shallowPart=_a[0],otherParts=_a.slice(1);var applyScope=function applyScope(shallowPart){if(_this._selectorNeedsScoping(shallowPart,scopeSelector)){return strict?_this._applyStrictSelectorScope(shallowPart,scopeSelector,hostSelector):_this._applySelectorScope(shallowPart,scopeSelector,hostSelector);}else{return shallowPart;}};return __spread([applyScope(shallowPart)],otherParts).join(' ');}).join(', ');};ShadowCss.prototype._selectorNeedsScoping=function(selector,scopeSelector){var re=this._makeScopeMatcher(scopeSelector);return!re.test(selector);};ShadowCss.prototype._makeScopeMatcher=function(scopeSelector){var lre=/\[/g;var rre=/\]/g;scopeSelector=scopeSelector.replace(lre,'\\[').replace(rre,'\\]');return new RegExp('^('+scopeSelector+')'+_selectorReSuffix,'m');};ShadowCss.prototype._applySelectorScope=function(selector,scopeSelector,hostSelector){// Difference from webcomponents.js: scopeSelector could not be an array
return this._applySimpleSelectorScope(selector,scopeSelector,hostSelector);};// scope via name and [is=name]
ShadowCss.prototype._applySimpleSelectorScope=function(selector,scopeSelector,hostSelector){// In Android browser, the lastIndex is not reset when the regex is used in String.replace()
_polyfillHostRe.lastIndex=0;if(_polyfillHostRe.test(selector)){var replaceBy_1=this.strictStyling?"["+hostSelector+"]":scopeSelector;return selector.replace(_polyfillHostNoCombinatorRe,function(hnc,selector){return selector.replace(/([^:]*)(:*)(.*)/,function(_,before,colon,after){return before+replaceBy_1+colon+after;});}).replace(_polyfillHostRe,replaceBy_1+' ');}return scopeSelector+' '+selector;};// return a selector with [name] suffix on each simple selector
// e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */
ShadowCss.prototype._applyStrictSelectorScope=function(selector,scopeSelector,hostSelector){var _this=this;var isRe=/\[is=([^\]]*)\]/g;scopeSelector=scopeSelector.replace(isRe,function(_){var parts=[];for(var _i=1;_i<arguments.length;_i++){parts[_i-1]=arguments[_i];}return parts[0];});var attrName='['+scopeSelector+']';var _scopeSelectorPart=function _scopeSelectorPart(p){var scopedP=p.trim();if(!scopedP){return'';}if(p.indexOf(_polyfillHostNoCombinator)>-1){scopedP=_this._applySimpleSelectorScope(p,scopeSelector,hostSelector);}else{// remove :host since it should be unnecessary
var t=p.replace(_polyfillHostRe,'');if(t.length>0){var matches=t.match(/([^:]*)(:*)(.*)/);if(matches){scopedP=matches[1]+attrName+matches[2]+matches[3];}}}return scopedP;};var safeContent=new SafeSelector(selector);selector=safeContent.content();var scopedSelector='';var startIndex=0;var res;var sep=/( |>|\+|~(?!=))\s*/g;// If a selector appears before :host it should not be shimmed as it
// matches on ancestor elements and not on elements in the host's shadow
// `:host-context(div)` is transformed to
// `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`
// the `div` is not part of the component in the 2nd selectors and should not be scoped.
// Historically `component-tag:host` was matching the component so we also want to preserve
// this behavior to avoid breaking legacy apps (it should not match).
// The behavior should be:
// - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)
// - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a
//   `:host-context(tag)`)
var hasHost=selector.indexOf(_polyfillHostNoCombinator)>-1;// Only scope parts after the first `-shadowcsshost-no-combinator` when it is present
var shouldScope=!hasHost;while((res=sep.exec(selector))!==null){var separator=res[1];var part_1=selector.slice(startIndex,res.index).trim();shouldScope=shouldScope||part_1.indexOf(_polyfillHostNoCombinator)>-1;var scopedPart=shouldScope?_scopeSelectorPart(part_1):part_1;scopedSelector+=scopedPart+" "+separator+" ";startIndex=sep.lastIndex;}var part=selector.substring(startIndex);shouldScope=shouldScope||part.indexOf(_polyfillHostNoCombinator)>-1;scopedSelector+=shouldScope?_scopeSelectorPart(part):part;// replace the placeholders with their original values
return safeContent.restore(scopedSelector);};ShadowCss.prototype._insertPolyfillHostInCssText=function(selector){return selector.replace(_colonHostContextRe,_polyfillHostContext).replace(_colonHostRe,_polyfillHost);};return ShadowCss;}();var SafeSelector=/** @class */function(){function SafeSelector(selector){var _this=this;this.placeholders=[];this.index=0;// Replaces attribute selectors with placeholders.
// The WS in [attr="va lue"] would otherwise be interpreted as a selector separator.
selector=selector.replace(/(\[[^\]]*\])/g,function(_,keep){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(keep);_this.index++;return replaceBy;});// Replaces the expression in `:nth-child(2n + 1)` with a placeholder.
// WS and "+" would otherwise be interpreted as selector separators.
this._content=selector.replace(/(:nth-[-\w]+)(\([^)]+\))/g,function(_,pseudo,exp){var replaceBy="__ph-"+_this.index+"__";_this.placeholders.push(exp);_this.index++;return pseudo+replaceBy;});}SafeSelector.prototype.restore=function(content){var _this=this;return content.replace(/__ph-(\d+)__/g,function(ph,index){return _this.placeholders[+index];});};SafeSelector.prototype.content=function(){return this._content;};return SafeSelector;}();var _cssContentNextSelectorRe=/polyfill-next-selector[^}]*content:[\s]*?(['"])(.*?)\1[;\s]*}([^{]*?){/gim;var _cssContentRuleRe=/(polyfill-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _cssContentUnscopedRuleRe=/(polyfill-unscoped-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim;var _polyfillHost='-shadowcsshost';// note: :host-context pre-processed to -shadowcsshostcontext.
var _polyfillHostContext='-shadowcsscontext';var _parenSuffix=')(?:\\(('+'(?:\\([^)(]*\\)|[^)(]*)+?'+')\\))?([^,{]*)';var _cssColonHostRe=new RegExp('('+_polyfillHost+_parenSuffix,'gim');var _cssColonHostContextRe=new RegExp('('+_polyfillHostContext+_parenSuffix,'gim');var _polyfillHostNoCombinator=_polyfillHost+'-no-combinator';var _polyfillHostNoCombinatorRe=/-shadowcsshost-no-combinator([^\s]*)/;var _shadowDOMSelectorsRe=[/::shadow/g,/::content/g,// Deprecated selectors
/\/shadow-deep\//g,/\/shadow\//g];// The deep combinator is deprecated in the CSS spec
// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.
// see https://github.com/angular/angular/pull/17677
var _shadowDeepSelectors=/(?:>>>)|(?:\/deep\/)|(?:::ng-deep)/g;var _selectorReSuffix='([>\\s~+\[.,{:][\\s\\S]*)?$';var _polyfillHostRe=/-shadowcsshost/gim;var _colonHostRe=/:host/gim;var _colonHostContextRe=/:host-context/gim;var _commentRe=/\/\*\s*[\s\S]*?\*\//g;function stripComments(input){return input.replace(_commentRe,'');}var _commentWithHashRe=/\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;function extractCommentsWithHash(input){return input.match(_commentWithHashRe)||[];}var _ruleRe=/(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;var _curlyRe=/([{}])/g;var OPEN_CURLY='{';var CLOSE_CURLY='}';var BLOCK_PLACEHOLDER='%BLOCK%';var CssRule=/** @class */function(){function CssRule(selector,content){this.selector=selector;this.content=content;}return CssRule;}();function processRules(input,ruleCallback){var inputWithEscapedBlocks=escapeBlocks(input);var nextBlockIndex=0;return inputWithEscapedBlocks.escapedString.replace(_ruleRe,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var selector=m[2];var content='';var suffix=m[4];var contentPrefix='';if(suffix&&suffix.startsWith('{'+BLOCK_PLACEHOLDER)){content=inputWithEscapedBlocks.blocks[nextBlockIndex++];suffix=suffix.substring(BLOCK_PLACEHOLDER.length+1);contentPrefix='{';}var rule=ruleCallback(new CssRule(selector,content));return""+m[1]+rule.selector+m[3]+contentPrefix+rule.content+suffix;});}var StringWithEscapedBlocks=/** @class */function(){function StringWithEscapedBlocks(escapedString,blocks){this.escapedString=escapedString;this.blocks=blocks;}return StringWithEscapedBlocks;}();function escapeBlocks(input){var inputParts=input.split(_curlyRe);var resultParts=[];var escapedBlocks=[];var bracketCount=0;var currentBlockParts=[];for(var partIndex=0;partIndex<inputParts.length;partIndex++){var part=inputParts[partIndex];if(part==CLOSE_CURLY){bracketCount--;}if(bracketCount>0){currentBlockParts.push(part);}else{if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);currentBlockParts=[];}resultParts.push(part);}if(part==OPEN_CURLY){bracketCount++;}}if(currentBlockParts.length>0){escapedBlocks.push(currentBlockParts.join(''));resultParts.push(BLOCK_PLACEHOLDER);}return new StringWithEscapedBlocks(resultParts.join(''),escapedBlocks);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var COMPONENT_VARIABLE='%COMP%';var HOST_ATTR="_nghost-"+COMPONENT_VARIABLE;var CONTENT_ATTR="_ngcontent-"+COMPONENT_VARIABLE;var StylesCompileDependency=/** @class */function(){function StylesCompileDependency(name,moduleUrl,setValue){this.name=name;this.moduleUrl=moduleUrl;this.setValue=setValue;}return StylesCompileDependency;}();var CompiledStylesheet=/** @class */function(){function CompiledStylesheet(outputCtx,stylesVar,dependencies,isShimmed,meta){this.outputCtx=outputCtx;this.stylesVar=stylesVar;this.dependencies=dependencies;this.isShimmed=isShimmed;this.meta=meta;}return CompiledStylesheet;}();var StyleCompiler=/** @class */function(){function StyleCompiler(_urlResolver){this._urlResolver=_urlResolver;this._shadowCss=new ShadowCss();}StyleCompiler.prototype.compileComponent=function(outputCtx,comp){var template=comp.template;return this._compileStyles(outputCtx,comp,new CompileStylesheetMetadata({styles:template.styles,styleUrls:template.styleUrls,moduleUrl:identifierModuleUrl(comp.type)}),this.needsStyleShim(comp),true);};StyleCompiler.prototype.compileStyles=function(outputCtx,comp,stylesheet,shim){if(shim===void 0){shim=this.needsStyleShim(comp);}return this._compileStyles(outputCtx,comp,stylesheet,shim,false);};StyleCompiler.prototype.needsStyleShim=function(comp){return comp.template.encapsulation===ViewEncapsulation.Emulated;};StyleCompiler.prototype._compileStyles=function(outputCtx,comp,stylesheet,shim,isComponentStylesheet){var _this=this;var styleExpressions=stylesheet.styles.map(function(plainStyle){return literal(_this._shimIfNeeded(plainStyle,shim));});var dependencies=[];stylesheet.styleUrls.forEach(function(styleUrl){var exprIndex=styleExpressions.length;// Note: This placeholder will be filled later.
styleExpressions.push(null);dependencies.push(new StylesCompileDependency(getStylesVarName(null),styleUrl,function(value){return styleExpressions[exprIndex]=outputCtx.importExpr(value);}));});// styles variable contains plain strings and arrays of other styles arrays (recursive),
// so we set its type to dynamic.
var stylesVar=getStylesVarName(isComponentStylesheet?comp:null);var stmt=variable(stylesVar).set(literalArr(styleExpressions,new ArrayType(DYNAMIC_TYPE,[TypeModifier.Const]))).toDeclStmt(null,isComponentStylesheet?[exports.StmtModifier.Final]:[exports.StmtModifier.Final,exports.StmtModifier.Exported]);outputCtx.statements.push(stmt);return new CompiledStylesheet(outputCtx,stylesVar,dependencies,shim,stylesheet);};StyleCompiler.prototype._shimIfNeeded=function(style,shim){return shim?this._shadowCss.shimCssText(style,CONTENT_ATTR,HOST_ATTR):style;};return StyleCompiler;}();function getStylesVarName(component){var result="styles";if(component){result+="_"+identifierName(component.type);}return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A path is an ordered set of elements. Typically a path is to  a
     * particular offset in a source file. The head of the list is the top
     * most node. The tail is the node that contains the offset directly.
     *
     * For example, the expression `a + b + c` might have an ast that looks
     * like:
     *     +
     *    / \
     *   a   +
     *      / \
     *     b   c
     *
     * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,
     * 'c' at 9-10]` and the path the node at offset 1 would be
     * `['+' at 1-10, 'a' at 1-2]`.
     */var AstPath=/** @class */function(){function AstPath(path,position){if(position===void 0){position=-1;}this.path=path;this.position=position;}Object.defineProperty(AstPath.prototype,"empty",{get:function get(){return!this.path||!this.path.length;},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"head",{get:function get(){return this.path[0];},enumerable:true,configurable:true});Object.defineProperty(AstPath.prototype,"tail",{get:function get(){return this.path[this.path.length-1];},enumerable:true,configurable:true});AstPath.prototype.parentOf=function(node){return node&&this.path[this.path.indexOf(node)-1];};AstPath.prototype.childOf=function(node){return this.path[this.path.indexOf(node)+1];};AstPath.prototype.first=function(ctor){for(var i=this.path.length-1;i>=0;i--){var item=this.path[i];if(item instanceof ctor)return item;}};AstPath.prototype.push=function(node){this.path.push(node);};AstPath.prototype.pop=function(){return this.path.pop();};return AstPath;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NodeWithI18n=/** @class */function(){function NodeWithI18n(sourceSpan,i18n){this.sourceSpan=sourceSpan;this.i18n=i18n;}return NodeWithI18n;}();var Text$3=/** @class */function(_super){__extends(Text,_super);function Text(value,sourceSpan,i18n){var _this=_super.call(this,sourceSpan,i18n)||this;_this.value=value;return _this;}Text.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return Text;}(NodeWithI18n);var Expansion=/** @class */function(_super){__extends(Expansion,_super);function Expansion(switchValue,type,cases,sourceSpan,switchValueSourceSpan,i18n){var _this=_super.call(this,sourceSpan,i18n)||this;_this.switchValue=switchValue;_this.type=type;_this.cases=cases;_this.switchValueSourceSpan=switchValueSourceSpan;return _this;}Expansion.prototype.visit=function(visitor,context){return visitor.visitExpansion(this,context);};return Expansion;}(NodeWithI18n);var ExpansionCase=/** @class */function(){function ExpansionCase(value,expression,sourceSpan,valueSourceSpan,expSourceSpan){this.value=value;this.expression=expression;this.sourceSpan=sourceSpan;this.valueSourceSpan=valueSourceSpan;this.expSourceSpan=expSourceSpan;}ExpansionCase.prototype.visit=function(visitor,context){return visitor.visitExpansionCase(this,context);};return ExpansionCase;}();var Attribute=/** @class */function(_super){__extends(Attribute,_super);function Attribute(name,value,sourceSpan,valueSpan,i18n){var _this=_super.call(this,sourceSpan,i18n)||this;_this.name=name;_this.value=value;_this.valueSpan=valueSpan;return _this;}Attribute.prototype.visit=function(visitor,context){return visitor.visitAttribute(this,context);};return Attribute;}(NodeWithI18n);var Element$1=/** @class */function(_super){__extends(Element,_super);function Element(name,attrs,children,sourceSpan,startSourceSpan,endSourceSpan,i18n){if(startSourceSpan===void 0){startSourceSpan=null;}if(endSourceSpan===void 0){endSourceSpan=null;}var _this=_super.call(this,sourceSpan,i18n)||this;_this.name=name;_this.attrs=attrs;_this.children=children;_this.startSourceSpan=startSourceSpan;_this.endSourceSpan=endSourceSpan;return _this;}Element.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return Element;}(NodeWithI18n);var Comment=/** @class */function(){function Comment(value,sourceSpan){this.value=value;this.sourceSpan=sourceSpan;}Comment.prototype.visit=function(visitor,context){return visitor.visitComment(this,context);};return Comment;}();function visitAll$1(visitor,nodes,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};nodes.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}var RecursiveVisitor$1=/** @class */function(){function RecursiveVisitor(){}RecursiveVisitor.prototype.visitElement=function(ast,context){this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.children);});};RecursiveVisitor.prototype.visitAttribute=function(ast,context){};RecursiveVisitor.prototype.visitText=function(ast,context){};RecursiveVisitor.prototype.visitComment=function(ast,context){};RecursiveVisitor.prototype.visitExpansion=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.cases);});};RecursiveVisitor.prototype.visitExpansionCase=function(ast,context){};RecursiveVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children)results.push(visitAll$1(t,children,context));}cb(visit);return Array.prototype.concat.apply([],results);};return RecursiveVisitor;}();function spanOf(ast){var start=ast.sourceSpan.start.offset;var end=ast.sourceSpan.end.offset;if(ast instanceof Element$1){if(ast.endSourceSpan){end=ast.endSourceSpan.end.offset;}else if(ast.children&&ast.children.length){end=spanOf(ast.children[ast.children.length-1]).end;}}return{start:start,end:end};}function findNode(nodes,position){var path=[];var visitor=new(/** @class */function(_super){__extends(class_1,_super);function class_1(){return _super!==null&&_super.apply(this,arguments)||this;}class_1.prototype.visit=function(ast,context){var span=spanOf(ast);if(span.start<=position&&position<span.end){path.push(ast);}else{// Returning a value here will result in the children being skipped.
return true;}};return class_1;}(RecursiveVisitor$1))();visitAll$1(visitor,nodes);return new AstPath(path,position);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TokenType;(function(TokenType){TokenType[TokenType["TAG_OPEN_START"]=0]="TAG_OPEN_START";TokenType[TokenType["TAG_OPEN_END"]=1]="TAG_OPEN_END";TokenType[TokenType["TAG_OPEN_END_VOID"]=2]="TAG_OPEN_END_VOID";TokenType[TokenType["TAG_CLOSE"]=3]="TAG_CLOSE";TokenType[TokenType["TEXT"]=4]="TEXT";TokenType[TokenType["ESCAPABLE_RAW_TEXT"]=5]="ESCAPABLE_RAW_TEXT";TokenType[TokenType["RAW_TEXT"]=6]="RAW_TEXT";TokenType[TokenType["COMMENT_START"]=7]="COMMENT_START";TokenType[TokenType["COMMENT_END"]=8]="COMMENT_END";TokenType[TokenType["CDATA_START"]=9]="CDATA_START";TokenType[TokenType["CDATA_END"]=10]="CDATA_END";TokenType[TokenType["ATTR_NAME"]=11]="ATTR_NAME";TokenType[TokenType["ATTR_QUOTE"]=12]="ATTR_QUOTE";TokenType[TokenType["ATTR_VALUE"]=13]="ATTR_VALUE";TokenType[TokenType["DOC_TYPE"]=14]="DOC_TYPE";TokenType[TokenType["EXPANSION_FORM_START"]=15]="EXPANSION_FORM_START";TokenType[TokenType["EXPANSION_CASE_VALUE"]=16]="EXPANSION_CASE_VALUE";TokenType[TokenType["EXPANSION_CASE_EXP_START"]=17]="EXPANSION_CASE_EXP_START";TokenType[TokenType["EXPANSION_CASE_EXP_END"]=18]="EXPANSION_CASE_EXP_END";TokenType[TokenType["EXPANSION_FORM_END"]=19]="EXPANSION_FORM_END";TokenType[TokenType["EOF"]=20]="EOF";})(TokenType||(TokenType={}));var Token=/** @class */function(){function Token(type,parts,sourceSpan){this.type=type;this.parts=parts;this.sourceSpan=sourceSpan;}return Token;}();var TokenError=/** @class */function(_super){__extends(TokenError,_super);function TokenError(errorMsg,tokenType,span){var _this=_super.call(this,span,errorMsg)||this;_this.tokenType=tokenType;return _this;}return TokenError;}(ParseError);var TokenizeResult=/** @class */function(){function TokenizeResult(tokens,errors){this.tokens=tokens;this.errors=errors;}return TokenizeResult;}();function tokenize(source,url,getTagDefinition,options){if(options===void 0){options={};}return new _Tokenizer(new ParseSourceFile(source,url),getTagDefinition,options).tokenize();}var _CR_OR_CRLF_REGEXP=/\r\n?/g;function _unexpectedCharacterErrorMsg(charCode){var _char=charCode===$EOF?'EOF':String.fromCharCode(charCode);return"Unexpected character \""+_char+"\"";}function _unknownEntityErrorMsg(entitySrc){return"Unknown entity \""+entitySrc+"\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax";}var _ControlFlowError=/** @class */function(){function _ControlFlowError(error){this.error=error;}return _ControlFlowError;}();// See http://www.w3.org/TR/html51/syntax.html#writing
var _Tokenizer=/** @class */function(){/**
         * @param _file The html source file being tokenized.
         * @param _getTagDefinition A function that will retrieve a tag definition for a given tag name.
         * @param options Configuration of the tokenization.
         */function _Tokenizer(_file,_getTagDefinition,options){this._getTagDefinition=_getTagDefinition;this._currentTokenStart=null;this._currentTokenType=null;this._expansionCaseStack=[];this._inInterpolation=false;this.tokens=[];this.errors=[];this._tokenizeIcu=options.tokenizeExpansionForms||false;this._interpolationConfig=options.interpolationConfig||DEFAULT_INTERPOLATION_CONFIG;this._leadingTriviaCodePoints=options.leadingTriviaChars&&options.leadingTriviaChars.map(function(c){return c.codePointAt(0)||0;});var range=options.range||{endPos:_file.content.length,startPos:0,startLine:0,startCol:0};this._cursor=options.escapedString?new EscapedCharacterCursor(_file,range):new PlainCharacterCursor(_file,range);this._preserveLineEndings=options.preserveLineEndings||false;try{this._cursor.init();}catch(e){this.handleError(e);}}_Tokenizer.prototype._processCarriageReturns=function(content){if(this._preserveLineEndings){return content;}// http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream
// In order to keep the original position in the source, we can not
// pre-process it.
// Instead CRs are processed right before instantiating the tokens.
return content.replace(_CR_OR_CRLF_REGEXP,'\n');};_Tokenizer.prototype.tokenize=function(){while(this._cursor.peek()!==$EOF){var start=this._cursor.clone();try{if(this._attemptCharCode($LT)){if(this._attemptCharCode($BANG)){if(this._attemptCharCode($LBRACKET)){this._consumeCdata(start);}else if(this._attemptCharCode($MINUS)){this._consumeComment(start);}else{this._consumeDocType(start);}}else if(this._attemptCharCode($SLASH)){this._consumeTagClose(start);}else{this._consumeTagOpen(start);}}else if(!(this._tokenizeIcu&&this._tokenizeExpansionForm())){this._consumeText();}}catch(e){this.handleError(e);}}this._beginToken(TokenType.EOF);this._endToken([]);return new TokenizeResult(mergeTextTokens(this.tokens),this.errors);};/**
         * @returns whether an ICU token has been created
         * @internal
         */_Tokenizer.prototype._tokenizeExpansionForm=function(){if(this.isExpansionFormStart()){this._consumeExpansionFormStart();return true;}if(isExpansionCaseStart(this._cursor.peek())&&this._isInExpansionForm()){this._consumeExpansionCaseStart();return true;}if(this._cursor.peek()===$RBRACE){if(this._isInExpansionCase()){this._consumeExpansionCaseEnd();return true;}if(this._isInExpansionForm()){this._consumeExpansionFormEnd();return true;}}return false;};_Tokenizer.prototype._beginToken=function(type,start){if(start===void 0){start=this._cursor.clone();}this._currentTokenStart=start;this._currentTokenType=type;};_Tokenizer.prototype._endToken=function(parts,end){if(this._currentTokenStart===null){throw new TokenError('Programming error - attempted to end a token when there was no start to the token',this._currentTokenType,this._cursor.getSpan(end));}if(this._currentTokenType===null){throw new TokenError('Programming error - attempted to end a token which has no token type',null,this._cursor.getSpan(this._currentTokenStart));}var token=new Token(this._currentTokenType,parts,this._cursor.getSpan(this._currentTokenStart,this._leadingTriviaCodePoints));this.tokens.push(token);this._currentTokenStart=null;this._currentTokenType=null;return token;};_Tokenizer.prototype._createError=function(msg,span){if(this._isInExpansionForm()){msg+=" (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)";}var error=new TokenError(msg,this._currentTokenType,span);this._currentTokenStart=null;this._currentTokenType=null;return new _ControlFlowError(error);};_Tokenizer.prototype.handleError=function(e){if(e instanceof CursorError){e=this._createError(e.msg,this._cursor.getSpan(e.cursor));}if(e instanceof _ControlFlowError){this.errors.push(e.error);}else{throw e;}};_Tokenizer.prototype._attemptCharCode=function(charCode){if(this._cursor.peek()===charCode){this._cursor.advance();return true;}return false;};_Tokenizer.prototype._attemptCharCodeCaseInsensitive=function(charCode){if(compareCharCodeCaseInsensitive(this._cursor.peek(),charCode)){this._cursor.advance();return true;}return false;};_Tokenizer.prototype._requireCharCode=function(charCode){var location=this._cursor.clone();if(!this._attemptCharCode(charCode)){throw this._createError(_unexpectedCharacterErrorMsg(this._cursor.peek()),this._cursor.getSpan(location));}};_Tokenizer.prototype._attemptStr=function(chars){var len=chars.length;if(this._cursor.charsLeft()<len){return false;}var initialPosition=this._cursor.clone();for(var i=0;i<len;i++){if(!this._attemptCharCode(chars.charCodeAt(i))){// If attempting to parse the string fails, we want to reset the parser
// to where it was before the attempt
this._cursor=initialPosition;return false;}}return true;};_Tokenizer.prototype._attemptStrCaseInsensitive=function(chars){for(var i=0;i<chars.length;i++){if(!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))){return false;}}return true;};_Tokenizer.prototype._requireStr=function(chars){var location=this._cursor.clone();if(!this._attemptStr(chars)){throw this._createError(_unexpectedCharacterErrorMsg(this._cursor.peek()),this._cursor.getSpan(location));}};_Tokenizer.prototype._attemptCharCodeUntilFn=function(predicate){while(!predicate(this._cursor.peek())){this._cursor.advance();}};_Tokenizer.prototype._requireCharCodeUntilFn=function(predicate,len){var start=this._cursor.clone();this._attemptCharCodeUntilFn(predicate);if(this._cursor.diff(start)<len){throw this._createError(_unexpectedCharacterErrorMsg(this._cursor.peek()),this._cursor.getSpan(start));}};_Tokenizer.prototype._attemptUntilChar=function(_char2){while(this._cursor.peek()!==_char2){this._cursor.advance();}};_Tokenizer.prototype._readChar=function(decodeEntities){if(decodeEntities&&this._cursor.peek()===$AMPERSAND){return this._decodeEntity();}else{// Don't rely upon reading directly from `_input` as the actual char value
// may have been generated from an escape sequence.
var _char3=String.fromCodePoint(this._cursor.peek());this._cursor.advance();return _char3;}};_Tokenizer.prototype._decodeEntity=function(){var start=this._cursor.clone();this._cursor.advance();if(this._attemptCharCode($HASH)){var isHex=this._attemptCharCode($x)||this._attemptCharCode($X);var codeStart=this._cursor.clone();this._attemptCharCodeUntilFn(isDigitEntityEnd);if(this._cursor.peek()!=$SEMICOLON){throw this._createError(_unexpectedCharacterErrorMsg(this._cursor.peek()),this._cursor.getSpan());}var strNum=this._cursor.getChars(codeStart);this._cursor.advance();try{var charCode=parseInt(strNum,isHex?16:10);return String.fromCharCode(charCode);}catch(_a){throw this._createError(_unknownEntityErrorMsg(this._cursor.getChars(start)),this._cursor.getSpan());}}else{var nameStart=this._cursor.clone();this._attemptCharCodeUntilFn(isNamedEntityEnd);if(this._cursor.peek()!=$SEMICOLON){this._cursor=nameStart;return'&';}var name_1=this._cursor.getChars(nameStart);this._cursor.advance();var _char4=NAMED_ENTITIES[name_1];if(!_char4){throw this._createError(_unknownEntityErrorMsg(name_1),this._cursor.getSpan(start));}return _char4;}};_Tokenizer.prototype._consumeRawText=function(decodeEntities,endMarkerPredicate){this._beginToken(decodeEntities?TokenType.ESCAPABLE_RAW_TEXT:TokenType.RAW_TEXT);var parts=[];while(true){var tagCloseStart=this._cursor.clone();var foundEndMarker=endMarkerPredicate();this._cursor=tagCloseStart;if(foundEndMarker){break;}parts.push(this._readChar(decodeEntities));}return this._endToken([this._processCarriageReturns(parts.join(''))]);};_Tokenizer.prototype._consumeComment=function(start){var _this=this;this._beginToken(TokenType.COMMENT_START,start);this._requireCharCode($MINUS);this._endToken([]);this._consumeRawText(false,function(){return _this._attemptStr('-->');});this._beginToken(TokenType.COMMENT_END);this._requireStr('-->');this._endToken([]);};_Tokenizer.prototype._consumeCdata=function(start){var _this=this;this._beginToken(TokenType.CDATA_START,start);this._requireStr('CDATA[');this._endToken([]);this._consumeRawText(false,function(){return _this._attemptStr(']]>');});this._beginToken(TokenType.CDATA_END);this._requireStr(']]>');this._endToken([]);};_Tokenizer.prototype._consumeDocType=function(start){this._beginToken(TokenType.DOC_TYPE,start);var contentStart=this._cursor.clone();this._attemptUntilChar($GT);var content=this._cursor.getChars(contentStart);this._cursor.advance();this._endToken([content]);};_Tokenizer.prototype._consumePrefixAndName=function(){var nameOrPrefixStart=this._cursor.clone();var prefix='';while(this._cursor.peek()!==$COLON&&!isPrefixEnd(this._cursor.peek())){this._cursor.advance();}var nameStart;if(this._cursor.peek()===$COLON){prefix=this._cursor.getChars(nameOrPrefixStart);this._cursor.advance();nameStart=this._cursor.clone();}else{nameStart=nameOrPrefixStart;}this._requireCharCodeUntilFn(isNameEnd,prefix===''?0:1);var name=this._cursor.getChars(nameStart);return[prefix,name];};_Tokenizer.prototype._consumeTagOpen=function(start){var tagName;var prefix;var openTagToken;var tokensBeforeTagOpen=this.tokens.length;var innerStart=this._cursor.clone();try{if(!isAsciiLetter(this._cursor.peek())){throw this._createError(_unexpectedCharacterErrorMsg(this._cursor.peek()),this._cursor.getSpan(start));}openTagToken=this._consumeTagOpenStart(start);prefix=openTagToken.parts[0];tagName=openTagToken.parts[1];this._attemptCharCodeUntilFn(isNotWhitespace);while(this._cursor.peek()!==$SLASH&&this._cursor.peek()!==$GT){this._consumeAttributeName();this._attemptCharCodeUntilFn(isNotWhitespace);if(this._attemptCharCode($EQ)){this._attemptCharCodeUntilFn(isNotWhitespace);this._consumeAttributeValue();}this._attemptCharCodeUntilFn(isNotWhitespace);}this._consumeTagOpenEnd();}catch(e){if(e instanceof _ControlFlowError){// When the start tag is invalid (including invalid "attributes"), assume we want a "<"
this._cursor=innerStart;if(openTagToken){this.tokens.length=tokensBeforeTagOpen;}// Back to back text tokens are merged at the end
this._beginToken(TokenType.TEXT,start);this._endToken(['<']);return;}throw e;}var contentTokenType=this._getTagDefinition(tagName).contentType;if(contentTokenType===exports.TagContentType.RAW_TEXT){this._consumeRawTextWithTagClose(prefix,tagName,false);}else if(contentTokenType===exports.TagContentType.ESCAPABLE_RAW_TEXT){this._consumeRawTextWithTagClose(prefix,tagName,true);}};_Tokenizer.prototype._consumeRawTextWithTagClose=function(prefix,tagName,decodeEntities){var _this=this;var textToken=this._consumeRawText(decodeEntities,function(){if(!_this._attemptCharCode($LT))return false;if(!_this._attemptCharCode($SLASH))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);if(!_this._attemptStrCaseInsensitive(tagName))return false;_this._attemptCharCodeUntilFn(isNotWhitespace);return _this._attemptCharCode($GT);});this._beginToken(TokenType.TAG_CLOSE);this._requireCharCodeUntilFn(function(code){return code===$GT;},3);this._cursor.advance();// Consume the `>`
this._endToken([prefix,tagName]);};_Tokenizer.prototype._consumeTagOpenStart=function(start){this._beginToken(TokenType.TAG_OPEN_START,start);var parts=this._consumePrefixAndName();return this._endToken(parts);};_Tokenizer.prototype._consumeAttributeName=function(){var attrNameStart=this._cursor.peek();if(attrNameStart===$SQ||attrNameStart===$DQ){throw this._createError(_unexpectedCharacterErrorMsg(attrNameStart),this._cursor.getSpan());}this._beginToken(TokenType.ATTR_NAME);var prefixAndName=this._consumePrefixAndName();this._endToken(prefixAndName);};_Tokenizer.prototype._consumeAttributeValue=function(){var value;if(this._cursor.peek()===$SQ||this._cursor.peek()===$DQ){this._beginToken(TokenType.ATTR_QUOTE);var quoteChar=this._cursor.peek();this._cursor.advance();this._endToken([String.fromCodePoint(quoteChar)]);this._beginToken(TokenType.ATTR_VALUE);var parts=[];while(this._cursor.peek()!==quoteChar){parts.push(this._readChar(true));}value=parts.join('');this._endToken([this._processCarriageReturns(value)]);this._beginToken(TokenType.ATTR_QUOTE);this._cursor.advance();this._endToken([String.fromCodePoint(quoteChar)]);}else{this._beginToken(TokenType.ATTR_VALUE);var valueStart=this._cursor.clone();this._requireCharCodeUntilFn(isNameEnd,1);value=this._cursor.getChars(valueStart);this._endToken([this._processCarriageReturns(value)]);}};_Tokenizer.prototype._consumeTagOpenEnd=function(){var tokenType=this._attemptCharCode($SLASH)?TokenType.TAG_OPEN_END_VOID:TokenType.TAG_OPEN_END;this._beginToken(tokenType);this._requireCharCode($GT);this._endToken([]);};_Tokenizer.prototype._consumeTagClose=function(start){this._beginToken(TokenType.TAG_CLOSE,start);this._attemptCharCodeUntilFn(isNotWhitespace);var prefixAndName=this._consumePrefixAndName();this._attemptCharCodeUntilFn(isNotWhitespace);this._requireCharCode($GT);this._endToken(prefixAndName);};_Tokenizer.prototype._consumeExpansionFormStart=function(){this._beginToken(TokenType.EXPANSION_FORM_START);this._requireCharCode($LBRACE);this._endToken([]);this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);this._beginToken(TokenType.RAW_TEXT);var condition=this._readUntil($COMMA);this._endToken([condition]);this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType.RAW_TEXT);var type=this._readUntil($COMMA);this._endToken([type]);this._requireCharCode($COMMA);this._attemptCharCodeUntilFn(isNotWhitespace);};_Tokenizer.prototype._consumeExpansionCaseStart=function(){this._beginToken(TokenType.EXPANSION_CASE_VALUE);var value=this._readUntil($LBRACE).trim();this._endToken([value]);this._attemptCharCodeUntilFn(isNotWhitespace);this._beginToken(TokenType.EXPANSION_CASE_EXP_START);this._requireCharCode($LBRACE);this._endToken([]);this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);};_Tokenizer.prototype._consumeExpansionCaseEnd=function(){this._beginToken(TokenType.EXPANSION_CASE_EXP_END);this._requireCharCode($RBRACE);this._endToken([]);this._attemptCharCodeUntilFn(isNotWhitespace);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeExpansionFormEnd=function(){this._beginToken(TokenType.EXPANSION_FORM_END);this._requireCharCode($RBRACE);this._endToken([]);this._expansionCaseStack.pop();};_Tokenizer.prototype._consumeText=function(){var start=this._cursor.clone();this._beginToken(TokenType.TEXT,start);var parts=[];do{if(this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)){parts.push(this._interpolationConfig.start);this._inInterpolation=true;}else if(this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)){parts.push(this._interpolationConfig.end);this._inInterpolation=false;}else{parts.push(this._readChar(true));}}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(parts.join(''))]);};_Tokenizer.prototype._isTextEnd=function(){if(this._cursor.peek()===$LT||this._cursor.peek()===$EOF){return true;}if(this._tokenizeIcu&&!this._inInterpolation){if(this.isExpansionFormStart()){// start of an expansion form
return true;}if(this._cursor.peek()===$RBRACE&&this._isInExpansionCase()){// end of and expansion case
return true;}}return false;};_Tokenizer.prototype._readUntil=function(_char5){var start=this._cursor.clone();this._attemptUntilChar(_char5);return this._cursor.getChars(start);};_Tokenizer.prototype._isInExpansionCase=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType.EXPANSION_CASE_EXP_START;};_Tokenizer.prototype._isInExpansionForm=function(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===TokenType.EXPANSION_FORM_START;};_Tokenizer.prototype.isExpansionFormStart=function(){if(this._cursor.peek()!==$LBRACE){return false;}if(this._interpolationConfig){var start=this._cursor.clone();var isInterpolation=this._attemptStr(this._interpolationConfig.start);this._cursor=start;return!isInterpolation;}return true;};return _Tokenizer;}();function isNotWhitespace(code){return!isWhitespace(code)||code===$EOF;}function isNameEnd(code){return isWhitespace(code)||code===$GT||code===$SLASH||code===$SQ||code===$DQ||code===$EQ;}function isPrefixEnd(code){return(code<$a||$z<code)&&(code<$A||$Z<code)&&(code<$0||code>$9);}function isDigitEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiHexDigit(code);}function isNamedEntityEnd(code){return code==$SEMICOLON||code==$EOF||!isAsciiLetter(code);}function isExpansionCaseStart(peek){return peek!==$RBRACE;}function compareCharCodeCaseInsensitive(code1,code2){return toUpperCaseCharCode(code1)==toUpperCaseCharCode(code2);}function toUpperCaseCharCode(code){return code>=$a&&code<=$z?code-$a+$A:code;}function mergeTextTokens(srcTokens){var dstTokens=[];var lastDstToken=undefined;for(var i=0;i<srcTokens.length;i++){var token=srcTokens[i];if(lastDstToken&&lastDstToken.type==TokenType.TEXT&&token.type==TokenType.TEXT){lastDstToken.parts[0]+=token.parts[0];lastDstToken.sourceSpan.end=token.sourceSpan.end;}else{lastDstToken=token;dstTokens.push(lastDstToken);}}return dstTokens;}var PlainCharacterCursor=/** @class */function(){function PlainCharacterCursor(fileOrCursor,range){if(fileOrCursor instanceof PlainCharacterCursor){this.file=fileOrCursor.file;this.input=fileOrCursor.input;this.end=fileOrCursor.end;var state=fileOrCursor.state;// Note: avoid using `{...fileOrCursor.state}` here as that has a severe performance penalty.
// In ES5 bundles the object spread operator is translated into the `__assign` helper, which
// is not optimized by VMs as efficiently as a raw object literal. Since this constructor is
// called in tight loops, this difference matters.
this.state={peek:state.peek,offset:state.offset,line:state.line,column:state.column};}else{if(!range){throw new Error('Programming error: the range argument must be provided with a file argument.');}this.file=fileOrCursor;this.input=fileOrCursor.content;this.end=range.endPos;this.state={peek:-1,offset:range.startPos,line:range.startLine,column:range.startCol};}}PlainCharacterCursor.prototype.clone=function(){return new PlainCharacterCursor(this);};PlainCharacterCursor.prototype.peek=function(){return this.state.peek;};PlainCharacterCursor.prototype.charsLeft=function(){return this.end-this.state.offset;};PlainCharacterCursor.prototype.diff=function(other){return this.state.offset-other.state.offset;};PlainCharacterCursor.prototype.advance=function(){this.advanceState(this.state);};PlainCharacterCursor.prototype.init=function(){this.updatePeek(this.state);};PlainCharacterCursor.prototype.getSpan=function(start,leadingTriviaCodePoints){start=start||this;var cloned=false;if(leadingTriviaCodePoints){while(this.diff(start)>0&&leadingTriviaCodePoints.indexOf(start.peek())!==-1){if(!cloned){start=start.clone();cloned=true;}start.advance();}}return new ParseSourceSpan(new ParseLocation(start.file,start.state.offset,start.state.line,start.state.column),new ParseLocation(this.file,this.state.offset,this.state.line,this.state.column));};PlainCharacterCursor.prototype.getChars=function(start){return this.input.substring(start.state.offset,this.state.offset);};PlainCharacterCursor.prototype.charAt=function(pos){return this.input.charCodeAt(pos);};PlainCharacterCursor.prototype.advanceState=function(state){if(state.offset>=this.end){this.state=state;throw new CursorError('Unexpected character "EOF"',this);}var currentChar=this.charAt(state.offset);if(currentChar===$LF){state.line++;state.column=0;}else if(!isNewLine(currentChar)){state.column++;}state.offset++;this.updatePeek(state);};PlainCharacterCursor.prototype.updatePeek=function(state){state.peek=state.offset>=this.end?$EOF:this.charAt(state.offset);};return PlainCharacterCursor;}();var EscapedCharacterCursor=/** @class */function(_super){__extends(EscapedCharacterCursor,_super);function EscapedCharacterCursor(fileOrCursor,range){var _this=this;if(fileOrCursor instanceof EscapedCharacterCursor){_this=_super.call(this,fileOrCursor)||this;_this.internalState=_assign3({},fileOrCursor.internalState);}else{_this=_super.call(this,fileOrCursor,range)||this;_this.internalState=_this.state;}return _this;}EscapedCharacterCursor.prototype.advance=function(){this.state=this.internalState;_super.prototype.advance.call(this);this.processEscapeSequence();};EscapedCharacterCursor.prototype.init=function(){_super.prototype.init.call(this);this.processEscapeSequence();};EscapedCharacterCursor.prototype.clone=function(){return new EscapedCharacterCursor(this);};EscapedCharacterCursor.prototype.getChars=function(start){var cursor=start.clone();var chars='';while(cursor.internalState.offset<this.internalState.offset){chars+=String.fromCodePoint(cursor.peek());cursor.advance();}return chars;};/**
         * Process the escape sequence that starts at the current position in the text.
         *
         * This method is called to ensure that `peek` has the unescaped value of escape sequences.
         */EscapedCharacterCursor.prototype.processEscapeSequence=function(){var _this=this;var peek=function peek(){return _this.internalState.peek;};if(peek()===$BACKSLASH){// We have hit an escape sequence so we need the internal state to become independent
// of the external state.
this.internalState=_assign3({},this.state);// Move past the backslash
this.advanceState(this.internalState);// First check for standard control char sequences
if(peek()===$n){this.state.peek=$LF;}else if(peek()===$r){this.state.peek=$CR;}else if(peek()===$v){this.state.peek=$VTAB;}else if(peek()===$t){this.state.peek=$TAB;}else if(peek()===$b){this.state.peek=$BSPACE;}else if(peek()===$f){this.state.peek=$FF;}// Now consider more complex sequences
else if(peek()===$u){// Unicode code-point sequence
this.advanceState(this.internalState);// advance past the `u` char
if(peek()===$LBRACE){// Variable length Unicode, e.g. `\x{123}`
this.advanceState(this.internalState);// advance past the `{` char
// Advance past the variable number of hex digits until we hit a `}` char
var digitStart=this.clone();var length_1=0;while(peek()!==$RBRACE){this.advanceState(this.internalState);length_1++;}this.state.peek=this.decodeHexDigits(digitStart,length_1);}else{// Fixed length Unicode, e.g. `\u1234`
var digitStart=this.clone();this.advanceState(this.internalState);this.advanceState(this.internalState);this.advanceState(this.internalState);this.state.peek=this.decodeHexDigits(digitStart,4);}}else if(peek()===$x){// Hex char code, e.g. `\x2F`
this.advanceState(this.internalState);// advance past the `x` char
var digitStart=this.clone();this.advanceState(this.internalState);this.state.peek=this.decodeHexDigits(digitStart,2);}else if(isOctalDigit(peek())){// Octal char code, e.g. `\012`,
var octal='';var length_2=0;var previous=this.clone();while(isOctalDigit(peek())&&length_2<3){previous=this.clone();octal+=String.fromCodePoint(peek());this.advanceState(this.internalState);length_2++;}this.state.peek=parseInt(octal,8);// Backup one char
this.internalState=previous.internalState;}else if(isNewLine(this.internalState.peek)){// Line continuation `\` followed by a new line
this.advanceState(this.internalState);// advance over the newline
this.state=this.internalState;}else{// If none of the `if` blocks were executed then we just have an escaped normal character.
// In that case we just, effectively, skip the backslash from the character.
this.state.peek=this.internalState.peek;}}};EscapedCharacterCursor.prototype.decodeHexDigits=function(start,length){var hex=this.input.substr(start.internalState.offset,length);var charCode=parseInt(hex,16);if(!isNaN(charCode)){return charCode;}else{start.state=start.internalState;throw new CursorError('Invalid hexadecimal escape sequence',start);}};return EscapedCharacterCursor;}(PlainCharacterCursor);var CursorError=/** @class */function(){function CursorError(msg,cursor){this.msg=msg;this.cursor=cursor;}return CursorError;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TreeError=/** @class */function(_super){__extends(TreeError,_super);function TreeError(elementName,span,msg){var _this=_super.call(this,span,msg)||this;_this.elementName=elementName;return _this;}TreeError.create=function(elementName,span,msg){return new TreeError(elementName,span,msg);};return TreeError;}(ParseError);var ParseTreeResult=/** @class */function(){function ParseTreeResult(rootNodes,errors){this.rootNodes=rootNodes;this.errors=errors;}return ParseTreeResult;}();var Parser=/** @class */function(){function Parser(getTagDefinition){this.getTagDefinition=getTagDefinition;}Parser.prototype.parse=function(source,url,options){var tokensAndErrors=tokenize(source,url,this.getTagDefinition,options);var treeAndErrors=new _TreeBuilder(tokensAndErrors.tokens,this.getTagDefinition).build();return new ParseTreeResult(treeAndErrors.rootNodes,tokensAndErrors.errors.concat(treeAndErrors.errors));};return Parser;}();var _TreeBuilder=/** @class */function(){function _TreeBuilder(tokens,getTagDefinition){this.tokens=tokens;this.getTagDefinition=getTagDefinition;this._index=-1;this._rootNodes=[];this._errors=[];this._elementStack=[];this._advance();}_TreeBuilder.prototype.build=function(){while(this._peek.type!==TokenType.EOF){if(this._peek.type===TokenType.TAG_OPEN_START){this._consumeStartTag(this._advance());}else if(this._peek.type===TokenType.TAG_CLOSE){this._consumeEndTag(this._advance());}else if(this._peek.type===TokenType.CDATA_START){this._closeVoidElement();this._consumeCdata(this._advance());}else if(this._peek.type===TokenType.COMMENT_START){this._closeVoidElement();this._consumeComment(this._advance());}else if(this._peek.type===TokenType.TEXT||this._peek.type===TokenType.RAW_TEXT||this._peek.type===TokenType.ESCAPABLE_RAW_TEXT){this._closeVoidElement();this._consumeText(this._advance());}else if(this._peek.type===TokenType.EXPANSION_FORM_START){this._consumeExpansion(this._advance());}else{// Skip all other tokens...
this._advance();}}return new ParseTreeResult(this._rootNodes,this._errors);};_TreeBuilder.prototype._advance=function(){var prev=this._peek;if(this._index<this.tokens.length-1){// Note: there is always an EOF token at the end
this._index++;}this._peek=this.tokens[this._index];return prev;};_TreeBuilder.prototype._advanceIf=function(type){if(this._peek.type===type){return this._advance();}return null;};_TreeBuilder.prototype._consumeCdata=function(startToken){this._consumeText(this._advance());this._advanceIf(TokenType.CDATA_END);};_TreeBuilder.prototype._consumeComment=function(token){var text=this._advanceIf(TokenType.RAW_TEXT);this._advanceIf(TokenType.COMMENT_END);var value=text!=null?text.parts[0].trim():null;this._addToParent(new Comment(value,token.sourceSpan));};_TreeBuilder.prototype._consumeExpansion=function(token){var switchValue=this._advance();var type=this._advance();var cases=[];// read =
while(this._peek.type===TokenType.EXPANSION_CASE_VALUE){var expCase=this._parseExpansionCase();if(!expCase)return;// error
cases.push(expCase);}// read the final }
if(this._peek.type!==TokenType.EXPANSION_FORM_END){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '}'."));return;}var sourceSpan=new ParseSourceSpan(token.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new Expansion(switchValue.parts[0],type.parts[0],cases,sourceSpan,switchValue.sourceSpan));this._advance();};_TreeBuilder.prototype._parseExpansionCase=function(){var value=this._advance();// read {
if(this._peek.type!==TokenType.EXPANSION_CASE_EXP_START){this._errors.push(TreeError.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '{'."));return null;}// read until }
var start=this._advance();var exp=this._collectExpansionExpTokens(start);if(!exp)return null;var end=this._advance();exp.push(new Token(TokenType.EOF,[],end.sourceSpan));// parse everything in between { and }
var parsedExp=new _TreeBuilder(exp,this.getTagDefinition).build();if(parsedExp.errors.length>0){this._errors=this._errors.concat(parsedExp.errors);return null;}var sourceSpan=new ParseSourceSpan(value.sourceSpan.start,end.sourceSpan.end);var expSourceSpan=new ParseSourceSpan(start.sourceSpan.start,end.sourceSpan.end);return new ExpansionCase(value.parts[0],parsedExp.rootNodes,sourceSpan,value.sourceSpan,expSourceSpan);};_TreeBuilder.prototype._collectExpansionExpTokens=function(start){var exp=[];var expansionFormStack=[TokenType.EXPANSION_CASE_EXP_START];while(true){if(this._peek.type===TokenType.EXPANSION_FORM_START||this._peek.type===TokenType.EXPANSION_CASE_EXP_START){expansionFormStack.push(this._peek.type);}if(this._peek.type===TokenType.EXPANSION_CASE_EXP_END){if(lastOnStack(expansionFormStack,TokenType.EXPANSION_CASE_EXP_START)){expansionFormStack.pop();if(expansionFormStack.length==0)return exp;}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType.EXPANSION_FORM_END){if(lastOnStack(expansionFormStack,TokenType.EXPANSION_FORM_START)){expansionFormStack.pop();}else{this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}}if(this._peek.type===TokenType.EOF){this._errors.push(TreeError.create(null,start.sourceSpan,"Invalid ICU message. Missing '}'."));return null;}exp.push(this._advance());}};_TreeBuilder.prototype._consumeText=function(token){var text=token.parts[0];if(text.length>0&&text[0]=='\n'){var parent_1=this._getParentElement();if(parent_1!=null&&parent_1.children.length==0&&this.getTagDefinition(parent_1.name).ignoreFirstLf){text=text.substring(1);}}if(text.length>0){this._addToParent(new Text$3(text,token.sourceSpan));}};_TreeBuilder.prototype._closeVoidElement=function(){var el=this._getParentElement();if(el&&this.getTagDefinition(el.name).isVoid){this._elementStack.pop();}};_TreeBuilder.prototype._consumeStartTag=function(startTagToken){var prefix=startTagToken.parts[0];var name=startTagToken.parts[1];var attrs=[];while(this._peek.type===TokenType.ATTR_NAME){attrs.push(this._consumeAttr(this._advance()));}var fullName=this._getElementFullName(prefix,name,this._getParentElement());var selfClosing=false;// Note: There could have been a tokenizer error
// so that we don't get a token for the end tag...
if(this._peek.type===TokenType.TAG_OPEN_END_VOID){this._advance();selfClosing=true;var tagDef=this.getTagDefinition(fullName);if(!(tagDef.canSelfClose||getNsPrefix(fullName)!==null||tagDef.isVoid)){this._errors.push(TreeError.create(fullName,startTagToken.sourceSpan,"Only void and foreign elements can be self closed \""+startTagToken.parts[1]+"\""));}}else if(this._peek.type===TokenType.TAG_OPEN_END){this._advance();selfClosing=false;}var end=this._peek.sourceSpan.start;var span=new ParseSourceSpan(startTagToken.sourceSpan.start,end);var el=new Element$1(fullName,attrs,[],span,span,undefined);this._pushElement(el);if(selfClosing){this._popElement(fullName);el.endSourceSpan=span;}};_TreeBuilder.prototype._pushElement=function(el){var parentEl=this._getParentElement();if(parentEl&&this.getTagDefinition(parentEl.name).isClosedByChild(el.name)){this._elementStack.pop();}this._addToParent(el);this._elementStack.push(el);};_TreeBuilder.prototype._consumeEndTag=function(endTagToken){var fullName=this._getElementFullName(endTagToken.parts[0],endTagToken.parts[1],this._getParentElement());if(this._getParentElement()){this._getParentElement().endSourceSpan=endTagToken.sourceSpan;}if(this.getTagDefinition(fullName).isVoid){this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,"Void elements do not have end tags \""+endTagToken.parts[1]+"\""));}else if(!this._popElement(fullName)){var errMsg="Unexpected closing tag \""+fullName+"\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags";this._errors.push(TreeError.create(fullName,endTagToken.sourceSpan,errMsg));}};_TreeBuilder.prototype._popElement=function(fullName){for(var stackIndex=this._elementStack.length-1;stackIndex>=0;stackIndex--){var el=this._elementStack[stackIndex];if(el.name==fullName){this._elementStack.splice(stackIndex,this._elementStack.length-stackIndex);return true;}if(!this.getTagDefinition(el.name).closedByParent){return false;}}return false;};_TreeBuilder.prototype._consumeAttr=function(attrName){var fullName=mergeNsAndName(attrName.parts[0],attrName.parts[1]);var end=attrName.sourceSpan.end;var value='';var valueSpan=undefined;if(this._peek.type===TokenType.ATTR_QUOTE){this._advance();}if(this._peek.type===TokenType.ATTR_VALUE){var valueToken=this._advance();value=valueToken.parts[0];end=valueToken.sourceSpan.end;valueSpan=valueToken.sourceSpan;}if(this._peek.type===TokenType.ATTR_QUOTE){var quoteToken=this._advance();end=quoteToken.sourceSpan.end;}return new Attribute(fullName,value,new ParseSourceSpan(attrName.sourceSpan.start,end),valueSpan);};_TreeBuilder.prototype._getParentElement=function(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null;};/**
         * Returns the parent in the DOM and the container.
         *
         * `<ng-container>` elements are skipped as they are not rendered as DOM element.
         */_TreeBuilder.prototype._getParentElementSkippingContainers=function(){var container=null;for(var i=this._elementStack.length-1;i>=0;i--){if(!isNgContainer(this._elementStack[i].name)){return{parent:this._elementStack[i],container:container};}container=this._elementStack[i];}return{parent:null,container:container};};_TreeBuilder.prototype._addToParent=function(node){var parent=this._getParentElement();if(parent!=null){parent.children.push(node);}else{this._rootNodes.push(node);}};/**
         * Insert a node between the parent and the container.
         * When no container is given, the node is appended as a child of the parent.
         * Also updates the element stack accordingly.
         *
         * @internal
         */_TreeBuilder.prototype._insertBeforeContainer=function(parent,container,node){if(!container){this._addToParent(node);this._elementStack.push(node);}else{if(parent){// replace the container with the new node in the children
var index=parent.children.indexOf(container);parent.children[index]=node;}else{this._rootNodes.push(node);}node.children.push(container);this._elementStack.splice(this._elementStack.indexOf(container),0,node);}};_TreeBuilder.prototype._getElementFullName=function(prefix,localName,parentElement){if(prefix===''){prefix=this.getTagDefinition(localName).implicitNamespacePrefix||'';if(prefix===''&&parentElement!=null){prefix=getNsPrefix(parentElement.name);}}return mergeNsAndName(prefix,localName);};return _TreeBuilder;}();function lastOnStack(stack,element){return stack.length>0&&stack[stack.length-1]===element;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var HtmlParser=/** @class */function(_super){__extends(HtmlParser,_super);function HtmlParser(){return _super.call(this,getHtmlTagDefinition)||this;}HtmlParser.prototype.parse=function(source,url,options){return _super.prototype.parse.call(this,source,url,options);};return HtmlParser;}(Parser);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var PRESERVE_WS_ATTR_NAME='ngPreserveWhitespaces';var SKIP_WS_TRIM_TAGS=new Set(['pre','template','textarea','script','style']);// Equivalent to \s with \u00a0 (non-breaking space) excluded.
// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
var WS_CHARS=" \f\n\r\t\x0B\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF";var NO_WS_REGEXP=new RegExp("[^"+WS_CHARS+"]");var WS_REPLACE_REGEXP=new RegExp("["+WS_CHARS+"]{2,}",'g');function hasPreserveWhitespacesAttr(attrs){return attrs.some(function(attr){return attr.name===PRESERVE_WS_ATTR_NAME;});}/**
     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:
     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32
     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character
     * and later on replaced by a space. We are re-implementing the same idea here.
     */function replaceNgsp(value){// lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE
return value.replace(new RegExp(NGSP_UNICODE,'g'),' ');}/**
     * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:
     * - consider spaces, tabs and new lines as whitespace characters;
     * - drop text nodes consisting of whitespace characters only;
     * - for all other text nodes replace consecutive whitespace characters with one space;
     * - convert &ngsp; pseudo-entity to a single space;
     *
     * Removal and trimming of whitespaces have positive performance impact (less code to generate
     * while compiling templates, faster view creation). At the same time it can be "destructive"
     * in some cases (whitespaces can influence layout). Because of the potential of breaking layout
     * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for
     * whitespace removal. The default option for whitespace removal will be revisited in Angular 6
     * and might be changed to "on" by default.
     */var WhitespaceVisitor=/** @class */function(){function WhitespaceVisitor(){}WhitespaceVisitor.prototype.visitElement=function(element,context){if(SKIP_WS_TRIM_TAGS.has(element.name)||hasPreserveWhitespacesAttr(element.attrs)){// don't descent into elements where we need to preserve whitespaces
// but still visit all attributes to eliminate one used as a market to preserve WS
return new Element$1(element.name,visitAll$1(this,element.attrs),element.children,element.sourceSpan,element.startSourceSpan,element.endSourceSpan,element.i18n);}return new Element$1(element.name,element.attrs,visitAllWithSiblings(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan,element.i18n);};WhitespaceVisitor.prototype.visitAttribute=function(attribute,context){return attribute.name!==PRESERVE_WS_ATTR_NAME?attribute:null;};WhitespaceVisitor.prototype.visitText=function(text,context){var isNotBlank=text.value.match(NO_WS_REGEXP);var hasExpansionSibling=context&&(context.prev instanceof Expansion||context.next instanceof Expansion);if(isNotBlank||hasExpansionSibling){return new Text$3(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP,' '),text.sourceSpan,text.i18n);}return null;};WhitespaceVisitor.prototype.visitComment=function(comment,context){return comment;};WhitespaceVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};WhitespaceVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return WhitespaceVisitor;}();function removeWhitespaces(htmlAstWithErrors){return new ParseTreeResult(visitAll$1(new WhitespaceVisitor(),htmlAstWithErrors.rootNodes),htmlAstWithErrors.errors);}function visitAllWithSiblings(visitor,nodes){var result=[];nodes.forEach(function(ast,i){var context={prev:nodes[i-1],next:nodes[i+1]};var astResult=ast.visit(visitor,context);if(astResult){result.push(astResult);}});return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // http://cldr.unicode.org/index/cldr-spec/plural-rules
var PLURAL_CASES=['zero','one','two','few','many','other'];/**
     * Expands special forms into elements.
     *
     * For example,
     *
     * ```
     * { messages.length, plural,
     *   =0 {zero}
     *   =1 {one}
     *   other {more than one}
     * }
     * ```
     *
     * will be expanded into
     *
     * ```
     * <ng-container [ngPlural]="messages.length">
     *   <ng-template ngPluralCase="=0">zero</ng-template>
     *   <ng-template ngPluralCase="=1">one</ng-template>
     *   <ng-template ngPluralCase="other">more than one</ng-template>
     * </ng-container>
     * ```
     */function expandNodes(nodes){var expander=new _Expander();return new ExpansionResult(visitAll$1(expander,nodes),expander.isExpanded,expander.errors);}var ExpansionResult=/** @class */function(){function ExpansionResult(nodes,expanded,errors){this.nodes=nodes;this.expanded=expanded;this.errors=errors;}return ExpansionResult;}();var ExpansionError=/** @class */function(_super){__extends(ExpansionError,_super);function ExpansionError(span,errorMsg){return _super.call(this,span,errorMsg)||this;}return ExpansionError;}(ParseError);/**
     * Expand expansion forms (plural, select) to directives
     *
     * @internal
     */var _Expander=/** @class */function(){function _Expander(){this.isExpanded=false;this.errors=[];}_Expander.prototype.visitElement=function(element,context){return new Element$1(element.name,element.attrs,visitAll$1(this,element.children),element.sourceSpan,element.startSourceSpan,element.endSourceSpan);};_Expander.prototype.visitAttribute=function(attribute,context){return attribute;};_Expander.prototype.visitText=function(text,context){return text;};_Expander.prototype.visitComment=function(comment,context){return comment;};_Expander.prototype.visitExpansion=function(icu,context){this.isExpanded=true;return icu.type=='plural'?_expandPluralForm(icu,this.errors):_expandDefaultForm(icu,this.errors);};_Expander.prototype.visitExpansionCase=function(icuCase,context){throw new Error('Should not be reached');};return _Expander;}();// Plural forms are expanded to `NgPlural` and `NgPluralCase`s
function _expandPluralForm(ast,errors){var children=ast.cases.map(function(c){if(PLURAL_CASES.indexOf(c.value)==-1&&!c.value.match(/^=\d+$/)){errors.push(new ExpansionError(c.valueSourceSpan,"Plural cases should be \"=<number>\" or one of "+PLURAL_CASES.join(', ')));}var expansionResult=expandNodes(c.expression);errors.push.apply(errors,__spread(expansionResult.errors));return new Element$1("ng-template",[new Attribute('ngPluralCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngPlural]',ast.switchValue,ast.switchValueSourceSpan);return new Element$1('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s
function _expandDefaultForm(ast,errors){var children=ast.cases.map(function(c){var expansionResult=expandNodes(c.expression);errors.push.apply(errors,__spread(expansionResult.errors));if(c.value==='other'){// other is the default case when no values match
return new Element$1("ng-template",[new Attribute('ngSwitchDefault','',c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);}return new Element$1("ng-template",[new Attribute('ngSwitchCase',""+c.value,c.valueSourceSpan)],expansionResult.nodes,c.sourceSpan,c.sourceSpan,c.sourceSpan);});var switchAttr=new Attribute('[ngSwitch]',ast.switchValue,ast.switchValueSourceSpan);return new Element$1('ng-container',[switchAttr],children,ast.sourceSpan,ast.sourceSpan,ast.sourceSpan);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _a;/**
     * A segment of text within the template.
     */var TextAst=/** @class */function(){function TextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}TextAst.prototype.visit=function(visitor,context){return visitor.visitText(this,context);};return TextAst;}();/**
     * A bound expression within the text of a template.
     */var BoundTextAst=/** @class */function(){function BoundTextAst(value,ngContentIndex,sourceSpan){this.value=value;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}BoundTextAst.prototype.visit=function(visitor,context){return visitor.visitBoundText(this,context);};return BoundTextAst;}();/**
     * A plain attribute on an element.
     */var AttrAst=/** @class */function(){function AttrAst(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}AttrAst.prototype.visit=function(visitor,context){return visitor.visitAttr(this,context);};return AttrAst;}();var BoundPropertyMapping=(_a={},_a[4/* Animation */]=4/* Animation */,_a[1/* Attribute */]=1/* Attribute */,_a[2/* Class */]=2/* Class */,_a[0/* Property */]=0/* Property */,_a[3/* Style */]=3/* Style */,_a);/**
     * A binding for an element property (e.g. `[property]="expression"`) or an animation trigger (e.g.
     * `[@trigger]="stateExp"`)
     */var BoundElementPropertyAst=/** @class */function(){function BoundElementPropertyAst(name,type,securityContext,value,unit,sourceSpan){this.name=name;this.type=type;this.securityContext=securityContext;this.value=value;this.unit=unit;this.sourceSpan=sourceSpan;this.isAnimation=this.type===4/* Animation */;}BoundElementPropertyAst.fromBoundProperty=function(prop){var type=BoundPropertyMapping[prop.type];return new BoundElementPropertyAst(prop.name,type,prop.securityContext,prop.value,prop.unit,prop.sourceSpan);};BoundElementPropertyAst.prototype.visit=function(visitor,context){return visitor.visitElementProperty(this,context);};return BoundElementPropertyAst;}();/**
     * A binding for an element event (e.g. `(event)="handler()"`) or an animation trigger event (e.g.
     * `(@trigger.phase)="callback($event)"`).
     */var BoundEventAst=/** @class */function(){function BoundEventAst(name,target,phase,handler,sourceSpan,handlerSpan){this.name=name;this.target=target;this.phase=phase;this.handler=handler;this.sourceSpan=sourceSpan;this.handlerSpan=handlerSpan;this.fullName=BoundEventAst.calcFullName(this.name,this.target,this.phase);this.isAnimation=!!this.phase;}BoundEventAst.calcFullName=function(name,target,phase){if(target){return target+":"+name;}if(phase){return"@"+name+"."+phase;}return name;};BoundEventAst.fromParsedEvent=function(event){var target=event.type===0/* Regular */?event.targetOrPhase:null;var phase=event.type===1/* Animation */?event.targetOrPhase:null;return new BoundEventAst(event.name,target,phase,event.handler,event.sourceSpan,event.handlerSpan);};BoundEventAst.prototype.visit=function(visitor,context){return visitor.visitEvent(this,context);};return BoundEventAst;}();/**
     * A reference declaration on an element (e.g. `let someName="expression"`).
     */var ReferenceAst=/** @class */function(){function ReferenceAst(name,value,originalValue,sourceSpan){this.name=name;this.value=value;this.originalValue=originalValue;this.sourceSpan=sourceSpan;}ReferenceAst.prototype.visit=function(visitor,context){return visitor.visitReference(this,context);};return ReferenceAst;}();/**
     * A variable declaration on a <ng-template> (e.g. `var-someName="someLocalName"`).
     */var VariableAst=/** @class */function(){function VariableAst(name,value,sourceSpan,valueSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;this.valueSpan=valueSpan;}VariableAst.fromParsedVariable=function(v){return new VariableAst(v.name,v.value,v.sourceSpan,v.valueSpan);};VariableAst.prototype.visit=function(visitor,context){return visitor.visitVariable(this,context);};return VariableAst;}();/**
     * An element declaration in a template.
     */var ElementAst=/** @class */function(){function ElementAst(name,attrs,inputs,outputs,references,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan,endSourceSpan){this.name=name;this.attrs=attrs;this.inputs=inputs;this.outputs=outputs;this.references=references;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;this.endSourceSpan=endSourceSpan;}ElementAst.prototype.visit=function(visitor,context){return visitor.visitElement(this,context);};return ElementAst;}();/**
     * A `<ng-template>` element included in an Angular template.
     */var EmbeddedTemplateAst=/** @class */function(){function EmbeddedTemplateAst(attrs,outputs,references,variables,directives,providers,hasViewContainer,queryMatches,children,ngContentIndex,sourceSpan){this.attrs=attrs;this.outputs=outputs;this.references=references;this.variables=variables;this.directives=directives;this.providers=providers;this.hasViewContainer=hasViewContainer;this.queryMatches=queryMatches;this.children=children;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}EmbeddedTemplateAst.prototype.visit=function(visitor,context){return visitor.visitEmbeddedTemplate(this,context);};return EmbeddedTemplateAst;}();/**
     * A directive property with a bound value (e.g. `*ngIf="condition").
     */var BoundDirectivePropertyAst=/** @class */function(){function BoundDirectivePropertyAst(directiveName,templateName,value,sourceSpan){this.directiveName=directiveName;this.templateName=templateName;this.value=value;this.sourceSpan=sourceSpan;}BoundDirectivePropertyAst.prototype.visit=function(visitor,context){return visitor.visitDirectiveProperty(this,context);};return BoundDirectivePropertyAst;}();/**
     * A directive declared on an element.
     */var DirectiveAst=/** @class */function(){function DirectiveAst(directive,inputs,hostProperties,hostEvents,contentQueryStartId,sourceSpan){this.directive=directive;this.inputs=inputs;this.hostProperties=hostProperties;this.hostEvents=hostEvents;this.contentQueryStartId=contentQueryStartId;this.sourceSpan=sourceSpan;}DirectiveAst.prototype.visit=function(visitor,context){return visitor.visitDirective(this,context);};return DirectiveAst;}();/**
     * A provider declared on an element
     */var ProviderAst=/** @class */function(){function ProviderAst(token,multiProvider,eager,providers,providerType,lifecycleHooks,sourceSpan,isModule){this.token=token;this.multiProvider=multiProvider;this.eager=eager;this.providers=providers;this.providerType=providerType;this.lifecycleHooks=lifecycleHooks;this.sourceSpan=sourceSpan;this.isModule=isModule;}ProviderAst.prototype.visit=function(visitor,context){// No visit method in the visitor for now...
return null;};return ProviderAst;}();(function(ProviderAstType){ProviderAstType[ProviderAstType["PublicService"]=0]="PublicService";ProviderAstType[ProviderAstType["PrivateService"]=1]="PrivateService";ProviderAstType[ProviderAstType["Component"]=2]="Component";ProviderAstType[ProviderAstType["Directive"]=3]="Directive";ProviderAstType[ProviderAstType["Builtin"]=4]="Builtin";})(exports.ProviderAstType||(exports.ProviderAstType={}));/**
     * Position where content is to be projected (instance of `<ng-content>` in a template).
     */var NgContentAst=/** @class */function(){function NgContentAst(index,ngContentIndex,sourceSpan){this.index=index;this.ngContentIndex=ngContentIndex;this.sourceSpan=sourceSpan;}NgContentAst.prototype.visit=function(visitor,context){return visitor.visitNgContent(this,context);};return NgContentAst;}();/**
     * A visitor that accepts each node but doesn't do anything. It is intended to be used
     * as the base class for a visitor that is only interested in a subset of the node types.
     */var NullTemplateVisitor=/** @class */function(){function NullTemplateVisitor(){}NullTemplateVisitor.prototype.visitNgContent=function(ast,context){};NullTemplateVisitor.prototype.visitEmbeddedTemplate=function(ast,context){};NullTemplateVisitor.prototype.visitElement=function(ast,context){};NullTemplateVisitor.prototype.visitReference=function(ast,context){};NullTemplateVisitor.prototype.visitVariable=function(ast,context){};NullTemplateVisitor.prototype.visitEvent=function(ast,context){};NullTemplateVisitor.prototype.visitElementProperty=function(ast,context){};NullTemplateVisitor.prototype.visitAttr=function(ast,context){};NullTemplateVisitor.prototype.visitBoundText=function(ast,context){};NullTemplateVisitor.prototype.visitText=function(ast,context){};NullTemplateVisitor.prototype.visitDirective=function(ast,context){};NullTemplateVisitor.prototype.visitDirectiveProperty=function(ast,context){};return NullTemplateVisitor;}();/**
     * Base class that can be used to build a visitor that visits each node
     * in an template ast recursively.
     */var RecursiveTemplateAstVisitor=/** @class */function(_super){__extends(RecursiveTemplateAstVisitor,_super);function RecursiveTemplateAstVisitor(){return _super.call(this)||this;}// Nodes with children
RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.references);visit(ast.variables);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitElement=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.attrs);visit(ast.inputs);visit(ast.outputs);visit(ast.references);visit(ast.directives);visit(ast.providers);visit(ast.children);});};RecursiveTemplateAstVisitor.prototype.visitDirective=function(ast,context){return this.visitChildren(context,function(visit){visit(ast.inputs);visit(ast.hostProperties);visit(ast.hostEvents);});};RecursiveTemplateAstVisitor.prototype.visitChildren=function(context,cb){var results=[];var t=this;function visit(children){if(children&&children.length)results.push(templateVisitAll(t,children,context));}cb(visit);return Array.prototype.concat.apply([],results);};return RecursiveTemplateAstVisitor;}(NullTemplateVisitor);/**
     * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.
     */function templateVisitAll(visitor,asts,context){if(context===void 0){context=null;}var result=[];var visit=visitor.visit?function(ast){return visitor.visit(ast,context)||ast.visit(visitor,context);}:function(ast){return ast.visit(visitor,context);};asts.forEach(function(ast){var astResult=visit(ast);if(astResult){result.push(astResult);}});return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ProviderError=/** @class */function(_super){__extends(ProviderError,_super);function ProviderError(message,span){return _super.call(this,span,message)||this;}return ProviderError;}(ParseError);var ProviderViewContext=/** @class */function(){function ProviderViewContext(reflector,component){var _this=this;this.reflector=reflector;this.component=component;this.errors=[];this.viewQueries=_getViewQueries(component);this.viewProviders=new Map();component.viewProviders.forEach(function(provider){if(_this.viewProviders.get(tokenReference(provider.token))==null){_this.viewProviders.set(tokenReference(provider.token),true);}});}return ProviderViewContext;}();var ProviderElementContext=/** @class */function(){function ProviderElementContext(viewContext,_parent,_isViewRoot,_directiveAsts,attrs,refs,isTemplate,contentQueryStartId,_sourceSpan){var _this=this;this.viewContext=viewContext;this._parent=_parent;this._isViewRoot=_isViewRoot;this._directiveAsts=_directiveAsts;this._sourceSpan=_sourceSpan;this._transformedProviders=new Map();this._seenProviders=new Map();this._queriedTokens=new Map();this.transformedHasViewContainer=false;this._attrs={};attrs.forEach(function(attrAst){return _this._attrs[attrAst.name]=attrAst.value;});var directivesMeta=_directiveAsts.map(function(directiveAst){return directiveAst.directive;});this._allProviders=_resolveProvidersFromDirectives(directivesMeta,_sourceSpan,viewContext.errors);this._contentQueries=_getContentQueries(contentQueryStartId,directivesMeta);Array.from(this._allProviders.values()).forEach(function(provider){_this._addQueryReadsTo(provider.token,provider.token,_this._queriedTokens);});if(isTemplate){var templateRefId=createTokenForExternalReference(this.viewContext.reflector,Identifiers.TemplateRef);this._addQueryReadsTo(templateRefId,templateRefId,this._queriedTokens);}refs.forEach(function(refAst){var defaultQueryValue=refAst.value||createTokenForExternalReference(_this.viewContext.reflector,Identifiers.ElementRef);_this._addQueryReadsTo({value:refAst.name},defaultQueryValue,_this._queriedTokens);});if(this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))){this.transformedHasViewContainer=true;}// create the providers that we know are eager first
Array.from(this._allProviders.values()).forEach(function(provider){var eager=provider.eager||_this._queriedTokens.get(tokenReference(provider.token));if(eager){_this._getOrCreateLocalProvider(provider.providerType,provider.token,true);}});}ProviderElementContext.prototype.afterElement=function(){var _this=this;// collect lazy providers
Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.providerType,provider.token,false);});};Object.defineProperty(ProviderElementContext.prototype,"transformProviders",{get:function get(){// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"transformedDirectiveAsts",{get:function get(){var sortedProviderTypes=this.transformProviders.map(function(provider){return provider.token.identifier;});var sortedDirectives=this._directiveAsts.slice();sortedDirectives.sort(function(dir1,dir2){return sortedProviderTypes.indexOf(dir1.directive.type)-sortedProviderTypes.indexOf(dir2.directive.type);});return sortedDirectives;},enumerable:true,configurable:true});Object.defineProperty(ProviderElementContext.prototype,"queryMatches",{get:function get(){var allMatches=[];this._queriedTokens.forEach(function(matches){allMatches.push.apply(allMatches,__spread(matches));});return allMatches;},enumerable:true,configurable:true});ProviderElementContext.prototype._addQueryReadsTo=function(token,defaultValue,queryReadTokens){this._getQueriesFor(token).forEach(function(query){var queryValue=query.meta.read||defaultValue;var tokenRef=tokenReference(queryValue);var queryMatches=queryReadTokens.get(tokenRef);if(!queryMatches){queryMatches=[];queryReadTokens.set(tokenRef,queryMatches);}queryMatches.push({queryId:query.queryId,value:queryValue});});};ProviderElementContext.prototype._getQueriesFor=function(token){var result=[];var currentEl=this;var distance=0;var queries;while(currentEl!==null){queries=currentEl._contentQueries.get(tokenReference(token));if(queries){result.push.apply(result,__spread(queries.filter(function(query){return query.meta.descendants||distance<=1;})));}if(currentEl._directiveAsts.length>0){distance++;}currentEl=currentEl._parent;}queries=this.viewContext.viewQueries.get(tokenReference(token));if(queries){result.push.apply(result,__spread(queries));}return result;};ProviderElementContext.prototype._getOrCreateLocalProvider=function(requestingProviderType,token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider||(requestingProviderType===exports.ProviderAstType.Directive||requestingProviderType===exports.ProviderAstType.PublicService)&&resolvedProvider.providerType===exports.ProviderAstType.PrivateService||(requestingProviderType===exports.ProviderAstType.PrivateService||requestingProviderType===exports.ProviderAstType.PublicService)&&resolvedProvider.providerType===exports.ProviderAstType.Builtin){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this.viewContext.errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),this._sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency(resolvedProvider.providerType,{token:provider.useExisting},eager);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(resolvedProvider.providerType,dep,eager);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};ProviderElementContext.prototype._getLocalDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}if(dep.isAttribute){var attrValue=this._attrs[dep.token.value];return{isValue:true,value:attrValue==null?null:attrValue};}if(dep.token!=null){// access builtints
if(requestingProviderType===exports.ProviderAstType.Directive||requestingProviderType===exports.ProviderAstType.Component){if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef)||tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)){return dep;}if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){this.transformedHasViewContainer=true;}}// access the injector
if(tokenReference(dep.token)===this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)){return dep;}// access providers
if(this._getOrCreateLocalProvider(requestingProviderType,dep.token,eager)!=null){return dep;}}return null;};ProviderElementContext.prototype._getDependency=function(requestingProviderType,dep,eager){if(eager===void 0){eager=false;}var currElement=this;var currEager=eager;var result=null;if(!dep.isSkipSelf){result=this._getLocalDependency(requestingProviderType,dep,eager);}if(dep.isSelf){if(!result&&dep.isOptional){result={isValue:true,value:null};}}else{// check parent elements
while(!result&&currElement._parent){var prevElement=currElement;currElement=currElement._parent;if(prevElement._isViewRoot){currEager=false;}result=currElement._getLocalDependency(exports.ProviderAstType.PublicService,dep,currEager);}// check @Host restriction
if(!result){if(!dep.isHost||this.viewContext.component.isHost||this.viewContext.component.type.reference===tokenReference(dep.token)||this.viewContext.viewProviders.get(tokenReference(dep.token))!=null){result=dep;}else{result=dep.isOptional?{isValue:true,value:null}:null;}}}if(!result){this.viewContext.errors.push(new ProviderError("No provider for "+tokenName(dep.token),this._sourceSpan));}return result;};return ProviderElementContext;}();var NgModuleProviderAnalyzer=/** @class */function(){function NgModuleProviderAnalyzer(reflector,ngModule,extraProviders,sourceSpan){var _this=this;this.reflector=reflector;this._transformedProviders=new Map();this._seenProviders=new Map();this._errors=[];this._allProviders=new Map();ngModule.transitiveModule.modules.forEach(function(ngModuleType){var ngModuleProvider={token:{identifier:ngModuleType},useClass:ngModuleType};_resolveProviders([ngModuleProvider],exports.ProviderAstType.PublicService,true,sourceSpan,_this._errors,_this._allProviders,/* isModule */true);});_resolveProviders(ngModule.transitiveModule.providers.map(function(entry){return entry.provider;}).concat(extraProviders),exports.ProviderAstType.PublicService,false,sourceSpan,this._errors,this._allProviders,/* isModule */false);}NgModuleProviderAnalyzer.prototype.parse=function(){var _this=this;Array.from(this._allProviders.values()).forEach(function(provider){_this._getOrCreateLocalProvider(provider.token,provider.eager);});if(this._errors.length>0){var errorString=this._errors.join('\n');throw new Error("Provider parse errors:\n"+errorString);}// Note: Maps keep their insertion order.
var lazyProviders=[];var eagerProviders=[];this._transformedProviders.forEach(function(provider){if(provider.eager){eagerProviders.push(provider);}else{lazyProviders.push(provider);}});return lazyProviders.concat(eagerProviders);};NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider=function(token,eager){var _this=this;var resolvedProvider=this._allProviders.get(tokenReference(token));if(!resolvedProvider){return null;}var transformedProviderAst=this._transformedProviders.get(tokenReference(token));if(transformedProviderAst){return transformedProviderAst;}if(this._seenProviders.get(tokenReference(token))!=null){this._errors.push(new ProviderError("Cannot instantiate cyclic dependency! "+tokenName(token),resolvedProvider.sourceSpan));return null;}this._seenProviders.set(tokenReference(token),true);var transformedProviders=resolvedProvider.providers.map(function(provider){var transformedUseValue=provider.useValue;var transformedUseExisting=provider.useExisting;var transformedDeps=undefined;if(provider.useExisting!=null){var existingDiDep=_this._getDependency({token:provider.useExisting},eager,resolvedProvider.sourceSpan);if(existingDiDep.token!=null){transformedUseExisting=existingDiDep.token;}else{transformedUseExisting=null;transformedUseValue=existingDiDep.value;}}else if(provider.useFactory){var deps=provider.deps||provider.useFactory.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}else if(provider.useClass){var deps=provider.deps||provider.useClass.diDeps;transformedDeps=deps.map(function(dep){return _this._getDependency(dep,eager,resolvedProvider.sourceSpan);});}return _transformProvider(provider,{useExisting:transformedUseExisting,useValue:transformedUseValue,deps:transformedDeps});});transformedProviderAst=_transformProviderAst(resolvedProvider,{eager:eager,providers:transformedProviders});this._transformedProviders.set(tokenReference(token),transformedProviderAst);return transformedProviderAst;};NgModuleProviderAnalyzer.prototype._getDependency=function(dep,eager,requestorSourceSpan){if(eager===void 0){eager=false;}var foundLocal=false;if(!dep.isSkipSelf&&dep.token!=null){// access the injector
if(tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.Injector)||tokenReference(dep.token)===this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)){foundLocal=true;// access providers
}else if(this._getOrCreateLocalProvider(dep.token,eager)!=null){foundLocal=true;}}return dep;};return NgModuleProviderAnalyzer;}();function _transformProvider(provider,_a){var useExisting=_a.useExisting,useValue=_a.useValue,deps=_a.deps;return{token:provider.token,useClass:provider.useClass,useExisting:useExisting,useFactory:provider.useFactory,useValue:useValue,deps:deps,multi:provider.multi};}function _transformProviderAst(provider,_a){var eager=_a.eager,providers=_a.providers;return new ProviderAst(provider.token,provider.multiProvider,provider.eager||eager,providers,provider.providerType,provider.lifecycleHooks,provider.sourceSpan,provider.isModule);}function _resolveProvidersFromDirectives(directives,sourceSpan,targetErrors){var providersByToken=new Map();directives.forEach(function(directive){var dirProvider={token:{identifier:directive.type},useClass:directive.type};_resolveProviders([dirProvider],directive.isComponent?exports.ProviderAstType.Component:exports.ProviderAstType.Directive,true,sourceSpan,targetErrors,providersByToken,/* isModule */false);});// Note: directives need to be able to overwrite providers of a component!
var directivesWithComponentFirst=directives.filter(function(dir){return dir.isComponent;}).concat(directives.filter(function(dir){return!dir.isComponent;}));directivesWithComponentFirst.forEach(function(directive){_resolveProviders(directive.providers,exports.ProviderAstType.PublicService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);_resolveProviders(directive.viewProviders,exports.ProviderAstType.PrivateService,false,sourceSpan,targetErrors,providersByToken,/* isModule */false);});return providersByToken;}function _resolveProviders(providers,providerType,eager,sourceSpan,targetErrors,targetProvidersByToken,isModule){providers.forEach(function(provider){var resolvedProvider=targetProvidersByToken.get(tokenReference(provider.token));if(resolvedProvider!=null&&!!resolvedProvider.multiProvider!==!!provider.multi){targetErrors.push(new ProviderError("Mixing multi and non multi provider is not possible for token "+tokenName(resolvedProvider.token),sourceSpan));}if(!resolvedProvider){var lifecycleHooks=provider.token.identifier&&provider.token.identifier.lifecycleHooks?provider.token.identifier.lifecycleHooks:[];var isUseValue=!(provider.useClass||provider.useExisting||provider.useFactory);resolvedProvider=new ProviderAst(provider.token,!!provider.multi,eager||isUseValue,[provider],providerType,lifecycleHooks,sourceSpan,isModule);targetProvidersByToken.set(tokenReference(provider.token),resolvedProvider);}else{if(!provider.multi){resolvedProvider.providers.length=0;}resolvedProvider.providers.push(provider);}});}function _getViewQueries(component){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var viewQueryId=1;var viewQueries=new Map();if(component.viewQueries){component.viewQueries.forEach(function(query){return _addQueryToTokenMap(viewQueries,{meta:query,queryId:viewQueryId++});});}return viewQueries;}function _getContentQueries(contentQueryStartId,directives){var contentQueryId=contentQueryStartId;var contentQueries=new Map();directives.forEach(function(directive,directiveIndex){if(directive.queries){directive.queries.forEach(function(query){return _addQueryToTokenMap(contentQueries,{meta:query,queryId:contentQueryId++});});}});return contentQueries;}function _addQueryToTokenMap(map,query){query.meta.selectors.forEach(function(token){var entry=map.get(tokenReference(token));if(!entry){entry=[];map.set(tokenReference(token),entry);}entry.push(query);});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var StyleWithImports=/** @class */function(){function StyleWithImports(style,styleUrls){this.style=style;this.styleUrls=styleUrls;}return StyleWithImports;}();function isStyleUrlResolvable(url){if(url==null||url.length===0||url[0]=='/')return false;var schemeMatch=url.match(URL_WITH_SCHEMA_REGEXP);return schemeMatch===null||schemeMatch[1]=='package'||schemeMatch[1]=='asset';}/**
     * Rewrites stylesheets by resolving and removing the @import urls that
     * are either relative or don't have a `package:` scheme
     */function extractStyleUrls(resolver,baseUrl,cssText){var foundUrls=[];var modifiedCssText=cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP,'').replace(CSS_IMPORT_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}var url=m[1]||m[2];if(!isStyleUrlResolvable(url)){// Do not attempt to resolve non-package absolute URLs with URI
// scheme
return m[0];}foundUrls.push(resolver.resolve(baseUrl,url));return'';});return new StyleWithImports(modifiedCssText,foundUrls);}var CSS_IMPORT_REGEXP=/@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;var CSS_STRIPPABLE_COMMENT_REGEXP=/\/\*(?!#\s*(?:sourceURL|sourceMappingURL)=)[\s\S]+?\*\//g;var URL_WITH_SCHEMA_REGEXP=/^([^:/?#]+):/;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var PROPERTY_PARTS_SEPARATOR='.';var ATTRIBUTE_PREFIX='attr';var CLASS_PREFIX='class';var STYLE_PREFIX='style';var TEMPLATE_ATTR_PREFIX='*';var ANIMATE_PROP_PREFIX='animate-';/**
     * Parses bindings in templates and in the directive host area.
     */var BindingParser=/** @class */function(){function BindingParser(_exprParser,_interpolationConfig,_schemaRegistry,pipes,errors){this._exprParser=_exprParser;this._interpolationConfig=_interpolationConfig;this._schemaRegistry=_schemaRegistry;this.errors=errors;this.pipesByName=null;this._usedPipes=new Map();// When the `pipes` parameter is `null`, do not check for used pipes
// This is used in IVY when we might not know the available pipes at compile time
if(pipes){var pipesByName_1=new Map();pipes.forEach(function(pipe){return pipesByName_1.set(pipe.name,pipe);});this.pipesByName=pipesByName_1;}}Object.defineProperty(BindingParser.prototype,"interpolationConfig",{get:function get(){return this._interpolationConfig;},enumerable:true,configurable:true});BindingParser.prototype.getUsedPipes=function(){return Array.from(this._usedPipes.values());};BindingParser.prototype.createBoundHostProperties=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostProperties){var boundProps_1=[];Object.keys(dirMeta.hostProperties).forEach(function(propName){var expression=dirMeta.hostProperties[propName];if(typeof expression==='string'){_this.parsePropertyBinding(propName,expression,true,sourceSpan,sourceSpan.start.offset,undefined,[],boundProps_1);}else{_this._reportError("Value of the host property binding \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return boundProps_1;}return null;};BindingParser.prototype.createDirectiveHostPropertyAsts=function(dirMeta,elementSelector,sourceSpan){var _this=this;var boundProps=this.createBoundHostProperties(dirMeta,sourceSpan);return boundProps&&boundProps.map(function(prop){return _this.createBoundElementProperty(elementSelector,prop);});};BindingParser.prototype.createDirectiveHostEventAsts=function(dirMeta,sourceSpan){var _this=this;if(dirMeta.hostListeners){var targetEvents_1=[];Object.keys(dirMeta.hostListeners).forEach(function(propName){var expression=dirMeta.hostListeners[propName];if(typeof expression==='string'){// TODO: pass a more accurate handlerSpan for this event.
_this.parseEvent(propName,expression,sourceSpan,sourceSpan,[],targetEvents_1);}else{_this._reportError("Value of the host listener \""+propName+"\" needs to be a string representing an expression but got \""+expression+"\" ("+_typeof(expression)+")",sourceSpan);}});return targetEvents_1;}return null;};BindingParser.prototype.parseInterpolation=function(value,sourceSpan){var sourceInfo=sourceSpan.start.toString();try{var ast=this._exprParser.parseInterpolation(value,sourceInfo,sourceSpan.start.offset,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo,sourceSpan.start.offset);}};/**
         * Parses the bindings in a microsyntax expression, and converts them to
         * `ParsedProperty` or `ParsedVariable`.
         *
         * @param tplKey template binding name
         * @param tplValue template binding value
         * @param sourceSpan span of template binding relative to entire the template
         * @param absoluteValueOffset start of the tplValue relative to the entire template
         * @param targetMatchableAttrs potential attributes to match in the template
         * @param targetProps target property bindings in the template
         * @param targetVars target variables in the template
         */BindingParser.prototype.parseInlineTemplateBinding=function(tplKey,tplValue,sourceSpan,absoluteValueOffset,targetMatchableAttrs,targetProps,targetVars){var e_1,_a;var absoluteKeyOffset=sourceSpan.start.offset+TEMPLATE_ATTR_PREFIX.length;var bindings=this._parseTemplateBindings(tplKey,tplValue,sourceSpan,absoluteKeyOffset,absoluteValueOffset);try{for(var bindings_1=__values(bindings),bindings_1_1=bindings_1.next();!bindings_1_1.done;bindings_1_1=bindings_1.next()){var binding=bindings_1_1.value;// sourceSpan is for the entire HTML attribute. bindingSpan is for a particular
// binding within the microsyntax expression so it's more narrow than sourceSpan.
var bindingSpan=moveParseSourceSpan(sourceSpan,binding.sourceSpan);var key=binding.key.source;var keySpan=moveParseSourceSpan(sourceSpan,binding.key.span);if(binding instanceof VariableBinding){var value=binding.value?binding.value.source:'$implicit';var valueSpan=binding.value?moveParseSourceSpan(sourceSpan,binding.value.span):undefined;targetVars.push(new ParsedVariable(key,value,bindingSpan,keySpan,valueSpan));}else if(binding.value){var valueSpan=moveParseSourceSpan(sourceSpan,binding.value.ast.sourceSpan);this._parsePropertyAst(key,binding.value,sourceSpan,valueSpan,targetMatchableAttrs,targetProps);}else{targetMatchableAttrs.push([key,'']);this.parseLiteralAttr(key,null,sourceSpan,absoluteValueOffset,undefined,targetMatchableAttrs,targetProps);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(bindings_1_1&&!bindings_1_1.done&&(_a=bindings_1["return"]))_a.call(bindings_1);}finally{if(e_1)throw e_1.error;}}};/**
         * Parses the bindings in a microsyntax expression, e.g.
         * ```
         *    <tag *tplKey="let value1 = prop; let value2 = localVar">
         * ```
         *
         * @param tplKey template binding name
         * @param tplValue template binding value
         * @param sourceSpan span of template binding relative to entire the template
         * @param absoluteKeyOffset start of the `tplKey`
         * @param absoluteValueOffset start of the `tplValue`
         */BindingParser.prototype._parseTemplateBindings=function(tplKey,tplValue,sourceSpan,absoluteKeyOffset,absoluteValueOffset){var _this=this;var sourceInfo=sourceSpan.start.toString();try{var bindingsResult=this._exprParser.parseTemplateBindings(tplKey,tplValue,sourceInfo,absoluteKeyOffset,absoluteValueOffset);this._reportExpressionParserErrors(bindingsResult.errors,sourceSpan);bindingsResult.templateBindings.forEach(function(binding){if(binding.value instanceof ASTWithSource){_this._checkPipes(binding.value,sourceSpan);}});bindingsResult.warnings.forEach(function(warning){_this._reportError(warning,sourceSpan,exports.ParseErrorLevel.WARNING);});return bindingsResult.templateBindings;}catch(e){this._reportError(""+e,sourceSpan);return[];}};BindingParser.prototype.parseLiteralAttr=function(name,value,sourceSpan,absoluteOffset,valueSpan,targetMatchableAttrs,targetProps){if(isAnimationLabel(name)){name=name.substring(1);if(value){this._reportError("Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid."+" Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.",sourceSpan,exports.ParseErrorLevel.ERROR);}this._parseAnimation(name,value,sourceSpan,absoluteOffset,valueSpan,targetMatchableAttrs,targetProps);}else{targetProps.push(new ParsedProperty(name,this._exprParser.wrapLiteralPrimitive(value,'',absoluteOffset),exports.ParsedPropertyType.LITERAL_ATTR,sourceSpan,valueSpan));}};BindingParser.prototype.parsePropertyBinding=function(name,expression,isHost,sourceSpan,absoluteOffset,valueSpan,targetMatchableAttrs,targetProps){if(name.length===0){this._reportError("Property name is missing in binding",sourceSpan);}var isAnimationProp=false;if(name.startsWith(ANIMATE_PROP_PREFIX)){isAnimationProp=true;name=name.substring(ANIMATE_PROP_PREFIX.length);}else if(isAnimationLabel(name)){isAnimationProp=true;name=name.substring(1);}if(isAnimationProp){this._parseAnimation(name,expression,sourceSpan,absoluteOffset,valueSpan,targetMatchableAttrs,targetProps);}else{this._parsePropertyAst(name,this._parseBinding(expression,isHost,valueSpan||sourceSpan,absoluteOffset),sourceSpan,valueSpan,targetMatchableAttrs,targetProps);}};BindingParser.prototype.parsePropertyInterpolation=function(name,value,sourceSpan,valueSpan,targetMatchableAttrs,targetProps){var expr=this.parseInterpolation(value,valueSpan||sourceSpan);if(expr){this._parsePropertyAst(name,expr,sourceSpan,valueSpan,targetMatchableAttrs,targetProps);return true;}return false;};BindingParser.prototype._parsePropertyAst=function(name,ast,sourceSpan,valueSpan,targetMatchableAttrs,targetProps){targetMatchableAttrs.push([name,ast.source]);targetProps.push(new ParsedProperty(name,ast,exports.ParsedPropertyType.DEFAULT,sourceSpan,valueSpan));};BindingParser.prototype._parseAnimation=function(name,expression,sourceSpan,absoluteOffset,valueSpan,targetMatchableAttrs,targetProps){if(name.length===0){this._reportError('Animation trigger is missing',sourceSpan);}// This will occur when a @trigger is not paired with an expression.
// For animations it is valid to not have an expression since */void
// states will be applied by angular when the element is attached/detached
var ast=this._parseBinding(expression||'undefined',false,valueSpan||sourceSpan,absoluteOffset);targetMatchableAttrs.push([name,ast.source]);targetProps.push(new ParsedProperty(name,ast,exports.ParsedPropertyType.ANIMATION,sourceSpan,valueSpan));};BindingParser.prototype._parseBinding=function(value,isHostBinding,sourceSpan,absoluteOffset){var sourceInfo=(sourceSpan&&sourceSpan.start||'(unknown)').toString();try{var ast=isHostBinding?this._exprParser.parseSimpleBinding(value,sourceInfo,absoluteOffset,this._interpolationConfig):this._exprParser.parseBinding(value,sourceInfo,absoluteOffset,this._interpolationConfig);if(ast)this._reportExpressionParserErrors(ast.errors,sourceSpan);this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo,absoluteOffset);}};BindingParser.prototype.createBoundElementProperty=function(elementSelector,boundProp,skipValidation,mapPropertyName){if(skipValidation===void 0){skipValidation=false;}if(mapPropertyName===void 0){mapPropertyName=true;}if(boundProp.isAnimation){return new BoundElementProperty(boundProp.name,4/* Animation */,SecurityContext.NONE,boundProp.expression,null,boundProp.sourceSpan,boundProp.valueSpan);}var unit=null;var bindingType=undefined;var boundPropertyName=null;var parts=boundProp.name.split(PROPERTY_PARTS_SEPARATOR);var securityContexts=undefined;// Check for special cases (prefix style, attr, class)
if(parts.length>1){if(parts[0]==ATTRIBUTE_PREFIX){boundPropertyName=parts.slice(1).join(PROPERTY_PARTS_SEPARATOR);if(!skipValidation){this._validatePropertyOrAttributeName(boundPropertyName,boundProp.sourceSpan,true);}securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,boundPropertyName,true);var nsSeparatorIdx=boundPropertyName.indexOf(':');if(nsSeparatorIdx>-1){var ns=boundPropertyName.substring(0,nsSeparatorIdx);var name_1=boundPropertyName.substring(nsSeparatorIdx+1);boundPropertyName=mergeNsAndName(ns,name_1);}bindingType=1/* Attribute */;}else if(parts[0]==CLASS_PREFIX){boundPropertyName=parts[1];bindingType=2/* Class */;securityContexts=[SecurityContext.NONE];}else if(parts[0]==STYLE_PREFIX){unit=parts.length>2?parts[2]:null;boundPropertyName=parts[1];bindingType=3/* Style */;securityContexts=[SecurityContext.STYLE];}}// If not a special case, use the full property name
if(boundPropertyName===null){var mappedPropName=this._schemaRegistry.getMappedPropName(boundProp.name);boundPropertyName=mapPropertyName?mappedPropName:boundProp.name;securityContexts=calcPossibleSecurityContexts(this._schemaRegistry,elementSelector,mappedPropName,false);bindingType=0/* Property */;if(!skipValidation){this._validatePropertyOrAttributeName(mappedPropName,boundProp.sourceSpan,false);}}return new BoundElementProperty(boundPropertyName,bindingType,securityContexts[0],boundProp.expression,unit,boundProp.sourceSpan,boundProp.valueSpan);};BindingParser.prototype.parseEvent=function(name,expression,sourceSpan,handlerSpan,targetMatchableAttrs,targetEvents){if(name.length===0){this._reportError("Event name is missing in binding",sourceSpan);}if(isAnimationLabel(name)){name=name.substr(1);this._parseAnimationEvent(name,expression,sourceSpan,handlerSpan,targetEvents);}else{this._parseRegularEvent(name,expression,sourceSpan,handlerSpan,targetMatchableAttrs,targetEvents);}};BindingParser.prototype.calcPossibleSecurityContexts=function(selector,propName,isAttribute){var prop=this._schemaRegistry.getMappedPropName(propName);return calcPossibleSecurityContexts(this._schemaRegistry,selector,prop,isAttribute);};BindingParser.prototype._parseAnimationEvent=function(name,expression,sourceSpan,handlerSpan,targetEvents){var matches=splitAtPeriod(name,[name,'']);var eventName=matches[0];var phase=matches[1].toLowerCase();if(phase){switch(phase){case'start':case'done':var ast=this._parseAction(expression,handlerSpan);targetEvents.push(new ParsedEvent(eventName,phase,1/* Animation */,ast,sourceSpan,handlerSpan));break;default:this._reportError("The provided animation output phase value \""+phase+"\" for \"@"+eventName+"\" is not supported (use start or done)",sourceSpan);break;}}else{this._reportError("The animation trigger output event (@"+eventName+") is missing its phase value name (start or done are currently supported)",sourceSpan);}};BindingParser.prototype._parseRegularEvent=function(name,expression,sourceSpan,handlerSpan,targetMatchableAttrs,targetEvents){// long format: 'target: eventName'
var _a=__read(splitAtColon(name,[null,name]),2),target=_a[0],eventName=_a[1];var ast=this._parseAction(expression,handlerSpan);targetMatchableAttrs.push([name,ast.source]);targetEvents.push(new ParsedEvent(eventName,target,0/* Regular */,ast,sourceSpan,handlerSpan));// Don't detect directives for event names for now,
// so don't add the event name to the matchableAttrs
};BindingParser.prototype._parseAction=function(value,sourceSpan){var sourceInfo=(sourceSpan&&sourceSpan.start||'(unknown').toString();var absoluteOffset=sourceSpan&&sourceSpan.start?sourceSpan.start.offset:0;try{var ast=this._exprParser.parseAction(value,sourceInfo,absoluteOffset,this._interpolationConfig);if(ast){this._reportExpressionParserErrors(ast.errors,sourceSpan);}if(!ast||ast.ast instanceof EmptyExpr){this._reportError("Empty expressions are not allowed",sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo,absoluteOffset);}this._checkPipes(ast,sourceSpan);return ast;}catch(e){this._reportError(""+e,sourceSpan);return this._exprParser.wrapLiteralPrimitive('ERROR',sourceInfo,absoluteOffset);}};BindingParser.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=exports.ParseErrorLevel.ERROR;}this.errors.push(new ParseError(sourceSpan,message,level));};BindingParser.prototype._reportExpressionParserErrors=function(errors,sourceSpan){var e_2,_a;try{for(var errors_1=__values(errors),errors_1_1=errors_1.next();!errors_1_1.done;errors_1_1=errors_1.next()){var error=errors_1_1.value;this._reportError(error.message,sourceSpan);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(errors_1_1&&!errors_1_1.done&&(_a=errors_1["return"]))_a.call(errors_1);}finally{if(e_2)throw e_2.error;}}};// Make sure all the used pipes are known in `this.pipesByName`
BindingParser.prototype._checkPipes=function(ast,sourceSpan){var _this=this;if(ast&&this.pipesByName){var collector=new PipeCollector();ast.visit(collector);collector.pipes.forEach(function(ast,pipeName){var pipeMeta=_this.pipesByName.get(pipeName);if(!pipeMeta){_this._reportError("The pipe '"+pipeName+"' could not be found",new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start),sourceSpan.start.moveBy(ast.span.end)));}else{_this._usedPipes.set(pipeName,pipeMeta);}});}};/**
         * @param propName the name of the property / attribute
         * @param sourceSpan
         * @param isAttr true when binding to an attribute
         */BindingParser.prototype._validatePropertyOrAttributeName=function(propName,sourceSpan,isAttr){var report=isAttr?this._schemaRegistry.validateAttribute(propName):this._schemaRegistry.validateProperty(propName);if(report.error){this._reportError(report.msg,sourceSpan,exports.ParseErrorLevel.ERROR);}};return BindingParser;}();var PipeCollector=/** @class */function(_super){__extends(PipeCollector,_super);function PipeCollector(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.pipes=new Map();return _this;}PipeCollector.prototype.visitPipe=function(ast,context){this.pipes.set(ast.name,ast);ast.exp.visit(this);this.visitAll(ast.args,context);return null;};return PipeCollector;}(RecursiveAstVisitor$1);function isAnimationLabel(name){return name[0]=='@';}function calcPossibleSecurityContexts(registry,selector,propName,isAttribute){var ctxs=[];CssSelector.parse(selector).forEach(function(selector){var elementNames=selector.element?[selector.element]:registry.allKnownElementNames();var notElementNames=new Set(selector.notSelectors.filter(function(selector){return selector.isElementSelector();}).map(function(selector){return selector.element;}));var possibleElementNames=elementNames.filter(function(elementName){return!notElementNames.has(elementName);});ctxs.push.apply(ctxs,__spread(possibleElementNames.map(function(elementName){return registry.securityContext(elementName,propName,isAttribute);})));});return ctxs.length===0?[SecurityContext.NONE]:Array.from(new Set(ctxs)).sort();}/**
     * Compute a new ParseSourceSpan based off an original `sourceSpan` by using
     * absolute offsets from the specified `absoluteSpan`.
     *
     * @param sourceSpan original source span
     * @param absoluteSpan absolute source span to move to
     */function moveParseSourceSpan(sourceSpan,absoluteSpan){// The difference of two absolute offsets provide the relative offset
var startDiff=absoluteSpan.start-sourceSpan.start.offset;var endDiff=absoluteSpan.end-sourceSpan.end.offset;return new ParseSourceSpan(sourceSpan.start.moveBy(startDiff),sourceSpan.end.moveBy(endDiff));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NG_CONTENT_SELECT_ATTR='select';var LINK_ELEMENT='link';var LINK_STYLE_REL_ATTR='rel';var LINK_STYLE_HREF_ATTR='href';var LINK_STYLE_REL_VALUE='stylesheet';var STYLE_ELEMENT='style';var SCRIPT_ELEMENT='script';var NG_NON_BINDABLE_ATTR='ngNonBindable';var NG_PROJECT_AS='ngProjectAs';function preparseElement(ast){var selectAttr=null;var hrefAttr=null;var relAttr=null;var nonBindable=false;var projectAs='';ast.attrs.forEach(function(attr){var lcAttrName=attr.name.toLowerCase();if(lcAttrName==NG_CONTENT_SELECT_ATTR){selectAttr=attr.value;}else if(lcAttrName==LINK_STYLE_HREF_ATTR){hrefAttr=attr.value;}else if(lcAttrName==LINK_STYLE_REL_ATTR){relAttr=attr.value;}else if(attr.name==NG_NON_BINDABLE_ATTR){nonBindable=true;}else if(attr.name==NG_PROJECT_AS){if(attr.value.length>0){projectAs=attr.value;}}});selectAttr=normalizeNgContentSelect(selectAttr);var nodeName=ast.name.toLowerCase();var type=PreparsedElementType.OTHER;if(isNgContent(nodeName)){type=PreparsedElementType.NG_CONTENT;}else if(nodeName==STYLE_ELEMENT){type=PreparsedElementType.STYLE;}else if(nodeName==SCRIPT_ELEMENT){type=PreparsedElementType.SCRIPT;}else if(nodeName==LINK_ELEMENT&&relAttr==LINK_STYLE_REL_VALUE){type=PreparsedElementType.STYLESHEET;}return new PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs);}var PreparsedElementType;(function(PreparsedElementType){PreparsedElementType[PreparsedElementType["NG_CONTENT"]=0]="NG_CONTENT";PreparsedElementType[PreparsedElementType["STYLE"]=1]="STYLE";PreparsedElementType[PreparsedElementType["STYLESHEET"]=2]="STYLESHEET";PreparsedElementType[PreparsedElementType["SCRIPT"]=3]="SCRIPT";PreparsedElementType[PreparsedElementType["OTHER"]=4]="OTHER";})(PreparsedElementType||(PreparsedElementType={}));var PreparsedElement=/** @class */function(){function PreparsedElement(type,selectAttr,hrefAttr,nonBindable,projectAs){this.type=type;this.selectAttr=selectAttr;this.hrefAttr=hrefAttr;this.nonBindable=nonBindable;this.projectAs=projectAs;}return PreparsedElement;}();function normalizeNgContentSelect(selectAttr){if(selectAttr===null||selectAttr.length===0){return'*';}return selectAttr;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var BIND_NAME_REGEXP=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.*))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var KW_BIND_IDX=1;// Group 2 = "let-"
var KW_LET_IDX=2;// Group 3 = "ref-/#"
var KW_REF_IDX=3;// Group 4 = "on-"
var KW_ON_IDX=4;// Group 5 = "bindon-"
var KW_BINDON_IDX=5;// Group 6 = "@"
var KW_AT_IDX=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var IDENT_KW_IDX=7;// Group 8 = identifier inside [()]
var IDENT_BANANA_BOX_IDX=8;// Group 9 = identifier inside []
var IDENT_PROPERTY_IDX=9;// Group 10 = identifier inside ()
var IDENT_EVENT_IDX=10;var TEMPLATE_ATTR_PREFIX$1='*';var CLASS_ATTR='class';var _TEXT_CSS_SELECTOR;function TEXT_CSS_SELECTOR(){if(!_TEXT_CSS_SELECTOR){_TEXT_CSS_SELECTOR=CssSelector.parse('*')[0];}return _TEXT_CSS_SELECTOR;}var TemplateParseError=/** @class */function(_super){__extends(TemplateParseError,_super);function TemplateParseError(message,span,level){return _super.call(this,span,message,level)||this;}return TemplateParseError;}(ParseError);var TemplateParseResult=/** @class */function(){function TemplateParseResult(templateAst,usedPipes,errors){this.templateAst=templateAst;this.usedPipes=usedPipes;this.errors=errors;}return TemplateParseResult;}();var TemplateParser=/** @class */function(){function TemplateParser(_config,_reflector,_exprParser,_schemaRegistry,_htmlParser,_console,transforms){this._config=_config;this._reflector=_reflector;this._exprParser=_exprParser;this._schemaRegistry=_schemaRegistry;this._htmlParser=_htmlParser;this._console=_console;this.transforms=transforms;}Object.defineProperty(TemplateParser.prototype,"expressionParser",{get:function get(){return this._exprParser;},enumerable:true,configurable:true});TemplateParser.prototype.parse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var result=this.tryParse(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces);var warnings=result.errors.filter(function(error){return error.level===exports.ParseErrorLevel.WARNING;});var errors=result.errors.filter(function(error){return error.level===exports.ParseErrorLevel.ERROR;});if(warnings.length>0){this._console.warn("Template parse warnings:\n"+warnings.join('\n'));}if(errors.length>0){var errorString=errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString,errors);}return{template:result.templateAst,pipes:result.usedPipes};};TemplateParser.prototype.tryParse=function(component,template,directives,pipes,schemas,templateUrl,preserveWhitespaces){var htmlParseResult=typeof template==='string'?this._htmlParser.parse(template,templateUrl,{tokenizeExpansionForms:true,interpolationConfig:this.getInterpolationConfig(component)}):template;if(!preserveWhitespaces){htmlParseResult=removeWhitespaces(htmlParseResult);}return this.tryParseHtml(this.expandHtml(htmlParseResult),component,directives,pipes,schemas);};TemplateParser.prototype.tryParseHtml=function(htmlAstWithErrors,component,directives,pipes,schemas){var result;var errors=htmlAstWithErrors.errors;var usedPipes=[];if(htmlAstWithErrors.rootNodes.length>0){var uniqDirectives=removeSummaryDuplicates(directives);var uniqPipes=removeSummaryDuplicates(pipes);var providerViewContext=new ProviderViewContext(this._reflector,component);var interpolationConfig=undefined;if(component.template&&component.template.interpolation){interpolationConfig={start:component.template.interpolation[0],end:component.template.interpolation[1]};}var bindingParser=new BindingParser(this._exprParser,interpolationConfig,this._schemaRegistry,uniqPipes,errors);var parseVisitor=new TemplateParseVisitor(this._reflector,this._config,providerViewContext,uniqDirectives,bindingParser,this._schemaRegistry,schemas,errors);result=visitAll$1(parseVisitor,htmlAstWithErrors.rootNodes,EMPTY_ELEMENT_CONTEXT);errors.push.apply(errors,__spread(providerViewContext.errors));usedPipes.push.apply(usedPipes,__spread(bindingParser.getUsedPipes()));}else{result=[];}this._assertNoReferenceDuplicationOnTemplate(result,errors);if(errors.length>0){return new TemplateParseResult(result,usedPipes,errors);}if(this.transforms){this.transforms.forEach(function(transform){result=templateVisitAll(transform,result);});}return new TemplateParseResult(result,usedPipes,errors);};TemplateParser.prototype.expandHtml=function(htmlAstWithErrors,forced){if(forced===void 0){forced=false;}var errors=htmlAstWithErrors.errors;if(errors.length==0||forced){// Transform ICU messages to angular directives
var expandedHtmlAst=expandNodes(htmlAstWithErrors.rootNodes);errors.push.apply(errors,__spread(expandedHtmlAst.errors));htmlAstWithErrors=new ParseTreeResult(expandedHtmlAst.nodes,errors);}return htmlAstWithErrors;};TemplateParser.prototype.getInterpolationConfig=function(component){if(component.template){return InterpolationConfig.fromArray(component.template.interpolation);}return undefined;};/** @internal */TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate=function(result,errors){var existingReferences=[];result.filter(function(element){return!!element.references;}).forEach(function(element){return element.references.forEach(function(reference){var name=reference.name;if(existingReferences.indexOf(name)<0){existingReferences.push(name);}else{var error=new TemplateParseError("Reference \"#"+name+"\" is defined several times",reference.sourceSpan,exports.ParseErrorLevel.ERROR);errors.push(error);}});});};return TemplateParser;}();var TemplateParseVisitor=/** @class */function(){function TemplateParseVisitor(reflector,config,providerViewContext,directives,_bindingParser,_schemaRegistry,_schemas,_targetErrors){var _this=this;this.reflector=reflector;this.config=config;this.providerViewContext=providerViewContext;this._bindingParser=_bindingParser;this._schemaRegistry=_schemaRegistry;this._schemas=_schemas;this._targetErrors=_targetErrors;this.selectorMatcher=new SelectorMatcher();this.directivesIndex=new Map();this.ngContentCount=0;// Note: queries start with id 1 so we can use the number in a Bloom filter!
this.contentQueryStartId=providerViewContext.component.viewQueries.length+1;directives.forEach(function(directive,index){var selector=CssSelector.parse(directive.selector);_this.selectorMatcher.addSelectables(selector,directive);_this.directivesIndex.set(directive,index);});}TemplateParseVisitor.prototype.visitExpansion=function(expansion,context){return null;};TemplateParseVisitor.prototype.visitExpansionCase=function(expansionCase,context){return null;};TemplateParseVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR());var valueNoNgsp=replaceNgsp(text.value);var expr=this._bindingParser.parseInterpolation(valueNoNgsp,text.sourceSpan);return expr?new BoundTextAst(expr,ngContentIndex,text.sourceSpan):new TextAst(valueNoNgsp,ngContentIndex,text.sourceSpan);};TemplateParseVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};TemplateParseVisitor.prototype.visitComment=function(comment,context){return null;};TemplateParseVisitor.prototype.visitElement=function(element,parent){var _this=this;var queryStartIndex=this.contentQueryStartId;var elName=element.name;var preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE){// Skipping <script> for security reasons
// Skipping <style> as we already processed them
// in the StyleCompiler
return null;}if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){// Skipping stylesheets with either relative urls or package scheme as we already processed
// them in the StyleCompiler
return null;}var matchableAttrs=[];var elementOrDirectiveProps=[];var elementOrDirectiveRefs=[];var elementVars=[];var events=[];var templateElementOrDirectiveProps=[];var templateMatchableAttrs=[];var templateElementVars=[];var hasInlineTemplates=false;var attrs=[];var isTemplateElement=isNgTemplate(element.name);element.attrs.forEach(function(attr){var parsedVariables=[];var hasBinding=_this._parseAttr(isTemplateElement,attr,matchableAttrs,elementOrDirectiveProps,events,elementOrDirectiveRefs,elementVars);elementVars.push.apply(elementVars,__spread(parsedVariables.map(function(v){return VariableAst.fromParsedVariable(v);})));var templateValue;var templateKey;var normalizedName=_this._normalizeAttributeName(attr.name);if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)){templateValue=attr.value;templateKey=normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length);}var hasTemplateBinding=templateValue!=null;if(hasTemplateBinding){if(hasInlineTemplates){_this._reportError("Can't have multiple template bindings on one element. Use only one attribute prefixed with *",attr.sourceSpan);}hasInlineTemplates=true;var parsedVariables_1=[];var absoluteOffset=(attr.valueSpan||attr.sourceSpan).start.offset;_this._bindingParser.parseInlineTemplateBinding(templateKey,templateValue,attr.sourceSpan,absoluteOffset,templateMatchableAttrs,templateElementOrDirectiveProps,parsedVariables_1);templateElementVars.push.apply(templateElementVars,__spread(parsedVariables_1.map(function(v){return VariableAst.fromParsedVariable(v);})));}if(!hasBinding&&!hasTemplateBinding){// don't include the bindings as attributes as well in the AST
attrs.push(_this.visitAttribute(attr,null));matchableAttrs.push([attr.name,attr.value]);}});var elementCssSelector=createElementCssSelector(elName,matchableAttrs);var _a=this._parseDirectives(this.selectorMatcher,elementCssSelector),directiveMetas=_a.directives,matchElement=_a.matchElement;var references=[];var boundDirectivePropNames=new Set();var directiveAsts=this._createDirectiveAsts(isTemplateElement,element.name,directiveMetas,elementOrDirectiveProps,elementOrDirectiveRefs,element.sourceSpan,references,boundDirectivePropNames);var elementProps=this._createElementPropertyAsts(element.name,elementOrDirectiveProps,boundDirectivePropNames);var isViewRoot=parent.isTemplateElement||hasInlineTemplates;var providerContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,isViewRoot,directiveAsts,attrs,references,isTemplateElement,queryStartIndex,element.sourceSpan);var children=visitAll$1(preparsedElement.nonBindable?NON_BINDABLE_VISITOR:this,element.children,ElementContext.create(isTemplateElement,directiveAsts,isTemplateElement?parent.providerContext:providerContext));providerContext.afterElement();// Override the actual selector when the `ngProjectAs` attribute is provided
var projectionSelector=preparsedElement.projectAs!=''?CssSelector.parse(preparsedElement.projectAs)[0]:elementCssSelector;var ngContentIndex=parent.findNgContentIndex(projectionSelector);var parsedElement;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){// `<ng-content>` element
if(element.children&&!element.children.every(_isEmptyTextNode)){this._reportError("<ng-content> element cannot have content.",element.sourceSpan);}parsedElement=new NgContentAst(this.ngContentCount++,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else if(isTemplateElement){// `<ng-template>` element
this._assertAllEventsPublishedByDirectives(directiveAsts,events);this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts,elementProps,element.sourceSpan);parsedElement=new EmbeddedTemplateAst(attrs,events,references,elementVars,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex,element.sourceSpan);}else{// element other than `<ng-content>` and `<ng-template>`
this._assertElementExists(matchElement,element);this._assertOnlyOneComponent(directiveAsts,element.sourceSpan);var ngContentIndex_1=hasInlineTemplates?null:parent.findNgContentIndex(projectionSelector);parsedElement=new ElementAst(elName,attrs,elementProps,events,references,providerContext.transformedDirectiveAsts,providerContext.transformProviders,providerContext.transformedHasViewContainer,providerContext.queryMatches,children,hasInlineTemplates?null:ngContentIndex_1,element.sourceSpan,element.endSourceSpan||null);}if(hasInlineTemplates){// The element as a *-attribute
var templateQueryStartIndex=this.contentQueryStartId;var templateSelector=createElementCssSelector('ng-template',templateMatchableAttrs);var directives=this._parseDirectives(this.selectorMatcher,templateSelector).directives;var templateBoundDirectivePropNames=new Set();var templateDirectiveAsts=this._createDirectiveAsts(true,elName,directives,templateElementOrDirectiveProps,[],element.sourceSpan,[],templateBoundDirectivePropNames);var templateElementProps=this._createElementPropertyAsts(elName,templateElementOrDirectiveProps,templateBoundDirectivePropNames);this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts,templateElementProps,element.sourceSpan);var templateProviderContext=new ProviderElementContext(this.providerViewContext,parent.providerContext,parent.isTemplateElement,templateDirectiveAsts,[],[],true,templateQueryStartIndex,element.sourceSpan);templateProviderContext.afterElement();parsedElement=new EmbeddedTemplateAst([],[],[],templateElementVars,templateProviderContext.transformedDirectiveAsts,templateProviderContext.transformProviders,templateProviderContext.transformedHasViewContainer,templateProviderContext.queryMatches,[parsedElement],ngContentIndex,element.sourceSpan);}return parsedElement;};TemplateParseVisitor.prototype._parseAttr=function(isTemplateElement,attr,targetMatchableAttrs,targetProps,targetEvents,targetRefs,targetVars){var name=this._normalizeAttributeName(attr.name);var value=attr.value;var srcSpan=attr.sourceSpan;var absoluteOffset=attr.valueSpan?attr.valueSpan.start.offset:srcSpan.start.offset;var boundEvents=[];var bindParts=name.match(BIND_NAME_REGEXP);var hasBinding=false;if(bindParts!==null){hasBinding=true;if(bindParts[KW_BIND_IDX]!=null){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);}else if(bindParts[KW_LET_IDX]){if(isTemplateElement){var identifier=bindParts[IDENT_KW_IDX];this._parseVariable(identifier,value,srcSpan,targetVars);}else{this._reportError("\"let-\" is only supported on ng-template elements.",srcSpan);}}else if(bindParts[KW_REF_IDX]){var identifier=bindParts[IDENT_KW_IDX];this._parseReference(identifier,value,srcSpan,targetRefs);}else if(bindParts[KW_ON_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX],value,srcSpan,attr.valueSpan||srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[KW_BINDON_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX],value,false,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_KW_IDX],value,srcSpan,attr.valueSpan||srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[KW_AT_IDX]){this._bindingParser.parseLiteralAttr(name,value,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_BANANA_BOX_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX],value,false,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX],value,srcSpan,attr.valueSpan||srcSpan,targetMatchableAttrs,boundEvents);}else if(bindParts[IDENT_PROPERTY_IDX]){this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX],value,false,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);}else if(bindParts[IDENT_EVENT_IDX]){this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX],value,srcSpan,attr.valueSpan||srcSpan,targetMatchableAttrs,boundEvents);}}else{hasBinding=this._bindingParser.parsePropertyInterpolation(name,value,srcSpan,attr.valueSpan,targetMatchableAttrs,targetProps);}if(!hasBinding){this._bindingParser.parseLiteralAttr(name,value,srcSpan,absoluteOffset,attr.valueSpan,targetMatchableAttrs,targetProps);}targetEvents.push.apply(targetEvents,__spread(boundEvents.map(function(e){return BoundEventAst.fromParsedEvent(e);})));return hasBinding;};TemplateParseVisitor.prototype._normalizeAttributeName=function(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;};TemplateParseVisitor.prototype._parseVariable=function(identifier,value,sourceSpan,targetVars){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in variable names",sourceSpan);}else if(identifier.length===0){this._reportError("Variable does not have a name",sourceSpan);}targetVars.push(new VariableAst(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseReference=function(identifier,value,sourceSpan,targetRefs){if(identifier.indexOf('-')>-1){this._reportError("\"-\" is not allowed in reference names",sourceSpan);}else if(identifier.length===0){this._reportError("Reference does not have a name",sourceSpan);}targetRefs.push(new ElementOrDirectiveRef(identifier,value,sourceSpan));};TemplateParseVisitor.prototype._parseAssignmentEvent=function(name,expression,sourceSpan,valueSpan,targetMatchableAttrs,targetEvents){this._bindingParser.parseEvent(name+"Change",expression+"=$event",sourceSpan,valueSpan,targetMatchableAttrs,targetEvents);};TemplateParseVisitor.prototype._parseDirectives=function(selectorMatcher,elementCssSelector){var _this=this;// Need to sort the directives so that we get consistent results throughout,
// as selectorMatcher uses Maps inside.
// Also deduplicate directives as they might match more than one time!
var directives=newArray(this.directivesIndex.size);// Whether any directive selector matches on the element name
var matchElement=false;selectorMatcher.match(elementCssSelector,function(selector,directive){directives[_this.directivesIndex.get(directive)]=directive;matchElement=matchElement||selector.hasElementSelector();});return{directives:directives.filter(function(dir){return!!dir;}),matchElement:matchElement};};TemplateParseVisitor.prototype._createDirectiveAsts=function(isTemplateElement,elementName,directives,props,elementOrDirectiveRefs,elementSourceSpan,targetReferences,targetBoundDirectivePropNames){var _this=this;var matchedReferences=new Set();var component=null;var directiveAsts=directives.map(function(directive){var sourceSpan=new ParseSourceSpan(elementSourceSpan.start,elementSourceSpan.end,"Directive "+identifierName(directive.type));if(directive.isComponent){component=directive;}var directiveProperties=[];var boundProperties=_this._bindingParser.createDirectiveHostPropertyAsts(directive,elementName,sourceSpan);var hostProperties=boundProperties.map(function(prop){return BoundElementPropertyAst.fromBoundProperty(prop);});// Note: We need to check the host properties here as well,
// as we don't know the element name in the DirectiveWrapperCompiler yet.
hostProperties=_this._checkPropertiesInSchema(elementName,hostProperties);var parsedEvents=_this._bindingParser.createDirectiveHostEventAsts(directive,sourceSpan);_this._createDirectivePropertyAsts(directive.inputs,props,directiveProperties,targetBoundDirectivePropNames);elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length===0&&directive.isComponent||elOrDirRef.isReferenceToDirective(directive)){targetReferences.push(new ReferenceAst(elOrDirRef.name,createTokenForReference(directive.type.reference),elOrDirRef.value,elOrDirRef.sourceSpan));matchedReferences.add(elOrDirRef.name);}});var hostEvents=parsedEvents.map(function(e){return BoundEventAst.fromParsedEvent(e);});var contentQueryStartId=_this.contentQueryStartId;_this.contentQueryStartId+=directive.queries.length;return new DirectiveAst(directive,directiveProperties,hostProperties,hostEvents,contentQueryStartId,sourceSpan);});elementOrDirectiveRefs.forEach(function(elOrDirRef){if(elOrDirRef.value.length>0){if(!matchedReferences.has(elOrDirRef.name)){_this._reportError("There is no directive with \"exportAs\" set to \""+elOrDirRef.value+"\"",elOrDirRef.sourceSpan);}}else if(!component){var refToken=null;if(isTemplateElement){refToken=createTokenForExternalReference(_this.reflector,Identifiers.TemplateRef);}targetReferences.push(new ReferenceAst(elOrDirRef.name,refToken,elOrDirRef.value,elOrDirRef.sourceSpan));}});return directiveAsts;};TemplateParseVisitor.prototype._createDirectivePropertyAsts=function(directiveProperties,boundProps,targetBoundDirectiveProps,targetBoundDirectivePropNames){if(directiveProperties){var boundPropsByName_1=new Map();boundProps.forEach(function(boundProp){var prevValue=boundPropsByName_1.get(boundProp.name);if(!prevValue||prevValue.isLiteral){// give [a]="b" a higher precedence than a="b" on the same element
boundPropsByName_1.set(boundProp.name,boundProp);}});Object.keys(directiveProperties).forEach(function(dirProp){var elProp=directiveProperties[dirProp];var boundProp=boundPropsByName_1.get(elProp);// Bindings are optional, so this binding only needs to be set up if an expression is given.
if(boundProp){targetBoundDirectivePropNames.add(boundProp.name);if(!isEmptyExpression(boundProp.expression)){targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp,boundProp.name,boundProp.expression,boundProp.sourceSpan));}}});}};TemplateParseVisitor.prototype._createElementPropertyAsts=function(elementName,props,boundDirectivePropNames){var _this=this;var boundElementProps=[];props.forEach(function(prop){if(!prop.isLiteral&&!boundDirectivePropNames.has(prop.name)){var boundProp=_this._bindingParser.createBoundElementProperty(elementName,prop);boundElementProps.push(BoundElementPropertyAst.fromBoundProperty(boundProp));}});return this._checkPropertiesInSchema(elementName,boundElementProps);};TemplateParseVisitor.prototype._findComponentDirectives=function(directives){return directives.filter(function(directive){return directive.directive.isComponent;});};TemplateParseVisitor.prototype._findComponentDirectiveNames=function(directives){return this._findComponentDirectives(directives).map(function(directive){return identifierName(directive.directive.type);});};TemplateParseVisitor.prototype._assertOnlyOneComponent=function(directives,sourceSpan){var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>1){this._reportError("More than one component matched on this element.\n"+"Make sure that only one component's selector can match a given element.\n"+("Conflicting components: "+componentTypeNames.join(',')),sourceSpan);}};/**
         * Make sure that non-angular tags conform to the schemas.
         *
         * Note: An element is considered an angular tag when at least one directive selector matches the
         * tag name.
         *
         * @param matchElement Whether any directive has matched on the tag name
         * @param element the html element
         */TemplateParseVisitor.prototype._assertElementExists=function(matchElement,element){var elName=element.name.replace(/^:xhtml:/,'');if(!matchElement&&!this._schemaRegistry.hasElement(elName,this._schemas)){var errorMsg="'"+elName+"' is not a known element:\n";errorMsg+="1. If '"+elName+"' is an Angular component, then verify that it is part of this module.\n";if(elName.indexOf('-')>-1){errorMsg+="2. If '"+elName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.";}else{errorMsg+="2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}this._reportError(errorMsg,element.sourceSpan);}};TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate=function(directives,elementProps,sourceSpan){var _this=this;var componentTypeNames=this._findComponentDirectiveNames(directives);if(componentTypeNames.length>0){this._reportError("Components on an embedded template: "+componentTypeNames.join(','),sourceSpan);}elementProps.forEach(function(prop){_this._reportError("Property binding "+prop.name+" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",sourceSpan);});};TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives=function(directives,events){var _this=this;var allDirectiveEvents=new Set();directives.forEach(function(directive){Object.keys(directive.directive.outputs).forEach(function(k){var eventName=directive.directive.outputs[k];allDirectiveEvents.add(eventName);});});events.forEach(function(event){if(event.target!=null||!allDirectiveEvents.has(event.name)){_this._reportError("Event binding "+event.fullName+" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".",event.sourceSpan);}});};TemplateParseVisitor.prototype._checkPropertiesInSchema=function(elementName,boundProps){var _this=this;// Note: We can't filter out empty expressions before this method,
// as we still want to validate them!
return boundProps.filter(function(boundProp){if(boundProp.type===0/* Property */&&!_this._schemaRegistry.hasProperty(elementName,boundProp.name,_this._schemas)){var errorMsg="Can't bind to '"+boundProp.name+"' since it isn't a known property of '"+elementName+"'.";if(elementName.startsWith('ng-')){errorMsg+="\n1. If '"+boundProp.name+"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component."+"\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}else if(elementName.indexOf('-')>-1){errorMsg+="\n1. If '"+elementName+"' is an Angular component and it has '"+boundProp.name+"' input, then verify that it is part of this module."+("\n2. If '"+elementName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.")+"\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}_this._reportError(errorMsg,boundProp.sourceSpan);}return!isEmptyExpression(boundProp.value);});};TemplateParseVisitor.prototype._reportError=function(message,sourceSpan,level){if(level===void 0){level=exports.ParseErrorLevel.ERROR;}this._targetErrors.push(new ParseError(sourceSpan,message,level));};return TemplateParseVisitor;}();var NonBindableVisitor=/** @class */function(){function NonBindableVisitor(){}NonBindableVisitor.prototype.visitElement=function(ast,parent){var preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var attrNameAndValues=ast.attrs.map(function(attr){return[attr.name,attr.value];});var selector=createElementCssSelector(ast.name,attrNameAndValues);var ngContentIndex=parent.findNgContentIndex(selector);var children=visitAll$1(this,ast.children,EMPTY_ELEMENT_CONTEXT);return new ElementAst(ast.name,visitAll$1(this,ast.attrs),[],[],[],[],[],false,[],children,ngContentIndex,ast.sourceSpan,ast.endSourceSpan);};NonBindableVisitor.prototype.visitComment=function(comment,context){return null;};NonBindableVisitor.prototype.visitAttribute=function(attribute,context){return new AttrAst(attribute.name,attribute.value,attribute.sourceSpan);};NonBindableVisitor.prototype.visitText=function(text,parent){var ngContentIndex=parent.findNgContentIndex(TEXT_CSS_SELECTOR());return new TextAst(text.value,ngContentIndex,text.sourceSpan);};NonBindableVisitor.prototype.visitExpansion=function(expansion,context){return expansion;};NonBindableVisitor.prototype.visitExpansionCase=function(expansionCase,context){return expansionCase;};return NonBindableVisitor;}();/**
     * A reference to an element or directive in a template. E.g., the reference in this template:
     *
     * <div #myMenu="coolMenu">
     *
     * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}
     */var ElementOrDirectiveRef=/** @class */function(){function ElementOrDirectiveRef(name,value,sourceSpan){this.name=name;this.value=value;this.sourceSpan=sourceSpan;}/** Gets whether this is a reference to the given directive. */ElementOrDirectiveRef.prototype.isReferenceToDirective=function(directive){return splitExportAs(directive.exportAs).indexOf(this.value)!==-1;};return ElementOrDirectiveRef;}();/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */function splitExportAs(exportAs){return exportAs?exportAs.split(',').map(function(e){return e.trim();}):[];}function splitClasses(classAttrValue){return classAttrValue.trim().split(/\s+/g);}var ElementContext=/** @class */function(){function ElementContext(isTemplateElement,_ngContentIndexMatcher,_wildcardNgContentIndex,providerContext){this.isTemplateElement=isTemplateElement;this._ngContentIndexMatcher=_ngContentIndexMatcher;this._wildcardNgContentIndex=_wildcardNgContentIndex;this.providerContext=providerContext;}ElementContext.create=function(isTemplateElement,directives,providerContext){var matcher=new SelectorMatcher();var wildcardNgContentIndex=null;var component=directives.find(function(directive){return directive.directive.isComponent;});if(component){var ngContentSelectors=component.directive.template.ngContentSelectors;for(var i=0;i<ngContentSelectors.length;i++){var selector=ngContentSelectors[i];if(selector==='*'){wildcardNgContentIndex=i;}else{matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]),i);}}}return new ElementContext(isTemplateElement,matcher,wildcardNgContentIndex,providerContext);};ElementContext.prototype.findNgContentIndex=function(selector){var ngContentIndices=[];this._ngContentIndexMatcher.match(selector,function(selector,ngContentIndex){ngContentIndices.push(ngContentIndex);});ngContentIndices.sort();if(this._wildcardNgContentIndex!=null){ngContentIndices.push(this._wildcardNgContentIndex);}return ngContentIndices.length>0?ngContentIndices[0]:null;};return ElementContext;}();function createElementCssSelector(elementName,attributes){var cssSelector=new CssSelector();var elNameNoNs=splitNsName(elementName)[1];cssSelector.setElement(elNameNoNs);for(var i=0;i<attributes.length;i++){var attrName=attributes[i][0];var attrNameNoNs=splitNsName(attrName)[1];var attrValue=attributes[i][1];cssSelector.addAttribute(attrNameNoNs,attrValue);if(attrName.toLowerCase()==CLASS_ATTR){var classes=splitClasses(attrValue);classes.forEach(function(className){return cssSelector.addClassName(className);});}}return cssSelector;}var EMPTY_ELEMENT_CONTEXT=new ElementContext(true,new SelectorMatcher(),null,null);var NON_BINDABLE_VISITOR=new NonBindableVisitor();function _isEmptyTextNode(node){return node instanceof Text$3&&node.value.trim().length==0;}function removeSummaryDuplicates(items){var map=new Map();items.forEach(function(item){if(!map.get(item.type.reference)){map.set(item.type.reference,item);}});return Array.from(map.values());}function isEmptyExpression(ast){if(ast instanceof ASTWithSource){ast=ast.ast;}return ast instanceof EmptyExpr;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Parses string representation of a style and converts it into object literal.
     *
     * @param value string representation of style as used in the `style` attribute in HTML.
     *   Example: `color: red; height: auto`.
     * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',
     * 'auto']`
     */function parse(value){// we use a string array here instead of a string map
// because a string-map is not guaranteed to retain the
// order of the entries whereas a string array can be
// constructed in a [key, value, key, value] format.
var styles=[];var i=0;var parenDepth=0;var quote=0/* QuoteNone */;var valueStart=0;var propStart=0;var currentProp=null;var valueHasQuotes=false;while(i<value.length){var token=value.charCodeAt(i++);switch(token){case 40/* OpenParen */:parenDepth++;break;case 41/* CloseParen */:parenDepth--;break;case 39/* QuoteSingle */:// valueStart needs to be there since prop values don't
// have quotes in CSS
valueHasQuotes=valueHasQuotes||valueStart>0;if(quote===0/* QuoteNone */){quote=39/* QuoteSingle */;}else if(quote===39/* QuoteSingle */&&value.charCodeAt(i-1)!==92/* BackSlash */){quote=0/* QuoteNone */;}break;case 34/* QuoteDouble */:// same logic as above
valueHasQuotes=valueHasQuotes||valueStart>0;if(quote===0/* QuoteNone */){quote=34/* QuoteDouble */;}else if(quote===34/* QuoteDouble */&&value.charCodeAt(i-1)!==92/* BackSlash */){quote=0/* QuoteNone */;}break;case 58/* Colon */:if(!currentProp&&parenDepth===0&&quote===0/* QuoteNone */){currentProp=hyphenate(value.substring(propStart,i-1).trim());valueStart=i;}break;case 59/* Semicolon */:if(currentProp&&valueStart>0&&parenDepth===0&&quote===0/* QuoteNone */){var styleVal=value.substring(valueStart,i-1).trim();styles.push(currentProp,valueHasQuotes?stripUnnecessaryQuotes(styleVal):styleVal);propStart=i;valueStart=0;currentProp=null;valueHasQuotes=false;}break;}}if(currentProp&&valueStart){var styleVal=value.substr(valueStart).trim();styles.push(currentProp,valueHasQuotes?stripUnnecessaryQuotes(styleVal):styleVal);}return styles;}function stripUnnecessaryQuotes(value){var qS=value.charCodeAt(0);var qE=value.charCodeAt(value.length-1);if(qS==qE&&(qS==39/* QuoteSingle */||qS==34/* QuoteDouble */)){var tempValue=value.substring(1,value.length-1);// special case to avoid using a multi-quoted string that was just chomped
// (e.g. `font-family: "Verdana", "sans-serif"`)
if(tempValue.indexOf('\'')==-1&&tempValue.indexOf('"')==-1){value=tempValue;}}return value;}function hyphenate(value){return value.replace(/[a-z][A-Z]/g,function(v){return v.charAt(0)+'-'+v.charAt(1);}).toLowerCase();}var IMPORTANT_FLAG='!important';/**
     * Minimum amount of binding slots required in the runtime for style/class bindings.
     *
     * Styling in Angular uses up two slots in the runtime LView/TData data structures to
     * record binding data, property information and metadata.
     *
     * When a binding is registered it will place the following information in the `LView`:
     *
     * slot 1) binding value
     * slot 2) cached value (all other values collected before it in string form)
     *
     * When a binding is registered it will place the following information in the `TData`:
     *
     * slot 1) prop name
     * slot 2) binding index that points to the previous style/class binding (and some extra config
     * values)
     *
     * Let's imagine we have a binding that looks like so:
     *
     * ```
     * <div [style.width]="x" [style.height]="y">
     * ```
     *
     * Our `LView` and `TData` data-structures look like so:
     *
     * ```typescript
     * LView = [
     *   // ...
     *   x, // value of x
     *   "width: x",
     *
     *   y, // value of y
     *   "width: x; height: y",
     *   // ...
     * ];
     *
     * TData = [
     *   // ...
     *   "width", // binding slot 20
     *   0,
     *
     *   "height",
     *   20,
     *   // ...
     * ];
     * ```
     *
     * */var MIN_STYLING_BINDING_SLOTS_REQUIRED=2;/**
     * Produces creation/update instructions for all styling bindings (class and style)
     *
     * It also produces the creation instruction to register all initial styling values
     * (which are all the static class="..." and style="..." attribute values that exist
     * on an element within a template).
     *
     * The builder class below handles producing instructions for the following cases:
     *
     * - Static style/class attributes (style="..." and class="...")
     * - Dynamic style/class map bindings ([style]="map" and [class]="map|string")
     * - Dynamic style/class property bindings ([style.prop]="exp" and [class.name]="exp")
     *
     * Due to the complex relationship of all of these cases, the instructions generated
     * for these attributes/properties/bindings must be done so in the correct order. The
     * order which these must be generated is as follows:
     *
     * if (createMode) {
     *   styling(...)
     * }
     * if (updateMode) {
     *   styleMap(...)
     *   classMap(...)
     *   styleProp(...)
     *   classProp(...)
     * }
     *
     * The creation/update methods within the builder class produce these instructions.
     */var StylingBuilder=/** @class */function(){function StylingBuilder(_directiveExpr){this._directiveExpr=_directiveExpr;/** Whether or not there are any static styling values present */this._hasInitialValues=false;/**
             *  Whether or not there are any styling bindings present
             *  (i.e. `[style]`, `[class]`, `[style.prop]` or `[class.name]`)
             */this.hasBindings=false;this.hasBindingsWithPipes=false;/** the input for [class] (if it exists) */this._classMapInput=null;/** the input for [style] (if it exists) */this._styleMapInput=null;/** an array of each [style.prop] input */this._singleStyleInputs=null;/** an array of each [class.name] input */this._singleClassInputs=null;this._lastStylingInput=null;this._firstStylingInput=null;// maps are used instead of hash maps because a Map will
// retain the ordering of the keys
/**
             * Represents the location of each style binding in the template
             * (e.g. `<div [style.width]="w" [style.height]="h">` implies
             * that `width=0` and `height=1`)
             */this._stylesIndex=new Map();/**
             * Represents the location of each class binding in the template
             * (e.g. `<div [class.big]="b" [class.hidden]="h">` implies
             * that `big=0` and `hidden=1`)
             */this._classesIndex=new Map();this._initialStyleValues=[];this._initialClassValues=[];}/**
         * Registers a given input to the styling builder to be later used when producing AOT code.
         *
         * The code below will only accept the input if it is somehow tied to styling (whether it be
         * style/class bindings or static style/class attributes).
         */StylingBuilder.prototype.registerBoundInput=function(input){// [attr.style] or [attr.class] are skipped in the code below,
// they should not be treated as styling-based bindings since
// they are intended to be written directly to the attr and
// will therefore skip all style/class resolution that is present
// with style="", [style]="" and [style.prop]="", class="",
// [class.prop]="". [class]="" assignments
var binding=null;var name=input.name;switch(input.type){case 0/* Property */:binding=this.registerInputBasedOnName(name,input.value,input.sourceSpan);break;case 3/* Style */:binding=this.registerStyleInput(name,false,input.value,input.sourceSpan,input.unit);break;case 2/* Class */:binding=this.registerClassInput(name,false,input.value,input.sourceSpan);break;}return binding?true:false;};StylingBuilder.prototype.registerInputBasedOnName=function(name,expression,sourceSpan){var binding=null;var prefix=name.substring(0,6);var isStyle=name==='style'||prefix==='style.'||prefix==='style!';var isClass=!isStyle&&(name==='class'||prefix==='class.'||prefix==='class!');if(isStyle||isClass){var isMapBased=name.charAt(5)!=='.';// style.prop or class.prop makes this a no
var property=name.substr(isMapBased?5:6);// the dot explains why there's a +1
if(isStyle){binding=this.registerStyleInput(property,isMapBased,expression,sourceSpan);}else{binding=this.registerClassInput(property,isMapBased,expression,sourceSpan);}}return binding;};StylingBuilder.prototype.registerStyleInput=function(name,isMapBased,value,sourceSpan,unit){if(isEmptyExpression(value)){return null;}name=normalizePropName(name);var _a=parseProperty(name),property=_a.property,hasOverrideFlag=_a.hasOverrideFlag,bindingUnit=_a.unit;var entry={name:property,sanitize:property?isStyleSanitizable(property):true,unit:unit||bindingUnit,value:value,sourceSpan:sourceSpan,hasOverrideFlag:hasOverrideFlag};if(isMapBased){this._styleMapInput=entry;}else{(this._singleStyleInputs=this._singleStyleInputs||[]).push(entry);registerIntoMap(this._stylesIndex,property);}this._lastStylingInput=entry;this._firstStylingInput=this._firstStylingInput||entry;this._checkForPipes(value);this.hasBindings=true;return entry;};StylingBuilder.prototype.registerClassInput=function(name,isMapBased,value,sourceSpan){if(isEmptyExpression(value)){return null;}var _a=parseProperty(name),property=_a.property,hasOverrideFlag=_a.hasOverrideFlag;var entry={name:property,value:value,sourceSpan:sourceSpan,sanitize:false,hasOverrideFlag:hasOverrideFlag,unit:null};if(isMapBased){if(this._classMapInput){throw new Error('[class] and [className] bindings cannot be used on the same element simultaneously');}this._classMapInput=entry;}else{(this._singleClassInputs=this._singleClassInputs||[]).push(entry);registerIntoMap(this._classesIndex,property);}this._lastStylingInput=entry;this._firstStylingInput=this._firstStylingInput||entry;this._checkForPipes(value);this.hasBindings=true;return entry;};StylingBuilder.prototype._checkForPipes=function(value){if(value instanceof ASTWithSource&&value.ast instanceof BindingPipe){this.hasBindingsWithPipes=true;}};/**
         * Registers the element's static style string value to the builder.
         *
         * @param value the style string (e.g. `width:100px; height:200px;`)
         */StylingBuilder.prototype.registerStyleAttr=function(value){this._initialStyleValues=parse(value);this._hasInitialValues=true;};/**
         * Registers the element's static class string value to the builder.
         *
         * @param value the className string (e.g. `disabled gold zoom`)
         */StylingBuilder.prototype.registerClassAttr=function(value){this._initialClassValues=value.trim().split(/\s+/g);this._hasInitialValues=true;};/**
         * Appends all styling-related expressions to the provided attrs array.
         *
         * @param attrs an existing array where each of the styling expressions
         * will be inserted into.
         */StylingBuilder.prototype.populateInitialStylingAttrs=function(attrs){// [CLASS_MARKER, 'foo', 'bar', 'baz' ...]
if(this._initialClassValues.length){attrs.push(literal(1/* Classes */));for(var i=0;i<this._initialClassValues.length;i++){attrs.push(literal(this._initialClassValues[i]));}}// [STYLE_MARKER, 'width', '200px', 'height', '100px', ...]
if(this._initialStyleValues.length){attrs.push(literal(2/* Styles */));for(var i=0;i<this._initialStyleValues.length;i+=2){attrs.push(literal(this._initialStyleValues[i]),literal(this._initialStyleValues[i+1]));}}};/**
         * Builds an instruction with all the expressions and parameters for `elementHostAttrs`.
         *
         * The instruction generation code below is used for producing the AOT statement code which is
         * responsible for registering initial styles (within a directive hostBindings' creation block),
         * as well as any of the provided attribute values, to the directive host element.
         */StylingBuilder.prototype.assignHostAttrs=function(attrs,definitionMap){if(this._directiveExpr&&(attrs.length||this._hasInitialValues)){this.populateInitialStylingAttrs(attrs);definitionMap.set('hostAttrs',literalArr(attrs));}};/**
         * Builds an instruction with all the expressions and parameters for `classMap`.
         *
         * The instruction data will contain all expressions for `classMap` to function
         * which includes the `[class]` expression params.
         */StylingBuilder.prototype.buildClassMapInstruction=function(valueConverter){if(this._classMapInput){return this._buildMapBasedInstruction(valueConverter,true,this._classMapInput);}return null;};/**
         * Builds an instruction with all the expressions and parameters for `styleMap`.
         *
         * The instruction data will contain all expressions for `styleMap` to function
         * which includes the `[style]` expression params.
         */StylingBuilder.prototype.buildStyleMapInstruction=function(valueConverter){if(this._styleMapInput){return this._buildMapBasedInstruction(valueConverter,false,this._styleMapInput);}return null;};StylingBuilder.prototype._buildMapBasedInstruction=function(valueConverter,isClassBased,stylingInput){// each styling binding value is stored in the LView
// map-based bindings allocate two slots: one for the
// previous binding value and another for the previous
// className or style attribute value.
var totalBindingSlotsRequired=MIN_STYLING_BINDING_SLOTS_REQUIRED;// these values must be outside of the update block so that they can
// be evaluated (the AST visit call) during creation time so that any
// pipes can be picked up in time before the template is built
var mapValue=stylingInput.value.visit(valueConverter);var reference;if(mapValue instanceof Interpolation){totalBindingSlotsRequired+=mapValue.expressions.length;reference=isClassBased?getClassMapInterpolationExpression(mapValue):getStyleMapInterpolationExpression(mapValue);}else{reference=isClassBased?Identifiers$1.classMap:Identifiers$1.styleMap;}return{reference:reference,calls:[{supportsInterpolation:true,sourceSpan:stylingInput.sourceSpan,allocateBindingSlots:totalBindingSlotsRequired,params:function params(convertFn){var convertResult=convertFn(mapValue);var params=Array.isArray(convertResult)?convertResult:[convertResult];return params;}}]};};StylingBuilder.prototype._buildSingleInputs=function(reference,inputs,valueConverter,getInterpolationExpressionFn,isClassBased){var instructions=[];inputs.forEach(function(input){var previousInstruction=instructions[instructions.length-1];var value=input.value.visit(valueConverter);var referenceForCall=reference;// each styling binding value is stored in the LView
// but there are two values stored for each binding:
//   1) the value itself
//   2) an intermediate value (concatenation of style up to this point).
//      We need to store the intermediate value so that we don't allocate
//      the strings on each CD.
var totalBindingSlotsRequired=MIN_STYLING_BINDING_SLOTS_REQUIRED;if(value instanceof Interpolation){totalBindingSlotsRequired+=value.expressions.length;if(getInterpolationExpressionFn){referenceForCall=getInterpolationExpressionFn(value);}}var call={sourceSpan:input.sourceSpan,allocateBindingSlots:totalBindingSlotsRequired,supportsInterpolation:!!getInterpolationExpressionFn,params:function params(convertFn){// params => stylingProp(propName, value, suffix|sanitizer)
var params=[];params.push(literal(input.name));var convertResult=convertFn(value);if(Array.isArray(convertResult)){params.push.apply(params,__spread(convertResult));}else{params.push(convertResult);}// [style.prop] bindings may use suffix values (e.g. px, em, etc...) and they
// can also use a sanitizer. Sanitization occurs for url-based entries. Having
// the suffix value and a sanitizer together into the instruction doesn't make
// any sense (url-based entries cannot be sanitized).
if(!isClassBased){if(input.unit){params.push(literal(input.unit));}else if(input.sanitize){params.push(importExpr(Identifiers$1.defaultStyleSanitizer));}}return params;}};// If we ended up generating a call to the same instruction as the previous styling property
// we can chain the calls together safely to save some bytes, otherwise we have to generate
// a separate instruction call. This is primarily a concern with interpolation instructions
// where we may start off with one `reference`, but end up using another based on the
// number of interpolations.
if(previousInstruction&&previousInstruction.reference===referenceForCall){previousInstruction.calls.push(call);}else{instructions.push({reference:referenceForCall,calls:[call]});}});return instructions;};StylingBuilder.prototype._buildClassInputs=function(valueConverter){if(this._singleClassInputs){return this._buildSingleInputs(Identifiers$1.classProp,this._singleClassInputs,valueConverter,null,true);}return[];};StylingBuilder.prototype._buildStyleInputs=function(valueConverter){if(this._singleStyleInputs){return this._buildSingleInputs(Identifiers$1.styleProp,this._singleStyleInputs,valueConverter,getStylePropInterpolationExpression,false);}return[];};/**
         * Constructs all instructions which contain the expressions that will be placed
         * into the update block of a template function or a directive hostBindings function.
         */StylingBuilder.prototype.buildUpdateLevelInstructions=function(valueConverter){var instructions=[];if(this.hasBindings){var styleMapInstruction=this.buildStyleMapInstruction(valueConverter);if(styleMapInstruction){instructions.push(styleMapInstruction);}var classMapInstruction=this.buildClassMapInstruction(valueConverter);if(classMapInstruction){instructions.push(classMapInstruction);}instructions.push.apply(instructions,__spread(this._buildStyleInputs(valueConverter)));instructions.push.apply(instructions,__spread(this._buildClassInputs(valueConverter)));}return instructions;};return StylingBuilder;}();function registerIntoMap(map,key){if(!map.has(key)){map.set(key,map.size);}}function isStyleSanitizable(prop){// Note that browsers support both the dash case and
// camel case property names when setting through JS.
return prop==='background-image'||prop==='backgroundImage'||prop==='background'||prop==='border-image'||prop==='borderImage'||prop==='border-image-source'||prop==='borderImageSource'||prop==='filter'||prop==='list-style'||prop==='listStyle'||prop==='list-style-image'||prop==='listStyleImage'||prop==='clip-path'||prop==='clipPath';}/**
     * Simple helper function to either provide the constant literal that will house the value
     * here or a null value if the provided values are empty.
     */function getConstantLiteralFromArray(constantPool,values){return values.length?constantPool.getConstLiteral(literalArr(values),true):NULL_EXPR;}function parseProperty(name){var hasOverrideFlag=false;var overrideIndex=name.indexOf(IMPORTANT_FLAG);if(overrideIndex!==-1){name=overrideIndex>0?name.substring(0,overrideIndex):'';hasOverrideFlag=true;}var unit='';var property=name;var unitIndex=name.lastIndexOf('.');if(unitIndex>0){unit=name.substr(unitIndex+1);property=name.substring(0,unitIndex);}return{property:property,unit:unit,hasOverrideFlag:hasOverrideFlag};}/**
     * Gets the instruction to generate for an interpolated class map.
     * @param interpolation An Interpolation AST
     */function getClassMapInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 1:return Identifiers$1.classMap;case 3:return Identifiers$1.classMapInterpolate1;case 5:return Identifiers$1.classMapInterpolate2;case 7:return Identifiers$1.classMapInterpolate3;case 9:return Identifiers$1.classMapInterpolate4;case 11:return Identifiers$1.classMapInterpolate5;case 13:return Identifiers$1.classMapInterpolate6;case 15:return Identifiers$1.classMapInterpolate7;case 17:return Identifiers$1.classMapInterpolate8;default:return Identifiers$1.classMapInterpolateV;}}/**
     * Gets the instruction to generate for an interpolated style map.
     * @param interpolation An Interpolation AST
     */function getStyleMapInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 1:return Identifiers$1.styleMap;case 3:return Identifiers$1.styleMapInterpolate1;case 5:return Identifiers$1.styleMapInterpolate2;case 7:return Identifiers$1.styleMapInterpolate3;case 9:return Identifiers$1.styleMapInterpolate4;case 11:return Identifiers$1.styleMapInterpolate5;case 13:return Identifiers$1.styleMapInterpolate6;case 15:return Identifiers$1.styleMapInterpolate7;case 17:return Identifiers$1.styleMapInterpolate8;default:return Identifiers$1.styleMapInterpolateV;}}/**
     * Gets the instruction to generate for an interpolated style prop.
     * @param interpolation An Interpolation AST
     */function getStylePropInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 1:return Identifiers$1.styleProp;case 3:return Identifiers$1.stylePropInterpolate1;case 5:return Identifiers$1.stylePropInterpolate2;case 7:return Identifiers$1.stylePropInterpolate3;case 9:return Identifiers$1.stylePropInterpolate4;case 11:return Identifiers$1.stylePropInterpolate5;case 13:return Identifiers$1.stylePropInterpolate6;case 15:return Identifiers$1.stylePropInterpolate7;case 17:return Identifiers$1.stylePropInterpolate8;default:return Identifiers$1.stylePropInterpolateV;}}function normalizePropName(prop){return hyphenate(prop);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(TokenType){TokenType[TokenType["Character"]=0]="Character";TokenType[TokenType["Identifier"]=1]="Identifier";TokenType[TokenType["Keyword"]=2]="Keyword";TokenType[TokenType["String"]=3]="String";TokenType[TokenType["Operator"]=4]="Operator";TokenType[TokenType["Number"]=5]="Number";TokenType[TokenType["Error"]=6]="Error";})(exports.TokenType||(exports.TokenType={}));var KEYWORDS=['var','let','as','null','undefined','true','false','if','else','this'];var Lexer=/** @class */function(){function Lexer(){}Lexer.prototype.tokenize=function(text){var scanner=new _Scanner(text);var tokens=[];var token=scanner.scanToken();while(token!=null){tokens.push(token);token=scanner.scanToken();}return tokens;};return Lexer;}();var Token$1=/** @class */function(){function Token(index,end,type,numValue,strValue){this.index=index;this.end=end;this.type=type;this.numValue=numValue;this.strValue=strValue;}Token.prototype.isCharacter=function(code){return this.type==exports.TokenType.Character&&this.numValue==code;};Token.prototype.isNumber=function(){return this.type==exports.TokenType.Number;};Token.prototype.isString=function(){return this.type==exports.TokenType.String;};Token.prototype.isOperator=function(operator){return this.type==exports.TokenType.Operator&&this.strValue==operator;};Token.prototype.isIdentifier=function(){return this.type==exports.TokenType.Identifier;};Token.prototype.isKeyword=function(){return this.type==exports.TokenType.Keyword;};Token.prototype.isKeywordLet=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='let';};Token.prototype.isKeywordAs=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='as';};Token.prototype.isKeywordNull=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='null';};Token.prototype.isKeywordUndefined=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='undefined';};Token.prototype.isKeywordTrue=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='true';};Token.prototype.isKeywordFalse=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='false';};Token.prototype.isKeywordThis=function(){return this.type==exports.TokenType.Keyword&&this.strValue=='this';};Token.prototype.isError=function(){return this.type==exports.TokenType.Error;};Token.prototype.toNumber=function(){return this.type==exports.TokenType.Number?this.numValue:-1;};Token.prototype.toString=function(){switch(this.type){case exports.TokenType.Character:case exports.TokenType.Identifier:case exports.TokenType.Keyword:case exports.TokenType.Operator:case exports.TokenType.String:case exports.TokenType.Error:return this.strValue;case exports.TokenType.Number:return this.numValue.toString();default:return null;}};return Token;}();function newCharacterToken(index,end,code){return new Token$1(index,end,exports.TokenType.Character,code,String.fromCharCode(code));}function newIdentifierToken(index,end,text){return new Token$1(index,end,exports.TokenType.Identifier,0,text);}function newKeywordToken(index,end,text){return new Token$1(index,end,exports.TokenType.Keyword,0,text);}function newOperatorToken(index,end,text){return new Token$1(index,end,exports.TokenType.Operator,0,text);}function newStringToken(index,end,text){return new Token$1(index,end,exports.TokenType.String,0,text);}function newNumberToken(index,end,n){return new Token$1(index,end,exports.TokenType.Number,n,'');}function newErrorToken(index,end,message){return new Token$1(index,end,exports.TokenType.Error,0,message);}var EOF=new Token$1(-1,-1,exports.TokenType.Character,0,'');var _Scanner=/** @class */function(){function _Scanner(input){this.input=input;this.peek=0;this.index=-1;this.length=input.length;this.advance();}_Scanner.prototype.advance=function(){this.peek=++this.index>=this.length?$EOF:this.input.charCodeAt(this.index);};_Scanner.prototype.scanToken=function(){var input=this.input,length=this.length;var peek=this.peek,index=this.index;// Skip whitespace.
while(peek<=$SPACE){if(++index>=length){peek=$EOF;break;}else{peek=input.charCodeAt(index);}}this.peek=peek;this.index=index;if(index>=length){return null;}// Handle identifiers and numbers.
if(isIdentifierStart(peek))return this.scanIdentifier();if(isDigit(peek))return this.scanNumber(index);var start=index;switch(peek){case $PERIOD:this.advance();return isDigit(this.peek)?this.scanNumber(start):newCharacterToken(start,this.index,$PERIOD);case $LPAREN:case $RPAREN:case $LBRACE:case $RBRACE:case $LBRACKET:case $RBRACKET:case $COMMA:case $COLON:case $SEMICOLON:return this.scanCharacter(start,peek);case $SQ:case $DQ:return this.scanString();case $HASH:case $PLUS:case $MINUS:case $STAR:case $SLASH:case $PERCENT:case $CARET:return this.scanOperator(start,String.fromCharCode(peek));case $QUESTION:return this.scanComplexOperator(start,'?',$PERIOD,'.');case $LT:case $GT:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=');case $BANG:case $EQ:return this.scanComplexOperator(start,String.fromCharCode(peek),$EQ,'=',$EQ,'=');case $AMPERSAND:return this.scanComplexOperator(start,'&',$AMPERSAND,'&');case $BAR:return this.scanComplexOperator(start,'|',$BAR,'|');case $NBSP:while(isWhitespace(this.peek)){this.advance();}return this.scanToken();}this.advance();return this.error("Unexpected character ["+String.fromCharCode(peek)+"]",0);};_Scanner.prototype.scanCharacter=function(start,code){this.advance();return newCharacterToken(start,this.index,code);};_Scanner.prototype.scanOperator=function(start,str){this.advance();return newOperatorToken(start,this.index,str);};/**
         * Tokenize a 2/3 char long operator
         *
         * @param start start index in the expression
         * @param one first symbol (always part of the operator)
         * @param twoCode code point for the second symbol
         * @param two second symbol (part of the operator when the second code point matches)
         * @param threeCode code point for the third symbol
         * @param three third symbol (part of the operator when provided and matches source expression)
         */_Scanner.prototype.scanComplexOperator=function(start,one,twoCode,two,threeCode,three){this.advance();var str=one;if(this.peek==twoCode){this.advance();str+=two;}if(threeCode!=null&&this.peek==threeCode){this.advance();str+=three;}return newOperatorToken(start,this.index,str);};_Scanner.prototype.scanIdentifier=function(){var start=this.index;this.advance();while(isIdentifierPart(this.peek)){this.advance();}var str=this.input.substring(start,this.index);return KEYWORDS.indexOf(str)>-1?newKeywordToken(start,this.index,str):newIdentifierToken(start,this.index,str);};_Scanner.prototype.scanNumber=function(start){var simple=this.index===start;this.advance();// Skip initial digit.
while(true){if(isDigit(this.peek)){// Do nothing.
}else if(this.peek==$PERIOD){simple=false;}else if(isExponentStart(this.peek)){this.advance();if(isExponentSign(this.peek))this.advance();if(!isDigit(this.peek))return this.error('Invalid exponent',-1);simple=false;}else{break;}this.advance();}var str=this.input.substring(start,this.index);var value=simple?parseIntAutoRadix(str):parseFloat(str);return newNumberToken(start,this.index,value);};_Scanner.prototype.scanString=function(){var start=this.index;var quote=this.peek;this.advance();// Skip initial quote.
var buffer='';var marker=this.index;var input=this.input;while(this.peek!=quote){if(this.peek==$BACKSLASH){buffer+=input.substring(marker,this.index);this.advance();var unescapedCode=void 0;// Workaround for TS2.1-introduced type strictness
this.peek=this.peek;if(this.peek==$u){// 4 character hex code for unicode character.
var hex=input.substring(this.index+1,this.index+5);if(/^[0-9a-f]+$/i.test(hex)){unescapedCode=parseInt(hex,16);}else{return this.error("Invalid unicode escape [\\u"+hex+"]",0);}for(var i=0;i<5;i++){this.advance();}}else{unescapedCode=unescape(this.peek);this.advance();}buffer+=String.fromCharCode(unescapedCode);marker=this.index;}else if(this.peek==$EOF){return this.error('Unterminated quote',0);}else{this.advance();}}var last=input.substring(marker,this.index);this.advance();// Skip terminating quote.
return newStringToken(start,this.index,buffer+last);};_Scanner.prototype.error=function(message,offset){var position=this.index+offset;return newErrorToken(position,this.index,"Lexer Error: "+message+" at column "+position+" in expression ["+this.input+"]");};return _Scanner;}();function isIdentifierStart(code){return $a<=code&&code<=$z||$A<=code&&code<=$Z||code==$_||code==$$;}function isIdentifier(input){if(input.length==0)return false;var scanner=new _Scanner(input);if(!isIdentifierStart(scanner.peek))return false;scanner.advance();while(scanner.peek!==$EOF){if(!isIdentifierPart(scanner.peek))return false;scanner.advance();}return true;}function isIdentifierPart(code){return isAsciiLetter(code)||isDigit(code)||code==$_||code==$$;}function isExponentStart(code){return code==$e||code==$E;}function isExponentSign(code){return code==$MINUS||code==$PLUS;}function isQuote(code){return code===$SQ||code===$DQ||code===$BT;}function unescape(code){switch(code){case $n:return $LF;case $f:return $FF;case $r:return $CR;case $t:return $TAB;case $v:return $VTAB;default:return code;}}function parseIntAutoRadix(text){var result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SplitInterpolation=/** @class */function(){function SplitInterpolation(strings,expressions,offsets){this.strings=strings;this.expressions=expressions;this.offsets=offsets;}return SplitInterpolation;}();var TemplateBindingParseResult=/** @class */function(){function TemplateBindingParseResult(templateBindings,warnings,errors){this.templateBindings=templateBindings;this.warnings=warnings;this.errors=errors;}return TemplateBindingParseResult;}();var defaultInterpolateRegExp=_createInterpolateRegExp(DEFAULT_INTERPOLATION_CONFIG);function _getInterpolateRegExp(config){if(config===DEFAULT_INTERPOLATION_CONFIG){return defaultInterpolateRegExp;}else{return _createInterpolateRegExp(config);}}function _createInterpolateRegExp(config){var pattern=escapeRegExp(config.start)+'([\\s\\S]*?)'+escapeRegExp(config.end);return new RegExp(pattern,'g');}var Parser$1=/** @class */function(){function Parser(_lexer){this._lexer=_lexer;this.errors=[];this.simpleExpressionChecker=SimpleExpressionChecker;}Parser.prototype.parseAction=function(input,location,absoluteOffset,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(this._stripComments(input));var ast=new _ParseAST(input,location,absoluteOffset,tokens,sourceToLex.length,true,this.errors,input.length-sourceToLex.length).parseChain();return new ASTWithSource(ast,input,location,absoluteOffset,this.errors);};Parser.prototype.parseBinding=function(input,location,absoluteOffset,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,absoluteOffset,interpolationConfig);return new ASTWithSource(ast,input,location,absoluteOffset,this.errors);};Parser.prototype.checkSimpleExpression=function(ast){var checker=new this.simpleExpressionChecker();ast.visit(checker);return checker.errors;};Parser.prototype.parseSimpleBinding=function(input,location,absoluteOffset,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var ast=this._parseBindingAst(input,location,absoluteOffset,interpolationConfig);var errors=this.checkSimpleExpression(ast);if(errors.length>0){this._reportError("Host binding expression cannot contain "+errors.join(' '),input,location);}return new ASTWithSource(ast,input,location,absoluteOffset,this.errors);};Parser.prototype._reportError=function(message,input,errLocation,ctxLocation){this.errors.push(new ParserError(message,input,errLocation,ctxLocation));};Parser.prototype._parseBindingAst=function(input,location,absoluteOffset,interpolationConfig){// Quotes expressions use 3rd-party expression language. We don't want to use
// our lexer or parser for that, so we check for that ahead of time.
var quote=this._parseQuote(input,location,absoluteOffset);if(quote!=null){return quote;}this._checkNoInterpolation(input,location,interpolationConfig);var sourceToLex=this._stripComments(input);var tokens=this._lexer.tokenize(sourceToLex);return new _ParseAST(input,location,absoluteOffset,tokens,sourceToLex.length,false,this.errors,input.length-sourceToLex.length).parseChain();};Parser.prototype._parseQuote=function(input,location,absoluteOffset){if(input==null)return null;var prefixSeparatorIndex=input.indexOf(':');if(prefixSeparatorIndex==-1)return null;var prefix=input.substring(0,prefixSeparatorIndex).trim();if(!isIdentifier(prefix))return null;var uninterpretedExpression=input.substring(prefixSeparatorIndex+1);var span=new ParseSpan(0,input.length);return new Quote(span,span.toAbsolute(absoluteOffset),prefix,uninterpretedExpression,location);};/**
         * Parse microsyntax template expression and return a list of bindings or
         * parsing errors in case the given expression is invalid.
         *
         * For example,
         * ```
         *   <div *ngFor="let item of items">
         *         ^      ^ absoluteValueOffset for `templateValue`
         *         absoluteKeyOffset for `templateKey`
         * ```
         * contains three bindings:
         * 1. ngFor -> null
         * 2. item -> NgForOfContext.$implicit
         * 3. ngForOf -> items
         *
         * This is apparent from the de-sugared template:
         * ```
         *   <ng-template ngFor let-item [ngForOf]="items">
         * ```
         *
         * @param templateKey name of directive, without the * prefix. For example: ngIf, ngFor
         * @param templateValue RHS of the microsyntax attribute
         * @param templateUrl template filename if it's external, component filename if it's inline
         * @param absoluteKeyOffset start of the `templateKey`
         * @param absoluteValueOffset start of the `templateValue`
         */Parser.prototype.parseTemplateBindings=function(templateKey,templateValue,templateUrl,absoluteKeyOffset,absoluteValueOffset){var tokens=this._lexer.tokenize(templateValue);var parser=new _ParseAST(templateValue,templateUrl,absoluteValueOffset,tokens,templateValue.length,false/* parseAction */,this.errors,0/* relative offset */);return parser.parseTemplateBindings({source:templateKey,span:new AbsoluteSourceSpan(absoluteKeyOffset,absoluteKeyOffset+templateKey.length)});};Parser.prototype.parseInterpolation=function(input,location,absoluteOffset,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var split=this.splitInterpolation(input,location,interpolationConfig);if(split==null)return null;var expressions=[];for(var i=0;i<split.expressions.length;++i){var expressionText=split.expressions[i];var sourceToLex=this._stripComments(expressionText);var tokens=this._lexer.tokenize(sourceToLex);var ast=new _ParseAST(input,location,absoluteOffset,tokens,sourceToLex.length,false,this.errors,split.offsets[i]+(expressionText.length-sourceToLex.length)).parseChain();expressions.push(ast);}var span=new ParseSpan(0,input==null?0:input.length);return new ASTWithSource(new Interpolation(span,span.toAbsolute(absoluteOffset),split.strings,expressions),input,location,absoluteOffset,this.errors);};Parser.prototype.splitInterpolation=function(input,location,interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}var regexp=_getInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length<=1){return null;}var strings=[];var expressions=[];var offsets=[];var offset=0;for(var i=0;i<parts.length;i++){var part=parts[i];if(i%2===0){// fixed string
strings.push(part);offset+=part.length;}else if(part.trim().length>0){offset+=interpolationConfig.start.length;expressions.push(part);offsets.push(offset);offset+=part.length+interpolationConfig.end.length;}else{this._reportError('Blank expressions are not allowed in interpolated strings',input,"at column "+this._findInterpolationErrorColumn(parts,i,interpolationConfig)+" in",location);expressions.push('$implicit');offsets.push(offset);}}return new SplitInterpolation(strings,expressions,offsets);};Parser.prototype.wrapLiteralPrimitive=function(input,location,absoluteOffset){var span=new ParseSpan(0,input==null?0:input.length);return new ASTWithSource(new LiteralPrimitive(span,span.toAbsolute(absoluteOffset),input),input,location,absoluteOffset,this.errors);};Parser.prototype._stripComments=function(input){var i=this._commentStart(input);return i!=null?input.substring(0,i).trim():input;};Parser.prototype._commentStart=function(input){var outerQuote=null;for(var i=0;i<input.length-1;i++){var _char6=input.charCodeAt(i);var nextChar=input.charCodeAt(i+1);if(_char6===$SLASH&&nextChar==$SLASH&&outerQuote==null)return i;if(outerQuote===_char6){outerQuote=null;}else if(outerQuote==null&&isQuote(_char6)){outerQuote=_char6;}}return null;};Parser.prototype._checkNoInterpolation=function(input,location,interpolationConfig){var regexp=_getInterpolateRegExp(interpolationConfig);var parts=input.split(regexp);if(parts.length>1){this._reportError("Got interpolation ("+interpolationConfig.start+interpolationConfig.end+") where expression was expected",input,"at column "+this._findInterpolationErrorColumn(parts,1,interpolationConfig)+" in",location);}};Parser.prototype._findInterpolationErrorColumn=function(parts,partInErrIdx,interpolationConfig){var errLocation='';for(var j=0;j<partInErrIdx;j++){errLocation+=j%2===0?parts[j]:""+interpolationConfig.start+parts[j]+interpolationConfig.end;}return errLocation.length;};return Parser;}();var IvyParser=/** @class */function(_super){__extends(IvyParser,_super);function IvyParser(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.simpleExpressionChecker=IvySimpleExpressionChecker;//
return _this;}return IvyParser;}(Parser$1);var _ParseAST=/** @class */function(){function _ParseAST(input,location,absoluteOffset,tokens,inputLength,parseAction,errors,offset){this.input=input;this.location=location;this.absoluteOffset=absoluteOffset;this.tokens=tokens;this.inputLength=inputLength;this.parseAction=parseAction;this.errors=errors;this.offset=offset;this.rparensExpected=0;this.rbracketsExpected=0;this.rbracesExpected=0;// Cache of expression start and input indeces to the absolute source span they map to, used to
// prevent creating superfluous source spans in `sourceSpan`.
// A serial of the expression start and input index is used for mapping because both are stateful
// and may change for subsequent expressions visited by the parser.
this.sourceSpanCache=new Map();this.index=0;}_ParseAST.prototype.peek=function(offset){var i=this.index+offset;return i<this.tokens.length?this.tokens[i]:EOF;};Object.defineProperty(_ParseAST.prototype,"next",{get:function get(){return this.peek(0);},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"atEOF",{/** Whether all the parser input has been processed. */get:function get(){return this.index>=this.tokens.length;},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"inputIndex",{/**
             * Index of the next token to be processed, or the end of the last token if all have been
             * processed.
             */get:function get(){return this.atEOF?this.currentEndIndex:this.next.index+this.offset;},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"currentEndIndex",{/**
             * End index of the last processed token, or the start of the first token if none have been
             * processed.
             */get:function get(){if(this.index>0){var curToken=this.peek(-1);return curToken.end+this.offset;}// No tokens have been processed yet; return the next token's start or the length of the input
// if there is no token.
if(this.tokens.length===0){return this.inputLength+this.offset;}return this.next.index+this.offset;},enumerable:true,configurable:true});Object.defineProperty(_ParseAST.prototype,"currentAbsoluteOffset",{/**
             * Returns the absolute offset of the start of the current token.
             */get:function get(){return this.absoluteOffset+this.inputIndex;},enumerable:true,configurable:true});_ParseAST.prototype.span=function(start){return new ParseSpan(start,this.currentEndIndex);};_ParseAST.prototype.sourceSpan=function(start){var serial=start+"@"+this.inputIndex;if(!this.sourceSpanCache.has(serial)){this.sourceSpanCache.set(serial,this.span(start).toAbsolute(this.absoluteOffset));}return this.sourceSpanCache.get(serial);};_ParseAST.prototype.advance=function(){this.index++;};_ParseAST.prototype.consumeOptionalCharacter=function(code){if(this.next.isCharacter(code)){this.advance();return true;}else{return false;}};_ParseAST.prototype.peekKeywordLet=function(){return this.next.isKeywordLet();};_ParseAST.prototype.peekKeywordAs=function(){return this.next.isKeywordAs();};_ParseAST.prototype.expectCharacter=function(code){if(this.consumeOptionalCharacter(code))return;this.error("Missing expected "+String.fromCharCode(code));};_ParseAST.prototype.consumeOptionalOperator=function(op){if(this.next.isOperator(op)){this.advance();return true;}else{return false;}};_ParseAST.prototype.expectOperator=function(operator){if(this.consumeOptionalOperator(operator))return;this.error("Missing expected operator "+operator);};_ParseAST.prototype.expectIdentifierOrKeyword=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()){this.error("Unexpected token "+n+", expected identifier or keyword");return'';}this.advance();return n.toString();};_ParseAST.prototype.expectIdentifierOrKeywordOrString=function(){var n=this.next;if(!n.isIdentifier()&&!n.isKeyword()&&!n.isString()){this.error("Unexpected token "+n+", expected identifier, keyword, or string");return'';}this.advance();return n.toString();};_ParseAST.prototype.parseChain=function(){var exprs=[];var start=this.inputIndex;while(this.index<this.tokens.length){var expr=this.parsePipe();exprs.push(expr);if(this.consumeOptionalCharacter($SEMICOLON)){if(!this.parseAction){this.error('Binding expression cannot contain chained expression');}while(this.consumeOptionalCharacter($SEMICOLON)){}// read all semicolons
}else if(this.index<this.tokens.length){this.error("Unexpected token '"+this.next+"'");}}if(exprs.length==0)return new EmptyExpr(this.span(start),this.sourceSpan(start));if(exprs.length==1)return exprs[0];return new Chain(this.span(start),this.sourceSpan(start),exprs);};_ParseAST.prototype.parsePipe=function(){var result=this.parseExpression();if(this.consumeOptionalOperator('|')){if(this.parseAction){this.error('Cannot have a pipe in an action expression');}do{var nameStart=this.inputIndex;var name_1=this.expectIdentifierOrKeyword();var nameSpan=this.sourceSpan(nameStart);var args=[];while(this.consumeOptionalCharacter($COLON)){args.push(this.parseExpression());}var start=result.span.start;result=new BindingPipe(this.span(start),this.sourceSpan(start),result,name_1,args,nameSpan);}while(this.consumeOptionalOperator('|'));}return result;};_ParseAST.prototype.parseExpression=function(){return this.parseConditional();};_ParseAST.prototype.parseConditional=function(){var start=this.inputIndex;var result=this.parseLogicalOr();if(this.consumeOptionalOperator('?')){var yes=this.parsePipe();var no=void 0;if(!this.consumeOptionalCharacter($COLON)){var end=this.inputIndex;var expression=this.input.substring(start,end);this.error("Conditional expression "+expression+" requires all 3 expressions");no=new EmptyExpr(this.span(start),this.sourceSpan(start));}else{no=this.parsePipe();}return new Conditional(this.span(start),this.sourceSpan(start),result,yes,no);}else{return result;}};_ParseAST.prototype.parseLogicalOr=function(){// '||'
var result=this.parseLogicalAnd();while(this.consumeOptionalOperator('||')){var right=this.parseLogicalAnd();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),'||',result,right);}return result;};_ParseAST.prototype.parseLogicalAnd=function(){// '&&'
var result=this.parseEquality();while(this.consumeOptionalOperator('&&')){var right=this.parseEquality();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),'&&',result,right);}return result;};_ParseAST.prototype.parseEquality=function(){// '==','!=','===','!=='
var result=this.parseRelational();while(this.next.type==exports.TokenType.Operator){var operator=this.next.strValue;switch(operator){case'==':case'===':case'!=':case'!==':this.advance();var right=this.parseRelational();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseRelational=function(){// '<', '>', '<=', '>='
var result=this.parseAdditive();while(this.next.type==exports.TokenType.Operator){var operator=this.next.strValue;switch(operator){case'<':case'>':case'<=':case'>=':this.advance();var right=this.parseAdditive();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseAdditive=function(){// '+', '-'
var result=this.parseMultiplicative();while(this.next.type==exports.TokenType.Operator){var operator=this.next.strValue;switch(operator){case'+':case'-':this.advance();var right=this.parseMultiplicative();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parseMultiplicative=function(){// '*', '%', '/'
var result=this.parsePrefix();while(this.next.type==exports.TokenType.Operator){var operator=this.next.strValue;switch(operator){case'*':case'%':case'/':this.advance();var right=this.parsePrefix();var start=result.span.start;result=new Binary(this.span(start),this.sourceSpan(start),operator,result,right);continue;}break;}return result;};_ParseAST.prototype.parsePrefix=function(){if(this.next.type==exports.TokenType.Operator){var start=this.inputIndex;var operator=this.next.strValue;var literalSpan=new ParseSpan(start,start);var literalSourceSpan=literalSpan.toAbsolute(this.absoluteOffset);var result=void 0;switch(operator){case'+':this.advance();result=this.parsePrefix();return new Binary(this.span(start),this.sourceSpan(start),'-',result,new LiteralPrimitive(literalSpan,literalSourceSpan,0));case'-':this.advance();result=this.parsePrefix();return new Binary(this.span(start),this.sourceSpan(start),operator,new LiteralPrimitive(literalSpan,literalSourceSpan,0),result);case'!':this.advance();result=this.parsePrefix();return new PrefixNot(this.span(start),this.sourceSpan(start),result);}}return this.parseCallChain();};_ParseAST.prototype.parseCallChain=function(){var result=this.parsePrimary();var resultStart=result.span.start;while(true){if(this.consumeOptionalCharacter($PERIOD)){result=this.parseAccessMemberOrMethodCall(result,false);}else if(this.consumeOptionalOperator('?.')){result=this.parseAccessMemberOrMethodCall(result,true);}else if(this.consumeOptionalCharacter($LBRACKET)){this.rbracketsExpected++;var key=this.parsePipe();this.rbracketsExpected--;this.expectCharacter($RBRACKET);if(this.consumeOptionalOperator('=')){var value=this.parseConditional();result=new KeyedWrite(this.span(resultStart),this.sourceSpan(resultStart),result,key,value);}else{result=new KeyedRead(this.span(resultStart),this.sourceSpan(resultStart),result,key);}}else if(this.consumeOptionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.rparensExpected--;this.expectCharacter($RPAREN);result=new FunctionCall(this.span(resultStart),this.sourceSpan(resultStart),result,args);}else if(this.consumeOptionalOperator('!')){result=new NonNullAssert(this.span(resultStart),this.sourceSpan(resultStart),result);}else{return result;}}};_ParseAST.prototype.parsePrimary=function(){var start=this.inputIndex;if(this.consumeOptionalCharacter($LPAREN)){this.rparensExpected++;var result=this.parsePipe();this.rparensExpected--;this.expectCharacter($RPAREN);return result;}else if(this.next.isKeywordNull()){this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),null);}else if(this.next.isKeywordUndefined()){this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),void 0);}else if(this.next.isKeywordTrue()){this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),true);}else if(this.next.isKeywordFalse()){this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),false);}else if(this.next.isKeywordThis()){this.advance();return new ImplicitReceiver(this.span(start),this.sourceSpan(start));}else if(this.consumeOptionalCharacter($LBRACKET)){this.rbracketsExpected++;var elements=this.parseExpressionList($RBRACKET);this.rbracketsExpected--;this.expectCharacter($RBRACKET);return new LiteralArray(this.span(start),this.sourceSpan(start),elements);}else if(this.next.isCharacter($LBRACE)){return this.parseLiteralMap();}else if(this.next.isIdentifier()){return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start),this.sourceSpan(start)),false);}else if(this.next.isNumber()){var value=this.next.toNumber();this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),value);}else if(this.next.isString()){var literalValue=this.next.toString();this.advance();return new LiteralPrimitive(this.span(start),this.sourceSpan(start),literalValue);}else if(this.index>=this.tokens.length){this.error("Unexpected end of expression: "+this.input);return new EmptyExpr(this.span(start),this.sourceSpan(start));}else{this.error("Unexpected token "+this.next);return new EmptyExpr(this.span(start),this.sourceSpan(start));}};_ParseAST.prototype.parseExpressionList=function(terminator){var result=[];if(!this.next.isCharacter(terminator)){do{result.push(this.parsePipe());}while(this.consumeOptionalCharacter($COMMA));}return result;};_ParseAST.prototype.parseLiteralMap=function(){var keys=[];var values=[];var start=this.inputIndex;this.expectCharacter($LBRACE);if(!this.consumeOptionalCharacter($RBRACE)){this.rbracesExpected++;do{var quoted=this.next.isString();var key=this.expectIdentifierOrKeywordOrString();keys.push({key:key,quoted:quoted});this.expectCharacter($COLON);values.push(this.parsePipe());}while(this.consumeOptionalCharacter($COMMA));this.rbracesExpected--;this.expectCharacter($RBRACE);}return new LiteralMap(this.span(start),this.sourceSpan(start),keys,values);};_ParseAST.prototype.parseAccessMemberOrMethodCall=function(receiver,isSafe){if(isSafe===void 0){isSafe=false;}var start=receiver.span.start;var nameStart=this.inputIndex;var id=this.expectIdentifierOrKeyword();var nameSpan=this.sourceSpan(nameStart);if(this.consumeOptionalCharacter($LPAREN)){this.rparensExpected++;var args=this.parseCallArguments();this.expectCharacter($RPAREN);this.rparensExpected--;var span=this.span(start);var sourceSpan=this.sourceSpan(start);return isSafe?new SafeMethodCall(span,sourceSpan,nameSpan,receiver,id,args):new MethodCall(span,sourceSpan,nameSpan,receiver,id,args);}else{if(isSafe){if(this.consumeOptionalOperator('=')){this.error('The \'?.\' operator cannot be used in the assignment');return new EmptyExpr(this.span(start),this.sourceSpan(start));}else{return new SafePropertyRead(this.span(start),this.sourceSpan(start),nameSpan,receiver,id);}}else{if(this.consumeOptionalOperator('=')){if(!this.parseAction){this.error('Bindings cannot contain assignments');return new EmptyExpr(this.span(start),this.sourceSpan(start));}var value=this.parseConditional();return new PropertyWrite(this.span(start),this.sourceSpan(start),nameSpan,receiver,id,value);}else{return new PropertyRead(this.span(start),this.sourceSpan(start),nameSpan,receiver,id);}}}};_ParseAST.prototype.parseCallArguments=function(){if(this.next.isCharacter($RPAREN))return[];var positionals=[];do{positionals.push(this.parsePipe());}while(this.consumeOptionalCharacter($COMMA));return positionals;};/**
         * Parses an identifier, a keyword, a string with an optional `-` in between,
         * and returns the string along with its absolute source span.
         */_ParseAST.prototype.expectTemplateBindingKey=function(){var result='';var operatorFound=false;var start=this.currentAbsoluteOffset;do{result+=this.expectIdentifierOrKeywordOrString();operatorFound=this.consumeOptionalOperator('-');if(operatorFound){result+='-';}}while(operatorFound);return{source:result,span:new AbsoluteSourceSpan(start,start+result.length)};};/**
         * Parse microsyntax template expression and return a list of bindings or
         * parsing errors in case the given expression is invalid.
         *
         * For example,
         * ```
         *   <div *ngFor="let item of items; index as i; trackBy: func">
         * ```
         * contains five bindings:
         * 1. ngFor -> null
         * 2. item -> NgForOfContext.$implicit
         * 3. ngForOf -> items
         * 4. i -> NgForOfContext.index
         * 5. ngForTrackBy -> func
         *
         * For a full description of the microsyntax grammar, see
         * https://gist.github.com/mhevery/d3530294cff2e4a1b3fe15ff75d08855
         *
         * @param templateKey name of the microsyntax directive, like ngIf, ngFor,
         * without the *, along with its absolute span.
         */_ParseAST.prototype.parseTemplateBindings=function(templateKey){var bindings=[];// The first binding is for the template key itself
// In *ngFor="let item of items", key = "ngFor", value = null
// In *ngIf="cond | pipe", key = "ngIf", value = "cond | pipe"
bindings.push.apply(bindings,__spread(this.parseDirectiveKeywordBindings(templateKey)));while(this.index<this.tokens.length){// If it starts with 'let', then this must be variable declaration
var letBinding=this.parseLetBinding();if(letBinding){bindings.push(letBinding);}else{// Two possible cases here, either `value "as" key` or
// "directive-keyword expression". We don't know which case, but both
// "value" and "directive-keyword" are template binding key, so consume
// the key first.
var key=this.expectTemplateBindingKey();// Peek at the next token, if it is "as" then this must be variable
// declaration.
var binding=this.parseAsBinding(key);if(binding){bindings.push(binding);}else{// Otherwise the key must be a directive keyword, like "of". Transform
// the key to actual key. Eg. of -> ngForOf, trackBy -> ngForTrackBy
key.source=templateKey.source+key.source[0].toUpperCase()+key.source.substring(1);bindings.push.apply(bindings,__spread(this.parseDirectiveKeywordBindings(key)));}}this.consumeStatementTerminator();}return new TemplateBindingParseResult(bindings,[]/* warnings */,this.errors);};/**
         * Parse a directive keyword, followed by a mandatory expression.
         * For example, "of items", "trackBy: func".
         * The bindings are: ngForOf -> items, ngForTrackBy -> func
         * There could be an optional "as" binding that follows the expression.
         * For example,
         * ```
         *   *ngFor="let item of items | slice:0:1 as collection".
         *                    ^^ ^^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^
         *               keyword    bound target   optional 'as' binding
         * ```
         *
         * @param key binding key, for example, ngFor, ngIf, ngForOf, along with its
         * absolute span.
         */_ParseAST.prototype.parseDirectiveKeywordBindings=function(key){var bindings=[];this.consumeOptionalCharacter($COLON);// trackBy: trackByFunction
var value=this.getDirectiveBoundTarget();var spanEnd=this.currentAbsoluteOffset;// The binding could optionally be followed by "as". For example,
// *ngIf="cond | pipe as x". In this case, the key in the "as" binding
// is "x" and the value is the template key itself ("ngIf"). Note that the
// 'key' in the current context now becomes the "value" in the next binding.
var asBinding=this.parseAsBinding(key);if(!asBinding){this.consumeStatementTerminator();spanEnd=this.currentAbsoluteOffset;}var sourceSpan=new AbsoluteSourceSpan(key.span.start,spanEnd);bindings.push(new ExpressionBinding(sourceSpan,key,value));if(asBinding){bindings.push(asBinding);}return bindings;};/**
         * Return the expression AST for the bound target of a directive keyword
         * binding. For example,
         * ```
         *   *ngIf="condition | pipe"
         *          ^^^^^^^^^^^^^^^^ bound target for "ngIf"
         *   *ngFor="let item of items"
         *                       ^^^^^ bound target for "ngForOf"
         * ```
         */_ParseAST.prototype.getDirectiveBoundTarget=function(){if(this.next===EOF||this.peekKeywordAs()||this.peekKeywordLet()){return null;}var ast=this.parsePipe();// example: "condition | async"
var _a=ast.span,start=_a.start,end=_a.end;var value=this.input.substring(start,end);return new ASTWithSource(ast,value,this.location,this.absoluteOffset+start,this.errors);};/**
         * Return the binding for a variable declared using `as`. Note that the order
         * of the key-value pair in this declaration is reversed. For example,
         * ```
         *   *ngFor="let item of items; index as i"
         *                              ^^^^^    ^
         *                              value    key
         * ```
         *
         * @param value name of the value in the declaration, "ngIf" in the example
         * above, along with its absolute span.
         */_ParseAST.prototype.parseAsBinding=function(value){if(!this.peekKeywordAs()){return null;}this.advance();// consume the 'as' keyword
var key=this.expectTemplateBindingKey();this.consumeStatementTerminator();var sourceSpan=new AbsoluteSourceSpan(value.span.start,this.currentAbsoluteOffset);return new VariableBinding(sourceSpan,key,value);};/**
         * Return the binding for a variable declared using `let`. For example,
         * ```
         *   *ngFor="let item of items; let i=index;"
         *           ^^^^^^^^           ^^^^^^^^^^^
         * ```
         * In the first binding, `item` is bound to `NgForOfContext.$implicit`.
         * In the second binding, `i` is bound to `NgForOfContext.index`.
         */_ParseAST.prototype.parseLetBinding=function(){if(!this.peekKeywordLet()){return null;}var spanStart=this.currentAbsoluteOffset;this.advance();// consume the 'let' keyword
var key=this.expectTemplateBindingKey();var value=null;if(this.consumeOptionalOperator('=')){value=this.expectTemplateBindingKey();}this.consumeStatementTerminator();var sourceSpan=new AbsoluteSourceSpan(spanStart,this.currentAbsoluteOffset);return new VariableBinding(sourceSpan,key,value);};/**
         * Consume the optional statement terminator: semicolon or comma.
         */_ParseAST.prototype.consumeStatementTerminator=function(){this.consumeOptionalCharacter($SEMICOLON)||this.consumeOptionalCharacter($COMMA);};_ParseAST.prototype.error=function(message,index){if(index===void 0){index=null;}this.errors.push(new ParserError(message,this.input,this.locationText(index),this.location));this.skip();};_ParseAST.prototype.locationText=function(index){if(index===void 0){index=null;}if(index==null)index=this.index;return index<this.tokens.length?"at column "+(this.tokens[index].index+1)+" in":"at the end of the expression";};// Error recovery should skip tokens until it encounters a recovery point. skip() treats
// the end of input and a ';' as unconditionally a recovery point. It also treats ')',
// '}' and ']' as conditional recovery points if one of calling productions is expecting
// one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing
// more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because
// of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols
// must be conditional as they must be skipped if none of the calling productions are not
// expecting the closing token else we will never make progress in the case of an
// extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because
// parseChain() is always the root production and it expects a ';'.
// If a production expects one of these token it increments the corresponding nesting count,
// and then decrements it just prior to checking if the token is in the input.
_ParseAST.prototype.skip=function(){var n=this.next;while(this.index<this.tokens.length&&!n.isCharacter($SEMICOLON)&&(this.rparensExpected<=0||!n.isCharacter($RPAREN))&&(this.rbracesExpected<=0||!n.isCharacter($RBRACE))&&(this.rbracketsExpected<=0||!n.isCharacter($RBRACKET))){if(this.next.isError()){this.errors.push(new ParserError(this.next.toString(),this.input,this.locationText(),this.location));}this.advance();n=this.next;}};return _ParseAST;}();var SimpleExpressionChecker=/** @class */function(){function SimpleExpressionChecker(){this.errors=[];}SimpleExpressionChecker.prototype.visitImplicitReceiver=function(ast,context){};SimpleExpressionChecker.prototype.visitInterpolation=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralPrimitive=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitPropertyWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitSafePropertyRead=function(ast,context){};SimpleExpressionChecker.prototype.visitMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitSafeMethodCall=function(ast,context){};SimpleExpressionChecker.prototype.visitFunctionCall=function(ast,context){};SimpleExpressionChecker.prototype.visitLiteralArray=function(ast,context){this.visitAll(ast.expressions);};SimpleExpressionChecker.prototype.visitLiteralMap=function(ast,context){this.visitAll(ast.values);};SimpleExpressionChecker.prototype.visitBinary=function(ast,context){};SimpleExpressionChecker.prototype.visitPrefixNot=function(ast,context){};SimpleExpressionChecker.prototype.visitNonNullAssert=function(ast,context){};SimpleExpressionChecker.prototype.visitConditional=function(ast,context){};SimpleExpressionChecker.prototype.visitPipe=function(ast,context){this.errors.push('pipes');};SimpleExpressionChecker.prototype.visitKeyedRead=function(ast,context){};SimpleExpressionChecker.prototype.visitKeyedWrite=function(ast,context){};SimpleExpressionChecker.prototype.visitAll=function(asts){var _this=this;return asts.map(function(node){return node.visit(_this);});};SimpleExpressionChecker.prototype.visitChain=function(ast,context){};SimpleExpressionChecker.prototype.visitQuote=function(ast,context){};return SimpleExpressionChecker;}();/**
     * This class extends SimpleExpressionChecker used in View Engine and performs more strict checks to
     * make sure host bindings do not contain pipes. In View Engine, having pipes in host bindings is
     * not supported as well, but in some cases (like `!(value | async)`) the error is not triggered at
     * compile time. In order to preserve View Engine behavior, more strict checks are introduced for
     * Ivy mode only.
     */var IvySimpleExpressionChecker=/** @class */function(_super){__extends(IvySimpleExpressionChecker,_super);function IvySimpleExpressionChecker(){return _super!==null&&_super.apply(this,arguments)||this;}IvySimpleExpressionChecker.prototype.visitBinary=function(ast,context){ast.left.visit(this);ast.right.visit(this);};IvySimpleExpressionChecker.prototype.visitPrefixNot=function(ast,context){ast.expression.visit(this);};return IvySimpleExpressionChecker;}(SimpleExpressionChecker);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!
//                               Reach out to mprobst for details.
//
// =================================================================================================
/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */var _SECURITY_SCHEMA;function SECURITY_SCHEMA(){if(!_SECURITY_SCHEMA){_SECURITY_SCHEMA={};// Case is insignificant below, all element and attribute names are lower-cased for lookup.
registerContext(SecurityContext.HTML,['iframe|srcdoc','*|innerHTML','*|outerHTML']);registerContext(SecurityContext.STYLE,['*|style']);// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.
registerContext(SecurityContext.URL,['*|formAction','area|href','area|ping','audio|src','a|href','a|ping','blockquote|cite','body|background','del|cite','form|action','img|src','img|srcset','input|src','ins|cite','q|cite','source|src','source|srcset','track|src','video|poster','video|src']);registerContext(SecurityContext.RESOURCE_URL,['applet|code','applet|codebase','base|href','embed|src','frame|src','head|profile','html|manifest','iframe|src','link|href','media|src','object|codebase','object|data','script|src']);}return _SECURITY_SCHEMA;}function registerContext(ctx,specs){var e_1,_a;try{for(var specs_1=__values(specs),specs_1_1=specs_1.next();!specs_1_1.done;specs_1_1=specs_1.next()){var spec=specs_1_1.value;_SECURITY_SCHEMA[spec.toLowerCase()]=ctx;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(specs_1_1&&!specs_1_1.done&&(_a=specs_1["return"]))_a.call(specs_1);}finally{if(e_1)throw e_1.error;}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ElementSchemaRegistry=/** @class */function(){function ElementSchemaRegistry(){}return ElementSchemaRegistry;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var BOOLEAN='boolean';var NUMBER='number';var STRING='string';var OBJECT='object';/**
     * This array represents the DOM schema. It encodes inheritance, properties, and events.
     *
     * ## Overview
     *
     * Each line represents one kind of element. The `element_inheritance` and properties are joined
     * using `element_inheritance|properties` syntax.
     *
     * ## Element Inheritance
     *
     * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.
     * Here the individual elements are separated by `,` (commas). Every element in the list
     * has identical properties.
     *
     * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is
     * specified then `""` (blank) element is assumed.
     *
     * NOTE: The blank element inherits from root `[Element]` element, the super element of all
     * elements.
     *
     * NOTE an element prefix such as `:svg:` has no special meaning to the schema.
     *
     * ## Properties
     *
     * Each element has a set of properties separated by `,` (commas). Each property can be prefixed
     * by a special character designating its type:
     *
     * - (no prefix): property is a string.
     * - `*`: property represents an event.
     * - `!`: property is a boolean.
     * - `#`: property is a number.
     * - `%`: property is an object.
     *
     * ## Query
     *
     * The class creates an internal squas representation which allows to easily answer the query of
     * if a given property exist on a given element.
     *
     * NOTE: We don't yet support querying for types or events.
     * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,
     *       see dom_element_schema_registry_spec.ts
     */ // =================================================================================================
// =================================================================================================
// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========
// =================================================================================================
// =================================================================================================
//
//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!
//
// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in
// dom_security_schema.ts. Reach out to mprobst & rjamet for details.
//
// =================================================================================================
var SCHEMA=['[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot'+/* added manually to avoid breaking changes */',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored','[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate','media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',':svg:graphics^:svg:|',':svg:animation^:svg:|*begin,*end,*repeat',':svg:geometry^:svg:|',':svg:componentTransferFunction^:svg:|',':svg:gradient^:svg:|',':svg:textContent^:svg:graphics|',':svg:textPositioning^:svg:textContent|','a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username','area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username','audio^media|','br^[HTMLElement]|clear','base^[HTMLElement]|href,target','body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink','button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value','canvas^[HTMLElement]|#height,#width','content^[HTMLElement]|select','dl^[HTMLElement]|!compact','datalist^[HTMLElement]|','details^[HTMLElement]|!open','dialog^[HTMLElement]|!open,returnValue','dir^[HTMLElement]|!compact','div^[HTMLElement]|align','embed^[HTMLElement]|align,height,name,src,type,width','fieldset^[HTMLElement]|!disabled,name','font^[HTMLElement]|color,face,size','form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target','frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src','frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows','hr^[HTMLElement]|align,color,!noShade,size,width','head^[HTMLElement]|','h1,h2,h3,h4,h5,h6^[HTMLElement]|align','html^[HTMLElement]|version','iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width','img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width','input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width','li^[HTMLElement]|type,#value','label^[HTMLElement]|htmlFor','legend^[HTMLElement]|align','link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type','map^[HTMLElement]|name','marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width','menu^[HTMLElement]|!compact','meta^[HTMLElement]|content,httpEquiv,name,scheme','meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value','ins,del^[HTMLElement]|cite,dateTime','ol^[HTMLElement]|!compact,!reversed,#start,type','object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width','optgroup^[HTMLElement]|!disabled,label','option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value','output^[HTMLElement]|defaultValue,%htmlFor,name,value','p^[HTMLElement]|align','param^[HTMLElement]|name,type,value,valueType','picture^[HTMLElement]|','pre^[HTMLElement]|#width','progress^[HTMLElement]|#max,#value','q,blockquote,cite^[HTMLElement]|','script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type','select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value','shadow^[HTMLElement]|','slot^[HTMLElement]|name','source^[HTMLElement]|media,sizes,src,srcset,type','span^[HTMLElement]|','style^[HTMLElement]|!disabled,media,type','caption^[HTMLElement]|align','th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width','col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width','table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width','tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign','tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign','template^[HTMLElement]|','textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap','title^[HTMLElement]|text','track^[HTMLElement]|!default,kind,label,src,srclang','ul^[HTMLElement]|!compact,type','unknown^[HTMLElement]|','video^media|#height,poster,#width',':svg:a^:svg:graphics|',':svg:animate^:svg:animation|',':svg:animateMotion^:svg:animation|',':svg:animateTransform^:svg:animation|',':svg:circle^:svg:geometry|',':svg:clipPath^:svg:graphics|',':svg:defs^:svg:graphics|',':svg:desc^:svg:|',':svg:discard^:svg:|',':svg:ellipse^:svg:geometry|',':svg:feBlend^:svg:|',':svg:feColorMatrix^:svg:|',':svg:feComponentTransfer^:svg:|',':svg:feComposite^:svg:|',':svg:feConvolveMatrix^:svg:|',':svg:feDiffuseLighting^:svg:|',':svg:feDisplacementMap^:svg:|',':svg:feDistantLight^:svg:|',':svg:feDropShadow^:svg:|',':svg:feFlood^:svg:|',':svg:feFuncA^:svg:componentTransferFunction|',':svg:feFuncB^:svg:componentTransferFunction|',':svg:feFuncG^:svg:componentTransferFunction|',':svg:feFuncR^:svg:componentTransferFunction|',':svg:feGaussianBlur^:svg:|',':svg:feImage^:svg:|',':svg:feMerge^:svg:|',':svg:feMergeNode^:svg:|',':svg:feMorphology^:svg:|',':svg:feOffset^:svg:|',':svg:fePointLight^:svg:|',':svg:feSpecularLighting^:svg:|',':svg:feSpotLight^:svg:|',':svg:feTile^:svg:|',':svg:feTurbulence^:svg:|',':svg:filter^:svg:|',':svg:foreignObject^:svg:graphics|',':svg:g^:svg:graphics|',':svg:image^:svg:graphics|',':svg:line^:svg:geometry|',':svg:linearGradient^:svg:gradient|',':svg:mpath^:svg:|',':svg:marker^:svg:|',':svg:mask^:svg:|',':svg:metadata^:svg:|',':svg:path^:svg:geometry|',':svg:pattern^:svg:|',':svg:polygon^:svg:geometry|',':svg:polyline^:svg:geometry|',':svg:radialGradient^:svg:gradient|',':svg:rect^:svg:geometry|',':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',':svg:script^:svg:|type',':svg:set^:svg:animation|',':svg:stop^:svg:|',':svg:style^:svg:|!disabled,media,title,type',':svg:switch^:svg:graphics|',':svg:symbol^:svg:|',':svg:tspan^:svg:textPositioning|',':svg:text^:svg:textPositioning|',':svg:textPath^:svg:textContent|',':svg:title^:svg:|',':svg:use^:svg:graphics|',':svg:view^:svg:|#zoomAndPan','data^[HTMLElement]|value','keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name','menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default','summary^[HTMLElement]|','time^[HTMLElement]|dateTime',':svg:cursor^:svg:|'];var _ATTR_TO_PROP={'class':'className','for':'htmlFor','formaction':'formAction','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var DomElementSchemaRegistry=/** @class */function(_super){__extends(DomElementSchemaRegistry,_super);function DomElementSchemaRegistry(){var _this=_super.call(this)||this;_this._schema={};SCHEMA.forEach(function(encodedType){var type={};var _a=__read(encodedType.split('|'),2),strType=_a[0],strProperties=_a[1];var properties=strProperties.split(',');var _b=__read(strType.split('^'),2),typeNames=_b[0],superName=_b[1];typeNames.split(',').forEach(function(tag){return _this._schema[tag.toLowerCase()]=type;});var superType=superName&&_this._schema[superName.toLowerCase()];if(superType){Object.keys(superType).forEach(function(prop){type[prop]=superType[prop];});}properties.forEach(function(property){if(property.length>0){switch(property[0]){case'*':// We don't yet support events.
// If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events
// will
// almost certainly introduce bad XSS vulnerabilities.
// type[property.substring(1)] = EVENT;
break;case'!':type[property.substring(1)]=BOOLEAN;break;case'#':type[property.substring(1)]=NUMBER;break;case'%':type[property.substring(1)]=OBJECT;break;default:type[property]=STRING;}}});});return _this;}DomElementSchemaRegistry.prototype.hasProperty=function(tagName,propName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return false;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Can't tell now as we don't know which properties a custom element will get
// once it is instantiated
return true;}}var elementProperties=this._schema[tagName.toLowerCase()]||this._schema['unknown'];return!!elementProperties[propName];};DomElementSchemaRegistry.prototype.hasElement=function(tagName,schemaMetas){if(schemaMetas.some(function(schema){return schema.name===NO_ERRORS_SCHEMA.name;})){return true;}if(tagName.indexOf('-')>-1){if(isNgContainer(tagName)||isNgContent(tagName)){return true;}if(schemaMetas.some(function(schema){return schema.name===CUSTOM_ELEMENTS_SCHEMA.name;})){// Allow any custom elements
return true;}}return!!this._schema[tagName.toLowerCase()];};/**
         * securityContext returns the security context for the given property on the given DOM tag.
         *
         * Tag and property name are statically known and cannot change at runtime, i.e. it is not
         * possible to bind a value into a changing attribute or tag name.
         *
         * The filtering is based on a list of allowed tags|attributes. All attributes in the schema
         * above are assumed to have the 'NONE' security context, i.e. that they are safe inert
         * string values. Only specific well known attack vectors are assigned their appropriate context.
         */DomElementSchemaRegistry.prototype.securityContext=function(tagName,propName,isAttribute){if(isAttribute){// NB: For security purposes, use the mapped property name, not the attribute name.
propName=this.getMappedPropName(propName);}// Make sure comparisons are case insensitive, so that case differences between attribute and
// property names do not have a security impact.
tagName=tagName.toLowerCase();propName=propName.toLowerCase();var ctx=SECURITY_SCHEMA()[tagName+'|'+propName];if(ctx){return ctx;}ctx=SECURITY_SCHEMA()['*|'+propName];return ctx?ctx:SecurityContext.NONE;};DomElementSchemaRegistry.prototype.getMappedPropName=function(propName){return _ATTR_TO_PROP[propName]||propName;};DomElementSchemaRegistry.prototype.getDefaultComponentElementName=function(){return'ng-component';};DomElementSchemaRegistry.prototype.validateProperty=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event property '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...")+("\nIf '"+name+"' is a directive input, make sure the directive is imported by the")+" current module.";return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.validateAttribute=function(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event attribute '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...");return{error:true,msg:msg};}else{return{error:false};}};DomElementSchemaRegistry.prototype.allKnownElementNames=function(){return Object.keys(this._schema);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty=function(propName){return dashCaseToCamelCase(propName);};DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue=function(camelCaseProp,userProvidedProp,val){var unit='';var strVal=val.toString().trim();var errorMsg=null;if(_isPixelDimensionStyle(camelCaseProp)&&val!==0&&val!=='0'){if(typeof val==='number'){unit='px';}else{var valAndSuffixMatch=val.match(/^[+-]?[\d\.]+([a-z]*)$/);if(valAndSuffixMatch&&valAndSuffixMatch[1].length==0){errorMsg="Please provide a CSS unit value for "+userProvidedProp+":"+val;}}}return{error:errorMsg,value:strVal+unit};};return DomElementSchemaRegistry;}(ElementSchemaRegistry);function _isPixelDimensionStyle(prop){switch(prop){case'width':case'height':case'minWidth':case'minHeight':case'maxWidth':case'maxHeight':case'left':case'top':case'bottom':case'right':case'fontSize':case'outlineWidth':case'outlineOffset':case'paddingTop':case'paddingLeft':case'paddingBottom':case'paddingRight':case'marginTop':case'marginLeft':case'marginBottom':case'marginRight':case'borderRadius':case'borderWidth':case'borderTopWidth':case'borderLeftWidth':case'borderRightWidth':case'borderBottomWidth':case'textIndent':return true;default:return false;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var BIND_NAME_REGEXP$1=/^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.*))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;// Group 1 = "bind-"
var KW_BIND_IDX$1=1;// Group 2 = "let-"
var KW_LET_IDX$1=2;// Group 3 = "ref-/#"
var KW_REF_IDX$1=3;// Group 4 = "on-"
var KW_ON_IDX$1=4;// Group 5 = "bindon-"
var KW_BINDON_IDX$1=5;// Group 6 = "@"
var KW_AT_IDX$1=6;// Group 7 = the identifier after "bind-", "let-", "ref-/#", "on-", "bindon-" or "@"
var IDENT_KW_IDX$1=7;// Group 8 = identifier inside [()]
var IDENT_BANANA_BOX_IDX$1=8;// Group 9 = identifier inside []
var IDENT_PROPERTY_IDX$1=9;// Group 10 = identifier inside ()
var IDENT_EVENT_IDX$1=10;var TEMPLATE_ATTR_PREFIX$2='*';function htmlAstToRender3Ast(htmlNodes,bindingParser){var transformer=new HtmlAstToIvyAst(bindingParser);var ivyNodes=visitAll$1(transformer,htmlNodes);// Errors might originate in either the binding parser or the html to ivy transformer
var allErrors=bindingParser.errors.concat(transformer.errors);var errors=allErrors.filter(function(e){return e.level===exports.ParseErrorLevel.ERROR;});if(errors.length>0){var errorString=errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString,errors);}return{nodes:ivyNodes,errors:allErrors,styleUrls:transformer.styleUrls,styles:transformer.styles,ngContentSelectors:transformer.ngContentSelectors};}var HtmlAstToIvyAst=/** @class */function(){function HtmlAstToIvyAst(bindingParser){this.bindingParser=bindingParser;this.errors=[];this.styles=[];this.styleUrls=[];this.ngContentSelectors=[];this.inI18nBlock=false;}// HTML visitor
HtmlAstToIvyAst.prototype.visitElement=function(element){var e_1,_a;var _this=this;var isI18nRootElement=isI18nRootNode(element.i18n);if(isI18nRootElement){if(this.inI18nBlock){this.reportError('Cannot mark an element as translatable inside of a translatable section. Please remove the nested i18n marker.',element.sourceSpan);}this.inI18nBlock=true;}var preparsedElement=preparseElement(element);if(preparsedElement.type===PreparsedElementType.SCRIPT){return null;}else if(preparsedElement.type===PreparsedElementType.STYLE){var contents=textContents(element);if(contents!==null){this.styles.push(contents);}return null;}else if(preparsedElement.type===PreparsedElementType.STYLESHEET&&isStyleUrlResolvable(preparsedElement.hrefAttr)){this.styleUrls.push(preparsedElement.hrefAttr);return null;}// Whether the element is a `<ng-template>`
var isTemplateElement=isNgTemplate(element.name);var parsedProperties=[];var boundEvents=[];var variables=[];var references=[];var attributes=[];var i18nAttrsMeta={};var templateParsedProperties=[];var templateVariables=[];// Whether the element has any *-attribute
var elementHasInlineTemplate=false;try{for(var _b=__values(element.attrs),_c=_b.next();!_c.done;_c=_b.next()){var attribute=_c.value;var hasBinding=false;var normalizedName=normalizeAttributeName(attribute.name);// `*attr` defines template bindings
var isTemplateBinding=false;if(attribute.i18n){i18nAttrsMeta[attribute.name]=attribute.i18n;}if(normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$2)){// *-attributes
if(elementHasInlineTemplate){this.reportError("Can't have multiple template bindings on one element. Use only one attribute prefixed with *",attribute.sourceSpan);}isTemplateBinding=true;elementHasInlineTemplate=true;var templateValue=attribute.value;var templateKey=normalizedName.substring(TEMPLATE_ATTR_PREFIX$2.length);var parsedVariables=[];var absoluteValueOffset=attribute.valueSpan?attribute.valueSpan.start.offset:// If there is no value span the attribute does not have a value, like `attr` in
//`<div attr></div>`. In this case, point to one character beyond the last character of
// the attribute name.
attribute.sourceSpan.start.offset+attribute.name.length;this.bindingParser.parseInlineTemplateBinding(templateKey,templateValue,attribute.sourceSpan,absoluteValueOffset,[],templateParsedProperties,parsedVariables);templateVariables.push.apply(templateVariables,__spread(parsedVariables.map(function(v){return new Variable(v.name,v.value,v.sourceSpan,v.valueSpan);})));}else{// Check for variables, events, property bindings, interpolation
hasBinding=this.parseAttribute(isTemplateElement,attribute,[],parsedProperties,boundEvents,variables,references);}if(!hasBinding&&!isTemplateBinding){// don't include the bindings as attributes as well in the AST
attributes.push(this.visitAttribute(attribute));}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}var children=visitAll$1(preparsedElement.nonBindable?NON_BINDABLE_VISITOR$1:this,element.children);var parsedElement;if(preparsedElement.type===PreparsedElementType.NG_CONTENT){// `<ng-content>`
if(element.children&&!element.children.every(function(node){return isEmptyTextNode(node)||isCommentNode(node);})){this.reportError("<ng-content> element cannot have content.",element.sourceSpan);}var selector=preparsedElement.selectAttr;var attrs=element.attrs.map(function(attr){return _this.visitAttribute(attr);});parsedElement=new Content(selector,attrs,element.sourceSpan,element.i18n);this.ngContentSelectors.push(selector);}else if(isTemplateElement){// `<ng-template>`
var attrs=this.extractAttributes(element.name,parsedProperties,i18nAttrsMeta);parsedElement=new Template(element.name,attributes,attrs.bound,boundEvents,[/* no template attributes */],children,references,variables,element.sourceSpan,element.startSourceSpan,element.endSourceSpan,element.i18n);}else{var attrs=this.extractAttributes(element.name,parsedProperties,i18nAttrsMeta);parsedElement=new Element(element.name,attributes,attrs.bound,boundEvents,children,references,element.sourceSpan,element.startSourceSpan,element.endSourceSpan,element.i18n);}if(elementHasInlineTemplate){// If this node is an inline-template (e.g. has *ngFor) then we need to create a template
// node that contains this node.
// Moreover, if the node is an element, then we need to hoist its attributes to the template
// node for matching against content projection selectors.
var attrs=this.extractAttributes('ng-template',templateParsedProperties,i18nAttrsMeta);var templateAttrs_1=[];attrs.literal.forEach(function(attr){return templateAttrs_1.push(attr);});attrs.bound.forEach(function(attr){return templateAttrs_1.push(attr);});var hoistedAttrs=parsedElement instanceof Element?{attributes:parsedElement.attributes,inputs:parsedElement.inputs,outputs:parsedElement.outputs}:{attributes:[],inputs:[],outputs:[]};// For <ng-template>s with structural directives on them, avoid passing i18n information to
// the wrapping template to prevent unnecessary i18n instructions from being generated. The
// necessary i18n meta information will be extracted from child elements.
var i18n_1=isTemplateElement&&isI18nRootElement?undefined:element.i18n;// TODO(pk): test for this case
parsedElement=new Template(parsedElement.name,hoistedAttrs.attributes,hoistedAttrs.inputs,hoistedAttrs.outputs,templateAttrs_1,[parsedElement],[/* no references */],templateVariables,element.sourceSpan,element.startSourceSpan,element.endSourceSpan,i18n_1);}if(isI18nRootElement){this.inI18nBlock=false;}return parsedElement;};HtmlAstToIvyAst.prototype.visitAttribute=function(attribute){return new TextAttribute(attribute.name,attribute.value,attribute.sourceSpan,attribute.valueSpan,attribute.i18n);};HtmlAstToIvyAst.prototype.visitText=function(text){return this._visitTextWithInterpolation(text.value,text.sourceSpan,text.i18n);};HtmlAstToIvyAst.prototype.visitExpansion=function(expansion){var _this=this;if(!expansion.i18n){// do not generate Icu in case it was created
// outside of i18n block in a template
return null;}if(!isI18nRootNode(expansion.i18n)){throw new Error("Invalid type \""+expansion.i18n.constructor+"\" for \"i18n\" property of "+expansion.sourceSpan.toString()+". Expected a \"Message\"");}var message=expansion.i18n;var vars={};var placeholders={};// extract VARs from ICUs - we process them separately while
// assembling resulting message via goog.getMsg function, since
// we need to pass them to top-level goog.getMsg call
Object.keys(message.placeholders).forEach(function(key){var value=message.placeholders[key];if(key.startsWith(I18N_ICU_VAR_PREFIX)){var config=_this.bindingParser.interpolationConfig;// ICU expression is a plain string, not wrapped into start
// and end tags, so we wrap it before passing to binding parser
var wrapped=""+config.start+value+config.end;vars[key]=_this._visitTextWithInterpolation(wrapped,expansion.sourceSpan);}else{placeholders[key]=_this._visitTextWithInterpolation(value,expansion.sourceSpan);}});return new Icu(vars,placeholders,expansion.sourceSpan,message);};HtmlAstToIvyAst.prototype.visitExpansionCase=function(expansionCase){return null;};HtmlAstToIvyAst.prototype.visitComment=function(comment){return null;};// convert view engine `ParsedProperty` to a format suitable for IVY
HtmlAstToIvyAst.prototype.extractAttributes=function(elementName,properties,i18nPropsMeta){var _this=this;var bound=[];var literal=[];properties.forEach(function(prop){var i18n=i18nPropsMeta[prop.name];if(prop.isLiteral){literal.push(new TextAttribute(prop.name,prop.expression.source||'',prop.sourceSpan,undefined,i18n));}else{// Note that validation is skipped and property mapping is disabled
// due to the fact that we need to make sure a given prop is not an
// input of a directive and directive matching happens at runtime.
var bep=_this.bindingParser.createBoundElementProperty(elementName,prop,/* skipValidation */true,/* mapPropertyName */false);bound.push(BoundAttribute.fromBoundElementProperty(bep,i18n));}});return{bound:bound,literal:literal};};HtmlAstToIvyAst.prototype.parseAttribute=function(isTemplateElement,attribute,matchableAttributes,parsedProperties,boundEvents,variables,references){var name=normalizeAttributeName(attribute.name);var value=attribute.value;var srcSpan=attribute.sourceSpan;var absoluteOffset=attribute.valueSpan?attribute.valueSpan.start.offset:srcSpan.start.offset;var bindParts=name.match(BIND_NAME_REGEXP$1);var hasBinding=false;if(bindParts){hasBinding=true;if(bindParts[KW_BIND_IDX$1]!=null){this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1],value,false,srcSpan,absoluteOffset,attribute.valueSpan,matchableAttributes,parsedProperties);}else if(bindParts[KW_LET_IDX$1]){if(isTemplateElement){var identifier=bindParts[IDENT_KW_IDX$1];this.parseVariable(identifier,value,srcSpan,attribute.valueSpan,variables);}else{this.reportError("\"let-\" is only supported on ng-template elements.",srcSpan);}}else if(bindParts[KW_REF_IDX$1]){var identifier=bindParts[IDENT_KW_IDX$1];this.parseReference(identifier,value,srcSpan,attribute.valueSpan,references);}else if(bindParts[KW_ON_IDX$1]){var events=[];this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX$1],value,srcSpan,attribute.valueSpan||srcSpan,matchableAttributes,events);addEvents(events,boundEvents);}else if(bindParts[KW_BINDON_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1],value,false,srcSpan,absoluteOffset,attribute.valueSpan,matchableAttributes,parsedProperties);this.parseAssignmentEvent(bindParts[IDENT_KW_IDX$1],value,srcSpan,attribute.valueSpan,matchableAttributes,boundEvents);}else if(bindParts[KW_AT_IDX$1]){this.bindingParser.parseLiteralAttr(name,value,srcSpan,absoluteOffset,attribute.valueSpan,matchableAttributes,parsedProperties);}else if(bindParts[IDENT_BANANA_BOX_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX$1],value,false,srcSpan,absoluteOffset,attribute.valueSpan,matchableAttributes,parsedProperties);this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX$1],value,srcSpan,attribute.valueSpan,matchableAttributes,boundEvents);}else if(bindParts[IDENT_PROPERTY_IDX$1]){this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX$1],value,false,srcSpan,absoluteOffset,attribute.valueSpan,matchableAttributes,parsedProperties);}else if(bindParts[IDENT_EVENT_IDX$1]){var events=[];this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX$1],value,srcSpan,attribute.valueSpan||srcSpan,matchableAttributes,events);addEvents(events,boundEvents);}}else{hasBinding=this.bindingParser.parsePropertyInterpolation(name,value,srcSpan,attribute.valueSpan,matchableAttributes,parsedProperties);}return hasBinding;};HtmlAstToIvyAst.prototype._visitTextWithInterpolation=function(value,sourceSpan,i18n){var valueNoNgsp=replaceNgsp(value);var expr=this.bindingParser.parseInterpolation(valueNoNgsp,sourceSpan);return expr?new BoundText(expr,sourceSpan,i18n):new Text(valueNoNgsp,sourceSpan);};HtmlAstToIvyAst.prototype.parseVariable=function(identifier,value,sourceSpan,valueSpan,variables){if(identifier.indexOf('-')>-1){this.reportError("\"-\" is not allowed in variable names",sourceSpan);}else if(identifier.length===0){this.reportError("Variable does not have a name",sourceSpan);}variables.push(new Variable(identifier,value,sourceSpan,valueSpan));};HtmlAstToIvyAst.prototype.parseReference=function(identifier,value,sourceSpan,valueSpan,references){if(identifier.indexOf('-')>-1){this.reportError("\"-\" is not allowed in reference names",sourceSpan);}else if(identifier.length===0){this.reportError("Reference does not have a name",sourceSpan);}references.push(new Reference(identifier,value,sourceSpan,valueSpan));};HtmlAstToIvyAst.prototype.parseAssignmentEvent=function(name,expression,sourceSpan,valueSpan,targetMatchableAttrs,boundEvents){var events=[];this.bindingParser.parseEvent(name+"Change",expression+"=$event",sourceSpan,valueSpan||sourceSpan,targetMatchableAttrs,events);addEvents(events,boundEvents);};HtmlAstToIvyAst.prototype.reportError=function(message,sourceSpan,level){if(level===void 0){level=exports.ParseErrorLevel.ERROR;}this.errors.push(new ParseError(sourceSpan,message,level));};return HtmlAstToIvyAst;}();var NonBindableVisitor$1=/** @class */function(){function NonBindableVisitor(){}NonBindableVisitor.prototype.visitElement=function(ast){var preparsedElement=preparseElement(ast);if(preparsedElement.type===PreparsedElementType.SCRIPT||preparsedElement.type===PreparsedElementType.STYLE||preparsedElement.type===PreparsedElementType.STYLESHEET){// Skipping <script> for security reasons
// Skipping <style> and stylesheets as we already processed them
// in the StyleCompiler
return null;}var children=visitAll$1(this,ast.children,null);return new Element(ast.name,visitAll$1(this,ast.attrs),/* inputs */[],/* outputs */[],children,/* references */[],ast.sourceSpan,ast.startSourceSpan,ast.endSourceSpan);};NonBindableVisitor.prototype.visitComment=function(comment){return null;};NonBindableVisitor.prototype.visitAttribute=function(attribute){return new TextAttribute(attribute.name,attribute.value,attribute.sourceSpan,undefined,attribute.i18n);};NonBindableVisitor.prototype.visitText=function(text){return new Text(text.value,text.sourceSpan);};NonBindableVisitor.prototype.visitExpansion=function(expansion){return null;};NonBindableVisitor.prototype.visitExpansionCase=function(expansionCase){return null;};return NonBindableVisitor;}();var NON_BINDABLE_VISITOR$1=new NonBindableVisitor$1();function normalizeAttributeName(attrName){return /^data-/i.test(attrName)?attrName.substring(5):attrName;}function addEvents(events,boundEvents){boundEvents.push.apply(boundEvents,__spread(events.map(function(e){return BoundEvent.fromParsedEvent(e);})));}function isEmptyTextNode(node){return node instanceof Text$3&&node.value.trim().length==0;}function isCommentNode(node){return node instanceof Comment;}function textContents(node){if(node.children.length!==1||!(node.children[0]instanceof Text$3)){return null;}else{return node.children[0].value;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TagType;(function(TagType){TagType[TagType["ELEMENT"]=0]="ELEMENT";TagType[TagType["TEMPLATE"]=1]="TEMPLATE";TagType[TagType["PROJECTION"]=2]="PROJECTION";})(TagType||(TagType={}));/**
     * Generates an object that is used as a shared state between parent and all child contexts.
     */function setupRegistry(){return{getUniqueId:getSeqNumberGenerator(),icus:new Map()};}/**
     * I18nContext is a helper class which keeps track of all i18n-related aspects
     * (accumulates placeholders, bindings, etc) between i18nStart and i18nEnd instructions.
     *
     * When we enter a nested template, the top-level context is being passed down
     * to the nested component, which uses this context to generate a child instance
     * of I18nContext class (to handle nested template) and at the end, reconciles it back
     * with the parent context.
     *
     * @param index Instruction index of i18nStart, which initiates this context
     * @param ref Reference to a translation const that represents the content if thus context
     * @param level Nestng level defined for child contexts
     * @param templateIndex Instruction index of a template which this context belongs to
     * @param meta Meta information (id, meaning, description, etc) associated with this context
     */var I18nContext=/** @class */function(){function I18nContext(index,ref,level,templateIndex,meta,registry){if(level===void 0){level=0;}if(templateIndex===void 0){templateIndex=null;}this.index=index;this.ref=ref;this.level=level;this.templateIndex=templateIndex;this.meta=meta;this.registry=registry;this.bindings=new Set();this.placeholders=new Map();this.isEmitted=false;this._unresolvedCtxCount=0;this._registry=registry||setupRegistry();this.id=this._registry.getUniqueId();}I18nContext.prototype.appendTag=function(type,node,index,closed){if(node.isVoid&&closed){return;// ignore "close" for void tags
}var ph=node.isVoid||!closed?node.startName:node.closeName;var content={type:type,index:index,ctx:this.id,isVoid:node.isVoid,closed:closed};updatePlaceholderMap(this.placeholders,ph,content);};Object.defineProperty(I18nContext.prototype,"icus",{get:function get(){return this._registry.icus;},enumerable:true,configurable:true});Object.defineProperty(I18nContext.prototype,"isRoot",{get:function get(){return this.level===0;},enumerable:true,configurable:true});Object.defineProperty(I18nContext.prototype,"isResolved",{get:function get(){return this._unresolvedCtxCount===0;},enumerable:true,configurable:true});I18nContext.prototype.getSerializedPlaceholders=function(){var result=new Map();this.placeholders.forEach(function(values,key){return result.set(key,values.map(serializePlaceholderValue));});return result;};// public API to accumulate i18n-related content
I18nContext.prototype.appendBinding=function(binding){this.bindings.add(binding);};I18nContext.prototype.appendIcu=function(name,ref){updatePlaceholderMap(this._registry.icus,name,ref);};I18nContext.prototype.appendBoundText=function(node){var _this=this;var phs=assembleBoundTextPlaceholders(node,this.bindings.size,this.id);phs.forEach(function(values,key){return updatePlaceholderMap.apply(void 0,__spread([_this.placeholders,key],values));});};I18nContext.prototype.appendTemplate=function(node,index){// add open and close tags at the same time,
// since we process nested templates separately
this.appendTag(TagType.TEMPLATE,node,index,false);this.appendTag(TagType.TEMPLATE,node,index,true);this._unresolvedCtxCount++;};I18nContext.prototype.appendElement=function(node,index,closed){this.appendTag(TagType.ELEMENT,node,index,closed);};I18nContext.prototype.appendProjection=function(node,index){// add open and close tags at the same time,
// since we process projected content separately
this.appendTag(TagType.PROJECTION,node,index,false);this.appendTag(TagType.PROJECTION,node,index,true);};/**
         * Generates an instance of a child context based on the root one,
         * when we enter a nested template within I18n section.
         *
         * @param index Instruction index of corresponding i18nStart, which initiates this context
         * @param templateIndex Instruction index of a template which this context belongs to
         * @param meta Meta information (id, meaning, description, etc) associated with this context
         *
         * @returns I18nContext instance
         */I18nContext.prototype.forkChildContext=function(index,templateIndex,meta){return new I18nContext(index,this.ref,this.level+1,templateIndex,meta,this._registry);};/**
         * Reconciles child context into parent one once the end of the i18n block is reached (i18nEnd).
         *
         * @param context Child I18nContext instance to be reconciled with parent context.
         */I18nContext.prototype.reconcileChildContext=function(context){var _this=this;// set the right context id for open and close
// template tags, so we can use it as sub-block ids
['start','close'].forEach(function(op){var key=context.meta[op+"Name"];var phs=_this.placeholders.get(key)||[];var tag=phs.find(findTemplateFn(_this.id,context.templateIndex));if(tag){tag.ctx=context.id;}});// reconcile placeholders
var childPhs=context.placeholders;childPhs.forEach(function(values,key){var phs=_this.placeholders.get(key);if(!phs){_this.placeholders.set(key,values);return;}// try to find matching template...
var tmplIdx=phs.findIndex(findTemplateFn(context.id,context.templateIndex));if(tmplIdx>=0){// ... if found - replace it with nested template content
var isCloseTag=key.startsWith('CLOSE');var isTemplateTag=key.endsWith('NG-TEMPLATE');if(isTemplateTag){// current template's content is placed before or after
// parent template tag, depending on the open/close atrribute
phs.splice.apply(phs,__spread([tmplIdx+(isCloseTag?0:1),0],values));}else{var idx=isCloseTag?values.length-1:0;values[idx].tmpl=phs[tmplIdx];phs.splice.apply(phs,__spread([tmplIdx,1],values));}}else{// ... otherwise just append content to placeholder value
phs.push.apply(phs,__spread(values));}_this.placeholders.set(key,phs);});this._unresolvedCtxCount--;};return I18nContext;}();//
// Helper methods
//
function wrap(symbol,index,contextId,closed){var state=closed?'/':'';return wrapI18nPlaceholder(""+state+symbol+index,contextId);}function wrapTag(symbol,_a,closed){var index=_a.index,ctx=_a.ctx,isVoid=_a.isVoid;return isVoid?wrap(symbol,index,ctx)+wrap(symbol,index,ctx,true):wrap(symbol,index,ctx,closed);}function findTemplateFn(ctx,templateIndex){return function(token){return _typeof(token)==='object'&&token.type===TagType.TEMPLATE&&token.index===templateIndex&&token.ctx===ctx;};}function serializePlaceholderValue(value){var element=function element(data,closed){return wrapTag('#',data,closed);};var template=function template(data,closed){return wrapTag('*',data,closed);};var projection=function projection(data,closed){return wrapTag('!',data,closed);};switch(value.type){case TagType.ELEMENT:// close element tag
if(value.closed){return element(value,true)+(value.tmpl?template(value.tmpl,true):'');}// open element tag that also initiates a template
if(value.tmpl){return template(value.tmpl)+element(value)+(value.isVoid?template(value.tmpl,true):'');}return element(value);case TagType.TEMPLATE:return template(value,value.closed);case TagType.PROJECTION:return projection(value,value.closed);default:return value;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var IcuSerializerVisitor=/** @class */function(){function IcuSerializerVisitor(){}IcuSerializerVisitor.prototype.visitText=function(text){return text.value;};IcuSerializerVisitor.prototype.visitContainer=function(container){var _this=this;return container.children.map(function(child){return child.visit(_this);}).join('');};IcuSerializerVisitor.prototype.visitIcu=function(icu){var _this=this;var strCases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});var result="{"+icu.expressionPlaceholder+", "+icu.type+", "+strCases.join(' ')+"}";return result;};IcuSerializerVisitor.prototype.visitTagPlaceholder=function(ph){var _this=this;return ph.isVoid?this.formatPh(ph.startName):""+this.formatPh(ph.startName)+ph.children.map(function(child){return child.visit(_this);}).join('')+this.formatPh(ph.closeName);};IcuSerializerVisitor.prototype.visitPlaceholder=function(ph){return this.formatPh(ph.name);};IcuSerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){return this.formatPh(ph.name);};IcuSerializerVisitor.prototype.formatPh=function(value){return"{"+formatI18nPlaceholderName(value,/* useCamelCase */false)+"}";};return IcuSerializerVisitor;}();var serializer=new IcuSerializerVisitor();function serializeIcuNode(icu){return icu.visit(serializer);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TAG_TO_PLACEHOLDER_NAMES={'A':'LINK','B':'BOLD_TEXT','BR':'LINE_BREAK','EM':'EMPHASISED_TEXT','H1':'HEADING_LEVEL1','H2':'HEADING_LEVEL2','H3':'HEADING_LEVEL3','H4':'HEADING_LEVEL4','H5':'HEADING_LEVEL5','H6':'HEADING_LEVEL6','HR':'HORIZONTAL_RULE','I':'ITALIC_TEXT','LI':'LIST_ITEM','LINK':'MEDIA_LINK','OL':'ORDERED_LIST','P':'PARAGRAPH','Q':'QUOTATION','S':'STRIKETHROUGH_TEXT','SMALL':'SMALL_TEXT','SUB':'SUBSTRIPT','SUP':'SUPERSCRIPT','TBODY':'TABLE_BODY','TD':'TABLE_CELL','TFOOT':'TABLE_FOOTER','TH':'TABLE_HEADER_CELL','THEAD':'TABLE_HEADER','TR':'TABLE_ROW','TT':'MONOSPACED_TEXT','U':'UNDERLINED_TEXT','UL':'UNORDERED_LIST'};/**
     * Creates unique names for placeholder with different content.
     *
     * Returns the same placeholder name when the content is identical.
     */var PlaceholderRegistry=/** @class */function(){function PlaceholderRegistry(){// Count the occurrence of the base name top generate a unique name
this._placeHolderNameCounts={};// Maps signature to placeholder names
this._signatureToName={};}PlaceholderRegistry.prototype.getStartTagPlaceholderName=function(tag,attrs,isVoid){var signature=this._hashTag(tag,attrs,isVoid);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName(isVoid?baseName:"START_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getCloseTagPlaceholderName=function(tag){var signature=this._hashClosingTag(tag);if(this._signatureToName[signature]){return this._signatureToName[signature];}var upperTag=tag.toUpperCase();var baseName=TAG_TO_PLACEHOLDER_NAMES[upperTag]||"TAG_"+upperTag;var name=this._generateUniqueName("CLOSE_"+baseName);this._signatureToName[signature]=name;return name;};PlaceholderRegistry.prototype.getPlaceholderName=function(name,content){var upperName=name.toUpperCase();var signature="PH: "+upperName+"="+content;if(this._signatureToName[signature]){return this._signatureToName[signature];}var uniqueName=this._generateUniqueName(upperName);this._signatureToName[signature]=uniqueName;return uniqueName;};PlaceholderRegistry.prototype.getUniquePlaceholder=function(name){return this._generateUniqueName(name.toUpperCase());};// Generate a hash for a tag - does not take attribute order into account
PlaceholderRegistry.prototype._hashTag=function(tag,attrs,isVoid){var start="<"+tag;var strAttrs=Object.keys(attrs).sort().map(function(name){return" "+name+"="+attrs[name];}).join('');var end=isVoid?'/>':"></"+tag+">";return start+strAttrs+end;};PlaceholderRegistry.prototype._hashClosingTag=function(tag){return this._hashTag("/"+tag,{},false);};PlaceholderRegistry.prototype._generateUniqueName=function(base){var seen=this._placeHolderNameCounts.hasOwnProperty(base);if(!seen){this._placeHolderNameCounts[base]=1;return base;}var id=this._placeHolderNameCounts[base];this._placeHolderNameCounts[base]=id+1;return base+"_"+id;};return PlaceholderRegistry;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _expParser=new Parser$1(new Lexer());/**
     * Returns a function converting html nodes to an i18n Message given an interpolationConfig
     */function createI18nMessageFactory(interpolationConfig){var visitor=new _I18nVisitor(_expParser,interpolationConfig);return function(nodes,meaning,description,customId,visitNodeFn){return visitor.toI18nMessage(nodes,meaning,description,customId,visitNodeFn);};}function noopVisitNodeFn(_html,i18n){return i18n;}var _I18nVisitor=/** @class */function(){function _I18nVisitor(_expressionParser,_interpolationConfig){this._expressionParser=_expressionParser;this._interpolationConfig=_interpolationConfig;}_I18nVisitor.prototype.toI18nMessage=function(nodes,meaning,description,customId,visitNodeFn){if(meaning===void 0){meaning='';}if(description===void 0){description='';}if(customId===void 0){customId='';}var context={isIcu:nodes.length==1&&nodes[0]instanceof Expansion,icuDepth:0,placeholderRegistry:new PlaceholderRegistry(),placeholderToContent:{},placeholderToMessage:{},visitNodeFn:visitNodeFn||noopVisitNodeFn};var i18nodes=visitAll$1(this,nodes,context);return new Message(i18nodes,context.placeholderToContent,context.placeholderToMessage,meaning,description,customId);};_I18nVisitor.prototype.visitElement=function(el,context){var children=visitAll$1(this,el.children,context);var attrs={};el.attrs.forEach(function(attr){// Do not visit the attributes, translatable ones are top-level ASTs
attrs[attr.name]=attr.value;});var isVoid=getHtmlTagDefinition(el.name).isVoid;var startPhName=context.placeholderRegistry.getStartTagPlaceholderName(el.name,attrs,isVoid);context.placeholderToContent[startPhName]=el.sourceSpan.toString();var closePhName='';if(!isVoid){closePhName=context.placeholderRegistry.getCloseTagPlaceholderName(el.name);context.placeholderToContent[closePhName]="</"+el.name+">";}var node=new TagPlaceholder(el.name,attrs,startPhName,closePhName,children,isVoid,el.sourceSpan);return context.visitNodeFn(el,node);};_I18nVisitor.prototype.visitAttribute=function(attribute,context){var node=this._visitTextWithInterpolation(attribute.value,attribute.sourceSpan,context);return context.visitNodeFn(attribute,node);};_I18nVisitor.prototype.visitText=function(text,context){var node=this._visitTextWithInterpolation(text.value,text.sourceSpan,context);return context.visitNodeFn(text,node);};_I18nVisitor.prototype.visitComment=function(comment,context){return null;};_I18nVisitor.prototype.visitExpansion=function(icu,context){var _this=this;context.icuDepth++;var i18nIcuCases={};var i18nIcu=new Icu$1(icu.switchValue,icu.type,i18nIcuCases,icu.sourceSpan);icu.cases.forEach(function(caze){i18nIcuCases[caze.value]=new Container(caze.expression.map(function(node){return node.visit(_this,context);}),caze.expSourceSpan);});context.icuDepth--;if(context.isIcu||context.icuDepth>0){// Returns an ICU node when:
// - the message (vs a part of the message) is an ICU message, or
// - the ICU message is nested.
var expPh=context.placeholderRegistry.getUniquePlaceholder("VAR_"+icu.type);i18nIcu.expressionPlaceholder=expPh;context.placeholderToContent[expPh]=icu.switchValue;return context.visitNodeFn(icu,i18nIcu);}// Else returns a placeholder
// ICU placeholders should not be replaced with their original content but with the their
// translations.
// TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg
var phName=context.placeholderRegistry.getPlaceholderName('ICU',icu.sourceSpan.toString());context.placeholderToMessage[phName]=this.toI18nMessage([icu],'','','',undefined);var node=new IcuPlaceholder(i18nIcu,phName,icu.sourceSpan);return context.visitNodeFn(icu,node);};_I18nVisitor.prototype.visitExpansionCase=function(_icuCase,_context){throw new Error('Unreachable code');};_I18nVisitor.prototype._visitTextWithInterpolation=function(text,sourceSpan,context){var splitInterpolation=this._expressionParser.splitInterpolation(text,sourceSpan.start.toString(),this._interpolationConfig);if(!splitInterpolation){// No expression, return a single text
return new Text$1(text,sourceSpan);}// Return a group of text + expressions
var nodes=[];var container=new Container(nodes,sourceSpan);var _a=this._interpolationConfig,sDelimiter=_a.start,eDelimiter=_a.end;for(var i=0;i<splitInterpolation.strings.length-1;i++){var expression=splitInterpolation.expressions[i];var baseName=_extractPlaceholderName(expression)||'INTERPOLATION';var phName=context.placeholderRegistry.getPlaceholderName(baseName,expression);if(splitInterpolation.strings[i].length){// No need to add empty strings
nodes.push(new Text$1(splitInterpolation.strings[i],sourceSpan));}nodes.push(new Placeholder(expression,phName,sourceSpan));context.placeholderToContent[phName]=sDelimiter+expression+eDelimiter;}// The last index contains no expression
var lastStringIdx=splitInterpolation.strings.length-1;if(splitInterpolation.strings[lastStringIdx].length){nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx],sourceSpan));}return container;};return _I18nVisitor;}();var _CUSTOM_PH_EXP=/\/\/[\s\S]*i18n[\s\S]*\([\s\S]*ph[\s\S]*=[\s\S]*("|')([\s\S]*?)\1[\s\S]*\)/g;function _extractPlaceholderName(input){return input.split(_CUSTOM_PH_EXP)[2];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var setI18nRefs=function setI18nRefs(htmlNode,i18nNode){if(htmlNode instanceof NodeWithI18n){if(i18nNode instanceof IcuPlaceholder&&htmlNode.i18n instanceof Message){// This html node represents an ICU but this is a second processing pass, and the legacy id
// was computed in the previous pass and stored in the `i18n` property as a message.
// We are about to wipe out that property so capture the previous message to be reused when
// generating the message for this ICU later. See `_generateI18nMessage()`.
i18nNode.previousMessage=htmlNode.i18n;}htmlNode.i18n=i18nNode;}return i18nNode;};/**
     * This visitor walks over HTML parse tree and converts information stored in
     * i18n-related attributes ("i18n" and "i18n-*") into i18n meta object that is
     * stored with other element's and attribute's information.
     */var I18nMetaVisitor=/** @class */function(){function I18nMetaVisitor(interpolationConfig,keepI18nAttrs,enableI18nLegacyMessageIdFormat){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}if(keepI18nAttrs===void 0){keepI18nAttrs=false;}if(enableI18nLegacyMessageIdFormat===void 0){enableI18nLegacyMessageIdFormat=false;}this.interpolationConfig=interpolationConfig;this.keepI18nAttrs=keepI18nAttrs;this.enableI18nLegacyMessageIdFormat=enableI18nLegacyMessageIdFormat;// whether visited nodes contain i18n information
this.hasI18nMeta=false;// i18n message generation factory
this._createI18nMessage=createI18nMessageFactory(this.interpolationConfig);}I18nMetaVisitor.prototype._generateI18nMessage=function(nodes,meta,visitNodeFn){if(meta===void 0){meta='';}var _a=this._parseMetadata(meta),meaning=_a.meaning,description=_a.description,customId=_a.customId;var message=this._createI18nMessage(nodes,meaning,description,customId,visitNodeFn);this._setMessageId(message,meta);this._setLegacyIds(message,meta);return message;};I18nMetaVisitor.prototype.visitElement=function(element){var e_1,_a,e_2,_b;if(hasI18nAttrs(element)){this.hasI18nMeta=true;var attrs=[];var attrsMeta={};try{for(var _c=__values(element.attrs),_d=_c.next();!_d.done;_d=_c.next()){var attr=_d.value;if(attr.name===I18N_ATTR){// root 'i18n' node attribute
var i18n_1=element.i18n||attr.value;var message=this._generateI18nMessage(element.children,i18n_1,setI18nRefs);// do not assign empty i18n meta
if(message.nodes.length){element.i18n=message;}}else if(attr.name.startsWith(I18N_ATTR_PREFIX)){// 'i18n-*' attributes
var key=attr.name.slice(I18N_ATTR_PREFIX.length);attrsMeta[key]=attr.value;}else{// non-i18n attributes
attrs.push(attr);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_1)throw e_1.error;}}// set i18n meta for attributes
if(Object.keys(attrsMeta).length){try{for(var attrs_1=__values(attrs),attrs_1_1=attrs_1.next();!attrs_1_1.done;attrs_1_1=attrs_1.next()){var attr=attrs_1_1.value;var meta=attrsMeta[attr.name];// do not create translation for empty attributes
if(meta!==undefined&&attr.value){attr.i18n=this._generateI18nMessage([attr],attr.i18n||meta);}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(attrs_1_1&&!attrs_1_1.done&&(_b=attrs_1["return"]))_b.call(attrs_1);}finally{if(e_2)throw e_2.error;}}}if(!this.keepI18nAttrs){// update element's attributes,
// keeping only non-i18n related ones
element.attrs=attrs;}}visitAll$1(this,element.children,element.i18n);return element;};I18nMetaVisitor.prototype.visitExpansion=function(expansion,currentMessage){var message;var meta=expansion.i18n;this.hasI18nMeta=true;if(meta instanceof IcuPlaceholder){// set ICU placeholder name (e.g. "ICU_1"),
// generated while processing root element contents,
// so we can reference it when we output translation
var name_1=meta.name;message=this._generateI18nMessage([expansion],meta);var icu=icuFromI18nMessage(message);icu.name=name_1;}else{// ICU is a top level message, try to use metadata from container element if provided via
// `context` argument. Note: context may not be available for standalone ICUs (without
// wrapping element), so fallback to ICU metadata in this case.
message=this._generateI18nMessage([expansion],currentMessage||meta);}expansion.i18n=message;return expansion;};I18nMetaVisitor.prototype.visitText=function(text){return text;};I18nMetaVisitor.prototype.visitAttribute=function(attribute){return attribute;};I18nMetaVisitor.prototype.visitComment=function(comment){return comment;};I18nMetaVisitor.prototype.visitExpansionCase=function(expansionCase){return expansionCase;};/**
         * Parse the general form `meta` passed into extract the explicit metadata needed to create a
         * `Message`.
         *
         * There are three possibilities for the `meta` variable
         * 1) a string from an `i18n` template attribute: parse it to extract the metadata values.
         * 2) a `Message` from a previous processing pass: reuse the metadata values in the message.
         * 4) other: ignore this and just process the message metadata as normal
         *
         * @param meta the bucket that holds information about the message
         * @returns the parsed metadata.
         */I18nMetaVisitor.prototype._parseMetadata=function(meta){return typeof meta==='string'?parseI18nMeta(meta):meta instanceof Message?meta:{};};/**
         * Generate (or restore) message id if not specified already.
         */I18nMetaVisitor.prototype._setMessageId=function(message,meta){if(!message.id){message.id=meta instanceof Message&&meta.id||decimalDigest(message);}};/**
         * Update the `message` with a `legacyId` if necessary.
         *
         * @param message the message whose legacy id should be set
         * @param meta information about the message being processed
         */I18nMetaVisitor.prototype._setLegacyIds=function(message,meta){if(this.enableI18nLegacyMessageIdFormat){message.legacyIds=[computeDigest(message),computeDecimalDigest(message)];}else if(typeof meta!=='string'){// This occurs if we are doing the 2nd pass after whitespace removal (see `parseTemplate()` in
// `packages/compiler/src/render3/view/template.ts`).
// In that case we want to reuse the legacy message generated in the 1st pass (see
// `setI18nRefs()`).
var previousMessage=meta instanceof Message?meta:meta instanceof IcuPlaceholder?meta.previousMessage:undefined;message.legacyIds=previousMessage?previousMessage.legacyIds:[];}};return I18nMetaVisitor;}();/** I18n separators for metadata **/var I18N_MEANING_SEPARATOR='|';var I18N_ID_SEPARATOR='@@';/**
     * Parses i18n metas like:
     *  - "@@id",
     *  - "description[@@id]",
     *  - "meaning|description[@@id]"
     * and returns an object with parsed output.
     *
     * @param meta String that represents i18n meta
     * @returns Object with id, meaning and description fields
     */function parseI18nMeta(meta){var _a,_b;if(meta===void 0){meta='';}var customId;var meaning;var description;meta=meta.trim();if(meta){var idIndex=meta.indexOf(I18N_ID_SEPARATOR);var descIndex=meta.indexOf(I18N_MEANING_SEPARATOR);var meaningAndDesc=void 0;_a=__read(idIndex>-1?[meta.slice(0,idIndex),meta.slice(idIndex+2)]:[meta,''],2),meaningAndDesc=_a[0],customId=_a[1];_b=__read(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];}return{customId:customId,meaning:meaning,description:description};}// Converts i18n meta information for a message (id, description, meaning)
// to a JsDoc statement formatted as expected by the Closure compiler.
function i18nMetaToDocStmt(meta){var tags=[];if(meta.description){tags.push({tagName:"desc"/* Desc */,text:meta.description});}if(meta.meaning){tags.push({tagName:"meaning"/* Meaning */,text:meta.meaning});}return tags.length==0?null:new JSDocCommentStmt(tags);}/** Closure uses `goog.getMsg(message)` to lookup translations */var GOOG_GET_MSG='goog.getMsg';function createGoogleGetMsgStatements(variable$1,message,closureVar,params){var messageString=serializeI18nMessageForGetMsg(message);var args=[literal(messageString)];if(Object.keys(params).length){args.push(mapLiteral(params,true));}// /**
//  * @desc description of message
//  * @meaning meaning of message
//  */
// const MSG_... = goog.getMsg(..);
// I18N_X = MSG_...;
var statements=[];var jsdocComment=i18nMetaToDocStmt(message);if(jsdocComment!==null){statements.push(jsdocComment);}statements.push(closureVar.set(variable(GOOG_GET_MSG).callFn(args)).toConstDecl());statements.push(new ExpressionStatement(variable$1.set(closureVar)));return statements;}/**
     * This visitor walks over i18n tree and generates its string representation, including ICUs and
     * placeholders in `{$placeholder}` (for plain messages) or `{PLACEHOLDER}` (inside ICUs) format.
     */var GetMsgSerializerVisitor=/** @class */function(){function GetMsgSerializerVisitor(){}GetMsgSerializerVisitor.prototype.formatPh=function(value){return"{$"+formatI18nPlaceholderName(value)+"}";};GetMsgSerializerVisitor.prototype.visitText=function(text){return text.value;};GetMsgSerializerVisitor.prototype.visitContainer=function(container){var _this=this;return container.children.map(function(child){return child.visit(_this);}).join('');};GetMsgSerializerVisitor.prototype.visitIcu=function(icu){return serializeIcuNode(icu);};GetMsgSerializerVisitor.prototype.visitTagPlaceholder=function(ph){var _this=this;return ph.isVoid?this.formatPh(ph.startName):""+this.formatPh(ph.startName)+ph.children.map(function(child){return child.visit(_this);}).join('')+this.formatPh(ph.closeName);};GetMsgSerializerVisitor.prototype.visitPlaceholder=function(ph){return this.formatPh(ph.name);};GetMsgSerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){return this.formatPh(ph.name);};return GetMsgSerializerVisitor;}();var serializerVisitor$1=new GetMsgSerializerVisitor();function serializeI18nMessageForGetMsg(message){return message.nodes.map(function(node){return node.visit(serializerVisitor$1,null);}).join('');}function createLocalizeStatements(variable,message,params){var statements=[];var _a=serializeI18nMessageForLocalize(message),messageParts=_a.messageParts,placeHolders=_a.placeHolders;statements.push(new ExpressionStatement(variable.set(localizedString(message,messageParts,placeHolders,placeHolders.map(function(ph){return params[ph];})))));return statements;}var MessagePiece=/** @class */function(){function MessagePiece(text){this.text=text;}return MessagePiece;}();var LiteralPiece=/** @class */function(_super){__extends(LiteralPiece,_super);function LiteralPiece(){return _super!==null&&_super.apply(this,arguments)||this;}return LiteralPiece;}(MessagePiece);var PlaceholderPiece=/** @class */function(_super){__extends(PlaceholderPiece,_super);function PlaceholderPiece(name){return _super.call(this,formatI18nPlaceholderName(name,/* useCamelCase */false))||this;}return PlaceholderPiece;}(MessagePiece);/**
     * This visitor walks over an i18n tree, capturing literal strings and placeholders.
     *
     * The result can be used for generating the `$localize` tagged template literals.
     */var LocalizeSerializerVisitor=/** @class */function(){function LocalizeSerializerVisitor(){}LocalizeSerializerVisitor.prototype.visitText=function(text,context){if(context[context.length-1]instanceof LiteralPiece){// Two literal pieces in a row means that there was some comment node in-between.
context[context.length-1].text+=text.value;}else{context.push(new LiteralPiece(text.value));}};LocalizeSerializerVisitor.prototype.visitContainer=function(container,context){var _this=this;container.children.forEach(function(child){return child.visit(_this,context);});};LocalizeSerializerVisitor.prototype.visitIcu=function(icu,context){context.push(new LiteralPiece(serializeIcuNode(icu)));};LocalizeSerializerVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;context.push(new PlaceholderPiece(ph.startName));if(!ph.isVoid){ph.children.forEach(function(child){return child.visit(_this,context);});context.push(new PlaceholderPiece(ph.closeName));}};LocalizeSerializerVisitor.prototype.visitPlaceholder=function(ph,context){context.push(new PlaceholderPiece(ph.name));};LocalizeSerializerVisitor.prototype.visitIcuPlaceholder=function(ph,context){context.push(new PlaceholderPiece(ph.name));};return LocalizeSerializerVisitor;}();var serializerVisitor$2=new LocalizeSerializerVisitor();/**
     * Serialize an i18n message into two arrays: messageParts and placeholders.
     *
     * These arrays will be used to generate `$localize` tagged template literals.
     *
     * @param message The message to be serialized.
     * @returns an object containing the messageParts and placeholders.
     */function serializeI18nMessageForLocalize(message){var pieces=[];message.nodes.forEach(function(node){return node.visit(serializerVisitor$2,pieces);});return processMessagePieces(pieces);}/**
     * Convert the list of serialized MessagePieces into two arrays.
     *
     * One contains the literal string pieces and the other the placeholders that will be replaced by
     * expressions when rendering `$localize` tagged template literals.
     *
     * @param pieces The pieces to process.
     * @returns an object containing the messageParts and placeholders.
     */function processMessagePieces(pieces){var messageParts=[];var placeHolders=[];if(pieces[0]instanceof PlaceholderPiece){// The first piece was a placeholder so we need to add an initial empty message part.
messageParts.push('');}for(var i=0;i<pieces.length;i++){var part=pieces[i];if(part instanceof LiteralPiece){messageParts.push(part.text);}else{placeHolders.push(part.text);if(pieces[i-1]instanceof PlaceholderPiece){// There were two placeholders in a row, so we need to add an empty message part.
messageParts.push('');}}}if(pieces[pieces.length-1]instanceof PlaceholderPiece){// The last piece was a placeholder so we need to add a final empty message part.
messageParts.push('');}return{messageParts:messageParts,placeHolders:placeHolders};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Selector attribute name of `<ng-content>`
var NG_CONTENT_SELECT_ATTR$1='select';// Attribute name of `ngProjectAs`.
var NG_PROJECT_AS_ATTR_NAME='ngProjectAs';// List of supported global targets for event listeners
var GLOBAL_TARGET_RESOLVERS=new Map([['window',Identifiers$1.resolveWindow],['document',Identifiers$1.resolveDocument],['body',Identifiers$1.resolveBody]]);var LEADING_TRIVIA_CHARS=[' ','\n','\r','\t'];//  if (rf & flags) { .. }
function renderFlagCheckIfStmt(flags,statements){return ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(flags),null,false),statements);}function prepareEventListenerParameters(eventAst,handlerName,scope){if(handlerName===void 0){handlerName=null;}if(scope===void 0){scope=null;}var type=eventAst.type,name=eventAst.name,target=eventAst.target,phase=eventAst.phase,handler=eventAst.handler;if(target&&!GLOBAL_TARGET_RESOLVERS.has(target)){throw new Error("Unexpected global target '"+target+"' defined for '"+name+"' event.\n        Supported list of global targets: "+Array.from(GLOBAL_TARGET_RESOLVERS.keys())+".");}var eventArgumentName='$event';var implicitReceiverAccesses=new Set();var implicitReceiverExpr=scope===null||scope.bindingLevel===0?variable(CONTEXT_NAME):scope.getOrCreateSharedContextVar(0);var bindingExpr=convertActionBinding(scope,implicitReceiverExpr,handler,'b',function(){return error('Unexpected interpolation');},eventAst.handlerSpan,implicitReceiverAccesses);var statements=[];if(scope){statements.push.apply(statements,__spread(scope.restoreViewStatement()));statements.push.apply(statements,__spread(scope.variableDeclarations()));}statements.push.apply(statements,__spread(bindingExpr.render3Stmts));var eventName=type===1/* Animation */?prepareSyntheticListenerName(name,phase):name;var fnName=handlerName&&sanitizeIdentifier(handlerName);var fnArgs=[];if(implicitReceiverAccesses.has(eventArgumentName)){fnArgs.push(new FnParam(eventArgumentName,DYNAMIC_TYPE));}var handlerFn=fn(fnArgs,statements,INFERRED_TYPE,null,fnName);var params=[literal(eventName),handlerFn];if(target){params.push(literal(false),// `useCapture` flag, defaults to `false`
importExpr(GLOBAL_TARGET_RESOLVERS.get(target)));}return params;}var TemplateDefinitionBuilder=/** @class */function(){function TemplateDefinitionBuilder(constantPool,parentBindingScope,level,contextName,i18nContext,templateIndex,templateName,directiveMatcher,directives,pipeTypeByName,pipes,_namespace,relativeContextFilePath,i18nUseExternalIds,_constants){var _this=this;if(level===void 0){level=0;}if(_constants===void 0){_constants=[];}this.constantPool=constantPool;this.level=level;this.contextName=contextName;this.i18nContext=i18nContext;this.templateIndex=templateIndex;this.templateName=templateName;this.directiveMatcher=directiveMatcher;this.directives=directives;this.pipeTypeByName=pipeTypeByName;this.pipes=pipes;this._namespace=_namespace;this.i18nUseExternalIds=i18nUseExternalIds;this._constants=_constants;this._dataIndex=0;this._bindingContext=0;this._prefixCode=[];/**
             * List of callbacks to generate creation mode instructions. We store them here as we process
             * the template so bindings in listeners are resolved only once all nodes have been visited.
             * This ensures all local refs and context variables are available for matching.
             */this._creationCodeFns=[];/**
             * List of callbacks to generate update mode instructions. We store them here as we process
             * the template so bindings are resolved only once all nodes have been visited. This ensures
             * all local refs and context variables are available for matching.
             */this._updateCodeFns=[];/** Index of the currently-selected node. */this._currentIndex=0;/** Temporary variable declarations generated from visiting pipes, literals, etc. */this._tempVariables=[];/**
             * List of callbacks to build nested templates. Nested templates must not be visited until
             * after the parent template has finished visiting all of its nodes. This ensures that all
             * local ref bindings in nested templates are able to find local ref values if the refs
             * are defined after the template declaration.
             */this._nestedTemplateFns=[];this._unsupported=unsupported;// i18n context local to this template
this.i18n=null;// Number of slots to reserve for pureFunctions
this._pureFunctionSlots=0;// Number of binding slots
this._bindingSlots=0;// Projection slots found in the template. Projection slots can distribute projected
// nodes based on a selector, or can just use the wildcard selector to match
// all nodes which aren't matching any selector.
this._ngContentReservedSlots=[];// Number of non-default selectors found in all parent templates of this template. We need to
// track it to properly adjust projection slot index in the `projection` instruction.
this._ngContentSelectorsOffset=0;// Expression that should be used as implicit receiver when converting template
// expressions to output AST.
this._implicitReceiverExpr=null;// These should be handled in the template or element directly.
this.visitReference=invalid$1;this.visitVariable=invalid$1;this.visitTextAttribute=invalid$1;this.visitBoundAttribute=invalid$1;this.visitBoundEvent=invalid$1;this._bindingScope=parentBindingScope.nestedScope(level);// Turn the relative context file path into an identifier by replacing non-alphanumeric
// characters with underscores.
this.fileBasedI18nSuffix=relativeContextFilePath.replace(/[^A-Za-z0-9]/g,'_')+'_';this._valueConverter=new ValueConverter(constantPool,function(){return _this.allocateDataSlot();},function(numSlots){return _this.allocatePureFunctionSlots(numSlots);},function(name,localName,slot,value){var pipeType=pipeTypeByName.get(name);if(pipeType){_this.pipes.add(pipeType);}_this._bindingScope.set(_this.level,localName,value);_this.creationInstruction(null,Identifiers$1.pipe,[literal(slot),literal(name)]);});}TemplateDefinitionBuilder.prototype.buildTemplateFunction=function(nodes,variables,ngContentSelectorsOffset,i18n){var _this=this;if(ngContentSelectorsOffset===void 0){ngContentSelectorsOffset=0;}this._ngContentSelectorsOffset=ngContentSelectorsOffset;if(this._namespace!==Identifiers$1.namespaceHTML){this.creationInstruction(null,this._namespace);}// Create variable bindings
variables.forEach(function(v){return _this.registerContextVariables(v);});// Initiate i18n context in case:
// - this template has parent i18n context
// - or the template has i18n meta associated with it,
//   but it's not initiated by the Element (e.g. <ng-template i18n>)
var initI18nContext=this.i18nContext||isI18nRootNode(i18n)&&!isSingleI18nIcu(i18n)&&!(isSingleElementTemplate(nodes)&&nodes[0].i18n===i18n);var selfClosingI18nInstruction=hasTextChildrenOnly(nodes);if(initI18nContext){this.i18nStart(null,i18n,selfClosingI18nInstruction);}// This is the initial pass through the nodes of this template. In this pass, we
// queue all creation mode and update mode instructions for generation in the second
// pass. It's necessary to separate the passes to ensure local refs are defined before
// resolving bindings. We also count bindings in this pass as we walk bound expressions.
visitAll(this,nodes);// Add total binding count to pure function count so pure function instructions are
// generated with the correct slot offset when update instructions are processed.
this._pureFunctionSlots+=this._bindingSlots;// Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and
// `pipeBind` update instructions), so we have to update the slot offsets manually
// to account for bindings.
this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);// Nested templates must be processed before creation instructions so template()
// instructions can be generated with the correct internal const count.
this._nestedTemplateFns.forEach(function(buildTemplateFn){return buildTemplateFn();});// Output the `projectionDef` instruction when some `<ng-content>` tags are present.
// The `projectionDef` instruction is only emitted for the component template and
// is skipped for nested templates (<ng-template> tags).
if(this.level===0&&this._ngContentReservedSlots.length){var parameters=[];// By default the `projectionDef` instructions creates one slot for the wildcard
// selector if no parameters are passed. Therefore we only want to allocate a new
// array for the projection slots if the default projection slot is not sufficient.
if(this._ngContentReservedSlots.length>1||this._ngContentReservedSlots[0]!=='*'){var r3ReservedSlots=this._ngContentReservedSlots.map(function(s){return s!=='*'?parseSelectorToR3Selector(s):s;});parameters.push(this.constantPool.getConstLiteral(asLiteral(r3ReservedSlots),true));}// Since we accumulate ngContent selectors while processing template elements,
// we *prepend* `projectionDef` to creation instructions block, to put it before
// any `projection` instructions
this.creationInstruction(null,Identifiers$1.projectionDef,parameters,/* prepend */true);}if(initI18nContext){this.i18nEnd(null,selfClosingI18nInstruction);}// Generate all the creation mode instructions (e.g. resolve bindings in listeners)
var creationStatements=this._creationCodeFns.map(function(fn){return fn();});// Generate all the update mode instructions (e.g. resolve property or text bindings)
var updateStatements=this._updateCodeFns.map(function(fn){return fn();});//  Variable declaration must occur after binding resolution so we can generate context
//  instructions that build on each other.
// e.g. const b = nextContext().$implicit(); const b = nextContext();
var creationVariables=this._bindingScope.viewSnapshotStatements();var updateVariables=this._bindingScope.variableDeclarations().concat(this._tempVariables);var creationBlock=creationStatements.length>0?[renderFlagCheckIfStmt(1/* Create */,creationVariables.concat(creationStatements))]:[];var updateBlock=updateStatements.length>0?[renderFlagCheckIfStmt(2/* Update */,updateVariables.concat(updateStatements))]:[];return fn(// i.e. (rf: RenderFlags, ctx: any)
[new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null)],__spread(this._prefixCode,creationBlock,updateBlock),INFERRED_TYPE,null,this.templateName);};// LocalResolver
TemplateDefinitionBuilder.prototype.getLocal=function(name){return this._bindingScope.get(name);};// LocalResolver
TemplateDefinitionBuilder.prototype.notifyImplicitReceiverUse=function(){this._bindingScope.notifyImplicitReceiverUse();};TemplateDefinitionBuilder.prototype.i18nTranslate=function(message,params,ref,transformFn){var _a;if(params===void 0){params={};}var _ref=ref||variable(this.constantPool.uniqueName(TRANSLATION_PREFIX));// Closure Compiler requires const names to start with `MSG_` but disallows any other const to
// start with `MSG_`. We define a variable starting with `MSG_` just for the `goog.getMsg` call
var closureVar=this.i18nGenerateClosureVar(message.id);var statements=getTranslationDeclStmts(message,_ref,closureVar,params,transformFn);(_a=this.constantPool.statements).push.apply(_a,__spread(statements));return _ref;};TemplateDefinitionBuilder.prototype.registerContextVariables=function(variable$1){var scopedName=this._bindingScope.freshReferenceName();var retrievalLevel=this.level;var lhs=variable(variable$1.name+scopedName);this._bindingScope.set(retrievalLevel,variable$1.name,lhs,1/* CONTEXT */,function(scope,relativeLevel){var rhs;if(scope.bindingLevel===retrievalLevel){// e.g. ctx
rhs=variable(CONTEXT_NAME);}else{var sharedCtxVar=scope.getSharedContextName(retrievalLevel);// e.g. ctx_r0   OR  x(2);
rhs=sharedCtxVar?sharedCtxVar:generateNextContextExpr(relativeLevel);}// e.g. const $item$ = x(2).$implicit;
return[lhs.set(rhs.prop(variable$1.value||IMPLICIT_REFERENCE)).toConstDecl()];});};TemplateDefinitionBuilder.prototype.i18nAppendBindings=function(expressions){var _this=this;if(expressions.length>0){expressions.forEach(function(expression){return _this.i18n.appendBinding(expression);});}};TemplateDefinitionBuilder.prototype.i18nBindProps=function(props){var _this=this;var bound={};Object.keys(props).forEach(function(key){var prop=props[key];if(prop instanceof Text){bound[key]=literal(prop.value);}else{var value=prop.value.visit(_this._valueConverter);_this.allocateBindingSlots(value);if(value instanceof Interpolation){var strings=value.strings,expressions=value.expressions;var _a=_this.i18n,id=_a.id,bindings=_a.bindings;var label=assembleI18nBoundString(strings,bindings.size,id);_this.i18nAppendBindings(expressions);bound[key]=literal(label);}}});return bound;};TemplateDefinitionBuilder.prototype.i18nGenerateClosureVar=function(messageId){var name;var suffix=this.fileBasedI18nSuffix.toUpperCase();if(this.i18nUseExternalIds){var prefix=getTranslationConstPrefix("EXTERNAL_");var uniqueSuffix=this.constantPool.uniqueName(suffix);name=""+prefix+sanitizeIdentifier(messageId)+"$$"+uniqueSuffix;}else{var prefix=getTranslationConstPrefix(suffix);name=this.constantPool.uniqueName(prefix);}return variable(name);};TemplateDefinitionBuilder.prototype.i18nUpdateRef=function(context){var icus=context.icus,meta=context.meta,isRoot=context.isRoot,isResolved=context.isResolved,isEmitted=context.isEmitted;if(isRoot&&isResolved&&!isEmitted&&!isSingleI18nIcu(meta)){context.isEmitted=true;var placeholders=context.getSerializedPlaceholders();var icuMapping_1={};var params_1=placeholders.size?placeholdersToParams(placeholders):{};if(icus.size){icus.forEach(function(refs,key){if(refs.length===1){// if we have one ICU defined for a given
// placeholder - just output its reference
params_1[key]=refs[0];}else{// ... otherwise we need to activate post-processing
// to replace ICU placeholders with proper values
var placeholder=wrapI18nPlaceholder(""+I18N_ICU_MAPPING_PREFIX+key);params_1[key]=literal(placeholder);icuMapping_1[key]=literalArr(refs);}});}// translation requires post processing in 2 cases:
// - if we have placeholders with multiple values (ex. `START_DIV`: [�#1�, �#2�, ...])
// - if we have multiple ICUs that refer to the same placeholder name
var needsPostprocessing=Array.from(placeholders.values()).some(function(value){return value.length>1;})||Object.keys(icuMapping_1).length;var transformFn=void 0;if(needsPostprocessing){transformFn=function transformFn(raw){var args=[raw];if(Object.keys(icuMapping_1).length){args.push(mapLiteral(icuMapping_1,true));}return instruction(null,Identifiers$1.i18nPostprocess,args);};}this.i18nTranslate(meta,params_1,context.ref,transformFn);}};TemplateDefinitionBuilder.prototype.i18nStart=function(span,meta,selfClosing){if(span===void 0){span=null;}var index=this.allocateDataSlot();if(this.i18nContext){this.i18n=this.i18nContext.forkChildContext(index,this.templateIndex,meta);}else{var ref_1=variable(this.constantPool.uniqueName(TRANSLATION_PREFIX));this.i18n=new I18nContext(index,ref_1,0,this.templateIndex,meta);}// generate i18nStart instruction
var _a=this.i18n,id=_a.id,ref=_a.ref;var params=[literal(index),ref];if(id>0){// do not push 3rd argument (sub-block id)
// into i18nStart call for top level i18n context
params.push(literal(id));}this.creationInstruction(span,selfClosing?Identifiers$1.i18n:Identifiers$1.i18nStart,params);};TemplateDefinitionBuilder.prototype.i18nEnd=function(span,selfClosing){var _this=this;if(span===void 0){span=null;}if(!this.i18n){throw new Error('i18nEnd is executed with no i18n context present');}if(this.i18nContext){this.i18nContext.reconcileChildContext(this.i18n);this.i18nUpdateRef(this.i18nContext);}else{this.i18nUpdateRef(this.i18n);}// setup accumulated bindings
var _a=this.i18n,index=_a.index,bindings=_a.bindings;if(bindings.size){var chainBindings_1=[];bindings.forEach(function(binding){chainBindings_1.push({sourceSpan:span,value:function value(){return _this.convertPropertyBinding(binding);}});});// for i18n block, advance to the most recent element index (by taking the current number of
// elements and subtracting one) before invoking `i18nExp` instructions, to make sure the
// necessary lifecycle hooks of components/directives are properly flushed.
this.updateInstructionChainWithAdvance(this.getConstCount()-1,Identifiers$1.i18nExp,chainBindings_1);this.updateInstruction(span,Identifiers$1.i18nApply,[literal(index)]);}if(!selfClosing){this.creationInstruction(span,Identifiers$1.i18nEnd);}this.i18n=null;// reset local i18n context
};TemplateDefinitionBuilder.prototype.i18nAttributesInstruction=function(nodeIndex,attrs,sourceSpan){var _this=this;var hasBindings=false;var i18nAttrArgs=[];var bindings=[];attrs.forEach(function(attr){var message=attr.i18n;if(attr instanceof TextAttribute){i18nAttrArgs.push(literal(attr.name),_this.i18nTranslate(message));}else{var converted=attr.value.visit(_this._valueConverter);_this.allocateBindingSlots(converted);if(converted instanceof Interpolation){var placeholders=assembleBoundTextPlaceholders(message);var params=placeholdersToParams(placeholders);i18nAttrArgs.push(literal(attr.name),_this.i18nTranslate(message,params));converted.expressions.forEach(function(expression){hasBindings=true;bindings.push({sourceSpan:sourceSpan,value:function value(){return _this.convertPropertyBinding(expression);}});});}}});if(bindings.length>0){this.updateInstructionChainWithAdvance(nodeIndex,Identifiers$1.i18nExp,bindings);}if(i18nAttrArgs.length>0){var index=literal(this.allocateDataSlot());var args=this.constantPool.getConstLiteral(literalArr(i18nAttrArgs),true);this.creationInstruction(sourceSpan,Identifiers$1.i18nAttributes,[index,args]);if(hasBindings){this.updateInstruction(sourceSpan,Identifiers$1.i18nApply,[index]);}}};TemplateDefinitionBuilder.prototype.getNamespaceInstruction=function(namespaceKey){switch(namespaceKey){case'math':return Identifiers$1.namespaceMathML;case'svg':return Identifiers$1.namespaceSVG;default:return Identifiers$1.namespaceHTML;}};TemplateDefinitionBuilder.prototype.addNamespaceInstruction=function(nsInstruction,element){this._namespace=nsInstruction;this.creationInstruction(element.sourceSpan,nsInstruction);};/**
         * Adds an update instruction for an interpolated property or attribute, such as
         * `prop="{{value}}"` or `attr.title="{{value}}"`
         */TemplateDefinitionBuilder.prototype.interpolatedUpdateInstruction=function(instruction,elementIndex,attrName,input,value,params){var _this=this;this.updateInstructionWithAdvance(elementIndex,input.sourceSpan,instruction,function(){return __spread([literal(attrName)],_this.getUpdateInstructionArguments(value),params);});};TemplateDefinitionBuilder.prototype.visitContent=function(ngContent){var slot=this.allocateDataSlot();var projectionSlotIdx=this._ngContentSelectorsOffset+this._ngContentReservedSlots.length;var parameters=[literal(slot)];this._ngContentReservedSlots.push(ngContent.selector);var nonContentSelectAttributes=ngContent.attributes.filter(function(attr){return attr.name.toLowerCase()!==NG_CONTENT_SELECT_ATTR$1;});var attributes=this.getAttributeExpressions(nonContentSelectAttributes,[],[]);if(attributes.length>0){parameters.push(literal(projectionSlotIdx),literalArr(attributes));}else if(projectionSlotIdx!==0){parameters.push(literal(projectionSlotIdx));}this.creationInstruction(ngContent.sourceSpan,Identifiers$1.projection,parameters);if(this.i18n){this.i18n.appendProjection(ngContent.i18n,slot);}};TemplateDefinitionBuilder.prototype.visitElement=function(element){var e_1,_a;var _this=this;var elementIndex=this.allocateDataSlot();var stylingBuilder=new StylingBuilder(null);var isNonBindableMode=false;var isI18nRootElement=isI18nRootNode(element.i18n)&&!isSingleI18nIcu(element.i18n);var i18nAttrs=[];var outputAttrs=[];var _b=__read(splitNsName(element.name),2),namespaceKey=_b[0],elementName=_b[1];var isNgContainer$1=isNgContainer(element.name);try{// Handle styling, i18n, ngNonBindable attributes
for(var _c=__values(element.attributes),_d=_c.next();!_d.done;_d=_c.next()){var attr=_d.value;var name_1=attr.name,value=attr.value;if(name_1===NON_BINDABLE_ATTR){isNonBindableMode=true;}else if(name_1==='style'){stylingBuilder.registerStyleAttr(value);}else if(name_1==='class'){stylingBuilder.registerClassAttr(value);}else{(attr.i18n?i18nAttrs:outputAttrs).push(attr);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_1)throw e_1.error;}}// Match directives on non i18n attributes
this.matchDirectives(element.name,element);// Regular element or ng-container creation mode
var parameters=[literal(elementIndex)];if(!isNgContainer$1){parameters.push(literal(elementName));}// Add the attributes
var allOtherInputs=[];element.inputs.forEach(function(input){var stylingInputWasSet=stylingBuilder.registerBoundInput(input);if(!stylingInputWasSet){if(input.type===0/* Property */&&input.i18n){i18nAttrs.push(input);}else{allOtherInputs.push(input);}}});// add attributes for directive and projection matching purposes
var attributes=this.getAttributeExpressions(outputAttrs,allOtherInputs,element.outputs,stylingBuilder,[],i18nAttrs);parameters.push(this.addAttrsToConsts(attributes));// local refs (ex.: <div #foo #bar="baz">)
var refs=this.prepareRefsArray(element.references);parameters.push(this.addToConsts(refs));var wasInNamespace=this._namespace;var currentNamespace=this.getNamespaceInstruction(namespaceKey);// If the namespace is changing now, include an instruction to change it
// during element creation.
if(currentNamespace!==wasInNamespace){this.addNamespaceInstruction(currentNamespace,element);}if(this.i18n){this.i18n.appendElement(element.i18n,elementIndex);}// Note that we do not append text node instructions and ICUs inside i18n section,
// so we exclude them while calculating whether current element has children
var hasChildren=!isI18nRootElement&&this.i18n?!hasTextChildrenOnly(element.children):element.children.length>0;var createSelfClosingInstruction=!stylingBuilder.hasBindingsWithPipes&&element.outputs.length===0&&i18nAttrs.length===0&&!hasChildren;var createSelfClosingI18nInstruction=!createSelfClosingInstruction&&hasTextChildrenOnly(element.children);if(createSelfClosingInstruction){this.creationInstruction(element.sourceSpan,isNgContainer$1?Identifiers$1.elementContainer:Identifiers$1.element,trimTrailingNulls(parameters));}else{this.creationInstruction(element.sourceSpan,isNgContainer$1?Identifiers$1.elementContainerStart:Identifiers$1.elementStart,trimTrailingNulls(parameters));if(isNonBindableMode){this.creationInstruction(element.sourceSpan,Identifiers$1.disableBindings);}if(i18nAttrs.length>0){this.i18nAttributesInstruction(elementIndex,i18nAttrs,element.sourceSpan);}// Generate Listeners (outputs)
if(element.outputs.length>0){var listeners=element.outputs.map(function(outputAst){return{sourceSpan:outputAst.sourceSpan,params:_this.prepareListenerParameter(element.name,outputAst,elementIndex)};});this.creationInstructionChain(Identifiers$1.listener,listeners);}// Note: it's important to keep i18n/i18nStart instructions after i18nAttributes and
// listeners, to make sure i18nAttributes instruction targets current element at runtime.
if(isI18nRootElement){this.i18nStart(element.sourceSpan,element.i18n,createSelfClosingI18nInstruction);}}// the code here will collect all update-level styling instructions and add them to the
// update block of the template function AOT code. Instructions like `styleProp`,
// `styleMap`, `classMap`, `classProp`
// are all generated and assigned in the code below.
var stylingInstructions=stylingBuilder.buildUpdateLevelInstructions(this._valueConverter);var limit=stylingInstructions.length-1;for(var i=0;i<=limit;i++){var instruction_1=stylingInstructions[i];this._bindingSlots+=this.processStylingUpdateInstruction(elementIndex,instruction_1);}// the reason why `undefined` is used is because the renderer understands this as a
// special value to symbolize that there is no RHS to this binding
// TODO (matsko): revisit this once FW-959 is approached
var emptyValueBindInstruction=literal(undefined);var propertyBindings=[];var attributeBindings=[];// Generate element input bindings
allOtherInputs.forEach(function(input){var inputType=input.type;if(inputType===4/* Animation */){var value_1=input.value.visit(_this._valueConverter);// animation bindings can be presented in the following formats:
// 1. [@binding]="fooExp"
// 2. [@binding]="{value:fooExp, params:{...}}"
// 3. [@binding]
// 4. @binding
// All formats will be valid for when a synthetic binding is created.
// The reasoning for this is because the renderer should get each
// synthetic binding value in the order of the array that they are
// defined in...
var hasValue_1=value_1 instanceof LiteralPrimitive?!!value_1.value:true;_this.allocateBindingSlots(value_1);propertyBindings.push({name:prepareSyntheticPropertyName(input.name),sourceSpan:input.sourceSpan,value:function value(){return hasValue_1?_this.convertPropertyBinding(value_1):emptyValueBindInstruction;}});}else{// we must skip attributes with associated i18n context, since these attributes are handled
// separately and corresponding `i18nExp` and `i18nApply` instructions will be generated
if(input.i18n)return;var value_2=input.value.visit(_this._valueConverter);if(value_2!==undefined){var params_2=[];var _a=__read(splitNsName(input.name),2),attrNamespace=_a[0],attrName_1=_a[1];var isAttributeBinding=inputType===1/* Attribute */;var sanitizationRef=resolveSanitizationFn(input.securityContext,isAttributeBinding);if(sanitizationRef)params_2.push(sanitizationRef);if(attrNamespace){var namespaceLiteral=literal(attrNamespace);if(sanitizationRef){params_2.push(namespaceLiteral);}else{// If there wasn't a sanitization ref, we need to add
// an extra param so that we can pass in the namespace.
params_2.push(literal(null),namespaceLiteral);}}_this.allocateBindingSlots(value_2);if(inputType===0/* Property */){if(value_2 instanceof Interpolation){// prop="{{value}}" and friends
_this.interpolatedUpdateInstruction(getPropertyInterpolationExpression(value_2),elementIndex,attrName_1,input,value_2,params_2);}else{// [prop]="value"
// Collect all the properties so that we can chain into a single function at the end.
propertyBindings.push({name:attrName_1,sourceSpan:input.sourceSpan,value:function value(){return _this.convertPropertyBinding(value_2);},params:params_2});}}else if(inputType===1/* Attribute */){if(value_2 instanceof Interpolation&&getInterpolationArgsLength(value_2)>1){// attr.name="text{{value}}" and friends
_this.interpolatedUpdateInstruction(getAttributeInterpolationExpression(value_2),elementIndex,attrName_1,input,value_2,params_2);}else{var boundValue_1=value_2 instanceof Interpolation?value_2.expressions[0]:value_2;// [attr.name]="value" or attr.name="{{value}}"
// Collect the attribute bindings so that they can be chained at the end.
attributeBindings.push({name:attrName_1,sourceSpan:input.sourceSpan,value:function value(){return _this.convertPropertyBinding(boundValue_1);},params:params_2});}}else{// class prop
_this.updateInstructionWithAdvance(elementIndex,input.sourceSpan,Identifiers$1.classProp,function(){return __spread([literal(elementIndex),literal(attrName_1),_this.convertPropertyBinding(value_2)],params_2);});}}}});if(propertyBindings.length>0){this.updateInstructionChainWithAdvance(elementIndex,Identifiers$1.property,propertyBindings);}if(attributeBindings.length>0){this.updateInstructionChainWithAdvance(elementIndex,Identifiers$1.attribute,attributeBindings);}// Traverse element child nodes
visitAll(this,element.children);if(!isI18nRootElement&&this.i18n){this.i18n.appendElement(element.i18n,elementIndex,true);}if(!createSelfClosingInstruction){// Finish element construction mode.
var span=element.endSourceSpan||element.sourceSpan;if(isI18nRootElement){this.i18nEnd(span,createSelfClosingI18nInstruction);}if(isNonBindableMode){this.creationInstruction(span,Identifiers$1.enableBindings);}this.creationInstruction(span,isNgContainer$1?Identifiers$1.elementContainerEnd:Identifiers$1.elementEnd);}};TemplateDefinitionBuilder.prototype.visitTemplate=function(template){var _this=this;var NG_TEMPLATE_TAG_NAME='ng-template';var templateIndex=this.allocateDataSlot();if(this.i18n){this.i18n.appendTemplate(template.i18n,templateIndex);}var tagName=sanitizeIdentifier(template.tagName||'');var contextName=""+this.contextName+(tagName?'_'+tagName:'')+"_"+templateIndex;var templateName=contextName+"_Template";var parameters=[literal(templateIndex),variable(templateName),// We don't care about the tag's namespace here, because we infer
// it based on the parent nodes inside the template instruction.
literal(template.tagName?splitNsName(template.tagName)[1]:template.tagName)];// find directives matching on a given <ng-template> node
this.matchDirectives(NG_TEMPLATE_TAG_NAME,template);// prepare attributes parameter (including attributes used for directive matching)
var _a=__read(partitionArray(template.attributes,hasI18nMeta),2),i18nStaticAttrs=_a[0],staticAttrs=_a[1];var attrsExprs=this.getAttributeExpressions(staticAttrs,template.inputs,template.outputs,undefined/* styles */,template.templateAttrs,i18nStaticAttrs);parameters.push(this.addAttrsToConsts(attrsExprs));// local refs (ex.: <ng-template #foo>)
if(template.references&&template.references.length){var refs=this.prepareRefsArray(template.references);parameters.push(this.addToConsts(refs));parameters.push(importExpr(Identifiers$1.templateRefExtractor));}// Create the template function
var templateVisitor=new TemplateDefinitionBuilder(this.constantPool,this._bindingScope,this.level+1,contextName,this.i18n,templateIndex,templateName,this.directiveMatcher,this.directives,this.pipeTypeByName,this.pipes,this._namespace,this.fileBasedI18nSuffix,this.i18nUseExternalIds,this._constants);// Nested templates must not be visited until after their parent templates have completed
// processing, so they are queued here until after the initial pass. Otherwise, we wouldn't
// be able to support bindings in nested templates to local refs that occur after the
// template definition. e.g. <div *ngIf="showing">{{ foo }}</div>  <div #foo></div>
this._nestedTemplateFns.push(function(){var _a;var templateFunctionExpr=templateVisitor.buildTemplateFunction(template.children,template.variables,_this._ngContentReservedSlots.length+_this._ngContentSelectorsOffset,template.i18n);_this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName,null));if(templateVisitor._ngContentReservedSlots.length){(_a=_this._ngContentReservedSlots).push.apply(_a,__spread(templateVisitor._ngContentReservedSlots));}});// e.g. template(1, MyComp_Template_1)
this.creationInstruction(template.sourceSpan,Identifiers$1.templateCreate,function(){parameters.splice(2,0,literal(templateVisitor.getConstCount()),literal(templateVisitor.getVarCount()));return trimTrailingNulls(parameters);});// handle property bindings e.g. ɵɵproperty('ngForOf', ctx.items), et al;
this.templatePropertyBindings(templateIndex,template.templateAttrs);// Only add normal input/output binding instructions on explicit <ng-template> elements.
if(template.tagName===NG_TEMPLATE_TAG_NAME){var _b=__read(partitionArray(template.inputs,hasI18nMeta),2),i18nInputs=_b[0],inputs=_b[1];var i18nAttrs=__spread(i18nStaticAttrs,i18nInputs);// Add i18n attributes that may act as inputs to directives. If such attributes are present,
// generate `i18nAttributes` instruction. Note: we generate it only for explicit <ng-template>
// elements, in case of inline templates, corresponding instructions will be generated in the
// nested template function.
if(i18nAttrs.length>0){this.i18nAttributesInstruction(templateIndex,i18nAttrs,template.sourceSpan);}// Add the input bindings
if(inputs.length>0){this.templatePropertyBindings(templateIndex,inputs);}// Generate listeners for directive output
if(template.outputs.length>0){var listeners=template.outputs.map(function(outputAst){return{sourceSpan:outputAst.sourceSpan,params:_this.prepareListenerParameter('ng_template',outputAst,templateIndex)};});this.creationInstructionChain(Identifiers$1.listener,listeners);}}};TemplateDefinitionBuilder.prototype.visitBoundText=function(text){var _this=this;if(this.i18n){var value_3=text.value.visit(this._valueConverter);this.allocateBindingSlots(value_3);if(value_3 instanceof Interpolation){this.i18n.appendBoundText(text.i18n);this.i18nAppendBindings(value_3.expressions);}return;}var nodeIndex=this.allocateDataSlot();this.creationInstruction(text.sourceSpan,Identifiers$1.text,[literal(nodeIndex)]);var value=text.value.visit(this._valueConverter);this.allocateBindingSlots(value);if(value instanceof Interpolation){this.updateInstructionWithAdvance(nodeIndex,text.sourceSpan,getTextInterpolationExpression(value),function(){return _this.getUpdateInstructionArguments(value);});}else{error('Text nodes should be interpolated and never bound directly.');}};TemplateDefinitionBuilder.prototype.visitText=function(text){// when a text element is located within a translatable
// block, we exclude this text element from instructions set,
// since it will be captured in i18n content and processed at runtime
if(!this.i18n){this.creationInstruction(text.sourceSpan,Identifiers$1.text,[literal(this.allocateDataSlot()),literal(text.value)]);}};TemplateDefinitionBuilder.prototype.visitIcu=function(icu){var initWasInvoked=false;// if an ICU was created outside of i18n block, we still treat
// it as a translatable entity and invoke i18nStart and i18nEnd
// to generate i18n context and the necessary instructions
if(!this.i18n){initWasInvoked=true;this.i18nStart(null,icu.i18n,true);}var i18n=this.i18n;var vars=this.i18nBindProps(icu.vars);var placeholders=this.i18nBindProps(icu.placeholders);// output ICU directly and keep ICU reference in context
var message=icu.i18n;// we always need post-processing function for ICUs, to make sure that:
// - all placeholders in a form of {PLACEHOLDER} are replaced with actual values (note:
// `goog.getMsg` does not process ICUs and uses the `{PLACEHOLDER}` format for placeholders
// inside ICUs)
// - all ICU vars (such as `VAR_SELECT` or `VAR_PLURAL`) are replaced with correct values
var transformFn=function transformFn(raw){var params=_assign3(_assign3({},vars),placeholders);var formatted=i18nFormatPlaceholderNames(params,/* useCamelCase */false);return instruction(null,Identifiers$1.i18nPostprocess,[raw,mapLiteral(formatted,true)]);};// in case the whole i18n message is a single ICU - we do not need to
// create a separate top-level translation, we can use the root ref instead
// and make this ICU a top-level translation
// note: ICU placeholders are replaced with actual values in `i18nPostprocess` function
// separately, so we do not pass placeholders into `i18nTranslate` function.
if(isSingleI18nIcu(i18n.meta)){this.i18nTranslate(message,/* placeholders */{},i18n.ref,transformFn);}else{// output ICU directly and keep ICU reference in context
var ref=this.i18nTranslate(message,/* placeholders */{},/* ref */undefined,transformFn);i18n.appendIcu(icuFromI18nMessage(message).name,ref);}if(initWasInvoked){this.i18nEnd(null,true);}return null;};TemplateDefinitionBuilder.prototype.allocateDataSlot=function(){return this._dataIndex++;};TemplateDefinitionBuilder.prototype.getConstCount=function(){return this._dataIndex;};TemplateDefinitionBuilder.prototype.getVarCount=function(){return this._pureFunctionSlots;};TemplateDefinitionBuilder.prototype.getConsts=function(){return this._constants;};TemplateDefinitionBuilder.prototype.getNgContentSelectors=function(){return this._ngContentReservedSlots.length?this.constantPool.getConstLiteral(asLiteral(this._ngContentReservedSlots),true):null;};TemplateDefinitionBuilder.prototype.bindingContext=function(){return""+this._bindingContext++;};TemplateDefinitionBuilder.prototype.templatePropertyBindings=function(templateIndex,attrs){var _this=this;var propertyBindings=[];attrs.forEach(function(input){if(input instanceof BoundAttribute){var value_4=input.value.visit(_this._valueConverter);if(value_4!==undefined){_this.allocateBindingSlots(value_4);if(value_4 instanceof Interpolation){// Params typically contain attribute namespace and value sanitizer, which is applicable
// for regular HTML elements, but not applicable for <ng-template> (since props act as
// inputs to directives), so keep params array empty.
var params=[];// prop="{{value}}" case
_this.interpolatedUpdateInstruction(getPropertyInterpolationExpression(value_4),templateIndex,input.name,input,value_4,params);}else{// [prop]="value" case
propertyBindings.push({name:input.name,sourceSpan:input.sourceSpan,value:function value(){return _this.convertPropertyBinding(value_4);}});}}}});if(propertyBindings.length>0){this.updateInstructionChainWithAdvance(templateIndex,Identifiers$1.property,propertyBindings);}};// Bindings must only be resolved after all local refs have been visited, so all
// instructions are queued in callbacks that execute once the initial pass has completed.
// Otherwise, we wouldn't be able to support local refs that are defined after their
// bindings. e.g. {{ foo }} <div #foo></div>
TemplateDefinitionBuilder.prototype.instructionFn=function(fns,span,reference,paramsOrFn,prepend){if(prepend===void 0){prepend=false;}fns[prepend?'unshift':'push'](function(){var params=Array.isArray(paramsOrFn)?paramsOrFn:paramsOrFn();return instruction(span,reference,params).toStmt();});};TemplateDefinitionBuilder.prototype.processStylingUpdateInstruction=function(elementIndex,instruction){var _this=this;var allocateBindingSlots=0;if(instruction){var calls_1=[];instruction.calls.forEach(function(call){allocateBindingSlots+=call.allocateBindingSlots;calls_1.push({sourceSpan:call.sourceSpan,value:function value(){return call.params(function(value){return call.supportsInterpolation&&value instanceof Interpolation?_this.getUpdateInstructionArguments(value):_this.convertPropertyBinding(value);});}});});this.updateInstructionChainWithAdvance(elementIndex,instruction.reference,calls_1);}return allocateBindingSlots;};TemplateDefinitionBuilder.prototype.creationInstruction=function(span,reference,paramsOrFn,prepend){this.instructionFn(this._creationCodeFns,span,reference,paramsOrFn||[],prepend);};TemplateDefinitionBuilder.prototype.creationInstructionChain=function(reference,calls){var span=calls.length?calls[0].sourceSpan:null;this._creationCodeFns.push(function(){return chainedInstruction(reference,calls.map(function(call){return call.params();}),span).toStmt();});};TemplateDefinitionBuilder.prototype.updateInstructionWithAdvance=function(nodeIndex,span,reference,paramsOrFn){this.addAdvanceInstructionIfNecessary(nodeIndex,span);this.updateInstruction(span,reference,paramsOrFn);};TemplateDefinitionBuilder.prototype.updateInstruction=function(span,reference,paramsOrFn){this.instructionFn(this._updateCodeFns,span,reference,paramsOrFn||[]);};TemplateDefinitionBuilder.prototype.updateInstructionChain=function(reference,bindings){var span=bindings.length?bindings[0].sourceSpan:null;this._updateCodeFns.push(function(){var calls=bindings.map(function(property){var value=property.value();var fnParams=Array.isArray(value)?value:[value];if(property.params){fnParams.push.apply(fnParams,__spread(property.params));}if(property.name){// We want the property name to always be the first function parameter.
fnParams.unshift(literal(property.name));}return fnParams;});return chainedInstruction(reference,calls,span).toStmt();});};TemplateDefinitionBuilder.prototype.updateInstructionChainWithAdvance=function(nodeIndex,reference,bindings){this.addAdvanceInstructionIfNecessary(nodeIndex,bindings.length?bindings[0].sourceSpan:null);this.updateInstructionChain(reference,bindings);};TemplateDefinitionBuilder.prototype.addAdvanceInstructionIfNecessary=function(nodeIndex,span){if(nodeIndex!==this._currentIndex){var delta=nodeIndex-this._currentIndex;if(delta<1){throw new Error('advance instruction can only go forwards');}this.instructionFn(this._updateCodeFns,span,Identifiers$1.advance,[literal(delta)]);this._currentIndex=nodeIndex;}};TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots=function(numSlots){var originalSlots=this._pureFunctionSlots;this._pureFunctionSlots+=numSlots;return originalSlots;};TemplateDefinitionBuilder.prototype.allocateBindingSlots=function(value){this._bindingSlots+=value instanceof Interpolation?value.expressions.length:1;};/**
         * Gets an expression that refers to the implicit receiver. The implicit
         * receiver is always the root level context.
         */TemplateDefinitionBuilder.prototype.getImplicitReceiverExpr=function(){if(this._implicitReceiverExpr){return this._implicitReceiverExpr;}return this._implicitReceiverExpr=this.level===0?variable(CONTEXT_NAME):this._bindingScope.getOrCreateSharedContextVar(0);};TemplateDefinitionBuilder.prototype.convertPropertyBinding=function(value){var _a;var convertedPropertyBinding=convertPropertyBinding(this,this.getImplicitReceiverExpr(),value,this.bindingContext(),BindingForm.TrySimple,function(){return error('Unexpected interpolation');});var valExpr=convertedPropertyBinding.currValExpr;(_a=this._tempVariables).push.apply(_a,__spread(convertedPropertyBinding.stmts));return valExpr;};/**
         * Gets a list of argument expressions to pass to an update instruction expression. Also updates
         * the temp variables state with temp variables that were identified as needing to be created
         * while visiting the arguments.
         * @param value The original expression we will be resolving an arguments list from.
         */TemplateDefinitionBuilder.prototype.getUpdateInstructionArguments=function(value){var _a;var _b=convertUpdateArguments(this,this.getImplicitReceiverExpr(),value,this.bindingContext()),args=_b.args,stmts=_b.stmts;(_a=this._tempVariables).push.apply(_a,__spread(stmts));return args;};TemplateDefinitionBuilder.prototype.matchDirectives=function(elementName,elOrTpl){var _this=this;if(this.directiveMatcher){var selector=createCssSelector(elementName,getAttrsForDirectiveMatching(elOrTpl));this.directiveMatcher.match(selector,function(cssSelector,staticType){_this.directives.add(staticType);});}};/**
         * Prepares all attribute expression values for the `TAttributes` array.
         *
         * The purpose of this function is to properly construct an attributes array that
         * is passed into the `elementStart` (or just `element`) functions. Because there
         * are many different types of attributes, the array needs to be constructed in a
         * special way so that `elementStart` can properly evaluate them.
         *
         * The format looks like this:
         *
         * ```
         * attrs = [prop, value, prop2, value2,
         *   PROJECT_AS, selector,
         *   CLASSES, class1, class2,
         *   STYLES, style1, value1, style2, value2,
         *   BINDINGS, name1, name2, name3,
         *   TEMPLATE, name4, name5, name6,
         *   I18N, name7, name8, ...]
         * ```
         *
         * Note that this function will fully ignore all synthetic (@foo) attribute values
         * because those values are intended to always be generated as property instructions.
         */TemplateDefinitionBuilder.prototype.getAttributeExpressions=function(renderAttributes,inputs,outputs,styles,templateAttrs,i18nAttrs){if(templateAttrs===void 0){templateAttrs=[];}if(i18nAttrs===void 0){i18nAttrs=[];}var alreadySeen=new Set();var attrExprs=[];var ngProjectAsAttr;renderAttributes.forEach(function(attr){if(attr.name===NG_PROJECT_AS_ATTR_NAME){ngProjectAsAttr=attr;}attrExprs.push.apply(attrExprs,__spread(getAttributeNameLiterals(attr.name),[asLiteral(attr.value)]));});// Keep ngProjectAs next to the other name, value pairs so we can verify that we match
// ngProjectAs marker in the attribute name slot.
if(ngProjectAsAttr){attrExprs.push.apply(attrExprs,__spread(getNgProjectAsLiteral(ngProjectAsAttr)));}function addAttrExpr(key,value){if(typeof key==='string'){if(!alreadySeen.has(key)){attrExprs.push.apply(attrExprs,__spread(getAttributeNameLiterals(key)));value!==undefined&&attrExprs.push(value);alreadySeen.add(key);}}else{attrExprs.push(literal(key));}}// it's important that this occurs before BINDINGS and TEMPLATE because once `elementStart`
// comes across the BINDINGS or TEMPLATE markers then it will continue reading each value as
// as single property value cell by cell.
if(styles){styles.populateInitialStylingAttrs(attrExprs);}if(inputs.length||outputs.length){var attrsLengthBeforeInputs=attrExprs.length;for(var i=0;i<inputs.length;i++){var input=inputs[i];// We don't want the animation and attribute bindings in the
// attributes array since they aren't used for directive matching.
if(input.type!==4/* Animation */&&input.type!==1/* Attribute */){addAttrExpr(input.name);}}for(var i=0;i<outputs.length;i++){var output=outputs[i];if(output.type!==1/* Animation */){addAttrExpr(output.name);}}// this is a cheap way of adding the marker only after all the input/output
// values have been filtered (by not including the animation ones) and added
// to the expressions. The marker is important because it tells the runtime
// code that this is where attributes without values start...
if(attrExprs.length!==attrsLengthBeforeInputs){attrExprs.splice(attrsLengthBeforeInputs,0,literal(3/* Bindings */));}}if(templateAttrs.length){attrExprs.push(literal(4/* Template */));templateAttrs.forEach(function(attr){return addAttrExpr(attr.name);});}if(i18nAttrs.length){attrExprs.push(literal(6/* I18n */));i18nAttrs.forEach(function(attr){return addAttrExpr(attr.name);});}return attrExprs;};TemplateDefinitionBuilder.prototype.addToConsts=function(expression){if(isNull(expression)){return TYPED_NULL_EXPR;}// Try to reuse a literal that's already in the array, if possible.
for(var i=0;i<this._constants.length;i++){if(this._constants[i].isEquivalent(expression)){return literal(i);}}return literal(this._constants.push(expression)-1);};TemplateDefinitionBuilder.prototype.addAttrsToConsts=function(attrs){return attrs.length>0?this.addToConsts(literalArr(attrs)):TYPED_NULL_EXPR;};TemplateDefinitionBuilder.prototype.prepareRefsArray=function(references){var _this=this;if(!references||references.length===0){return TYPED_NULL_EXPR;}var refsParam=flatten(references.map(function(reference){var slot=_this.allocateDataSlot();// Generate the update temporary.
var variableName=_this._bindingScope.freshReferenceName();var retrievalLevel=_this.level;var lhs=variable(variableName);_this._bindingScope.set(retrievalLevel,reference.name,lhs,0/* DEFAULT */,function(scope,relativeLevel){// e.g. nextContext(2);
var nextContextStmt=relativeLevel>0?[generateNextContextExpr(relativeLevel).toStmt()]:[];// e.g. const $foo$ = reference(1);
var refExpr=lhs.set(importExpr(Identifiers$1.reference).callFn([literal(slot)]));return nextContextStmt.concat(refExpr.toConstDecl());},true);return[reference.name,reference.value];}));return asLiteral(refsParam);};TemplateDefinitionBuilder.prototype.prepareListenerParameter=function(tagName,outputAst,index){var _this=this;return function(){var eventName=outputAst.name;var bindingFnName=outputAst.type===1/* Animation */?// synthetic @listener.foo values are treated the exact same as are standard listeners
prepareSyntheticListenerFunctionName(eventName,outputAst.phase):sanitizeIdentifier(eventName);var handlerName=_this.templateName+"_"+tagName+"_"+bindingFnName+"_"+index+"_listener";var scope=_this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);return prepareEventListenerParameters(outputAst,handlerName,scope);};};return TemplateDefinitionBuilder;}();var ValueConverter=/** @class */function(_super){__extends(ValueConverter,_super);function ValueConverter(constantPool,allocateSlot,allocatePureFunctionSlots,definePipe){var _this=_super.call(this)||this;_this.constantPool=constantPool;_this.allocateSlot=allocateSlot;_this.allocatePureFunctionSlots=allocatePureFunctionSlots;_this.definePipe=definePipe;_this._pipeBindExprs=[];return _this;}// AstMemoryEfficientTransformer
ValueConverter.prototype.visitPipe=function(pipe,context){// Allocate a slot to create the pipe
var slot=this.allocateSlot();var slotPseudoLocal="PIPE:"+slot;// Allocate one slot for the result plus one slot per pipe argument
var pureFunctionSlot=this.allocatePureFunctionSlots(2+pipe.args.length);var target=new PropertyRead(pipe.span,pipe.sourceSpan,pipe.nameSpan,new ImplicitReceiver(pipe.span,pipe.sourceSpan),slotPseudoLocal);var _a=pipeBindingCallInfo(pipe.args),identifier=_a.identifier,isVarLength=_a.isVarLength;this.definePipe(pipe.name,slotPseudoLocal,slot,importExpr(identifier));var args=__spread([pipe.exp],pipe.args);var convertedArgs=isVarLength?this.visitAll([new LiteralArray(pipe.span,pipe.sourceSpan,args)]):this.visitAll(args);var pipeBindExpr=new FunctionCall(pipe.span,pipe.sourceSpan,target,__spread([new LiteralPrimitive(pipe.span,pipe.sourceSpan,slot),new LiteralPrimitive(pipe.span,pipe.sourceSpan,pureFunctionSlot)],convertedArgs));this._pipeBindExprs.push(pipeBindExpr);return pipeBindExpr;};ValueConverter.prototype.updatePipeSlotOffsets=function(bindingSlots){this._pipeBindExprs.forEach(function(pipe){// update the slot offset arg (index 1) to account for binding slots
var slotOffset=pipe.args[1];slotOffset.value+=bindingSlots;});};ValueConverter.prototype.visitLiteralArray=function(array,context){var _this=this;return new BuiltinFunctionCall(array.span,array.sourceSpan,this.visitAll(array.expressions),function(values){// If the literal has calculated (non-literal) elements transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values.
var literal=literalArr(values);return getLiteralFactory(_this.constantPool,literal,_this.allocatePureFunctionSlots);});};ValueConverter.prototype.visitLiteralMap=function(map,context){var _this=this;return new BuiltinFunctionCall(map.span,map.sourceSpan,this.visitAll(map.values),function(values){// If the literal has calculated (non-literal) elements  transform it into
// calls to literal factories that compose the literal and will cache intermediate
// values.
var literal=literalMap(values.map(function(value,index){return{key:map.keys[index].key,value:value,quoted:map.keys[index].quoted};}));return getLiteralFactory(_this.constantPool,literal,_this.allocatePureFunctionSlots);});};return ValueConverter;}(AstMemoryEfficientTransformer);// Pipes always have at least one parameter, the value they operate on
var pipeBindingIdentifiers=[Identifiers$1.pipeBind1,Identifiers$1.pipeBind2,Identifiers$1.pipeBind3,Identifiers$1.pipeBind4];function pipeBindingCallInfo(args){var identifier=pipeBindingIdentifiers[args.length];return{identifier:identifier||Identifiers$1.pipeBindV,isVarLength:!identifier};}var pureFunctionIdentifiers=[Identifiers$1.pureFunction0,Identifiers$1.pureFunction1,Identifiers$1.pureFunction2,Identifiers$1.pureFunction3,Identifiers$1.pureFunction4,Identifiers$1.pureFunction5,Identifiers$1.pureFunction6,Identifiers$1.pureFunction7,Identifiers$1.pureFunction8];function pureFunctionCallInfo(args){var identifier=pureFunctionIdentifiers[args.length];return{identifier:identifier||Identifiers$1.pureFunctionV,isVarLength:!identifier};}function instruction(span,reference,params){return importExpr(reference,null,span).callFn(params,span);}// e.g. x(2);
function generateNextContextExpr(relativeLevelDiff){return importExpr(Identifiers$1.nextContext).callFn(relativeLevelDiff>1?[literal(relativeLevelDiff)]:[]);}function getLiteralFactory(constantPool,literal$1,allocateSlots){var _a=constantPool.getLiteralFactory(literal$1),literalFactory=_a.literalFactory,literalFactoryArguments=_a.literalFactoryArguments;// Allocate 1 slot for the result plus 1 per argument
var startSlot=allocateSlots(1+literalFactoryArguments.length);var _b=pureFunctionCallInfo(literalFactoryArguments),identifier=_b.identifier,isVarLength=_b.isVarLength;// Literal factories are pure functions that only need to be re-invoked when the parameters
// change.
var args=[literal(startSlot),literalFactory];if(isVarLength){args.push(literalArr(literalFactoryArguments));}else{args.push.apply(args,__spread(literalFactoryArguments));}return importExpr(identifier).callFn(args);}/**
     * Gets an array of literals that can be added to an expression
     * to represent the name and namespace of an attribute. E.g.
     * `:xlink:href` turns into `[AttributeMarker.NamespaceURI, 'xlink', 'href']`.
     *
     * @param name Name of the attribute, including the namespace.
     */function getAttributeNameLiterals(name){var _a=__read(splitNsName(name),2),attributeNamespace=_a[0],attributeName=_a[1];var nameLiteral=literal(attributeName);if(attributeNamespace){return[literal(0/* NamespaceURI */),literal(attributeNamespace),nameLiteral];}return[nameLiteral];}/** The prefix used to get a shared context in BindingScope's map. */var SHARED_CONTEXT_KEY='$$shared_ctx$$';var BindingScope=/** @class */function(){function BindingScope(bindingLevel,parent){if(bindingLevel===void 0){bindingLevel=0;}if(parent===void 0){parent=null;}this.bindingLevel=bindingLevel;this.parent=parent;/** Keeps a map from local variables to their BindingData. */this.map=new Map();this.referenceNameIndex=0;this.restoreViewVariable=null;}BindingScope.createRootScope=function(){return new BindingScope().set(0,'$event',variable('$event'));};BindingScope.prototype.get=function(name){var current=this;while(current){var value=current.map.get(name);if(value!=null){if(current!==this){// make a local copy and reset the `declare` state
value={retrievalLevel:value.retrievalLevel,lhs:value.lhs,declareLocalCallback:value.declareLocalCallback,declare:false,priority:value.priority,localRef:value.localRef};// Cache the value locally.
this.map.set(name,value);// Possibly generate a shared context var
this.maybeGenerateSharedContextVar(value);this.maybeRestoreView(value.retrievalLevel,value.localRef);}if(value.declareLocalCallback&&!value.declare){value.declare=true;}return value.lhs;}current=current.parent;}// If we get to this point, we are looking for a property on the top level component
// - If level === 0, we are on the top and don't need to re-declare `ctx`.
// - If level > 0, we are in an embedded view. We need to retrieve the name of the
// local var we used to store the component context, e.g. const $comp$ = x();
return this.bindingLevel===0?null:this.getComponentProperty(name);};/**
         * Create a local variable for later reference.
         *
         * @param retrievalLevel The level from which this value can be retrieved
         * @param name Name of the variable.
         * @param lhs AST representing the left hand side of the `let lhs = rhs;`.
         * @param priority The sorting priority of this var
         * @param declareLocalCallback The callback to invoke when declaring this local var
         * @param localRef Whether or not this is a local ref
         */BindingScope.prototype.set=function(retrievalLevel,name,lhs,priority,declareLocalCallback,localRef){if(priority===void 0){priority=0/* DEFAULT */;}if(this.map.has(name)){if(localRef){// Do not throw an error if it's a local ref and do not update existing value,
// so the first defined ref is always returned.
return this;}error("The name "+name+" is already defined in scope to be "+this.map.get(name));}this.map.set(name,{retrievalLevel:retrievalLevel,lhs:lhs,declare:false,declareLocalCallback:declareLocalCallback,priority:priority,localRef:localRef||false});return this;};// Implemented as part of LocalResolver.
BindingScope.prototype.getLocal=function(name){return this.get(name);};// Implemented as part of LocalResolver.
BindingScope.prototype.notifyImplicitReceiverUse=function(){if(this.bindingLevel!==0){// Since the implicit receiver is accessed in an embedded view, we need to
// ensure that we declare a shared context variable for the current template
// in the update variables.
this.map.get(SHARED_CONTEXT_KEY+0).declare=true;}};BindingScope.prototype.nestedScope=function(level){var newScope=new BindingScope(level,this);if(level>0)newScope.generateSharedContextVar(0);return newScope;};/**
         * Gets or creates a shared context variable and returns its expression. Note that
         * this does not mean that the shared variable will be declared. Variables in the
         * binding scope will be only declared if they are used.
         */BindingScope.prototype.getOrCreateSharedContextVar=function(retrievalLevel){var bindingKey=SHARED_CONTEXT_KEY+retrievalLevel;if(!this.map.has(bindingKey)){this.generateSharedContextVar(retrievalLevel);}// Shared context variables are always generated as "ReadVarExpr".
return this.map.get(bindingKey).lhs;};BindingScope.prototype.getSharedContextName=function(retrievalLevel){var sharedCtxObj=this.map.get(SHARED_CONTEXT_KEY+retrievalLevel);// Shared context variables are always generated as "ReadVarExpr".
return sharedCtxObj&&sharedCtxObj.declare?sharedCtxObj.lhs:null;};BindingScope.prototype.maybeGenerateSharedContextVar=function(value){if(value.priority===1/* CONTEXT */&&value.retrievalLevel<this.bindingLevel){var sharedCtxObj=this.map.get(SHARED_CONTEXT_KEY+value.retrievalLevel);if(sharedCtxObj){sharedCtxObj.declare=true;}else{this.generateSharedContextVar(value.retrievalLevel);}}};BindingScope.prototype.generateSharedContextVar=function(retrievalLevel){var lhs=variable(CONTEXT_NAME+this.freshReferenceName());this.map.set(SHARED_CONTEXT_KEY+retrievalLevel,{retrievalLevel:retrievalLevel,lhs:lhs,declareLocalCallback:function declareLocalCallback(scope,relativeLevel){// const ctx_r0 = nextContext(2);
return[lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];},declare:false,priority:2/* SHARED_CONTEXT */,localRef:false});};BindingScope.prototype.getComponentProperty=function(name){var componentValue=this.map.get(SHARED_CONTEXT_KEY+0);componentValue.declare=true;this.maybeRestoreView(0,false);return componentValue.lhs.prop(name);};BindingScope.prototype.maybeRestoreView=function(retrievalLevel,localRefLookup){// We want to restore the current view in listener fns if:
// 1 - we are accessing a value in a parent view, which requires walking the view tree rather
// than using the ctx arg. In this case, the retrieval and binding level will be different.
// 2 - we are looking up a local ref, which requires restoring the view where the local
// ref is stored
if(this.isListenerScope()&&(retrievalLevel<this.bindingLevel||localRefLookup)){if(!this.parent.restoreViewVariable){// parent saves variable to generate a shared `const $s$ = getCurrentView();` instruction
this.parent.restoreViewVariable=variable(this.parent.freshReferenceName());}this.restoreViewVariable=this.parent.restoreViewVariable;}};BindingScope.prototype.restoreViewStatement=function(){// restoreView($state$);
return this.restoreViewVariable?[instruction(null,Identifiers$1.restoreView,[this.restoreViewVariable]).toStmt()]:[];};BindingScope.prototype.viewSnapshotStatements=function(){// const $state$ = getCurrentView();
var getCurrentViewInstruction=instruction(null,Identifiers$1.getCurrentView,[]);return this.restoreViewVariable?[this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()]:[];};BindingScope.prototype.isListenerScope=function(){return this.parent&&this.parent.bindingLevel===this.bindingLevel;};BindingScope.prototype.variableDeclarations=function(){var _this=this;var currentContextLevel=0;return Array.from(this.map.values()).filter(function(value){return value.declare;}).sort(function(a,b){return b.retrievalLevel-a.retrievalLevel||b.priority-a.priority;}).reduce(function(stmts,value){var levelDiff=_this.bindingLevel-value.retrievalLevel;var currStmts=value.declareLocalCallback(_this,levelDiff-currentContextLevel);currentContextLevel=levelDiff;return stmts.concat(currStmts);},[]);};BindingScope.prototype.freshReferenceName=function(){var current=this;// Find the top scope as it maintains the global reference count
while(current.parent){current=current.parent;}var ref=""+REFERENCE_PREFIX+current.referenceNameIndex++;return ref;};return BindingScope;}();/**
     * Creates a `CssSelector` given a tag name and a map of attributes
     */function createCssSelector(elementName,attributes){var cssSelector=new CssSelector();var elementNameNoNs=splitNsName(elementName)[1];cssSelector.setElement(elementNameNoNs);Object.getOwnPropertyNames(attributes).forEach(function(name){var nameNoNs=splitNsName(name)[1];var value=attributes[name];cssSelector.addAttribute(nameNoNs,value);if(name.toLowerCase()==='class'){var classes=value.trim().split(/\s+/);classes.forEach(function(className){return cssSelector.addClassName(className);});}});return cssSelector;}/**
     * Creates an array of expressions out of an `ngProjectAs` attributes
     * which can be added to the instruction parameters.
     */function getNgProjectAsLiteral(attribute){// Parse the attribute value into a CssSelectorList. Note that we only take the
// first selector, because we don't support multiple selectors in ngProjectAs.
var parsedR3Selector=parseSelectorToR3Selector(attribute.value)[0];return[literal(5/* ProjectAs */),asLiteral(parsedR3Selector)];}/**
     * Gets the instruction to generate for an interpolated property
     * @param interpolation An Interpolation AST
     */function getPropertyInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 1:return Identifiers$1.propertyInterpolate;case 3:return Identifiers$1.propertyInterpolate1;case 5:return Identifiers$1.propertyInterpolate2;case 7:return Identifiers$1.propertyInterpolate3;case 9:return Identifiers$1.propertyInterpolate4;case 11:return Identifiers$1.propertyInterpolate5;case 13:return Identifiers$1.propertyInterpolate6;case 15:return Identifiers$1.propertyInterpolate7;case 17:return Identifiers$1.propertyInterpolate8;default:return Identifiers$1.propertyInterpolateV;}}/**
     * Gets the instruction to generate for an interpolated attribute
     * @param interpolation An Interpolation AST
     */function getAttributeInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 3:return Identifiers$1.attributeInterpolate1;case 5:return Identifiers$1.attributeInterpolate2;case 7:return Identifiers$1.attributeInterpolate3;case 9:return Identifiers$1.attributeInterpolate4;case 11:return Identifiers$1.attributeInterpolate5;case 13:return Identifiers$1.attributeInterpolate6;case 15:return Identifiers$1.attributeInterpolate7;case 17:return Identifiers$1.attributeInterpolate8;default:return Identifiers$1.attributeInterpolateV;}}/**
     * Gets the instruction to generate for interpolated text.
     * @param interpolation An Interpolation AST
     */function getTextInterpolationExpression(interpolation){switch(getInterpolationArgsLength(interpolation)){case 1:return Identifiers$1.textInterpolate;case 3:return Identifiers$1.textInterpolate1;case 5:return Identifiers$1.textInterpolate2;case 7:return Identifiers$1.textInterpolate3;case 9:return Identifiers$1.textInterpolate4;case 11:return Identifiers$1.textInterpolate5;case 13:return Identifiers$1.textInterpolate6;case 15:return Identifiers$1.textInterpolate7;case 17:return Identifiers$1.textInterpolate8;default:return Identifiers$1.textInterpolateV;}}/**
     * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.
     *
     * @param template text of the template to parse
     * @param templateUrl URL to use for source mapping of the parsed template
     * @param options options to modify how the template is parsed
     */function parseTemplate(template,templateUrl,options){if(options===void 0){options={};}var interpolationConfig=options.interpolationConfig,preserveWhitespaces=options.preserveWhitespaces,enableI18nLegacyMessageIdFormat=options.enableI18nLegacyMessageIdFormat;var bindingParser=makeBindingParser(interpolationConfig);var htmlParser=new HtmlParser();var parseResult=htmlParser.parse(template,templateUrl,_assign3(_assign3({leadingTriviaChars:LEADING_TRIVIA_CHARS},options),{tokenizeExpansionForms:true}));if(parseResult.errors&&parseResult.errors.length>0){return{errors:parseResult.errors,nodes:[],styleUrls:[],styles:[],ngContentSelectors:[]};}var rootNodes=parseResult.rootNodes;// process i18n meta information (scan attributes, generate ids)
// before we run whitespace removal process, because existing i18n
// extraction process (ng xi18n) relies on a raw content to generate
// message ids
var i18nMetaVisitor=new I18nMetaVisitor(interpolationConfig,/* keepI18nAttrs */!preserveWhitespaces,enableI18nLegacyMessageIdFormat);rootNodes=visitAll$1(i18nMetaVisitor,rootNodes);if(!preserveWhitespaces){rootNodes=visitAll$1(new WhitespaceVisitor(),rootNodes);// run i18n meta visitor again in case whitespaces are removed (because that might affect
// generated i18n message content) and first pass indicated that i18n content is present in a
// template. During this pass i18n IDs generated at the first pass will be preserved, so we can
// mimic existing extraction process (ng xi18n)
if(i18nMetaVisitor.hasI18nMeta){rootNodes=visitAll$1(new I18nMetaVisitor(interpolationConfig,/* keepI18nAttrs */false),rootNodes);}}var _a=htmlAstToRender3Ast(rootNodes,bindingParser),nodes=_a.nodes,errors=_a.errors,styleUrls=_a.styleUrls,styles=_a.styles,ngContentSelectors=_a.ngContentSelectors;if(errors&&errors.length>0){return{errors:errors,nodes:[],styleUrls:[],styles:[],ngContentSelectors:[]};}return{nodes:nodes,styleUrls:styleUrls,styles:styles,ngContentSelectors:ngContentSelectors};}var elementRegistry=new DomElementSchemaRegistry();/**
     * Construct a `BindingParser` with a default configuration.
     */function makeBindingParser(interpolationConfig){if(interpolationConfig===void 0){interpolationConfig=DEFAULT_INTERPOLATION_CONFIG;}return new BindingParser(new IvyParser(new Lexer()),interpolationConfig,elementRegistry,null,[]);}function resolveSanitizationFn(context,isAttribute){switch(context){case SecurityContext.HTML:return importExpr(Identifiers$1.sanitizeHtml);case SecurityContext.SCRIPT:return importExpr(Identifiers$1.sanitizeScript);case SecurityContext.STYLE:// the compiler does not fill in an instruction for [style.prop?] binding
// values because the style algorithm knows internally what props are subject
// to sanitization (only [attr.style] values are explicitly sanitized)
return isAttribute?importExpr(Identifiers$1.sanitizeStyle):null;case SecurityContext.URL:return importExpr(Identifiers$1.sanitizeUrl);case SecurityContext.RESOURCE_URL:return importExpr(Identifiers$1.sanitizeResourceUrl);default:return null;}}function isSingleElementTemplate(children){return children.length===1&&children[0]instanceof Element;}function isTextNode(node){return node instanceof Text||node instanceof BoundText||node instanceof Icu;}function hasTextChildrenOnly(children){return children.every(isTextNode);}/** Name of the global variable that is used to determine if we use Closure translations or not */var NG_I18N_CLOSURE_MODE='ngI18nClosureMode';/**
     * Generate statements that define a given translation message.
     *
     * ```
     * var I18N_1;
     * if (typeof ngI18nClosureMode !== undefined && ngI18nClosureMode) {
     *     var MSG_EXTERNAL_XXX = goog.getMsg(
     *          "Some message with {$interpolation}!",
     *          { "interpolation": "\uFFFD0\uFFFD" }
     *     );
     *     I18N_1 = MSG_EXTERNAL_XXX;
     * }
     * else {
     *     I18N_1 = $localize`Some message with ${'\uFFFD0\uFFFD'}!`;
     * }
     * ```
     *
     * @param message The original i18n AST message node
     * @param variable The variable that will be assigned the translation, e.g. `I18N_1`.
     * @param closureVar The variable for Closure `goog.getMsg` calls, e.g. `MSG_EXTERNAL_XXX`.
     * @param params Object mapping placeholder names to their values (e.g.
     * `{ "interpolation": "\uFFFD0\uFFFD" }`).
     * @param transformFn Optional transformation function that will be applied to the translation (e.g.
     * post-processing).
     * @returns An array of statements that defined a given translation.
     */function getTranslationDeclStmts(message,variable,closureVar,params,transformFn){if(params===void 0){params={};}var statements=[declareI18nVariable(variable),ifStmt(createClosureModeGuard(),createGoogleGetMsgStatements(variable,message,closureVar,i18nFormatPlaceholderNames(params,/* useCamelCase */true)),createLocalizeStatements(variable,message,i18nFormatPlaceholderNames(params,/* useCamelCase */false)))];if(transformFn){statements.push(new ExpressionStatement(variable.set(transformFn(variable))));}return statements;}/**
     * Create the expression that will be used to guard the closure mode block
     * It is equivalent to:
     *
     * ```
     * typeof ngI18nClosureMode !== undefined && ngI18nClosureMode
     * ```
     */function createClosureModeGuard(){return typeofExpr(variable(NG_I18N_CLOSURE_MODE)).notIdentical(literal('undefined',STRING_TYPE)).and(variable(NG_I18N_CLOSURE_MODE));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var EMPTY_ARRAY=[];// This regex matches any binding names that contain the "attr." prefix, e.g. "attr.required"
// If there is a match, the first matching group will contain the attribute name to bind.
var ATTR_REGEX=/attr\.([^\]]+)/;function baseDirectiveFields(meta,constantPool,bindingParser){var definitionMap=new DefinitionMap();var selectors=parseSelectorToR3Selector(meta.selector);// e.g. `type: MyDirective`
definitionMap.set('type',meta.internalType);// e.g. `selectors: [['', 'someDir', '']]`
if(selectors.length>0){definitionMap.set('selectors',asLiteral(selectors));}if(meta.queries.length>0){// e.g. `contentQueries: (rf, ctx, dirIndex) => { ... }
definitionMap.set('contentQueries',createContentQueriesFunction(meta.queries,constantPool,meta.name));}if(meta.viewQueries.length){definitionMap.set('viewQuery',createViewQueriesFunction(meta.viewQueries,constantPool,meta.name));}// e.g. `hostBindings: (rf, ctx) => { ... }
definitionMap.set('hostBindings',createHostBindingsFunction(meta.host,meta.typeSourceSpan,bindingParser,constantPool,meta.selector||'',meta.name,definitionMap));// e.g 'inputs: {a: 'a'}`
definitionMap.set('inputs',conditionallyCreateMapObjectLiteral(meta.inputs,true));// e.g 'outputs: {a: 'a'}`
definitionMap.set('outputs',conditionallyCreateMapObjectLiteral(meta.outputs));if(meta.exportAs!==null){definitionMap.set('exportAs',literalArr(meta.exportAs.map(function(e){return literal(e);})));}return definitionMap;}/**
     * Add features to the definition map.
     */function addFeatures(definitionMap,meta){// e.g. `features: [NgOnChangesFeature]`
var features=[];var providers=meta.providers;var viewProviders=meta.viewProviders;if(providers||viewProviders){var args=[providers||new LiteralArrayExpr([])];if(viewProviders){args.push(viewProviders);}features.push(importExpr(Identifiers$1.ProvidersFeature).callFn(args));}if(meta.usesInheritance){features.push(importExpr(Identifiers$1.InheritDefinitionFeature));}if(meta.fullInheritance){features.push(importExpr(Identifiers$1.CopyDefinitionFeature));}if(meta.lifecycle.usesOnChanges){features.push(importExpr(Identifiers$1.NgOnChangesFeature));}if(features.length){definitionMap.set('features',literalArr(features));}}/**
     * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.
     */function compileDirectiveFromMetadata(meta,constantPool,bindingParser){var definitionMap=baseDirectiveFields(meta,constantPool,bindingParser);addFeatures(definitionMap,meta);var expression=importExpr(Identifiers$1.defineDirective).callFn([definitionMap.toLiteralMap()]);var typeParams=createDirectiveTypeParams(meta);var type=expressionType(importExpr(Identifiers$1.DirectiveDefWithMeta,typeParams));return{expression:expression,type:type};}/**
     * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.
     */function compileComponentFromMetadata(meta,constantPool,bindingParser){var e_1,_a;var definitionMap=baseDirectiveFields(meta,constantPool,bindingParser);addFeatures(definitionMap,meta);var selector=meta.selector&&CssSelector.parse(meta.selector);var firstSelector=selector&&selector[0];// e.g. `attr: ["class", ".my.app"]`
// This is optional an only included if the first selector of a component specifies attributes.
if(firstSelector){var selectorAttributes=firstSelector.getAttrs();if(selectorAttributes.length){definitionMap.set('attrs',constantPool.getConstLiteral(literalArr(selectorAttributes.map(function(value){return value!=null?literal(value):literal(undefined);})),/* forceShared */true));}}// Generate the CSS matcher that recognize directive
var directiveMatcher=null;if(meta.directives.length>0){var matcher=new SelectorMatcher();try{for(var _b=__values(meta.directives),_c=_b.next();!_c.done;_c=_b.next()){var _d=_c.value,selector_1=_d.selector,expression_1=_d.expression;matcher.addSelectables(CssSelector.parse(selector_1),expression_1);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}directiveMatcher=matcher;}// e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`
var templateTypeName=meta.name;var templateName=templateTypeName?templateTypeName+"_Template":null;var directivesUsed=new Set();var pipesUsed=new Set();var changeDetection=meta.changeDetection;var template=meta.template;var templateBuilder=new TemplateDefinitionBuilder(constantPool,BindingScope.createRootScope(),0,templateTypeName,null,null,templateName,directiveMatcher,directivesUsed,meta.pipes,pipesUsed,Identifiers$1.namespaceHTML,meta.relativeContextFilePath,meta.i18nUseExternalIds);var templateFunctionExpression=templateBuilder.buildTemplateFunction(template.nodes,[]);// We need to provide this so that dynamically generated components know what
// projected content blocks to pass through to the component when it is instantiated.
var ngContentSelectors=templateBuilder.getNgContentSelectors();if(ngContentSelectors){definitionMap.set('ngContentSelectors',ngContentSelectors);}// e.g. `decls: 2`
definitionMap.set('decls',literal(templateBuilder.getConstCount()));// e.g. `vars: 2`
definitionMap.set('vars',literal(templateBuilder.getVarCount()));// e.g. `consts: [['one', 'two'], ['three', 'four']]
var consts=templateBuilder.getConsts();if(consts.length>0){definitionMap.set('consts',literalArr(consts));}definitionMap.set('template',templateFunctionExpression);// e.g. `directives: [MyDirective]`
if(directivesUsed.size){var directivesExpr=literalArr(Array.from(directivesUsed));if(meta.wrapDirectivesAndPipesInClosure){directivesExpr=fn([],[new ReturnStatement(directivesExpr)]);}definitionMap.set('directives',directivesExpr);}// e.g. `pipes: [MyPipe]`
if(pipesUsed.size){var pipesExpr=literalArr(Array.from(pipesUsed));if(meta.wrapDirectivesAndPipesInClosure){pipesExpr=fn([],[new ReturnStatement(pipesExpr)]);}definitionMap.set('pipes',pipesExpr);}if(meta.encapsulation===null){meta.encapsulation=ViewEncapsulation.Emulated;}// e.g. `styles: [str1, str2]`
if(meta.styles&&meta.styles.length){var styleValues=meta.encapsulation==ViewEncapsulation.Emulated?compileStyles(meta.styles,CONTENT_ATTR,HOST_ATTR):meta.styles;var strings=styleValues.map(function(str){return literal(str);});definitionMap.set('styles',literalArr(strings));}else if(meta.encapsulation===ViewEncapsulation.Emulated){// If there is no style, don't generate css selectors on elements
meta.encapsulation=ViewEncapsulation.None;}// Only set view encapsulation if it's not the default value
if(meta.encapsulation!==ViewEncapsulation.Emulated){definitionMap.set('encapsulation',literal(meta.encapsulation));}// e.g. `animation: [trigger('123', [])]`
if(meta.animations!==null){definitionMap.set('data',literalMap([{key:'animation',value:meta.animations,quoted:false}]));}// Only set the change detection flag if it's defined and it's not the default.
if(changeDetection!=null&&changeDetection!==ChangeDetectionStrategy.Default){definitionMap.set('changeDetection',literal(changeDetection));}var expression=importExpr(Identifiers$1.defineComponent).callFn([definitionMap.toLiteralMap()]);var typeParams=createDirectiveTypeParams(meta);typeParams.push(stringArrayAsType(meta.template.ngContentSelectors));var type=expressionType(importExpr(Identifiers$1.ComponentDefWithMeta,typeParams));return{expression:expression,type:type};}/**
     * A wrapper around `compileDirective` which depends on render2 global analysis data as its input
     * instead of the `R3DirectiveMetadata`.
     *
     * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected
     * information.
     */function compileDirectiveFromRender2(outputCtx,directive,reflector,bindingParser){var name=identifierName(directive.type);name||error("Cannot resolver the name of "+directive.type);var definitionField=outputCtx.constantPool.propertyNameOf(1/* Directive */);var meta=directiveMetadataFromGlobalMetadata(directive,outputCtx,reflector);var res=compileDirectiveFromMetadata(meta,outputCtx.constantPool,bindingParser);var factoryRes=compileFactoryFunction(_assign3(_assign3({},meta),{injectFn:Identifiers$1.directiveInject,target:exports.R3FactoryTarget.Directive}));var ngFactoryDefStatement=new ClassStmt(name,null,[new ClassField('ɵfac',INFERRED_TYPE,[exports.StmtModifier.Static],factoryRes.factory)],[],new ClassMethod(null,[],[]),[]);var directiveDefStatement=new ClassStmt(name,null,[new ClassField(definitionField,INFERRED_TYPE,[exports.StmtModifier.Static],res.expression)],[],new ClassMethod(null,[],[]),[]);// Create the partial class to be merged with the actual class.
outputCtx.statements.push(ngFactoryDefStatement,directiveDefStatement);}/**
     * A wrapper around `compileComponent` which depends on render2 global analysis data as its input
     * instead of the `R3DirectiveMetadata`.
     *
     * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected
     * information.
     */function compileComponentFromRender2(outputCtx,component,render3Ast,reflector,bindingParser,directiveTypeBySel,pipeTypeByName){var name=identifierName(component.type);name||error("Cannot resolver the name of "+component.type);var definitionField=outputCtx.constantPool.propertyNameOf(2/* Component */);var summary=component.toSummary();// Compute the R3ComponentMetadata from the CompileDirectiveMetadata
var meta=_assign3(_assign3({},directiveMetadataFromGlobalMetadata(component,outputCtx,reflector)),{selector:component.selector,template:{nodes:render3Ast.nodes,ngContentSelectors:render3Ast.ngContentSelectors},directives:[],pipes:typeMapToExpressionMap(pipeTypeByName,outputCtx),viewQueries:queriesFromGlobalMetadata(component.viewQueries,outputCtx),wrapDirectivesAndPipesInClosure:false,styles:summary.template&&summary.template.styles||EMPTY_ARRAY,encapsulation:summary.template&&summary.template.encapsulation||ViewEncapsulation.Emulated,interpolation:DEFAULT_INTERPOLATION_CONFIG,animations:null,viewProviders:component.viewProviders.length>0?new WrappedNodeExpr(component.viewProviders):null,relativeContextFilePath:'',i18nUseExternalIds:true});var res=compileComponentFromMetadata(meta,outputCtx.constantPool,bindingParser);var factoryRes=compileFactoryFunction(_assign3(_assign3({},meta),{injectFn:Identifiers$1.directiveInject,target:exports.R3FactoryTarget.Directive}));var ngFactoryDefStatement=new ClassStmt(name,null,[new ClassField('ɵfac',INFERRED_TYPE,[exports.StmtModifier.Static],factoryRes.factory)],[],new ClassMethod(null,[],[]),[]);var componentDefStatement=new ClassStmt(name,null,[new ClassField(definitionField,INFERRED_TYPE,[exports.StmtModifier.Static],res.expression)],[],new ClassMethod(null,[],[]),[]);// Create the partial class to be merged with the actual class.
outputCtx.statements.push(ngFactoryDefStatement,componentDefStatement);}/**
     * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.
     */function directiveMetadataFromGlobalMetadata(directive,outputCtx,reflector){// The global-analysis based Ivy mode in ngc is no longer utilized/supported.
throw new Error('unsupported');}/**
     * Convert `CompileQueryMetadata` into `R3QueryMetadata`.
     */function queriesFromGlobalMetadata(queries,outputCtx){return queries.map(function(query){var read=null;if(query.read&&query.read.identifier){read=outputCtx.importExpr(query.read.identifier.reference);}return{propertyName:query.propertyName,first:query.first,predicate:selectorsFromGlobalMetadata(query.selectors,outputCtx),descendants:query.descendants,read:read,"static":!!query["static"]};});}/**
     * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate
     * type, or a list of string predicates.
     */function selectorsFromGlobalMetadata(selectors,outputCtx){if(selectors.length>1||selectors.length==1&&selectors[0].value){var selectorStrings=selectors.map(function(value){return value.value;});selectorStrings.some(function(value){return!value;})&&error('Found a type among the string selectors expected');return outputCtx.constantPool.getConstLiteral(literalArr(selectorStrings.map(function(value){return literal(value);})));}if(selectors.length==1){var first=selectors[0];if(first.identifier){return outputCtx.importExpr(first.identifier.reference);}}error('Unexpected query form');return NULL_EXPR;}function prepareQueryParams(query,constantPool){var parameters=[getQueryPredicate(query,constantPool),literal(query.descendants)];if(query.read){parameters.push(query.read);}return parameters;}function convertAttributesToExpressions(attributes){var e_2,_a;var values=[];try{for(var _b=__values(Object.getOwnPropertyNames(attributes)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var value=attributes[key];values.push(literal(key),value);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_2)throw e_2.error;}}return values;}// Define and update any content queries
function createContentQueriesFunction(queries,constantPool,name){var e_3,_a;var createStatements=[];var updateStatements=[];var tempAllocator=temporaryAllocator(updateStatements,TEMPORARY_NAME);try{for(var queries_1=__values(queries),queries_1_1=queries_1.next();!queries_1_1.done;queries_1_1=queries_1.next()){var query=queries_1_1.value;var queryInstruction=query["static"]?Identifiers$1.staticContentQuery:Identifiers$1.contentQuery;// creation, e.g. r3.contentQuery(dirIndex, somePredicate, true, null);
createStatements.push(importExpr(queryInstruction).callFn(__spread([variable('dirIndex')],prepareQueryParams(query,constantPool))).toStmt());// update, e.g. (r3.queryRefresh(tmp = r3.loadQuery()) && (ctx.someDir = tmp));
var temporary=tempAllocator();var getQueryList=importExpr(Identifiers$1.loadQuery).callFn([]);var refresh=importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);var updateDirective=variable(CONTEXT_NAME).prop(query.propertyName).set(query.first?temporary.prop('first'):temporary);updateStatements.push(refresh.and(updateDirective).toStmt());}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(queries_1_1&&!queries_1_1.done&&(_a=queries_1["return"]))_a.call(queries_1);}finally{if(e_3)throw e_3.error;}}var contentQueriesFnName=name?name+"_ContentQueries":null;return fn([new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null),new FnParam('dirIndex',null)],[renderFlagCheckIfStmt(1/* Create */,createStatements),renderFlagCheckIfStmt(2/* Update */,updateStatements)],INFERRED_TYPE,null,contentQueriesFnName);}function stringAsType(str){return expressionType(literal(str));}function stringMapAsType(map){var mapValues=Object.keys(map).map(function(key){var value=Array.isArray(map[key])?map[key][0]:map[key];return{key:key,value:literal(value),quoted:true};});return expressionType(literalMap(mapValues));}function stringArrayAsType(arr){return arr.length>0?expressionType(literalArr(arr.map(function(value){return literal(value);}))):NONE_TYPE;}function createDirectiveTypeParams(meta){// On the type side, remove newlines from the selector as it will need to fit into a TypeScript
// string literal, which must be on one line.
var selectorForType=meta.selector!==null?meta.selector.replace(/\n/g,''):null;return[typeWithParameters(meta.type.type,meta.typeArgumentCount),selectorForType!==null?stringAsType(selectorForType):NONE_TYPE,meta.exportAs!==null?stringArrayAsType(meta.exportAs):NONE_TYPE,stringMapAsType(meta.inputs),stringMapAsType(meta.outputs),stringArrayAsType(meta.queries.map(function(q){return q.propertyName;}))];}// Define and update any view queries
function createViewQueriesFunction(viewQueries,constantPool,name){var createStatements=[];var updateStatements=[];var tempAllocator=temporaryAllocator(updateStatements,TEMPORARY_NAME);viewQueries.forEach(function(query){var queryInstruction=query["static"]?Identifiers$1.staticViewQuery:Identifiers$1.viewQuery;// creation, e.g. r3.viewQuery(somePredicate, true);
var queryDefinition=importExpr(queryInstruction).callFn(prepareQueryParams(query,constantPool));createStatements.push(queryDefinition.toStmt());// update, e.g. (r3.queryRefresh(tmp = r3.loadQuery()) && (ctx.someDir = tmp));
var temporary=tempAllocator();var getQueryList=importExpr(Identifiers$1.loadQuery).callFn([]);var refresh=importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);var updateDirective=variable(CONTEXT_NAME).prop(query.propertyName).set(query.first?temporary.prop('first'):temporary);updateStatements.push(refresh.and(updateDirective).toStmt());});var viewQueryFnName=name?name+"_Query":null;return fn([new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null)],[renderFlagCheckIfStmt(1/* Create */,createStatements),renderFlagCheckIfStmt(2/* Update */,updateStatements)],INFERRED_TYPE,null,viewQueryFnName);}// Return a host binding function or null if one is not necessary.
function createHostBindingsFunction(hostBindingsMetadata,typeSourceSpan,bindingParser,constantPool,selector,name,definitionMap){var bindingContext=variable(CONTEXT_NAME);var styleBuilder=new StylingBuilder(bindingContext);var _a=hostBindingsMetadata.specialAttributes,styleAttr=_a.styleAttr,classAttr=_a.classAttr;if(styleAttr!==undefined){styleBuilder.registerStyleAttr(styleAttr);}if(classAttr!==undefined){styleBuilder.registerClassAttr(classAttr);}var createStatements=[];var updateStatements=[];var hostBindingSourceSpan=typeSourceSpan;var directiveSummary=metadataAsSummary(hostBindingsMetadata);// Calculate host event bindings
var eventBindings=bindingParser.createDirectiveHostEventAsts(directiveSummary,hostBindingSourceSpan);if(eventBindings&&eventBindings.length){var listeners=createHostListeners(eventBindings,name);createStatements.push.apply(createStatements,__spread(listeners));}// Calculate the host property bindings
var bindings=bindingParser.createBoundHostProperties(directiveSummary,hostBindingSourceSpan);var allOtherBindings=[];// We need to calculate the total amount of binding slots required by
// all the instructions together before any value conversions happen.
// Value conversions may require additional slots for interpolation and
// bindings with pipes. These calculates happen after this block.
var totalHostVarsCount=0;bindings&&bindings.forEach(function(binding){var name=binding.name;var stylingInputWasSet=styleBuilder.registerInputBasedOnName(name,binding.expression,binding.sourceSpan);if(stylingInputWasSet){totalHostVarsCount+=MIN_STYLING_BINDING_SLOTS_REQUIRED;}else{allOtherBindings.push(binding);totalHostVarsCount++;}});var valueConverter;var getValueConverter=function getValueConverter(){if(!valueConverter){var hostVarsCountFn=function hostVarsCountFn(numSlots){var originalVarsCount=totalHostVarsCount;totalHostVarsCount+=numSlots;return originalVarsCount;};valueConverter=new ValueConverter(constantPool,function(){return error('Unexpected node');},// new nodes are illegal here
hostVarsCountFn,function(){return error('Unexpected pipe');});// pipes are illegal here
}return valueConverter;};var propertyBindings=[];var attributeBindings=[];var syntheticHostBindings=[];allOtherBindings.forEach(function(binding){// resolve literal arrays and literal objects
var value=binding.expression.visit(getValueConverter());var bindingExpr=bindingFn(bindingContext,value);var _a=getBindingNameAndInstruction(binding),bindingName=_a.bindingName,instruction=_a.instruction,isAttribute=_a.isAttribute;var securityContexts=bindingParser.calcPossibleSecurityContexts(selector,bindingName,isAttribute).filter(function(context){return context!==SecurityContext.NONE;});var sanitizerFn=null;if(securityContexts.length){if(securityContexts.length===2&&securityContexts.indexOf(SecurityContext.URL)>-1&&securityContexts.indexOf(SecurityContext.RESOURCE_URL)>-1){// Special case for some URL attributes (such as "src" and "href") that may be a part
// of different security contexts. In this case we use special santitization function and
// select the actual sanitizer at runtime based on a tag name that is provided while
// invoking sanitization function.
sanitizerFn=importExpr(Identifiers$1.sanitizeUrlOrResourceUrl);}else{sanitizerFn=resolveSanitizationFn(securityContexts[0],isAttribute);}}var instructionParams=[literal(bindingName),bindingExpr.currValExpr];if(sanitizerFn){instructionParams.push(sanitizerFn);}updateStatements.push.apply(updateStatements,__spread(bindingExpr.stmts));if(instruction===Identifiers$1.hostProperty){propertyBindings.push(instructionParams);}else if(instruction===Identifiers$1.attribute){attributeBindings.push(instructionParams);}else if(instruction===Identifiers$1.updateSyntheticHostBinding){syntheticHostBindings.push(instructionParams);}else{updateStatements.push(importExpr(instruction).callFn(instructionParams).toStmt());}});if(propertyBindings.length>0){updateStatements.push(chainedInstruction(Identifiers$1.hostProperty,propertyBindings).toStmt());}if(attributeBindings.length>0){updateStatements.push(chainedInstruction(Identifiers$1.attribute,attributeBindings).toStmt());}if(syntheticHostBindings.length>0){updateStatements.push(chainedInstruction(Identifiers$1.updateSyntheticHostBinding,syntheticHostBindings).toStmt());}// since we're dealing with directives/components and both have hostBinding
// functions, we need to generate a special hostAttrs instruction that deals
// with both the assignment of styling as well as static attributes to the host
// element. The instruction below will instruct all initial styling (styling
// that is inside of a host binding within a directive/component) to be attached
// to the host element alongside any of the provided host attributes that were
// collected earlier.
var hostAttrs=convertAttributesToExpressions(hostBindingsMetadata.attributes);styleBuilder.assignHostAttrs(hostAttrs,definitionMap);if(styleBuilder.hasBindings){// finally each binding that was registered in the statement above will need to be added to
// the update block of a component/directive templateFn/hostBindingsFn so that the bindings
// are evaluated and updated for the element.
styleBuilder.buildUpdateLevelInstructions(getValueConverter()).forEach(function(instruction){if(instruction.calls.length>0){var calls_1=[];instruction.calls.forEach(function(call){// we subtract a value of `1` here because the binding slot was already allocated
// at the top of this method when all the input bindings were counted.
totalHostVarsCount+=Math.max(call.allocateBindingSlots-MIN_STYLING_BINDING_SLOTS_REQUIRED,0);calls_1.push(convertStylingCall(call,bindingContext,bindingFn));});updateStatements.push(chainedInstruction(instruction.reference,calls_1).toStmt());}});}if(totalHostVarsCount){definitionMap.set('hostVars',literal(totalHostVarsCount));}if(createStatements.length>0||updateStatements.length>0){var hostBindingsFnName=name?name+"_HostBindings":null;var statements=[];if(createStatements.length>0){statements.push(renderFlagCheckIfStmt(1/* Create */,createStatements));}if(updateStatements.length>0){statements.push(renderFlagCheckIfStmt(2/* Update */,updateStatements));}return fn([new FnParam(RENDER_FLAGS,NUMBER_TYPE),new FnParam(CONTEXT_NAME,null)],statements,INFERRED_TYPE,null,hostBindingsFnName);}return null;}function bindingFn(implicit,value){return convertPropertyBinding(null,implicit,value,'b',BindingForm.TrySimple,function(){return error('Unexpected interpolation');});}function convertStylingCall(call,bindingContext,bindingFn){return call.params(function(value){return bindingFn(bindingContext,value).currValExpr;});}function getBindingNameAndInstruction(binding){var bindingName=binding.name;var instruction;// Check to see if this is an attr binding or a property binding
var attrMatches=bindingName.match(ATTR_REGEX);if(attrMatches){bindingName=attrMatches[1];instruction=Identifiers$1.attribute;}else{if(binding.isAnimation){bindingName=prepareSyntheticPropertyName(bindingName);// host bindings that have a synthetic property (e.g. @foo) should always be rendered
// in the context of the component and not the parent. Therefore there is a special
// compatibility instruction available for this purpose.
instruction=Identifiers$1.updateSyntheticHostBinding;}else{instruction=Identifiers$1.hostProperty;}}return{bindingName:bindingName,instruction:instruction,isAttribute:!!attrMatches};}function createHostListeners(eventBindings,name){var listeners=[];var syntheticListeners=[];var instructions=[];eventBindings.forEach(function(binding){var bindingName=binding.name&&sanitizeIdentifier(binding.name);var bindingFnName=binding.type===1/* Animation */?prepareSyntheticListenerFunctionName(bindingName,binding.targetOrPhase):bindingName;var handlerName=name&&bindingName?name+"_"+bindingFnName+"_HostBindingHandler":null;var params=prepareEventListenerParameters(BoundEvent.fromParsedEvent(binding),handlerName);if(binding.type==1/* Animation */){syntheticListeners.push(params);}else{listeners.push(params);}});if(syntheticListeners.length>0){instructions.push(chainedInstruction(Identifiers$1.componentHostSyntheticListener,syntheticListeners).toStmt());}if(listeners.length>0){instructions.push(chainedInstruction(Identifiers$1.listener,listeners).toStmt());}return instructions;}function metadataAsSummary(meta){// clang-format off
return{// This is used by the BindingParser, which only deals with listeners and properties. There's no
// need to pass attributes to it.
hostAttributes:{},hostListeners:meta.listeners,hostProperties:meta.properties};// clang-format on
}function typeMapToExpressionMap(map,outputCtx){// Convert each map entry into another entry where the value is an expression importing the type.
var entries=Array.from(map).map(function(_a){var _b=__read(_a,2),key=_b[0],type=_b[1];return[key,outputCtx.importExpr(type)];});return new Map(entries);}var HOST_REG_EXP$1=/^(?:\[([^\]]+)\])|(?:\(([^\)]+)\))$/;function parseHostBindings(host){var e_4,_a;var attributes={};var listeners={};var properties={};var specialAttributes={};try{for(var _b=__values(Object.keys(host)),_c=_b.next();!_c.done;_c=_b.next()){var key=_c.value;var value=host[key];var matches=key.match(HOST_REG_EXP$1);if(matches===null){switch(key){case'class':if(typeof value!=='string'){// TODO(alxhub): make this a diagnostic.
throw new Error("Class binding must be string");}specialAttributes.classAttr=value;break;case'style':if(typeof value!=='string'){// TODO(alxhub): make this a diagnostic.
throw new Error("Style binding must be string");}specialAttributes.styleAttr=value;break;default:if(typeof value==='string'){attributes[key]=literal(value);}else{attributes[key]=value;}}}else if(matches[1/* Binding */]!=null){if(typeof value!=='string'){// TODO(alxhub): make this a diagnostic.
throw new Error("Property binding must be string");}// synthetic properties (the ones that have a `@` as a prefix)
// are still treated the same as regular properties. Therefore
// there is no point in storing them in a separate map.
properties[matches[1/* Binding */]]=value;}else if(matches[2/* Event */]!=null){if(typeof value!=='string'){// TODO(alxhub): make this a diagnostic.
throw new Error("Event binding must be string");}listeners[matches[2/* Event */]]=value;}}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_4)throw e_4.error;}}return{attributes:attributes,listeners:listeners,properties:properties,specialAttributes:specialAttributes};}/**
     * Verifies host bindings and returns the list of errors (if any). Empty array indicates that a
     * given set of host bindings has no errors.
     *
     * @param bindings set of host bindings to verify.
     * @param sourceSpan source span where host bindings were defined.
     * @returns array of errors associated with a given set of host bindings.
     */function verifyHostBindings(bindings,sourceSpan){var summary=metadataAsSummary(bindings);// TODO: abstract out host bindings verification logic and use it instead of
// creating events and properties ASTs to detect errors (FW-996)
var bindingParser=makeBindingParser();bindingParser.createDirectiveHostEventAsts(summary,sourceSpan);bindingParser.createBoundHostProperties(summary,sourceSpan);return bindingParser.errors;}function compileStyles(styles,selector,hostSelector){var shadowCss=new ShadowCss();return styles.map(function(style){return shadowCss.shimCssText(style,selector,hostSelector);});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An interface for retrieving documents by URL that the compiler uses
     * to load templates.
     */var ResourceLoader=/** @class */function(){function ResourceLoader(){}ResourceLoader.prototype.get=function(url){return'';};return ResourceLoader;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CompilerFacadeImpl=/** @class */function(){function CompilerFacadeImpl(jitEvaluator){if(jitEvaluator===void 0){jitEvaluator=new JitEvaluator();}this.jitEvaluator=jitEvaluator;this.R3ResolvedDependencyType=exports.R3ResolvedDependencyType;this.R3FactoryTarget=exports.R3FactoryTarget;this.ResourceLoader=ResourceLoader;this.elementSchemaRegistry=new DomElementSchemaRegistry();}CompilerFacadeImpl.prototype.compilePipe=function(angularCoreEnv,sourceMapUrl,facade){var metadata={name:facade.name,type:wrapReference$1(facade.type),internalType:new WrappedNodeExpr(facade.type),typeArgumentCount:facade.typeArgumentCount,deps:convertR3DependencyMetadataArray(facade.deps),pipeName:facade.pipeName,pure:facade.pure};var res=compilePipeFromMetadata(metadata);return this.jitExpression(res.expression,angularCoreEnv,sourceMapUrl,[]);};CompilerFacadeImpl.prototype.compileInjectable=function(angularCoreEnv,sourceMapUrl,facade){var _a=compileInjectable({name:facade.name,type:wrapReference$1(facade.type),internalType:new WrappedNodeExpr(facade.type),typeArgumentCount:facade.typeArgumentCount,providedIn:computeProvidedIn(facade.providedIn),useClass:wrapExpression(facade,USE_CLASS),useFactory:wrapExpression(facade,USE_FACTORY),useValue:wrapExpression(facade,USE_VALUE),useExisting:wrapExpression(facade,USE_EXISTING),userDeps:convertR3DependencyMetadataArray(facade.userDeps)||undefined}),expression=_a.expression,statements=_a.statements;return this.jitExpression(expression,angularCoreEnv,sourceMapUrl,statements);};CompilerFacadeImpl.prototype.compileInjector=function(angularCoreEnv,sourceMapUrl,facade){var meta={name:facade.name,type:wrapReference$1(facade.type),internalType:new WrappedNodeExpr(facade.type),deps:convertR3DependencyMetadataArray(facade.deps),providers:new WrappedNodeExpr(facade.providers),imports:facade.imports.map(function(i){return new WrappedNodeExpr(i);})};var res=compileInjector(meta);return this.jitExpression(res.expression,angularCoreEnv,sourceMapUrl,res.statements);};CompilerFacadeImpl.prototype.compileNgModule=function(angularCoreEnv,sourceMapUrl,facade){var meta={type:wrapReference$1(facade.type),internalType:new WrappedNodeExpr(facade.type),adjacentType:new WrappedNodeExpr(facade.type),bootstrap:facade.bootstrap.map(wrapReference$1),declarations:facade.declarations.map(wrapReference$1),imports:facade.imports.map(wrapReference$1),exports:facade.exports.map(wrapReference$1),emitInline:true,containsForwardDecls:false,schemas:facade.schemas?facade.schemas.map(wrapReference$1):null,id:facade.id?new WrappedNodeExpr(facade.id):null};var res=compileNgModule(meta);return this.jitExpression(res.expression,angularCoreEnv,sourceMapUrl,[]);};CompilerFacadeImpl.prototype.compileDirective=function(angularCoreEnv,sourceMapUrl,facade){var constantPool=new ConstantPool();var bindingParser=makeBindingParser();var meta=convertDirectiveFacadeToMetadata(facade);var res=compileDirectiveFromMetadata(meta,constantPool,bindingParser);return this.jitExpression(res.expression,angularCoreEnv,sourceMapUrl,constantPool.statements);};CompilerFacadeImpl.prototype.compileComponent=function(angularCoreEnv,sourceMapUrl,facade){// The ConstantPool is a requirement of the JIT'er.
var constantPool=new ConstantPool();var interpolationConfig=facade.interpolation?InterpolationConfig.fromArray(facade.interpolation):DEFAULT_INTERPOLATION_CONFIG;// Parse the template and check for errors.
var template=parseTemplate(facade.template,sourceMapUrl,{preserveWhitespaces:facade.preserveWhitespaces,interpolationConfig:interpolationConfig});if(template.errors!==undefined){var errors=template.errors.map(function(err){return err.toString();}).join(', ');throw new Error("Errors during JIT compilation of template for "+facade.name+": "+errors);}// Compile the component metadata, including template, into an expression.
// TODO(alxhub): implement inputs, outputs, queries, etc.
var metadata=_assign3(_assign3(_assign3({},facade),convertDirectiveFacadeToMetadata(facade)),{selector:facade.selector||this.elementSchemaRegistry.getDefaultComponentElementName(),template:template,wrapDirectivesAndPipesInClosure:false,styles:__spread(facade.styles,template.styles),encapsulation:facade.encapsulation,interpolation:interpolationConfig,changeDetection:facade.changeDetection,animations:facade.animations!=null?new WrappedNodeExpr(facade.animations):null,viewProviders:facade.viewProviders!=null?new WrappedNodeExpr(facade.viewProviders):null,relativeContextFilePath:'',i18nUseExternalIds:true});var res=compileComponentFromMetadata(metadata,constantPool,makeBindingParser(interpolationConfig));var jitExpressionSourceMap="ng:///"+facade.name+".js";return this.jitExpression(res.expression,angularCoreEnv,jitExpressionSourceMap,constantPool.statements);};CompilerFacadeImpl.prototype.compileFactory=function(angularCoreEnv,sourceMapUrl,meta){var factoryRes=compileFactoryFunction({name:meta.name,type:wrapReference$1(meta.type),internalType:new WrappedNodeExpr(meta.type),typeArgumentCount:meta.typeArgumentCount,deps:convertR3DependencyMetadataArray(meta.deps),injectFn:meta.injectFn==='directiveInject'?Identifiers.directiveInject:Identifiers.inject,target:meta.target});return this.jitExpression(factoryRes.factory,angularCoreEnv,sourceMapUrl,factoryRes.statements);};CompilerFacadeImpl.prototype.createParseSourceSpan=function(kind,typeName,sourceUrl){return r3JitTypeSourceSpan(kind,typeName,sourceUrl);};/**
         * JIT compiles an expression and returns the result of executing that expression.
         *
         * @param def the definition which will be compiled and executed to get the value to patch
         * @param context an object map of @angular/core symbol names to symbols which will be available
         * in the context of the compiled expression
         * @param sourceUrl a URL to use for the source map of the compiled expression
         * @param preStatements a collection of statements that should be evaluated before the expression.
         */CompilerFacadeImpl.prototype.jitExpression=function(def,context,sourceUrl,preStatements){// The ConstantPool may contain Statements which declare variables used in the final expression.
// Therefore, its statements need to precede the actual JIT operation. The final statement is a
// declaration of $def which is set to the expression being compiled.
var statements=__spread(preStatements,[new DeclareVarStmt('$def',def,undefined,[exports.StmtModifier.Exported])]);var res=this.jitEvaluator.evaluateStatements(sourceUrl,statements,new R3JitReflector(context),/* enableSourceMaps */true);return res['$def'];};return CompilerFacadeImpl;}();var USE_CLASS=Object.keys({useClass:null})[0];var USE_FACTORY=Object.keys({useFactory:null})[0];var USE_VALUE=Object.keys({useValue:null})[0];var USE_EXISTING=Object.keys({useExisting:null})[0];var wrapReference$1=function wrapReference$1(value){var wrapped=new WrappedNodeExpr(value);return{value:wrapped,type:wrapped};};function convertToR3QueryMetadata(facade){return _assign3(_assign3({},facade),{predicate:Array.isArray(facade.predicate)?facade.predicate:new WrappedNodeExpr(facade.predicate),read:facade.read?new WrappedNodeExpr(facade.read):null,"static":facade["static"]});}function convertDirectiveFacadeToMetadata(facade){var inputsFromMetadata=parseInputOutputs(facade.inputs||[]);var outputsFromMetadata=parseInputOutputs(facade.outputs||[]);var propMetadata=facade.propMetadata;var inputsFromType={};var outputsFromType={};var _loop_1=function _loop_1(field){if(propMetadata.hasOwnProperty(field)){propMetadata[field].forEach(function(ann){if(isInput(ann)){inputsFromType[field]=ann.bindingPropertyName?[ann.bindingPropertyName,field]:field;}else if(isOutput(ann)){outputsFromType[field]=ann.bindingPropertyName||field;}});}};for(var field in propMetadata){_loop_1(field);}return _assign3(_assign3({},facade),{typeSourceSpan:facade.typeSourceSpan,type:wrapReference$1(facade.type),internalType:new WrappedNodeExpr(facade.type),deps:convertR3DependencyMetadataArray(facade.deps),host:extractHostBindings(facade.propMetadata,facade.typeSourceSpan,facade.host),inputs:_assign3(_assign3({},inputsFromMetadata),inputsFromType),outputs:_assign3(_assign3({},outputsFromMetadata),outputsFromType),queries:facade.queries.map(convertToR3QueryMetadata),providers:facade.providers!=null?new WrappedNodeExpr(facade.providers):null,viewQueries:facade.viewQueries.map(convertToR3QueryMetadata),fullInheritance:false});}function wrapExpression(obj,property){if(obj.hasOwnProperty(property)){return new WrappedNodeExpr(obj[property]);}else{return undefined;}}function computeProvidedIn(providedIn){if(providedIn==null||typeof providedIn==='string'){return new LiteralExpr(providedIn);}else{return new WrappedNodeExpr(providedIn);}}function convertR3DependencyMetadata(facade){var tokenExpr;if(facade.token===null){tokenExpr=new LiteralExpr(null);}else if(facade.resolved===exports.R3ResolvedDependencyType.Attribute){tokenExpr=new LiteralExpr(facade.token);}else{tokenExpr=new WrappedNodeExpr(facade.token);}return{token:tokenExpr,attribute:null,resolved:facade.resolved,host:facade.host,optional:facade.optional,self:facade.self,skipSelf:facade.skipSelf};}function convertR3DependencyMetadataArray(facades){return facades==null?null:facades.map(convertR3DependencyMetadata);}function extractHostBindings(propMetadata,sourceSpan,host){// First parse the declarations from the metadata.
var bindings=parseHostBindings(host||{});// After that check host bindings for errors
var errors=verifyHostBindings(bindings,sourceSpan);if(errors.length){throw new Error(errors.map(function(error){return error.msg;}).join('\n'));}var _loop_2=function _loop_2(field){if(propMetadata.hasOwnProperty(field)){propMetadata[field].forEach(function(ann){if(isHostBinding(ann)){bindings.properties[ann.hostPropertyName||field]=field;}else if(isHostListener(ann)){bindings.listeners[ann.eventName||field]=field+"("+(ann.args||[]).join(',')+")";}});}};// Next, loop over the properties of the object, looking for @HostBinding and @HostListener.
for(var field in propMetadata){_loop_2(field);}return bindings;}function isHostBinding(value){return value.ngMetadataName==='HostBinding';}function isHostListener(value){return value.ngMetadataName==='HostListener';}function isInput(value){return value.ngMetadataName==='Input';}function isOutput(value){return value.ngMetadataName==='Output';}function parseInputOutputs(values){return values.reduce(function(map,value){var _a=__read(value.split(',').map(function(piece){return piece.trim();}),2),field=_a[0],property=_a[1];map[field]=property||field;return map;},{});}function publishFacade(global){var ng=global.ng||(global.ng={});ng.ɵcompilerFacade=new CompilerFacadeImpl();}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var VERSION$1=new Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CompilerConfig=/** @class */function(){function CompilerConfig(_a){var _b=_a===void 0?{}:_a,_c=_b.defaultEncapsulation,defaultEncapsulation=_c===void 0?ViewEncapsulation.Emulated:_c,_d=_b.useJit,useJit=_d===void 0?true:_d,_e=_b.jitDevMode,jitDevMode=_e===void 0?false:_e,_f=_b.missingTranslation,missingTranslation=_f===void 0?null:_f,preserveWhitespaces=_b.preserveWhitespaces,strictInjectionParameters=_b.strictInjectionParameters;this.defaultEncapsulation=defaultEncapsulation;this.useJit=!!useJit;this.jitDevMode=!!jitDevMode;this.missingTranslation=missingTranslation;this.preserveWhitespaces=preserveWhitespacesDefault(noUndefined(preserveWhitespaces));this.strictInjectionParameters=strictInjectionParameters===true;}return CompilerConfig;}();function preserveWhitespacesDefault(preserveWhitespacesOption,defaultSetting){if(defaultSetting===void 0){defaultSetting=false;}return preserveWhitespacesOption===null?defaultSetting:preserveWhitespacesOption;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var DirectiveNormalizer=/** @class */function(){function DirectiveNormalizer(_resourceLoader,_urlResolver,_htmlParser,_config){this._resourceLoader=_resourceLoader;this._urlResolver=_urlResolver;this._htmlParser=_htmlParser;this._config=_config;this._resourceLoaderCache=new Map();}DirectiveNormalizer.prototype.clearCache=function(){this._resourceLoaderCache.clear();};DirectiveNormalizer.prototype.clearCacheFor=function(normalizedDirective){var _this=this;if(!normalizedDirective.isComponent){return;}var template=normalizedDirective.template;this._resourceLoaderCache["delete"](template.templateUrl);template.externalStylesheets.forEach(function(stylesheet){_this._resourceLoaderCache["delete"](stylesheet.moduleUrl);});};DirectiveNormalizer.prototype._fetch=function(url){var result=this._resourceLoaderCache.get(url);if(!result){result=this._resourceLoader.get(url);this._resourceLoaderCache.set(url,result);}return result;};DirectiveNormalizer.prototype.normalizeTemplate=function(prenormData){var _this=this;if(isDefined(prenormData.template)){if(isDefined(prenormData.templateUrl)){throw syntaxError("'"+stringify(prenormData.componentType)+"' component cannot define both template and templateUrl");}if(typeof prenormData.template!=='string'){throw syntaxError("The template specified for component "+stringify(prenormData.componentType)+" is not a string");}}else if(isDefined(prenormData.templateUrl)){if(typeof prenormData.templateUrl!=='string'){throw syntaxError("The templateUrl specified for component "+stringify(prenormData.componentType)+" is not a string");}}else{throw syntaxError("No template specified for component "+stringify(prenormData.componentType));}if(isDefined(prenormData.preserveWhitespaces)&&typeof prenormData.preserveWhitespaces!=='boolean'){throw syntaxError("The preserveWhitespaces option for component "+stringify(prenormData.componentType)+" must be a boolean");}return SyncAsync.then(this._preParseTemplate(prenormData),function(preparsedTemplate){return _this._normalizeTemplateMetadata(prenormData,preparsedTemplate);});};DirectiveNormalizer.prototype._preParseTemplate=function(prenomData){var _this=this;var template;var templateUrl;if(prenomData.template!=null){template=prenomData.template;templateUrl=prenomData.moduleUrl;}else{templateUrl=this._urlResolver.resolve(prenomData.moduleUrl,prenomData.templateUrl);template=this._fetch(templateUrl);}return SyncAsync.then(template,function(template){return _this._preparseLoadedTemplate(prenomData,template,templateUrl);});};DirectiveNormalizer.prototype._preparseLoadedTemplate=function(prenormData,template,templateAbsUrl){var isInline=!!prenormData.template;var interpolationConfig=InterpolationConfig.fromArray(prenormData.interpolation);var templateUrl=templateSourceUrl({reference:prenormData.ngModuleType},{type:{reference:prenormData.componentType}},{isInline:isInline,templateUrl:templateAbsUrl});var rootNodesAndErrors=this._htmlParser.parse(template,templateUrl,{tokenizeExpansionForms:true,interpolationConfig:interpolationConfig});if(rootNodesAndErrors.errors.length>0){var errorString=rootNodesAndErrors.errors.join('\n');throw syntaxError("Template parse errors:\n"+errorString);}var templateMetadataStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:prenormData.styles,moduleUrl:prenormData.moduleUrl}));var visitor=new TemplatePreparseVisitor();visitAll$1(visitor,rootNodesAndErrors.rootNodes);var templateStyles=this._normalizeStylesheet(new CompileStylesheetMetadata({styles:visitor.styles,styleUrls:visitor.styleUrls,moduleUrl:templateAbsUrl}));var styles=templateMetadataStyles.styles.concat(templateStyles.styles);var inlineStyleUrls=templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);var styleUrls=this._normalizeStylesheet(new CompileStylesheetMetadata({styleUrls:prenormData.styleUrls,moduleUrl:prenormData.moduleUrl})).styleUrls;return{template:template,templateUrl:templateAbsUrl,isInline:isInline,htmlAst:rootNodesAndErrors,styles:styles,inlineStyleUrls:inlineStyleUrls,styleUrls:styleUrls,ngContentSelectors:visitor.ngContentSelectors};};DirectiveNormalizer.prototype._normalizeTemplateMetadata=function(prenormData,preparsedTemplate){var _this=this;return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)),function(externalStylesheets){return _this._normalizeLoadedTemplateMetadata(prenormData,preparsedTemplate,externalStylesheets);});};DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata=function(prenormData,preparsedTemplate,stylesheets){// Algorithm:
// - produce exactly 1 entry per original styleUrl in
// CompileTemplateMetadata.externalStylesheets with all styles inlined
// - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.
// Reason: be able to determine how many stylesheets there are even without loading
// the template nor the stylesheets, so we can create a stub for TypeScript always synchronously
// (as resource loading may be async)
var _this=this;var styles=__spread(preparsedTemplate.styles);this._inlineStyles(preparsedTemplate.inlineStyleUrls,stylesheets,styles);var styleUrls=preparsedTemplate.styleUrls;var externalStylesheets=styleUrls.map(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);var styles=__spread(stylesheet.styles);_this._inlineStyles(stylesheet.styleUrls,stylesheets,styles);return new CompileStylesheetMetadata({moduleUrl:styleUrl,styles:styles});});var encapsulation=prenormData.encapsulation;if(encapsulation==null){encapsulation=this._config.defaultEncapsulation;}if(encapsulation===ViewEncapsulation.Emulated&&styles.length===0&&styleUrls.length===0){encapsulation=ViewEncapsulation.None;}return new CompileTemplateMetadata({encapsulation:encapsulation,template:preparsedTemplate.template,templateUrl:preparsedTemplate.templateUrl,htmlAst:preparsedTemplate.htmlAst,styles:styles,styleUrls:styleUrls,ngContentSelectors:preparsedTemplate.ngContentSelectors,animations:prenormData.animations,interpolation:prenormData.interpolation,isInline:preparsedTemplate.isInline,externalStylesheets:externalStylesheets,preserveWhitespaces:preserveWhitespacesDefault(prenormData.preserveWhitespaces,this._config.preserveWhitespaces)});};DirectiveNormalizer.prototype._inlineStyles=function(styleUrls,stylesheets,targetStyles){var _this=this;styleUrls.forEach(function(styleUrl){var stylesheet=stylesheets.get(styleUrl);stylesheet.styles.forEach(function(style){return targetStyles.push(style);});_this._inlineStyles(stylesheet.styleUrls,stylesheets,targetStyles);});};DirectiveNormalizer.prototype._loadMissingExternalStylesheets=function(styleUrls,loadedStylesheets){var _this=this;if(loadedStylesheets===void 0){loadedStylesheets=new Map();}return SyncAsync.then(SyncAsync.all(styleUrls.filter(function(styleUrl){return!loadedStylesheets.has(styleUrl);}).map(function(styleUrl){return SyncAsync.then(_this._fetch(styleUrl),function(loadedStyle){var stylesheet=_this._normalizeStylesheet(new CompileStylesheetMetadata({styles:[loadedStyle],moduleUrl:styleUrl}));loadedStylesheets.set(styleUrl,stylesheet);return _this._loadMissingExternalStylesheets(stylesheet.styleUrls,loadedStylesheets);});})),function(_){return loadedStylesheets;});};DirectiveNormalizer.prototype._normalizeStylesheet=function(stylesheet){var _this=this;var moduleUrl=stylesheet.moduleUrl;var allStyleUrls=stylesheet.styleUrls.filter(isStyleUrlResolvable).map(function(url){return _this._urlResolver.resolve(moduleUrl,url);});var allStyles=stylesheet.styles.map(function(style){var styleWithImports=extractStyleUrls(_this._urlResolver,moduleUrl,style);allStyleUrls.push.apply(allStyleUrls,__spread(styleWithImports.styleUrls));return styleWithImports.style;});return new CompileStylesheetMetadata({styles:allStyles,styleUrls:allStyleUrls,moduleUrl:moduleUrl});};return DirectiveNormalizer;}();var TemplatePreparseVisitor=/** @class */function(){function TemplatePreparseVisitor(){this.ngContentSelectors=[];this.styles=[];this.styleUrls=[];this.ngNonBindableStackCount=0;}TemplatePreparseVisitor.prototype.visitElement=function(ast,context){var preparsedElement=preparseElement(ast);switch(preparsedElement.type){case PreparsedElementType.NG_CONTENT:if(this.ngNonBindableStackCount===0){this.ngContentSelectors.push(preparsedElement.selectAttr);}break;case PreparsedElementType.STYLE:var textContent_1='';ast.children.forEach(function(child){if(child instanceof Text$3){textContent_1+=child.value;}});this.styles.push(textContent_1);break;case PreparsedElementType.STYLESHEET:this.styleUrls.push(preparsedElement.hrefAttr);break;default:break;}if(preparsedElement.nonBindable){this.ngNonBindableStackCount++;}visitAll$1(this,ast.children);if(preparsedElement.nonBindable){this.ngNonBindableStackCount--;}return null;};TemplatePreparseVisitor.prototype.visitExpansion=function(ast,context){visitAll$1(this,ast.cases);};TemplatePreparseVisitor.prototype.visitExpansionCase=function(ast,context){visitAll$1(this,ast.expression);};TemplatePreparseVisitor.prototype.visitComment=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitAttribute=function(ast,context){return null;};TemplatePreparseVisitor.prototype.visitText=function(ast,context){return null;};return TemplatePreparseVisitor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var QUERY_METADATA_IDENTIFIERS=[createViewChild,createViewChildren,createContentChild,createContentChildren];/*
     * Resolve a `Type` for {@link Directive}.
     *
     * This interface can be overridden by the application developer to create custom behavior.
     *
     * See {@link Compiler}
     */var DirectiveResolver=/** @class */function(){function DirectiveResolver(_reflector){this._reflector=_reflector;}DirectiveResolver.prototype.isDirective=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(isDirectiveMetadata);};DirectiveResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var typeMetadata=this._reflector.annotations(resolveForwardRef(type));if(typeMetadata){var metadata=findLast(typeMetadata,isDirectiveMetadata);if(metadata){var propertyMetadata=this._reflector.propMetadata(type);var guards=this._reflector.guards(type);return this._mergeWithPropertyMetadata(metadata,propertyMetadata,guards,type);}}if(throwIfNotFound){throw new Error("No Directive annotation found on "+stringify(type));}return null;};DirectiveResolver.prototype._mergeWithPropertyMetadata=function(dm,propertyMetadata,guards,directiveType){var inputs=[];var outputs=[];var host={};var queries={};Object.keys(propertyMetadata).forEach(function(propName){var input=findLast(propertyMetadata[propName],function(a){return createInput.isTypeOf(a);});if(input){if(input.bindingPropertyName){inputs.push(propName+": "+input.bindingPropertyName);}else{inputs.push(propName);}}var output=findLast(propertyMetadata[propName],function(a){return createOutput.isTypeOf(a);});if(output){if(output.bindingPropertyName){outputs.push(propName+": "+output.bindingPropertyName);}else{outputs.push(propName);}}var hostBindings=propertyMetadata[propName].filter(function(a){return createHostBinding.isTypeOf(a);});hostBindings.forEach(function(hostBinding){if(hostBinding.hostPropertyName){var startWith=hostBinding.hostPropertyName[0];if(startWith==='('){throw new Error("@HostBinding can not bind to events. Use @HostListener instead.");}else if(startWith==='['){throw new Error("@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.");}host["["+hostBinding.hostPropertyName+"]"]=propName;}else{host["["+propName+"]"]=propName;}});var hostListeners=propertyMetadata[propName].filter(function(a){return createHostListener.isTypeOf(a);});hostListeners.forEach(function(hostListener){var args=hostListener.args||[];host["("+hostListener.eventName+")"]=propName+"("+args.join(',')+")";});var query=findLast(propertyMetadata[propName],function(a){return QUERY_METADATA_IDENTIFIERS.some(function(i){return i.isTypeOf(a);});});if(query){queries[propName]=query;}});return this._merge(dm,inputs,outputs,host,queries,guards,directiveType);};DirectiveResolver.prototype._extractPublicName=function(def){return splitAtColon(def,[null,def])[1].trim();};DirectiveResolver.prototype._dedupeBindings=function(bindings){var names=new Set();var publicNames=new Set();var reversedResult=[];// go last to first to allow later entries to overwrite previous entries
for(var i=bindings.length-1;i>=0;i--){var binding=bindings[i];var name_1=this._extractPublicName(binding);publicNames.add(name_1);if(!names.has(name_1)){names.add(name_1);reversedResult.push(binding);}}return reversedResult.reverse();};DirectiveResolver.prototype._merge=function(directive,inputs,outputs,host,queries,guards,directiveType){var mergedInputs=this._dedupeBindings(directive.inputs?directive.inputs.concat(inputs):inputs);var mergedOutputs=this._dedupeBindings(directive.outputs?directive.outputs.concat(outputs):outputs);var mergedHost=directive.host?_assign3(_assign3({},directive.host),host):host;var mergedQueries=directive.queries?_assign3(_assign3({},directive.queries),queries):queries;if(createComponent.isTypeOf(directive)){var comp=directive;return createComponent({selector:comp.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:comp.exportAs,moduleId:comp.moduleId,queries:mergedQueries,changeDetection:comp.changeDetection,providers:comp.providers,viewProviders:comp.viewProviders,entryComponents:comp.entryComponents,template:comp.template,templateUrl:comp.templateUrl,styles:comp.styles,styleUrls:comp.styleUrls,encapsulation:comp.encapsulation,animations:comp.animations,interpolation:comp.interpolation,preserveWhitespaces:directive.preserveWhitespaces});}else{return createDirective({selector:directive.selector,inputs:mergedInputs,outputs:mergedOutputs,host:mergedHost,exportAs:directive.exportAs,queries:mergedQueries,providers:directive.providers,guards:guards});}};return DirectiveResolver;}();function isDirectiveMetadata(type){return createDirective.isTypeOf(type)||createComponent.isTypeOf(type);}function findLast(arr,condition){for(var i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An i18n error.
     */var I18nError=/** @class */function(_super){__extends(I18nError,_super);function I18nError(span,msg){return _super.call(this,span,msg)||this;}return I18nError;}(ParseError);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _I18N_ATTR='i18n';var _I18N_ATTR_PREFIX='i18n-';var _I18N_COMMENT_PREFIX_REGEXP=/^i18n:?/;var MEANING_SEPARATOR='|';var ID_SEPARATOR='@@';var i18nCommentsWarned=false;/**
     * Extract translatable messages from an html AST
     */function extractMessages(nodes,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor$2(implicitTags,implicitAttrs);return visitor.extract(nodes,interpolationConfig);}function mergeTranslations(nodes,translations,interpolationConfig,implicitTags,implicitAttrs){var visitor=new _Visitor$2(implicitTags,implicitAttrs);return visitor.merge(nodes,translations,interpolationConfig);}var ExtractionResult=/** @class */function(){function ExtractionResult(messages,errors){this.messages=messages;this.errors=errors;}return ExtractionResult;}();var _VisitorMode;(function(_VisitorMode){_VisitorMode[_VisitorMode["Extract"]=0]="Extract";_VisitorMode[_VisitorMode["Merge"]=1]="Merge";})(_VisitorMode||(_VisitorMode={}));/**
     * This Visitor is used:
     * 1. to extract all the translatable strings from an html AST (see `extract()`),
     * 2. to replace the translatable strings with the actual translations (see `merge()`)
     *
     * @internal
     */var _Visitor$2=/** @class */function(){function _Visitor(_implicitTags,_implicitAttrs){this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;}/**
         * Extracts the messages from the tree
         */_Visitor.prototype.extract=function(nodes,interpolationConfig){var _this=this;this._init(_VisitorMode.Extract,interpolationConfig);nodes.forEach(function(node){return node.visit(_this,null);});if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ExtractionResult(this._messages,this._errors);};/**
         * Returns a tree where all translatable nodes are translated
         */_Visitor.prototype.merge=function(nodes,translations,interpolationConfig){this._init(_VisitorMode.Merge,interpolationConfig);this._translations=translations;// Construct a single fake root element
var wrapper=new Element$1('wrapper',[],nodes,undefined,undefined,undefined);var translatedNode=wrapper.visit(this,null);if(this._inI18nBlock){this._reportError(nodes[nodes.length-1],'Unclosed block');}return new ParseTreeResult(translatedNode.children,this._errors);};_Visitor.prototype.visitExpansionCase=function(icuCase,context){// Parse cases for translatable html attributes
var expression=visitAll$1(this,icuCase.expression,context);if(this._mode===_VisitorMode.Merge){return new ExpansionCase(icuCase.value,expression,icuCase.sourceSpan,icuCase.valueSourceSpan,icuCase.expSourceSpan);}};_Visitor.prototype.visitExpansion=function(icu,context){this._mayBeAddBlockChildren(icu);var wasInIcu=this._inIcu;if(!this._inIcu){// nested ICU messages should not be extracted but top-level translated as a whole
if(this._isInTranslatableSection){this._addMessage([icu]);}this._inIcu=true;}var cases=visitAll$1(this,icu.cases,context);if(this._mode===_VisitorMode.Merge){icu=new Expansion(icu.switchValue,icu.type,cases,icu.sourceSpan,icu.switchValueSourceSpan);}this._inIcu=wasInIcu;return icu;};_Visitor.prototype.visitComment=function(comment,context){var isOpening=_isOpeningComment(comment);if(isOpening&&this._isInTranslatableSection){this._reportError(comment,'Could not start a block inside a translatable section');return;}var isClosing=_isClosingComment(comment);if(isClosing&&!this._inI18nBlock){this._reportError(comment,'Trying to close an unopened block');return;}if(!this._inI18nNode&&!this._inIcu){if(!this._inI18nBlock){if(isOpening){// deprecated from v5 you should use <ng-container i18n> instead of i18n comments
if(!i18nCommentsWarned&&console&&console.warn){i18nCommentsWarned=true;var details=comment.sourceSpan.details?", "+comment.sourceSpan.details:'';// TODO(ocombe): use a log service once there is a public one available
console.warn("I18n comments are deprecated, use an <ng-container> element instead ("+comment.sourceSpan.start+details+")");}this._inI18nBlock=true;this._blockStartDepth=this._depth;this._blockChildren=[];this._blockMeaningAndDesc=comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP,'').trim();this._openTranslatableSection(comment);}}else{if(isClosing){if(this._depth==this._blockStartDepth){this._closeTranslatableSection(comment,this._blockChildren);this._inI18nBlock=false;var message=this._addMessage(this._blockChildren,this._blockMeaningAndDesc);// merge attributes in sections
var nodes=this._translateMessage(comment,message);return visitAll$1(this,nodes);}else{this._reportError(comment,'I18N blocks should not cross element boundaries');return;}}}}};_Visitor.prototype.visitText=function(text,context){if(this._isInTranslatableSection){this._mayBeAddBlockChildren(text);}return text;};_Visitor.prototype.visitElement=function(el,context){var _this=this;this._mayBeAddBlockChildren(el);this._depth++;var wasInI18nNode=this._inI18nNode;var wasInImplicitNode=this._inImplicitNode;var childNodes=[];var translatedChildNodes=undefined;// Extract:
// - top level nodes with the (implicit) "i18n" attribute if not already in a section
// - ICU messages
var i18nAttr=_getI18nAttr(el);var i18nMeta=i18nAttr?i18nAttr.value:'';var isImplicit=this._implicitTags.some(function(tag){return el.name===tag;})&&!this._inIcu&&!this._isInTranslatableSection;var isTopLevelImplicit=!wasInImplicitNode&&isImplicit;this._inImplicitNode=wasInImplicitNode||isImplicit;if(!this._isInTranslatableSection&&!this._inIcu){if(i18nAttr||isTopLevelImplicit){this._inI18nNode=true;var message=this._addMessage(el.children,i18nMeta);translatedChildNodes=this._translateMessage(el,message);}if(this._mode==_VisitorMode.Extract){var isTranslatable=i18nAttr||isTopLevelImplicit;if(isTranslatable)this._openTranslatableSection(el);visitAll$1(this,el.children);if(isTranslatable)this._closeTranslatableSection(el,el.children);}}else{if(i18nAttr||isTopLevelImplicit){this._reportError(el,'Could not mark an element as translatable inside a translatable section');}if(this._mode==_VisitorMode.Extract){// Descend into child nodes for extraction
visitAll$1(this,el.children);}}if(this._mode===_VisitorMode.Merge){var visitNodes=translatedChildNodes||el.children;visitNodes.forEach(function(child){var visited=child.visit(_this,context);if(visited&&!_this._isInTranslatableSection){// Do not add the children from translatable sections (= i18n blocks here)
// They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)
childNodes=childNodes.concat(visited);}});}this._visitAttributesOf(el);this._depth--;this._inI18nNode=wasInI18nNode;this._inImplicitNode=wasInImplicitNode;if(this._mode===_VisitorMode.Merge){var translatedAttrs=this._translateAttributes(el);return new Element$1(el.name,translatedAttrs,childNodes,el.sourceSpan,el.startSourceSpan,el.endSourceSpan);}return null;};_Visitor.prototype.visitAttribute=function(attribute,context){throw new Error('unreachable code');};_Visitor.prototype._init=function(mode,interpolationConfig){this._mode=mode;this._inI18nBlock=false;this._inI18nNode=false;this._depth=0;this._inIcu=false;this._msgCountAtSectionStart=undefined;this._errors=[];this._messages=[];this._inImplicitNode=false;this._createI18nMessage=createI18nMessageFactory(interpolationConfig);};// looks for translatable attributes
_Visitor.prototype._visitAttributesOf=function(el){var _this=this;var explicitAttrNameToValue={};var implicitAttrNames=this._implicitAttrs[el.name]||[];el.attrs.filter(function(attr){return attr.name.startsWith(_I18N_ATTR_PREFIX);}).forEach(function(attr){return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)]=attr.value;});el.attrs.forEach(function(attr){if(attr.name in explicitAttrNameToValue){_this._addMessage([attr],explicitAttrNameToValue[attr.name]);}else if(implicitAttrNames.some(function(name){return attr.name===name;})){_this._addMessage([attr]);}});};// add a translatable message
_Visitor.prototype._addMessage=function(ast,msgMeta){if(ast.length==0||ast.length==1&&ast[0]instanceof Attribute&&!ast[0].value){// Do not create empty messages
return null;}var _a=_parseMessageMeta(msgMeta),meaning=_a.meaning,description=_a.description,id=_a.id;var message=this._createI18nMessage(ast,meaning,description,id);this._messages.push(message);return message;};// Translates the given message given the `TranslationBundle`
// This is used for translating elements / blocks - see `_translateAttributes` for attributes
// no-op when called in extraction mode (returns [])
_Visitor.prototype._translateMessage=function(el,message){if(message&&this._mode===_VisitorMode.Merge){var nodes=this._translations.get(message);if(nodes){return nodes;}this._reportError(el,"Translation unavailable for message id=\""+this._translations.digest(message)+"\"");}return[];};// translate the attributes of an element and remove i18n specific attributes
_Visitor.prototype._translateAttributes=function(el){var _this=this;var attributes=el.attrs;var i18nParsedMessageMeta={};attributes.forEach(function(attr){if(attr.name.startsWith(_I18N_ATTR_PREFIX)){i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)]=_parseMessageMeta(attr.value);}});var translatedAttributes=[];attributes.forEach(function(attr){if(attr.name===_I18N_ATTR||attr.name.startsWith(_I18N_ATTR_PREFIX)){// strip i18n specific attributes
return;}if(attr.value&&attr.value!=''&&i18nParsedMessageMeta.hasOwnProperty(attr.name)){var _a=i18nParsedMessageMeta[attr.name],meaning=_a.meaning,description=_a.description,id=_a.id;var message=_this._createI18nMessage([attr],meaning,description,id);var nodes=_this._translations.get(message);if(nodes){if(nodes.length==0){translatedAttributes.push(new Attribute(attr.name,'',attr.sourceSpan));}else if(nodes[0]instanceof Text$3){var value=nodes[0].value;translatedAttributes.push(new Attribute(attr.name,value,attr.sourceSpan));}else{_this._reportError(el,"Unexpected translation for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{_this._reportError(el,"Translation unavailable for attribute \""+attr.name+"\" (id=\""+(id||_this._translations.digest(message))+"\")");}}else{translatedAttributes.push(attr);}});return translatedAttributes;};/**
         * Add the node as a child of the block when:
         * - we are in a block,
         * - we are not inside a ICU message (those are handled separately),
         * - the node is a "direct child" of the block
         */_Visitor.prototype._mayBeAddBlockChildren=function(node){if(this._inI18nBlock&&!this._inIcu&&this._depth==this._blockStartDepth){this._blockChildren.push(node);}};/**
         * Marks the start of a section, see `_closeTranslatableSection`
         */_Visitor.prototype._openTranslatableSection=function(node){if(this._isInTranslatableSection){this._reportError(node,'Unexpected section start');}else{this._msgCountAtSectionStart=this._messages.length;}};Object.defineProperty(_Visitor.prototype,"_isInTranslatableSection",{/**
             * A translatable section could be:
             * - the content of translatable element,
             * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments
             */get:function get(){return this._msgCountAtSectionStart!==void 0;},enumerable:true,configurable:true});/**
         * Terminates a section.
         *
         * If a section has only one significant children (comments not significant) then we should not
         * keep the message from this children:
         *
         * `<p i18n="meaning|description">{ICU message}</p>` would produce two messages:
         * - one for the <p> content with meaning and description,
         * - another one for the ICU message.
         *
         * In this case the last message is discarded as it contains less information (the AST is
         * otherwise identical).
         *
         * Note that we should still keep messages extracted from attributes inside the section (ie in the
         * ICU message here)
         */_Visitor.prototype._closeTranslatableSection=function(node,directChildren){if(!this._isInTranslatableSection){this._reportError(node,'Unexpected section end');return;}var startIndex=this._msgCountAtSectionStart;var significantChildren=directChildren.reduce(function(count,node){return count+(node instanceof Comment?0:1);},0);if(significantChildren==1){for(var i=this._messages.length-1;i>=startIndex;i--){var ast=this._messages[i].nodes;if(!(ast.length==1&&ast[0]instanceof Text$1)){this._messages.splice(i,1);break;}}}this._msgCountAtSectionStart=undefined;};_Visitor.prototype._reportError=function(node,msg){this._errors.push(new I18nError(node.sourceSpan,msg));};return _Visitor;}();function _isOpeningComment(n){return!!(n instanceof Comment&&n.value&&n.value.startsWith('i18n'));}function _isClosingComment(n){return!!(n instanceof Comment&&n.value&&n.value==='/i18n');}function _getI18nAttr(p){return p.attrs.find(function(attr){return attr.name===_I18N_ATTR;})||null;}function _parseMessageMeta(i18n){if(!i18n)return{meaning:'',description:'',id:''};var idIndex=i18n.indexOf(ID_SEPARATOR);var descIndex=i18n.indexOf(MEANING_SEPARATOR);var _a=__read(idIndex>-1?[i18n.slice(0,idIndex),i18n.slice(idIndex+2)]:[i18n,''],2),meaningAndDesc=_a[0],id=_a[1];var _b=__read(descIndex>-1?[meaningAndDesc.slice(0,descIndex),meaningAndDesc.slice(descIndex+1)]:['',meaningAndDesc],2),meaning=_b[0],description=_b[1];return{meaning:meaning,description:description,id:id.trim()};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var XmlTagDefinition=/** @class */function(){function XmlTagDefinition(){this.closedByParent=false;this.contentType=exports.TagContentType.PARSABLE_DATA;this.isVoid=false;this.ignoreFirstLf=false;this.canSelfClose=true;}XmlTagDefinition.prototype.requireExtraParent=function(currentParent){return false;};XmlTagDefinition.prototype.isClosedByChild=function(name){return false;};return XmlTagDefinition;}();var _TAG_DEFINITION=new XmlTagDefinition();function getXmlTagDefinition(tagName){return _TAG_DEFINITION;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var XmlParser=/** @class */function(_super){__extends(XmlParser,_super);function XmlParser(){return _super.call(this,getXmlTagDefinition)||this;}XmlParser.prototype.parse=function(source,url,options){return _super.prototype.parse.call(this,source,url,options);};return XmlParser;}(Parser);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _VERSION='1.2';var _XMLNS='urn:oasis:names:tc:xliff:document:1.2';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG='en';var _PLACEHOLDER_TAG$1='x';var _MARKER_TAG='mrk';var _FILE_TAG='file';var _SOURCE_TAG$1='source';var _SEGMENT_SOURCE_TAG='seg-source';var _ALT_TRANS_TAG='alt-trans';var _TARGET_TAG='target';var _UNIT_TAG='trans-unit';var _CONTEXT_GROUP_TAG='context-group';var _CONTEXT_TAG='context';// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html
// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html
var Xliff=/** @class */function(_super){__extends(Xliff,_super);function Xliff(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff.prototype.write=function(messages,locale){var visitor=new _WriteVisitor();var transUnits=[];messages.forEach(function(message){var _a;var contextTags=[];message.sources.forEach(function(source){var contextGroupTag=new Tag(_CONTEXT_GROUP_TAG,{purpose:'location'});contextGroupTag.children.push(new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'sourcefile'},[new Text$2(source.filePath)]),new CR(10),new Tag(_CONTEXT_TAG,{'context-type':'linenumber'},[new Text$2(""+source.startLine)]),new CR(8));contextTags.push(new CR(8),contextGroupTag);});var transUnit=new Tag(_UNIT_TAG,{id:message.id,datatype:'html'});(_a=transUnit.children).push.apply(_a,__spread([new CR(8),new Tag(_SOURCE_TAG$1,{},visitor.serialize(message.nodes))],contextTags));if(message.description){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'description'},[new Text$2(message.description)]));}if(message.meaning){transUnit.children.push(new CR(8),new Tag('note',{priority:'1',from:'meaning'},[new Text$2(message.meaning)]));}transUnit.children.push(new CR(6));transUnits.push(new CR(6),transUnit);});var body=new Tag('body',{},__spread(transUnits,[new CR(4)]));var file=new Tag('file',{'source-language':locale||_DEFAULT_SOURCE_LANG,datatype:'plaintext',original:'ng2.template'},[new CR(4),body,new CR(2)]);var xliff=new Tag('xliff',{version:_VERSION,xmlns:_XMLNS},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff.prototype.load=function(content,url){// xliff to xml nodes
var xliffParser=new XliffParser();var _a=xliffParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,__spread(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff.prototype.digest=function(message){return digest(message);};return Xliff;}(Serializer);var _WriteVisitor=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,__spread(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,__spread([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var ctype=getCtypeForTag(ph.tag);if(ph.isVoid){// void tags have no children nor closing tags
return[new Tag(_PLACEHOLDER_TAG$1,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+"/>"})];}var startTagPh=new Tag(_PLACEHOLDER_TAG$1,{id:ph.startName,ctype:ctype,'equiv-text':"<"+ph.tag+">"});var closeTagPh=new Tag(_PLACEHOLDER_TAG$1,{id:ph.closeName,ctype:ctype,'equiv-text':"</"+ph.tag+">"});return __spread([startTagPh],this.serialize(ph.children),[closeTagPh]);};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){return[new Tag(_PLACEHOLDER_TAG$1,{id:ph.name,'equiv-text':"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var equivText="{"+ph.value.expression+", "+ph.value.type+", "+Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ')+"}";return[new Tag(_PLACEHOLDER_TAG$1,{id:ph.name,'equiv-text':equivText})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;return[].concat.apply([],__spread(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// TODO(vicb): add error management (structure)
// Extract messages as xml nodes from the xliff file
var XliffParser=/** @class */function(){function XliffParser(){this._locale=null;}XliffParser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url);this._errors=xml.errors;visitAll$1(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XliffParser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll$1(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;// ignore those tags
case _SOURCE_TAG$1:case _SEGMENT_SOURCE_TAG:case _ALT_TRANS_TAG:break;case _TARGET_TAG:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _FILE_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='target-language';});if(localeAttr){this._locale=localeAttr.value;}visitAll$1(this,element.children,null);break;default:// TODO(vicb): assert file structure, xliff version
// For now only recurse on unhandled nodes
visitAll$1(this,element.children,null);}};XliffParser.prototype.visitAttribute=function(attribute,context){};XliffParser.prototype.visitText=function(text,context){};XliffParser.prototype.visitComment=function(comment,context){};XliffParser.prototype.visitExpansion=function(expansion,context){};XliffParser.prototype.visitExpansionCase=function(expansionCase,context){};XliffParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XliffParser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,{tokenizeExpansionForms:true});this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],__spread(visitAll$1(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG$1){var nameAttr=el.attrs.find(function(attr){return attr.name==='id';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG$1+"> misses the \"id\" attribute");return null;}if(el.name===_MARKER_TAG){return[].concat.apply([],__spread(visitAll$1(this,el.children)));}this._addError(el,"Unexpected tag");return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll$1(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu$1(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll$1(this,icuCase.expression)};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getCtypeForTag(tag){switch(tag.toLowerCase()){case'br':return'lb';case'img':return'image';default:return"x-"+tag;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _VERSION$1='2.0';var _XMLNS$1='urn:oasis:names:tc:xliff:document:2.0';// TODO(vicb): make this a param (s/_/-/)
var _DEFAULT_SOURCE_LANG$1='en';var _PLACEHOLDER_TAG$2='ph';var _PLACEHOLDER_SPANNING_TAG='pc';var _MARKER_TAG$1='mrk';var _XLIFF_TAG='xliff';var _SOURCE_TAG$2='source';var _TARGET_TAG$1='target';var _UNIT_TAG$1='unit';// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html
var Xliff2=/** @class */function(_super){__extends(Xliff2,_super);function Xliff2(){return _super!==null&&_super.apply(this,arguments)||this;}Xliff2.prototype.write=function(messages,locale){var visitor=new _WriteVisitor$1();var units=[];messages.forEach(function(message){var unit=new Tag(_UNIT_TAG$1,{id:message.id});var notes=new Tag('notes');if(message.description||message.meaning){if(message.description){notes.children.push(new CR(8),new Tag('note',{category:'description'},[new Text$2(message.description)]));}if(message.meaning){notes.children.push(new CR(8),new Tag('note',{category:'meaning'},[new Text$2(message.meaning)]));}}message.sources.forEach(function(source){notes.children.push(new CR(8),new Tag('note',{category:'location'},[new Text$2(source.filePath+":"+source.startLine+(source.endLine!==source.startLine?','+source.endLine:''))]));});notes.children.push(new CR(6));unit.children.push(new CR(6),notes);var segment=new Tag('segment');segment.children.push(new CR(8),new Tag(_SOURCE_TAG$2,{},visitor.serialize(message.nodes)),new CR(6));unit.children.push(new CR(6),segment,new CR(4));units.push(new CR(4),unit);});var file=new Tag('file',{'original':'ng.template',id:'ngi18n'},__spread(units,[new CR(2)]));var xliff=new Tag(_XLIFF_TAG,{version:_VERSION$1,xmlns:_XMLNS$1,srcLang:locale||_DEFAULT_SOURCE_LANG$1},[new CR(2),file,new CR()]);return serialize([new Declaration({version:'1.0',encoding:'UTF-8'}),new CR(),xliff,new CR()]);};Xliff2.prototype.load=function(content,url){// xliff to xml nodes
var xliff2Parser=new Xliff2Parser();var _a=xliff2Parser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$1();Object.keys(msgIdToHtml).forEach(function(msgId){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,e=_a.errors;errors.push.apply(errors,__spread(e));i18nNodesByMsgId[msgId]=i18nNodes;});if(errors.length){throw new Error("xliff2 parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xliff2.prototype.digest=function(message){return decimalDigest(message);};return Xliff2;}(Serializer);var _WriteVisitor$1=/** @class */function(){function _WriteVisitor(){}_WriteVisitor.prototype.visitText=function(text,context){return[new Text$2(text.value)];};_WriteVisitor.prototype.visitContainer=function(container,context){var _this=this;var nodes=[];container.children.forEach(function(node){return nodes.push.apply(nodes,__spread(node.visit(_this)));});return nodes;};_WriteVisitor.prototype.visitIcu=function(icu,context){var _this=this;var nodes=[new Text$2("{"+icu.expressionPlaceholder+", "+icu.type+", ")];Object.keys(icu.cases).forEach(function(c){nodes.push.apply(nodes,__spread([new Text$2(c+" {")],icu.cases[c].visit(_this),[new Text$2("} ")]));});nodes.push(new Text$2("}"));return nodes;};_WriteVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var type=getTypeForTag(ph.tag);if(ph.isVoid){var tagPh=new Tag(_PLACEHOLDER_TAG$2,{id:(this._nextPlaceholderId++).toString(),equiv:ph.startName,type:type,disp:"<"+ph.tag+"/>"});return[tagPh];}var tagPc=new Tag(_PLACEHOLDER_SPANNING_TAG,{id:(this._nextPlaceholderId++).toString(),equivStart:ph.startName,equivEnd:ph.closeName,type:type,dispStart:"<"+ph.tag+">",dispEnd:"</"+ph.tag+">"});var nodes=[].concat.apply([],__spread(ph.children.map(function(node){return node.visit(_this);})));if(nodes.length){nodes.forEach(function(node){return tagPc.children.push(node);});}else{tagPc.children.push(new Text$2(''));}return[tagPc];};_WriteVisitor.prototype.visitPlaceholder=function(ph,context){var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$2,{id:idStr,equiv:ph.name,disp:"{{"+ph.value+"}}"})];};_WriteVisitor.prototype.visitIcuPlaceholder=function(ph,context){var cases=Object.keys(ph.value.cases).map(function(value){return value+' {...}';}).join(' ');var idStr=(this._nextPlaceholderId++).toString();return[new Tag(_PLACEHOLDER_TAG$2,{id:idStr,equiv:ph.name,disp:"{"+ph.value.expression+", "+ph.value.type+", "+cases+"}"})];};_WriteVisitor.prototype.serialize=function(nodes){var _this=this;this._nextPlaceholderId=0;return[].concat.apply([],__spread(nodes.map(function(node){return node.visit(_this);})));};return _WriteVisitor;}();// Extract messages as xml nodes from the xliff file
var Xliff2Parser=/** @class */function(){function Xliff2Parser(){this._locale=null;}Xliff2Parser.prototype.parse=function(xliff,url){this._unitMlString=null;this._msgIdToHtml={};var xml=new XmlParser().parse(xliff,url);this._errors=xml.errors;visitAll$1(this,xml.rootNodes,null);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};Xliff2Parser.prototype.visitElement=function(element,context){switch(element.name){case _UNIT_TAG$1:this._unitMlString=null;var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_UNIT_TAG$1+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{visitAll$1(this,element.children,null);if(typeof this._unitMlString==='string'){this._msgIdToHtml[id]=this._unitMlString;}else{this._addError(element,"Message "+id+" misses a translation");}}}break;case _SOURCE_TAG$2:// ignore source message
break;case _TARGET_TAG$1:var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._unitMlString=innerText;break;case _XLIFF_TAG:var localeAttr=element.attrs.find(function(attr){return attr.name==='trgLang';});if(localeAttr){this._locale=localeAttr.value;}var versionAttr=element.attrs.find(function(attr){return attr.name==='version';});if(versionAttr){var version=versionAttr.value;if(version!=='2.0'){this._addError(element,"The XLIFF file version "+version+" is not compatible with XLIFF 2.0 serializer");}else{visitAll$1(this,element.children,null);}}break;default:visitAll$1(this,element.children,null);}};Xliff2Parser.prototype.visitAttribute=function(attribute,context){};Xliff2Parser.prototype.visitText=function(text,context){};Xliff2Parser.prototype.visitComment=function(comment,context){};Xliff2Parser.prototype.visitExpansion=function(expansion,context){};Xliff2Parser.prototype.visitExpansionCase=function(expansionCase,context){};Xliff2Parser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return Xliff2Parser;}();// Convert ml nodes (xliff syntax) to i18n nodes
var XmlToI18n$1=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,{tokenizeExpansionForms:true});this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:[].concat.apply([],__spread(visitAll$1(this,xmlIcu.rootNodes)));return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitElement=function(el,context){var _this=this;switch(el.name){case _PLACEHOLDER_TAG$2:var nameAttr=el.attrs.find(function(attr){return attr.name==='equiv';});if(nameAttr){return[new Placeholder('',nameAttr.value,el.sourceSpan)];}this._addError(el,"<"+_PLACEHOLDER_TAG$2+"> misses the \"equiv\" attribute");break;case _PLACEHOLDER_SPANNING_TAG:var startAttr=el.attrs.find(function(attr){return attr.name==='equivStart';});var endAttr=el.attrs.find(function(attr){return attr.name==='equivEnd';});if(!startAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$2+"> misses the \"equivStart\" attribute");}else if(!endAttr){this._addError(el,"<"+_PLACEHOLDER_TAG$2+"> misses the \"equivEnd\" attribute");}else{var startId=startAttr.value;var endId=endAttr.value;var nodes=[];return nodes.concat.apply(nodes,__spread([new Placeholder('',startId,el.sourceSpan)],el.children.map(function(node){return node.visit(_this,null);}),[new Placeholder('',endId,el.sourceSpan)]));}break;case _MARKER_TAG$1:return[].concat.apply([],__spread(visitAll$1(this,el.children)));default:this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll$1(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu$1(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:[].concat.apply([],__spread(visitAll$1(this,icuCase.expression)))};};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();function getTypeForTag(tag){switch(tag.toLowerCase()){case'br':case'b':case'i':case'u':return'fmt';case'img':return'image';case'a':return'link';default:return'other';}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _TRANSLATIONS_TAG='translationbundle';var _TRANSLATION_TAG='translation';var _PLACEHOLDER_TAG$3='ph';var Xtb=/** @class */function(_super){__extends(Xtb,_super);function Xtb(){return _super!==null&&_super.apply(this,arguments)||this;}Xtb.prototype.write=function(messages,locale){throw new Error('Unsupported');};Xtb.prototype.load=function(content,url){// xtb to xml nodes
var xtbParser=new XtbParser();var _a=xtbParser.parse(content,url),locale=_a.locale,msgIdToHtml=_a.msgIdToHtml,errors=_a.errors;// xml nodes to i18n nodes
var i18nNodesByMsgId={};var converter=new XmlToI18n$2();// Because we should be able to load xtb files that rely on features not supported by angular,
// we need to delay the conversion of html to i18n nodes so that non angular messages are not
// converted
Object.keys(msgIdToHtml).forEach(function(msgId){var valueFn=function valueFn(){var _a=converter.convert(msgIdToHtml[msgId],url),i18nNodes=_a.i18nNodes,errors=_a.errors;if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return i18nNodes;};createLazyProperty(i18nNodesByMsgId,msgId,valueFn);});if(errors.length){throw new Error("xtb parse errors:\n"+errors.join('\n'));}return{locale:locale,i18nNodesByMsgId:i18nNodesByMsgId};};Xtb.prototype.digest=function(message){return digest$1(message);};Xtb.prototype.createNameMapper=function(message){return new SimplePlaceholderMapper(message,toPublicName);};return Xtb;}(Serializer);function createLazyProperty(messages,id,valueFn){Object.defineProperty(messages,id,{configurable:true,enumerable:true,get:function get(){var value=valueFn();Object.defineProperty(messages,id,{enumerable:true,value:value});return value;},set:function set(_){throw new Error('Could not overwrite an XTB translation');}});}// Extract messages as xml nodes from the xtb file
var XtbParser=/** @class */function(){function XtbParser(){this._locale=null;}XtbParser.prototype.parse=function(xtb,url){this._bundleDepth=0;this._msgIdToHtml={};// We can not parse the ICU messages at this point as some messages might not originate
// from Angular that could not be lex'd.
var xml=new XmlParser().parse(xtb,url);this._errors=xml.errors;visitAll$1(this,xml.rootNodes);return{msgIdToHtml:this._msgIdToHtml,errors:this._errors,locale:this._locale};};XtbParser.prototype.visitElement=function(element,context){switch(element.name){case _TRANSLATIONS_TAG:this._bundleDepth++;if(this._bundleDepth>1){this._addError(element,"<"+_TRANSLATIONS_TAG+"> elements can not be nested");}var langAttr=element.attrs.find(function(attr){return attr.name==='lang';});if(langAttr){this._locale=langAttr.value;}visitAll$1(this,element.children,null);this._bundleDepth--;break;case _TRANSLATION_TAG:var idAttr=element.attrs.find(function(attr){return attr.name==='id';});if(!idAttr){this._addError(element,"<"+_TRANSLATION_TAG+"> misses the \"id\" attribute");}else{var id=idAttr.value;if(this._msgIdToHtml.hasOwnProperty(id)){this._addError(element,"Duplicated translations for msg "+id);}else{var innerTextStart=element.startSourceSpan.end.offset;var innerTextEnd=element.endSourceSpan.start.offset;var content=element.startSourceSpan.start.file.content;var innerText=content.slice(innerTextStart,innerTextEnd);this._msgIdToHtml[id]=innerText;}}break;default:this._addError(element,'Unexpected tag');}};XtbParser.prototype.visitAttribute=function(attribute,context){};XtbParser.prototype.visitText=function(text,context){};XtbParser.prototype.visitComment=function(comment,context){};XtbParser.prototype.visitExpansion=function(expansion,context){};XtbParser.prototype.visitExpansionCase=function(expansionCase,context){};XtbParser.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XtbParser;}();// Convert ml nodes (xtb syntax) to i18n nodes
var XmlToI18n$2=/** @class */function(){function XmlToI18n(){}XmlToI18n.prototype.convert=function(message,url){var xmlIcu=new XmlParser().parse(message,url,{tokenizeExpansionForms:true});this._errors=xmlIcu.errors;var i18nNodes=this._errors.length>0||xmlIcu.rootNodes.length==0?[]:visitAll$1(this,xmlIcu.rootNodes);return{i18nNodes:i18nNodes,errors:this._errors};};XmlToI18n.prototype.visitText=function(text,context){return new Text$1(text.value,text.sourceSpan);};XmlToI18n.prototype.visitExpansion=function(icu,context){var caseMap={};visitAll$1(this,icu.cases).forEach(function(c){caseMap[c.value]=new Container(c.nodes,icu.sourceSpan);});return new Icu$1(icu.switchValue,icu.type,caseMap,icu.sourceSpan);};XmlToI18n.prototype.visitExpansionCase=function(icuCase,context){return{value:icuCase.value,nodes:visitAll$1(this,icuCase.expression)};};XmlToI18n.prototype.visitElement=function(el,context){if(el.name===_PLACEHOLDER_TAG$3){var nameAttr=el.attrs.find(function(attr){return attr.name==='name';});if(nameAttr){return new Placeholder('',nameAttr.value,el.sourceSpan);}this._addError(el,"<"+_PLACEHOLDER_TAG$3+"> misses the \"name\" attribute");}else{this._addError(el,"Unexpected tag");}return null;};XmlToI18n.prototype.visitComment=function(comment,context){};XmlToI18n.prototype.visitAttribute=function(attribute,context){};XmlToI18n.prototype._addError=function(node,message){this._errors.push(new I18nError(node.sourceSpan,message));};return XmlToI18n;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A container for translated messages
     */var TranslationBundle=/** @class */function(){function TranslationBundle(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}if(missingTranslationStrategy===void 0){missingTranslationStrategy=MissingTranslationStrategy.Warning;}this._i18nNodesByMsgId=_i18nNodesByMsgId;this.digest=digest;this.mapperFactory=mapperFactory;this._i18nToHtml=new I18nToHtmlVisitor(_i18nNodesByMsgId,locale,digest,mapperFactory,missingTranslationStrategy,console);}// Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.
TranslationBundle.load=function(content,url,serializer,missingTranslationStrategy,console){var _a=serializer.load(content,url),locale=_a.locale,i18nNodesByMsgId=_a.i18nNodesByMsgId;var digestFn=function digestFn(m){return serializer.digest(m);};var mapperFactory=function mapperFactory(m){return serializer.createNameMapper(m);};return new TranslationBundle(i18nNodesByMsgId,locale,digestFn,mapperFactory,missingTranslationStrategy,console);};// Returns the translation as HTML nodes from the given source message.
TranslationBundle.prototype.get=function(srcMsg){var html=this._i18nToHtml.convert(srcMsg);if(html.errors.length){throw new Error(html.errors.join('\n'));}return html.nodes;};TranslationBundle.prototype.has=function(srcMsg){return this.digest(srcMsg)in this._i18nNodesByMsgId;};return TranslationBundle;}();var I18nToHtmlVisitor=/** @class */function(){function I18nToHtmlVisitor(_i18nNodesByMsgId,_locale,_digest,_mapperFactory,_missingTranslationStrategy,_console){if(_i18nNodesByMsgId===void 0){_i18nNodesByMsgId={};}this._i18nNodesByMsgId=_i18nNodesByMsgId;this._locale=_locale;this._digest=_digest;this._mapperFactory=_mapperFactory;this._missingTranslationStrategy=_missingTranslationStrategy;this._console=_console;this._contextStack=[];this._errors=[];}I18nToHtmlVisitor.prototype.convert=function(srcMsg){this._contextStack.length=0;this._errors.length=0;// i18n to text
var text=this._convertToText(srcMsg);// text to html
var url=srcMsg.nodes[0].sourceSpan.start.file.url;var html=new HtmlParser().parse(text,url,{tokenizeExpansionForms:true});return{nodes:html.rootNodes,errors:__spread(this._errors,html.errors)};};I18nToHtmlVisitor.prototype.visitText=function(text,context){// `convert()` uses an `HtmlParser` to return `html.Node`s
// we should then make sure that any special characters are escaped
return escapeXml(text.value);};I18nToHtmlVisitor.prototype.visitContainer=function(container,context){var _this=this;return container.children.map(function(n){return n.visit(_this);}).join('');};I18nToHtmlVisitor.prototype.visitIcu=function(icu,context){var _this=this;var cases=Object.keys(icu.cases).map(function(k){return k+" {"+icu.cases[k].visit(_this)+"}";});// TODO(vicb): Once all format switch to using expression placeholders
// we should throw when the placeholder is not in the source message
var exp=this._srcMsg.placeholders.hasOwnProperty(icu.expression)?this._srcMsg.placeholders[icu.expression]:icu.expression;return"{"+exp+", "+icu.type+", "+cases.join(' ')+"}";};I18nToHtmlVisitor.prototype.visitPlaceholder=function(ph,context){var phName=this._mapper(ph.name);if(this._srcMsg.placeholders.hasOwnProperty(phName)){return this._srcMsg.placeholders[phName];}if(this._srcMsg.placeholderToMessage.hasOwnProperty(phName)){return this._convertToText(this._srcMsg.placeholderToMessage[phName]);}this._addError(ph,"Unknown placeholder \""+ph.name+"\"");return'';};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitTagPlaceholder=function(ph,context){var _this=this;var tag=""+ph.tag;var attrs=Object.keys(ph.attrs).map(function(name){return name+"=\""+ph.attrs[name]+"\"";}).join(' ');if(ph.isVoid){return"<"+tag+" "+attrs+"/>";}var children=ph.children.map(function(c){return c.visit(_this);}).join('');return"<"+tag+" "+attrs+">"+children+"</"+tag+">";};// Loaded message contains only placeholders (vs tag and icu placeholders).
// However when a translation can not be found, we need to serialize the source message
// which can contain tag placeholders
I18nToHtmlVisitor.prototype.visitIcuPlaceholder=function(ph,context){// An ICU placeholder references the source message to be serialized
return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);};/**
         * Convert a source message to a translated text string:
         * - text nodes are replaced with their translation,
         * - placeholders are replaced with their content,
         * - ICU nodes are converted to ICU expressions.
         */I18nToHtmlVisitor.prototype._convertToText=function(srcMsg){var _this=this;var id=this._digest(srcMsg);var mapper=this._mapperFactory?this._mapperFactory(srcMsg):null;var nodes;this._contextStack.push({msg:this._srcMsg,mapper:this._mapper});this._srcMsg=srcMsg;if(this._i18nNodesByMsgId.hasOwnProperty(id)){// When there is a translation use its nodes as the source
// And create a mapper to convert serialized placeholder names to internal names
nodes=this._i18nNodesByMsgId[id];this._mapper=function(name){return mapper?mapper.toInternalName(name):name;};}else{// When no translation has been found
// - report an error / a warning / nothing,
// - use the nodes from the original message
// - placeholders are already internal and need no mapper
if(this._missingTranslationStrategy===MissingTranslationStrategy.Error){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._addError(srcMsg.nodes[0],"Missing translation for message \""+id+"\""+ctx);}else if(this._console&&this._missingTranslationStrategy===MissingTranslationStrategy.Warning){var ctx=this._locale?" for locale \""+this._locale+"\"":'';this._console.warn("Missing translation for message \""+id+"\""+ctx);}nodes=srcMsg.nodes;this._mapper=function(name){return name;};}var text=nodes.map(function(node){return node.visit(_this);}).join('');var context=this._contextStack.pop();this._srcMsg=context.msg;this._mapper=context.mapper;return text;};I18nToHtmlVisitor.prototype._addError=function(el,msg){this._errors.push(new I18nError(el.sourceSpan,msg));};return I18nToHtmlVisitor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var I18NHtmlParser=/** @class */function(){function I18NHtmlParser(_htmlParser,translations,translationsFormat,missingTranslation,console){if(missingTranslation===void 0){missingTranslation=MissingTranslationStrategy.Warning;}this._htmlParser=_htmlParser;if(translations){var serializer=createSerializer(translationsFormat);this._translationBundle=TranslationBundle.load(translations,'i18n',serializer,missingTranslation,console);}else{this._translationBundle=new TranslationBundle({},null,digest,undefined,missingTranslation,console);}}I18NHtmlParser.prototype.parse=function(source,url,options){if(options===void 0){options={};}var interpolationConfig=options.interpolationConfig||DEFAULT_INTERPOLATION_CONFIG;var parseResult=this._htmlParser.parse(source,url,_assign3({interpolationConfig:interpolationConfig},options));if(parseResult.errors.length){return new ParseTreeResult(parseResult.rootNodes,parseResult.errors);}return mergeTranslations(parseResult.rootNodes,this._translationBundle,interpolationConfig,[],{});};return I18NHtmlParser;}();function createSerializer(format){format=(format||'xlf').toLowerCase();switch(format){case'xmb':return new Xmb();case'xtb':return new Xtb();case'xliff2':case'xlf2':return new Xliff2();case'xliff':case'xlf':default:return new Xliff();}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var QUOTED_KEYS='$quoted$';function convertValueToOutputAst(ctx,value,type){if(type===void 0){type=null;}return visitValue(value,new _ValueOutputAstTransformer(ctx),type);}var _ValueOutputAstTransformer=/** @class */function(){function _ValueOutputAstTransformer(ctx){this.ctx=ctx;}_ValueOutputAstTransformer.prototype.visitArray=function(arr,type){var values=[];// Note Array.map() must not be used to convert the values because it will
// skip over empty elements in arrays constructed using `new Array(length)`,
// resulting in `undefined` elements. This breaks the type guarantee that
// all values in `o.LiteralArrayExpr` are of type `o.Expression`.
// See test case in `value_util_spec.ts`.
for(var i=0;i<arr.length;++i){values.push(visitValue(arr[i],this,null/* context */));}return literalArr(values,type);};_ValueOutputAstTransformer.prototype.visitStringMap=function(map,type){var _this=this;var entries=[];var quotedSet=new Set(map&&map[QUOTED_KEYS]);Object.keys(map).forEach(function(key){entries.push(new LiteralMapEntry(key,visitValue(map[key],_this,null),quotedSet.has(key)));});return new LiteralMapExpr(entries,type);};_ValueOutputAstTransformer.prototype.visitPrimitive=function(value,type){return literal(value,type);};_ValueOutputAstTransformer.prototype.visitOther=function(value,type){if(value instanceof Expression){return value;}else{return this.ctx.importExpr(value);}};return _ValueOutputAstTransformer;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function mapEntry$1(key,value){return{key:key,value:value,quoted:false};}var InjectableCompiler=/** @class */function(){function InjectableCompiler(reflector,alwaysGenerateDef){this.reflector=reflector;this.alwaysGenerateDef=alwaysGenerateDef;this.tokenInjector=reflector.resolveExternalReference(Identifiers.Injector);}InjectableCompiler.prototype.depsArray=function(deps,ctx){var _this=this;return deps.map(function(dep){var token=dep;var args=[token];var flags=0/* Default */;if(Array.isArray(dep)){for(var i=0;i<dep.length;i++){var v=dep[i];if(v){if(v.ngMetadataName==='Optional'){flags|=8/* Optional */;}else if(v.ngMetadataName==='SkipSelf'){flags|=4/* SkipSelf */;}else if(v.ngMetadataName==='Self'){flags|=2/* Self */;}else if(v.ngMetadataName==='Inject'){token=v.token;}else{token=v;}}}}var tokenExpr;if(typeof token==='string'){tokenExpr=literal(token);}else if(token===_this.tokenInjector){tokenExpr=importExpr(Identifiers.INJECTOR);}else{tokenExpr=ctx.importExpr(token);}if(flags!==0/* Default */){args=[tokenExpr,literal(flags)];}else{args=[tokenExpr];}return importExpr(Identifiers.inject).callFn(args);});};InjectableCompiler.prototype.factoryFor=function(injectable,ctx){var retValue;if(injectable.useExisting){retValue=importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);}else if(injectable.useFactory){var deps=injectable.deps||[];if(deps.length>0){retValue=ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps,ctx));}else{return ctx.importExpr(injectable.useFactory);}}else if(injectable.useValue){retValue=convertValueToOutputAst(ctx,injectable.useValue);}else{var clazz=injectable.useClass||injectable.symbol;var depArgs=this.depsArray(this.reflector.parameters(clazz),ctx);retValue=new InstantiateExpr(ctx.importExpr(clazz),depArgs);}return fn([],[new ReturnStatement(retValue)],undefined,undefined,injectable.symbol.name+'_Factory');};InjectableCompiler.prototype.injectableDef=function(injectable,ctx){var providedIn=NULL_EXPR;if(injectable.providedIn!==undefined){if(injectable.providedIn===null){providedIn=NULL_EXPR;}else if(typeof injectable.providedIn==='string'){providedIn=literal(injectable.providedIn);}else{providedIn=ctx.importExpr(injectable.providedIn);}}var def=[mapEntry$1('factory',this.factoryFor(injectable,ctx)),mapEntry$1('token',ctx.importExpr(injectable.type.reference)),mapEntry$1('providedIn',providedIn)];return importExpr(Identifiers.ɵɵdefineInjectable).callFn([literalMap(def)]);};InjectableCompiler.prototype.compile=function(injectable,ctx){if(this.alwaysGenerateDef||injectable.providedIn!==undefined){var className=identifierName(injectable.type);var clazz=new ClassStmt(className,null,[new ClassField('ɵprov',INFERRED_TYPE,[exports.StmtModifier.Static],this.injectableDef(injectable,ctx))],[],new ClassMethod(null,[],[]),[]);ctx.statements.push(clazz);}};return InjectableCompiler;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var STRIP_SRC_FILE_SUFFIXES=/(\.ts|\.d\.ts|\.js|\.jsx|\.tsx)$/;var GENERATED_FILE=/\.ngfactory\.|\.ngsummary\./;var JIT_SUMMARY_FILE=/\.ngsummary\./;var JIT_SUMMARY_NAME=/NgSummary$/;function ngfactoryFilePath(filePath,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(filePath,forceSourceFile);return urlWithSuffix[0]+".ngfactory"+normalizeGenFileSuffix(urlWithSuffix[1]);}function stripGeneratedFileSuffix(filePath){return filePath.replace(GENERATED_FILE,'.');}function isGeneratedFile(filePath){return GENERATED_FILE.test(filePath);}function splitTypescriptSuffix(path,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}if(path.endsWith('.d.ts')){return[path.slice(0,-5),forceSourceFile?'.ts':'.d.ts'];}var lastDot=path.lastIndexOf('.');if(lastDot!==-1){return[path.substring(0,lastDot),path.substring(lastDot)];}return[path,''];}function normalizeGenFileSuffix(srcFileSuffix){return srcFileSuffix==='.tsx'?'.ts':srcFileSuffix;}function summaryFileName(fileName){var fileNameWithoutSuffix=fileName.replace(STRIP_SRC_FILE_SUFFIXES,'');return fileNameWithoutSuffix+".ngsummary.json";}function summaryForJitFileName(fileName,forceSourceFile){if(forceSourceFile===void 0){forceSourceFile=false;}var urlWithSuffix=splitTypescriptSuffix(stripGeneratedFileSuffix(fileName),forceSourceFile);return urlWithSuffix[0]+".ngsummary"+urlWithSuffix[1];}function stripSummaryForJitFileSuffix(filePath){return filePath.replace(JIT_SUMMARY_FILE,'.');}function summaryForJitName(symbolName){return symbolName+"NgSummary";}function stripSummaryForJitNameSuffix(symbolName){return symbolName.replace(JIT_SUMMARY_NAME,'');}var LOWERED_SYMBOL=/\u0275\d+/;function isLoweredSymbol(name){return LOWERED_SYMBOL.test(name);}function createLoweredSymbol(id){return"\u0275"+id;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var LifecycleHooks;(function(LifecycleHooks){LifecycleHooks[LifecycleHooks["OnInit"]=0]="OnInit";LifecycleHooks[LifecycleHooks["OnDestroy"]=1]="OnDestroy";LifecycleHooks[LifecycleHooks["DoCheck"]=2]="DoCheck";LifecycleHooks[LifecycleHooks["OnChanges"]=3]="OnChanges";LifecycleHooks[LifecycleHooks["AfterContentInit"]=4]="AfterContentInit";LifecycleHooks[LifecycleHooks["AfterContentChecked"]=5]="AfterContentChecked";LifecycleHooks[LifecycleHooks["AfterViewInit"]=6]="AfterViewInit";LifecycleHooks[LifecycleHooks["AfterViewChecked"]=7]="AfterViewChecked";})(LifecycleHooks||(LifecycleHooks={}));var LIFECYCLE_HOOKS_VALUES=[LifecycleHooks.OnInit,LifecycleHooks.OnDestroy,LifecycleHooks.DoCheck,LifecycleHooks.OnChanges,LifecycleHooks.AfterContentInit,LifecycleHooks.AfterContentChecked,LifecycleHooks.AfterViewInit,LifecycleHooks.AfterViewChecked];function hasLifecycleHook(reflector,hook,token){return reflector.hasLifecycleHook(token,getHookName(hook));}function getAllLifecycleHooks(reflector,token){return LIFECYCLE_HOOKS_VALUES.filter(function(hook){return hasLifecycleHook(reflector,hook,token);});}function getHookName(hook){switch(hook){case LifecycleHooks.OnInit:return'ngOnInit';case LifecycleHooks.OnDestroy:return'ngOnDestroy';case LifecycleHooks.DoCheck:return'ngDoCheck';case LifecycleHooks.OnChanges:return'ngOnChanges';case LifecycleHooks.AfterContentInit:return'ngAfterContentInit';case LifecycleHooks.AfterContentChecked:return'ngAfterContentChecked';case LifecycleHooks.AfterViewInit:return'ngAfterViewInit';case LifecycleHooks.AfterViewChecked:return'ngAfterViewChecked';default:// This default case is not needed by TypeScript compiler, as the switch is exhaustive.
// However Closure Compiler does not understand that and reports an error in typed mode.
// The `throw new Error` below works around the problem, and the unexpected: never variable
// makes sure tsc still checks this code is unreachable.
var unexpected=hook;throw new Error("unexpected "+unexpected);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ERROR_COMPONENT_TYPE='ngComponentType';// Design notes:
// - don't lazily create metadata:
//   For some metadata, we need to do async work sometimes,
//   so the user has to kick off this loading.
//   But we want to report errors even when the async work is
//   not required to check that the user would have been able
//   to wait correctly.
var CompileMetadataResolver=/** @class */function(){function CompileMetadataResolver(_config,_htmlParser,_ngModuleResolver,_directiveResolver,_pipeResolver,_summaryResolver,_schemaRegistry,_directiveNormalizer,_console,_staticSymbolCache,_reflector,_errorCollector){this._config=_config;this._htmlParser=_htmlParser;this._ngModuleResolver=_ngModuleResolver;this._directiveResolver=_directiveResolver;this._pipeResolver=_pipeResolver;this._summaryResolver=_summaryResolver;this._schemaRegistry=_schemaRegistry;this._directiveNormalizer=_directiveNormalizer;this._console=_console;this._staticSymbolCache=_staticSymbolCache;this._reflector=_reflector;this._errorCollector=_errorCollector;this._nonNormalizedDirectiveCache=new Map();this._directiveCache=new Map();this._summaryCache=new Map();this._pipeCache=new Map();this._ngModuleCache=new Map();this._ngModuleOfTypes=new Map();this._shallowModuleCache=new Map();}CompileMetadataResolver.prototype.getReflector=function(){return this._reflector;};CompileMetadataResolver.prototype.clearCacheFor=function(type){var dirMeta=this._directiveCache.get(type);this._directiveCache["delete"](type);this._nonNormalizedDirectiveCache["delete"](type);this._summaryCache["delete"](type);this._pipeCache["delete"](type);this._ngModuleOfTypes["delete"](type);// Clear all of the NgModule as they contain transitive information!
this._ngModuleCache.clear();if(dirMeta){this._directiveNormalizer.clearCacheFor(dirMeta);}};CompileMetadataResolver.prototype.clearCache=function(){this._directiveCache.clear();this._nonNormalizedDirectiveCache.clear();this._summaryCache.clear();this._pipeCache.clear();this._ngModuleCache.clear();this._ngModuleOfTypes.clear();this._directiveNormalizer.clearCache();};CompileMetadataResolver.prototype._createProxyClass=function(baseType,name){var delegate=null;var proxyClass=function proxyClass(){if(!delegate){throw new Error("Illegal state: Class "+name+" for type "+stringify(baseType)+" is not compiled yet!");}return delegate.apply(this,arguments);};proxyClass.setDelegate=function(d){delegate=d;proxyClass.prototype=d.prototype;};// Make stringify work correctly
proxyClass.overriddenName=name;return proxyClass;};CompileMetadataResolver.prototype.getGeneratedClass=function(dirType,name){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),name);}else{return this._createProxyClass(dirType,name);}};CompileMetadataResolver.prototype.getComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,viewClassName(dirType,0));};CompileMetadataResolver.prototype.getHostComponentViewClass=function(dirType){return this.getGeneratedClass(dirType,hostViewClassName(dirType));};CompileMetadataResolver.prototype.getHostComponentType=function(dirType){var name=identifierName({reference:dirType})+"_Host";if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(dirType.filePath,name);}return this._createProxyClass(dirType,name);};CompileMetadataResolver.prototype.getRendererType=function(dirType){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),rendererTypeName(dirType));}else{// returning an object as proxy,
// that we fill later during runtime compilation.
return{};}};CompileMetadataResolver.prototype.getComponentFactory=function(selector,dirType,inputs,outputs){if(dirType instanceof StaticSymbol){return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath),componentFactoryName(dirType));}else{var hostView=this.getHostComponentViewClass(dirType);// Note: ngContentSelectors will be filled later once the template is
// loaded.
var createComponentFactory=this._reflector.resolveExternalReference(Identifiers.createComponentFactory);return createComponentFactory(selector,dirType,hostView,inputs,outputs,[]);}};CompileMetadataResolver.prototype.initComponentFactory=function(factory,ngContentSelectors){var _a;if(!(factory instanceof StaticSymbol)){(_a=factory.ngContentSelectors).push.apply(_a,__spread(ngContentSelectors));}};CompileMetadataResolver.prototype._loadSummary=function(type,kind){var typeSummary=this._summaryCache.get(type);if(!typeSummary){var summary=this._summaryResolver.resolveSummary(type);typeSummary=summary?summary.type:null;this._summaryCache.set(type,typeSummary||null);}return typeSummary&&typeSummary.summaryKind===kind?typeSummary:null;};CompileMetadataResolver.prototype.getHostComponentMetadata=function(compMeta,hostViewType){var hostType=this.getHostComponentType(compMeta.type.reference);if(!hostViewType){hostViewType=this.getHostComponentViewClass(hostType);}// Note: ! is ok here as this method should only be called with normalized directive
// metadata, which always fills in the selector.
var template=CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();var templateUrl='';var htmlAst=this._htmlParser.parse(template,templateUrl);return CompileDirectiveMetadata.create({isHost:true,type:{reference:hostType,diDeps:[],lifecycleHooks:[]},template:new CompileTemplateMetadata({encapsulation:ViewEncapsulation.None,template:template,templateUrl:templateUrl,htmlAst:htmlAst,styles:[],styleUrls:[],ngContentSelectors:[],animations:[],isInline:true,externalStylesheets:[],interpolation:null,preserveWhitespaces:false}),exportAs:null,changeDetection:ChangeDetectionStrategy.Default,inputs:[],outputs:[],host:{},isComponent:true,selector:'*',providers:[],viewProviders:[],queries:[],guards:{},viewQueries:[],componentViewType:hostViewType,rendererType:{id:'__Host__',encapsulation:ViewEncapsulation.None,styles:[],data:{}},entryComponents:[],componentFactory:null});};CompileMetadataResolver.prototype.loadDirectiveMetadata=function(ngModuleType,directiveType,isSync){var _this=this;if(this._directiveCache.has(directiveType)){return null;}directiveType=resolveForwardRef(directiveType);var _a=this.getNonNormalizedDirectiveMetadata(directiveType),annotation=_a.annotation,metadata=_a.metadata;var createDirectiveMetadata=function createDirectiveMetadata(templateMetadata){var normalizedDirMeta=new CompileDirectiveMetadata({isHost:false,type:metadata.type,isComponent:metadata.isComponent,selector:metadata.selector,exportAs:metadata.exportAs,changeDetection:metadata.changeDetection,inputs:metadata.inputs,outputs:metadata.outputs,hostListeners:metadata.hostListeners,hostProperties:metadata.hostProperties,hostAttributes:metadata.hostAttributes,providers:metadata.providers,viewProviders:metadata.viewProviders,queries:metadata.queries,guards:metadata.guards,viewQueries:metadata.viewQueries,entryComponents:metadata.entryComponents,componentViewType:metadata.componentViewType,rendererType:metadata.rendererType,componentFactory:metadata.componentFactory,template:templateMetadata});if(templateMetadata){_this.initComponentFactory(metadata.componentFactory,templateMetadata.ngContentSelectors);}_this._directiveCache.set(directiveType,normalizedDirMeta);_this._summaryCache.set(directiveType,normalizedDirMeta.toSummary());return null;};if(metadata.isComponent){var template=metadata.template;var templateMeta=this._directiveNormalizer.normalizeTemplate({ngModuleType:ngModuleType,componentType:directiveType,moduleUrl:this._reflector.componentModuleUrl(directiveType,annotation),encapsulation:template.encapsulation,template:template.template,templateUrl:template.templateUrl,styles:template.styles,styleUrls:template.styleUrls,animations:template.animations,interpolation:template.interpolation,preserveWhitespaces:template.preserveWhitespaces});if(isPromise(templateMeta)&&isSync){this._reportError(componentStillLoadingError(directiveType),directiveType);return null;}return SyncAsync.then(templateMeta,createDirectiveMetadata);}else{// directive
createDirectiveMetadata(null);return null;}};CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata=function(directiveType){var _this=this;directiveType=resolveForwardRef(directiveType);if(!directiveType){return null;}var cacheEntry=this._nonNormalizedDirectiveCache.get(directiveType);if(cacheEntry){return cacheEntry;}var dirMeta=this._directiveResolver.resolve(directiveType,false);if(!dirMeta){return null;}var nonNormalizedTemplateMetadata=undefined;if(createComponent.isTypeOf(dirMeta)){// component
var compMeta=dirMeta;assertArrayOfStrings('styles',compMeta.styles);assertArrayOfStrings('styleUrls',compMeta.styleUrls);assertInterpolationSymbols('interpolation',compMeta.interpolation);var animations=compMeta.animations;nonNormalizedTemplateMetadata=new CompileTemplateMetadata({encapsulation:noUndefined(compMeta.encapsulation),template:noUndefined(compMeta.template),templateUrl:noUndefined(compMeta.templateUrl),htmlAst:null,styles:compMeta.styles||[],styleUrls:compMeta.styleUrls||[],animations:animations||[],interpolation:noUndefined(compMeta.interpolation),isInline:!!compMeta.template,externalStylesheets:[],ngContentSelectors:[],preserveWhitespaces:noUndefined(dirMeta.preserveWhitespaces)});}var changeDetectionStrategy=null;var viewProviders=[];var entryComponentMetadata=[];var selector=dirMeta.selector;if(createComponent.isTypeOf(dirMeta)){// Component
var compMeta=dirMeta;changeDetectionStrategy=compMeta.changeDetection;if(compMeta.viewProviders){viewProviders=this._getProvidersMetadata(compMeta.viewProviders,entryComponentMetadata,"viewProviders for \""+stringifyType(directiveType)+"\"",[],directiveType);}if(compMeta.entryComponents){entryComponentMetadata=flattenAndDedupeArray(compMeta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);}).concat(entryComponentMetadata);}if(!selector){selector=this._schemaRegistry.getDefaultComponentElementName();}}else{// Directive
if(!selector){selector=null;}}var providers=[];if(dirMeta.providers!=null){providers=this._getProvidersMetadata(dirMeta.providers,entryComponentMetadata,"providers for \""+stringifyType(directiveType)+"\"",[],directiveType);}var queries=[];var viewQueries=[];if(dirMeta.queries!=null){queries=this._getQueriesMetadata(dirMeta.queries,false,directiveType);viewQueries=this._getQueriesMetadata(dirMeta.queries,true,directiveType);}var metadata=CompileDirectiveMetadata.create({isHost:false,selector:selector,exportAs:noUndefined(dirMeta.exportAs),isComponent:!!nonNormalizedTemplateMetadata,type:this._getTypeMetadata(directiveType),template:nonNormalizedTemplateMetadata,changeDetection:changeDetectionStrategy,inputs:dirMeta.inputs||[],outputs:dirMeta.outputs||[],host:dirMeta.host||{},providers:providers||[],viewProviders:viewProviders||[],queries:queries||[],guards:dirMeta.guards||{},viewQueries:viewQueries||[],entryComponents:entryComponentMetadata,componentViewType:nonNormalizedTemplateMetadata?this.getComponentViewClass(directiveType):null,rendererType:nonNormalizedTemplateMetadata?this.getRendererType(directiveType):null,componentFactory:null});if(nonNormalizedTemplateMetadata){metadata.componentFactory=this.getComponentFactory(selector,directiveType,metadata.inputs,metadata.outputs);}cacheEntry={metadata:metadata,annotation:dirMeta};this._nonNormalizedDirectiveCache.set(directiveType,cacheEntry);return cacheEntry;};/**
         * Gets the metadata for the given directive.
         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
         */CompileMetadataResolver.prototype.getDirectiveMetadata=function(directiveType){var dirMeta=this._directiveCache.get(directiveType);if(!dirMeta){this._reportError(syntaxError("Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive "+stringifyType(directiveType)+"."),directiveType);}return dirMeta;};CompileMetadataResolver.prototype.getDirectiveSummary=function(dirType){var dirSummary=this._loadSummary(dirType,exports.CompileSummaryKind.Directive);if(!dirSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for directive "+stringifyType(dirType)+"."),dirType);}return dirSummary;};CompileMetadataResolver.prototype.isDirective=function(type){return!!this._loadSummary(type,exports.CompileSummaryKind.Directive)||this._directiveResolver.isDirective(type);};CompileMetadataResolver.prototype.isAbstractDirective=function(type){var summary=this._loadSummary(type,exports.CompileSummaryKind.Directive);if(summary&&!summary.isComponent){return!summary.selector;}var meta=this._directiveResolver.resolve(type,false);if(meta&&!createComponent.isTypeOf(meta)){return!meta.selector;}return false;};CompileMetadataResolver.prototype.isPipe=function(type){return!!this._loadSummary(type,exports.CompileSummaryKind.Pipe)||this._pipeResolver.isPipe(type);};CompileMetadataResolver.prototype.isNgModule=function(type){return!!this._loadSummary(type,exports.CompileSummaryKind.NgModule)||this._ngModuleResolver.isNgModule(type);};CompileMetadataResolver.prototype.getNgModuleSummary=function(moduleType,alreadyCollecting){if(alreadyCollecting===void 0){alreadyCollecting=null;}var moduleSummary=this._loadSummary(moduleType,exports.CompileSummaryKind.NgModule);if(!moduleSummary){var moduleMeta=this.getNgModuleMetadata(moduleType,false,alreadyCollecting);moduleSummary=moduleMeta?moduleMeta.toSummary():null;if(moduleSummary){this._summaryCache.set(moduleType,moduleSummary);}}return moduleSummary;};/**
         * Loads the declared directives and pipes of an NgModule.
         */CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata=function(moduleType,isSync,throwIfNotFound){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModule=this.getNgModuleMetadata(moduleType,throwIfNotFound);var loading=[];if(ngModule){ngModule.declaredDirectives.forEach(function(id){var promise=_this.loadDirectiveMetadata(moduleType,id.reference,isSync);if(promise){loading.push(promise);}});ngModule.declaredPipes.forEach(function(id){return _this._loadPipeMetadata(id.reference);});}return Promise.all(loading);};CompileMetadataResolver.prototype.getShallowModuleMetadata=function(moduleType){var compileMeta=this._shallowModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var ngModuleMeta=findLast(this._reflector.shallowAnnotations(moduleType),createNgModule.isTypeOf);compileMeta={type:this._getTypeMetadata(moduleType),rawExports:ngModuleMeta.exports,rawImports:ngModuleMeta.imports,rawProviders:ngModuleMeta.providers};this._shallowModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype.getNgModuleMetadata=function(moduleType,throwIfNotFound,alreadyCollecting){var _this=this;if(throwIfNotFound===void 0){throwIfNotFound=true;}if(alreadyCollecting===void 0){alreadyCollecting=null;}moduleType=resolveForwardRef(moduleType);var compileMeta=this._ngModuleCache.get(moduleType);if(compileMeta){return compileMeta;}var meta=this._ngModuleResolver.resolve(moduleType,throwIfNotFound);if(!meta){return null;}var declaredDirectives=[];var exportedNonModuleIdentifiers=[];var declaredPipes=[];var importedModules=[];var exportedModules=[];var providers=[];var entryComponents=[];var bootstrapComponents=[];var schemas=[];if(meta.imports){flattenAndDedupeArray(meta.imports).forEach(function(importedType){var importedModuleType=undefined;if(isValidType(importedType)){importedModuleType=importedType;}else if(importedType&&importedType.ngModule){var moduleWithProviders=importedType;importedModuleType=moduleWithProviders.ngModule;if(moduleWithProviders.providers){providers.push.apply(providers,__spread(_this._getProvidersMetadata(moduleWithProviders.providers,entryComponents,"provider for the NgModule '"+stringifyType(importedModuleType)+"'",[],importedType)));}}if(importedModuleType){if(_this._checkSelfImport(moduleType,importedModuleType))return;if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(importedModuleType)){_this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType)+" '"+stringifyType(importedType)+"' is imported recursively by the module '"+stringifyType(moduleType)+"'."),moduleType);return;}alreadyCollecting.add(importedModuleType);var importedModuleSummary=_this.getNgModuleSummary(importedModuleType,alreadyCollecting);alreadyCollecting["delete"](importedModuleType);if(!importedModuleSummary){_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(importedType)+" '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'. Please add a @NgModule annotation."),moduleType);return;}importedModules.push(importedModuleSummary);}else{_this._reportError(syntaxError("Unexpected value '"+stringifyType(importedType)+"' imported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}});}if(meta.exports){flattenAndDedupeArray(meta.exports).forEach(function(exportedType){if(!isValidType(exportedType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(exportedType)+"' exported by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}if(!alreadyCollecting)alreadyCollecting=new Set();if(alreadyCollecting.has(exportedType)){_this._reportError(syntaxError(_this._getTypeDescriptor(exportedType)+" '"+stringify(exportedType)+"' is exported recursively by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}alreadyCollecting.add(exportedType);var exportedModuleSummary=_this.getNgModuleSummary(exportedType,alreadyCollecting);alreadyCollecting["delete"](exportedType);if(exportedModuleSummary){exportedModules.push(exportedModuleSummary);}else{exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));}});}// Note: This will be modified later, so we rely on
// getting a new instance every time!
var transitiveModule=this._getTransitiveNgModuleMetadata(importedModules,exportedModules);if(meta.declarations){flattenAndDedupeArray(meta.declarations).forEach(function(declaredType){if(!isValidType(declaredType)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'"),moduleType);return;}var declaredIdentifier=_this._getIdentifierMetadata(declaredType);if(_this.isDirective(declaredType)){if(_this.isAbstractDirective(declaredType)){_this._reportError(syntaxError("Directive "+stringifyType(declaredType)+" has no selector, please add it!"),declaredType);}transitiveModule.addDirective(declaredIdentifier);declaredDirectives.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else if(_this.isPipe(declaredType)){transitiveModule.addPipe(declaredIdentifier);transitiveModule.pipes.push(declaredIdentifier);declaredPipes.push(declaredIdentifier);_this._addTypeToModule(declaredType,moduleType);}else{_this._reportError(syntaxError("Unexpected "+_this._getTypeDescriptor(declaredType)+" '"+stringifyType(declaredType)+"' declared by the module '"+stringifyType(moduleType)+"'. Please add a @Pipe/@Directive/@Component annotation."),moduleType);return;}});}var exportedDirectives=[];var exportedPipes=[];exportedNonModuleIdentifiers.forEach(function(exportedId){if(transitiveModule.directivesSet.has(exportedId.reference)){exportedDirectives.push(exportedId);transitiveModule.addExportedDirective(exportedId);}else if(transitiveModule.pipesSet.has(exportedId.reference)){exportedPipes.push(exportedId);transitiveModule.addExportedPipe(exportedId);}else{_this._reportError(syntaxError("Can't export "+_this._getTypeDescriptor(exportedId.reference)+" "+stringifyType(exportedId.reference)+" from "+stringifyType(moduleType)+" as it was neither declared nor imported!"),moduleType);return;}});// The providers of the module have to go last
// so that they overwrite any other provider we already added.
if(meta.providers){providers.push.apply(providers,__spread(this._getProvidersMetadata(meta.providers,entryComponents,"provider for the NgModule '"+stringifyType(moduleType)+"'",[],moduleType)));}if(meta.entryComponents){entryComponents.push.apply(entryComponents,__spread(flattenAndDedupeArray(meta.entryComponents).map(function(type){return _this._getEntryComponentMetadata(type);})));}if(meta.bootstrap){flattenAndDedupeArray(meta.bootstrap).forEach(function(type){if(!isValidType(type)){_this._reportError(syntaxError("Unexpected value '"+stringifyType(type)+"' used in the bootstrap property of module '"+stringifyType(moduleType)+"'"),moduleType);return;}bootstrapComponents.push(_this._getIdentifierMetadata(type));});}entryComponents.push.apply(entryComponents,__spread(bootstrapComponents.map(function(type){return _this._getEntryComponentMetadata(type.reference);})));if(meta.schemas){schemas.push.apply(schemas,__spread(flattenAndDedupeArray(meta.schemas)));}compileMeta=new CompileNgModuleMetadata({type:this._getTypeMetadata(moduleType),providers:providers,entryComponents:entryComponents,bootstrapComponents:bootstrapComponents,schemas:schemas,declaredDirectives:declaredDirectives,exportedDirectives:exportedDirectives,declaredPipes:declaredPipes,exportedPipes:exportedPipes,importedModules:importedModules,exportedModules:exportedModules,transitiveModule:transitiveModule,id:meta.id||null});entryComponents.forEach(function(id){return transitiveModule.addEntryComponent(id);});providers.forEach(function(provider){return transitiveModule.addProvider(provider,compileMeta.type);});transitiveModule.addModule(compileMeta.type);this._ngModuleCache.set(moduleType,compileMeta);return compileMeta;};CompileMetadataResolver.prototype._checkSelfImport=function(moduleType,importedModuleType){if(moduleType===importedModuleType){this._reportError(syntaxError("'"+stringifyType(moduleType)+"' module can't import itself"),moduleType);return true;}return false;};CompileMetadataResolver.prototype._getTypeDescriptor=function(type){if(isValidType(type)){if(this.isDirective(type)){return'directive';}if(this.isPipe(type)){return'pipe';}if(this.isNgModule(type)){return'module';}}if(type.provide){return'provider';}return'value';};CompileMetadataResolver.prototype._addTypeToModule=function(type,moduleType){var oldModule=this._ngModuleOfTypes.get(type);if(oldModule&&oldModule!==moduleType){this._reportError(syntaxError("Type "+stringifyType(type)+" is part of the declarations of 2 modules: "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+"! "+("Please consider moving "+stringifyType(type)+" to a higher module that imports "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+". ")+("You can also create a new NgModule that exports and includes "+stringifyType(type)+" then import that NgModule in "+stringifyType(oldModule)+" and "+stringifyType(moduleType)+".")),moduleType);return;}this._ngModuleOfTypes.set(type,moduleType);};CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata=function(importedModules,exportedModules){// collect `providers` / `entryComponents` from all imported and all exported modules
var result=new TransitiveCompileNgModuleMetadata();var modulesByToken=new Map();importedModules.concat(exportedModules).forEach(function(modSummary){modSummary.modules.forEach(function(mod){return result.addModule(mod);});modSummary.entryComponents.forEach(function(comp){return result.addEntryComponent(comp);});var addedTokens=new Set();modSummary.providers.forEach(function(entry){var tokenRef=tokenReference(entry.provider.token);var prevModules=modulesByToken.get(tokenRef);if(!prevModules){prevModules=new Set();modulesByToken.set(tokenRef,prevModules);}var moduleRef=entry.module.reference;// Note: the providers of one module may still contain multiple providers
// per token (e.g. for multi providers), and we need to preserve these.
if(addedTokens.has(tokenRef)||!prevModules.has(moduleRef)){prevModules.add(moduleRef);addedTokens.add(tokenRef);result.addProvider(entry.provider,entry.module);}});});exportedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addExportedDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addExportedPipe(id);});});importedModules.forEach(function(modSummary){modSummary.exportedDirectives.forEach(function(id){return result.addDirective(id);});modSummary.exportedPipes.forEach(function(id){return result.addPipe(id);});});return result;};CompileMetadataResolver.prototype._getIdentifierMetadata=function(type){type=resolveForwardRef(type);return{reference:type};};CompileMetadataResolver.prototype.isInjectable=function(type){var annotations=this._reflector.tryAnnotations(type);return annotations.some(function(ann){return createInjectable.isTypeOf(ann);});};CompileMetadataResolver.prototype.getInjectableSummary=function(type){return{summaryKind:exports.CompileSummaryKind.Injectable,type:this._getTypeMetadata(type,null,false)};};CompileMetadataResolver.prototype.getInjectableMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var typeSummary=this._loadSummary(type,exports.CompileSummaryKind.Injectable);var typeMetadata=typeSummary?typeSummary.type:this._getTypeMetadata(type,dependencies,throwOnUnknownDeps);var annotations=this._reflector.annotations(type).filter(function(ann){return createInjectable.isTypeOf(ann);});if(annotations.length===0){return null;}var meta=annotations[annotations.length-1];return{symbol:type,type:typeMetadata,providedIn:meta.providedIn,useValue:meta.useValue,useClass:meta.useClass,useExisting:meta.useExisting,useFactory:meta.useFactory,deps:meta.deps};};CompileMetadataResolver.prototype._getTypeMetadata=function(type,dependencies,throwOnUnknownDeps){if(dependencies===void 0){dependencies=null;}if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var identifier=this._getIdentifierMetadata(type);return{reference:identifier.reference,diDeps:this._getDependenciesMetadata(identifier.reference,dependencies,throwOnUnknownDeps),lifecycleHooks:getAllLifecycleHooks(this._reflector,identifier.reference)};};CompileMetadataResolver.prototype._getFactoryMetadata=function(factory,dependencies){if(dependencies===void 0){dependencies=null;}factory=resolveForwardRef(factory);return{reference:factory,diDeps:this._getDependenciesMetadata(factory,dependencies)};};/**
         * Gets the metadata for the given pipe.
         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.
         */CompileMetadataResolver.prototype.getPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){this._reportError(syntaxError("Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeMeta||null;};CompileMetadataResolver.prototype.getPipeSummary=function(pipeType){var pipeSummary=this._loadSummary(pipeType,exports.CompileSummaryKind.Pipe);if(!pipeSummary){this._reportError(syntaxError("Illegal state: Could not load the summary for pipe "+stringifyType(pipeType)+"."),pipeType);}return pipeSummary;};CompileMetadataResolver.prototype.getOrLoadPipeMetadata=function(pipeType){var pipeMeta=this._pipeCache.get(pipeType);if(!pipeMeta){pipeMeta=this._loadPipeMetadata(pipeType);}return pipeMeta;};CompileMetadataResolver.prototype._loadPipeMetadata=function(pipeType){pipeType=resolveForwardRef(pipeType);var pipeAnnotation=this._pipeResolver.resolve(pipeType);var pipeMeta=new CompilePipeMetadata({type:this._getTypeMetadata(pipeType),name:pipeAnnotation.name,pure:!!pipeAnnotation.pure});this._pipeCache.set(pipeType,pipeMeta);this._summaryCache.set(pipeType,pipeMeta.toSummary());return pipeMeta;};CompileMetadataResolver.prototype._getDependenciesMetadata=function(typeOrFunc,dependencies,throwOnUnknownDeps){var _this=this;if(throwOnUnknownDeps===void 0){throwOnUnknownDeps=true;}var hasUnknownDeps=false;var params=dependencies||this._reflector.parameters(typeOrFunc)||[];var dependenciesMetadata=params.map(function(param){var isAttribute=false;var isHost=false;var isSelf=false;var isSkipSelf=false;var isOptional=false;var token=null;if(Array.isArray(param)){param.forEach(function(paramEntry){if(createHost.isTypeOf(paramEntry)){isHost=true;}else if(createSelf.isTypeOf(paramEntry)){isSelf=true;}else if(createSkipSelf.isTypeOf(paramEntry)){isSkipSelf=true;}else if(createOptional.isTypeOf(paramEntry)){isOptional=true;}else if(createAttribute.isTypeOf(paramEntry)){isAttribute=true;token=paramEntry.attributeName;}else if(createInject.isTypeOf(paramEntry)){token=paramEntry.token;}else if(createInjectionToken.isTypeOf(paramEntry)||paramEntry instanceof StaticSymbol){token=paramEntry;}else if(isValidType(paramEntry)&&token==null){token=paramEntry;}});}else{token=param;}if(token==null){hasUnknownDeps=true;return{};}return{isAttribute:isAttribute,isHost:isHost,isSelf:isSelf,isSkipSelf:isSkipSelf,isOptional:isOptional,token:_this._getTokenMetadata(token)};});if(hasUnknownDeps){var depsTokens=dependenciesMetadata.map(function(dep){return dep.token?stringifyType(dep.token):'?';}).join(', ');var message="Can't resolve all parameters for "+stringifyType(typeOrFunc)+": ("+depsTokens+").";if(throwOnUnknownDeps||this._config.strictInjectionParameters){this._reportError(syntaxError(message),typeOrFunc);}else{this._console.warn("Warning: "+message+" This will become an error in Angular v6.x");}}return dependenciesMetadata;};CompileMetadataResolver.prototype._getTokenMetadata=function(token){token=resolveForwardRef(token);var compileToken;if(typeof token==='string'){compileToken={value:token};}else{compileToken={identifier:{reference:token}};}return compileToken;};CompileMetadataResolver.prototype._getProvidersMetadata=function(providers,targetEntryComponents,debugInfo,compileProviders,type){var _this=this;if(compileProviders===void 0){compileProviders=[];}providers.forEach(function(provider,providerIdx){if(Array.isArray(provider)){_this._getProvidersMetadata(provider,targetEntryComponents,debugInfo,compileProviders);}else{provider=resolveForwardRef(provider);var providerMeta=undefined;if(provider&&_typeof(provider)==='object'&&provider.hasOwnProperty('provide')){_this._validateProvider(provider);providerMeta=new ProviderMeta(provider.provide,provider);}else if(isValidType(provider)){providerMeta=new ProviderMeta(provider,{useClass:provider});}else if(provider===void 0){_this._reportError(syntaxError("Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files."));return;}else{var providersInfo=providers.reduce(function(soFar,seenProvider,seenProviderIdx){if(seenProviderIdx<providerIdx){soFar.push(""+stringifyType(seenProvider));}else if(seenProviderIdx==providerIdx){soFar.push("?"+stringifyType(seenProvider)+"?");}else if(seenProviderIdx==providerIdx+1){soFar.push('...');}return soFar;},[]).join(', ');_this._reportError(syntaxError("Invalid "+(debugInfo?debugInfo:'provider')+" - only instances of Provider and Type are allowed, got: ["+providersInfo+"]"),type);return;}if(providerMeta.token===_this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)){targetEntryComponents.push.apply(targetEntryComponents,__spread(_this._getEntryComponentsFromProvider(providerMeta,type)));}else{compileProviders.push(_this.getProviderMetadata(providerMeta));}}});return compileProviders;};CompileMetadataResolver.prototype._validateProvider=function(provider){if(provider.hasOwnProperty('useClass')&&provider.useClass==null){this._reportError(syntaxError("Invalid provider for "+stringifyType(provider.provide)+". useClass cannot be "+provider.useClass+".\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case."));}};CompileMetadataResolver.prototype._getEntryComponentsFromProvider=function(provider,type){var _this=this;var components=[];var collectedIdentifiers=[];if(provider.useFactory||provider.useExisting||provider.useClass){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!"),type);return[];}if(!provider.multi){this._reportError(syntaxError("The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!"),type);return[];}extractIdentifiers(provider.useValue,collectedIdentifiers);collectedIdentifiers.forEach(function(identifier){var entry=_this._getEntryComponentMetadata(identifier.reference,false);if(entry){components.push(entry);}});return components;};CompileMetadataResolver.prototype._getEntryComponentMetadata=function(dirType,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var dirMeta=this.getNonNormalizedDirectiveMetadata(dirType);if(dirMeta&&dirMeta.metadata.isComponent){return{componentType:dirType,componentFactory:dirMeta.metadata.componentFactory};}var dirSummary=this._loadSummary(dirType,exports.CompileSummaryKind.Directive);if(dirSummary&&dirSummary.isComponent){return{componentType:dirType,componentFactory:dirSummary.componentFactory};}if(throwIfNotFound){throw syntaxError(dirType.name+" cannot be used as an entry component.");}return null;};CompileMetadataResolver.prototype._getInjectableTypeMetadata=function(type,dependencies){if(dependencies===void 0){dependencies=null;}var typeSummary=this._loadSummary(type,exports.CompileSummaryKind.Injectable);if(typeSummary){return typeSummary.type;}return this._getTypeMetadata(type,dependencies);};CompileMetadataResolver.prototype.getProviderMetadata=function(provider){var compileDeps=undefined;var compileTypeMetadata=null;var compileFactoryMetadata=null;var token=this._getTokenMetadata(provider.token);if(provider.useClass){compileTypeMetadata=this._getInjectableTypeMetadata(provider.useClass,provider.dependencies);compileDeps=compileTypeMetadata.diDeps;if(provider.token===provider.useClass){// use the compileTypeMetadata as it contains information about lifecycleHooks...
token={identifier:compileTypeMetadata};}}else if(provider.useFactory){compileFactoryMetadata=this._getFactoryMetadata(provider.useFactory,provider.dependencies);compileDeps=compileFactoryMetadata.diDeps;}return{token:token,useClass:compileTypeMetadata,useValue:provider.useValue,useFactory:compileFactoryMetadata,useExisting:provider.useExisting?this._getTokenMetadata(provider.useExisting):undefined,deps:compileDeps,multi:provider.multi};};CompileMetadataResolver.prototype._getQueriesMetadata=function(queries,isViewQuery,directiveType){var _this=this;var res=[];Object.keys(queries).forEach(function(propertyName){var query=queries[propertyName];if(query.isViewQuery===isViewQuery){res.push(_this._getQueryMetadata(query,propertyName,directiveType));}});return res;};CompileMetadataResolver.prototype._queryVarBindings=function(selector){return selector.split(/\s*,\s*/);};CompileMetadataResolver.prototype._getQueryMetadata=function(q,propertyName,typeOrFunc){var _this=this;var selectors;if(typeof q.selector==='string'){selectors=this._queryVarBindings(q.selector).map(function(varName){return _this._getTokenMetadata(varName);});}else{if(!q.selector){this._reportError(syntaxError("Can't construct a query for the property \""+propertyName+"\" of \""+stringifyType(typeOrFunc)+"\" since the query selector wasn't defined."),typeOrFunc);selectors=[];}else{selectors=[this._getTokenMetadata(q.selector)];}}return{selectors:selectors,first:q.first,descendants:q.descendants,propertyName:propertyName,read:q.read?this._getTokenMetadata(q.read):null,"static":q["static"]};};CompileMetadataResolver.prototype._reportError=function(error,type,otherType){if(this._errorCollector){this._errorCollector(error,type);if(otherType){this._errorCollector(error,otherType);}}else{throw error;}};return CompileMetadataResolver;}();function flattenArray(tree,out){if(out===void 0){out=[];}if(tree){for(var i=0;i<tree.length;i++){var item=resolveForwardRef(tree[i]);if(Array.isArray(item)){flattenArray(item,out);}else{out.push(item);}}}return out;}function dedupeArray(array){if(array){return Array.from(new Set(array));}return[];}function flattenAndDedupeArray(tree){return dedupeArray(flattenArray(tree));}function isValidType(value){return value instanceof StaticSymbol||value instanceof Type;}function extractIdentifiers(value,targetIdentifiers){visitValue(value,new _CompileValueConverter(),targetIdentifiers);}var _CompileValueConverter=/** @class */function(_super){__extends(_CompileValueConverter,_super);function _CompileValueConverter(){return _super!==null&&_super.apply(this,arguments)||this;}_CompileValueConverter.prototype.visitOther=function(value,targetIdentifiers){targetIdentifiers.push({reference:value});};return _CompileValueConverter;}(ValueTransformer);function stringifyType(type){if(type instanceof StaticSymbol){return type.name+" in "+type.filePath;}else{return stringify(type);}}/**
     * Indicates that a component is still being loaded in a synchronous compile.
     */function componentStillLoadingError(compType){var error=Error("Can't compile synchronously as "+stringify(compType)+" is still being loaded!");error[ERROR_COMPONENT_TYPE]=compType;return error;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function providerDef(ctx,providerAst){var flags=0/* None */;if(!providerAst.eager){flags|=4096/* LazyProvider */;}if(providerAst.providerType===exports.ProviderAstType.PrivateService){flags|=8192/* PrivateProvider */;}if(providerAst.isModule){flags|=1073741824/* TypeModuleProvider */;}providerAst.lifecycleHooks.forEach(function(lifecycleHook){// for regular providers, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy||providerAst.providerType===exports.ProviderAstType.Directive||providerAst.providerType===exports.ProviderAstType.Component){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var _a=providerAst.multiProvider?multiProviderDef(ctx,flags,providerAst.providers):singleProviderDef(ctx,flags,providerAst.providerType,providerAst.providers[0]),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,providerAst.token)};}function multiProviderDef(ctx,flags,providers){var allDepDefs=[];var allParams=[];var exprs=providers.map(function(provider,providerIndex){var expr;if(provider.useClass){var depExprs=convertDeps(providerIndex,provider.deps||provider.useClass.diDeps);expr=ctx.importExpr(provider.useClass.reference).instantiate(depExprs);}else if(provider.useFactory){var depExprs=convertDeps(providerIndex,provider.deps||provider.useFactory.diDeps);expr=ctx.importExpr(provider.useFactory.reference).callFn(depExprs);}else if(provider.useExisting){var depExprs=convertDeps(providerIndex,[{token:provider.useExisting}]);expr=depExprs[0];}else{expr=convertValueToOutputAst(ctx,provider.useValue);}return expr;});var providerExpr=fn(allParams,[new ReturnStatement(literalArr(exprs))],INFERRED_TYPE);return{providerExpr:providerExpr,flags:flags|1024/* TypeFactoryProvider */,depsExpr:literalArr(allDepDefs)};function convertDeps(providerIndex,deps){return deps.map(function(dep,depIndex){var paramName="p"+providerIndex+"_"+depIndex;allParams.push(new FnParam(paramName,DYNAMIC_TYPE));allDepDefs.push(depDef(ctx,dep));return variable(paramName);});}}function singleProviderDef(ctx,flags,providerType,providerMeta){var providerExpr;var deps;if(providerType===exports.ProviderAstType.Directive||providerType===exports.ProviderAstType.Component){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=16384/* TypeDirective */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else{if(providerMeta.useClass){providerExpr=ctx.importExpr(providerMeta.useClass.reference);flags|=512/* TypeClassProvider */;deps=providerMeta.deps||providerMeta.useClass.diDeps;}else if(providerMeta.useFactory){providerExpr=ctx.importExpr(providerMeta.useFactory.reference);flags|=1024/* TypeFactoryProvider */;deps=providerMeta.deps||providerMeta.useFactory.diDeps;}else if(providerMeta.useExisting){providerExpr=NULL_EXPR;flags|=2048/* TypeUseExistingProvider */;deps=[{token:providerMeta.useExisting}];}else{providerExpr=convertValueToOutputAst(ctx,providerMeta.useValue);flags|=256/* TypeValueProvider */;deps=[];}}var depsExpr=literalArr(deps.map(function(dep){return depDef(ctx,dep);}));return{providerExpr:providerExpr,flags:flags,depsExpr:depsExpr};}function tokenExpr(ctx,tokenMeta){return tokenMeta.identifier?ctx.importExpr(tokenMeta.identifier.reference):literal(tokenMeta.value);}function depDef(ctx,dep){// Note: the following fields have already been normalized out by provider_analyzer:
// - isAttribute, isHost
var expr=dep.isValue?convertValueToOutputAst(ctx,dep.value):tokenExpr(ctx,dep.token);var flags=0/* None */;if(dep.isSkipSelf){flags|=1/* SkipSelf */;}if(dep.isOptional){flags|=2/* Optional */;}if(dep.isSelf){flags|=4/* Self */;}if(dep.isValue){flags|=8/* Value */;}return flags===0/* None */?expr:literalArr([literal(flags),expr]);}function lifecycleHookToNodeFlag(lifecycleHook){var nodeFlag=0/* None */;switch(lifecycleHook){case LifecycleHooks.AfterContentChecked:nodeFlag=2097152/* AfterContentChecked */;break;case LifecycleHooks.AfterContentInit:nodeFlag=1048576/* AfterContentInit */;break;case LifecycleHooks.AfterViewChecked:nodeFlag=8388608/* AfterViewChecked */;break;case LifecycleHooks.AfterViewInit:nodeFlag=4194304/* AfterViewInit */;break;case LifecycleHooks.DoCheck:nodeFlag=262144/* DoCheck */;break;case LifecycleHooks.OnChanges:nodeFlag=524288/* OnChanges */;break;case LifecycleHooks.OnDestroy:nodeFlag=131072/* OnDestroy */;break;case LifecycleHooks.OnInit:nodeFlag=65536/* OnInit */;break;}return nodeFlag;}function componentFactoryResolverProviderDef(reflector,ctx,flags,entryComponents){var entryComponentFactories=entryComponents.map(function(entryComponent){return ctx.importExpr(entryComponent.componentFactory);});var token=createTokenForExternalReference(reflector,Identifiers.ComponentFactoryResolver);var classMeta={diDeps:[{isValue:true,value:literalArr(entryComponentFactories)},{token:token,isSkipSelf:true,isOptional:true},{token:createTokenForExternalReference(reflector,Identifiers.NgModuleRef)}],lifecycleHooks:[],reference:reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)};var _a=singleProviderDef(ctx,flags,exports.ProviderAstType.PrivateService,{token:token,multi:false,useClass:classMeta}),providerExpr=_a.providerExpr,providerFlags=_a.flags,depsExpr=_a.depsExpr;return{providerExpr:providerExpr,flags:providerFlags,depsExpr:depsExpr,tokenExpr:tokenExpr(ctx,token)};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NgModuleCompileResult=/** @class */function(){function NgModuleCompileResult(ngModuleFactoryVar){this.ngModuleFactoryVar=ngModuleFactoryVar;}return NgModuleCompileResult;}();var LOG_VAR=variable('_l');var NgModuleCompiler=/** @class */function(){function NgModuleCompiler(reflector){this.reflector=reflector;}NgModuleCompiler.prototype.compile=function(ctx,ngModuleMeta,extraProviders){var sourceSpan=typeSourceSpan('NgModule',ngModuleMeta.type);var entryComponentFactories=ngModuleMeta.transitiveModule.entryComponents;var bootstrapComponents=ngModuleMeta.bootstrapComponents;var providerParser=new NgModuleProviderAnalyzer(this.reflector,ngModuleMeta,extraProviders,sourceSpan);var providerDefs=[componentFactoryResolverProviderDef(this.reflector,ctx,0/* None */,entryComponentFactories)].concat(providerParser.parse().map(function(provider){return providerDef(ctx,provider);})).map(function(_a){var providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;return importExpr(Identifiers.moduleProviderDef).callFn([literal(flags),tokenExpr,providerExpr,depsExpr]);});var ngModuleDef=importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);var ngModuleDefFactory=fn([new FnParam(LOG_VAR.name)],[new ReturnStatement(ngModuleDef)],INFERRED_TYPE);var ngModuleFactoryVar=identifierName(ngModuleMeta.type)+"NgFactory";this._createNgModuleFactory(ctx,ngModuleMeta.type.reference,importExpr(Identifiers.createModuleFactory).callFn([ctx.importExpr(ngModuleMeta.type.reference),literalArr(bootstrapComponents.map(function(id){return ctx.importExpr(id.reference);})),ngModuleDefFactory]));if(ngModuleMeta.id){var id=typeof ngModuleMeta.id==='string'?literal(ngModuleMeta.id):ctx.importExpr(ngModuleMeta.id);var registerFactoryStmt=importExpr(Identifiers.RegisterModuleFactoryFn).callFn([id,variable(ngModuleFactoryVar)]).toStmt();ctx.statements.push(registerFactoryStmt);}return new NgModuleCompileResult(ngModuleFactoryVar);};NgModuleCompiler.prototype.createStub=function(ctx,ngModuleReference){this._createNgModuleFactory(ctx,ngModuleReference,NULL_EXPR);};NgModuleCompiler.prototype._createNgModuleFactory=function(ctx,reference,value){var ngModuleFactoryVar=identifierName({reference:reference})+"NgFactory";var ngModuleFactoryStmt=variable(ngModuleFactoryVar).set(value).toDeclStmt(importType(Identifiers.NgModuleFactory,[expressionType(ctx.importExpr(reference))],[TypeModifier.Const]),[exports.StmtModifier.Final,exports.StmtModifier.Exported]);ctx.statements.push(ngModuleFactoryStmt);};return NgModuleCompiler;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Resolves types to {@link NgModule}.
     */var NgModuleResolver=/** @class */function(){function NgModuleResolver(_reflector){this._reflector=_reflector;}NgModuleResolver.prototype.isNgModule=function(type){return this._reflector.annotations(type).some(createNgModule.isTypeOf);};NgModuleResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var ngModuleMeta=findLast(this._reflector.annotations(type),createNgModule.isTypeOf);if(ngModuleMeta){return ngModuleMeta;}else{if(throwIfNotFound){throw new Error("No NgModule metadata found for '"+stringify(type)+"'.");}return null;}};return NgModuleResolver;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _debugFilePath='/debug/lib';function debugOutputAstAsTypeScript(ast){var converter=new _TsEmitterVisitor();var ctx=EmitterVisitorContext.createRoot();var asts=Array.isArray(ast)?ast:[ast];asts.forEach(function(ast){if(ast instanceof Statement){ast.visitStatement(converter,ctx);}else if(ast instanceof Expression){ast.visitExpression(converter,ctx);}else if(ast instanceof Type$1){ast.visitType(converter,ctx);}else{throw new Error("Don't know how to print debug info for "+ast);}});return ctx.toSource();}var TypeScriptEmitter=/** @class */function(){function TypeScriptEmitter(){}TypeScriptEmitter.prototype.emitStatementsAndContext=function(genFilePath,stmts,preamble,emitSourceMaps,referenceFilter,importFilter){if(preamble===void 0){preamble='';}if(emitSourceMaps===void 0){emitSourceMaps=true;}var converter=new _TsEmitterVisitor(referenceFilter,importFilter);var ctx=EmitterVisitorContext.createRoot();converter.visitAllStatements(stmts,ctx);var preambleLines=preamble?preamble.split('\n'):[];converter.reexports.forEach(function(reexports,exportedModuleName){var reexportsCode=reexports.map(function(reexport){return reexport.name+" as "+reexport.as;}).join(',');preambleLines.push("export {"+reexportsCode+"} from '"+exportedModuleName+"';");});converter.importsWithPrefixes.forEach(function(prefix,importedModuleName){// Note: can't write the real word for import as it screws up system.js auto detection...
preambleLines.push("imp"+("ort * as "+prefix+" from '"+importedModuleName+"';"));});var sm=emitSourceMaps?ctx.toSourceMapGenerator(genFilePath,preambleLines.length).toJsComment():'';var lines=__spread(preambleLines,[ctx.toSource(),sm]);if(sm){// always add a newline at the end, as some tools have bugs without it.
lines.push('');}ctx.setPreambleLineCount(preambleLines.length);return{sourceText:lines.join('\n'),context:ctx};};TypeScriptEmitter.prototype.emitStatements=function(genFilePath,stmts,preamble){if(preamble===void 0){preamble='';}return this.emitStatementsAndContext(genFilePath,stmts,preamble).sourceText;};return TypeScriptEmitter;}();var _TsEmitterVisitor=/** @class */function(_super){__extends(_TsEmitterVisitor,_super);function _TsEmitterVisitor(referenceFilter,importFilter){var _this=_super.call(this,false)||this;_this.referenceFilter=referenceFilter;_this.importFilter=importFilter;_this.typeExpression=0;_this.importsWithPrefixes=new Map();_this.reexports=new Map();return _this;}_TsEmitterVisitor.prototype.visitType=function(t,ctx,defaultType){if(defaultType===void 0){defaultType='any';}if(t){this.typeExpression++;t.visitType(this,ctx);this.typeExpression--;}else{ctx.print(null,defaultType);}};_TsEmitterVisitor.prototype.visitLiteralExpr=function(ast,ctx){var value=ast.value;if(value==null&&ast.type!=INFERRED_TYPE){ctx.print(ast,"("+value+" as any)");return null;}return _super.prototype.visitLiteralExpr.call(this,ast,ctx);};// Temporary workaround to support strictNullCheck enabled consumers of ngc emit.
// In SNC mode, [] have the type never[], so we cast here to any[].
// TODO: narrow the cast to a more explicit type, or use a pattern that does not
// start with [].concat. see https://github.com/angular/angular/pull/11846
_TsEmitterVisitor.prototype.visitLiteralArrayExpr=function(ast,ctx){if(ast.entries.length===0){ctx.print(ast,'(');}var result=_super.prototype.visitLiteralArrayExpr.call(this,ast,ctx);if(ast.entries.length===0){ctx.print(ast,' as any[])');}return result;};_TsEmitterVisitor.prototype.visitExternalExpr=function(ast,ctx){this._visitIdentifier(ast.value,ast.typeParams,ctx);return null;};_TsEmitterVisitor.prototype.visitAssertNotNullExpr=function(ast,ctx){var result=_super.prototype.visitAssertNotNullExpr.call(this,ast,ctx);ctx.print(ast,'!');return result;};_TsEmitterVisitor.prototype.visitDeclareVarStmt=function(stmt,ctx){if(stmt.hasModifier(exports.StmtModifier.Exported)&&stmt.value instanceof ExternalExpr&&!stmt.type){// check for a reexport
var _a=stmt.value.value,name_1=_a.name,moduleName=_a.moduleName;if(moduleName){var reexports=this.reexports.get(moduleName);if(!reexports){reexports=[];this.reexports.set(moduleName,reexports);}reexports.push({name:name_1,as:stmt.name});return null;}}if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.print(stmt,"export ");}if(stmt.hasModifier(exports.StmtModifier.Final)){ctx.print(stmt,"const");}else{ctx.print(stmt,"var");}ctx.print(stmt," "+stmt.name);this._printColonType(stmt.type,ctx);if(stmt.value){ctx.print(stmt," = ");stmt.value.visitExpression(this,ctx);}ctx.println(stmt,";");return null;};_TsEmitterVisitor.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');};_TsEmitterVisitor.prototype.visitCastExpr=function(ast,ctx){ctx.print(ast,"(<");ast.type.visitType(this,ctx);ctx.print(ast,">");ast.value.visitExpression(this,ctx);ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitInstantiateExpr=function(ast,ctx){ctx.print(ast,"new ");this.typeExpression++;ast.classExpr.visitExpression(this,ctx);this.typeExpression--;ctx.print(ast,"(");this.visitAllExpressions(ast.args,ctx,',');ctx.print(ast,")");return null;};_TsEmitterVisitor.prototype.visitDeclareClassStmt=function(stmt,ctx){var _this=this;ctx.pushClass(stmt);if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"class "+stmt.name);if(stmt.parent!=null){ctx.print(stmt," extends ");this.typeExpression++;stmt.parent.visitExpression(this,ctx);this.typeExpression--;}ctx.println(stmt," {");ctx.incIndent();stmt.fields.forEach(function(field){return _this._visitClassField(field,ctx);});if(stmt.constructorMethod!=null){this._visitClassConstructor(stmt,ctx);}stmt.getters.forEach(function(getter){return _this._visitClassGetter(getter,ctx);});stmt.methods.forEach(function(method){return _this._visitClassMethod(method,ctx);});ctx.decIndent();ctx.println(stmt,"}");ctx.popClass();return null;};_TsEmitterVisitor.prototype._visitClassField=function(field,ctx){if(field.hasModifier(exports.StmtModifier.Private)){// comment out as a workaround for #10967
ctx.print(null,"/*private*/ ");}if(field.hasModifier(exports.StmtModifier.Static)){ctx.print(null,'static ');}ctx.print(null,field.name);this._printColonType(field.type,ctx);if(field.initializer){ctx.print(null,' = ');field.initializer.visitExpression(this,ctx);}ctx.println(null,";");};_TsEmitterVisitor.prototype._visitClassGetter=function(getter,ctx){if(getter.hasModifier(exports.StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,"get "+getter.name+"()");this._printColonType(getter.type,ctx);ctx.println(null," {");ctx.incIndent();this.visitAllStatements(getter.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype._visitClassConstructor=function(stmt,ctx){ctx.print(stmt,"constructor(");this._visitParams(stmt.constructorMethod.params,ctx);ctx.println(stmt,") {");ctx.incIndent();this.visitAllStatements(stmt.constructorMethod.body,ctx);ctx.decIndent();ctx.println(stmt,"}");};_TsEmitterVisitor.prototype._visitClassMethod=function(method,ctx){if(method.hasModifier(exports.StmtModifier.Private)){ctx.print(null,"private ");}ctx.print(null,method.name+"(");this._visitParams(method.params,ctx);ctx.print(null,")");this._printColonType(method.type,ctx,'void');ctx.println(null," {");ctx.incIndent();this.visitAllStatements(method.body,ctx);ctx.decIndent();ctx.println(null,"}");};_TsEmitterVisitor.prototype.visitFunctionExpr=function(ast,ctx){if(ast.name){ctx.print(ast,'function ');ctx.print(ast,ast.name);}ctx.print(ast,"(");this._visitParams(ast.params,ctx);ctx.print(ast,")");this._printColonType(ast.type,ctx,'void');if(!ast.name){ctx.print(ast," => ");}ctx.println(ast,'{');ctx.incIndent();this.visitAllStatements(ast.statements,ctx);ctx.decIndent();ctx.print(ast,"}");return null;};_TsEmitterVisitor.prototype.visitDeclareFunctionStmt=function(stmt,ctx){if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.print(stmt,"export ");}ctx.print(stmt,"function "+stmt.name+"(");this._visitParams(stmt.params,ctx);ctx.print(stmt,")");this._printColonType(stmt.type,ctx,'void');ctx.println(stmt," {");ctx.incIndent();this.visitAllStatements(stmt.statements,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitTryCatchStmt=function(stmt,ctx){ctx.println(stmt,"try {");ctx.incIndent();this.visitAllStatements(stmt.bodyStmts,ctx);ctx.decIndent();ctx.println(stmt,"} catch ("+CATCH_ERROR_VAR$1.name+") {");ctx.incIndent();var catchStmts=[CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack',null)).toDeclStmt(null,[exports.StmtModifier.Final])].concat(stmt.catchStmts);this.visitAllStatements(catchStmts,ctx);ctx.decIndent();ctx.println(stmt,"}");return null;};_TsEmitterVisitor.prototype.visitBuiltinType=function(type,ctx){var typeStr;switch(type.name){case exports.BuiltinTypeName.Bool:typeStr='boolean';break;case exports.BuiltinTypeName.Dynamic:typeStr='any';break;case exports.BuiltinTypeName.Function:typeStr='Function';break;case exports.BuiltinTypeName.Number:typeStr='number';break;case exports.BuiltinTypeName.Int:typeStr='number';break;case exports.BuiltinTypeName.String:typeStr='string';break;case exports.BuiltinTypeName.None:typeStr='never';break;default:throw new Error("Unsupported builtin type "+type.name);}ctx.print(null,typeStr);return null;};_TsEmitterVisitor.prototype.visitExpressionType=function(ast,ctx){var _this=this;ast.value.visitExpression(this,ctx);if(ast.typeParams!==null){ctx.print(null,'<');this.visitAllObjects(function(type){return _this.visitType(type,ctx);},ast.typeParams,ctx,',');ctx.print(null,'>');}return null;};_TsEmitterVisitor.prototype.visitArrayType=function(type,ctx){this.visitType(type.of,ctx);ctx.print(null,"[]");return null;};_TsEmitterVisitor.prototype.visitMapType=function(type,ctx){ctx.print(null,"{[key: string]:");this.visitType(type.valueType,ctx);ctx.print(null,"}");return null;};_TsEmitterVisitor.prototype.getBuiltinMethodName=function(method){var name;switch(method){case exports.BuiltinMethod.ConcatArray:name='concat';break;case exports.BuiltinMethod.SubscribeObservable:name='subscribe';break;case exports.BuiltinMethod.Bind:name='bind';break;default:throw new Error("Unknown builtin method: "+method);}return name;};_TsEmitterVisitor.prototype._visitParams=function(params,ctx){var _this=this;this.visitAllObjects(function(param){ctx.print(null,param.name);_this._printColonType(param.type,ctx);},params,ctx,',');};_TsEmitterVisitor.prototype._visitIdentifier=function(value,typeParams,ctx){var _this=this;var name=value.name,moduleName=value.moduleName;if(this.referenceFilter&&this.referenceFilter(value)){ctx.print(null,'(null as any)');return;}if(moduleName&&(!this.importFilter||!this.importFilter(value))){var prefix=this.importsWithPrefixes.get(moduleName);if(prefix==null){prefix="i"+this.importsWithPrefixes.size;this.importsWithPrefixes.set(moduleName,prefix);}ctx.print(null,prefix+".");}ctx.print(null,name);if(this.typeExpression>0){// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedParameters=typeParams||[];if(suppliedParameters.length>0){ctx.print(null,"<");this.visitAllObjects(function(type){return type.visitType(_this,ctx);},typeParams,ctx,',');ctx.print(null,">");}}};_TsEmitterVisitor.prototype._printColonType=function(type,ctx,defaultType){if(type!==INFERRED_TYPE){ctx.print(null,':');this.visitType(type,ctx,defaultType);}};return _TsEmitterVisitor;}(AbstractEmitterVisitor);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Resolve a `Type` for {@link Pipe}.
     *
     * This interface can be overridden by the application developer to create custom behavior.
     *
     * See {@link Compiler}
     */var PipeResolver=/** @class */function(){function PipeResolver(_reflector){this._reflector=_reflector;}PipeResolver.prototype.isPipe=function(type){var typeMetadata=this._reflector.annotations(resolveForwardRef(type));return typeMetadata&&typeMetadata.some(createPipe.isTypeOf);};/**
         * Return {@link Pipe} for a given `Type`.
         */PipeResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}var metas=this._reflector.annotations(resolveForwardRef(type));if(metas){var annotation=findLast(metas,createPipe.isTypeOf);if(annotation){return annotation;}}if(throwIfNotFound){throw new Error("No Pipe decorator found on "+stringify(type));}return null;};return PipeResolver;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generates code that is used to type check templates.
     */var TypeCheckCompiler=/** @class */function(){function TypeCheckCompiler(options,reflector){this.options=options;this.reflector=reflector;}/**
         * Important notes:
         * - This must not produce new `import` statements, but only refer to types outside
         *   of the file via the variables provided via externalReferenceVars.
         *   This allows Typescript to reuse the old program's structure as no imports have changed.
         * - This must not produce any exports, as this would pollute the .d.ts file
         *   and also violate the point above.
         */TypeCheckCompiler.prototype.compileComponent=function(componentId,component,template,usedPipes,externalReferenceVars,ctx){var _this=this;var pipes=new Map();usedPipes.forEach(function(p){return pipes.set(p.name,p.type.reference);});var embeddedViewCount=0;var viewBuilderFactory=function viewBuilderFactory(parent,guards){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder(_this.options,_this.reflector,externalReferenceVars,parent,component.type.reference,component.isHost,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory);};var visitor=viewBuilderFactory(null,[]);visitor.visitAll([],template);return visitor.build(componentId);};return TypeCheckCompiler;}();var DYNAMIC_VAR_NAME='_any';var TypeCheckLocalResolver=/** @class */function(){function TypeCheckLocalResolver(){}TypeCheckLocalResolver.prototype.notifyImplicitReceiverUse=function(){};TypeCheckLocalResolver.prototype.getLocal=function(name){if(name===EventHandlerVars.event.name){// References to the event should not be type-checked.
// TODO(chuckj): determine a better type for the event.
return variable(DYNAMIC_VAR_NAME);}return null;};return TypeCheckLocalResolver;}();var defaultResolver=new TypeCheckLocalResolver();var ViewBuilder=/** @class */function(){function ViewBuilder(options,reflector,externalReferenceVars,parent,component,isHostComponent,embeddedViewIndex,pipes,guards,ctx,viewBuilderFactory){this.options=options;this.reflector=reflector;this.externalReferenceVars=externalReferenceVars;this.parent=parent;this.component=component;this.isHostComponent=isHostComponent;this.embeddedViewIndex=embeddedViewIndex;this.pipes=pipes;this.guards=guards;this.ctx=ctx;this.viewBuilderFactory=viewBuilderFactory;this.refOutputVars=new Map();this.variables=[];this.children=[];this.updates=[];this.actions=[];}ViewBuilder.prototype.getOutputVar=function(type){var varName;if(type===this.component&&this.isHostComponent){varName=DYNAMIC_VAR_NAME;}else if(type instanceof StaticSymbol){varName=this.externalReferenceVars.get(type);}else{varName=DYNAMIC_VAR_NAME;}if(!varName){throw new Error("Illegal State: referring to a type without a variable "+JSON.stringify(type));}return varName;};ViewBuilder.prototype.getTypeGuardExpressions=function(ast){var e_1,_a,e_2,_b;var result=__spread(this.guards);try{for(var _c=__values(ast.directives),_d=_c.next();!_d.done;_d=_c.next()){var directive=_d.value;try{for(var _e=(e_2=void 0,__values(directive.inputs)),_f=_e.next();!_f.done;_f=_e.next()){var input=_f.value;var guard=directive.directive.guards[input.directiveName];if(guard){var useIf=guard==='UseIf';result.push({guard:guard,useIf:useIf,expression:{context:this.component,value:input.value,sourceSpan:input.sourceSpan}});}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e["return"]))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_1)throw e_1.error;}}return result;};ViewBuilder.prototype.visitAll=function(variables,astNodes){this.variables=variables;templateVisitAll(this,astNodes);};ViewBuilder.prototype.build=function(componentId,targetStatements){var e_3,_a;var _this=this;if(targetStatements===void 0){targetStatements=[];}this.children.forEach(function(child){return child.build(componentId,targetStatements);});var viewStmts=[variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];var bindingCount=0;this.updates.forEach(function(expression){var _a=_this.preprocessUpdateExpression(expression),sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var _b=convertPropertyBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;stmts.push(new ExpressionStatement(currValExpr));viewStmts.push.apply(viewStmts,__spread(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});this.actions.forEach(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+bindingCount++;var nameResolver=context===_this.component?_this:defaultResolver;var stmts=convertActionBinding(nameResolver,variable(_this.getOutputVar(context)),value,bindingId).stmts;viewStmts.push.apply(viewStmts,__spread(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));});if(this.guards.length){var guardExpression=undefined;try{for(var _b=__values(this.guards),_c=_b.next();!_c.done;_c=_b.next()){var guard=_c.value;var _d=this.preprocessUpdateExpression(guard.expression),context=_d.context,value=_d.value;var bindingId=""+bindingCount++;var nameResolver=context===this.component?this:defaultResolver;// We only support support simple expressions and ignore others as they
// are unlikely to affect type narrowing.
var _e=convertPropertyBinding(nameResolver,variable(this.getOutputVar(context)),value,bindingId,BindingForm.TrySimple),stmts=_e.stmts,currValExpr=_e.currValExpr;if(stmts.length==0){var guardClause=guard.useIf?currValExpr:this.ctx.importExpr(guard.guard).callFn([currValExpr]);guardExpression=guardExpression?guardExpression.and(guardClause):guardClause;}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_3)throw e_3.error;}}if(guardExpression){viewStmts=[new IfStmt(guardExpression,viewStmts)];}}var viewName="_View_"+componentId+"_"+this.embeddedViewIndex;var viewFactory=new DeclareFunctionStmt(viewName,[],viewStmts);targetStatements.push(viewFactory);return targetStatements;};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var astWithSource=ast.value;var inter=astWithSource.ast;inter.expressions.forEach(function(expr){return _this.updates.push({context:_this.component,value:expr,sourceSpan:ast.sourceSpan});});};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){this.visitElementOrTemplate(ast);// Note: The old view compiler used to use an `any` type
// for the context in any embedded view.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){// Find any applicable type guards. For example, NgIf has a type guard on ngIf
// (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only
// stamped out if ngIf is truthy so any bindings in the template can assume that,
// if a nullable type is used for ngIf, that expression is not null or undefined.
var guards=this.getTypeGuardExpressions(ast);var childVisitor=this.viewBuilderFactory(this,guards);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);}};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;this.visitElementOrTemplate(ast);var inputDefs=[];var updateRendererExpressions=[];var outputDefs=[];ast.inputs.forEach(function(inputAst){_this.updates.push({context:_this.component,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});templateVisitAll(this,ast.children);};ViewBuilder.prototype.visitElementOrTemplate=function(ast){var _this=this;ast.directives.forEach(function(dirAst){_this.visitDirective(dirAst);});ast.references.forEach(function(ref){var outputVarType=null;// Note: The old view compiler used to use an `any` type
// for directives exposed via `exportAs`.
// We keep this behaivor behind a flag for now.
if(ref.value&&ref.value.identifier&&_this.options.fullTemplateTypeCheck){outputVarType=ref.value.identifier.reference;}else{outputVarType=exports.BuiltinTypeName.Dynamic;}_this.refOutputVars.set(ref.name,outputVarType);});ast.outputs.forEach(function(outputAst){_this.actions.push({context:_this.component,value:outputAst.handler,sourceSpan:outputAst.sourceSpan});});};ViewBuilder.prototype.visitDirective=function(dirAst){var _this=this;var dirType=dirAst.directive.type.reference;dirAst.inputs.forEach(function(input){return _this.updates.push({context:_this.component,value:input.value,sourceSpan:input.sourceSpan});});// Note: The old view compiler used to use an `any` type
// for expressions in host properties / events.
// We keep this behaivor behind a flag for now.
if(this.options.fullTemplateTypeCheck){dirAst.hostProperties.forEach(function(inputAst){return _this.updates.push({context:dirType,value:inputAst.value,sourceSpan:inputAst.sourceSpan});});dirAst.hostEvents.forEach(function(hostEventAst){return _this.actions.push({context:dirType,value:hostEventAst.handler,sourceSpan:hostEventAst.sourceSpan});});}};ViewBuilder.prototype.notifyImplicitReceiverUse=function(){};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return variable(this.getOutputVar(exports.BuiltinTypeName.Dynamic));}for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent){var outputVarType=void 0;// check references
outputVarType=currBuilder.refOutputVars.get(name);if(outputVarType==null){// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){outputVarType=exports.BuiltinTypeName.Dynamic;}}if(outputVarType!=null){return variable(this.getOutputVar(outputVarType));}}return null;};ViewBuilder.prototype.pipeOutputVar=function(name){var pipe=this.pipes.get(name);if(!pipe){throw new Error("Illegal State: Could not find pipe "+name+" in template of "+this.component);}return this.getOutputVar(pipe);};ViewBuilder.prototype.preprocessUpdateExpression=function(expression){var _this=this;return{sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return function(args){var arr=literalArr(args);// Note: The old view compiler used to use an `any` type
// for arrays.
return _this.options.fullTemplateTypeCheck?arr:arr.cast(DYNAMIC_TYPE);};},createLiteralMapConverter:function createLiteralMapConverter(keys){return function(values){var entries=keys.map(function(k,i){return{key:k.key,value:values[i],quoted:k.quoted};});var map=literalMap(entries);// Note: The old view compiler used to use an `any` type
// for maps.
return _this.options.fullTemplateTypeCheck?map:map.cast(DYNAMIC_TYPE);};},createPipeConverter:function createPipeConverter(name,argCount){return function(args){// Note: The old view compiler used to use an `any` type
// for pipes.
var pipeExpr=_this.options.fullTemplateTypeCheck?variable(_this.pipeOutputVar(name)):variable(_this.getOutputVar(exports.BuiltinTypeName.Dynamic));return pipeExpr.callMethod('transform',args);};}},expression.value)};};ViewBuilder.prototype.visitNgContent=function(ast,context){};ViewBuilder.prototype.visitText=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CLASS_ATTR$1='class';var STYLE_ATTR='style';var IMPLICIT_TEMPLATE_VAR='\$implicit';var ViewCompileResult=/** @class */function(){function ViewCompileResult(viewClassVar,rendererTypeVar){this.viewClassVar=viewClassVar;this.rendererTypeVar=rendererTypeVar;}return ViewCompileResult;}();var ViewCompiler=/** @class */function(){function ViewCompiler(_reflector){this._reflector=_reflector;}ViewCompiler.prototype.compileComponent=function(outputCtx,component,template,styles,usedPipes){var _a;var _this=this;var embeddedViewCount=0;var renderComponentVarName=undefined;if(!component.isHost){var template_1=component.template;var customRenderData=[];if(template_1.animations&&template_1.animations.length){customRenderData.push(new LiteralMapEntry('animation',convertValueToOutputAst(outputCtx,template_1.animations),true));}var renderComponentVar=variable(rendererTypeName(component.type.reference));renderComponentVarName=renderComponentVar.name;outputCtx.statements.push(renderComponentVar.set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([new LiteralMapEntry('encapsulation',literal(template_1.encapsulation),false),new LiteralMapEntry('styles',styles,false),new LiteralMapEntry('data',new LiteralMapExpr(customRenderData),false)])])).toDeclStmt(importType(Identifiers.RendererType2),[exports.StmtModifier.Final,exports.StmtModifier.Exported]));}var viewBuilderFactory=function viewBuilderFactory(parent){var embeddedViewIndex=embeddedViewCount++;return new ViewBuilder$1(_this._reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,viewBuilderFactory);};var visitor=viewBuilderFactory(null);visitor.visitAll([],template);(_a=outputCtx.statements).push.apply(_a,__spread(visitor.build()));return new ViewCompileResult(visitor.viewName,renderComponentVarName);};return ViewCompiler;}();var LOG_VAR$1=variable('_l');var VIEW_VAR=variable('_v');var CHECK_VAR=variable('_ck');var COMP_VAR=variable('_co');var EVENT_NAME_VAR=variable('en');var ALLOW_DEFAULT_VAR=variable("ad");var ViewBuilder$1=/** @class */function(){function ViewBuilder(reflector,outputCtx,parent,component,embeddedViewIndex,usedPipes,viewBuilderFactory){this.reflector=reflector;this.outputCtx=outputCtx;this.parent=parent;this.component=component;this.embeddedViewIndex=embeddedViewIndex;this.usedPipes=usedPipes;this.viewBuilderFactory=viewBuilderFactory;this.nodes=[];this.purePipeNodeIndices=Object.create(null);// Need Object.create so that we don't have builtin values...
this.refNodeIndices=Object.create(null);this.variables=[];this.children=[];// TODO(tbosch): The old view compiler used to use an `any` type
// for the context in any embedded view. We keep this behaivor for now
// to be able to introduce the new view compiler without too many errors.
this.compType=this.embeddedViewIndex>0?DYNAMIC_TYPE:expressionType(outputCtx.importExpr(this.component.type.reference));this.viewName=viewClassName(this.component.type.reference,this.embeddedViewIndex);}ViewBuilder.prototype.visitAll=function(variables,astNodes){var _this=this;this.variables=variables;// create the pipes for the pure pipes immediately, so that we know their indices.
if(!this.parent){this.usedPipes.forEach(function(pipe){if(pipe.pure){_this.purePipeNodeIndices[pipe.name]=_this._createPipe(null,pipe);}});}if(!this.parent){this.component.viewQueries.forEach(function(query,queryIndex){// Note: queries start with id 1 so we can use the number in a Bloom filter!
var queryId=queryIndex+1;var bindingType=query.first?0/* First */:1/* All */;var flags=134217728/* TypeViewQuery */|calcStaticDynamicQueryFlags(query);_this.nodes.push(function(){return{sourceSpan:null,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});}templateVisitAll(this,astNodes);if(this.parent&&(astNodes.length===0||needsAdditionalRootNode(astNodes))){// if the view is an embedded view, then we need to add an additional root node in some cases
this.nodes.push(function(){return{sourceSpan:null,nodeFlags:1/* TypeElement */,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(0/* None */),NULL_EXPR,NULL_EXPR,literal(0)])};});}};ViewBuilder.prototype.build=function(targetStatements){if(targetStatements===void 0){targetStatements=[];}this.children.forEach(function(child){return child.build(targetStatements);});var _a=this._createNodeExpressions(),updateRendererStmts=_a.updateRendererStmts,updateDirectivesStmts=_a.updateDirectivesStmts,nodeDefExprs=_a.nodeDefExprs;var updateRendererFn=this._createUpdateFn(updateRendererStmts);var updateDirectivesFn=this._createUpdateFn(updateDirectivesStmts);var viewFlags=0/* None */;if(!this.parent&&this.component.changeDetection===ChangeDetectionStrategy.OnPush){viewFlags|=2/* OnPush */;}var viewFactory=new DeclareFunctionStmt(this.viewName,[new FnParam(LOG_VAR$1.name)],[new ReturnStatement(importExpr(Identifiers.viewDef).callFn([literal(viewFlags),literalArr(nodeDefExprs),updateDirectivesFn,updateRendererFn]))],importType(Identifiers.ViewDefinition),this.embeddedViewIndex===0?[exports.StmtModifier.Exported]:[]);targetStatements.push(viewFactory);return targetStatements;};ViewBuilder.prototype._createUpdateFn=function(updateStmts){var updateFn;if(updateStmts.length>0){var preStmts=[];if(!this.component.isHost&&findReadVarNames(updateStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}updateFn=fn([new FnParam(CHECK_VAR.name,INFERRED_TYPE),new FnParam(VIEW_VAR.name,INFERRED_TYPE)],__spread(preStmts,updateStmts),INFERRED_TYPE);}else{updateFn=NULL_EXPR;}return updateFn;};ViewBuilder.prototype.visitNgContent=function(ast,context){// ngContentDef(ngContentIndex: number, index: number): NodeDef;
this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:8/* TypeNgContent */,nodeDef:importExpr(Identifiers.ngContentDef).callFn([literal(ast.ngContentIndex),literal(ast.index)])};});};ViewBuilder.prototype.visitText=function(ast,context){// Static text nodes have no check function
var checkIndex=-1;this.nodes.push(function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr([literal(ast.value)])])};});};ViewBuilder.prototype.visitBoundText=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var astWithSource=ast.value;var inter=astWithSource.ast;var updateRendererExpressions=inter.expressions.map(function(expr,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:ast.sourceSpan,context:COMP_VAR,value:expr});});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:2/* TypeText */,nodeDef:importExpr(Identifiers.textDef).callFn([literal(checkIndex),literal(ast.ngContentIndex),literalArr(inter.strings.map(function(s){return literal(s);}))]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype.visitEmbeddedTemplate=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array
this.nodes.push(null);var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,queryMatchesExpr=_a.queryMatchesExpr,hostEvents=_a.hostEvents;var childVisitor=this.viewBuilderFactory(this);this.children.push(childVisitor);childVisitor.visitAll(ast.variables,ast.children);var childCount=this.nodes.length-nodeIndex-1;// anchorDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,
//   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:
//   ViewDefinitionFactory): NodeDef;
this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.anchorDef).callFn([literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),_this._createElementHandleEventFn(nodeIndex,hostEvents),variable(childVisitor.viewName)])};};};ViewBuilder.prototype.visitElement=function(ast,context){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);// Using a null element name creates an anchor.
var elName=isNgContainer(ast.name)?null:ast.name;var _a=this._visitElementOrTemplate(nodeIndex,ast),flags=_a.flags,usedEvents=_a.usedEvents,queryMatchesExpr=_a.queryMatchesExpr,dirHostBindings=_a.hostBindings,hostEvents=_a.hostEvents;var inputDefs=[];var updateRendererExpressions=[];var outputDefs=[];if(elName){var hostBindings=ast.inputs.map(function(inputAst){return{context:COMP_VAR,inputAst:inputAst,dirAst:null};}).concat(dirHostBindings);if(hostBindings.length){updateRendererExpressions=hostBindings.map(function(hostBinding,bindingIndex){return _this._preprocessUpdateExpression({context:hostBinding.context,nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:hostBinding.inputAst.sourceSpan,value:hostBinding.inputAst.value});});inputDefs=hostBindings.map(function(hostBinding){return elementBindingDef(hostBinding.inputAst,hostBinding.dirAst);});}outputDefs=usedEvents.map(function(_a){var _b=__read(_a,2),target=_b[0],eventName=_b[1];return literalArr([literal(target),literal(eventName)]);});}templateVisitAll(this,ast.children);var childCount=this.nodes.length-nodeIndex-1;var compAst=ast.directives.find(function(dirAst){return dirAst.directive.isComponent;});var compRendererType=NULL_EXPR;var compView=NULL_EXPR;if(compAst){compView=this.outputCtx.importExpr(compAst.directive.componentViewType);compRendererType=this.outputCtx.importExpr(compAst.directive.rendererType);}// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:ast.sourceSpan,nodeFlags:1/* TypeElement */|flags,nodeDef:importExpr(Identifiers.elementDef).callFn([literal(checkIndex),literal(flags),queryMatchesExpr,literal(ast.ngContentIndex),literal(childCount),literal(elName),elName?fixedAttrsDef(ast):NULL_EXPR,inputDefs.length?literalArr(inputDefs):NULL_EXPR,outputDefs.length?literalArr(outputDefs):NULL_EXPR,_this._createElementHandleEventFn(nodeIndex,hostEvents),compView,compRendererType]),updateRenderer:updateRendererExpressions};};};ViewBuilder.prototype._visitElementOrTemplate=function(nodeIndex,ast){var _this=this;var flags=0/* None */;if(ast.hasViewContainer){flags|=16777216/* EmbeddedViews */;}var usedEvents=new Map();ast.outputs.forEach(function(event){var _a=elementEventNameAndTarget(event,null),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});ast.directives.forEach(function(dirAst){dirAst.hostEvents.forEach(function(event){var _a=elementEventNameAndTarget(event,dirAst),name=_a.name,target=_a.target;usedEvents.set(elementEventFullName(target,name),[target,name]);});});var hostBindings=[];var hostEvents=[];this._visitComponentFactoryResolverProvider(ast.directives);ast.providers.forEach(function(providerAst){var dirAst=undefined;ast.directives.forEach(function(localDirAst){if(localDirAst.directive.type.reference===tokenReference(providerAst.token)){dirAst=localDirAst;}});if(dirAst){var _a=_this._visitDirective(providerAst,dirAst,ast.references,ast.queryMatches,usedEvents),dirHostBindings=_a.hostBindings,dirHostEvents=_a.hostEvents;hostBindings.push.apply(hostBindings,__spread(dirHostBindings));hostEvents.push.apply(hostEvents,__spread(dirHostEvents));}else{_this._visitProvider(providerAst,ast.queryMatches);}});var queryMatchExprs=[];ast.queryMatches.forEach(function(match){var valueType=undefined;if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ElementRef)){valueType=0/* ElementRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)){valueType=3/* ViewContainerRef */;}else if(tokenReference(match.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){queryMatchExprs.push(literalArr([literal(match.queryId),literal(valueType)]));}});ast.references.forEach(function(ref){var valueType=undefined;if(!ref.value){valueType=1/* RenderElement */;}else if(tokenReference(ref.value)===_this.reflector.resolveExternalReference(Identifiers.TemplateRef)){valueType=2/* TemplateRef */;}if(valueType!=null){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(valueType)]));}});ast.outputs.forEach(function(outputAst){hostEvents.push({context:COMP_VAR,eventAst:outputAst,dirAst:null});});return{flags:flags,usedEvents:Array.from(usedEvents.values()),queryMatchesExpr:queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitDirective=function(providerAst,dirAst,refs,queryMatches,usedEvents){var _this=this;var nodeIndex=this.nodes.length;// reserve the space in the nodeDefs array so we can add children
this.nodes.push(null);dirAst.directive.queries.forEach(function(query,queryIndex){var queryId=dirAst.contentQueryStartId+queryIndex;var flags=67108864/* TypeContentQuery */|calcStaticDynamicQueryFlags(query);var bindingType=query.first?0/* First */:1/* All */;_this.nodes.push(function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:flags,nodeDef:importExpr(Identifiers.queryDef).callFn([literal(flags),literal(queryId),new LiteralMapExpr([new LiteralMapEntry(query.propertyName,literal(bindingType),false)])])};});});// Note: the operation below might also create new nodeDefs,
// but we don't want them to be a child of a directive,
// as they might be a provider/pipe on their own.
// I.e. we only allow queries as children of directives nodes.
var childCount=this.nodes.length-nodeIndex-1;var _a=this._visitProviderOrDirective(providerAst,queryMatches),flags=_a.flags,queryMatchExprs=_a.queryMatchExprs,providerExpr=_a.providerExpr,depsExpr=_a.depsExpr;refs.forEach(function(ref){if(ref.value&&tokenReference(ref.value)===tokenReference(providerAst.token)){_this.refNodeIndices[ref.name]=nodeIndex;queryMatchExprs.push(literalArr([literal(ref.name),literal(4/* Provider */)]));}});if(dirAst.directive.isComponent){flags|=32768/* Component */;}var inputDefs=dirAst.inputs.map(function(inputAst,inputIndex){var mapValue=literalArr([literal(inputIndex),literal(inputAst.directiveName)]);// Note: it's important to not quote the key so that we can capture renames by minifiers!
return new LiteralMapEntry(inputAst.directiveName,mapValue,false);});var outputDefs=[];var dirMeta=dirAst.directive;Object.keys(dirMeta.outputs).forEach(function(propName){var eventName=dirMeta.outputs[propName];if(usedEvents.has(eventName)){// Note: it's important to not quote the key so that we can capture renames by minifiers!
outputDefs.push(new LiteralMapEntry(propName,literal(eventName),false));}});var updateDirectiveExpressions=[];if(dirAst.inputs.length||(flags&(262144/* DoCheck */|65536/* OnInit */))>0){updateDirectiveExpressions=dirAst.inputs.map(function(input,bindingIndex){return _this._preprocessUpdateExpression({nodeIndex:nodeIndex,bindingIndex:bindingIndex,sourceSpan:input.sourceSpan,context:COMP_VAR,value:input.value});});}var dirContextExpr=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);var hostBindings=dirAst.hostProperties.map(function(inputAst){return{context:dirContextExpr,dirAst:dirAst,inputAst:inputAst};});var hostEvents=dirAst.hostEvents.map(function(hostEventAst){return{context:dirContextExpr,eventAst:hostEventAst,dirAst:dirAst};});// Check index is the same as the node index during compilation
// They might only differ at runtime
var checkIndex=nodeIndex;this.nodes[nodeIndex]=function(){return{sourceSpan:dirAst.sourceSpan,nodeFlags:16384/* TypeDirective */|flags,nodeDef:importExpr(Identifiers.directiveDef).callFn([literal(checkIndex),literal(flags),queryMatchExprs.length?literalArr(queryMatchExprs):NULL_EXPR,literal(childCount),providerExpr,depsExpr,inputDefs.length?new LiteralMapExpr(inputDefs):NULL_EXPR,outputDefs.length?new LiteralMapExpr(outputDefs):NULL_EXPR]),updateDirectives:updateDirectiveExpressions,directive:dirAst.directive.type};};return{hostBindings:hostBindings,hostEvents:hostEvents};};ViewBuilder.prototype._visitProvider=function(providerAst,queryMatches){this._addProviderNode(this._visitProviderOrDirective(providerAst,queryMatches));};ViewBuilder.prototype._visitComponentFactoryResolverProvider=function(directives){var componentDirMeta=directives.find(function(dirAst){return dirAst.directive.isComponent;});if(componentDirMeta&&componentDirMeta.directive.entryComponents.length){var _a=componentFactoryResolverProviderDef(this.reflector,this.outputCtx,8192/* PrivateProvider */,componentDirMeta.directive.entryComponents),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,flags=_a.flags,tokenExpr=_a.tokenExpr;this._addProviderNode({providerExpr:providerExpr,depsExpr:depsExpr,flags:flags,tokenExpr:tokenExpr,queryMatchExprs:[],sourceSpan:componentDirMeta.sourceSpan});}};ViewBuilder.prototype._addProviderNode=function(data){// providerDef(
//   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,
//   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;
this.nodes.push(function(){return{sourceSpan:data.sourceSpan,nodeFlags:data.flags,nodeDef:importExpr(Identifiers.providerDef).callFn([literal(data.flags),data.queryMatchExprs.length?literalArr(data.queryMatchExprs):NULL_EXPR,data.tokenExpr,data.providerExpr,data.depsExpr])};});};ViewBuilder.prototype._visitProviderOrDirective=function(providerAst,queryMatches){var flags=0/* None */;var queryMatchExprs=[];queryMatches.forEach(function(match){if(tokenReference(match.value)===tokenReference(providerAst.token)){queryMatchExprs.push(literalArr([literal(match.queryId),literal(4/* Provider */)]));}});var _a=providerDef(this.outputCtx,providerAst),providerExpr=_a.providerExpr,depsExpr=_a.depsExpr,providerFlags=_a.flags,tokenExpr=_a.tokenExpr;return{flags:flags|providerFlags,queryMatchExprs:queryMatchExprs,providerExpr:providerExpr,depsExpr:depsExpr,tokenExpr:tokenExpr,sourceSpan:providerAst.sourceSpan};};ViewBuilder.prototype.getLocal=function(name){if(name==EventHandlerVars.event.name){return EventHandlerVars.event;}var currViewExpr=VIEW_VAR;for(var currBuilder=this;currBuilder;currBuilder=currBuilder.parent,currViewExpr=currViewExpr.prop('parent').cast(DYNAMIC_TYPE)){// check references
var refNodeIndex=currBuilder.refNodeIndices[name];if(refNodeIndex!=null){return importExpr(Identifiers.nodeValue).callFn([currViewExpr,literal(refNodeIndex)]);}// check variables
var varAst=currBuilder.variables.find(function(varAst){return varAst.name===name;});if(varAst){var varValue=varAst.value||IMPLICIT_TEMPLATE_VAR;return currViewExpr.prop('context').prop(varValue);}}return null;};ViewBuilder.prototype.notifyImplicitReceiverUse=function(){// Not needed in View Engine as View Engine walks through the generated
// expressions to figure out if the implicit receiver is used and needs
// to be generated as part of the pre-update statements.
};ViewBuilder.prototype._createLiteralArrayConverter=function(sourceSpan,argCount){if(argCount===0){var valueExpr_1=importExpr(Identifiers.EMPTY_ARRAY);return function(){return valueExpr_1;};}var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:32/* TypePureArray */,nodeDef:importExpr(Identifiers.pureArrayDef).callFn([literal(checkIndex),literal(argCount)])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createLiteralMapConverter=function(sourceSpan,keys){if(keys.length===0){var valueExpr_2=importExpr(Identifiers.EMPTY_MAP);return function(){return valueExpr_2;};}var map=literalMap(keys.map(function(e,i){return _assign3(_assign3({},e),{value:literal(i)});}));var checkIndex=this.nodes.length;this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:64/* TypePureObject */,nodeDef:importExpr(Identifiers.pureObjectDef).callFn([literal(checkIndex),map])};});return function(args){return callCheckStmt(checkIndex,args);};};ViewBuilder.prototype._createPipeConverter=function(expression,name,argCount){var pipe=this.usedPipes.find(function(pipeSummary){return pipeSummary.name===name;});if(pipe.pure){var checkIndex_1=this.nodes.length;this.nodes.push(function(){return{sourceSpan:expression.sourceSpan,nodeFlags:128/* TypePurePipe */,nodeDef:importExpr(Identifiers.purePipeDef).callFn([literal(checkIndex_1),literal(argCount)])};});// find underlying pipe in the component view
var compViewExpr=VIEW_VAR;var compBuilder=this;while(compBuilder.parent){compBuilder=compBuilder.parent;compViewExpr=compViewExpr.prop('parent').cast(DYNAMIC_TYPE);}var pipeNodeIndex=compBuilder.purePipeNodeIndices[name];var pipeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([compViewExpr,literal(pipeNodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,callCheckStmt(checkIndex_1,[pipeValueExpr_1].concat(args)));};}else{var nodeIndex=this._createPipe(expression.sourceSpan,pipe);var nodeValueExpr_1=importExpr(Identifiers.nodeValue).callFn([VIEW_VAR,literal(nodeIndex)]);return function(args){return callUnwrapValue(expression.nodeIndex,expression.bindingIndex,nodeValueExpr_1.callMethod('transform',args));};}};ViewBuilder.prototype._createPipe=function(sourceSpan,pipe){var _this=this;var nodeIndex=this.nodes.length;var flags=0/* None */;pipe.type.lifecycleHooks.forEach(function(lifecycleHook){// for pipes, we only support ngOnDestroy
if(lifecycleHook===LifecycleHooks.OnDestroy){flags|=lifecycleHookToNodeFlag(lifecycleHook);}});var depExprs=pipe.type.diDeps.map(function(diDep){return depDef(_this.outputCtx,diDep);});// function pipeDef(
//   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef
this.nodes.push(function(){return{sourceSpan:sourceSpan,nodeFlags:16/* TypePipe */,nodeDef:importExpr(Identifiers.pipeDef).callFn([literal(flags),_this.outputCtx.importExpr(pipe.type.reference),literalArr(depExprs)])};});return nodeIndex;};/**
         * For the AST in `UpdateExpression.value`:
         * - create nodes for pipes, literal arrays and, literal maps,
         * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.
         *
         * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!
         */ViewBuilder.prototype._preprocessUpdateExpression=function(expression){var _this=this;return{nodeIndex:expression.nodeIndex,bindingIndex:expression.bindingIndex,sourceSpan:expression.sourceSpan,context:expression.context,value:convertPropertyBindingBuiltins({createLiteralArrayConverter:function createLiteralArrayConverter(argCount){return _this._createLiteralArrayConverter(expression.sourceSpan,argCount);},createLiteralMapConverter:function createLiteralMapConverter(keys){return _this._createLiteralMapConverter(expression.sourceSpan,keys);},createPipeConverter:function createPipeConverter(name,argCount){return _this._createPipeConverter(expression,name,argCount);}},expression.value)};};ViewBuilder.prototype._createNodeExpressions=function(){var self=this;var updateBindingCount=0;var updateRendererStmts=[];var updateDirectivesStmts=[];var nodeDefExprs=this.nodes.map(function(factory,nodeIndex){var _a=factory(),nodeDef=_a.nodeDef,nodeFlags=_a.nodeFlags,updateDirectives=_a.updateDirectives,updateRenderer=_a.updateRenderer,sourceSpan=_a.sourceSpan;if(updateRenderer){updateRendererStmts.push.apply(updateRendererStmts,__spread(createUpdateStatements(nodeIndex,sourceSpan,updateRenderer,false)));}if(updateDirectives){updateDirectivesStmts.push.apply(updateDirectivesStmts,__spread(createUpdateStatements(nodeIndex,sourceSpan,updateDirectives,(nodeFlags&(262144/* DoCheck */|65536/* OnInit */))>0)));}// We use a comma expression to call the log function before
// the nodeDef function, but still use the result of the nodeDef function
// as the value.
// Note: We only add the logger to elements / text nodes,
// so we don't generate too much code.
var logWithNodeDef=nodeFlags&3/* CatRenderNode */?new CommaExpr([LOG_VAR$1.callFn([]).callFn([]),nodeDef]):nodeDef;return applySourceSpanToExpressionIfNeeded(logWithNodeDef,sourceSpan);});return{updateRendererStmts:updateRendererStmts,updateDirectivesStmts:updateDirectivesStmts,nodeDefExprs:nodeDefExprs};function createUpdateStatements(nodeIndex,sourceSpan,expressions,allowEmptyExprs){var updateStmts=[];var exprs=expressions.map(function(_a){var sourceSpan=_a.sourceSpan,context=_a.context,value=_a.value;var bindingId=""+updateBindingCount++;var nameResolver=context===COMP_VAR?self:null;var _b=convertPropertyBinding(nameResolver,context,value,bindingId,BindingForm.General),stmts=_b.stmts,currValExpr=_b.currValExpr;updateStmts.push.apply(updateStmts,__spread(stmts.map(function(stmt){return applySourceSpanToStatementIfNeeded(stmt,sourceSpan);})));return applySourceSpanToExpressionIfNeeded(currValExpr,sourceSpan);});if(expressions.length||allowEmptyExprs){updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex,exprs).toStmt(),sourceSpan));}return updateStmts;}};ViewBuilder.prototype._createElementHandleEventFn=function(nodeIndex,handlers){var _this=this;var handleEventStmts=[];var handleEventBindingCount=0;handlers.forEach(function(_a){var context=_a.context,eventAst=_a.eventAst,dirAst=_a.dirAst;var bindingId=""+handleEventBindingCount++;var nameResolver=context===COMP_VAR?_this:null;var _b=convertActionBinding(nameResolver,context,eventAst.handler,bindingId),stmts=_b.stmts,allowDefault=_b.allowDefault;var trueStmts=stmts;if(allowDefault){trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());}var _c=elementEventNameAndTarget(eventAst,dirAst),eventTarget=_c.target,eventName=_c.name;var fullEventName=elementEventFullName(eventTarget,eventName);handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR),trueStmts),eventAst.sourceSpan));});var handleEventFn;if(handleEventStmts.length>0){var preStmts=[ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];if(!this.component.isHost&&findReadVarNames(handleEventStmts).has(COMP_VAR.name)){preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));}handleEventFn=fn([new FnParam(VIEW_VAR.name,INFERRED_TYPE),new FnParam(EVENT_NAME_VAR.name,INFERRED_TYPE),new FnParam(EventHandlerVars.event.name,INFERRED_TYPE)],__spread(preStmts,handleEventStmts,[new ReturnStatement(ALLOW_DEFAULT_VAR)]),INFERRED_TYPE);}else{handleEventFn=NULL_EXPR;}return handleEventFn;};ViewBuilder.prototype.visitDirective=function(ast,context){};ViewBuilder.prototype.visitDirectiveProperty=function(ast,context){};ViewBuilder.prototype.visitReference=function(ast,context){};ViewBuilder.prototype.visitVariable=function(ast,context){};ViewBuilder.prototype.visitEvent=function(ast,context){};ViewBuilder.prototype.visitElementProperty=function(ast,context){};ViewBuilder.prototype.visitAttr=function(ast,context){};return ViewBuilder;}();function needsAdditionalRootNode(astNodes){var lastAstNode=astNodes[astNodes.length-1];if(lastAstNode instanceof EmbeddedTemplateAst){return lastAstNode.hasViewContainer;}if(lastAstNode instanceof ElementAst){if(isNgContainer(lastAstNode.name)&&lastAstNode.children.length){return needsAdditionalRootNode(lastAstNode.children);}return lastAstNode.hasViewContainer;}return lastAstNode instanceof NgContentAst;}function elementBindingDef(inputAst,dirAst){var inputType=inputAst.type;switch(inputType){case 1/* Attribute */:return literalArr([literal(1/* TypeElementAttribute */),literal(inputAst.name),literal(inputAst.securityContext)]);case 0/* Property */:return literalArr([literal(8/* TypeProperty */),literal(inputAst.name),literal(inputAst.securityContext)]);case 4/* Animation */:var bindingType=8/* TypeProperty */|(dirAst&&dirAst.directive.isComponent?32/* SyntheticHostProperty */:16/* SyntheticProperty */);return literalArr([literal(bindingType),literal('@'+inputAst.name),literal(inputAst.securityContext)]);case 2/* Class */:return literalArr([literal(2/* TypeElementClass */),literal(inputAst.name),NULL_EXPR]);case 3/* Style */:return literalArr([literal(4/* TypeElementStyle */),literal(inputAst.name),literal(inputAst.unit)]);default:// This default case is not needed by TypeScript compiler, as the switch is exhaustive.
// However Closure Compiler does not understand that and reports an error in typed mode.
// The `throw new Error` below works around the problem, and the unexpected: never variable
// makes sure tsc still checks this code is unreachable.
var unexpected=inputType;throw new Error("unexpected "+unexpected);}}function fixedAttrsDef(elementAst){var mapResult=Object.create(null);elementAst.attrs.forEach(function(attrAst){mapResult[attrAst.name]=attrAst.value;});elementAst.directives.forEach(function(dirAst){Object.keys(dirAst.directive.hostAttributes).forEach(function(name){var value=dirAst.directive.hostAttributes[name];var prevValue=mapResult[name];mapResult[name]=prevValue!=null?mergeAttributeValue(name,prevValue,value):value;});});// Note: We need to sort to get a defined output order
// for tests and for caching generated artifacts...
return literalArr(Object.keys(mapResult).sort().map(function(attrName){return literalArr([literal(attrName),literal(mapResult[attrName])]);}));}function mergeAttributeValue(attrName,attrValue1,attrValue2){if(attrName==CLASS_ATTR$1||attrName==STYLE_ATTR){return attrValue1+" "+attrValue2;}else{return attrValue2;}}function callCheckStmt(nodeIndex,exprs){if(exprs.length>10){return CHECK_VAR.callFn([VIEW_VAR,literal(nodeIndex),literal(1/* Dynamic */),literalArr(exprs)]);}else{return CHECK_VAR.callFn(__spread([VIEW_VAR,literal(nodeIndex),literal(0/* Inline */)],exprs));}}function callUnwrapValue(nodeIndex,bindingIdx,expr){return importExpr(Identifiers.unwrapValue).callFn([VIEW_VAR,literal(nodeIndex),literal(bindingIdx),expr]);}function elementEventNameAndTarget(eventAst,dirAst){if(eventAst.isAnimation){return{name:"@"+eventAst.name+"."+eventAst.phase,target:dirAst&&dirAst.directive.isComponent?'component':null};}else{return eventAst;}}function calcStaticDynamicQueryFlags(query){var flags=0/* None */;// Note: We only make queries static that query for a single item and the user specifically
// set the to be static. This is because of backwards compatibility with the old view compiler...
if(query.first&&query["static"]){flags|=268435456/* StaticQuery */;}else{flags|=536870912/* DynamicQuery */;}return flags;}function elementEventFullName(target,name){return target?target+":"+name:name;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A container for message extracted from the templates.
     */var MessageBundle=/** @class */function(){function MessageBundle(_htmlParser,_implicitTags,_implicitAttrs,_locale){if(_locale===void 0){_locale=null;}this._htmlParser=_htmlParser;this._implicitTags=_implicitTags;this._implicitAttrs=_implicitAttrs;this._locale=_locale;this._messages=[];}MessageBundle.prototype.updateFromTemplate=function(html,url,interpolationConfig){var _a;var htmlParserResult=this._htmlParser.parse(html,url,{tokenizeExpansionForms:true,interpolationConfig:interpolationConfig});if(htmlParserResult.errors.length){return htmlParserResult.errors;}var i18nParserResult=extractMessages(htmlParserResult.rootNodes,interpolationConfig,this._implicitTags,this._implicitAttrs);if(i18nParserResult.errors.length){return i18nParserResult.errors;}(_a=this._messages).push.apply(_a,__spread(i18nParserResult.messages));return[];};// Return the message in the internal format
// The public (serialized) format might be different, see the `write` method.
MessageBundle.prototype.getMessages=function(){return this._messages;};MessageBundle.prototype.write=function(serializer,filterSources){var messages={};var mapperVisitor=new MapPlaceholderNames();// Deduplicate messages based on their ID
this._messages.forEach(function(message){var _a;var id=serializer.digest(message);if(!messages.hasOwnProperty(id)){messages[id]=message;}else{(_a=messages[id].sources).push.apply(_a,__spread(message.sources));}});// Transform placeholder names using the serializer mapping
var msgList=Object.keys(messages).map(function(id){var mapper=serializer.createNameMapper(messages[id]);var src=messages[id];var nodes=mapper?mapperVisitor.convert(src.nodes,mapper):src.nodes;var transformedMessage=new Message(nodes,{},{},src.meaning,src.description,id);transformedMessage.sources=src.sources;if(filterSources){transformedMessage.sources.forEach(function(source){return source.filePath=filterSources(source.filePath);});}return transformedMessage;});return serializer.write(msgList,this._locale);};return MessageBundle;}();// Transform an i18n AST by renaming the placeholder nodes with the given mapper
var MapPlaceholderNames=/** @class */function(_super){__extends(MapPlaceholderNames,_super);function MapPlaceholderNames(){return _super!==null&&_super.apply(this,arguments)||this;}MapPlaceholderNames.prototype.convert=function(nodes,mapper){var _this=this;return mapper?nodes.map(function(n){return n.visit(_this,mapper);}):nodes;};MapPlaceholderNames.prototype.visitTagPlaceholder=function(ph,mapper){var _this=this;var startName=mapper.toPublicName(ph.startName);var closeName=ph.closeName?mapper.toPublicName(ph.closeName):ph.closeName;var children=ph.children.map(function(n){return n.visit(_this,mapper);});return new TagPlaceholder(ph.tag,ph.attrs,startName,closeName,children,ph.isVoid,ph.sourceSpan);};MapPlaceholderNames.prototype.visitPlaceholder=function(ph,mapper){return new Placeholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};MapPlaceholderNames.prototype.visitIcuPlaceholder=function(ph,mapper){return new IcuPlaceholder(ph.value,mapper.toPublicName(ph.name),ph.sourceSpan);};return MapPlaceholderNames;}(CloneVisitor);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var GeneratedFile=/** @class */function(){function GeneratedFile(srcFileUrl,genFileUrl,sourceOrStmts){this.srcFileUrl=srcFileUrl;this.genFileUrl=genFileUrl;if(typeof sourceOrStmts==='string'){this.source=sourceOrStmts;this.stmts=null;}else{this.source=null;this.stmts=sourceOrStmts;}}GeneratedFile.prototype.isEquivalent=function(other){if(this.genFileUrl!==other.genFileUrl){return false;}if(this.source){return this.source===other.source;}if(other.stmts==null){return false;}// Note: the constructor guarantees that if this.source is not filled,
// then this.stmts is.
return areAllEquivalent(this.stmts,other.stmts);};return GeneratedFile;}();function toTypeScript(file,preamble){if(preamble===void 0){preamble='';}if(!file.stmts){throw new Error("Illegal state: No stmts present on GeneratedFile "+file.genFileUrl);}return new TypeScriptEmitter().emitStatements(file.genFileUrl,file.stmts,preamble);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function listLazyRoutes(moduleMeta,reflector){var e_1,_a,e_2,_b;var allLazyRoutes=[];try{for(var _c=__values(moduleMeta.transitiveModule.providers),_d=_c.next();!_d.done;_d=_c.next()){var _e=_d.value,provider=_e.provider,module=_e.module;if(tokenReference(provider.token)===reflector.ROUTES){var loadChildren=_collectLoadChildren(provider.useValue);try{for(var loadChildren_1=(e_2=void 0,__values(loadChildren)),loadChildren_1_1=loadChildren_1.next();!loadChildren_1_1.done;loadChildren_1_1=loadChildren_1.next()){var route=loadChildren_1_1.value;allLazyRoutes.push(parseLazyRoute(route,reflector,module.reference));}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(loadChildren_1_1&&!loadChildren_1_1.done&&(_b=loadChildren_1["return"]))_b.call(loadChildren_1);}finally{if(e_2)throw e_2.error;}}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_1)throw e_1.error;}}return allLazyRoutes;}function _collectLoadChildren(routes,target){var e_3,_a;if(target===void 0){target=[];}if(typeof routes==='string'){target.push(routes);}else if(Array.isArray(routes)){try{for(var routes_1=__values(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var route=routes_1_1.value;_collectLoadChildren(route,target);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1["return"]))_a.call(routes_1);}finally{if(e_3)throw e_3.error;}}}else if(routes.loadChildren){_collectLoadChildren(routes.loadChildren,target);}else if(routes.children){_collectLoadChildren(routes.children,target);}return target;}function parseLazyRoute(route,reflector,module){var _a=__read(route.split('#'),2),routePath=_a[0],routeName=_a[1];var referencedModule=reflector.resolveExternalReference({moduleName:routePath,name:routeName},module?module.filePath:undefined);return{route:route,module:module||referencedModule,referencedModule:referencedModule};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TS=/^(?!.*\.d\.ts$).*\.ts$/;var ResolvedStaticSymbol=/** @class */function(){function ResolvedStaticSymbol(symbol,metadata){this.symbol=symbol;this.metadata=metadata;}return ResolvedStaticSymbol;}();var SUPPORTED_SCHEMA_VERSION=4;/**
     * This class is responsible for loading metadata per symbol,
     * and normalizing references between symbols.
     *
     * Internally, it only uses symbols without members,
     * and deduces the values for symbols with members based
     * on these symbols.
     */var StaticSymbolResolver=/** @class */function(){function StaticSymbolResolver(host,staticSymbolCache,summaryResolver,errorRecorder){this.host=host;this.staticSymbolCache=staticSymbolCache;this.summaryResolver=summaryResolver;this.errorRecorder=errorRecorder;this.metadataCache=new Map();// Note: this will only contain StaticSymbols without members!
this.resolvedSymbols=new Map();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.symbolResourcePaths=new Map();this.symbolFromFile=new Map();this.knownFileNameToModuleNames=new Map();}StaticSymbolResolver.prototype.resolveSymbol=function(staticSymbol){if(staticSymbol.members.length>0){return this._resolveSymbolMembers(staticSymbol);}// Note: always ask for a summary first,
// as we might have read shallow metadata via a .d.ts file
// for the symbol.
var resultFromSummary=this._resolveSymbolFromSummary(staticSymbol);if(resultFromSummary){return resultFromSummary;}var resultFromCache=this.resolvedSymbols.get(staticSymbol);if(resultFromCache){return resultFromCache;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files. So we always need to check both, the summary
// and metadata.
this._createSymbolsOf(staticSymbol.filePath);return this.resolvedSymbols.get(staticSymbol);};/**
         * getImportAs produces a symbol that can be used to import the given symbol.
         * The import might be different than the symbol if the symbol is exported from
         * a library with a summary; in which case we want to import the symbol from the
         * ngfactory re-export instead of directly to avoid introducing a direct dependency
         * on an otherwise indirect dependency.
         *
         * @param staticSymbol the symbol for which to generate a import symbol
         */StaticSymbolResolver.prototype.getImportAs=function(staticSymbol,useSummaries){if(useSummaries===void 0){useSummaries=true;}if(staticSymbol.members.length){var baseSymbol=this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(baseImportAs.filePath,baseImportAs.name,staticSymbol.members):null;}var summarizedFileName=stripSummaryForJitFileSuffix(staticSymbol.filePath);if(summarizedFileName!==staticSymbol.filePath){var summarizedName=stripSummaryForJitNameSuffix(staticSymbol.name);var baseSymbol=this.getStaticSymbol(summarizedFileName,summarizedName,staticSymbol.members);var baseImportAs=this.getImportAs(baseSymbol,useSummaries);return baseImportAs?this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath),summaryForJitName(baseImportAs.name),baseSymbol.members):null;}var result=useSummaries&&this.summaryResolver.getImportAs(staticSymbol)||null;if(!result){result=this.importAs.get(staticSymbol);}return result;};/**
         * getResourcePath produces the path to the original location of the symbol and should
         * be used to determine the relative location of resource references recorded in
         * symbol metadata.
         */StaticSymbolResolver.prototype.getResourcePath=function(staticSymbol){return this.symbolResourcePaths.get(staticSymbol)||staticSymbol.filePath;};/**
         * getTypeArity returns the number of generic type parameters the given symbol
         * has. If the symbol is not a type the result is null.
         */StaticSymbolResolver.prototype.getTypeArity=function(staticSymbol){// If the file is a factory/ngsummary file, don't resolve the symbol as doing so would
// cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.
// All references to generated classes must include the correct arity whenever
// generating code.
if(isGeneratedFile(staticSymbol.filePath)){return null;}var resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));while(resolvedSymbol&&resolvedSymbol.metadata instanceof StaticSymbol){resolvedSymbol=unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));}return resolvedSymbol&&resolvedSymbol.metadata&&resolvedSymbol.metadata.arity||null;};StaticSymbolResolver.prototype.getKnownModuleName=function(filePath){return this.knownFileNameToModuleNames.get(filePath)||null;};StaticSymbolResolver.prototype.recordImportAs=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();this.importAs.set(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.recordModuleNameForFileName=function(fileName,moduleName){this.knownFileNameToModuleNames.set(fileName,moduleName);};/**
         * Invalidate all information derived from the given file and return the
         * static symbols contained in the file.
         *
         * @param fileName the file to invalidate
         */StaticSymbolResolver.prototype.invalidateFile=function(fileName){var e_1,_a;this.metadataCache["delete"](fileName);var symbols=this.symbolFromFile.get(fileName);if(!symbols){return[];}this.symbolFromFile["delete"](fileName);try{for(var symbols_1=__values(symbols),symbols_1_1=symbols_1.next();!symbols_1_1.done;symbols_1_1=symbols_1.next()){var symbol=symbols_1_1.value;this.resolvedSymbols["delete"](symbol);this.importAs["delete"](symbol);this.symbolResourcePaths["delete"](symbol);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(symbols_1_1&&!symbols_1_1.done&&(_a=symbols_1["return"]))_a.call(symbols_1);}finally{if(e_1)throw e_1.error;}}return symbols;};/** @internal */StaticSymbolResolver.prototype.ignoreErrorsFor=function(cb){var recorder=this.errorRecorder;this.errorRecorder=function(){};try{return cb();}finally{this.errorRecorder=recorder;}};StaticSymbolResolver.prototype._resolveSymbolMembers=function(staticSymbol){var members=staticSymbol.members;var baseResolvedSymbol=this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath,staticSymbol.name));if(!baseResolvedSymbol){return null;}var baseMetadata=unwrapResolvedMetadata(baseResolvedSymbol.metadata);if(baseMetadata instanceof StaticSymbol){return new ResolvedStaticSymbol(staticSymbol,this.getStaticSymbol(baseMetadata.filePath,baseMetadata.name,members));}else if(baseMetadata&&baseMetadata.__symbolic==='class'){if(baseMetadata.statics&&members.length===1){return new ResolvedStaticSymbol(staticSymbol,baseMetadata.statics[members[0]]);}}else{var value=baseMetadata;for(var i=0;i<members.length&&value;i++){value=value[members[i]];}return new ResolvedStaticSymbol(staticSymbol,value);}return null;};StaticSymbolResolver.prototype._resolveSymbolFromSummary=function(staticSymbol){var summary=this.summaryResolver.resolveSummary(staticSymbol);return summary?new ResolvedStaticSymbol(staticSymbol,summary.metadata):null;};/**
         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
         * All types passed to the StaticResolver should be pseudo-types returned by this method.
         *
         * @param declarationFile the absolute path of the file where the symbol is declared
         * @param name the name of the type.
         * @param members a symbol for a static member of the named type
         */StaticSymbolResolver.prototype.getStaticSymbol=function(declarationFile,name,members){return this.staticSymbolCache.get(declarationFile,name,members);};/**
         * hasDecorators checks a file's metadata for the presence of decorators without evaluating the
         * metadata.
         *
         * @param filePath the absolute path to examine for decorators.
         * @returns true if any class in the file has a decorator.
         */StaticSymbolResolver.prototype.hasDecorators=function(filePath){var metadata=this.getModuleMetadata(filePath);if(metadata['metadata']){return Object.keys(metadata['metadata']).some(function(metadataKey){var entry=metadata['metadata'][metadataKey];return entry&&entry.__symbolic==='class'&&entry.decorators;});}return false;};StaticSymbolResolver.prototype.getSymbolsOf=function(filePath){var summarySymbols=this.summaryResolver.getSymbolsOf(filePath);if(summarySymbols){return summarySymbols;}// Note: Some users use libraries that were not compiled with ngc, i.e. they don't
// have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.
this._createSymbolsOf(filePath);return this.symbolFromFile.get(filePath)||[];};StaticSymbolResolver.prototype._createSymbolsOf=function(filePath){var e_2,_a,e_3,_b;var _this=this;if(this.symbolFromFile.has(filePath)){return;}var resolvedSymbols=[];var metadata=this.getModuleMetadata(filePath);if(metadata['importAs']){// Index bundle indices should use the importAs module name defined
// in the bundle.
this.knownFileNameToModuleNames.set(filePath,metadata['importAs']);}// handle the symbols in one of the re-export location
if(metadata['exports']){var _loop_1=function _loop_1(moduleExport){// handle the symbols in the list of explicitly re-exported symbols.
if(moduleExport["export"]){moduleExport["export"].forEach(function(exportSymbol){var symbolName;if(typeof exportSymbol==='string'){symbolName=exportSymbol;}else{symbolName=exportSymbol.as;}symbolName=unescapeIdentifier(symbolName);var symName=symbolName;if(typeof exportSymbol!=='string'){symName=unescapeIdentifier(exportSymbol.name);}var resolvedModule=_this.resolveModule(moduleExport.from,filePath);if(resolvedModule){var targetSymbol=_this.getStaticSymbol(resolvedModule,symName);var sourceSymbol=_this.getStaticSymbol(filePath,symbolName);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));}});}else{// Handle the symbols loaded by 'export *' directives.
var resolvedModule=this_1.resolveModule(moduleExport.from,filePath);if(resolvedModule&&resolvedModule!==filePath){var nestedExports=this_1.getSymbolsOf(resolvedModule);nestedExports.forEach(function(targetSymbol){var sourceSymbol=_this.getStaticSymbol(filePath,targetSymbol.name);resolvedSymbols.push(_this.createExport(sourceSymbol,targetSymbol));});}}};var this_1=this;try{for(var _c=__values(metadata['exports']),_d=_c.next();!_d.done;_d=_c.next()){var moduleExport=_d.value;_loop_1(moduleExport);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_2)throw e_2.error;}}}// handle the actual metadata. Has to be after the exports
// as there might be collisions in the names, and we want the symbols
// of the current module to win ofter reexports.
if(metadata['metadata']){// handle direct declarations of the symbol
var topLevelSymbolNames_1=new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));var origins_1=metadata['origins']||{};Object.keys(metadata['metadata']).forEach(function(metadataKey){var symbolMeta=metadata['metadata'][metadataKey];var name=unescapeIdentifier(metadataKey);var symbol=_this.getStaticSymbol(filePath,name);var origin=origins_1.hasOwnProperty(metadataKey)&&origins_1[metadataKey];if(origin){// If the symbol is from a bundled index, use the declaration location of the
// symbol so relative references (such as './my.html') will be calculated
// correctly.
var originFilePath=_this.resolveModule(origin,filePath);if(!originFilePath){_this.reportError(new Error("Couldn't resolve original symbol for "+origin+" from "+_this.host.getOutputName(filePath)));}else{_this.symbolResourcePaths.set(symbol,originFilePath);}}resolvedSymbols.push(_this.createResolvedSymbol(symbol,filePath,topLevelSymbolNames_1,symbolMeta));});}var uniqueSymbols=new Set();try{for(var resolvedSymbols_1=__values(resolvedSymbols),resolvedSymbols_1_1=resolvedSymbols_1.next();!resolvedSymbols_1_1.done;resolvedSymbols_1_1=resolvedSymbols_1.next()){var resolvedSymbol=resolvedSymbols_1_1.value;this.resolvedSymbols.set(resolvedSymbol.symbol,resolvedSymbol);uniqueSymbols.add(resolvedSymbol.symbol);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(resolvedSymbols_1_1&&!resolvedSymbols_1_1.done&&(_b=resolvedSymbols_1["return"]))_b.call(resolvedSymbols_1);}finally{if(e_3)throw e_3.error;}}this.symbolFromFile.set(filePath,Array.from(uniqueSymbols));};StaticSymbolResolver.prototype.createResolvedSymbol=function(sourceSymbol,topLevelPath,topLevelSymbolNames,metadata){var _this=this;// For classes that don't have Angular summaries / metadata,
// we only keep their arity, but nothing else
// (e.g. their constructor parameters).
// We do this to prevent introducing deep imports
// as we didn't generate .ngfactory.ts files with proper reexports.
var isTsFile=TS.test(sourceSymbol.filePath);if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&!isTsFile&&metadata&&metadata['__symbolic']==='class'){var transformedMeta_1={__symbolic:'class',arity:metadata.arity};return new ResolvedStaticSymbol(sourceSymbol,transformedMeta_1);}var _originalFileMemo;var getOriginalName=function getOriginalName(){if(!_originalFileMemo){// Guess what the original file name is from the reference. If it has a `.d.ts` extension
// replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have
// .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`
// location as it is not important to finding the file.
_originalFileMemo=_this.host.getOutputName(topLevelPath.replace(/((\.ts)|(\.d\.ts)|)$/,'.ts').replace(/^.*node_modules[/\\]/,''));}return _originalFileMemo;};var self=this;var ReferenceTransformer=/** @class */function(_super){__extends(ReferenceTransformer,_super);function ReferenceTransformer(){return _super!==null&&_super.apply(this,arguments)||this;}ReferenceTransformer.prototype.visitStringMap=function(map,functionParams){var symbolic=map['__symbolic'];if(symbolic==='function'){var oldLen=functionParams.length;functionParams.push.apply(functionParams,__spread(map['parameters']||[]));var result=_super.prototype.visitStringMap.call(this,map,functionParams);functionParams.length=oldLen;return result;}else if(symbolic==='reference'){var module=map['module'];var name_1=map['name']?unescapeIdentifier(map['name']):map['name'];if(!name_1){return null;}var filePath=void 0;if(module){filePath=self.resolveModule(module,sourceSymbol.filePath);if(!filePath){return{__symbolic:'error',message:"Could not resolve "+module+" relative to "+self.host.getMetadataFor(sourceSymbol.filePath)+".",line:map['line'],character:map['character'],fileName:getOriginalName()};}return{__symbolic:'resolved',symbol:self.getStaticSymbol(filePath,name_1),line:map['line'],character:map['character'],fileName:getOriginalName()};}else if(functionParams.indexOf(name_1)>=0){// reference to a function parameter
return{__symbolic:'reference',name:name_1};}else{if(topLevelSymbolNames.has(name_1)){return self.getStaticSymbol(topLevelPath,name_1);}// ambient value
null;}}else if(symbolic==='error'){return _assign3(_assign3({},map),{fileName:getOriginalName()});}else{return _super.prototype.visitStringMap.call(this,map,functionParams);}};return ReferenceTransformer;}(ValueTransformer);var transformedMeta=visitValue(metadata,new ReferenceTransformer(),[]);var unwrappedTransformedMeta=unwrapResolvedMetadata(transformedMeta);if(unwrappedTransformedMeta instanceof StaticSymbol){return this.createExport(sourceSymbol,unwrappedTransformedMeta);}return new ResolvedStaticSymbol(sourceSymbol,transformedMeta);};StaticSymbolResolver.prototype.createExport=function(sourceSymbol,targetSymbol){sourceSymbol.assertNoMembers();targetSymbol.assertNoMembers();if(this.summaryResolver.isLibraryFile(sourceSymbol.filePath)&&this.summaryResolver.isLibraryFile(targetSymbol.filePath)){// This case is for an ng library importing symbols from a plain ts library
// transitively.
// Note: We rely on the fact that we discover symbols in the direction
// from source files to library files
this.importAs.set(targetSymbol,this.getImportAs(sourceSymbol)||sourceSymbol);}return new ResolvedStaticSymbol(sourceSymbol,targetSymbol);};StaticSymbolResolver.prototype.reportError=function(error,context,path){if(this.errorRecorder){this.errorRecorder(error,context&&context.filePath||path);}else{throw error;}};/**
         * @param module an absolute path to a module file.
         */StaticSymbolResolver.prototype.getModuleMetadata=function(module){var moduleMetadata=this.metadataCache.get(module);if(!moduleMetadata){var moduleMetadatas=this.host.getMetadataFor(module);if(moduleMetadatas){var maxVersion_1=-1;moduleMetadatas.forEach(function(md){if(md&&md['version']>maxVersion_1){maxVersion_1=md['version'];moduleMetadata=md;}});}if(!moduleMetadata){moduleMetadata={__symbolic:'module',version:SUPPORTED_SCHEMA_VERSION,module:module,metadata:{}};}if(moduleMetadata['version']!=SUPPORTED_SCHEMA_VERSION){var errorMessage=moduleMetadata['version']==2?"Unsupported metadata version "+moduleMetadata['version']+" for module "+module+". This module should be compiled with a newer version of ngc":"Metadata version mismatch for module "+this.host.getOutputName(module)+", found version "+moduleMetadata['version']+", expected "+SUPPORTED_SCHEMA_VERSION;this.reportError(new Error(errorMessage));}this.metadataCache.set(module,moduleMetadata);}return moduleMetadata;};StaticSymbolResolver.prototype.getSymbolByModule=function(module,symbolName,containingFile){var filePath=this.resolveModule(module,containingFile);if(!filePath){this.reportError(new Error("Could not resolve module "+module+(containingFile?' relative to '+this.host.getOutputName(containingFile):'')));return this.getStaticSymbol("ERROR:"+module,symbolName);}return this.getStaticSymbol(filePath,symbolName);};StaticSymbolResolver.prototype.resolveModule=function(module,containingFile){try{return this.host.moduleNameToFileName(module,containingFile);}catch(e){console.error("Could not resolve module '"+module+"' relative to file "+containingFile);this.reportError(e,undefined,containingFile);}return null;};return StaticSymbolResolver;}();// Remove extra underscore from escaped identifier.
// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts
function unescapeIdentifier(identifier){return identifier.startsWith('___')?identifier.substr(1):identifier;}function unwrapResolvedMetadata(metadata){if(metadata&&metadata.__symbolic==='resolved'){return metadata.symbol;}return metadata;}function serializeSummaries(srcFileName,forJitCtx,summaryResolver,symbolResolver,symbols,types,createExternalSymbolReexports){if(createExternalSymbolReexports===void 0){createExternalSymbolReexports=false;}var toJsonSerializer=new ToJsonSerializer(symbolResolver,summaryResolver,srcFileName);// for symbols, we use everything except for the class metadata itself
// (we keep the statics though), as the class metadata is contained in the
// CompileTypeSummary.
symbols.forEach(function(resolvedSymbol){return toJsonSerializer.addSummary({symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata});});// Add type summaries.
types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;toJsonSerializer.addSummary({symbol:summary.type.reference,metadata:undefined,type:summary});});var _a=toJsonSerializer.serialize(createExternalSymbolReexports),json=_a.json,exportAs=_a.exportAs;if(forJitCtx){var forJitSerializer_1=new ForJitSerializer(forJitCtx,symbolResolver,summaryResolver);types.forEach(function(_a){var summary=_a.summary,metadata=_a.metadata;forJitSerializer_1.addSourceType(summary,metadata);});toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function(summary){if(summaryResolver.isLibraryFile(summary.symbol.filePath)&&summary.type){forJitSerializer_1.addLibType(summary.type);}});forJitSerializer_1.serialize(exportAs);}return{json:json,exportAs:exportAs};}function deserializeSummaries(symbolCache,summaryResolver,libraryFileName,json){var deserializer=new FromJsonDeserializer(symbolCache,summaryResolver);return deserializer.deserialize(libraryFileName,json);}function createForJitStub(outputCtx,reference){return createSummaryForJitFunction(outputCtx,reference,NULL_EXPR);}function createSummaryForJitFunction(outputCtx,reference,value){var fnName=summaryForJitName(reference.name);outputCtx.statements.push(fn([],[new ReturnStatement(value)],new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName,[exports.StmtModifier.Final,exports.StmtModifier.Exported]));}var ToJsonSerializer=/** @class */function(_super){__extends(ToJsonSerializer,_super);function ToJsonSerializer(symbolResolver,summaryResolver,srcFileName){var _this=_super.call(this)||this;_this.symbolResolver=symbolResolver;_this.summaryResolver=summaryResolver;_this.srcFileName=srcFileName;// Note: This only contains symbols without members.
_this.symbols=[];_this.indexBySymbol=new Map();_this.reexportedBy=new Map();// This now contains a `__symbol: number` in the place of
// StaticSymbols, but otherwise has the same shape as the original objects.
_this.processedSummaryBySymbol=new Map();_this.processedSummaries=[];_this.unprocessedSymbolSummariesBySymbol=new Map();_this.moduleName=symbolResolver.getKnownModuleName(srcFileName);return _this;}ToJsonSerializer.prototype.addSummary=function(summary){var _this=this;var unprocessedSummary=this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);var processedSummary=this.processedSummaryBySymbol.get(summary.symbol);if(!unprocessedSummary){unprocessedSummary={symbol:summary.symbol,metadata:undefined};this.unprocessedSymbolSummariesBySymbol.set(summary.symbol,unprocessedSummary);processedSummary={symbol:this.processValue(summary.symbol,0/* None */)};this.processedSummaries.push(processedSummary);this.processedSummaryBySymbol.set(summary.symbol,processedSummary);}if(!unprocessedSummary.metadata&&summary.metadata){var metadata_1=summary.metadata||{};if(metadata_1.__symbolic==='class'){// For classes, we keep everything except their class decorators.
// We need to keep e.g. the ctor args, method names, method decorators
// so that the class can be extended in another compilation unit.
// We don't keep the class decorators as
// 1) they refer to data
//   that should not cause a rebuild of downstream compilation units
//   (e.g. inline templates of @Component, or @NgModule.declarations)
// 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.
var clone_1={};Object.keys(metadata_1).forEach(function(propName){if(propName!=='decorators'){clone_1[propName]=metadata_1[propName];}});metadata_1=clone_1;}else if(isCall(metadata_1)){if(!isFunctionCall(metadata_1)&&!isMethodCallOnVariable(metadata_1)){// Don't store complex calls as we won't be able to simplify them anyways later on.
metadata_1={__symbolic:'error',message:'Complex function calls are not supported.'};}}// Note: We need to keep storing ctor calls for e.g.
// `export const x = new InjectionToken(...)`
unprocessedSummary.metadata=metadata_1;processedSummary.metadata=this.processValue(metadata_1,1/* ResolveValue */);if(metadata_1 instanceof StaticSymbol&&this.summaryResolver.isLibraryFile(metadata_1.filePath)){var declarationSymbol=this.symbols[this.indexBySymbol.get(metadata_1)];if(!isLoweredSymbol(declarationSymbol.name)){// Note: symbols that were introduced during codegen in the user file can have a reexport
// if a user used `export *`. However, we can't rely on this as tsickle will change
// `export *` into named exports, using only the information from the typechecker.
// As we introduce the new symbols after typecheck, Tsickle does not know about them,
// and omits them when expanding `export *`.
// So we have to keep reexporting these symbols manually via .ngfactory files.
this.reexportedBy.set(declarationSymbol,summary.symbol);}}}if(!unprocessedSummary.type&&summary.type){unprocessedSummary.type=summary.type;// Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,
// as the type summaries already contain the transitive data that they require
// (in a minimal way).
processedSummary.type=this.processValue(summary.type,0/* None */);// except for reexported directives / pipes, so we need to store
// their summaries explicitly.
if(summary.type.summaryKind===exports.CompileSummaryKind.NgModule){var ngModuleSummary=summary.type;ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function(id){var symbol=id.reference;if(_this.summaryResolver.isLibraryFile(symbol.filePath)&&!_this.unprocessedSymbolSummariesBySymbol.has(symbol)){var summary_1=_this.summaryResolver.resolveSummary(symbol);if(summary_1){_this.addSummary(summary_1);}}});}}};/**
         * @param createExternalSymbolReexports Whether external static symbols should be re-exported.
         * This can be enabled if external symbols should be re-exported by the current module in
         * order to avoid dynamically generated module dependencies which can break strict dependency
         * enforcements (as in Google3). Read more here: https://github.com/angular/angular/issues/25644
         */ToJsonSerializer.prototype.serialize=function(createExternalSymbolReexports){var _this=this;var exportAs=[];var json=JSON.stringify({moduleName:this.moduleName,summaries:this.processedSummaries,symbols:this.symbols.map(function(symbol,index){symbol.assertNoMembers();var importAs=undefined;if(_this.summaryResolver.isLibraryFile(symbol.filePath)){var reexportSymbol=_this.reexportedBy.get(symbol);if(reexportSymbol){// In case the given external static symbol is already manually exported by the
// user, we just proxy the external static symbol reference to the manual export.
// This ensures that the AOT compiler imports the external symbol through the
// user export and does not introduce another dependency which is not needed.
importAs=_this.indexBySymbol.get(reexportSymbol);}else if(createExternalSymbolReexports){// In this case, the given external static symbol is *not* manually exported by
// the user, and we manually create a re-export in the factory file so that we
// don't introduce another module dependency. This is useful when running within
// Bazel so that the AOT compiler does not introduce any module dependencies
// which can break the strict dependency enforcement. (e.g. as in Google3)
// Read more about this here: https://github.com/angular/angular/issues/25644
var summary=_this.unprocessedSymbolSummariesBySymbol.get(symbol);if(!summary||!summary.metadata||summary.metadata.__symbolic!=='interface'){importAs=symbol.name+"_"+index;exportAs.push({symbol:symbol,exportAs:importAs});}}}return{__symbol:index,name:symbol.name,filePath:_this.summaryResolver.toSummaryFileName(symbol.filePath,_this.srcFileName),importAs:importAs};})});return{json:json,exportAs:exportAs};};ToJsonSerializer.prototype.processValue=function(value,flags){return visitValue(value,this,flags);};ToJsonSerializer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){var baseSymbol=this.symbolResolver.getStaticSymbol(value.filePath,value.name);var index=this.visitStaticSymbol(baseSymbol,context);return{__symbol:index,members:value.members};}};/**
         * Strip line and character numbers from ngsummaries.
         * Emitting them causes white spaces changes to retrigger upstream
         * recompilations in bazel.
         * TODO: find out a way to have line and character numbers in errors without
         * excessive recompilation in bazel.
         */ToJsonSerializer.prototype.visitStringMap=function(map,context){if(map['__symbolic']==='resolved'){return visitValue(map['symbol'],this,context);}if(map['__symbolic']==='error'){delete map['line'];delete map['character'];}return _super.prototype.visitStringMap.call(this,map,context);};/**
         * Returns null if the options.resolveValue is true, and the summary for the symbol
         * resolved to a type or could not be resolved.
         */ToJsonSerializer.prototype.visitStaticSymbol=function(baseSymbol,flags){var index=this.indexBySymbol.get(baseSymbol);var summary=null;if(flags&1/* ResolveValue */&&this.summaryResolver.isLibraryFile(baseSymbol.filePath)){if(this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)){// the summary for this symbol was already added
// -> nothing to do.
return index;}summary=this.loadSummary(baseSymbol);if(summary&&summary.metadata instanceof StaticSymbol){// The summary is a reexport
index=this.visitStaticSymbol(summary.metadata,flags);// reset the summary as it is just a reexport, so we don't want to store it.
summary=null;}}else if(index!=null){// Note: == on purpose to compare with undefined!
// No summary and the symbol is already added -> nothing to do.
return index;}// Note: == on purpose to compare with undefined!
if(index==null){index=this.symbols.length;this.symbols.push(baseSymbol);}this.indexBySymbol.set(baseSymbol,index);if(summary){this.addSummary(summary);}return index;};ToJsonSerializer.prototype.loadSummary=function(symbol){var summary=this.summaryResolver.resolveSummary(symbol);if(!summary){// some symbols might originate from a plain typescript library
// that just exported .d.ts and .metadata.json files, i.e. where no summary
// files were created.
var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){summary={symbol:resolvedSymbol.symbol,metadata:resolvedSymbol.metadata};}}return summary;};return ToJsonSerializer;}(ValueTransformer);var ForJitSerializer=/** @class */function(){function ForJitSerializer(outputCtx,symbolResolver,summaryResolver){this.outputCtx=outputCtx;this.symbolResolver=symbolResolver;this.summaryResolver=summaryResolver;this.data=[];}ForJitSerializer.prototype.addSourceType=function(summary,metadata){this.data.push({summary:summary,metadata:metadata,isLibrary:false});};ForJitSerializer.prototype.addLibType=function(summary){this.data.push({summary:summary,metadata:null,isLibrary:true});};ForJitSerializer.prototype.serialize=function(exportAsArr){var e_1,_a,e_2,_b,e_3,_c;var _this=this;var exportAsBySymbol=new Map();try{for(var exportAsArr_1=__values(exportAsArr),exportAsArr_1_1=exportAsArr_1.next();!exportAsArr_1_1.done;exportAsArr_1_1=exportAsArr_1.next()){var _d=exportAsArr_1_1.value,symbol=_d.symbol,exportAs=_d.exportAs;exportAsBySymbol.set(symbol,exportAs);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(exportAsArr_1_1&&!exportAsArr_1_1.done&&(_a=exportAsArr_1["return"]))_a.call(exportAsArr_1);}finally{if(e_1)throw e_1.error;}}var ngModuleSymbols=new Set();try{for(var _e=__values(this.data),_f=_e.next();!_f.done;_f=_e.next()){var _g=_f.value,summary=_g.summary,metadata=_g.metadata,isLibrary=_g.isLibrary;if(summary.summaryKind===exports.CompileSummaryKind.NgModule){// collect the symbols that refer to NgModule classes.
// Note: we can't just rely on `summary.type.summaryKind` to determine this as
// we don't add the summaries of all referenced symbols when we serialize type summaries.
// See serializeSummaries for details.
ngModuleSymbols.add(summary.type.reference);var modSummary=summary;try{for(var _h=(e_3=void 0,__values(modSummary.modules)),_j=_h.next();!_j.done;_j=_h.next()){var mod=_j.value;ngModuleSymbols.add(mod.reference);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_j&&!_j.done&&(_c=_h["return"]))_c.call(_h);}finally{if(e_3)throw e_3.error;}}}if(!isLibrary){var fnName=summaryForJitName(summary.type.reference.name);createSummaryForJitFunction(this.outputCtx,summary.type.reference,this.serializeSummaryWithDeps(summary,metadata));}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e["return"]))_b.call(_e);}finally{if(e_2)throw e_2.error;}}ngModuleSymbols.forEach(function(ngModuleSymbol){if(_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)){var exportAs=exportAsBySymbol.get(ngModuleSymbol)||ngModuleSymbol.name;var jitExportAsName=summaryForJitName(exportAs);_this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(ngModuleSymbol)).toDeclStmt(null,[exports.StmtModifier.Exported]));}});};ForJitSerializer.prototype.serializeSummaryWithDeps=function(summary,metadata){var _this=this;var expressions=[this.serializeSummary(summary)];var providers=[];if(metadata instanceof CompileNgModuleMetadata){expressions.push.apply(expressions,__spread(// For directives / pipes, we only add the declared ones,
// and rely on transitively importing NgModules to get the transitive
// summaries.
metadata.declaredDirectives.concat(metadata.declaredPipes).map(function(type){return type.reference;})// For modules,
// we also add the summaries for modules
// from libraries.
// This is ok as we produce reexports for all transitive modules.
.concat(metadata.transitiveModule.modules.map(function(type){return type.reference;}).filter(function(ref){return ref!==metadata.type.reference;})).map(function(ref){return _this.serializeSummaryRef(ref);})));// Note: We don't use `NgModuleSummary.providers`, as that one is transitive,
// and we already have transitive modules.
providers=metadata.providers;}else if(summary.summaryKind===exports.CompileSummaryKind.Directive){var dirSummary=summary;providers=dirSummary.providers.concat(dirSummary.viewProviders);}// Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for
// declaredDirectives / declaredPipes), as we allow
// providers without ctor arguments to skip the `@Injectable` decorator,
// i.e. we didn't generate .ngsummary.ts files for these.
expressions.push.apply(expressions,__spread(providers.filter(function(provider){return!!provider.useClass;}).map(function(provider){return _this.serializeSummary({summaryKind:exports.CompileSummaryKind.Injectable,type:provider.useClass});})));return literalArr(expressions);};ForJitSerializer.prototype.serializeSummaryRef=function(typeSymbol){var jitImportedSymbol=this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath),summaryForJitName(typeSymbol.name));return this.outputCtx.importExpr(jitImportedSymbol);};ForJitSerializer.prototype.serializeSummary=function(data){var outputCtx=this.outputCtx;var Transformer=/** @class */function(){function Transformer(){}Transformer.prototype.visitArray=function(arr,context){var _this=this;return literalArr(arr.map(function(entry){return visitValue(entry,_this,context);}));};Transformer.prototype.visitStringMap=function(map,context){var _this=this;return new LiteralMapExpr(Object.keys(map).map(function(key){return new LiteralMapEntry(key,visitValue(map[key],_this,context),false);}));};Transformer.prototype.visitPrimitive=function(value,context){return literal(value);};Transformer.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol){return outputCtx.importExpr(value);}else{throw new Error("Illegal State: Encountered value "+value);}};return Transformer;}();return visitValue(data,new Transformer(),null);};return ForJitSerializer;}();var FromJsonDeserializer=/** @class */function(_super){__extends(FromJsonDeserializer,_super);function FromJsonDeserializer(symbolCache,summaryResolver){var _this=_super.call(this)||this;_this.symbolCache=symbolCache;_this.summaryResolver=summaryResolver;return _this;}FromJsonDeserializer.prototype.deserialize=function(libraryFileName,json){var _this=this;var data=JSON.parse(json);var allImportAs=[];this.symbols=data.symbols.map(function(serializedSymbol){return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath,libraryFileName),serializedSymbol.name);});data.symbols.forEach(function(serializedSymbol,index){var symbol=_this.symbols[index];var importAs=serializedSymbol.importAs;if(typeof importAs==='number'){allImportAs.push({symbol:symbol,importAs:_this.symbols[importAs]});}else if(typeof importAs==='string'){allImportAs.push({symbol:symbol,importAs:_this.symbolCache.get(ngfactoryFilePath(libraryFileName),importAs)});}});var summaries=visitValue(data.summaries,this,null);return{moduleName:data.moduleName,summaries:summaries,importAs:allImportAs};};FromJsonDeserializer.prototype.visitStringMap=function(map,context){if('__symbol'in map){var baseSymbol=this.symbols[map['__symbol']];var members=map['members'];return members.length?this.symbolCache.get(baseSymbol.filePath,baseSymbol.name,members):baseSymbol;}else{return _super.prototype.visitStringMap.call(this,map,context);}};return FromJsonDeserializer;}(ValueTransformer);function isCall(metadata){return metadata&&metadata.__symbolic==='call';}function isFunctionCall(metadata){return isCall(metadata)&&unwrapResolvedMetadata(metadata.expression)instanceof StaticSymbol;}function isMethodCallOnVariable(metadata){return isCall(metadata)&&metadata.expression&&metadata.expression.__symbolic==='select'&&unwrapResolvedMetadata(metadata.expression.expression)instanceof StaticSymbol;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var AotCompiler=/** @class */function(){function AotCompiler(_config,_options,_host,reflector,_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_typeCheckCompiler,_ngModuleCompiler,_injectableCompiler,_outputEmitter,_summaryResolver,_symbolResolver){this._config=_config;this._options=_options;this._host=_host;this.reflector=reflector;this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._typeCheckCompiler=_typeCheckCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._injectableCompiler=_injectableCompiler;this._outputEmitter=_outputEmitter;this._summaryResolver=_summaryResolver;this._symbolResolver=_symbolResolver;this._templateAstCache=new Map();this._analyzedFiles=new Map();this._analyzedFilesForInjectables=new Map();}AotCompiler.prototype.clearCache=function(){this._metadataResolver.clearCache();};AotCompiler.prototype.analyzeModulesSync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);analyzeResult.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});return analyzeResult;};AotCompiler.prototype.analyzeModulesAsync=function(rootFiles){var _this=this;var analyzeResult=analyzeAndValidateNgModules(rootFiles,this._host,this._symbolResolver,this._metadataResolver);return Promise.all(analyzeResult.ngModules.map(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){return analyzeResult;});};AotCompiler.prototype._analyzeFile=function(fileName){var analyzedFile=this._analyzedFiles.get(fileName);if(!analyzedFile){analyzedFile=analyzeFile(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFiles.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype._analyzeFileForInjectables=function(fileName){var analyzedFile=this._analyzedFilesForInjectables.get(fileName);if(!analyzedFile){analyzedFile=analyzeFileForInjectables(this._host,this._symbolResolver,this._metadataResolver,fileName);this._analyzedFilesForInjectables.set(fileName,analyzedFile);}return analyzedFile;};AotCompiler.prototype.findGeneratedFileNames=function(fileName){var _this=this;var genFileNames=[];var file=this._analyzeFile(fileName);// Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule
// or a reference to a non source file.
// Note: This is overestimating the required .ngfactory files as the real calculation is harder.
// Only do this for StubEmitFlags.Basic, as adding a type check block
// does not change this file (as we generate type check blocks based on NgModules).
if(this._options.allowEmptyCodegenFiles||file.directives.length||file.pipes.length||file.injectables.length||file.ngModules.length||file.exportsNonSourceFiles){genFileNames.push(ngfactoryFilePath(file.fileName,true));if(this._options.enableSummariesForJit){genFileNames.push(summaryForJitFileName(file.fileName,true));}}var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName,true)[1]);file.directives.forEach(function(dirSymbol){var compMeta=_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;if(!compMeta.isComponent){return;}// Note: compMeta is a component and therefore template is non null.
compMeta.template.styleUrls.forEach(function(styleUrl){var normalizedUrl=_this._host.resourceNameToFileName(styleUrl,file.fileName);if(!normalizedUrl){throw syntaxError("Couldn't resolve resource "+styleUrl+" relative to "+file.fileName);}var needsShim=(compMeta.template.encapsulation||_this._config.defaultEncapsulation)===ViewEncapsulation.Emulated;genFileNames.push(_stylesModuleUrl(normalizedUrl,needsShim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){genFileNames.push(_stylesModuleUrl(normalizedUrl,!needsShim,fileSuffix));}});});return genFileNames;};AotCompiler.prototype.emitBasicStub=function(genFileName,originalFileName){var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngfactory.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);this._createNgFactoryStub(outputCtx,originalFile,1/* Basic */);}else if(genFileName.endsWith('.ngsummary.ts')){if(this._options.enableSummariesForJit){if(!originalFileName){throw new Error("Assertion error: require the original file for .ngsummary.ts stubs. File: "+genFileName);}var originalFile=this._analyzeFile(originalFileName);_createEmptyStub(outputCtx);originalFile.ngModules.forEach(function(ngModule){// create exports that user code can reference
createForJitStub(outputCtx,ngModule.type.reference);});}}else if(genFileName.endsWith('.ngstyle.ts')){_createEmptyStub(outputCtx);}// Note: for the stubs, we don't need a property srcFileUrl,
// as later on in emitAllImpls we will create the proper GeneratedFiles with the
// correct srcFileUrl.
// This is good as e.g. for .ngstyle.ts files we can't derive
// the url of components based on the genFileUrl.
return this._codegenSourceModule('unknown',outputCtx);};AotCompiler.prototype.emitTypeCheckStub=function(genFileName,originalFileName){var originalFile=this._analyzeFile(originalFileName);var outputCtx=this._createOutputContext(genFileName);if(genFileName.endsWith('.ngfactory.ts')){this._createNgFactoryStub(outputCtx,originalFile,2/* TypeCheck */);}return outputCtx.statements.length>0?this._codegenSourceModule(originalFile.fileName,outputCtx):null;};AotCompiler.prototype.loadFilesAsync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});var loadingPromises=[];files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false));});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return Promise.all(loadingPromises).then(function(_){return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};});};AotCompiler.prototype.loadFilesSync=function(fileNames,tsFiles){var _this=this;var files=fileNames.map(function(fileName){return _this._analyzeFile(fileName);});files.forEach(function(file){return file.ngModules.forEach(function(ngModule){return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,true);});});var analyzedInjectables=tsFiles.map(function(tsFile){return _this._analyzeFileForInjectables(tsFile);});return{analyzedModules:mergeAndValidateNgFiles(files),analyzedInjectables:analyzedInjectables};};AotCompiler.prototype._createNgFactoryStub=function(outputCtx,file,emitFlags){var _this=this;var componentId=0;file.ngModules.forEach(function(ngModuleMeta,ngModuleIndex){// Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,
// so we don't change the .ngfactory file too much when adding the type-check block.
// create exports that user code can reference
_this._ngModuleCompiler.createStub(outputCtx,ngModuleMeta.type.reference);// add references to the symbols from the metadata.
// These can be used by the type check block for components,
// and they also cause TypeScript to include these files into the program too,
// which will make them part of the analyzedFiles.
var externalReferences=__spread(ngModuleMeta.transitiveModule.directives.map(function(d){return d.reference;}),ngModuleMeta.transitiveModule.pipes.map(function(d){return d.reference;}),ngModuleMeta.importedModules.map(function(m){return m.type.reference;}),ngModuleMeta.exportedModules.map(function(m){return m.type.reference;}),_this._externalIdentifierReferences([Identifiers.TemplateRef,Identifiers.ElementRef]));var externalReferenceVars=new Map();externalReferences.forEach(function(ref,typeIndex){externalReferenceVars.set(ref,"_decl"+ngModuleIndex+"_"+typeIndex);});externalReferenceVars.forEach(function(varName,reference){outputCtx.statements.push(variable(varName).set(NULL_EXPR.cast(DYNAMIC_TYPE)).toDeclStmt(expressionType(outputCtx.importExpr(reference,/* typeParams */null,/* useSummaries */false))));});if(emitFlags&2/* TypeCheck */){// add the type-check block for all components of the NgModule
ngModuleMeta.declaredDirectives.forEach(function(dirId){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirId.reference);if(!compMeta.isComponent){return;}componentId++;_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_Host_"+componentId,ngModuleMeta,_this._metadataResolver.getHostComponentMetadata(compMeta),[compMeta.type],externalReferenceVars);_this._createTypeCheckBlock(outputCtx,compMeta.type.reference.name+"_"+componentId,ngModuleMeta,compMeta,ngModuleMeta.transitiveModule.directives,externalReferenceVars);});}});if(outputCtx.statements.length===0){_createEmptyStub(outputCtx);}};AotCompiler.prototype._externalIdentifierReferences=function(references){var e_1,_a;var result=[];try{for(var references_1=__values(references),references_1_1=references_1.next();!references_1_1.done;references_1_1=references_1.next()){var reference=references_1_1.value;var token=createTokenForExternalReference(this.reflector,reference);if(token.identifier){result.push(token.identifier.reference);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(references_1_1&&!references_1_1.done&&(_a=references_1["return"]))_a.call(references_1);}finally{if(e_1)throw e_1.error;}}return result;};AotCompiler.prototype._createTypeCheckBlock=function(ctx,componentId,moduleMeta,compMeta,directives,externalReferenceVars){var _a;var _b=this._parseTemplate(compMeta,moduleMeta,directives),parsedTemplate=_b.template,usedPipes=_b.pipes;(_a=ctx.statements).push.apply(_a,__spread(this._typeCheckCompiler.compileComponent(componentId,compMeta,parsedTemplate,usedPipes,externalReferenceVars,ctx)));};AotCompiler.prototype.emitMessageBundle=function(analyzeResult,locale){var _this=this;var errors=[];var htmlParser=new HtmlParser();// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);analyzeResult.files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this._metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;// Template URL points to either an HTML or TS file depending on whether
// the file is used with `templateUrl:` or `template:`, respectively.
var templateUrl=compMeta.template.templateUrl;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,__spread(messageBundle.updateFromTemplate(html,templateUrl,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return messageBundle;};AotCompiler.prototype.emitAllPartialModules=function(_a,r3Files){var _this=this;var ngModuleByPipeOrDirective=_a.ngModuleByPipeOrDirective,files=_a.files;var contextMap=new Map();var getContext=function getContext(fileName){if(!contextMap.has(fileName)){contextMap.set(fileName,_this._createOutputContext(fileName));}return contextMap.get(fileName);};files.forEach(function(file){return _this._compilePartialModule(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables,getContext(file.fileName));});r3Files.forEach(function(file){return _this._compileShallowModules(file.fileName,file.shallowModules,getContext(file.fileName));});return Array.from(contextMap.values()).map(function(context){return{fileName:context.genFilePath,statements:__spread(context.constantPool.statements,context.statements)};});};AotCompiler.prototype._compileShallowModules=function(fileName,shallowModules,context){var _this=this;shallowModules.forEach(function(module){return compileNgModuleFromRender2(context,module,_this._injectableCompiler);});};AotCompiler.prototype._compilePartialModule=function(fileName,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables,context){var _this=this;var errors=[];var schemaRegistry=new DomElementSchemaRegistry();var hostBindingParser=new BindingParser(this._templateParser.expressionParser,DEFAULT_INTERPOLATION_CONFIG,schemaRegistry,[],errors);// Process all components and directives
directives.forEach(function(directiveType){var directiveMetadata=_this._metadataResolver.getDirectiveMetadata(directiveType);if(directiveMetadata.isComponent){var module=ngModuleByPipeOrDirective.get(directiveType);module||error("Cannot determine the module for component '"+identifierName(directiveMetadata.type)+"'");var htmlAst=directiveMetadata.template.htmlAst;var preserveWhitespaces=directiveMetadata.template.preserveWhitespaces;if(!preserveWhitespaces){htmlAst=removeWhitespaces(htmlAst);}var render3Ast=htmlAstToRender3Ast(htmlAst.rootNodes,hostBindingParser);// Map of StaticType by directive selectors
var directiveTypeBySel_1=new Map();var directives_1=module.transitiveModule.directives.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});directives_1.forEach(function(directive){if(directive.selector){directiveTypeBySel_1.set(directive.selector,directive.type.reference);}});// Map of StaticType by pipe names
var pipeTypeByName_1=new Map();var pipes_1=module.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});pipes_1.forEach(function(pipe){pipeTypeByName_1.set(pipe.name,pipe.type.reference);});compileComponentFromRender2(context,directiveMetadata,render3Ast,_this.reflector,hostBindingParser,directiveTypeBySel_1,pipeTypeByName_1);}else{compileDirectiveFromRender2(context,directiveMetadata,_this.reflector,hostBindingParser);}});pipes.forEach(function(pipeType){var pipeMetadata=_this._metadataResolver.getPipeMetadata(pipeType);if(pipeMetadata){compilePipeFromRender2(context,pipeMetadata,_this.reflector);}});injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});};AotCompiler.prototype.emitAllPartialModules2=function(files){var _this=this;// Using reduce like this is a select many pattern (where map is a select pattern)
return files.reduce(function(r,file){r.push.apply(r,__spread(_this._emitPartialModule2(file.fileName,file.injectables)));return r;},[]);};AotCompiler.prototype._emitPartialModule2=function(fileName,injectables){var _this=this;var context=this._createOutputContext(fileName);injectables.forEach(function(injectable){return _this._injectableCompiler.compile(injectable,context);});if(context.statements&&context.statements.length>0){return[{fileName:fileName,statements:__spread(context.constantPool.statements,context.statements)}];}return[];};AotCompiler.prototype.emitAllImpls=function(analyzeResult){var _this=this;var ngModuleByPipeOrDirective=analyzeResult.ngModuleByPipeOrDirective,files=analyzeResult.files;var sourceModules=files.map(function(file){return _this._compileImplFile(file.fileName,ngModuleByPipeOrDirective,file.directives,file.pipes,file.ngModules,file.injectables);});return flatten(sourceModules);};AotCompiler.prototype._compileImplFile=function(srcFileUrl,ngModuleByPipeOrDirective,directives,pipes,ngModules,injectables){var _this=this;var fileSuffix=normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl,true)[1]);var generatedFiles=[];var outputCtx=this._createOutputContext(ngfactoryFilePath(srcFileUrl,true));generatedFiles.push.apply(generatedFiles,__spread(this._createSummary(srcFileUrl,directives,pipes,ngModules,injectables,outputCtx)));// compile all ng modules
ngModules.forEach(function(ngModuleMeta){return _this._compileModule(outputCtx,ngModuleMeta);});// compile components
directives.forEach(function(dirType){var compMeta=_this._metadataResolver.getDirectiveMetadata(dirType);if(!compMeta.isComponent){return;}var ngModule=ngModuleByPipeOrDirective.get(dirType);if(!ngModule){throw new Error("Internal Error: cannot determine the module for component "+identifierName(compMeta.type)+"!");}// compile styles
var componentStylesheet=_this._styleCompiler.compileComponent(outputCtx,compMeta);// Note: compMeta is a component and therefore template is non null.
compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){// Note: fill non shim and shim style files as they might
// be shared by component with and without ViewEncapsulation.
var shim=_this._styleCompiler.needsStyleShim(compMeta);generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,shim,fileSuffix));if(_this._options.allowEmptyCodegenFiles){generatedFiles.push(_this._codegenStyles(srcFileUrl,compMeta,stylesheetMeta,!shim,fileSuffix));}});// compile components
var compViewVars=_this._compileComponent(outputCtx,compMeta,ngModule,ngModule.transitiveModule.directives,componentStylesheet,fileSuffix);_this._compileComponentFactory(outputCtx,compMeta,ngModule,fileSuffix);});if(outputCtx.statements.length>0||this._options.allowEmptyCodegenFiles){var srcModule=this._codegenSourceModule(srcFileUrl,outputCtx);generatedFiles.unshift(srcModule);}return generatedFiles;};AotCompiler.prototype._createSummary=function(srcFileName,directives,pipes,ngModules,injectables,ngFactoryCtx){var _this=this;var symbolSummaries=this._symbolResolver.getSymbolsOf(srcFileName).map(function(symbol){return _this._symbolResolver.resolveSymbol(symbol);});var typeData=__spread(ngModules.map(function(meta){return{summary:_this._metadataResolver.getNgModuleSummary(meta.type.reference),metadata:_this._metadataResolver.getNgModuleMetadata(meta.type.reference)};}),directives.map(function(ref){return{summary:_this._metadataResolver.getDirectiveSummary(ref),metadata:_this._metadataResolver.getDirectiveMetadata(ref)};}),pipes.map(function(ref){return{summary:_this._metadataResolver.getPipeSummary(ref),metadata:_this._metadataResolver.getPipeMetadata(ref)};}),injectables.map(function(ref){return{summary:_this._metadataResolver.getInjectableSummary(ref.symbol),metadata:_this._metadataResolver.getInjectableSummary(ref.symbol).type};}));var forJitOutputCtx=this._options.enableSummariesForJit?this._createOutputContext(summaryForJitFileName(srcFileName,true)):null;var _a=serializeSummaries(srcFileName,forJitOutputCtx,this._summaryResolver,this._symbolResolver,symbolSummaries,typeData,this._options.createExternalSymbolFactoryReexports),json=_a.json,exportAs=_a.exportAs;exportAs.forEach(function(entry){ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null,[exports.StmtModifier.Exported]));});var summaryJson=new GeneratedFile(srcFileName,summaryFileName(srcFileName),json);var result=[summaryJson];if(forJitOutputCtx){result.push(this._codegenSourceModule(srcFileName,forJitOutputCtx));}return result;};AotCompiler.prototype._compileModule=function(outputCtx,ngModule){var providers=[];if(this._options.locale){var normalizedLocale=this._options.locale.replace(/_/g,'-');providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.LOCALE_ID),useValue:normalizedLocale});}if(this._options.i18nFormat){providers.push({token:createTokenForExternalReference(this.reflector,Identifiers.TRANSLATIONS_FORMAT),useValue:this._options.i18nFormat});}this._ngModuleCompiler.compile(outputCtx,ngModule,providers);};AotCompiler.prototype._compileComponentFactory=function(outputCtx,compMeta,ngModule,fileSuffix){var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta);var hostViewFactoryVar=this._compileComponent(outputCtx,hostMeta,ngModule,[compMeta.type],null,fileSuffix).viewClassVar;var compFactoryVar=componentFactoryName(compMeta.type.reference);var inputsExprs=[];for(var propName in compMeta.inputs){var templateName=compMeta.inputs[propName];// Don't quote so that the key gets minified...
inputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}var outputsExprs=[];for(var propName in compMeta.outputs){var templateName=compMeta.outputs[propName];// Don't quote so that the key gets minified...
outputsExprs.push(new LiteralMapEntry(propName,literal(templateName),false));}outputCtx.statements.push(variable(compFactoryVar).set(importExpr(Identifiers.createComponentFactory).callFn([literal(compMeta.selector),outputCtx.importExpr(compMeta.type.reference),variable(hostViewFactoryVar),new LiteralMapExpr(inputsExprs),new LiteralMapExpr(outputsExprs),literalArr(compMeta.template.ngContentSelectors.map(function(selector){return literal(selector);}))])).toDeclStmt(importType(Identifiers.ComponentFactory,[expressionType(outputCtx.importExpr(compMeta.type.reference))],[TypeModifier.Const]),[exports.StmtModifier.Final,exports.StmtModifier.Exported]));};AotCompiler.prototype._compileComponent=function(outputCtx,compMeta,ngModule,directiveIdentifiers,componentStyles,fileSuffix){var _a=this._parseTemplate(compMeta,ngModule,directiveIdentifiers),parsedTemplate=_a.template,usedPipes=_a.pipes;var stylesExpr=componentStyles?variable(componentStyles.stylesVar):literalArr([]);var viewResult=this._viewCompiler.compileComponent(outputCtx,compMeta,parsedTemplate,stylesExpr,usedPipes);if(componentStyles){_resolveStyleStatements(this._symbolResolver,componentStyles,this._styleCompiler.needsStyleShim(compMeta),fileSuffix);}return viewResult;};AotCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;if(this._templateAstCache.has(compMeta.type.reference)){return this._templateAstCache.get(compMeta.type.reference);}var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var result=this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);this._templateAstCache.set(compMeta.type.reference,result);return result;};AotCompiler.prototype._createOutputContext=function(genFilePath){var _this=this;var importExpr$1=function importExpr$1(symbol,typeParams,useSummaries){if(typeParams===void 0){typeParams=null;}if(useSummaries===void 0){useSummaries=true;}if(!(symbol instanceof StaticSymbol)){throw new Error("Internal error: unknown identifier "+JSON.stringify(symbol));}var arity=_this._symbolResolver.getTypeArity(symbol)||0;var _a=_this._symbolResolver.getImportAs(symbol,useSummaries)||symbol,filePath=_a.filePath,name=_a.name,members=_a.members;var importModule=_this._fileNameToModuleName(filePath,genFilePath);// It should be good enough to compare filePath to genFilePath and if they are equal
// there is a self reference. However, ngfactory files generate to .ts but their
// symbols have .d.ts so a simple compare is insufficient. They should be canonical
// and is tracked by #17705.
var selfReference=_this._fileNameToModuleName(genFilePath,genFilePath);var moduleName=importModule===selfReference?null:importModule;// If we are in a type expression that refers to a generic type then supply
// the required type parameters. If there were not enough type parameters
// supplied, supply any as the type. Outside a type expression the reference
// should not supply type parameters and be treated as a simple value reference
// to the constructor function itself.
var suppliedTypeParams=typeParams||[];var missingTypeParamsCount=arity-suppliedTypeParams.length;var allTypeParams=suppliedTypeParams.concat(newArray(missingTypeParamsCount,DYNAMIC_TYPE));return members.reduce(function(expr,memberName){return expr.prop(memberName);},importExpr(new ExternalReference(moduleName,name,null),allTypeParams));};return{statements:[],genFilePath:genFilePath,importExpr:importExpr$1,constantPool:new ConstantPool()};};AotCompiler.prototype._fileNameToModuleName=function(importedFilePath,containingFilePath){return this._summaryResolver.getKnownModuleName(importedFilePath)||this._symbolResolver.getKnownModuleName(importedFilePath)||this._host.fileNameToModuleName(importedFilePath,containingFilePath);};AotCompiler.prototype._codegenStyles=function(srcFileUrl,compMeta,stylesheetMetadata,isShimmed,fileSuffix){var outputCtx=this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl,isShimmed,fileSuffix));var compiledStylesheet=this._styleCompiler.compileStyles(outputCtx,compMeta,stylesheetMetadata,isShimmed);_resolveStyleStatements(this._symbolResolver,compiledStylesheet,isShimmed,fileSuffix);return this._codegenSourceModule(srcFileUrl,outputCtx);};AotCompiler.prototype._codegenSourceModule=function(srcFileUrl,ctx){return new GeneratedFile(srcFileUrl,ctx.genFilePath,ctx.statements);};AotCompiler.prototype.listLazyRoutes=function(entryRoute,analyzedModules){var e_2,_a,e_3,_b;var self=this;if(entryRoute){var symbol=parseLazyRoute(entryRoute,this.reflector).referencedModule;return visitLazyRoute(symbol);}else if(analyzedModules){var allLazyRoutes=[];try{for(var _c=__values(analyzedModules.ngModules),_d=_c.next();!_d.done;_d=_c.next()){var ngModule=_d.value;var lazyRoutes=listLazyRoutes(ngModule,this.reflector);try{for(var lazyRoutes_1=(e_3=void 0,__values(lazyRoutes)),lazyRoutes_1_1=lazyRoutes_1.next();!lazyRoutes_1_1.done;lazyRoutes_1_1=lazyRoutes_1.next()){var lazyRoute=lazyRoutes_1_1.value;allLazyRoutes.push(lazyRoute);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(lazyRoutes_1_1&&!lazyRoutes_1_1.done&&(_b=lazyRoutes_1["return"]))_b.call(lazyRoutes_1);}finally{if(e_3)throw e_3.error;}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_2)throw e_2.error;}}return allLazyRoutes;}else{throw new Error("Either route or analyzedModules has to be specified!");}function visitLazyRoute(symbol,seenRoutes,allLazyRoutes){var e_4,_a;if(seenRoutes===void 0){seenRoutes=new Set();}if(allLazyRoutes===void 0){allLazyRoutes=[];}// Support pointing to default exports, but stop recursing there,
// as the StaticReflector does not yet support default exports.
if(seenRoutes.has(symbol)||!symbol.name){return allLazyRoutes;}seenRoutes.add(symbol);var lazyRoutes=listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol,true),self.reflector);try{for(var lazyRoutes_2=__values(lazyRoutes),lazyRoutes_2_1=lazyRoutes_2.next();!lazyRoutes_2_1.done;lazyRoutes_2_1=lazyRoutes_2.next()){var lazyRoute=lazyRoutes_2_1.value;allLazyRoutes.push(lazyRoute);visitLazyRoute(lazyRoute.referencedModule,seenRoutes,allLazyRoutes);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(lazyRoutes_2_1&&!lazyRoutes_2_1.done&&(_a=lazyRoutes_2["return"]))_a.call(lazyRoutes_2);}finally{if(e_4)throw e_4.error;}}return allLazyRoutes;}};return AotCompiler;}();function _createEmptyStub(outputCtx){// Note: We need to produce at least one import statement so that
// TypeScript knows that the file is an es6 module. Otherwise our generated
// exports / imports won't be emitted properly by TypeScript.
outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());}function _resolveStyleStatements(symbolResolver,compileResult,needsShim,fileSuffix){compileResult.dependencies.forEach(function(dep){dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl,needsShim,fileSuffix),dep.name));});}function _stylesModuleUrl(stylesheetUrl,shim,suffix){return""+stylesheetUrl+(shim?'.shim':'')+".ngstyle"+suffix;}function analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver){var files=_analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver);return mergeAnalyzedFiles(files);}function analyzeAndValidateNgModules(fileNames,host,staticSymbolResolver,metadataResolver){return validateAnalyzedModules(analyzeNgModules(fileNames,host,staticSymbolResolver,metadataResolver));}function validateAnalyzedModules(analyzedModules){if(analyzedModules.symbolsMissingModule&&analyzedModules.symbolsMissingModule.length){var messages=analyzedModules.symbolsMissingModule.map(function(s){return"Cannot determine the module for class "+s.name+" in "+s.filePath+"! Add "+s.name+" to the NgModule to fix it.";});throw syntaxError(messages.join('\n'));}return analyzedModules;}// Analyzes all of the program files,
// including files that are not part of the program
// but are referenced by an NgModule.
function _analyzeFilesIncludingNonProgramFiles(fileNames,host,staticSymbolResolver,metadataResolver){var seenFiles=new Set();var files=[];var visitFile=function visitFile(fileName){if(seenFiles.has(fileName)||!host.isSourceFile(fileName)){return false;}seenFiles.add(fileName);var analyzedFile=analyzeFile(host,staticSymbolResolver,metadataResolver,fileName);files.push(analyzedFile);analyzedFile.ngModules.forEach(function(ngModule){ngModule.transitiveModule.modules.forEach(function(modMeta){return visitFile(modMeta.reference.filePath);});});};fileNames.forEach(function(fileName){return visitFile(fileName);});return files;}function analyzeFile(host,staticSymbolResolver,metadataResolver,fileName){var abstractDirectives=[];var directives=[];var pipes=[];var injectables=[];var ngModules=[];var hasDecorators=staticSymbolResolver.hasDecorators(fileName);var exportsNonSourceFiles=false;var isDeclarationFile=fileName.endsWith('.d.ts');// Don't analyze .d.ts files that have no decorators as a shortcut
// to speed up the analysis. This prevents us from
// resolving the references in these files.
// Note: exportsNonSourceFiles is only needed when compiling with summaries,
// which is not the case when .d.ts files are treated as input files.
if(!isDeclarationFile||hasDecorators){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}var isNgSymbol=false;if(symbolMeta.__symbolic==='class'){if(metadataResolver.isDirective(symbol)){isNgSymbol=true;// This directive either has a selector or doesn't. Selector-less directives get tracked
// in abstractDirectives, not directives. The compiler doesn't deal with selector-less
// directives at all, really, other than to persist their metadata. This is done so that
// apps will have an easier time migrating to Ivy, which requires the selector-less
// annotations to be applied.
if(!metadataResolver.isAbstractDirective(symbol)){// The directive is an ordinary directive.
directives.push(symbol);}else{// The directive has no selector and is an "abstract" directive, so track it
// accordingly.
abstractDirectives.push(symbol);}}else if(metadataResolver.isPipe(symbol)){isNgSymbol=true;pipes.push(symbol);}else if(metadataResolver.isNgModule(symbol)){var ngModule=metadataResolver.getNgModuleMetadata(symbol,false);if(ngModule){isNgSymbol=true;ngModules.push(ngModule);}}else if(metadataResolver.isInjectable(symbol)){isNgSymbol=true;var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}}if(!isNgSymbol){exportsNonSourceFiles=exportsNonSourceFiles||isValueExportingNonSourceFile(host,symbolMeta);}});}return{fileName:fileName,directives:directives,abstractDirectives:abstractDirectives,pipes:pipes,ngModules:ngModules,injectables:injectables,exportsNonSourceFiles:exportsNonSourceFiles};}function analyzeFileForInjectables(host,staticSymbolResolver,metadataResolver,fileName){var injectables=[];var shallowModules=[];if(staticSymbolResolver.hasDecorators(fileName)){staticSymbolResolver.getSymbolsOf(fileName).forEach(function(symbol){var resolvedSymbol=staticSymbolResolver.resolveSymbol(symbol);var symbolMeta=resolvedSymbol.metadata;if(!symbolMeta||symbolMeta.__symbolic==='error'){return;}if(symbolMeta.__symbolic==='class'){if(metadataResolver.isInjectable(symbol)){var injectable=metadataResolver.getInjectableMetadata(symbol,null,false);if(injectable){injectables.push(injectable);}}else if(metadataResolver.isNgModule(symbol)){var module=metadataResolver.getShallowModuleMetadata(symbol);if(module){shallowModules.push(module);}}}});}return{fileName:fileName,injectables:injectables,shallowModules:shallowModules};}function isValueExportingNonSourceFile(host,metadata){var exportsNonSourceFiles=false;var Visitor=/** @class */function(){function Visitor(){}Visitor.prototype.visitArray=function(arr,context){var _this=this;arr.forEach(function(v){return visitValue(v,_this,context);});};Visitor.prototype.visitStringMap=function(map,context){var _this=this;Object.keys(map).forEach(function(key){return visitValue(map[key],_this,context);});};Visitor.prototype.visitPrimitive=function(value,context){};Visitor.prototype.visitOther=function(value,context){if(value instanceof StaticSymbol&&!host.isSourceFile(value.filePath)){exportsNonSourceFiles=true;}};return Visitor;}();visitValue(metadata,new Visitor(),null);return exportsNonSourceFiles;}function mergeAnalyzedFiles(analyzedFiles){var allNgModules=[];var ngModuleByPipeOrDirective=new Map();var allPipesAndDirectives=new Set();analyzedFiles.forEach(function(af){af.ngModules.forEach(function(ngModule){allNgModules.push(ngModule);ngModule.declaredDirectives.forEach(function(d){return ngModuleByPipeOrDirective.set(d.reference,ngModule);});ngModule.declaredPipes.forEach(function(p){return ngModuleByPipeOrDirective.set(p.reference,ngModule);});});af.directives.forEach(function(d){return allPipesAndDirectives.add(d);});af.pipes.forEach(function(p){return allPipesAndDirectives.add(p);});});var symbolsMissingModule=[];allPipesAndDirectives.forEach(function(ref){if(!ngModuleByPipeOrDirective.has(ref)){symbolsMissingModule.push(ref);}});return{ngModules:allNgModules,ngModuleByPipeOrDirective:ngModuleByPipeOrDirective,symbolsMissingModule:symbolsMissingModule,files:analyzedFiles};}function mergeAndValidateNgFiles(files){return validateAnalyzedModules(mergeAnalyzedFiles(files));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var FORMATTED_MESSAGE='ngFormattedMessage';function indentStr(level){if(level<=0)return'';if(level<6)return['',' ','  ','   ','    ','     '][level];var half=indentStr(Math.floor(level/2));return half+half+(level%2===1?' ':'');}function formatChain(chain,indent){var e_1,_a;if(indent===void 0){indent=0;}if(!chain)return'';var position=chain.position?chain.position.fileName+"("+(chain.position.line+1)+","+(chain.position.column+1)+")":'';var prefix=position&&indent===0?position+": ":'';var postfix=position&&indent!==0?" at "+position:'';var message=""+prefix+chain.message+postfix;if(chain.next){try{for(var _b=__values(chain.next),_c=_b.next();!_c.done;_c=_b.next()){var kid=_c.value;message+='\n'+formatChain(kid,indent+2);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}return""+indentStr(indent)+message;}function formattedError(chain){var message=formatChain(chain)+'.';var error=syntaxError(message);error[FORMATTED_MESSAGE]=true;error.chain=chain;error.position=chain.position;return error;}function isFormattedError(error){return!!error[FORMATTED_MESSAGE];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ANGULAR_CORE='@angular/core';var ANGULAR_ROUTER='@angular/router';var HIDDEN_KEY=/^\$.*\$$/;var IGNORE={__symbolic:'ignore'};var USE_VALUE$1='useValue';var PROVIDE='provide';var REFERENCE_SET=new Set([USE_VALUE$1,'useFactory','data','id','loadChildren']);var TYPEGUARD_POSTFIX='TypeGuard';var USE_IF='UseIf';function shouldIgnore(value){return value&&value.__symbolic=='ignore';}/**
     * A static reflector implements enough of the Reflector API that is necessary to compile
     * templates statically.
     */var StaticReflector=/** @class */function(){function StaticReflector(summaryResolver,symbolResolver,knownMetadataClasses,knownMetadataFunctions,errorRecorder){var _this=this;if(knownMetadataClasses===void 0){knownMetadataClasses=[];}if(knownMetadataFunctions===void 0){knownMetadataFunctions=[];}this.summaryResolver=summaryResolver;this.symbolResolver=symbolResolver;this.errorRecorder=errorRecorder;this.annotationCache=new Map();this.shallowAnnotationCache=new Map();this.propertyCache=new Map();this.parameterCache=new Map();this.methodCache=new Map();this.staticCache=new Map();this.conversionMap=new Map();this.resolvedExternalReferences=new Map();this.annotationForParentClassWithSummaryKind=new Map();this.initializeConversionMap();knownMetadataClasses.forEach(function(kc){return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath,kc.name),kc.ctor);});knownMetadataFunctions.forEach(function(kf){return _this._registerFunction(_this.getStaticSymbol(kf.filePath,kf.name),kf.fn);});this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Directive,[createDirective,createComponent]);this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Pipe,[createPipe]);this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.NgModule,[createNgModule]);this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Injectable,[createInjectable,createPipe,createDirective,createComponent,createNgModule]);}StaticReflector.prototype.componentModuleUrl=function(typeOrFunc){var staticSymbol=this.findSymbolDeclaration(typeOrFunc);return this.symbolResolver.getResourcePath(staticSymbol);};/**
         * Invalidate the specified `symbols` on program change.
         * @param symbols
         */StaticReflector.prototype.invalidateSymbols=function(symbols){var e_1,_a;try{for(var symbols_1=__values(symbols),symbols_1_1=symbols_1.next();!symbols_1_1.done;symbols_1_1=symbols_1.next()){var symbol=symbols_1_1.value;this.annotationCache["delete"](symbol);this.shallowAnnotationCache["delete"](symbol);this.propertyCache["delete"](symbol);this.parameterCache["delete"](symbol);this.methodCache["delete"](symbol);this.staticCache["delete"](symbol);this.conversionMap["delete"](symbol);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(symbols_1_1&&!symbols_1_1.done&&(_a=symbols_1["return"]))_a.call(symbols_1);}finally{if(e_1)throw e_1.error;}}};StaticReflector.prototype.resolveExternalReference=function(ref,containingFile){var key=undefined;if(!containingFile){key=ref.moduleName+":"+ref.name;var declarationSymbol_1=this.resolvedExternalReferences.get(key);if(declarationSymbol_1)return declarationSymbol_1;}var refSymbol=this.symbolResolver.getSymbolByModule(ref.moduleName,ref.name,containingFile);var declarationSymbol=this.findSymbolDeclaration(refSymbol);if(!containingFile){this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath,ref.moduleName);this.symbolResolver.recordImportAs(declarationSymbol,refSymbol);}if(key){this.resolvedExternalReferences.set(key,declarationSymbol);}return declarationSymbol;};StaticReflector.prototype.findDeclaration=function(moduleUrl,name,containingFile){return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl,name,containingFile));};StaticReflector.prototype.tryFindDeclaration=function(moduleUrl,name,containingFile){var _this=this;return this.symbolResolver.ignoreErrorsFor(function(){return _this.findDeclaration(moduleUrl,name,containingFile);});};StaticReflector.prototype.findSymbolDeclaration=function(symbol){var resolvedSymbol=this.symbolResolver.resolveSymbol(symbol);if(resolvedSymbol){var resolvedMetadata=resolvedSymbol.metadata;if(resolvedMetadata&&resolvedMetadata.__symbolic==='resolved'){resolvedMetadata=resolvedMetadata.symbol;}if(resolvedMetadata instanceof StaticSymbol){return this.findSymbolDeclaration(resolvedSymbol.metadata);}}return symbol;};StaticReflector.prototype.tryAnnotations=function(type){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error,fileName){};try{return this.annotations(type);}finally{this.errorRecorder=originalRecorder;}};StaticReflector.prototype.annotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators);},this.annotationCache);};StaticReflector.prototype.shallowAnnotations=function(type){var _this=this;return this._annotations(type,function(type,decorators){return _this.simplify(type,decorators,true);},this.shallowAnnotationCache);};StaticReflector.prototype._annotations=function(type,simplify,annotationCache){var annotations=annotationCache.get(type);if(!annotations){annotations=[];var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);if(parentType){var parentAnnotations=this.annotations(parentType);annotations.push.apply(annotations,__spread(parentAnnotations));}var ownAnnotations_1=[];if(classMetadata['decorators']){ownAnnotations_1=simplify(type,classMetadata['decorators']);if(ownAnnotations_1){annotations.push.apply(annotations,__spread(ownAnnotations_1));}}if(parentType&&!this.summaryResolver.isLibraryFile(type.filePath)&&this.summaryResolver.isLibraryFile(parentType.filePath)){var summary=this.summaryResolver.resolveSummary(parentType);if(summary&&summary.type){var requiredAnnotationTypes=this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);var typeHasRequiredAnnotation=requiredAnnotationTypes.some(function(requiredType){return ownAnnotations_1.some(function(ann){return requiredType.isTypeOf(ann);});});if(!typeHasRequiredAnnotation){this.reportError(formatMetadataError(metadataError("Class "+type.name+" in "+type.filePath+" extends from a "+exports.CompileSummaryKind[summary.type.summaryKind]+" in another compilation unit without duplicating the decorator",/* summary */undefined,"Please add a "+requiredAnnotationTypes.map(function(type){return type.ngMetadataName;}).join(' or ')+" decorator to the class"),type),type);}}}annotationCache.set(type,annotations.filter(function(ann){return!!ann;}));}return annotations;};StaticReflector.prototype.propMetadata=function(type){var _this=this;var propMetadata=this.propertyCache.get(type);if(!propMetadata){var classMetadata=this.getTypeMetadata(type);propMetadata={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentPropMetadata_1=this.propMetadata(parentType);Object.keys(parentPropMetadata_1).forEach(function(parentProp){propMetadata[parentProp]=parentPropMetadata_1[parentProp];});}var members_1=classMetadata['members']||{};Object.keys(members_1).forEach(function(propName){var propData=members_1[propName];var prop=propData.find(function(a){return a['__symbolic']=='property'||a['__symbolic']=='method';});var decorators=[];if(propMetadata[propName]){decorators.push.apply(decorators,__spread(propMetadata[propName]));}propMetadata[propName]=decorators;if(prop&&prop['decorators']){decorators.push.apply(decorators,__spread(_this.simplify(type,prop['decorators'])));}});this.propertyCache.set(type,propMetadata);}return propMetadata;};StaticReflector.prototype.parameters=function(type){var _this=this;if(!(type instanceof StaticSymbol)){this.reportError(new Error("parameters received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return[];}try{var parameters_1=this.parameterCache.get(type);if(!parameters_1){var classMetadata=this.getTypeMetadata(type);var parentType=this.findParentType(type,classMetadata);var members=classMetadata?classMetadata['members']:null;var ctorData=members?members['__ctor__']:null;if(ctorData){var ctor=ctorData.find(function(a){return a['__symbolic']=='constructor';});var rawParameterTypes=ctor['parameters']||[];var parameterDecorators_1=this.simplify(type,ctor['parameterDecorators']||[]);parameters_1=[];rawParameterTypes.forEach(function(rawParamType,index){var nestedResult=[];var paramType=_this.trySimplify(type,rawParamType);if(paramType)nestedResult.push(paramType);var decorators=parameterDecorators_1?parameterDecorators_1[index]:null;if(decorators){nestedResult.push.apply(nestedResult,__spread(decorators));}parameters_1.push(nestedResult);});}else if(parentType){parameters_1=this.parameters(parentType);}if(!parameters_1){parameters_1=[];}this.parameterCache.set(type,parameters_1);}return parameters_1;}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype._methodNames=function(type){var methodNames=this.methodCache.get(type);if(!methodNames){var classMetadata=this.getTypeMetadata(type);methodNames={};var parentType=this.findParentType(type,classMetadata);if(parentType){var parentMethodNames_1=this._methodNames(parentType);Object.keys(parentMethodNames_1).forEach(function(parentProp){methodNames[parentProp]=parentMethodNames_1[parentProp];});}var members_2=classMetadata['members']||{};Object.keys(members_2).forEach(function(propName){var propData=members_2[propName];var isMethod=propData.some(function(a){return a['__symbolic']=='method';});methodNames[propName]=methodNames[propName]||isMethod;});this.methodCache.set(type,methodNames);}return methodNames;};StaticReflector.prototype._staticMembers=function(type){var staticMembers=this.staticCache.get(type);if(!staticMembers){var classMetadata=this.getTypeMetadata(type);var staticMemberData=classMetadata['statics']||{};staticMembers=Object.keys(staticMemberData);this.staticCache.set(type,staticMembers);}return staticMembers;};StaticReflector.prototype.findParentType=function(type,classMetadata){var parentType=this.trySimplify(type,classMetadata['extends']);if(parentType instanceof StaticSymbol){return parentType;}};StaticReflector.prototype.hasLifecycleHook=function(type,lcProperty){if(!(type instanceof StaticSymbol)){this.reportError(new Error("hasLifecycleHook received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);}try{return!!this._methodNames(type)[lcProperty];}catch(e){console.error("Failed on type "+JSON.stringify(type)+" with error "+e);throw e;}};StaticReflector.prototype.guards=function(type){var e_2,_a;if(!(type instanceof StaticSymbol)){this.reportError(new Error("guards received "+JSON.stringify(type)+" which is not a StaticSymbol"),type);return{};}var staticMembers=this._staticMembers(type);var result={};try{for(var staticMembers_1=__values(staticMembers),staticMembers_1_1=staticMembers_1.next();!staticMembers_1_1.done;staticMembers_1_1=staticMembers_1.next()){var name_1=staticMembers_1_1.value;if(name_1.endsWith(TYPEGUARD_POSTFIX)){var property=name_1.substr(0,name_1.length-TYPEGUARD_POSTFIX.length);var value=void 0;if(property.endsWith(USE_IF)){property=name_1.substr(0,property.length-USE_IF.length);value=USE_IF;}else{value=this.getStaticSymbol(type.filePath,type.name,[name_1]);}result[property]=value;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(staticMembers_1_1&&!staticMembers_1_1.done&&(_a=staticMembers_1["return"]))_a.call(staticMembers_1);}finally{if(e_2)throw e_2.error;}}return result;};StaticReflector.prototype._registerDecoratorOrConstructor=function(type,ctor){this.conversionMap.set(type,function(context,args){return new(ctor.bind.apply(ctor,__spread([void 0],args)))();});};StaticReflector.prototype._registerFunction=function(type,fn){this.conversionMap.set(type,function(context,args){return fn.apply(undefined,args);});};StaticReflector.prototype.initializeConversionMap=function(){this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Injectable'),createInjectable);this.injectionToken=this.findDeclaration(ANGULAR_CORE,'InjectionToken');this.opaqueToken=this.findDeclaration(ANGULAR_CORE,'OpaqueToken');this.ROUTES=this.tryFindDeclaration(ANGULAR_ROUTER,'ROUTES');this.ANALYZE_FOR_ENTRY_COMPONENTS=this.findDeclaration(ANGULAR_CORE,'ANALYZE_FOR_ENTRY_COMPONENTS');this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Inject'),createInject);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Attribute'),createAttribute);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChild'),createContentChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ContentChildren'),createContentChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChild'),createViewChild);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'ViewChildren'),createViewChildren);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Input'),createInput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Output'),createOutput);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Pipe'),createPipe);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostBinding'),createHostBinding);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'HostListener'),createHostListener);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Directive'),createDirective);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Component'),createComponent);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'NgModule'),createNgModule);// Note: Some metadata classes can be used directly with Provider.deps.
this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Host'),createHost);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Self'),createSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'SkipSelf'),createSkipSelf);this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE,'Optional'),createOptional);};/**
         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.
         * All types passed to the StaticResolver should be pseudo-types returned by this method.
         *
         * @param declarationFile the absolute path of the file where the symbol is declared
         * @param name the name of the type.
         */StaticReflector.prototype.getStaticSymbol=function(declarationFile,name,members){return this.symbolResolver.getStaticSymbol(declarationFile,name,members);};/**
         * Simplify but discard any errors
         */StaticReflector.prototype.trySimplify=function(context,value){var originalRecorder=this.errorRecorder;this.errorRecorder=function(error,fileName){};var result=this.simplify(context,value);this.errorRecorder=originalRecorder;return result;};/** @internal */StaticReflector.prototype.simplify=function(context,value,lazy){if(lazy===void 0){lazy=false;}var self=this;var scope=BindingScope$1.empty;var calling=new Map();var rootContext=context;function simplifyInContext(context,value,depth,references){function resolveReferenceValue(staticSymbol){var resolvedSymbol=self.symbolResolver.resolveSymbol(staticSymbol);return resolvedSymbol?resolvedSymbol.metadata:null;}function simplifyEagerly(value){return simplifyInContext(context,value,depth,0);}function simplifyLazily(value){return simplifyInContext(context,value,depth,references+1);}function simplifyNested(nestedContext,value){if(nestedContext===context){// If the context hasn't changed let the exception propagate unmodified.
return simplifyInContext(nestedContext,value,depth+1,references);}try{return simplifyInContext(nestedContext,value,depth+1,references);}catch(e){if(isMetadataError(e)){// Propagate the message text up but add a message to the chain that explains how we got
// here.
// e.chain implies e.symbol
var summaryMsg=e.chain?'references \''+e.symbol.name+'\'':errorSummary(e);var summary="'"+nestedContext.name+"' "+summaryMsg;var chain={message:summary,position:e.position,next:e.chain};// TODO(chuckj): retrieve the position information indirectly from the collectors node
// map if the metadata is from a .ts file.
self.error({message:e.message,advise:e.advise,context:e.context,chain:chain,symbol:nestedContext},context);}else{// It is probably an internal error.
throw e;}}}function simplifyCall(functionSymbol,targetFunction,args,targetExpression){if(targetFunction&&targetFunction['__symbolic']=='function'){if(calling.get(functionSymbol)){self.error({message:'Recursion is not supported',summary:"called '"+functionSymbol.name+"' recursively",value:targetFunction},functionSymbol);}try{var value_1=targetFunction['value'];if(value_1&&(depth!=0||value_1.__symbolic!='error')){var parameters=targetFunction['parameters'];var defaults=targetFunction.defaults;args=args.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});if(defaults&&defaults.length>args.length){args.push.apply(args,__spread(defaults.slice(args.length).map(function(value){return simplify(value);})));}calling.set(functionSymbol,true);var functionScope=BindingScope$1.build();for(var i=0;i<parameters.length;i++){functionScope.define(parameters[i],args[i]);}var oldScope=scope;var result_1;try{scope=functionScope.done();result_1=simplifyNested(functionSymbol,value_1);}finally{scope=oldScope;}return result_1;}}finally{calling["delete"](functionSymbol);}}if(depth===0){// If depth is 0 we are evaluating the top level expression that is describing element
// decorator. In this case, it is a decorator we don't understand, such as a custom
// non-angular decorator, and we should just ignore it.
return IGNORE;}var position=undefined;if(targetExpression&&targetExpression.__symbolic=='resolved'){var line=targetExpression.line;var character=targetExpression.character;var fileName=targetExpression.fileName;if(fileName!=null&&line!=null&&character!=null){position={fileName:fileName,line:line,column:character};}}self.error({message:FUNCTION_CALL_NOT_SUPPORTED,context:functionSymbol,value:targetFunction,position:position},context);}function simplify(expression){var e_3,_a,e_4,_b;if(isPrimitive(expression)){return expression;}if(Array.isArray(expression)){var result_2=[];try{for(var _c=__values(expression),_d=_c.next();!_d.done;_d=_c.next()){var item=_d.value;// Check for a spread expression
if(item&&item.__symbolic==='spread'){// We call with references as 0 because we require the actual value and cannot
// tolerate a reference here.
var spreadArray=simplifyEagerly(item.expression);if(Array.isArray(spreadArray)){try{for(var spreadArray_1=(e_4=void 0,__values(spreadArray)),spreadArray_1_1=spreadArray_1.next();!spreadArray_1_1.done;spreadArray_1_1=spreadArray_1.next()){var spreadItem=spreadArray_1_1.value;result_2.push(spreadItem);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(spreadArray_1_1&&!spreadArray_1_1.done&&(_b=spreadArray_1["return"]))_b.call(spreadArray_1);}finally{if(e_4)throw e_4.error;}}continue;}}var value_2=simplify(item);if(shouldIgnore(value_2)){continue;}result_2.push(value_2);}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_3)throw e_3.error;}}return result_2;}if(expression instanceof StaticSymbol){// Stop simplification at builtin symbols or if we are in a reference context and
// the symbol doesn't have members.
if(expression===self.injectionToken||self.conversionMap.has(expression)||references>0&&!expression.members.length){return expression;}else{var staticSymbol=expression;var declarationValue=resolveReferenceValue(staticSymbol);if(declarationValue!=null){return simplifyNested(staticSymbol,declarationValue);}else{return staticSymbol;}}}if(expression){if(expression['__symbolic']){var staticSymbol=void 0;switch(expression['__symbolic']){case'binop':var left=simplify(expression['left']);if(shouldIgnore(left))return left;var right=simplify(expression['right']);if(shouldIgnore(right))return right;switch(expression['operator']){case'&&':return left&&right;case'||':return left||right;case'|':return left|right;case'^':return left^right;case'&':return left&right;case'==':return left==right;case'!=':return left!=right;case'===':return left===right;case'!==':return left!==right;case'<':return left<right;case'>':return left>right;case'<=':return left<=right;case'>=':return left>=right;case'<<':return left<<right;case'>>':return left>>right;case'+':return left+right;case'-':return left-right;case'*':return left*right;case'/':return left/right;case'%':return left%right;}return null;case'if':var condition=simplify(expression['condition']);return condition?simplify(expression['thenExpression']):simplify(expression['elseExpression']);case'pre':var operand=simplify(expression['operand']);if(shouldIgnore(operand))return operand;switch(expression['operator']){case'+':return operand;case'-':return-operand;case'!':return!operand;case'~':return~operand;}return null;case'index':var indexTarget=simplifyEagerly(expression['expression']);var index=simplifyEagerly(expression['index']);if(indexTarget&&isPrimitive(index))return indexTarget[index];return null;case'select':var member=expression['member'];var selectContext=context;var selectTarget=simplify(expression['expression']);if(selectTarget instanceof StaticSymbol){var members=selectTarget.members.concat(member);selectContext=self.getStaticSymbol(selectTarget.filePath,selectTarget.name,members);var declarationValue=resolveReferenceValue(selectContext);if(declarationValue!=null){return simplifyNested(selectContext,declarationValue);}else{return selectContext;}}if(selectTarget&&isPrimitive(member))return simplifyNested(selectContext,selectTarget[member]);return null;case'reference':// Note: This only has to deal with variable references, as symbol references have
// been converted into 'resolved'
// in the StaticSymbolResolver.
var name_2=expression['name'];var localValue=scope.resolve(name_2);if(localValue!=BindingScope$1.missing){return localValue;}break;case'resolved':try{return simplify(expression.symbol);}catch(e){// If an error is reported evaluating the symbol record the position of the
// reference in the error so it can
// be reported in the error message generated from the exception.
if(isMetadataError(e)&&expression.fileName!=null&&expression.line!=null&&expression.character!=null){e.position={fileName:expression.fileName,line:expression.line,column:expression.character};}throw e;}case'class':return context;case'function':return context;case'new':case'call':// Determine if the function is a built-in conversion
staticSymbol=simplifyInContext(context,expression['expression'],depth+1,/* references */0);if(staticSymbol instanceof StaticSymbol){if(staticSymbol===self.injectionToken||staticSymbol===self.opaqueToken){// if somebody calls new InjectionToken, don't create an InjectionToken,
// but rather return the symbol to which the InjectionToken is assigned to.
// OpaqueToken is supported too as it is required by the language service to
// support v4 and prior versions of Angular.
return context;}var argExpressions=expression['arguments']||[];var converter=self.conversionMap.get(staticSymbol);if(converter){var args=argExpressions.map(function(arg){return simplifyNested(context,arg);}).map(function(arg){return shouldIgnore(arg)?undefined:arg;});return converter(context,args);}else{// Determine if the function is one we can simplify.
var targetFunction=resolveReferenceValue(staticSymbol);return simplifyCall(staticSymbol,targetFunction,argExpressions,expression['expression']);}}return IGNORE;case'error':var message=expression.message;if(expression['line']!=null){self.error({message:message,context:expression.context,value:expression,position:{fileName:expression['fileName'],line:expression['line'],column:expression['character']}},context);}else{self.error({message:message,context:expression.context},context);}return IGNORE;case'ignore':return expression;}return null;}return mapStringMap(expression,function(value,name){if(REFERENCE_SET.has(name)){if(name===USE_VALUE$1&&PROVIDE in expression){// If this is a provider expression, check for special tokens that need the value
// during analysis.
var provide=simplify(expression.provide);if(provide===self.ROUTES||provide==self.ANALYZE_FOR_ENTRY_COMPONENTS){return simplify(value);}}return simplifyLazily(value);}return simplify(value);});}return IGNORE;}return simplify(value);}var result;try{result=simplifyInContext(context,value,0,lazy?1:0);}catch(e){if(this.errorRecorder){this.reportError(e,context);}else{throw formatMetadataError(e,context);}}if(shouldIgnore(result)){return undefined;}return result;};StaticReflector.prototype.getTypeMetadata=function(type){var resolvedSymbol=this.symbolResolver.resolveSymbol(type);return resolvedSymbol&&resolvedSymbol.metadata?resolvedSymbol.metadata:{__symbolic:'class'};};StaticReflector.prototype.reportError=function(error,context,path){if(this.errorRecorder){this.errorRecorder(formatMetadataError(error,context),context&&context.filePath||path);}else{throw error;}};StaticReflector.prototype.error=function(_a,reportingContext){var message=_a.message,summary=_a.summary,advise=_a.advise,position=_a.position,context=_a.context,value=_a.value,symbol=_a.symbol,chain=_a.chain;this.reportError(metadataError(message,summary,advise,position,symbol,context,chain),reportingContext);};return StaticReflector;}();var METADATA_ERROR='ngMetadataError';function metadataError(message,summary,advise,position,symbol,context,chain){var error=syntaxError(message);error[METADATA_ERROR]=true;if(advise)error.advise=advise;if(position)error.position=position;if(summary)error.summary=summary;if(context)error.context=context;if(chain)error.chain=chain;if(symbol)error.symbol=symbol;return error;}function isMetadataError(error){return!!error[METADATA_ERROR];}var REFERENCE_TO_NONEXPORTED_CLASS='Reference to non-exported class';var VARIABLE_NOT_INITIALIZED='Variable not initialized';var DESTRUCTURE_NOT_SUPPORTED='Destructuring not supported';var COULD_NOT_RESOLVE_TYPE='Could not resolve type';var FUNCTION_CALL_NOT_SUPPORTED='Function call not supported';var REFERENCE_TO_LOCAL_SYMBOL='Reference to a local symbol';var LAMBDA_NOT_SUPPORTED='Lambda not supported';function expandedMessage(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"References to a non-exported class are not supported in decorators but "+context.className+" was referenced.";}break;case VARIABLE_NOT_INITIALIZED:return'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';case DESTRUCTURE_NOT_SUPPORTED:return'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';case COULD_NOT_RESOLVE_TYPE:if(context&&context.typeName){return"Could not resolve type "+context.typeName;}break;case FUNCTION_CALL_NOT_SUPPORTED:if(context&&context.name){return"Function calls are not supported in decorators but '"+context.name+"' was called";}return'Function calls are not supported in decorators';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Reference to a local (non-exported) symbols are not supported in decorators but '"+context.name+"' was referenced";}break;case LAMBDA_NOT_SUPPORTED:return"Function expressions are not supported in decorators";}return message;}function messageAdvise(message,context){switch(message){case REFERENCE_TO_NONEXPORTED_CLASS:if(context&&context.className){return"Consider exporting '"+context.className+"'";}break;case DESTRUCTURE_NOT_SUPPORTED:return'Consider simplifying to avoid destructuring';case REFERENCE_TO_LOCAL_SYMBOL:if(context&&context.name){return"Consider exporting '"+context.name+"'";}break;case LAMBDA_NOT_SUPPORTED:return"Consider changing the function expression into an exported function";}return undefined;}function errorSummary(error){if(error.summary){return error.summary;}switch(error.message){case REFERENCE_TO_NONEXPORTED_CLASS:if(error.context&&error.context.className){return"references non-exported class "+error.context.className;}break;case VARIABLE_NOT_INITIALIZED:return'is not initialized';case DESTRUCTURE_NOT_SUPPORTED:return'is a destructured variable';case COULD_NOT_RESOLVE_TYPE:return'could not be resolved';case FUNCTION_CALL_NOT_SUPPORTED:if(error.context&&error.context.name){return"calls '"+error.context.name+"'";}return"calls a function";case REFERENCE_TO_LOCAL_SYMBOL:if(error.context&&error.context.name){return"references local variable "+error.context.name;}return"references a local variable";}return'contains the error';}function mapStringMap(input,transform){if(!input)return{};var result={};Object.keys(input).forEach(function(key){var value=transform(input[key],key);if(!shouldIgnore(value)){if(HIDDEN_KEY.test(key)){Object.defineProperty(result,key,{enumerable:false,configurable:true,value:value});}else{result[key]=value;}}});return result;}function isPrimitive(o){return o===null||typeof o!=='function'&&_typeof(o)!=='object';}var BindingScope$1=/** @class */function(){function BindingScope(){}BindingScope.build=function(){var current=new Map();return{define:function define(name,value){current.set(name,value);return this;},done:function done(){return current.size>0?new PopulatedScope(current):BindingScope.empty;}};};BindingScope.missing={};BindingScope.empty={resolve:function resolve(name){return BindingScope.missing;}};return BindingScope;}();var PopulatedScope=/** @class */function(_super){__extends(PopulatedScope,_super);function PopulatedScope(bindings){var _this=_super.call(this)||this;_this.bindings=bindings;return _this;}PopulatedScope.prototype.resolve=function(name){return this.bindings.has(name)?this.bindings.get(name):BindingScope$1.missing;};return PopulatedScope;}(BindingScope$1);function formatMetadataMessageChain(chain,advise){var expanded=expandedMessage(chain.message,chain.context);var nesting=chain.symbol?" in '"+chain.symbol.name+"'":'';var message=""+expanded+nesting;var position=chain.position;var next=chain.next?formatMetadataMessageChain(chain.next,advise):advise?{message:advise}:undefined;return{message:message,position:position,next:next?[next]:undefined};}function formatMetadataError(e,context){if(isMetadataError(e)){// Produce a formatted version of the and leaving enough information in the original error
// to recover the formatting information to eventually produce a diagnostic error message.
var position=e.position;var chain={message:"Error during template compile of '"+context.name+"'",position:position,next:{message:e.message,next:e.chain,context:e.context,symbol:e.symbol}};var advise=e.advise||messageAdvise(e.message,e.context);return formattedError(formatMetadataMessageChain(chain,advise));}return e;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var AotSummaryResolver=/** @class */function(){function AotSummaryResolver(host,staticSymbolCache){this.host=host;this.staticSymbolCache=staticSymbolCache;// Note: this will only contain StaticSymbols without members!
this.summaryCache=new Map();this.loadedFilePaths=new Map();// Note: this will only contain StaticSymbols without members!
this.importAs=new Map();this.knownFileNameToModuleNames=new Map();}AotSummaryResolver.prototype.isLibraryFile=function(filePath){// Note: We need to strip the .ngfactory. file path,
// so this method also works for generated files
// (for which host.isSourceFile will always return false).
return!this.host.isSourceFile(stripGeneratedFileSuffix(filePath));};AotSummaryResolver.prototype.toSummaryFileName=function(filePath,referringSrcFileName){return this.host.toSummaryFileName(filePath,referringSrcFileName);};AotSummaryResolver.prototype.fromSummaryFileName=function(fileName,referringLibFileName){return this.host.fromSummaryFileName(fileName,referringLibFileName);};AotSummaryResolver.prototype.resolveSummary=function(staticSymbol){var rootSymbol=staticSymbol.members.length?this.staticSymbolCache.get(staticSymbol.filePath,staticSymbol.name):staticSymbol;var summary=this.summaryCache.get(rootSymbol);if(!summary){this._loadSummaryFile(staticSymbol.filePath);summary=this.summaryCache.get(staticSymbol);}return rootSymbol===staticSymbol&&summary||null;};AotSummaryResolver.prototype.getSymbolsOf=function(filePath){if(this._loadSummaryFile(filePath)){return Array.from(this.summaryCache.keys()).filter(function(symbol){return symbol.filePath===filePath;});}return null;};AotSummaryResolver.prototype.getImportAs=function(staticSymbol){staticSymbol.assertNoMembers();return this.importAs.get(staticSymbol);};/**
         * Converts a file path to a module name that can be used as an `import`.
         */AotSummaryResolver.prototype.getKnownModuleName=function(importedFilePath){return this.knownFileNameToModuleNames.get(importedFilePath)||null;};AotSummaryResolver.prototype.addSummary=function(summary){this.summaryCache.set(summary.symbol,summary);};AotSummaryResolver.prototype._loadSummaryFile=function(filePath){var _this=this;var hasSummary=this.loadedFilePaths.get(filePath);if(hasSummary!=null){return hasSummary;}var json=null;if(this.isLibraryFile(filePath)){var summaryFilePath=summaryFileName(filePath);try{json=this.host.loadSummary(summaryFilePath);}catch(e){console.error("Error loading summary file "+summaryFilePath);throw e;}}hasSummary=json!=null;this.loadedFilePaths.set(filePath,hasSummary);if(json){var _a=deserializeSummaries(this.staticSymbolCache,this,filePath,json),moduleName=_a.moduleName,summaries=_a.summaries,importAs=_a.importAs;summaries.forEach(function(summary){return _this.summaryCache.set(summary.symbol,summary);});if(moduleName){this.knownFileNameToModuleNames.set(filePath,moduleName);}importAs.forEach(function(importAs){_this.importAs.set(importAs.symbol,importAs.importAs);});}return hasSummary;};return AotSummaryResolver;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function createAotUrlResolver(host){return{resolve:function resolve(basePath,url){var filePath=host.resourceNameToFileName(url,basePath);if(!filePath){throw syntaxError("Couldn't resolve resource "+url+" from "+basePath);}return filePath;}};}/**
     * Creates a new AotCompiler based on options and a host.
     */function createAotCompiler(compilerHost,options,errorCollector){var translations=options.translations||'';var urlResolver=createAotUrlResolver(compilerHost);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(compilerHost,symbolCache);var symbolResolver=new StaticSymbolResolver(compilerHost,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,symbolResolver,[],[],errorCollector);var htmlParser;if(!!options.enableIvy){// Ivy handles i18n at the compiler level so we must use a regular parser
htmlParser=new HtmlParser();}else{htmlParser=new I18NHtmlParser(new HtmlParser(),translations,options.i18nFormat,options.missingTranslation,console);}var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false,missingTranslation:options.missingTranslation,preserveWhitespaces:options.preserveWhitespaces,strictInjectionParameters:options.strictInjectionParameters});var normalizer=new DirectiveNormalizer({get:function get(url){return compilerHost.loadResource(url);}},urlResolver,htmlParser,config);var expressionParser=new Parser$1(new Lexer());var elementSchemaRegistry=new DomElementSchemaRegistry();var tmplParser=new TemplateParser(config,staticReflector,expressionParser,elementSchemaRegistry,htmlParser,console,[]);var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector,errorCollector);// TODO(vicb): do not pass options.i18nFormat here
var viewCompiler=new ViewCompiler(staticReflector);var typeCheckCompiler=new TypeCheckCompiler(options,staticReflector);var compiler=new AotCompiler(config,options,compilerHost,staticReflector,resolver,tmplParser,new StyleCompiler(urlResolver),viewCompiler,typeCheckCompiler,new NgModuleCompiler(staticReflector),new InjectableCompiler(staticReflector,!!options.enableIvy),new TypeScriptEmitter(),summaryResolver,symbolResolver);return{compiler:compiler,reflector:staticReflector};}var SummaryResolver=/** @class */function(){function SummaryResolver(){}return SummaryResolver;}();var JitSummaryResolver=/** @class */function(){function JitSummaryResolver(){this._summaries=new Map();}JitSummaryResolver.prototype.isLibraryFile=function(){return false;};JitSummaryResolver.prototype.toSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.fromSummaryFileName=function(fileName){return fileName;};JitSummaryResolver.prototype.resolveSummary=function(reference){return this._summaries.get(reference)||null;};JitSummaryResolver.prototype.getSymbolsOf=function(){return[];};JitSummaryResolver.prototype.getImportAs=function(reference){return reference;};JitSummaryResolver.prototype.getKnownModuleName=function(fileName){return null;};JitSummaryResolver.prototype.addSummary=function(summary){this._summaries.set(summary.symbol,summary);};return JitSummaryResolver;}();function interpretStatements(statements,reflector){var ctx=new _ExecutionContext(null,null,null,new Map());var visitor=new StatementInterpreter(reflector);visitor.visitAllStatements(statements,ctx);var result={};ctx.exports.forEach(function(exportName){result[exportName]=ctx.vars.get(exportName);});return result;}function _executeFunctionStatements(varNames,varValues,statements,ctx,visitor){var childCtx=ctx.createChildWihtLocalVars();for(var i=0;i<varNames.length;i++){childCtx.vars.set(varNames[i],varValues[i]);}var result=visitor.visitAllStatements(statements,childCtx);return result?result.value:null;}var _ExecutionContext=/** @class */function(){function _ExecutionContext(parent,instance,className,vars){this.parent=parent;this.instance=instance;this.className=className;this.vars=vars;this.exports=[];}_ExecutionContext.prototype.createChildWihtLocalVars=function(){return new _ExecutionContext(this,this.instance,this.className,new Map());};return _ExecutionContext;}();var ReturnValue=/** @class */function(){function ReturnValue(value){this.value=value;}return ReturnValue;}();function createDynamicClass(_classStmt,_ctx,_visitor){var propertyDescriptors={};_classStmt.getters.forEach(function(getter){// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[getter.name]={configurable:false,get:function get(){var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements([],[],getter.body,instanceCtx,_visitor);}};});_classStmt.methods.forEach(function(method){var paramNames=method.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
propertyDescriptors[method.name]={writable:false,configurable:false,value:function value(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);return _executeFunctionStatements(paramNames,args,method.body,instanceCtx,_visitor);}};});var ctorParamNames=_classStmt.constructorMethod.params.map(function(param){return param.name;});// Note: use `function` instead of arrow function to capture `this`
var ctor=function ctor(){var _this=this;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var instanceCtx=new _ExecutionContext(_ctx,this,_classStmt.name,_ctx.vars);_classStmt.fields.forEach(function(field){_this[field.name]=undefined;});_executeFunctionStatements(ctorParamNames,args,_classStmt.constructorMethod.body,instanceCtx,_visitor);};var superClass=_classStmt.parent?_classStmt.parent.visitExpression(_visitor,_ctx):Object;ctor.prototype=Object.create(superClass.prototype,propertyDescriptors);return ctor;}var StatementInterpreter=/** @class */function(){function StatementInterpreter(reflector){this.reflector=reflector;}StatementInterpreter.prototype.debugAst=function(ast){return debugOutputAstAsTypeScript(ast);};StatementInterpreter.prototype.visitDeclareVarStmt=function(stmt,ctx){var initialValue=stmt.value?stmt.value.visitExpression(this,ctx):undefined;ctx.vars.set(stmt.name,initialValue);if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitWriteVarExpr=function(expr,ctx){var value=expr.value.visitExpression(this,ctx);var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(expr.name)){currCtx.vars.set(expr.name,value);return value;}currCtx=currCtx.parent;}throw new Error("Not declared variable "+expr.name);};StatementInterpreter.prototype.visitWrappedNodeExpr=function(ast,ctx){throw new Error('Cannot interpret a WrappedNodeExpr.');};StatementInterpreter.prototype.visitTypeofExpr=function(ast,ctx){throw new Error('Cannot interpret a TypeofExpr');};StatementInterpreter.prototype.visitReadVarExpr=function(ast,ctx){var varName=ast.name;if(ast.builtin!=null){switch(ast.builtin){case exports.BuiltinVar.Super:return Object.getPrototypeOf(ctx.instance);case exports.BuiltinVar.This:return ctx.instance;case exports.BuiltinVar.CatchError:varName=CATCH_ERROR_VAR$2;break;case exports.BuiltinVar.CatchStack:varName=CATCH_STACK_VAR$2;break;default:throw new Error("Unknown builtin variable "+ast.builtin);}}var currCtx=ctx;while(currCtx!=null){if(currCtx.vars.has(varName)){return currCtx.vars.get(varName);}currCtx=currCtx.parent;}throw new Error("Not declared variable "+varName);};StatementInterpreter.prototype.visitWriteKeyExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var index=expr.index.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[index]=value;return value;};StatementInterpreter.prototype.visitWritePropExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var value=expr.value.visitExpression(this,ctx);receiver[expr.name]=value;return value;};StatementInterpreter.prototype.visitInvokeMethodExpr=function(expr,ctx){var receiver=expr.receiver.visitExpression(this,ctx);var args=this.visitAllExpressions(expr.args,ctx);var result;if(expr.builtin!=null){switch(expr.builtin){case exports.BuiltinMethod.ConcatArray:result=receiver.concat.apply(receiver,__spread(args));break;case exports.BuiltinMethod.SubscribeObservable:result=receiver.subscribe({next:args[0]});break;case exports.BuiltinMethod.Bind:result=receiver.bind.apply(receiver,__spread(args));break;default:throw new Error("Unknown builtin method "+expr.builtin);}}else{result=receiver[expr.name].apply(receiver,args);}return result;};StatementInterpreter.prototype.visitInvokeFunctionExpr=function(stmt,ctx){var args=this.visitAllExpressions(stmt.args,ctx);var fnExpr=stmt.fn;if(fnExpr instanceof ReadVarExpr&&fnExpr.builtin===exports.BuiltinVar.Super){ctx.instance.constructor.prototype.constructor.apply(ctx.instance,args);return null;}else{var fn=stmt.fn.visitExpression(this,ctx);return fn.apply(null,args);}};StatementInterpreter.prototype.visitReturnStmt=function(stmt,ctx){return new ReturnValue(stmt.value.visitExpression(this,ctx));};StatementInterpreter.prototype.visitDeclareClassStmt=function(stmt,ctx){var clazz=createDynamicClass(stmt,ctx,this);ctx.vars.set(stmt.name,clazz);if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitExpressionStmt=function(stmt,ctx){return stmt.expr.visitExpression(this,ctx);};StatementInterpreter.prototype.visitIfStmt=function(stmt,ctx){var condition=stmt.condition.visitExpression(this,ctx);if(condition){return this.visitAllStatements(stmt.trueCase,ctx);}else if(stmt.falseCase!=null){return this.visitAllStatements(stmt.falseCase,ctx);}return null;};StatementInterpreter.prototype.visitTryCatchStmt=function(stmt,ctx){try{return this.visitAllStatements(stmt.bodyStmts,ctx);}catch(e){var childCtx=ctx.createChildWihtLocalVars();childCtx.vars.set(CATCH_ERROR_VAR$2,e);childCtx.vars.set(CATCH_STACK_VAR$2,e.stack);return this.visitAllStatements(stmt.catchStmts,childCtx);}};StatementInterpreter.prototype.visitThrowStmt=function(stmt,ctx){throw stmt.error.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitJSDocCommentStmt=function(stmt,context){return null;};StatementInterpreter.prototype.visitInstantiateExpr=function(ast,ctx){var args=this.visitAllExpressions(ast.args,ctx);var clazz=ast.classExpr.visitExpression(this,ctx);return new(clazz.bind.apply(clazz,__spread([void 0],args)))();};StatementInterpreter.prototype.visitLiteralExpr=function(ast,ctx){return ast.value;};StatementInterpreter.prototype.visitLocalizedString=function(ast,context){return null;};StatementInterpreter.prototype.visitExternalExpr=function(ast,ctx){return this.reflector.resolveExternalReference(ast.value);};StatementInterpreter.prototype.visitConditionalExpr=function(ast,ctx){if(ast.condition.visitExpression(this,ctx)){return ast.trueCase.visitExpression(this,ctx);}else if(ast.falseCase!=null){return ast.falseCase.visitExpression(this,ctx);}return null;};StatementInterpreter.prototype.visitNotExpr=function(ast,ctx){return!ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitAssertNotNullExpr=function(ast,ctx){return ast.condition.visitExpression(this,ctx);};StatementInterpreter.prototype.visitCastExpr=function(ast,ctx){return ast.value.visitExpression(this,ctx);};StatementInterpreter.prototype.visitFunctionExpr=function(ast,ctx){var paramNames=ast.params.map(function(param){return param.name;});return _declareFn(paramNames,ast.statements,ctx,this);};StatementInterpreter.prototype.visitDeclareFunctionStmt=function(stmt,ctx){var paramNames=stmt.params.map(function(param){return param.name;});ctx.vars.set(stmt.name,_declareFn(paramNames,stmt.statements,ctx,this));if(stmt.hasModifier(exports.StmtModifier.Exported)){ctx.exports.push(stmt.name);}return null;};StatementInterpreter.prototype.visitBinaryOperatorExpr=function(ast,ctx){var _this=this;var lhs=function lhs(){return ast.lhs.visitExpression(_this,ctx);};var rhs=function rhs(){return ast.rhs.visitExpression(_this,ctx);};switch(ast.operator){case exports.BinaryOperator.Equals:return lhs()==rhs();case exports.BinaryOperator.Identical:return lhs()===rhs();case exports.BinaryOperator.NotEquals:return lhs()!=rhs();case exports.BinaryOperator.NotIdentical:return lhs()!==rhs();case exports.BinaryOperator.And:return lhs()&&rhs();case exports.BinaryOperator.Or:return lhs()||rhs();case exports.BinaryOperator.Plus:return lhs()+rhs();case exports.BinaryOperator.Minus:return lhs()-rhs();case exports.BinaryOperator.Divide:return lhs()/rhs();case exports.BinaryOperator.Multiply:return lhs()*rhs();case exports.BinaryOperator.Modulo:return lhs()%rhs();case exports.BinaryOperator.Lower:return lhs()<rhs();case exports.BinaryOperator.LowerEquals:return lhs()<=rhs();case exports.BinaryOperator.Bigger:return lhs()>rhs();case exports.BinaryOperator.BiggerEquals:return lhs()>=rhs();default:throw new Error("Unknown operator "+ast.operator);}};StatementInterpreter.prototype.visitReadPropExpr=function(ast,ctx){var result;var receiver=ast.receiver.visitExpression(this,ctx);result=receiver[ast.name];return result;};StatementInterpreter.prototype.visitReadKeyExpr=function(ast,ctx){var receiver=ast.receiver.visitExpression(this,ctx);var prop=ast.index.visitExpression(this,ctx);return receiver[prop];};StatementInterpreter.prototype.visitLiteralArrayExpr=function(ast,ctx){return this.visitAllExpressions(ast.entries,ctx);};StatementInterpreter.prototype.visitLiteralMapExpr=function(ast,ctx){var _this=this;var result={};ast.entries.forEach(function(entry){return result[entry.key]=entry.value.visitExpression(_this,ctx);});return result;};StatementInterpreter.prototype.visitCommaExpr=function(ast,context){var values=this.visitAllExpressions(ast.parts,context);return values[values.length-1];};StatementInterpreter.prototype.visitAllExpressions=function(expressions,ctx){var _this=this;return expressions.map(function(expr){return expr.visitExpression(_this,ctx);});};StatementInterpreter.prototype.visitAllStatements=function(statements,ctx){for(var i=0;i<statements.length;i++){var stmt=statements[i];var val=stmt.visitStatement(this,ctx);if(val instanceof ReturnValue){return val;}}return null;};return StatementInterpreter;}();function _declareFn(varNames,statements,ctx,visitor){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return _executeFunctionStatements(varNames,args,statements,ctx,visitor);};}var CATCH_ERROR_VAR$2='error';var CATCH_STACK_VAR$2='stack';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An internal module of the Angular compiler that begins with component types,
     * extracts templates, and eventually produces a compiled version of the component
     * ready for linking into an application.
     *
     * @security  When compiling templates at runtime, you must ensure that the entire template comes
     * from a trusted source. Attacker-controlled data introduced by a template could expose your
     * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).
     */var JitCompiler=/** @class */function(){function JitCompiler(_metadataResolver,_templateParser,_styleCompiler,_viewCompiler,_ngModuleCompiler,_summaryResolver,_reflector,_jitEvaluator,_compilerConfig,_console,getExtraNgModuleProviders){this._metadataResolver=_metadataResolver;this._templateParser=_templateParser;this._styleCompiler=_styleCompiler;this._viewCompiler=_viewCompiler;this._ngModuleCompiler=_ngModuleCompiler;this._summaryResolver=_summaryResolver;this._reflector=_reflector;this._jitEvaluator=_jitEvaluator;this._compilerConfig=_compilerConfig;this._console=_console;this.getExtraNgModuleProviders=getExtraNgModuleProviders;this._compiledTemplateCache=new Map();this._compiledHostTemplateCache=new Map();this._compiledDirectiveWrapperCache=new Map();this._compiledNgModuleCache=new Map();this._sharedStylesheetCount=0;this._addedAotSummaries=new Set();}JitCompiler.prototype.compileModuleSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType,true));};JitCompiler.prototype.compileModuleAsync=function(moduleType){return Promise.resolve(this._compileModuleAndComponents(moduleType,false));};JitCompiler.prototype.compileModuleAndAllComponentsSync=function(moduleType){return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType,true));};JitCompiler.prototype.compileModuleAndAllComponentsAsync=function(moduleType){return Promise.resolve(this._compileModuleAndAllComponents(moduleType,false));};JitCompiler.prototype.getComponentFactory=function(component){var summary=this._metadataResolver.getDirectiveSummary(component);return summary.componentFactory;};JitCompiler.prototype.loadAotSummaries=function(summaries){this.clearCache();this._addAotSummaries(summaries);};JitCompiler.prototype._addAotSummaries=function(fn){if(this._addedAotSummaries.has(fn)){return;}this._addedAotSummaries.add(fn);var summaries=fn();for(var i=0;i<summaries.length;i++){var entry=summaries[i];if(typeof entry==='function'){this._addAotSummaries(entry);}else{var summary=entry;this._summaryResolver.addSummary({symbol:summary.type.reference,metadata:null,type:summary});}}};JitCompiler.prototype.hasAotSummary=function(ref){return!!this._summaryResolver.resolveSummary(ref);};JitCompiler.prototype._filterJitIdentifiers=function(ids){var _this=this;return ids.map(function(mod){return mod.reference;}).filter(function(ref){return!_this.hasAotSummary(ref);});};JitCompiler.prototype._compileModuleAndComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){_this._compileComponents(moduleType,null);return _this._compileModule(moduleType);});};JitCompiler.prototype._compileModuleAndAllComponents=function(moduleType,isSync){var _this=this;return SyncAsync.then(this._loadModules(moduleType,isSync),function(){var componentFactories=[];_this._compileComponents(moduleType,componentFactories);return{ngModuleFactory:_this._compileModule(moduleType),componentFactories:componentFactories};});};JitCompiler.prototype._loadModules=function(mainModule,isSync){var _this=this;var loading=[];var mainNgModule=this._metadataResolver.getNgModuleMetadata(mainModule);// Note: for runtime compilation, we want to transitively compile all modules,
// so we also need to load the declared directives / pipes for all nested modules.
this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function(nestedNgModule){// getNgModuleMetadata only returns null if the value passed in is not an NgModule
var moduleMeta=_this._metadataResolver.getNgModuleMetadata(nestedNgModule);_this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function(ref){var promise=_this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference,ref,isSync);if(promise){loading.push(promise);}});_this._filterJitIdentifiers(moduleMeta.declaredPipes).forEach(function(ref){return _this._metadataResolver.getOrLoadPipeMetadata(ref);});});return SyncAsync.all(loading);};JitCompiler.prototype._compileModule=function(moduleType){var ngModuleFactory=this._compiledNgModuleCache.get(moduleType);if(!ngModuleFactory){var moduleMeta=this._metadataResolver.getNgModuleMetadata(moduleType);// Always provide a bound Compiler
var extraProviders=this.getExtraNgModuleProviders(moduleMeta.type.reference);var outputCtx=createOutputContext();var compileResult=this._ngModuleCompiler.compile(outputCtx,moduleMeta,extraProviders);ngModuleFactory=this._interpretOrJit(ngModuleJitUrl(moduleMeta),outputCtx.statements)[compileResult.ngModuleFactoryVar];this._compiledNgModuleCache.set(moduleMeta.type.reference,ngModuleFactory);}return ngModuleFactory;};/**
         * @internal
         */JitCompiler.prototype._compileComponents=function(mainModule,allComponentFactories){var _this=this;var ngModule=this._metadataResolver.getNgModuleMetadata(mainModule);var moduleByJitDirective=new Map();var templates=new Set();var transJitModules=this._filterJitIdentifiers(ngModule.transitiveModule.modules);transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){moduleByJitDirective.set(dirRef,localModuleMeta);var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){templates.add(_this._createCompiledTemplate(dirMeta,localModuleMeta));if(allComponentFactories){var template=_this._createCompiledHostTemplate(dirMeta.type.reference,localModuleMeta);templates.add(template);allComponentFactories.push(dirMeta.componentFactory);}}});});transJitModules.forEach(function(localMod){var localModuleMeta=_this._metadataResolver.getNgModuleMetadata(localMod);_this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function(dirRef){var dirMeta=_this._metadataResolver.getDirectiveMetadata(dirRef);if(dirMeta.isComponent){dirMeta.entryComponents.forEach(function(entryComponentType){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));});}});localModuleMeta.entryComponents.forEach(function(entryComponentType){if(!_this.hasAotSummary(entryComponentType.componentType)){var moduleMeta=moduleByJitDirective.get(entryComponentType.componentType);templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType,moduleMeta));}});});templates.forEach(function(template){return _this._compileTemplate(template);});};JitCompiler.prototype.clearCacheFor=function(type){this._compiledNgModuleCache["delete"](type);this._metadataResolver.clearCacheFor(type);this._compiledHostTemplateCache["delete"](type);var compiledTemplate=this._compiledTemplateCache.get(type);if(compiledTemplate){this._compiledTemplateCache["delete"](type);}};JitCompiler.prototype.clearCache=function(){// Note: don't clear the _addedAotSummaries, as they don't change!
this._metadataResolver.clearCache();this._compiledTemplateCache.clear();this._compiledHostTemplateCache.clear();this._compiledNgModuleCache.clear();};JitCompiler.prototype._createCompiledHostTemplate=function(compType,ngModule){if(!ngModule){throw new Error("Component "+stringify(compType)+" is not part of any NgModule or the module has not been imported into your module.");}var compiledTemplate=this._compiledHostTemplateCache.get(compType);if(!compiledTemplate){var compMeta=this._metadataResolver.getDirectiveMetadata(compType);assertComponent(compMeta);var hostMeta=this._metadataResolver.getHostComponentMetadata(compMeta,compMeta.componentFactory.viewDefFactory);compiledTemplate=new CompiledTemplate(true,compMeta.type,hostMeta,ngModule,[compMeta.type]);this._compiledHostTemplateCache.set(compType,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._createCompiledTemplate=function(compMeta,ngModule){var compiledTemplate=this._compiledTemplateCache.get(compMeta.type.reference);if(!compiledTemplate){assertComponent(compMeta);compiledTemplate=new CompiledTemplate(false,compMeta.type,compMeta,ngModule,ngModule.transitiveModule.directives);this._compiledTemplateCache.set(compMeta.type.reference,compiledTemplate);}return compiledTemplate;};JitCompiler.prototype._compileTemplate=function(template){var _this=this;if(template.isCompiled){return;}var compMeta=template.compMeta;var externalStylesheetsByModuleUrl=new Map();var outputContext=createOutputContext();var componentStylesheet=this._styleCompiler.compileComponent(outputContext,compMeta);compMeta.template.externalStylesheets.forEach(function(stylesheetMeta){var compiledStylesheet=_this._styleCompiler.compileStyles(createOutputContext(),compMeta,stylesheetMeta);externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl,compiledStylesheet);});this._resolveStylesCompileResult(componentStylesheet,externalStylesheetsByModuleUrl);var pipes=template.ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});var _a=this._parseTemplate(compMeta,template.ngModule,template.directives),parsedTemplate=_a.template,usedPipes=_a.pipes;var compileResult=this._viewCompiler.compileComponent(outputContext,compMeta,parsedTemplate,variable(componentStylesheet.stylesVar),usedPipes);var evalResult=this._interpretOrJit(templateJitUrl(template.ngModule.type,template.compMeta),outputContext.statements);var viewClass=evalResult[compileResult.viewClassVar];var rendererType=evalResult[compileResult.rendererTypeVar];template.compiled(viewClass,rendererType);};JitCompiler.prototype._parseTemplate=function(compMeta,ngModule,directiveIdentifiers){var _this=this;// Note: ! is ok here as components always have a template.
var preserveWhitespaces=compMeta.template.preserveWhitespaces;var directives=directiveIdentifiers.map(function(dir){return _this._metadataResolver.getDirectiveSummary(dir.reference);});var pipes=ngModule.transitiveModule.pipes.map(function(pipe){return _this._metadataResolver.getPipeSummary(pipe.reference);});return this._templateParser.parse(compMeta,compMeta.template.htmlAst,directives,pipes,ngModule.schemas,templateSourceUrl(ngModule.type,compMeta,compMeta.template),preserveWhitespaces);};JitCompiler.prototype._resolveStylesCompileResult=function(result,externalStylesheetsByModuleUrl){var _this=this;result.dependencies.forEach(function(dep,i){var nestedCompileResult=externalStylesheetsByModuleUrl.get(dep.moduleUrl);var nestedStylesArr=_this._resolveAndEvalStylesCompileResult(nestedCompileResult,externalStylesheetsByModuleUrl);dep.setValue(nestedStylesArr);});};JitCompiler.prototype._resolveAndEvalStylesCompileResult=function(result,externalStylesheetsByModuleUrl){this._resolveStylesCompileResult(result,externalStylesheetsByModuleUrl);return this._interpretOrJit(sharedStylesheetJitUrl(result.meta,this._sharedStylesheetCount++),result.outputCtx.statements)[result.stylesVar];};JitCompiler.prototype._interpretOrJit=function(sourceUrl,statements){if(!this._compilerConfig.useJit){return interpretStatements(statements,this._reflector);}else{return this._jitEvaluator.evaluateStatements(sourceUrl,statements,this._reflector,this._compilerConfig.jitDevMode);}};return JitCompiler;}();var CompiledTemplate=/** @class */function(){function CompiledTemplate(isHost,compType,compMeta,ngModule,directives){this.isHost=isHost;this.compType=compType;this.compMeta=compMeta;this.ngModule=ngModule;this.directives=directives;this._viewClass=null;this.isCompiled=false;}CompiledTemplate.prototype.compiled=function(viewClass,rendererType){this._viewClass=viewClass;this.compMeta.componentViewType.setDelegate(viewClass);for(var prop in rendererType){this.compMeta.rendererType[prop]=rendererType[prop];}this.isCompiled=true;};return CompiledTemplate;}();function assertComponent(meta){if(!meta.isComponent){throw new Error("Could not compile '"+identifierName(meta.type)+"' because it is not a component.");}}function createOutputContext(){var importExpr$1=function importExpr$1(symbol){return importExpr({name:identifierName(symbol),moduleName:null,runtime:symbol});};return{statements:[],genFilePath:'',importExpr:importExpr$1,constantPool:new ConstantPool()};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provides access to reflection data about symbols that the compiler needs.
     */var CompileReflector=/** @class */function(){function CompileReflector(){}return CompileReflector;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Create a {@link UrlResolver} with no package prefix.
     */function createUrlResolverWithoutPackagePrefix(){return new UrlResolver();}function createOfflineCompileUrlResolver(){return new UrlResolver('.');}var UrlResolver=/** @class */function(){function UrlResolverImpl(_packagePrefix){if(_packagePrefix===void 0){_packagePrefix=null;}this._packagePrefix=_packagePrefix;}/**
         * Resolves the `url` given the `baseUrl`:
         * - when the `url` is null, the `baseUrl` is returned,
         * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of
         * `baseUrl` and `url`,
         * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is
         * returned as is (ignoring the `baseUrl`)
         */UrlResolverImpl.prototype.resolve=function(baseUrl,url){var resolvedUrl=url;if(baseUrl!=null&&baseUrl.length>0){resolvedUrl=_resolveUrl(baseUrl,resolvedUrl);}var resolvedParts=_split(resolvedUrl);var prefix=this._packagePrefix;if(prefix!=null&&resolvedParts!=null&&resolvedParts[_ComponentIndex.Scheme]=='package'){var path=resolvedParts[_ComponentIndex.Path];prefix=prefix.replace(/\/+$/,'');path=path.replace(/^\/+/,'');return prefix+"/"+path;}return resolvedUrl;};return UrlResolverImpl;}();/**
     * Extract the scheme of a URL.
     */function getUrlScheme(url){var match=_split(url);return match&&match[_ComponentIndex.Scheme]||'';}// The code below is adapted from Traceur:
// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js
/**
     * Builds a URI string from already-encoded parts.
     *
     * No encoding is performed.  Any component may be omitted as either null or
     * undefined.
     *
     * @param opt_scheme The scheme such as 'http'.
     * @param opt_userInfo The user name before the '@'.
     * @param opt_domain The domain such as 'www.google.com', already
     *     URI-encoded.
     * @param opt_port The port number.
     * @param opt_path The path, already URI-encoded.  If it is not
     *     empty, it must begin with a slash.
     * @param opt_queryData The URI-encoded query data.
     * @param opt_fragment The URI-encoded fragment identifier.
     * @return The fully combined URI.
     */function _buildFromEncodedParts(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out=[];if(opt_scheme!=null){out.push(opt_scheme+':');}if(opt_domain!=null){out.push('//');if(opt_userInfo!=null){out.push(opt_userInfo+'@');}out.push(opt_domain);if(opt_port!=null){out.push(':'+opt_port);}}if(opt_path!=null){out.push(opt_path);}if(opt_queryData!=null){out.push('?'+opt_queryData);}if(opt_fragment!=null){out.push('#'+opt_fragment);}return out.join('');}/**
     * A regular expression for breaking a URI into its component parts.
     *
     * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says
     * As the "first-match-wins" algorithm is identical to the "greedy"
     * disambiguation method used by POSIX regular expressions, it is natural and
     * commonplace to use a regular expression for parsing the potential five
     * components of a URI reference.
     *
     * The following line is the regular expression for breaking-down a
     * well-formed URI reference into its components.
     *
     * <pre>
     * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
     *  12            3  4          5       6  7        8 9
     * </pre>
     *
     * The numbers in the second line above are only to assist readability; they
     * indicate the reference points for each subexpression (i.e., each paired
     * parenthesis). We refer to the value matched for subexpression <n> as $<n>.
     * For example, matching the above expression to
     * <pre>
     *     http://www.ics.uci.edu/pub/ietf/uri/#Related
     * </pre>
     * results in the following subexpression matches:
     * <pre>
     *    $1 = http:
     *    $2 = http
     *    $3 = //www.ics.uci.edu
     *    $4 = www.ics.uci.edu
     *    $5 = /pub/ietf/uri/
     *    $6 = <undefined>
     *    $7 = <undefined>
     *    $8 = #Related
     *    $9 = Related
     * </pre>
     * where <undefined> indicates that the component is not present, as is the
     * case for the query component in the above example. Therefore, we can
     * determine the value of the five components as
     * <pre>
     *    scheme    = $2
     *    authority = $4
     *    path      = $5
     *    query     = $7
     *    fragment  = $9
     * </pre>
     *
     * The regular expression has been modified slightly to expose the
     * userInfo, domain, and port separately from the authority.
     * The modified version yields
     * <pre>
     *    $1 = http              scheme
     *    $2 = <undefined>       userInfo -\
     *    $3 = www.ics.uci.edu   domain     | authority
     *    $4 = <undefined>       port     -/
     *    $5 = /pub/ietf/uri/    path
     *    $6 = <undefined>       query without ?
     *    $7 = Related           fragment without #
     * </pre>
     * @internal
     */var _splitRe=new RegExp('^'+'(?:'+'([^:/?#.]+)'+// scheme - ignore special characters
// used by other URL parts such as :,
// ?, /, #, and .
':)?'+'(?://'+'(?:([^/?#]*)@)?'+// userInfo
"([\\w\\d\\-\\u0100-\\uffff.%]*)"+// domain - restrict to letters,
// digits, dashes, dots, percent
// escapes, and unicode characters.
'(?::([0-9]+))?'+// port
')?'+'([^?#]+)?'+// path
'(?:\\?([^#]*))?'+// query
'(?:#(.*))?'+// fragment
'$');/**
     * The index of each URI component in the return value of goog.uri.utils.split.
     * @enum {number}
     */var _ComponentIndex;(function(_ComponentIndex){_ComponentIndex[_ComponentIndex["Scheme"]=1]="Scheme";_ComponentIndex[_ComponentIndex["UserInfo"]=2]="UserInfo";_ComponentIndex[_ComponentIndex["Domain"]=3]="Domain";_ComponentIndex[_ComponentIndex["Port"]=4]="Port";_ComponentIndex[_ComponentIndex["Path"]=5]="Path";_ComponentIndex[_ComponentIndex["QueryData"]=6]="QueryData";_ComponentIndex[_ComponentIndex["Fragment"]=7]="Fragment";})(_ComponentIndex||(_ComponentIndex={}));/**
     * Splits a URI into its component parts.
     *
     * Each component can be accessed via the component indices; for example:
     * <pre>
     * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];
     * </pre>
     *
     * @param uri The URI string to examine.
     * @return Each component still URI-encoded.
     *     Each component that is present will contain the encoded value, whereas
     *     components that are not present will be undefined or empty, depending
     *     on the browser's regular expression implementation.  Never null, since
     *     arbitrary strings may still look like path names.
     */function _split(uri){return uri.match(_splitRe);}/**
     * Removes dot segments in given path component, as described in
     * RFC 3986, section 5.2.4.
     *
     * @param path A non-empty path component.
     * @return Path component with removed dot segments.
     */function _removeDotSegments(path){if(path=='/')return'/';var leadingSlash=path[0]=='/'?'/':'';var trailingSlash=path[path.length-1]==='/'?'/':'';var segments=path.split('/');var out=[];var up=0;for(var pos=0;pos<segments.length;pos++){var segment=segments[pos];switch(segment){case'':case'.':break;case'..':if(out.length>0){out.pop();}else{up++;}break;default:out.push(segment);}}if(leadingSlash==''){while(up-->0){out.unshift('..');}if(out.length===0)out.push('.');}return leadingSlash+out.join('/')+trailingSlash;}/**
     * Takes an array of the parts from split and canonicalizes the path part
     * and then joins all the parts.
     */function _joinAndCanonicalizePath(parts){var path=parts[_ComponentIndex.Path];path=path==null?'':_removeDotSegments(path);parts[_ComponentIndex.Path]=path;return _buildFromEncodedParts(parts[_ComponentIndex.Scheme],parts[_ComponentIndex.UserInfo],parts[_ComponentIndex.Domain],parts[_ComponentIndex.Port],path,parts[_ComponentIndex.QueryData],parts[_ComponentIndex.Fragment]);}/**
     * Resolves a URL.
     * @param base The URL acting as the base URL.
     * @param to The URL to resolve.
     */function _resolveUrl(base,url){var parts=_split(encodeURI(url));var baseParts=_split(base);if(parts[_ComponentIndex.Scheme]!=null){return _joinAndCanonicalizePath(parts);}else{parts[_ComponentIndex.Scheme]=baseParts[_ComponentIndex.Scheme];}for(var i=_ComponentIndex.Scheme;i<=_ComponentIndex.Port;i++){if(parts[i]==null){parts[i]=baseParts[i];}}if(parts[_ComponentIndex.Path][0]=='/'){return _joinAndCanonicalizePath(parts);}var path=baseParts[_ComponentIndex.Path];if(path==null)path='/';var index=path.lastIndexOf('/');path=path.substring(0,index+1)+parts[_ComponentIndex.Path];parts[_ComponentIndex.Path]=path;return _joinAndCanonicalizePath(parts);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Extractor=/** @class */function(){function Extractor(host,staticSymbolResolver,messageBundle,metadataResolver){this.host=host;this.staticSymbolResolver=staticSymbolResolver;this.messageBundle=messageBundle;this.metadataResolver=metadataResolver;}Extractor.prototype.extract=function(rootFiles){var _this=this;var _a=analyzeAndValidateNgModules(rootFiles,this.host,this.staticSymbolResolver,this.metadataResolver),files=_a.files,ngModules=_a.ngModules;return Promise.all(ngModules.map(function(ngModule){return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference,false);})).then(function(){var errors=[];files.forEach(function(file){var compMetas=[];file.directives.forEach(function(directiveType){var dirMeta=_this.metadataResolver.getDirectiveMetadata(directiveType);if(dirMeta&&dirMeta.isComponent){compMetas.push(dirMeta);}});compMetas.forEach(function(compMeta){var html=compMeta.template.template;// Template URL points to either an HTML or TS file depending on
// whether the file is used with `templateUrl:` or `template:`,
// respectively.
var templateUrl=compMeta.template.templateUrl;var interpolationConfig=InterpolationConfig.fromArray(compMeta.template.interpolation);errors.push.apply(errors,__spread(_this.messageBundle.updateFromTemplate(html,templateUrl,interpolationConfig)));});});if(errors.length){throw new Error(errors.map(function(e){return e.toString();}).join('\n'));}return _this.messageBundle;});};Extractor.create=function(host,locale){var htmlParser=new HtmlParser();var urlResolver=createAotUrlResolver(host);var symbolCache=new StaticSymbolCache();var summaryResolver=new AotSummaryResolver(host,symbolCache);var staticSymbolResolver=new StaticSymbolResolver(host,symbolCache,summaryResolver);var staticReflector=new StaticReflector(summaryResolver,staticSymbolResolver);var config=new CompilerConfig({defaultEncapsulation:ViewEncapsulation.Emulated,useJit:false});var normalizer=new DirectiveNormalizer({get:function get(url){return host.loadResource(url);}},urlResolver,htmlParser,config);var elementSchemaRegistry=new DomElementSchemaRegistry();var resolver=new CompileMetadataResolver(config,htmlParser,new NgModuleResolver(staticReflector),new DirectiveResolver(staticReflector),new PipeResolver(staticReflector),summaryResolver,elementSchemaRegistry,normalizer,console,symbolCache,staticReflector);// TODO(vicb): implicit tags & attributes
var messageBundle=new MessageBundle(htmlParser,[],{},locale);var extractor=new Extractor(host,staticSymbolResolver,messageBundle,resolver);return{extractor:extractor,staticReflector:staticReflector};};return Extractor;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Processes `Target`s with a given set of directives and performs a binding operation, which
     * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the
     * target.
     */var R3TargetBinder=/** @class */function(){function R3TargetBinder(directiveMatcher){this.directiveMatcher=directiveMatcher;}/**
         * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains
         * metadata about the types referenced in the template.
         */R3TargetBinder.prototype.bind=function(target){if(!target.template){// TODO(alxhub): handle targets which contain things like HostBindings, etc.
throw new Error('Binding without a template not yet supported');}// First, parse the template into a `Scope` structure. This operation captures the syntactic
// scopes in the template and makes them available for later use.
var scope=Scope.apply(target.template);// Next, perform directive matching on the template using the `DirectiveBinder`. This returns:
//   - directives: Map of nodes (elements & ng-templates) to the directives on them.
//   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims
//     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.
//   - references: Map of #references to their targets.
var _a=DirectiveBinder.apply(target.template,this.directiveMatcher),directives=_a.directives,bindings=_a.bindings,references=_a.references;// Finally, run the TemplateBinder to bind references, variables, and other entities within the
// template. This extracts all the metadata that doesn't depend on directive matching.
var _b=TemplateBinder.apply(target.template,scope),expressions=_b.expressions,symbols=_b.symbols,nestingLevel=_b.nestingLevel,usedPipes=_b.usedPipes;return new R3BoundTarget(target,directives,bindings,references,expressions,symbols,nestingLevel,usedPipes);};return R3TargetBinder;}();/**
     * Represents a binding scope within a template.
     *
     * Any variables, references, or other named entities declared within the template will
     * be captured and available by name in `namedEntities`. Additionally, child templates will
     * be analyzed and have their child `Scope`s available in `childScopes`.
     */var Scope=/** @class */function(){function Scope(parentScope){this.parentScope=parentScope;/**
             * Named members of the `Scope`, such as `Reference`s or `Variable`s.
             */this.namedEntities=new Map();/**
             * Child `Scope`s for immediately nested `Template`s.
             */this.childScopes=new Map();}/**
         * Process a template (either as a `Template` sub-template with variables, or a plain array of
         * template `Node`s) and construct its `Scope`.
         */Scope.apply=function(template){var scope=new Scope();scope.ingest(template);return scope;};/**
         * Internal method to process the template and populate the `Scope`.
         */Scope.prototype.ingest=function(template){var _this=this;if(template instanceof Template){// Variables on an <ng-template> are defined in the inner scope.
template.variables.forEach(function(node){return _this.visitVariable(node);});// Process the nodes of the template.
template.children.forEach(function(node){return node.visit(_this);});}else{// No overarching `Template` instance, so process the nodes directly.
template.forEach(function(node){return node.visit(_this);});}};Scope.prototype.visitElement=function(element){var _this=this;// `Element`s in the template may have `Reference`s which are captured in the scope.
element.references.forEach(function(node){return _this.visitReference(node);});// Recurse into the `Element`'s children.
element.children.forEach(function(node){return node.visit(_this);});};Scope.prototype.visitTemplate=function(template){var _this=this;// References on a <ng-template> are defined in the outer scope, so capture them before
// processing the template's child scope.
template.references.forEach(function(node){return _this.visitReference(node);});// Next, create an inner scope and process the template within it.
var scope=new Scope(this);scope.ingest(template);this.childScopes.set(template,scope);};Scope.prototype.visitVariable=function(variable){// Declare the variable if it's not already.
this.maybeDeclare(variable);};Scope.prototype.visitReference=function(reference){// Declare the variable if it's not already.
this.maybeDeclare(reference);};// Unused visitors.
Scope.prototype.visitContent=function(content){};Scope.prototype.visitBoundAttribute=function(attr){};Scope.prototype.visitBoundEvent=function(event){};Scope.prototype.visitBoundText=function(text){};Scope.prototype.visitText=function(text){};Scope.prototype.visitTextAttribute=function(attr){};Scope.prototype.visitIcu=function(icu){};Scope.prototype.maybeDeclare=function(thing){// Declare something with a name, as long as that name isn't taken.
if(!this.namedEntities.has(thing.name)){this.namedEntities.set(thing.name,thing);}};/**
         * Look up a variable within this `Scope`.
         *
         * This can recurse into a parent `Scope` if it's available.
         */Scope.prototype.lookup=function(name){if(this.namedEntities.has(name)){// Found in the local scope.
return this.namedEntities.get(name);}else if(this.parentScope!==undefined){// Not in the local scope, but there's a parent scope so check there.
return this.parentScope.lookup(name);}else{// At the top level and it wasn't found.
return null;}};/**
         * Get the child scope for a `Template`.
         *
         * This should always be defined.
         */Scope.prototype.getChildScope=function(template){var res=this.childScopes.get(template);if(res===undefined){throw new Error("Assertion error: child scope for "+template+" not found");}return res;};return Scope;}();/**
     * Processes a template and matches directives on nodes (elements and templates).
     *
     * Usually used via the static `apply()` method.
     */var DirectiveBinder=/** @class */function(){function DirectiveBinder(matcher,directives,bindings,references){this.matcher=matcher;this.directives=directives;this.bindings=bindings;this.references=references;}/**
         * Process a template (list of `Node`s) and perform directive matching against each node.
         *
         * @param template the list of template `Node`s to match (recursively).
         * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for
         * this template.
         * @returns three maps which contain information about directives in the template: the
         * `directives` map which lists directives matched on each node, the `bindings` map which
         * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`
         * map which resolves #references (`Reference`s) within the template to the named directive or
         * template node.
         */DirectiveBinder.apply=function(template,selectorMatcher){var directives=new Map();var bindings=new Map();var references=new Map();var matcher=new DirectiveBinder(selectorMatcher,directives,bindings,references);matcher.ingest(template);return{directives:directives,bindings:bindings,references:references};};DirectiveBinder.prototype.ingest=function(template){var _this=this;template.forEach(function(node){return node.visit(_this);});};DirectiveBinder.prototype.visitElement=function(element){this.visitElementOrTemplate(element.name,element);};DirectiveBinder.prototype.visitTemplate=function(template){this.visitElementOrTemplate('ng-template',template);};DirectiveBinder.prototype.visitElementOrTemplate=function(elementName,node){var _this=this;// First, determine the HTML shape of the node for the purpose of directive matching.
// Do this by building up a `CssSelector` for the node.
var cssSelector=createCssSelector(elementName,getAttrsForDirectiveMatching(node));// Next, use the `SelectorMatcher` to get the list of directives on the node.
var directives=[];this.matcher.match(cssSelector,function(_,directive){return directives.push(directive);});if(directives.length>0){this.directives.set(node,directives);}// Resolve any references that are created on this node.
node.references.forEach(function(ref){var dirTarget=null;// If the reference expression is empty, then it matches the "primary" directive on the node
// (if there is one). Otherwise it matches the host node itself (either an element or
// <ng-template> node).
if(ref.value.trim()===''){// This could be a reference to a component if there is one.
dirTarget=directives.find(function(dir){return dir.isComponent;})||null;}else{// This should be a reference to a directive exported via exportAs.
dirTarget=directives.find(function(dir){return dir.exportAs!==null&&dir.exportAs.some(function(value){return value===ref.value;});})||null;// Check if a matching directive was found.
if(dirTarget===null){// No matching directive was found - this reference points to an unknown target. Leave it
// unmapped.
return;}}if(dirTarget!==null){// This reference points to a directive.
_this.references.set(ref,{directive:dirTarget,node:node});}else{// This reference points to the node itself.
_this.references.set(ref,node);}});var setAttributeBinding=function setAttributeBinding(attribute,ioType){var dir=directives.find(function(dir){return dir[ioType].hasOwnProperty(attribute.name);});var binding=dir!==undefined?dir:node;_this.bindings.set(attribute,binding);};// Node inputs (bound attributes) and text attributes can be bound to an
// input on a directive.
node.inputs.forEach(function(input){return setAttributeBinding(input,'inputs');});node.attributes.forEach(function(attr){return setAttributeBinding(attr,'inputs');});if(node instanceof Template){node.templateAttrs.forEach(function(attr){return setAttributeBinding(attr,'inputs');});}// Node outputs (bound events) can be bound to an output on a directive.
node.outputs.forEach(function(output){return setAttributeBinding(output,'outputs');});// Recurse into the node's children.
node.children.forEach(function(child){return child.visit(_this);});};// Unused visitors.
DirectiveBinder.prototype.visitContent=function(content){};DirectiveBinder.prototype.visitVariable=function(variable){};DirectiveBinder.prototype.visitReference=function(reference){};DirectiveBinder.prototype.visitTextAttribute=function(attribute){};DirectiveBinder.prototype.visitBoundAttribute=function(attribute){};DirectiveBinder.prototype.visitBoundEvent=function(attribute){};DirectiveBinder.prototype.visitBoundAttributeOrEvent=function(node){};DirectiveBinder.prototype.visitText=function(text){};DirectiveBinder.prototype.visitBoundText=function(text){};DirectiveBinder.prototype.visitIcu=function(icu){};return DirectiveBinder;}();/**
     * Processes a template and extract metadata about expressions and symbols within.
     *
     * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched
     * within the template in order to operate.
     *
     * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided
     * by overridden methods from that visitor.
     */var TemplateBinder=/** @class */function(_super){__extends(TemplateBinder,_super);function TemplateBinder(bindings,symbols,usedPipes,nestingLevel,scope,template,level){var _this=_super.call(this)||this;_this.bindings=bindings;_this.symbols=symbols;_this.usedPipes=usedPipes;_this.nestingLevel=nestingLevel;_this.scope=scope;_this.template=template;_this.level=level;_this.pipesUsed=[];// Save a bit of processing time by constructing this closure in advance.
_this.visitNode=function(node){return node.visit(_this);};return _this;}// This method is defined to reconcile the type of TemplateBinder since both
// RecursiveAstVisitor and Visitor define the visit() method in their
// interfaces.
TemplateBinder.prototype.visit=function(node,context){if(node instanceof AST){node.visit(this,context);}else{node.visit(this);}};/**
         * Process a template and extract metadata about expressions and symbols within.
         *
         * @param template the nodes of the template to process
         * @param scope the `Scope` of the template being processed.
         * @returns three maps which contain metadata about the template: `expressions` which interprets
         * special `AST` nodes in expressions as pointing to references or variables declared within the
         * template, `symbols` which maps those variables and references to the nested `Template` which
         * declares them, if any, and `nestingLevel` which associates each `Template` with a integer
         * nesting level (how many levels deep within the template structure the `Template` is), starting
         * at 1.
         */TemplateBinder.apply=function(template,scope){var expressions=new Map();var symbols=new Map();var nestingLevel=new Map();var usedPipes=new Set();// The top-level template has nesting level 0.
var binder=new TemplateBinder(expressions,symbols,usedPipes,nestingLevel,scope,template instanceof Template?template:null,0);binder.ingest(template);return{expressions:expressions,symbols:symbols,nestingLevel:nestingLevel,usedPipes:usedPipes};};TemplateBinder.prototype.ingest=function(template){if(template instanceof Template){// For <ng-template>s, process only variables and child nodes. Inputs, outputs, templateAttrs,
// and references were all processed in the scope of the containing template.
template.variables.forEach(this.visitNode);template.children.forEach(this.visitNode);// Set the nesting level.
this.nestingLevel.set(template,this.level);}else{// Visit each node from the top-level template.
template.forEach(this.visitNode);}};TemplateBinder.prototype.visitElement=function(element){// Visit the inputs, outputs, and children of the element.
element.inputs.forEach(this.visitNode);element.outputs.forEach(this.visitNode);element.children.forEach(this.visitNode);};TemplateBinder.prototype.visitTemplate=function(template){// First, visit inputs, outputs and template attributes of the template node.
template.inputs.forEach(this.visitNode);template.outputs.forEach(this.visitNode);template.templateAttrs.forEach(this.visitNode);// References are also evaluated in the outer context.
template.references.forEach(this.visitNode);// Next, recurse into the template using its scope, and bumping the nesting level up by one.
var childScope=this.scope.getChildScope(template);var binder=new TemplateBinder(this.bindings,this.symbols,this.usedPipes,this.nestingLevel,childScope,template,this.level+1);binder.ingest(template);};TemplateBinder.prototype.visitVariable=function(variable){// Register the `Variable` as a symbol in the current `Template`.
if(this.template!==null){this.symbols.set(variable,this.template);}};TemplateBinder.prototype.visitReference=function(reference){// Register the `Reference` as a symbol in the current `Template`.
if(this.template!==null){this.symbols.set(reference,this.template);}};// Unused template visitors
TemplateBinder.prototype.visitText=function(text){};TemplateBinder.prototype.visitContent=function(content){};TemplateBinder.prototype.visitTextAttribute=function(attribute){};TemplateBinder.prototype.visitIcu=function(icu){};// The remaining visitors are concerned with processing AST expressions within template bindings
TemplateBinder.prototype.visitBoundAttribute=function(attribute){attribute.value.visit(this);};TemplateBinder.prototype.visitBoundEvent=function(event){event.handler.visit(this);};TemplateBinder.prototype.visitBoundText=function(text){text.value.visit(this);};TemplateBinder.prototype.visitPipe=function(ast,context){this.usedPipes.add(ast.name);return _super.prototype.visitPipe.call(this,ast,context);};// These five types of AST expressions can refer to expression roots, which could be variables
// or references in the current scope.
TemplateBinder.prototype.visitPropertyRead=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitPropertyRead.call(this,ast,context);};TemplateBinder.prototype.visitSafePropertyRead=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitSafePropertyRead.call(this,ast,context);};TemplateBinder.prototype.visitPropertyWrite=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitPropertyWrite.call(this,ast,context);};TemplateBinder.prototype.visitMethodCall=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitMethodCall.call(this,ast,context);};TemplateBinder.prototype.visitSafeMethodCall=function(ast,context){this.maybeMap(context,ast,ast.name);return _super.prototype.visitSafeMethodCall.call(this,ast,context);};TemplateBinder.prototype.maybeMap=function(scope,ast,name){// If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an
// `AST` expression that maps to a `Variable` or `Reference`.
if(!(ast.receiver instanceof ImplicitReceiver)){return;}// Check whether the name exists in the current scope. If so, map it. Otherwise, the name is
// probably a property on the top-level component context.
var target=this.scope.lookup(name);if(target!==null){this.bindings.set(ast,target);}};return TemplateBinder;}(RecursiveAstVisitor$1);/**
     * Metadata container for a `Target` that allows queries for specific bits of metadata.
     *
     * See `BoundTarget` for documentation on the individual methods.
     */var R3BoundTarget=/** @class */function(){function R3BoundTarget(target,directives,bindings,references,exprTargets,symbols,nestingLevel,usedPipes){this.target=target;this.directives=directives;this.bindings=bindings;this.references=references;this.exprTargets=exprTargets;this.symbols=symbols;this.nestingLevel=nestingLevel;this.usedPipes=usedPipes;}R3BoundTarget.prototype.getDirectivesOfNode=function(node){return this.directives.get(node)||null;};R3BoundTarget.prototype.getReferenceTarget=function(ref){return this.references.get(ref)||null;};R3BoundTarget.prototype.getConsumerOfBinding=function(binding){return this.bindings.get(binding)||null;};R3BoundTarget.prototype.getExpressionTarget=function(expr){return this.exprTargets.get(expr)||null;};R3BoundTarget.prototype.getTemplateOfSymbol=function(symbol){return this.symbols.get(symbol)||null;};R3BoundTarget.prototype.getNestingLevel=function(template){return this.nestingLevel.get(template)||0;};R3BoundTarget.prototype.getUsedDirectives=function(){var set=new Set();this.directives.forEach(function(dirs){return dirs.forEach(function(dir){return set.add(dir);});});return Array.from(set.values());};R3BoundTarget.prototype.getUsedPipes=function(){return Array.from(this.usedPipes);};return R3BoundTarget;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
// This function call has a global side effects and publishes the compiler into global namespace for
// the late binding of the Compiler to the @angular/core for jit compilation.
publishFacade(_global);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */exports.AST=AST;exports.ASTWithName=ASTWithName;exports.ASTWithSource=ASTWithSource;exports.AbsoluteSourceSpan=AbsoluteSourceSpan;exports.AotCompiler=AotCompiler;exports.AotSummaryResolver=AotSummaryResolver;exports.ArrayType=ArrayType;exports.AssertNotNull=AssertNotNull;exports.AstMemoryEfficientTransformer=AstMemoryEfficientTransformer;exports.AstPath=AstPath;exports.AstTransformer=AstTransformer$1;exports.AttrAst=AttrAst;exports.Attribute=Attribute;exports.Binary=Binary;exports.BinaryOperatorExpr=BinaryOperatorExpr;exports.BindingPipe=BindingPipe;exports.BoundDirectivePropertyAst=BoundDirectivePropertyAst;exports.BoundElementProperty=BoundElementProperty;exports.BoundElementPropertyAst=BoundElementPropertyAst;exports.BoundEventAst=BoundEventAst;exports.BoundTextAst=BoundTextAst;exports.BuiltinType=BuiltinType;exports.CONTENT_ATTR=CONTENT_ATTR;exports.CUSTOM_ELEMENTS_SCHEMA=CUSTOM_ELEMENTS_SCHEMA;exports.CastExpr=CastExpr;exports.Chain=Chain;exports.ClassField=ClassField;exports.ClassMethod=ClassMethod;exports.ClassStmt=ClassStmt;exports.CommaExpr=CommaExpr;exports.Comment=Comment;exports.CommentStmt=CommentStmt;exports.CompileDirectiveMetadata=CompileDirectiveMetadata;exports.CompileMetadataResolver=CompileMetadataResolver;exports.CompileNgModuleMetadata=CompileNgModuleMetadata;exports.CompilePipeMetadata=CompilePipeMetadata;exports.CompileReflector=CompileReflector;exports.CompileShallowModuleMetadata=CompileShallowModuleMetadata;exports.CompileStylesheetMetadata=CompileStylesheetMetadata;exports.CompileTemplateMetadata=CompileTemplateMetadata;exports.CompiledStylesheet=CompiledStylesheet;exports.CompilerConfig=CompilerConfig;exports.Conditional=Conditional;exports.ConditionalExpr=ConditionalExpr;exports.ConstantPool=ConstantPool;exports.CssSelector=CssSelector;exports.DEFAULT_INTERPOLATION_CONFIG=DEFAULT_INTERPOLATION_CONFIG;exports.DYNAMIC_TYPE=DYNAMIC_TYPE;exports.DeclareFunctionStmt=DeclareFunctionStmt;exports.DeclareVarStmt=DeclareVarStmt;exports.DirectiveAst=DirectiveAst;exports.DirectiveNormalizer=DirectiveNormalizer;exports.DirectiveResolver=DirectiveResolver;exports.DomElementSchemaRegistry=DomElementSchemaRegistry;exports.EOF=EOF;exports.ERROR_COMPONENT_TYPE=ERROR_COMPONENT_TYPE;exports.Element=Element$1;exports.ElementAst=ElementAst;exports.ElementSchemaRegistry=ElementSchemaRegistry;exports.EmbeddedTemplateAst=EmbeddedTemplateAst;exports.EmitterVisitorContext=EmitterVisitorContext;exports.EmptyExpr=EmptyExpr;exports.Expansion=Expansion;exports.ExpansionCase=ExpansionCase;exports.Expression=Expression;exports.ExpressionBinding=ExpressionBinding;exports.ExpressionStatement=ExpressionStatement;exports.ExpressionType=ExpressionType;exports.ExternalExpr=ExternalExpr;exports.ExternalReference=ExternalReference;exports.Extractor=Extractor;exports.FunctionCall=FunctionCall;exports.FunctionExpr=FunctionExpr;exports.GeneratedFile=GeneratedFile;exports.HOST_ATTR=HOST_ATTR;exports.HtmlParser=HtmlParser;exports.HtmlTagDefinition=HtmlTagDefinition;exports.I18NHtmlParser=I18NHtmlParser;exports.Identifiers=Identifiers;exports.IfStmt=IfStmt;exports.ImplicitReceiver=ImplicitReceiver;exports.InstantiateExpr=InstantiateExpr;exports.Interpolation=Interpolation;exports.InterpolationConfig=InterpolationConfig;exports.InvokeFunctionExpr=InvokeFunctionExpr;exports.InvokeMethodExpr=InvokeMethodExpr;exports.IvyParser=IvyParser;exports.JSDocCommentStmt=JSDocCommentStmt;exports.JitCompiler=JitCompiler;exports.JitEvaluator=JitEvaluator;exports.JitSummaryResolver=JitSummaryResolver;exports.KeyedRead=KeyedRead;exports.KeyedWrite=KeyedWrite;exports.Lexer=Lexer;exports.LiteralArray=LiteralArray;exports.LiteralArrayExpr=LiteralArrayExpr;exports.LiteralExpr=LiteralExpr;exports.LiteralMap=LiteralMap;exports.LiteralMapExpr=LiteralMapExpr;exports.LiteralPrimitive=LiteralPrimitive;exports.MapType=MapType;exports.MessageBundle=MessageBundle;exports.MethodCall=MethodCall;exports.NAMED_ENTITIES=NAMED_ENTITIES;exports.NGSP_UNICODE=NGSP_UNICODE;exports.NONE_TYPE=NONE_TYPE;exports.NO_ERRORS_SCHEMA=NO_ERRORS_SCHEMA;exports.NgContentAst=NgContentAst;exports.NgModuleCompiler=NgModuleCompiler;exports.NgModuleResolver=NgModuleResolver;exports.NodeWithI18n=NodeWithI18n;exports.NonNullAssert=NonNullAssert;exports.NotExpr=NotExpr;exports.NullTemplateVisitor=NullTemplateVisitor;exports.ParseError=ParseError;exports.ParseLocation=ParseLocation;exports.ParseSourceFile=ParseSourceFile;exports.ParseSourceSpan=ParseSourceSpan;exports.ParseSpan=ParseSpan;exports.ParseTreeResult=ParseTreeResult;exports.ParsedEvent=ParsedEvent;exports.ParsedProperty=ParsedProperty;exports.ParsedVariable=ParsedVariable;exports.Parser=Parser$1;exports.ParserError=ParserError;exports.PipeResolver=PipeResolver;exports.PrefixNot=PrefixNot;exports.PropertyRead=PropertyRead;exports.PropertyWrite=PropertyWrite;exports.ProviderAst=ProviderAst;exports.ProviderMeta=ProviderMeta;exports.Quote=Quote;exports.R3BoundTarget=R3BoundTarget;exports.R3Identifiers=Identifiers$1;exports.R3TargetBinder=R3TargetBinder;exports.ReadKeyExpr=ReadKeyExpr;exports.ReadPropExpr=ReadPropExpr;exports.ReadVarExpr=ReadVarExpr;exports.RecursiveAstVisitor=RecursiveAstVisitor$1;exports.RecursiveTemplateAstVisitor=RecursiveTemplateAstVisitor;exports.RecursiveVisitor=RecursiveVisitor$1;exports.ReferenceAst=ReferenceAst;exports.ResolvedStaticSymbol=ResolvedStaticSymbol;exports.ResourceLoader=ResourceLoader;exports.ReturnStatement=ReturnStatement;exports.STRING_TYPE=STRING_TYPE;exports.SafeMethodCall=SafeMethodCall;exports.SafePropertyRead=SafePropertyRead;exports.SelectorContext=SelectorContext;exports.SelectorListContext=SelectorListContext;exports.SelectorMatcher=SelectorMatcher;exports.Serializer=Serializer;exports.SplitInterpolation=SplitInterpolation;exports.Statement=Statement;exports.StaticReflector=StaticReflector;exports.StaticSymbol=StaticSymbol;exports.StaticSymbolCache=StaticSymbolCache;exports.StaticSymbolResolver=StaticSymbolResolver;exports.StyleCompiler=StyleCompiler;exports.StylesCompileDependency=StylesCompileDependency;exports.SummaryResolver=SummaryResolver;exports.TemplateBindingParseResult=TemplateBindingParseResult;exports.TemplateParseError=TemplateParseError;exports.TemplateParseResult=TemplateParseResult;exports.TemplateParser=TemplateParser;exports.Text=Text$3;exports.TextAst=TextAst;exports.ThrowStmt=ThrowStmt;exports.TmplAstBoundAttribute=BoundAttribute;exports.TmplAstBoundEvent=BoundEvent;exports.TmplAstBoundText=BoundText;exports.TmplAstContent=Content;exports.TmplAstElement=Element;exports.TmplAstRecursiveVisitor=RecursiveVisitor;exports.TmplAstReference=Reference;exports.TmplAstTemplate=Template;exports.TmplAstText=Text;exports.TmplAstTextAttribute=TextAttribute;exports.TmplAstVariable=Variable;exports.Token=Token$1;exports.TransitiveCompileNgModuleMetadata=TransitiveCompileNgModuleMetadata;exports.TreeError=TreeError;exports.TryCatchStmt=TryCatchStmt;exports.Type=Type$1;exports.TypeScriptEmitter=TypeScriptEmitter;exports.TypeofExpr=TypeofExpr;exports.UrlResolver=UrlResolver;exports.VERSION=VERSION$1;exports.VariableAst=VariableAst;exports.VariableBinding=VariableBinding;exports.Version=Version;exports.ViewCompiler=ViewCompiler;exports.WrappedNodeExpr=WrappedNodeExpr;exports.WriteKeyExpr=WriteKeyExpr;exports.WritePropExpr=WritePropExpr;exports.WriteVarExpr=WriteVarExpr;exports.Xliff=Xliff;exports.Xliff2=Xliff2;exports.Xmb=Xmb;exports.XmlParser=XmlParser;exports.Xtb=Xtb;exports._ParseAST=_ParseAST;exports.analyzeAndValidateNgModules=analyzeAndValidateNgModules;exports.analyzeFile=analyzeFile;exports.analyzeFileForInjectables=analyzeFileForInjectables;exports.analyzeNgModules=analyzeNgModules;exports.collectExternalReferences=collectExternalReferences;exports.compileComponentFromMetadata=compileComponentFromMetadata;exports.compileDirectiveFromMetadata=compileDirectiveFromMetadata;exports.compileFactoryFunction=compileFactoryFunction;exports.compileInjectable=compileInjectable;exports.compileInjector=compileInjector;exports.compileNgModule=compileNgModule;exports.compilePipeFromMetadata=compilePipeFromMetadata;exports.componentFactoryName=componentFactoryName;exports.computeMsgId=computeMsgId;exports.core=core;exports.createAotCompiler=createAotCompiler;exports.createAotUrlResolver=createAotUrlResolver;exports.createElementCssSelector=createElementCssSelector;exports.createLoweredSymbol=createLoweredSymbol;exports.createOfflineCompileUrlResolver=createOfflineCompileUrlResolver;exports.createUrlResolverWithoutPackagePrefix=createUrlResolverWithoutPackagePrefix;exports.debugOutputAstAsTypeScript=debugOutputAstAsTypeScript;exports.findNode=findNode;exports.flatten=flatten;exports.formattedError=formattedError;exports.getHtmlTagDefinition=getHtmlTagDefinition;exports.getNsPrefix=getNsPrefix;exports.getParseErrors=getParseErrors;exports.getUrlScheme=getUrlScheme;exports.hostViewClassName=hostViewClassName;exports.identifierModuleUrl=identifierModuleUrl;exports.identifierName=identifierName;exports.isEmptyExpression=isEmptyExpression;exports.isFormattedError=isFormattedError;exports.isIdentifier=isIdentifier;exports.isLoweredSymbol=isLoweredSymbol;exports.isNgContainer=isNgContainer;exports.isNgContent=isNgContent;exports.isNgTemplate=isNgTemplate;exports.isQuote=isQuote;exports.isSyntaxError=isSyntaxError;exports.literalMap=literalMap;exports.makeBindingParser=makeBindingParser;exports.mergeAnalyzedFiles=mergeAnalyzedFiles;exports.mergeNsAndName=mergeNsAndName;exports.ngModuleJitUrl=ngModuleJitUrl;exports.parseHostBindings=parseHostBindings;exports.parseTemplate=parseTemplate;exports.preserveWhitespacesDefault=preserveWhitespacesDefault;exports.publishFacade=publishFacade;exports.r3JitTypeSourceSpan=r3JitTypeSourceSpan;exports.removeSummaryDuplicates=removeSummaryDuplicates;exports.rendererTypeName=rendererTypeName;exports.sanitizeIdentifier=sanitizeIdentifier;exports.sharedStylesheetJitUrl=sharedStylesheetJitUrl;exports.splitClasses=splitClasses;exports.splitNsName=splitNsName;exports.syntaxError=syntaxError;exports.templateJitUrl=templateJitUrl;exports.templateSourceUrl=templateSourceUrl;exports.templateVisitAll=templateVisitAll;exports.toTypeScript=toTypeScript;exports.tokenName=tokenName;exports.tokenReference=tokenReference;exports.typeSourceSpan=typeSourceSpan;exports.unescapeIdentifier=unescapeIdentifier;exports.unwrapResolvedMetadata=unwrapResolvedMetadata;exports.verifyHostBindings=verifyHostBindings;exports.viewClassName=viewClassName;exports.visitAll=visitAll$1;Object.defineProperty(exports,'__esModule',{value:true});});}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],4:[function(require,module,exports){(function(global){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('rxjs'),require('rxjs/operators')):typeof define==='function'&&define.amd?define('@angular/core',['exports','rxjs','rxjs/operators'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.core={}),global.rxjs,global.rxjs.operators));})(this,function(exports,rxjs,operators){'use strict';/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics4=function extendStatics(d,b){_extendStatics4=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics4(d,b);};function __extends(d,b){_extendStatics4(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign4=function __assign(){_assign4=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign4.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Convince closure compiler that the wrapped function has no side-effects.
     *
     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to
     * allow us to execute a function but have closure compiler mark the call as no-side-effects.
     * It is important that the return value for the `noSideEffects` function be assigned
     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure
     * compiler.
     */function noSideEffects(fn){return{toString:fn}.toString();}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ANNOTATIONS='__annotations__';var PARAMETERS='__parameters__';var PROP_METADATA='__prop__metadata__';/**
     * @suppress {globalThis}
     */function makeDecorator(name,props,parentClass,additionalProcessing,typeFn){return noSideEffects(function(){var metaCtor=makeMetadataCtor(props);function DecoratorFactory(){var _a;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof DecoratorFactory){metaCtor.call.apply(metaCtor,__spread([this],args));return this;}var annotationInstance=new((_a=DecoratorFactory).bind.apply(_a,__spread([void 0],args)))();return function TypeDecorator(cls){if(typeFn)typeFn.apply(void 0,__spread([cls],args));// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var annotations=cls.hasOwnProperty(ANNOTATIONS)?cls[ANNOTATIONS]:Object.defineProperty(cls,ANNOTATIONS,{value:[]})[ANNOTATIONS];annotations.push(annotationInstance);if(additionalProcessing)additionalProcessing(cls);return cls;};}if(parentClass){DecoratorFactory.prototype=Object.create(parentClass.prototype);}DecoratorFactory.prototype.ngMetadataName=name;DecoratorFactory.annotationCls=DecoratorFactory;return DecoratorFactory;});}function makeMetadataCtor(props){return function ctor(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(props){var values=props.apply(void 0,__spread(args));for(var propName in values){this[propName]=values[propName];}}};}function makeParamDecorator(name,props,parentClass){return noSideEffects(function(){var metaCtor=makeMetadataCtor(props);function ParamDecoratorFactory(){var _a;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof ParamDecoratorFactory){metaCtor.apply(this,args);return this;}var annotationInstance=new((_a=ParamDecoratorFactory).bind.apply(_a,__spread([void 0],args)))();ParamDecorator.annotation=annotationInstance;return ParamDecorator;function ParamDecorator(cls,unusedKey,index){// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var parameters=cls.hasOwnProperty(PARAMETERS)?cls[PARAMETERS]:Object.defineProperty(cls,PARAMETERS,{value:[]})[PARAMETERS];// there might be gaps if some in between parameters do not have annotations.
// we pad with nulls.
while(parameters.length<=index){parameters.push(null);}(parameters[index]=parameters[index]||[]).push(annotationInstance);return cls;}}if(parentClass){ParamDecoratorFactory.prototype=Object.create(parentClass.prototype);}ParamDecoratorFactory.prototype.ngMetadataName=name;ParamDecoratorFactory.annotationCls=ParamDecoratorFactory;return ParamDecoratorFactory;});}function makePropDecorator(name,props,parentClass,additionalProcessing){return noSideEffects(function(){var metaCtor=makeMetadataCtor(props);function PropDecoratorFactory(){var _a;var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}if(this instanceof PropDecoratorFactory){metaCtor.apply(this,args);return this;}var decoratorInstance=new((_a=PropDecoratorFactory).bind.apply(_a,__spread([void 0],args)))();function PropDecorator(target,name){var constructor=target.constructor;// Use of Object.defineProperty is important since it creates non-enumerable property which
// prevents the property is copied during subclassing.
var meta=constructor.hasOwnProperty(PROP_METADATA)?constructor[PROP_METADATA]:Object.defineProperty(constructor,PROP_METADATA,{value:{}})[PROP_METADATA];meta[name]=meta.hasOwnProperty(name)&&meta[name]||[];meta[name].unshift(decoratorInstance);if(additionalProcessing)additionalProcessing.apply(void 0,__spread([target,name],args));}return PropDecorator;}if(parentClass){PropDecoratorFactory.prototype=Object.create(parentClass.prototype);}PropDecoratorFactory.prototype.ngMetadataName=name;PropDecoratorFactory.annotationCls=PropDecoratorFactory;return PropDecoratorFactory;});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0=function ɵ0(token){return{token:token};};/**
     * Inject decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Inject=makeParamDecorator('Inject',ɵ0);/**
     * Optional decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Optional=makeParamDecorator('Optional');/**
     * Self decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Self=makeParamDecorator('Self');/**
     * SkipSelf decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var SkipSelf=makeParamDecorator('SkipSelf');/**
     * Host decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Host=makeParamDecorator('Host');var ɵ1=function ɵ1(attributeName){return{attributeName:attributeName};};/**
     * Attribute decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Attribute=makeParamDecorator('Attribute',ɵ1);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(InjectFlags){// TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.
/** Check self and check parent injector if needed */InjectFlags[InjectFlags["Default"]=0]="Default";/**
         * Specifies that an injector should retrieve a dependency from any injector until reaching the
         * host element of the current component. (Only used with Element Injector)
         */InjectFlags[InjectFlags["Host"]=1]="Host";/** Don't ascend to ancestors of the node requesting injection. */InjectFlags[InjectFlags["Self"]=2]="Self";/** Skip the node that is requesting injection. */InjectFlags[InjectFlags["SkipSelf"]=4]="SkipSelf";/** Inject `defaultValue` instead if token not found. */InjectFlags[InjectFlags["Optional"]=8]="Optional";})(exports.InjectFlags||(exports.InjectFlags={}));/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function getClosureSafeProperty(objWithPropertyToExtract){for(var key in objWithPropertyToExtract){if(objWithPropertyToExtract[key]===getClosureSafeProperty){return key;}}throw Error('Could not find renamed property on target object.');}/**
     * Sets properties on a target object from a source object, but only if
     * the property doesn't already exist on the target object.
     * @param target The target to set properties on
     * @param source The source of the property keys and values to set
     */function fillProperties(target,source){for(var key in source){if(source.hasOwnProperty(key)&&!target.hasOwnProperty(key)){target[key]=source[key];}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and
     * in which injectors (if any) it will be available.
     *
     * This should be assigned to a static `ɵprov` field on a type, which will then be an
     * `InjectableType`.
     *
     * Options:
     * * `providedIn` determines which injectors will include the injectable, by either associating it
     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be
     *   provided in the `'root'` injector, which will be the application-level injector in most apps.
     * * `factory` gives the zero argument function which will create an instance of the injectable.
     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.
     *
     * @codeGenApi
     */function ɵɵdefineInjectable(opts){return{token:opts.token,providedIn:opts.providedIn||null,factory:opts.factory,value:undefined};}/**
     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that
     * code should now use ɵɵdefineInjectable instead.
     * @publicApi
     */var defineInjectable=ɵɵdefineInjectable;/**
     * Construct an `InjectorDef` which configures an injector.
     *
     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an
     * `InjectorType`.
     *
     * Options:
     *
     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to
     *   create the type must be provided. If that factory function needs to inject arguments, it can
     *   use the `inject` function.
     * * `providers`: an optional array of providers to add to the injector. Each provider must
     *   either have a factory or point to a type which has a `ɵprov` static property (the
     *   type must be an `InjectableType`).
     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s
     *   whose providers will also be added to the injector. Locally provided types will override
     *   providers from imports.
     *
     * @publicApi
     */function ɵɵdefineInjector(options){return{factory:options.factory,providers:options.providers||[],imports:options.imports||[]};}/**
     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading
     * inherited value.
     *
     * @param type A type which may have its own (non-inherited) `ɵprov`.
     */function getInjectableDef(type){return getOwnDefinition(type,type[NG_PROV_DEF])||getOwnDefinition(type,type[NG_INJECTABLE_DEF]);}/**
     * Return `def` only if it is defined directly on `type` and is not inherited from a base
     * class of `type`.
     *
     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older
     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.
     *
     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the
     * property was not defined directly on the type itself, and was likely inherited. The definition
     * is only returned if the `type` matches the `def.token`.
     */function getOwnDefinition(type,def){return def&&def.token===type?def:null;}/**
     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.
     *
     * @param type A type which may have `ɵprov`, via inheritance.
     *
     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the
     * `ɵprov` on an ancestor only.
     */function getInheritedInjectableDef(type){// See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.
var def=type&&(type[NG_PROV_DEF]||type[NG_INJECTABLE_DEF]||type[NG_PROV_DEF_FALLBACK]&&type[NG_PROV_DEF_FALLBACK]());if(def){var typeName=getTypeName(type);// TODO(FW-1307): Re-add ngDevMode when closure can handle it
// ngDevMode &&
console.warn("DEPRECATED: DI is instantiating a token \""+typeName+"\" that inherits its @Injectable decorator but does not provide one itself.\n"+("This will become an error in v10. Please add @Injectable() to the \""+typeName+"\" class."));return def;}else{return null;}}/** Gets the name of a type, accounting for some cross-browser differences. */function getTypeName(type){// `Function.prototype.name` behaves differently between IE and other browsers. In most browsers
// it'll always return the name of the function itself, no matter how many other functions it
// inherits from. On IE the function doesn't have its own `name` property, but it takes it from
// the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most
// browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around
// the issue by converting the function to a string and parsing its name out that way via a regex.
if(type.hasOwnProperty('name')){return type.name;}var match=(''+type).match(/^function\s*([^\s(]+)/);return match===null?'':match[1];}/**
     * Read the injector def type in a way which is immune to accidentally reading inherited value.
     *
     * @param type type which may have an injector def (`ɵinj`)
     */function getInjectorDef(type){return type&&(type.hasOwnProperty(NG_INJ_DEF)||type.hasOwnProperty(NG_INJECTOR_DEF))?type[NG_INJ_DEF]:null;}var NG_PROV_DEF=getClosureSafeProperty({ɵprov:getClosureSafeProperty});var NG_INJ_DEF=getClosureSafeProperty({ɵinj:getClosureSafeProperty});// On IE10 properties defined via `defineProperty` won't be inherited by child classes,
// which will break inheriting the injectable definition from a grandparent through an
// undecorated parent class. We work around it by defining a fallback method which will be
// used to retrieve the definition. This should only be a problem in JIT mode, because in
// AOT TypeScript seems to have a workaround for static properties. When inheriting from an
// undecorated parent is no longer supported in v10, this can safely be removed.
var NG_PROV_DEF_FALLBACK=getClosureSafeProperty({ɵprovFallback:getClosureSafeProperty});// We need to keep these around so we can read off old defs if new defs are unavailable
var NG_INJECTABLE_DEF=getClosureSafeProperty({ngInjectableDef:getClosureSafeProperty});var NG_INJECTOR_DEF=getClosureSafeProperty({ngInjectorDef:getClosureSafeProperty});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function stringify(token){if(typeof token==='string'){return token;}if(Array.isArray(token)){return'['+token.map(stringify).join(', ')+']';}if(token==null){return''+token;}if(token.overriddenName){return""+token.overriddenName;}if(token.name){return""+token.name;}var res=token.toString();if(res==null){return''+res;}var newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
     * Concatenates two strings with separator, allocating new strings only when necessary.
     *
     * @param before before string.
     * @param separator separator string.
     * @param after after string.
     * @returns concatenated string.
     */function concatStringsWithSpace(before,after){return before==null||before===''?after===null?'':after:after==null||after===''?before:before+' '+after;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var __forward_ref__=getClosureSafeProperty({__forward_ref__:getClosureSafeProperty});/**
     * Allows to refer to references which are not yet defined.
     *
     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating
     * a query is not yet defined.
     *
     * @usageNotes
     * ### Example
     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
     * @publicApi
     */function forwardRef(forwardRefFn){forwardRefFn.__forward_ref__=forwardRef;forwardRefFn.toString=function(){return stringify(this());};return forwardRefFn;}/**
     * Lazily retrieves the reference value from a forwardRef.
     *
     * Acts as the identity function when given a non-forward-ref value.
     *
     * @usageNotes
     * ### Example
     *
     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
     *
     * @see `forwardRef`
     * @publicApi
     */function resolveForwardRef(type){return isForwardRef(type)?type():type;}/** Checks whether a function is wrapped by a `forwardRef`. */function isForwardRef(fn){return typeof fn==='function'&&fn.hasOwnProperty(__forward_ref__)&&fn.__forward_ref__===forwardRef;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var __globalThis=typeof globalThis!=='undefined'&&globalThis;var __window=typeof window!=='undefined'&&window;var __self=typeof self!=='undefined'&&typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope&&self;var __global=typeof global!=='undefined'&&global;// Always use __globalThis if available, which is the spec-defined global variable across all
// environments, then fallback to __global first, because in Node tests both __global and
// __window may be defined and _global should be __global in that case.
var _global=__globalThis||__global||__window||__self;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var R3ResolvedDependencyType;(function(R3ResolvedDependencyType){R3ResolvedDependencyType[R3ResolvedDependencyType["Token"]=0]="Token";R3ResolvedDependencyType[R3ResolvedDependencyType["Attribute"]=1]="Attribute";R3ResolvedDependencyType[R3ResolvedDependencyType["ChangeDetectorRef"]=2]="ChangeDetectorRef";R3ResolvedDependencyType[R3ResolvedDependencyType["Invalid"]=3]="Invalid";})(R3ResolvedDependencyType||(R3ResolvedDependencyType={}));var R3FactoryTarget;(function(R3FactoryTarget){R3FactoryTarget[R3FactoryTarget["Directive"]=0]="Directive";R3FactoryTarget[R3FactoryTarget["Component"]=1]="Component";R3FactoryTarget[R3FactoryTarget["Injectable"]=2]="Injectable";R3FactoryTarget[R3FactoryTarget["Pipe"]=3]="Pipe";R3FactoryTarget[R3FactoryTarget["NgModule"]=4]="NgModule";})(R3FactoryTarget||(R3FactoryTarget={}));var ViewEncapsulation;(function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";ViewEncapsulation[ViewEncapsulation["None"]=2]="None";ViewEncapsulation[ViewEncapsulation["ShadowDom"]=3]="ShadowDom";})(ViewEncapsulation||(ViewEncapsulation={}));/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function getCompilerFacade(){var globalNg=_global['ng'];if(!globalNg||!globalNg.ɵcompilerFacade){throw new Error("Angular JIT compilation failed: '@angular/compiler' not loaded!\n"+"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n"+"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n"+"  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.");}return globalNg.ɵcompilerFacade;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NG_COMP_DEF=getClosureSafeProperty({ɵcmp:getClosureSafeProperty});var NG_DIR_DEF=getClosureSafeProperty({ɵdir:getClosureSafeProperty});var NG_PIPE_DEF=getClosureSafeProperty({ɵpipe:getClosureSafeProperty});var NG_MOD_DEF=getClosureSafeProperty({ɵmod:getClosureSafeProperty});var NG_LOC_ID_DEF=getClosureSafeProperty({ɵloc:getClosureSafeProperty});var NG_FACTORY_DEF=getClosureSafeProperty({ɵfac:getClosureSafeProperty});/**
     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as
     * the key and the directive's unique ID as the value. This allows us to map directives to their
     * bloom filter bit for DI.
     */ // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.
var NG_ELEMENT_ID=getClosureSafeProperty({__NG_ELEMENT_ID__:getClosureSafeProperty});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function ngDevModeResetPerfCounters(){var locationString=typeof location!=='undefined'?location.toString():'';var newCounters={namedConstructors:locationString.indexOf('ngDevMode=namedConstructors')!=-1,firstCreatePass:0,tNode:0,tView:0,rendererCreateTextNode:0,rendererSetText:0,rendererCreateElement:0,rendererAddEventListener:0,rendererSetAttribute:0,rendererRemoveAttribute:0,rendererSetProperty:0,rendererSetClassName:0,rendererAddClass:0,rendererRemoveClass:0,rendererSetStyle:0,rendererRemoveStyle:0,rendererDestroy:0,rendererDestroyNode:0,rendererMoveNode:0,rendererRemoveNode:0,rendererAppendChild:0,rendererInsertBefore:0,rendererCreateComment:0};// Make sure to refer to ngDevMode as ['ngDevMode'] for closure.
var allowNgDevModeTrue=locationString.indexOf('ngDevMode=false')===-1;_global['ngDevMode']=allowNgDevModeTrue&&newCounters;return newCounters;}/**
     * This function checks to see if the `ngDevMode` has been set. If yes,
     * then we honor it, otherwise we default to dev mode with additional checks.
     *
     * The idea is that unless we are doing production build where we explicitly
     * set `ngDevMode == false` we should be helping the developer by providing
     * as much early warning and errors as possible.
     *
     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions
     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode
     * is defined for the entire instruction set.
     *
     * When using checking `ngDevMode` on toplevel, always init it before referencing it
     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can
     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.
     *
     * Details on possible values for `ngDevMode` can be found on its docstring.
     *
     * NOTE:
     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.
     */function initNgDevMode(){// The below checks are to ensure that calling `initNgDevMode` multiple times does not
// reset the counters.
// If the `ngDevMode` is not an object, then it means we have not created the perf counters
// yet.
if(typeof ngDevMode==='undefined'||ngDevMode){if((typeof ngDevMode==="undefined"?"undefined":_typeof(ngDevMode))!=='object'){ngDevModeResetPerfCounters();}return!!ngDevMode;}return false;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Creates a token that can be used in a DI Provider.
     *
     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
     * runtime representation) such as when injecting an interface, callable type, array or
     * parameterized type.
     *
     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by
     * the `Injector`. This provides additional level of type safety.
     *
     * ```
     * interface MyInterface {...}
     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
     * // myInterface is inferred to be MyInterface.
     * ```
     *
     * When creating an `InjectionToken`, you can optionally specify a factory function which returns
     * (possibly by creating) a default value of the parameterized type `T`. This sets up the
     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the
     * application's root injector. If the factory function, which takes zero arguments, needs to inject
     * dependencies, it can do so using the `inject` function. See below for an example.
     *
     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which
     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As
     * mentioned above, `'root'` is the default value for `providedIn`.
     *
     * @usageNotes
     * ### Basic Example
     *
     * ### Plain InjectionToken
     *
     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}
     *
     * ### Tree-shakable InjectionToken
     *
     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}
     *
     *
     * @publicApi
     */var InjectionToken=/** @class */function(){function InjectionToken(_desc,options){this._desc=_desc;/** @internal */this.ngMetadataName='InjectionToken';this.ɵprov=undefined;if(typeof options=='number'){// This is a special hack to assign __NG_ELEMENT_ID__ to this instance.
// __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.
// We are using it to assign `-1` which is used to identify `Injector`.
this.__NG_ELEMENT_ID__=options;}else if(options!==undefined){this.ɵprov=ɵɵdefineInjectable({token:this,providedIn:options.providedIn||'root',factory:options.factory});}}InjectionToken.prototype.toString=function(){return"InjectionToken "+this._desc;};return InjectionToken;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.
     *
     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a
     * project.
     *
     * @publicApi
     */var INJECTOR=new InjectionToken('INJECTOR',-1// `-1` is used by Ivy DI system as special value to recognize it as `Injector`.
);var _THROW_IF_NOT_FOUND={};var THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;var NG_TEMP_TOKEN_PATH='ngTempTokenPath';var NG_TOKEN_PATH='ngTokenPath';var NEW_LINE=/\n/gm;var NO_NEW_LINE='ɵ';var SOURCE='__source';var ɵ0$1=getClosureSafeProperty;var USE_VALUE=getClosureSafeProperty({provide:String,useValue:ɵ0$1});/**
     * Current injector value used by `inject`.
     * - `undefined`: it is an error to call `inject`
     * - `null`: `inject` can be called but there is no injector (limp-mode).
     * - Injector instance: Use the injector for resolution.
     */var _currentInjector=undefined;function setCurrentInjector(injector){var former=_currentInjector;_currentInjector=injector;return former;}/**
     * Current implementation of inject.
     *
     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed
     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this
     * way for two reasons:
     *  1. `Injector` should not depend on ivy logic.
     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.
     */var _injectImplementation;/**
     * Sets the current inject implementation.
     */function setInjectImplementation(impl){var previous=_injectImplementation;_injectImplementation=impl;return previous;}function injectInjectorOnly(token,flags){if(flags===void 0){flags=exports.InjectFlags.Default;}if(_currentInjector===undefined){throw new Error("inject() must be called from an injection context");}else if(_currentInjector===null){return injectRootLimpMode(token,undefined,flags);}else{return _currentInjector.get(token,flags&exports.InjectFlags.Optional?null:undefined,flags);}}function ɵɵinject(token,flags){if(flags===void 0){flags=exports.InjectFlags.Default;}return(_injectImplementation||injectInjectorOnly)(resolveForwardRef(token),flags);}/**
     * Throws an error indicating that a factory function could not be generated by the compiler for a
     * particular class.
     *
     * This instruction allows the actual error message to be optimized away when ngDevMode is turned
     * off, saving bytes of generated code while still providing a good experience in dev mode.
     *
     * The name of the class is not mentioned here, but will be in the generated factory function name
     * and thus in the stack trace.
     *
     * @codeGenApi
     */function ɵɵinvalidFactoryDep(index){var msg=ngDevMode?"This constructor is not compatible with Angular Dependency Injection because its dependency at index "+index+" of the parameter list is invalid.\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\n\nPlease check that 1) the type for the parameter at index "+index+" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.":'invalid';throw new Error(msg);}/**
     * Injects a token from the currently active injector.
     *
     * Must be used in the context of a factory function such as one defined for an
     * `InjectionToken`. Throws an error if not called from such a context.
     *
     * Within such a factory function, using this function to request injection of a dependency
     * is faster and more type-safe than providing an additional array of dependencies
     * (as has been common with `useFactory` providers).
     *
     * @param token The injection token for the dependency to be injected.
     * @param flags Optional flags that control how injection is executed.
     * The flags correspond to injection strategies that can be specified with
     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.
     * @returns True if injection is successful, null otherwise.
     *
     * @usageNotes
     *
     * ### Example
     *
     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}
     *
     * @publicApi
     */var inject=ɵɵinject;/**
     * Injects `root` tokens in limp mode.
     *
     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to
     * `"root"`. This is known as the limp mode injection. In such case the value is stored in the
     * `InjectableDef`.
     */function injectRootLimpMode(token,notFoundValue,flags){var injectableDef=getInjectableDef(token);if(injectableDef&&injectableDef.providedIn=='root'){return injectableDef.value===undefined?injectableDef.value=injectableDef.factory():injectableDef.value;}if(flags&exports.InjectFlags.Optional)return null;if(notFoundValue!==undefined)return notFoundValue;throw new Error("Injector: NOT_FOUND ["+stringify(token)+"]");}function injectArgs(types){var args=[];for(var i=0;i<types.length;i++){var arg=resolveForwardRef(types[i]);if(Array.isArray(arg)){if(arg.length===0){throw new Error('Arguments array must have arguments.');}var type=undefined;var flags=exports.InjectFlags.Default;for(var j=0;j<arg.length;j++){var meta=arg[j];if(meta instanceof Optional||meta.ngMetadataName==='Optional'||meta===Optional){flags|=exports.InjectFlags.Optional;}else if(meta instanceof SkipSelf||meta.ngMetadataName==='SkipSelf'||meta===SkipSelf){flags|=exports.InjectFlags.SkipSelf;}else if(meta instanceof Self||meta.ngMetadataName==='Self'||meta===Self){flags|=exports.InjectFlags.Self;}else if(meta instanceof Inject||meta===Inject){type=meta.token;}else{type=meta;}}args.push(ɵɵinject(type,flags));}else{args.push(ɵɵinject(arg));}}return args;}var NullInjector=/** @class */function(){function NullInjector(){}NullInjector.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}if(notFoundValue===THROW_IF_NOT_FOUND){// Intentionally left behind: With dev tools open the debugger will stop here. There is no
// reason why correctly written application should cause this exception.
// TODO(misko): uncomment the next line once `ngDevMode` works with closure.
// if (ngDevMode) debugger;
var error=new Error("NullInjectorError: No provider for "+stringify(token)+"!");error.name='NullInjectorError';throw error;}return notFoundValue;};return NullInjector;}();function catchInjectorError(e,token,injectorErrorName,source){var tokenPath=e[NG_TEMP_TOKEN_PATH];if(token[SOURCE]){tokenPath.unshift(token[SOURCE]);}e.message=formatError('\n'+e.message,tokenPath,injectorErrorName,source);e[NG_TOKEN_PATH]=tokenPath;e[NG_TEMP_TOKEN_PATH]=null;throw e;}function formatError(text,obj,injectorErrorName,source){if(source===void 0){source=null;}text=text&&text.charAt(0)==='\n'&&text.charAt(1)==NO_NEW_LINE?text.substr(2):text;var context=stringify(obj);if(Array.isArray(obj)){context=obj.map(stringify).join(' -> ');}else if(_typeof(obj)==='object'){var parts=[];for(var key in obj){if(obj.hasOwnProperty(key)){var value=obj[key];parts.push(key+':'+(typeof value==='string'?JSON.stringify(value):stringify(value)));}}context="{"+parts.join(', ')+"}";}return""+injectorErrorName+(source?'('+source+')':'')+"["+context+"]: "+text.replace(NEW_LINE,'\n  ');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.
     *
     * This should be kept up to date with the public exports of @angular/core.
     */var angularCoreDiEnv={'ɵɵdefineInjectable':ɵɵdefineInjectable,'ɵɵdefineInjector':ɵɵdefineInjector,'ɵɵinject':ɵɵinject,'ɵɵgetFactoryOf':getFactoryOf,'ɵɵinvalidFactoryDep':ɵɵinvalidFactoryDep};function getFactoryOf(type){var typeAny=type;if(isForwardRef(type)){return function(){var factory=getFactoryOf(resolveForwardRef(typeAny));return factory?factory():null;};}var def=getInjectableDef(typeAny)||getInjectorDef(typeAny);if(!def||def.factory===undefined){return null;}return def.factory;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.
     *
     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this
     * NgModule Instance.
     *
     * @publicApi
     */var NgModuleRef=/** @class */function(){function NgModuleRef(){}return NgModuleRef;}();/**
     * @publicApi
     */var NgModuleFactory=/** @class */function(){function NgModuleFactory(){}return NgModuleFactory;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function assertNumber(actual,msg){if(!(typeof actual==='number')){throwError(msg,_typeof(actual),'number','===');}}function assertNumberInRange(actual,minInclusive,maxInclusive){assertNumber(actual,'Expected a number');assertLessThanOrEqual(actual,maxInclusive,'Expected number to be less than or equal to');assertGreaterThanOrEqual(actual,minInclusive,'Expected number to be greater than or equal to');}function assertString(actual,msg){if(!(typeof actual==='string')){throwError(msg,actual===null?'null':_typeof(actual),'string','===');}}function assertEqual(actual,expected,msg){if(!(actual==expected)){throwError(msg,actual,expected,'==');}}function assertNotEqual(actual,expected,msg){if(!(actual!=expected)){throwError(msg,actual,expected,'!=');}}function assertSame(actual,expected,msg){if(!(actual===expected)){throwError(msg,actual,expected,'===');}}function assertNotSame(actual,expected,msg){if(!(actual!==expected)){throwError(msg,actual,expected,'!==');}}function assertLessThan(actual,expected,msg){if(!(actual<expected)){throwError(msg,actual,expected,'<');}}function assertLessThanOrEqual(actual,expected,msg){if(!(actual<=expected)){throwError(msg,actual,expected,'<=');}}function assertGreaterThan(actual,expected,msg){if(!(actual>expected)){throwError(msg,actual,expected,'>');}}function assertGreaterThanOrEqual(actual,expected,msg){if(!(actual>=expected)){throwError(msg,actual,expected,'>=');}}function assertNotDefined(actual,msg){if(actual!=null){throwError(msg,actual,null,'==');}}function assertDefined(actual,msg){if(actual==null){throwError(msg,actual,null,'!=');}}function throwError(msg,actual,expected,comparison){throw new Error("ASSERTION ERROR: "+msg+(comparison==null?'':" [Expected=> "+expected+" "+comparison+" "+actual+" <=Actual]"));}function assertDomNode(node){// If we're in a worker, `Node` will not be defined.
assertEqual(typeof Node!=='undefined'&&node instanceof Node||_typeof(node)==='object'&&node!=null&&node.constructor.name==='WebWorkerRenderNode',true,"The provided value must be an instance of a DOM Node but got "+stringify(node));}function assertDataInRange(arr,index){var maxLen=arr?arr.length:0;assertLessThan(index,maxLen,"Index expected to be less than "+maxLen+" but got "+index);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Equivalent to ES6 spread, add each item to an array.
     *
     * @param items The items to add
     * @param arr The array to which you want to add the items
     */function addAllToArray(items,arr){for(var i=0;i<items.length;i++){arr.push(items[i]);}}/**
     * Flattens an array.
     */function flatten(list,dst){if(dst===undefined)dst=list;for(var i=0;i<list.length;i++){var item=list[i];if(Array.isArray(item)){// we need to inline it.
if(dst===list){// Our assumption that the list was already flat was wrong and
// we need to clone flat since we need to write to it.
dst=list.slice(0,i);}flatten(item,dst);}else if(dst!==list){dst.push(item);}}return dst;}function deepForEach(input,fn){input.forEach(function(value){return Array.isArray(value)?deepForEach(value,fn):fn(value);});}function addToArray(arr,index,value){// perf: array.push is faster than array.splice!
if(index>=arr.length){arr.push(value);}else{arr.splice(index,0,value);}}function removeFromArray(arr,index){// perf: array.pop is faster than array.splice!
if(index>=arr.length-1){return arr.pop();}else{return arr.splice(index,1)[0];}}function newArray(size,value){var list=[];for(var i=0;i<size;i++){list.push(value);}return list;}/**
     * Remove item from array (Same as `Array.splice()` but faster.)
     *
     * `Array.splice()` is not as fast because it has to allocate an array for the elements which were
     * removed. This causes memory pressure and slows down code when most of the time we don't
     * care about the deleted items array.
     *
     * https://jsperf.com/fast-array-splice (About 20x faster)
     *
     * @param array Array to splice
     * @param index Index of element in array to remove.
     * @param count Number of items to remove.
     */function arraySplice(array,index,count){var length=array.length-count;while(index<length){array[index]=array[index+count];index++;}while(count--){array.pop();// shrink the array
}}/**
     * Same as `Array.splice(index, 0, value)` but faster.
     *
     * `Array.splice()` is not fast because it has to allocate an array for the elements which were
     * removed. This causes memory pressure and slows down code when most of the time we don't
     * care about the deleted items array.
     *
     * @param array Array to splice.
     * @param index Index in array where the `value` should be added.
     * @param value Value to add to array.
     */function arrayInsert(array,index,value){ngDevMode&&assertLessThanOrEqual(index,array.length,'Can\'t insert past array end.');var end=array.length;while(end>index){var previousEnd=end-1;array[end]=array[previousEnd];end=previousEnd;}array[index]=value;}/**
     * Same as `Array.splice2(index, 0, value1, value2)` but faster.
     *
     * `Array.splice()` is not fast because it has to allocate an array for the elements which were
     * removed. This causes memory pressure and slows down code when most of the time we don't
     * care about the deleted items array.
     *
     * @param array Array to splice.
     * @param index Index in array where the `value` should be added.
     * @param value1 Value to add to array.
     * @param value2 Value to add to array.
     */function arrayInsert2(array,index,value1,value2){ngDevMode&&assertLessThanOrEqual(index,array.length,'Can\'t insert past array end.');var end=array.length;if(end==index){// inserting at the end.
array.push(value1,value2);}else if(end===1){// corner case when we have less items in array than we have items to insert.
array.push(value2,array[0]);array[0]=value1;}else{end--;array.push(array[end-1],array[end]);while(end>index){var previousEnd=end-2;array[end]=array[previousEnd];end--;}array[index]=value1;array[index+1]=value2;}}/**
     * Insert a `value` into an `array` so that the array remains sorted.
     *
     * NOTE:
     * - Duplicates are not allowed, and are ignored.
     * - This uses binary search algorithm for fast inserts.
     *
     * @param array A sorted array to insert into.
     * @param value The value to insert.
     * @returns index of the inserted value.
     */function arrayInsertSorted(array,value){var index=arrayIndexOfSorted(array,value);if(index<0){// if we did not find it insert it.
index=~index;arrayInsert(array,index,value);}return index;}/**
     * Remove `value` from a sorted `array`.
     *
     * NOTE:
     * - This uses binary search algorithm for fast removals.
     *
     * @param array A sorted array to remove from.
     * @param value The value to remove.
     * @returns index of the removed value.
     *   - positive index if value found and removed.
     *   - negative index if value not found. (`~index` to get the value where it should have been
     *     inserted)
     */function arrayRemoveSorted(array,value){var index=arrayIndexOfSorted(array,value);if(index>=0){arraySplice(array,index,1);}return index;}/**
     * Get an index of an `value` in a sorted `array`.
     *
     * NOTE:
     * - This uses binary search algorithm for fast removals.
     *
     * @param array A sorted array to binary search.
     * @param value The value to look for.
     * @returns index of the value.
     *   - positive index if value found.
     *   - negative index if value not found. (`~index` to get the value where it should have been
     *     located)
     */function arrayIndexOfSorted(array,value){return _arrayIndexOfSorted(array,value,0);}/**
     * Set a `value` for a `key`.
     *
     * @param keyValueArray to modify.
     * @param key The key to locate or create.
     * @param value The value to set for a `key`.
     * @returns index (always even) of where the value vas set.
     */function keyValueArraySet(keyValueArray,key,value){var index=keyValueArrayIndexOf(keyValueArray,key);if(index>=0){// if we found it set it.
keyValueArray[index|1]=value;}else{index=~index;arrayInsert2(keyValueArray,index,key,value);}return index;}/**
     * Retrieve a `value` for a `key` (on `undefined` if not found.)
     *
     * @param keyValueArray to search.
     * @param key The key to locate.
     * @return The `value` stored at the `key` location or `undefined if not found.
     */function keyValueArrayGet(keyValueArray,key){var index=keyValueArrayIndexOf(keyValueArray,key);if(index>=0){// if we found it retrieve it.
return keyValueArray[index|1];}return undefined;}/**
     * Retrieve a `key` index value in the array or `-1` if not found.
     *
     * @param keyValueArray to search.
     * @param key The key to locate.
     * @returns index of where the key is (or should have been.)
     *   - positive (even) index if key found.
     *   - negative index if key not found. (`~index` (even) to get the index where it should have
     *     been inserted.)
     */function keyValueArrayIndexOf(keyValueArray,key){return _arrayIndexOfSorted(keyValueArray,key,1);}/**
     * Delete a `key` (and `value`) from the `KeyValueArray`.
     *
     * @param keyValueArray to modify.
     * @param key The key to locate or delete (if exist).
     * @returns index of where the key was (or should have been.)
     *   - positive (even) index if key found and deleted.
     *   - negative index if key not found. (`~index` (even) to get the index where it should have
     *     been.)
     */function keyValueArrayDelete(keyValueArray,key){var index=keyValueArrayIndexOf(keyValueArray,key);if(index>=0){// if we found it remove it.
arraySplice(keyValueArray,index,2);}return index;}/**
     * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.
     *
     * NOTE:
     * - This uses binary search algorithm for fast removals.
     *
     * @param array A sorted array to binary search.
     * @param value The value to look for.
     * @param shift grouping shift.
     *   - `0` means look at every location
     *   - `1` means only look at every other (even) location (the odd locations are to be ignored as
     *         they are values.)
     * @returns index of the value.
     *   - positive index if value found.
     *   - negative index if value not found. (`~index` to get the value where it should have been
     * inserted)
     */function _arrayIndexOfSorted(array,value,shift){ngDevMode&&assertEqual(Array.isArray(array),true,'Expecting an array');var start=0;var end=array.length>>shift;while(end!==start){var middle=start+(end-start>>1);// find the middle.
var current=array[middle<<shift];if(value===current){return middle<<shift;}else if(current>value){end=middle;}else{start=middle+1;// We already searched middle so make it non-inclusive by adding 1
}}return~(end<<shift);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(ChangeDetectionStrategy){/**
         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated
         * until reactivated by setting the strategy to `Default` (`CheckAlways`).
         * Change detection can still be explicitly invoked.
         * This strategy applies to all child directives and cannot be overridden.
         */ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"]=0]="OnPush";/**
         * Use the default `CheckAlways` strategy, in which change detection is automatic until
         * explicitly deactivated.
         */ChangeDetectionStrategy[ChangeDetectionStrategy["Default"]=1]="Default";})(exports.ChangeDetectionStrategy||(exports.ChangeDetectionStrategy={}));(function(ChangeDetectorStatus){/**
         * A state in which, after calling `detectChanges()`, the change detector
         * state becomes `Checked`, and must be explicitly invoked or reactivated.
         */ChangeDetectorStatus[ChangeDetectorStatus["CheckOnce"]=0]="CheckOnce";/**
         * A state in which change detection is skipped until the change detector mode
         * becomes `CheckOnce`.
         */ChangeDetectorStatus[ChangeDetectorStatus["Checked"]=1]="Checked";/**
         * A state in which change detection continues automatically until explicitly
         * deactivated.
         */ChangeDetectorStatus[ChangeDetectorStatus["CheckAlways"]=2]="CheckAlways";/**
         * A state in which a change detector sub tree is not a part of the main tree and
         * should be skipped.
         */ChangeDetectorStatus[ChangeDetectorStatus["Detached"]=3]="Detached";/**
         * Indicates that the change detector encountered an error checking a binding
         * or calling a directive lifecycle method and is now in an inconsistent state. Change
         * detectors in this state do not detect changes.
         */ChangeDetectorStatus[ChangeDetectorStatus["Errored"]=4]="Errored";/**
         * Indicates that the change detector has been destroyed.
         */ChangeDetectorStatus[ChangeDetectorStatus["Destroyed"]=5]="Destroyed";})(exports.ɵChangeDetectorStatus||(exports.ɵChangeDetectorStatus={}));/**
     * Reports whether a given strategy is currently the default for change detection.
     * @param changeDetectionStrategy The strategy to check.
     * @returns True if the given strategy is the current default, false otherwise.
     * @see `ChangeDetectorStatus`
     * @see `ChangeDetectorRef`
     */function isDefaultChangeDetectionStrategy(changeDetectionStrategy){return changeDetectionStrategy==null||changeDetectionStrategy===exports.ChangeDetectionStrategy.Default;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(ViewEncapsulation){/**
         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host
         * Element and pre-processing the style rules provided via {@link Component#styles styles} or
         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all
         * selectors.
         *
         * This is the default option.
         */ViewEncapsulation[ViewEncapsulation["Emulated"]=0]="Emulated";/**
         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.
         * Use the native encapsulation mechanism of the renderer.
         *
         * For the DOM this means using the deprecated [Shadow DOM
         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and
         * creating a ShadowRoot for Component's Host Element.
         */ViewEncapsulation[ViewEncapsulation["Native"]=1]="Native";/**
         * Don't provide any template or style encapsulation.
         */ViewEncapsulation[ViewEncapsulation["None"]=2]="None";/**
         * Use Shadow DOM to encapsulate styles.
         *
         * For the DOM this means using modern [Shadow
         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and
         * creating a ShadowRoot for Component's Host Element.
         */ViewEncapsulation[ViewEncapsulation["ShadowDom"]=3]="ShadowDom";})(exports.ViewEncapsulation||(exports.ViewEncapsulation={}));/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This file contains reuseable "empty" symbols that can be used as default return values
     * in different parts of the rendering code. Because the same symbols are returned, this
     * allows for identity checks against these values to be consistently used by the framework
     * code.
     */var EMPTY_OBJ={};var EMPTY_ARRAY=[];// freezing the values prevents any code from accidentally inserting new values in
if((typeof ngDevMode==='undefined'||ngDevMode)&&initNgDevMode()){// These property accesses can be ignored because ngDevMode will be set to false
// when optimizing code and the whole if statement will be dropped.
// tslint:disable-next-line:no-toplevel-property-access
Object.freeze(EMPTY_OBJ);// tslint:disable-next-line:no-toplevel-property-access
Object.freeze(EMPTY_ARRAY);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _renderCompCount=0;/**
     * Create a component definition object.
     *
     *
     * # Example
     * ```
     * class MyDirective {
     *   // Generated by Angular Template Compiler
     *   // [Symbol] syntax will not be supported by TypeScript until v2.7
     *   static ɵcmp = defineComponent({
     *     ...
     *   });
     * }
     * ```
     * @codeGenApi
     */function ɵɵdefineComponent(componentDefinition){return noSideEffects(function(){// Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.
// See the `initNgDevMode` docstring for more information.
(typeof ngDevMode==='undefined'||ngDevMode)&&initNgDevMode();var type=componentDefinition.type;var typePrototype=type.prototype;var declaredInputs={};var def={type:type,providersResolver:null,decls:componentDefinition.decls,vars:componentDefinition.vars,factory:null,template:componentDefinition.template||null,consts:componentDefinition.consts||null,ngContentSelectors:componentDefinition.ngContentSelectors,hostBindings:componentDefinition.hostBindings||null,hostVars:componentDefinition.hostVars||0,hostAttrs:componentDefinition.hostAttrs||null,contentQueries:componentDefinition.contentQueries||null,declaredInputs:declaredInputs,inputs:null,outputs:null,exportAs:componentDefinition.exportAs||null,onChanges:null,onInit:typePrototype.ngOnInit||null,doCheck:typePrototype.ngDoCheck||null,afterContentInit:typePrototype.ngAfterContentInit||null,afterContentChecked:typePrototype.ngAfterContentChecked||null,afterViewInit:typePrototype.ngAfterViewInit||null,afterViewChecked:typePrototype.ngAfterViewChecked||null,onDestroy:typePrototype.ngOnDestroy||null,onPush:componentDefinition.changeDetection===exports.ChangeDetectionStrategy.OnPush,directiveDefs:null,pipeDefs:null,selectors:componentDefinition.selectors||EMPTY_ARRAY,viewQuery:componentDefinition.viewQuery||null,features:componentDefinition.features||null,data:componentDefinition.data||{},// TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in
// the next line. Also `None` should be 0 not 2.
encapsulation:componentDefinition.encapsulation||exports.ViewEncapsulation.Emulated,id:'c',styles:componentDefinition.styles||EMPTY_ARRAY,_:null,setInput:null,schemas:componentDefinition.schemas||null,tView:null};var directiveTypes=componentDefinition.directives;var feature=componentDefinition.features;var pipeTypes=componentDefinition.pipes;def.id+=_renderCompCount++;def.inputs=invertObject(componentDefinition.inputs,declaredInputs),def.outputs=invertObject(componentDefinition.outputs),feature&&feature.forEach(function(fn){return fn(def);});def.directiveDefs=directiveTypes?function(){return(typeof directiveTypes==='function'?directiveTypes():directiveTypes).map(extractDirectiveDef);}:null;def.pipeDefs=pipeTypes?function(){return(typeof pipeTypes==='function'?pipeTypes():pipeTypes).map(extractPipeDef);}:null;return def;});}/**
     * @codeGenApi
     */function ɵɵsetComponentScope(type,directives,pipes){var def=type.ɵcmp;def.directiveDefs=function(){return directives.map(extractDirectiveDef);};def.pipeDefs=function(){return pipes.map(extractPipeDef);};}function extractDirectiveDef(type){var def=getComponentDef(type)||getDirectiveDef(type);if(ngDevMode&&!def){throw new Error("'"+type.name+"' is neither 'ComponentType' or 'DirectiveType'.");}return def;}function extractPipeDef(type){var def=getPipeDef(type);if(ngDevMode&&!def){throw new Error("'"+type.name+"' is not a 'PipeType'.");}return def;}var autoRegisterModuleById={};/**
     * @codeGenApi
     */function ɵɵdefineNgModule(def){var res={type:def.type,bootstrap:def.bootstrap||EMPTY_ARRAY,declarations:def.declarations||EMPTY_ARRAY,imports:def.imports||EMPTY_ARRAY,exports:def.exports||EMPTY_ARRAY,transitiveCompileScopes:null,schemas:def.schemas||null,id:def.id||null};if(def.id!=null){noSideEffects(function(){autoRegisterModuleById[def.id]=def.type;});}return res;}/**
     * Adds the module metadata that is necessary to compute the module's transitive scope to an
     * existing module definition.
     *
     * Scope metadata of modules is not used in production builds, so calls to this function can be
     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations
     * to become eligible for tree-shaking as well.
     *
     * @codeGenApi
     */function ɵɵsetNgModuleScope(type,scope){return noSideEffects(function(){var ngModuleDef=getNgModuleDef(type,true);ngModuleDef.declarations=scope.declarations||EMPTY_ARRAY;ngModuleDef.imports=scope.imports||EMPTY_ARRAY;ngModuleDef.exports=scope.exports||EMPTY_ARRAY;});}/**
     * Inverts an inputs or outputs lookup such that the keys, which were the
     * minified keys, are part of the values, and the values are parsed so that
     * the publicName of the property is the new key
     *
     * e.g. for
     *
     * ```
     * class Comp {
     *   @Input()
     *   propName1: string;
     *
     *   @Input('publicName2')
     *   declaredPropName2: number;
     * }
     * ```
     *
     * will be serialized as
     *
     * ```
     * {
     *   propName1: 'propName1',
     *   declaredPropName2: ['publicName2', 'declaredPropName2'],
     * }
     * ```
     *
     * which is than translated by the minifier as:
     *
     * ```
     * {
     *   minifiedPropName1: 'propName1',
     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],
     * }
     * ```
     *
     * becomes: (public name => minifiedName)
     *
     * ```
     * {
     *  'propName1': 'minifiedPropName1',
     *  'publicName2': 'minifiedPropName2',
     * }
     * ```
     *
     * Optionally the function can take `secondary` which will result in: (public name => declared name)
     *
     * ```
     * {
     *  'propName1': 'propName1',
     *  'publicName2': 'declaredPropName2',
     * }
     * ```
     *

     */function invertObject(obj,secondary){if(obj==null)return EMPTY_OBJ;var newLookup={};for(var minifiedKey in obj){if(obj.hasOwnProperty(minifiedKey)){var publicName=obj[minifiedKey];var declaredName=publicName;if(Array.isArray(publicName)){declaredName=publicName[1];publicName=publicName[0];}newLookup[publicName]=minifiedKey;if(secondary){secondary[publicName]=declaredName;}}}return newLookup;}/**
     * Create a directive definition object.
     *
     * # Example
     * ```ts
     * class MyDirective {
     *   // Generated by Angular Template Compiler
     *   // [Symbol] syntax will not be supported by TypeScript until v2.7
     *   static ɵdir = ɵɵdefineDirective({
     *     ...
     *   });
     * }
     * ```
     *
     * @codeGenApi
     */var ɵɵdefineDirective=ɵɵdefineComponent;/**
     * Create a pipe definition object.
     *
     * # Example
     * ```
     * class MyPipe implements PipeTransform {
     *   // Generated by Angular Template Compiler
     *   static ɵpipe = definePipe({
     *     ...
     *   });
     * }
     * ```
     * @param pipeDef Pipe definition generated by the compiler
     *
     * @codeGenApi
     */function ɵɵdefinePipe(pipeDef){return{type:pipeDef.type,name:pipeDef.name,factory:null,pure:pipeDef.pure!==false,onDestroy:pipeDef.type.prototype.ngOnDestroy||null};}/**
     * The following getter methods retrieve the definition form the type. Currently the retrieval
     * honors inheritance, but in the future we may change the rule to require that definitions are
     * explicit. This would require some sort of migration strategy.
     */function getComponentDef(type){return type[NG_COMP_DEF]||null;}function getDirectiveDef(type){return type[NG_DIR_DEF]||null;}function getPipeDef(type){return type[NG_PIPE_DEF]||null;}function getFactoryDef(type,throwNotFound){var hasFactoryDef=type.hasOwnProperty(NG_FACTORY_DEF);if(!hasFactoryDef&&throwNotFound===true&&ngDevMode){throw new Error("Type "+stringify(type)+" does not have '\u0275fac' property.");}return hasFactoryDef?type[NG_FACTORY_DEF]:null;}function getNgModuleDef(type,throwNotFound){var ngModuleDef=type[NG_MOD_DEF]||null;if(!ngModuleDef&&throwNotFound===true){throw new Error("Type "+stringify(type)+" does not have '\u0275mod' property.");}return ngModuleDef;}function getNgLocaleIdDef(type){return type[NG_LOC_ID_DEF]||null;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Below are constants for LView indices to help us look up LView members
// without having to remember the specific indices.
// Uglify will inline these when minifying so there shouldn't be a cost.
var HOST=0;var TVIEW=1;var FLAGS=2;var PARENT=3;var NEXT=4;var TRANSPLANTED_VIEWS_TO_REFRESH=5;var T_HOST=6;var CLEANUP=7;var CONTEXT=8;var INJECTOR$1=9;var RENDERER_FACTORY=10;var RENDERER=11;var SANITIZER=12;var CHILD_HEAD=13;var CHILD_TAIL=14;var DECLARATION_VIEW=15;var DECLARATION_COMPONENT_VIEW=16;var DECLARATION_LCONTAINER=17;var PREORDER_HOOK_FLAGS=18;var QUERIES=19;/** Size of LView's header. Necessary to adjust for it when setting slots.  */var HEADER_OFFSET=20;// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Special location which allows easy identification of type. If we have an array which was
     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is
     * `LContainer`.
     */var TYPE=1;/**
     * Below are constants for LContainer indices to help us look up LContainer members
     * without having to remember the specific indices.
     * Uglify will inline these when minifying so there shouldn't be a cost.
     */ /**
     * Flag to signify that this `LContainer` may have transplanted views which need to be change
     * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.
     *
     * This flag, once set, is never unset for the `LContainer`. This means that when unset we can skip
     * a lot of work in `refreshEmbeddedViews`. But when set we still need to verify
     * that the `MOVED_VIEWS` are transplanted and on-push.
     */var HAS_TRANSPLANTED_VIEWS=2;// PARENT, NEXT, TRANSPLANTED_VIEWS_TO_REFRESH are indices 3, 4, and 5
// As we already have these constants in LView, we don't need to re-create them.
// T_HOST is index 6
// We already have this constants in LView, we don't need to re-create it.
var NATIVE=7;var VIEW_REFS=8;var MOVED_VIEWS=9;/**
     * Size of LContainer's header. Represents the index after which all views in the
     * container will be inserted. We need to keep a record of current views so we know
     * which views are already in the DOM (and don't need to be re-added) and so we can
     * remove views from the DOM when they are no longer required.
     */var CONTAINER_HEADER_OFFSET=10;// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$1=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * True if `value` is `LView`.
     * @param value wrapped value of `RNode`, `LView`, `LContainer`
     */function isLView(value){return Array.isArray(value)&&_typeof(value[TYPE])==='object';}/**
     * True if `value` is `LContainer`.
     * @param value wrapped value of `RNode`, `LView`, `LContainer`
     */function isLContainer(value){return Array.isArray(value)&&value[TYPE]===true;}function isContentQueryHost(tNode){return(tNode.flags&8/* hasContentQuery */)!==0;}function isComponentHost(tNode){return(tNode.flags&2/* isComponentHost */)===2/* isComponentHost */;}function isDirectiveHost(tNode){return(tNode.flags&1/* isDirectiveHost */)===1/* isDirectiveHost */;}function isComponentDef(def){return def.template!==null;}function isRootView(target){return(target[FLAGS]&512/* IsRoot */)!==0;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // [Assert functions do not constraint type when they are guarded by a truthy
// expression.](https://github.com/microsoft/TypeScript/issues/37295)
function assertTNodeForLView(tNode,lView){tNode.hasOwnProperty('tView_')&&assertEqual(tNode.tView_,lView[TVIEW],'This TNode does not belong to this LView.');}function assertComponentType(actual,msg){if(msg===void 0){msg='Type passed in is not ComponentType, it does not have \'ɵcmp\' property.';}if(!getComponentDef(actual)){throwError(msg);}}function assertNgModuleType(actual,msg){if(msg===void 0){msg='Type passed in is not NgModuleType, it does not have \'ɵmod\' property.';}if(!getNgModuleDef(actual)){throwError(msg);}}function assertPreviousIsParent(isParent){assertEqual(isParent,true,'previousOrParentTNode should be a parent');}function assertHasParent(tNode){assertDefined(tNode,'previousOrParentTNode should exist!');assertDefined(tNode.parent,'previousOrParentTNode should have a parent');}function assertDataNext(lView,index,arr){if(arr==null)arr=lView;assertEqual(arr.length,index,"index "+index+" expected to be at the end of arr (length "+arr.length+")");}function assertLContainer(value){assertDefined(value,'LContainer must be defined');assertEqual(isLContainer(value),true,'Expecting LContainer');}function assertLViewOrUndefined(value){value&&assertEqual(isLView(value),true,'Expecting LView or undefined or null');}function assertLView(value){assertDefined(value,'LView must be defined');assertEqual(isLView(value),true,'Expecting LView');}function assertFirstCreatePass(tView,errMessage){assertEqual(tView.firstCreatePass,true,errMessage||'Should only be called in first create pass.');}function assertFirstUpdatePass(tView,errMessage){assertEqual(tView.firstUpdatePass,true,errMessage||'Should only be called in first update pass.');}/**
     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is
     * an interface, so we can't do a direct instanceof check.
     */function assertDirectiveDef(obj){if(obj.type===undefined||obj.selectors==undefined||obj.inputs===undefined){throwError("Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.");}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SVG_NAMESPACE='http://www.w3.org/2000/svg';var MATH_ML_NAMESPACE='http://www.w3.org/1998/MathML/';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This property will be monkey-patched on elements, components and directives
     */var MONKEY_PATCH_KEY_NAME='__ngContext__';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply
     * inject the `DOCUMENT` token and are done.
     *
     * Ivy is special because it does not rely upon the DI and must get hold of the document some other
     * way.
     *
     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.
     * Wherever ivy needs the global document, it calls `getDocument()` instead.
     *
     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to
     * tell ivy what the global `document` is.
     *
     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)
     * by calling `setDocument()` when providing the `DOCUMENT` token.
     */var DOCUMENT=undefined;/**
     * Tell ivy what the `document` is for this platform.
     *
     * It is only necessary to call this if the current platform is not a browser.
     *
     * @param document The object representing the global `document` in this environment.
     */function setDocument(document){DOCUMENT=document;}/**
     * Access the object that represents the `document` for this platform.
     *
     * Ivy calls this whenever it needs to access the `document` object.
     * For example to create the renderer or to do sanitization.
     */function getDocument(){if(DOCUMENT!==undefined){return DOCUMENT;}else if(typeof document!=='undefined'){return document;}// No "document" can be found. This should only happen if we are running ivy outside Angular and
// the current platform is not a browser. Since this is not a supported scenario at the moment
// this should not happen in Angular apps.
// Once we support running ivy outside of Angular we will need to publish `setDocument()` as a
// public API. Meanwhile we just return `undefined` and let the application fail.
return undefined;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // TODO: cleanup once the code is merged in angular/angular
var RendererStyleFlags3;(function(RendererStyleFlags3){RendererStyleFlags3[RendererStyleFlags3["Important"]=1]="Important";RendererStyleFlags3[RendererStyleFlags3["DashCase"]=2]="DashCase";})(RendererStyleFlags3||(RendererStyleFlags3={}));/** Returns whether the `renderer` is a `ProceduralRenderer3` */function isProceduralRenderer(renderer){return!!renderer.listen;}var ɵ0$2=function ɵ0$2(hostElement,rendererType){return getDocument();};var domRendererFactory3={createRenderer:ɵ0$2};// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$2=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)
     * in same location in `LView`. This is because we don't want to pre-allocate space for it
     * because the storage is sparse. This file contains utilities for dealing with such data types.
     *
     * How do we know what is stored at a given location in `LView`.
     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)
     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.
     *   - `typeof value[TYPE] === 'object'` => `LView`
     *      - This happens when we have a component at a given location
     *   - `typeof value[TYPE] === true` => `LContainer`
     *      - This happens when we have `LContainer` binding at a given location.
     *
     *
     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.
     */ /**
     * Returns `RNode`.
     * @param value wrapped value of `RNode`, `LView`, `LContainer`
     */function unwrapRNode(value){while(Array.isArray(value)){value=value[HOST];}return value;}/**
     * Returns `LView` or `null` if not found.
     * @param value wrapped value of `RNode`, `LView`, `LContainer`
     */function unwrapLView(value){while(Array.isArray(value)){// This check is same as `isLView()` but we don't call at as we don't want to call
// `Array.isArray()` twice and give JITer more work for inlining.
if(_typeof(value[TYPE])==='object')return value;value=value[HOST];}return null;}/**
     * Returns `LContainer` or `null` if not found.
     * @param value wrapped value of `RNode`, `LView`, `LContainer`
     */function unwrapLContainer(value){while(Array.isArray(value)){// This check is same as `isLContainer()` but we don't call at as we don't want to call
// `Array.isArray()` twice and give JITer more work for inlining.
if(value[TYPE]===true)return value;value=value[HOST];}return null;}/**
     * Retrieves an element value from the provided `viewData`, by unwrapping
     * from any containers, component views, or style contexts.
     */function getNativeByIndex(index,lView){return unwrapRNode(lView[index+HEADER_OFFSET]);}/**
     * Retrieve an `RNode` for a given `TNode` and `LView`.
     *
     * This function guarantees in dev mode to retrieve a non-null `RNode`.
     *
     * @param tNode
     * @param lView
     */function getNativeByTNode(tNode,lView){ngDevMode&&assertTNodeForLView(tNode,lView);ngDevMode&&assertDataInRange(lView,tNode.index);var node=unwrapRNode(lView[tNode.index]);ngDevMode&&!isProceduralRenderer(lView[RENDERER])&&assertDomNode(node);return node;}/**
     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.
     *
     * Some `TNode`s don't have associated `RNode`s. For example `Projection`
     *
     * @param tNode
     * @param lView
     */function getNativeByTNodeOrNull(tNode,lView){var index=tNode.index;if(index!==-1){ngDevMode&&assertTNodeForLView(tNode,lView);var node=unwrapRNode(lView[index]);ngDevMode&&node!==null&&!isProceduralRenderer(lView[RENDERER])&&assertDomNode(node);return node;}return null;}function getTNode(tView,index){ngDevMode&&assertGreaterThan(index,-1,'wrong index for TNode');ngDevMode&&assertLessThan(index,tView.data.length,'wrong index for TNode');return tView.data[index+HEADER_OFFSET];}/** Retrieves a value from any `LView` or `TData`. */function load(view,index){ngDevMode&&assertDataInRange(view,index+HEADER_OFFSET);return view[index+HEADER_OFFSET];}function getComponentLViewByIndex(nodeIndex,hostView){// Could be an LView or an LContainer. If LContainer, unwrap to find LView.
ngDevMode&&assertDataInRange(hostView,nodeIndex);var slotValue=hostView[nodeIndex];var lView=isLView(slotValue)?slotValue:slotValue[HOST];return lView;}/**
     * Returns the monkey-patch value data present on the target (which could be
     * a component, directive or a DOM node).
     */function readPatchedData(target){ngDevMode&&assertDefined(target,'Target expected');return target[MONKEY_PATCH_KEY_NAME]||null;}function readPatchedLView(target){var value=readPatchedData(target);if(value){return Array.isArray(value)?value:value.lView;}return null;}/** Checks whether a given view is in creation mode */function isCreationMode(view){return(view[FLAGS]&4/* CreationMode */)===4/* CreationMode */;}/**
     * Returns a boolean for whether the view is attached to the change detection tree.
     *
     * Note: This determines whether a view should be checked, not whether it's inserted
     * into a container. For that, you'll want `viewAttachedToContainer` below.
     */function viewAttachedToChangeDetector(view){return(view[FLAGS]&128/* Attached */)===128/* Attached */;}/** Returns a boolean for whether the view is attached to a container. */function viewAttachedToContainer(view){return isLContainer(view[PARENT]);}/** Returns a constant from `TConstants` instance. */function getConstant(consts,index){return consts===null||index==null?null:consts[index];}/**
     * Resets the pre-order hook flags of the view.
     * @param lView the LView on which the flags are reset
     */function resetPreOrderHookFlags(lView){lView[PREORDER_HOOK_FLAGS]=0;}/**
     * Updates the `TRANSPLANTED_VIEWS_TO_REFRESH` counter on the `LContainer` as well as the parents
     * whose
     *  1. counter goes from 0 to 1, indicating that there is a new child that has a view to refresh
     *  or
     *  2. counter goes from 1 to 0, indicating there are no more descendant views to refresh
     */function updateTransplantedViewCount(lContainer,amount){lContainer[TRANSPLANTED_VIEWS_TO_REFRESH]+=amount;var viewOrContainer=lContainer;var parent=lContainer[PARENT];while(parent!==null&&(amount===1&&viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH]===1||amount===-1&&viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH]===0)){parent[TRANSPLANTED_VIEWS_TO_REFRESH]+=amount;viewOrContainer=parent;parent=parent[PARENT];}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var instructionState={lFrame:createLFrame(null),bindingsEnabled:true,checkNoChangesMode:false};function getElementDepthCount(){return instructionState.lFrame.elementDepthCount;}function increaseElementDepthCount(){instructionState.lFrame.elementDepthCount++;}function decreaseElementDepthCount(){instructionState.lFrame.elementDepthCount--;}function getBindingsEnabled(){return instructionState.bindingsEnabled;}/**
     * Enables directive matching on elements.
     *
     *  * Example:
     * ```
     * <my-comp my-directive>
     *   Should match component / directive.
     * </my-comp>
     * <div ngNonBindable>
     *   <!-- ɵɵdisableBindings() -->
     *   <my-comp my-directive>
     *     Should not match component / directive because we are in ngNonBindable.
     *   </my-comp>
     *   <!-- ɵɵenableBindings() -->
     * </div>
     * ```
     *
     * @codeGenApi
     */function ɵɵenableBindings(){instructionState.bindingsEnabled=true;}/**
     * Disables directive matching on element.
     *
     *  * Example:
     * ```
     * <my-comp my-directive>
     *   Should match component / directive.
     * </my-comp>
     * <div ngNonBindable>
     *   <!-- ɵɵdisableBindings() -->
     *   <my-comp my-directive>
     *     Should not match component / directive because we are in ngNonBindable.
     *   </my-comp>
     *   <!-- ɵɵenableBindings() -->
     * </div>
     * ```
     *
     * @codeGenApi
     */function ɵɵdisableBindings(){instructionState.bindingsEnabled=false;}/**
     * Return the current `LView`.
     */function getLView(){return instructionState.lFrame.lView;}/**
     * Return the current `TView`.
     */function getTView(){return instructionState.lFrame.tView;}/**
     * Restores `contextViewData` to the given OpaqueViewState instance.
     *
     * Used in conjunction with the getCurrentView() instruction to save a snapshot
     * of the current view and restore it when listeners are invoked. This allows
     * walking the declaration view tree in listeners to get vars from parent views.
     *
     * @param viewToRestore The OpaqueViewState instance to restore.
     *
     * @codeGenApi
     */function ɵɵrestoreView(viewToRestore){instructionState.lFrame.contextLView=viewToRestore;}function getPreviousOrParentTNode(){return instructionState.lFrame.previousOrParentTNode;}function setPreviousOrParentTNode(tNode,isParent){instructionState.lFrame.previousOrParentTNode=tNode;instructionState.lFrame.isParent=isParent;}function getIsParent(){return instructionState.lFrame.isParent;}function setIsNotParent(){instructionState.lFrame.isParent=false;}function setIsParent(){instructionState.lFrame.isParent=true;}function getContextLView(){return instructionState.lFrame.contextLView;}function getCheckNoChangesMode(){// TODO(misko): remove this from the LView since it is ngDevMode=true mode only.
return instructionState.checkNoChangesMode;}function setCheckNoChangesMode(mode){instructionState.checkNoChangesMode=mode;}// top level variables should not be exported for performance reasons (PERF_NOTES.md)
function getBindingRoot(){var lFrame=instructionState.lFrame;var index=lFrame.bindingRootIndex;if(index===-1){index=lFrame.bindingRootIndex=lFrame.tView.bindingStartIndex;}return index;}function getBindingIndex(){return instructionState.lFrame.bindingIndex;}function setBindingIndex(value){return instructionState.lFrame.bindingIndex=value;}function nextBindingIndex(){return instructionState.lFrame.bindingIndex++;}function incrementBindingIndex(count){var lFrame=instructionState.lFrame;var index=lFrame.bindingIndex;lFrame.bindingIndex=lFrame.bindingIndex+count;return index;}/**
     * Set a new binding root index so that host template functions can execute.
     *
     * Bindings inside the host template are 0 index. But because we don't know ahead of time
     * how many host bindings we have we can't pre-compute them. For this reason they are all
     * 0 index and we just shift the root so that they match next available location in the LView.
     *
     * @param bindingRootIndex Root index for `hostBindings`
     * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive
     *        whose `hostBindings` are being processed.
     */function setBindingRootForHostBindings(bindingRootIndex,currentDirectiveIndex){var lFrame=instructionState.lFrame;lFrame.bindingIndex=lFrame.bindingRootIndex=bindingRootIndex;setCurrentDirectiveIndex(currentDirectiveIndex);}/**
     * When host binding is executing this points to the directive index.
     * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`
     * `LView[getCurrentDirectiveIndex()]` is directive instance.
     */function getCurrentDirectiveIndex(){return instructionState.lFrame.currentDirectiveIndex;}/**
     * Sets an index of a directive whose `hostBindings` are being processed.
     *
     * @param currentDirectiveIndex `TData` index where current directive instance can be found.
     */function setCurrentDirectiveIndex(currentDirectiveIndex){instructionState.lFrame.currentDirectiveIndex=currentDirectiveIndex;}/**
     * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being
     * executed.
     *
     * @param tData Current `TData` where the `DirectiveDef` will be looked up at.
     */function getCurrentDirectiveDef(tData){var currentDirectiveIndex=instructionState.lFrame.currentDirectiveIndex;return currentDirectiveIndex===-1?null:tData[currentDirectiveIndex];}function getCurrentQueryIndex(){return instructionState.lFrame.currentQueryIndex;}function setCurrentQueryIndex(value){instructionState.lFrame.currentQueryIndex=value;}/**
     * This is a light weight version of the `enterView` which is needed by the DI system.
     * @param newView
     * @param tNode
     */function enterDI(newView,tNode){ngDevMode&&assertLViewOrUndefined(newView);var newLFrame=allocLFrame();instructionState.lFrame=newLFrame;newLFrame.previousOrParentTNode=tNode;newLFrame.lView=newView;}/**
     * Swap the current lView with a new lView.
     *
     * For performance reasons we store the lView in the top level of the module.
     * This way we minimize the number of properties to read. Whenever a new view
     * is entered we have to store the lView for later, and when the view is
     * exited the state has to be restored
     *
     * @param newView New lView to become active
     * @param tNode Element to which the View is a child of
     * @returns the previously active lView;
     */function enterView(newView,tNode){ngDevMode&&assertLViewOrUndefined(newView);var newLFrame=allocLFrame();if(ngDevMode){assertEqual(newLFrame.isParent,true,'Expected clean LFrame');assertEqual(newLFrame.lView,null,'Expected clean LFrame');assertEqual(newLFrame.tView,null,'Expected clean LFrame');assertEqual(newLFrame.selectedIndex,0,'Expected clean LFrame');assertEqual(newLFrame.elementDepthCount,0,'Expected clean LFrame');assertEqual(newLFrame.currentDirectiveIndex,-1,'Expected clean LFrame');assertEqual(newLFrame.currentNamespace,null,'Expected clean LFrame');assertEqual(newLFrame.currentSanitizer,null,'Expected clean LFrame');assertEqual(newLFrame.bindingRootIndex,-1,'Expected clean LFrame');assertEqual(newLFrame.currentQueryIndex,0,'Expected clean LFrame');}var tView=newView[TVIEW];instructionState.lFrame=newLFrame;newLFrame.previousOrParentTNode=tNode;newLFrame.lView=newView;newLFrame.tView=tView;newLFrame.contextLView=newView;newLFrame.bindingIndex=tView.bindingStartIndex;}/**
     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.
     */function allocLFrame(){var currentLFrame=instructionState.lFrame;var childLFrame=currentLFrame===null?null:currentLFrame.child;var newLFrame=childLFrame===null?createLFrame(currentLFrame):childLFrame;return newLFrame;}function createLFrame(parent){var lFrame={previousOrParentTNode:null,isParent:true,lView:null,tView:null,selectedIndex:0,contextLView:null,elementDepthCount:0,currentNamespace:null,currentSanitizer:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:parent,child:null};parent!==null&&(parent.child=lFrame);// link the new LFrame for reuse.
return lFrame;}/**
     * A lightweight version of leave which is used with DI.
     *
     * This function only resets `previousOrParentTNode` and `LView` as those are the only properties
     * used with DI (`enterDI()`).
     *
     * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where
     * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.
     */function leaveViewLight(){var oldLFrame=instructionState.lFrame;instructionState.lFrame=oldLFrame.parent;oldLFrame.previousOrParentTNode=null;oldLFrame.lView=null;return oldLFrame;}/**
     * This is a lightweight version of the `leaveView` which is needed by the DI system.
     *
     * NOTE: this function is an alias so that we can change the type of the function to have `void`
     * return type.
     */var leaveDI=leaveViewLight;/**
     * Leave the current `LView`
     *
     * This pops the `LFrame` with the associated `LView` from the stack.
     *
     * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is
     * because for performance reasons we don't release `LFrame` but rather keep it for next use.
     */function leaveView(){var oldLFrame=leaveViewLight();oldLFrame.isParent=true;oldLFrame.tView=null;oldLFrame.selectedIndex=0;oldLFrame.contextLView=null;oldLFrame.elementDepthCount=0;oldLFrame.currentDirectiveIndex=-1;oldLFrame.currentNamespace=null;oldLFrame.currentSanitizer=null;oldLFrame.bindingRootIndex=-1;oldLFrame.bindingIndex=-1;oldLFrame.currentQueryIndex=0;}function nextContextImpl(level){var contextLView=instructionState.lFrame.contextLView=walkUpViews(level,instructionState.lFrame.contextLView);return contextLView[CONTEXT];}function walkUpViews(nestingLevel,currentView){while(nestingLevel>0){ngDevMode&&assertDefined(currentView[DECLARATION_VIEW],'Declaration view should be defined if nesting level is greater than 0.');currentView=currentView[DECLARATION_VIEW];nestingLevel--;}return currentView;}/**
     * Gets the currently selected element index.
     *
     * Used with {@link property} instruction (and more in the future) to identify the index in the
     * current `LView` to act on.
     */function getSelectedIndex(){return instructionState.lFrame.selectedIndex;}/**
     * Sets the most recent index passed to {@link select}
     *
     * Used with {@link property} instruction (and more in the future) to identify the index in the
     * current `LView` to act on.
     *
     * (Note that if an "exit function" was set earlier (via `setElementExitFn()`) then that will be
     * run if and when the provided `index` value is different from the current selected index value.)
     */function setSelectedIndex(index){instructionState.lFrame.selectedIndex=index;}/**
     * Gets the `tNode` that represents currently selected element.
     */function getSelectedTNode(){var lFrame=instructionState.lFrame;return getTNode(lFrame.tView,lFrame.selectedIndex);}/**
     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.
     *
     * @codeGenApi
     */function ɵɵnamespaceSVG(){instructionState.lFrame.currentNamespace=SVG_NAMESPACE;}/**
     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.
     *
     * @codeGenApi
     */function ɵɵnamespaceMathML(){instructionState.lFrame.currentNamespace=MATH_ML_NAMESPACE;}/**
     * Sets the namespace used to create elements to `null`, which forces element creation to use
     * `createElement` rather than `createElementNS`.
     *
     * @codeGenApi
     */function ɵɵnamespaceHTML(){namespaceHTMLInternal();}/**
     * Sets the namespace used to create elements to `null`, which forces element creation to use
     * `createElement` rather than `createElementNS`.
     */function namespaceHTMLInternal(){instructionState.lFrame.currentNamespace=null;}function getNamespace(){return instructionState.lFrame.currentNamespace;}function setCurrentStyleSanitizer(sanitizer){instructionState.lFrame.currentSanitizer=sanitizer;}function resetCurrentStyleSanitizer(){setCurrentStyleSanitizer(null);}function getCurrentStyleSanitizer(){// TODO(misko): This should throw when there is no LView, but it turns out we can get here from
// `NodeStyleDebug` hence we return `null`. This should be fixed
var lFrame=instructionState.lFrame;return lFrame===null?null:lFrame.currentSanitizer;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.
     *
     * Must be run *only* on the first template pass.
     *
     * Sets up the pre-order hooks on the provided `tView`,
     * see {@link HookData} for details about the data structure.
     *
     * @param directiveIndex The index of the directive in LView
     * @param directiveDef The definition containing the hooks to setup in tView
     * @param tView The current TView
     */function registerPreOrderHooks(directiveIndex,directiveDef,tView){ngDevMode&&assertFirstCreatePass(tView);var onChanges=directiveDef.onChanges,onInit=directiveDef.onInit,doCheck=directiveDef.doCheck;if(onChanges){(tView.preOrderHooks||(tView.preOrderHooks=[])).push(directiveIndex,onChanges);(tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(directiveIndex,onChanges);}if(onInit){(tView.preOrderHooks||(tView.preOrderHooks=[])).push(-directiveIndex,onInit);}if(doCheck){(tView.preOrderHooks||(tView.preOrderHooks=[])).push(directiveIndex,doCheck);(tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(directiveIndex,doCheck);}}/**
     *
     * Loops through the directives on the provided `tNode` and queues hooks to be
     * run that are not initialization hooks.
     *
     * Should be executed during `elementEnd()` and similar to
     * preserve hook execution order. Content, view, and destroy hooks for projected
     * components and directives must be called *before* their hosts.
     *
     * Sets up the content, view, and destroy hooks on the provided `tView`,
     * see {@link HookData} for details about the data structure.
     *
     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up
     * separately at `elementStart`.
     *
     * @param tView The current TView
     * @param tNode The TNode whose directives are to be searched for hooks to queue
     */function registerPostOrderHooks(tView,tNode){ngDevMode&&assertFirstCreatePass(tView);// It's necessary to loop through the directives at elementEnd() (rather than processing in
// directiveCreate) so we can preserve the current hook order. Content, view, and destroy
// hooks for projected components and directives must be called *before* their hosts.
for(var i=tNode.directiveStart,end=tNode.directiveEnd;i<end;i++){var directiveDef=tView.data[i];if(directiveDef.afterContentInit){(tView.contentHooks||(tView.contentHooks=[])).push(-i,directiveDef.afterContentInit);}if(directiveDef.afterContentChecked){(tView.contentHooks||(tView.contentHooks=[])).push(i,directiveDef.afterContentChecked);(tView.contentCheckHooks||(tView.contentCheckHooks=[])).push(i,directiveDef.afterContentChecked);}if(directiveDef.afterViewInit){(tView.viewHooks||(tView.viewHooks=[])).push(-i,directiveDef.afterViewInit);}if(directiveDef.afterViewChecked){(tView.viewHooks||(tView.viewHooks=[])).push(i,directiveDef.afterViewChecked);(tView.viewCheckHooks||(tView.viewCheckHooks=[])).push(i,directiveDef.afterViewChecked);}if(directiveDef.onDestroy!=null){(tView.destroyHooks||(tView.destroyHooks=[])).push(i,directiveDef.onDestroy);}}}/**
     * Executing hooks requires complex logic as we need to deal with 2 constraints.
     *
     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only
     * once, across many change detection cycles. This must be true even if some hooks throw, or if
     * some recursively trigger a change detection cycle.
     * To solve that, it is required to track the state of the execution of these init hooks.
     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},
     * and the index within that phase. They can be seen as a cursor in the following structure:
     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]
     * They are are stored as flags in LView[FLAGS].
     *
     * 2. Pre-order hooks can be executed in batches, because of the select instruction.
     * To be able to pause and resume their execution, we also need some state about the hook's array
     * that is being processed:
     * - the index of the next hook to be executed
     * - the number of init hooks already found in the processed part of the  array
     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].
     */ /**
     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were
     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read
     * / write of the init-hooks related flags.
     * @param lView The LView where hooks are defined
     * @param hooks Hooks to be run
     * @param nodeIndex 3 cases depending on the value:
     * - undefined: all hooks from the array should be executed (post-order case)
     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
     * flushing the remaining hooks)
     * - number: execute hooks only from the saved index until that node index exclusive (pre-order
     * case, when executing select(number))
     */function executeCheckHooks(lView,hooks,nodeIndex){callHooks(lView,hooks,3/* InitPhaseCompleted */,nodeIndex);}/**
     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,
     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.
     * @param lView The LView where hooks are defined
     * @param hooks Hooks to be run
     * @param initPhase A phase for which hooks should be run
     * @param nodeIndex 3 cases depending on the value:
     * - undefined: all hooks from the array should be executed (post-order case)
     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
     * flushing the remaining hooks)
     * - number: execute hooks only from the saved index until that node index exclusive (pre-order
     * case, when executing select(number))
     */function executeInitAndCheckHooks(lView,hooks,initPhase,nodeIndex){ngDevMode&&assertNotEqual(initPhase,3/* InitPhaseCompleted */,'Init pre-order hooks should not be called more than once');if((lView[FLAGS]&3/* InitPhaseStateMask */)===initPhase){callHooks(lView,hooks,initPhase,nodeIndex);}}function incrementInitPhaseFlags(lView,initPhase){ngDevMode&&assertNotEqual(initPhase,3/* InitPhaseCompleted */,'Init hooks phase should not be incremented after all init hooks have been run.');var flags=lView[FLAGS];if((flags&3/* InitPhaseStateMask */)===initPhase){flags&=2047/* IndexWithinInitPhaseReset */;flags+=1/* InitPhaseStateIncrementer */;lView[FLAGS]=flags;}}/**
     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not
     * the first LView pass
     *
     * @param currentView The current view
     * @param arr The array in which the hooks are found
     * @param initPhaseState the current state of the init phase
     * @param currentNodeIndex 3 cases depending on the value:
     * - undefined: all hooks from the array should be executed (post-order case)
     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when
     * flushing the remaining hooks)
     * - number: execute hooks only from the saved index until that node index exclusive (pre-order
     * case, when executing select(number))
     */function callHooks(currentView,arr,initPhase,currentNodeIndex){ngDevMode&&assertEqual(getCheckNoChangesMode(),false,'Hooks should never be run in the check no changes mode.');var startIndex=currentNodeIndex!==undefined?currentView[PREORDER_HOOK_FLAGS]&65535/* IndexOfTheNextPreOrderHookMaskMask */:0;var nodeIndexLimit=currentNodeIndex!=null?currentNodeIndex:-1;var lastNodeIndexFound=0;for(var i=startIndex;i<arr.length;i++){var hook=arr[i+1];if(typeof hook==='number'){lastNodeIndexFound=arr[i];if(currentNodeIndex!=null&&lastNodeIndexFound>=currentNodeIndex){break;}}else{var isInitHook=arr[i]<0;if(isInitHook)currentView[PREORDER_HOOK_FLAGS]+=65536/* NumberOfInitHooksCalledIncrementer */;if(lastNodeIndexFound<nodeIndexLimit||nodeIndexLimit==-1){callHook(currentView,initPhase,arr,i);currentView[PREORDER_HOOK_FLAGS]=(currentView[PREORDER_HOOK_FLAGS]&4294901760/* NumberOfInitHooksCalledMask */)+i+2;}i++;}}}/**
     * Execute one hook against the current `LView`.
     *
     * @param currentView The current view
     * @param initPhaseState the current state of the init phase
     * @param arr The array in which the hooks are found
     * @param i The current index within the hook data array
     */function callHook(currentView,initPhase,arr,i){var isInitHook=arr[i]<0;var hook=arr[i+1];var directiveIndex=isInitHook?-arr[i]:arr[i];var directive=currentView[directiveIndex];if(isInitHook){var indexWithintInitPhase=currentView[FLAGS]>>11/* IndexWithinInitPhaseShift */;// The init phase state must be always checked here as it may have been recursively
// updated
if(indexWithintInitPhase<currentView[PREORDER_HOOK_FLAGS]>>16/* NumberOfInitHooksCalledShift */&&(currentView[FLAGS]&3/* InitPhaseStateMask */)===initPhase){currentView[FLAGS]+=2048/* IndexWithinInitPhaseIncrementer */;hook.call(directive);}}else{hook.call(directive);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var TNODE=8;var PARENT_INJECTOR=8;var INJECTOR_BLOOM_PARENT_SIZE=9;var NO_PARENT_INJECTOR=-1;/**
     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in
     * `TView.data`. This allows us to store information about the current node's tokens (which
     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be
     * shared, so they live in `LView`).
     *
     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter
     * determines whether a directive is available on the associated node or not. This prevents us
     * from searching the directives array at this level unless it's probable the directive is in it.
     *
     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.
     *
     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed
     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`
     * will differ based on where it is flattened into the main array, so it's not possible to know
     * the indices ahead of time and save their types here. The interfaces are still included here
     * for documentation purposes.
     *
     * export interface LInjector extends Array<any> {
     *
     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)
     *    [0]: number;
     *
     *    // Cumulative bloom for directive IDs 32-63
     *    [1]: number;
     *
     *    // Cumulative bloom for directive IDs 64-95
     *    [2]: number;
     *
     *    // Cumulative bloom for directive IDs 96-127
     *    [3]: number;
     *
     *    // Cumulative bloom for directive IDs 128-159
     *    [4]: number;
     *
     *    // Cumulative bloom for directive IDs 160 - 191
     *    [5]: number;
     *
     *    // Cumulative bloom for directive IDs 192 - 223
     *    [6]: number;
     *
     *    // Cumulative bloom for directive IDs 224 - 255
     *    [7]: number;
     *
     *    // We need to store a reference to the injector's parent so DI can keep looking up
     *    // the injector tree until it finds the dependency it's looking for.
     *    [PARENT_INJECTOR]: number;
     * }
     *
     * export interface TInjector extends Array<any> {
     *
     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)
     *    [0]: number;
     *
     *    // Shared node bloom for directive IDs 32-63
     *    [1]: number;
     *
     *    // Shared node bloom for directive IDs 64-95
     *    [2]: number;
     *
     *    // Shared node bloom for directive IDs 96-127
     *    [3]: number;
     *
     *    // Shared node bloom for directive IDs 128-159
     *    [4]: number;
     *
     *    // Shared node bloom for directive IDs 160 - 191
     *    [5]: number;
     *
     *    // Shared node bloom for directive IDs 192 - 223
     *    [6]: number;
     *
     *    // Shared node bloom for directive IDs 224 - 255
     *    [7]: number;
     *
     *    // Necessary to find directive indices for a particular node.
     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;
     *  }
     */ /**
     * Factory for creating instances of injectors in the NodeInjector.
     *
     * This factory is complicated by the fact that it can resolve `multi` factories as well.
     *
     * NOTE: Some of the fields are optional which means that this class has two hidden classes.
     * - One without `multi` support (most common)
     * - One with `multi` values, (rare).
     *
     * Since VMs can cache up to 4 inline hidden classes this is OK.
     *
     * - Single factory: Only `resolving` and `factory` is defined.
     * - `providers` factory: `componentProviders` is a number and `index = -1`.
     * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.
     */var NodeInjectorFactory=/** @class */function(){function NodeInjectorFactory(/**
         * Factory to invoke in order to create a new instance.
         */factory,/**
         * Set to `true` if the token is declared in `viewProviders` (or if it is component).
         */isViewProvider,injectImplementation){this.factory=factory;/**
             * Marker set to true during factory invocation to see if we get into recursive loop.
             * Recursive loop causes an error to be displayed.
             */this.resolving=false;this.canSeeViewProviders=isViewProvider;this.injectImpl=injectImplementation;}return NodeInjectorFactory;}();function isFactory(obj){return obj instanceof NodeInjectorFactory;}// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$3=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function assertNodeType(tNode,type){assertDefined(tNode,'should be called with a TNode');assertEqual(tNode.type,type,"should be a "+typeName(type));}function assertNodeOfPossibleTypes(tNode){var types=[];for(var _i=1;_i<arguments.length;_i++){types[_i-1]=arguments[_i];}assertDefined(tNode,'should be called with a TNode');var found=types.some(function(type){return tNode.type===type;});assertEqual(found,true,"Should be one of "+types.map(typeName).join(', ')+" but got "+typeName(tNode.type));}function typeName(type){if(type==1/* Projection */)return'Projection';if(type==0/* Container */)return'Container';if(type==5/* IcuContainer */)return'IcuContainer';if(type==2/* View */)return'View';if(type==3/* Element */)return'Element';if(type==4/* ElementContainer */)return'ElementContainer';return'<unknown>';}/**
     * Assigns all attribute values to the provided element via the inferred renderer.
     *
     * This function accepts two forms of attribute entries:
     *
     * default: (key, value):
     *  attrs = [key1, value1, key2, value2]
     *
     * namespaced: (NAMESPACE_MARKER, uri, name, value)
     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]
     *
     * The `attrs` array can contain a mix of both the default and namespaced entries.
     * The "default" values are set without a marker, but if the function comes across
     * a marker value then it will attempt to set a namespaced value. If the marker is
     * not of a namespaced value then the function will quit and return the index value
     * where it stopped during the iteration of the attrs array.
     *
     * See [AttributeMarker] to understand what the namespace marker value is.
     *
     * Note that this instruction does not support assigning style and class values to
     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values
     * are applied to an element.
     * @param renderer The renderer to be used
     * @param native The element that the attributes will be assigned to
     * @param attrs The attribute array of values that will be assigned to the element
     * @returns the index value that was last accessed in the attributes array
     */function setUpAttributes(renderer,_native,attrs){var isProc=isProceduralRenderer(renderer);var i=0;while(i<attrs.length){var value=attrs[i];if(typeof value==='number'){// only namespaces are supported. Other value types (such as style/class
// entries) are not supported in this function.
if(value!==0/* NamespaceURI */){break;}// we just landed on the marker value ... therefore
// we should skip to the next entry
i++;var namespaceURI=attrs[i++];var attrName=attrs[i++];var attrVal=attrs[i++];ngDevMode&&ngDevMode.rendererSetAttribute++;isProc?renderer.setAttribute(_native,attrName,attrVal,namespaceURI):_native.setAttributeNS(namespaceURI,attrName,attrVal);}else{// attrName is string;
var attrName=value;var attrVal=attrs[++i];// Standard attributes
ngDevMode&&ngDevMode.rendererSetAttribute++;if(isAnimationProp(attrName)){if(isProc){renderer.setProperty(_native,attrName,attrVal);}}else{isProc?renderer.setAttribute(_native,attrName,attrVal):_native.setAttribute(attrName,attrVal);}i++;}}// another piece of code may iterate over the same attributes array. Therefore
// it may be helpful to return the exact spot where the attributes array exited
// whether by running into an unsupported marker or if all the static values were
// iterated over.
return i;}/**
     * Test whether the given value is a marker that indicates that the following
     * attribute values in a `TAttributes` array are only the names of attributes,
     * and not name-value pairs.
     * @param marker The attribute marker to test.
     * @returns true if the marker is a "name-only" marker (e.g. `Bindings`, `Template` or `I18n`).
     */function isNameOnlyAttributeMarker(marker){return marker===3/* Bindings */||marker===4/* Template */||marker===6/* I18n */;}function isAnimationProp(name){// Perf note: accessing charCodeAt to check for the first character of a string is faster as
// compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that
// charCodeAt doesn't allocate memory to return a substring.
return name.charCodeAt(0)===64/* AT_SIGN */;}/**
     * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.
     *
     * This merge function keeps the order of attrs same.
     *
     * @param dst Location of where the merged `TAttributes` should end up.
     * @param src `TAttributes` which should be appended to `dst`
     */function mergeHostAttrs(dst,src){if(src===null||src.length===0){// do nothing
}else if(dst===null||dst.length===0){// We have source, but dst is empty, just make a copy.
dst=src.slice();}else{var srcMarker=-1/* ImplicitAttributes */;for(var i=0;i<src.length;i++){var item=src[i];if(typeof item==='number'){srcMarker=item;}else{if(srcMarker===0/* NamespaceURI */){// Case where we need to consume `key1`, `key2`, `value` items.
}else if(srcMarker===-1/* ImplicitAttributes */||srcMarker===2/* Styles */){// Case where we have to consume `key1` and `value` only.
mergeHostAttribute(dst,srcMarker,item,null,src[++i]);}else{// Case where we have to consume `key1` only.
mergeHostAttribute(dst,srcMarker,item,null,null);}}}}return dst;}/**
     * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.
     *
     * @param dst `TAttributes` to append to.
     * @param marker Region where the `key`/`value` should be added.
     * @param key1 Key to add to `TAttributes`
     * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)
     * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.
     */function mergeHostAttribute(dst,marker,key1,key2,value){var i=0;// Assume that new markers will be inserted at the end.
var markerInsertPosition=dst.length;// scan until correct type.
if(marker===-1/* ImplicitAttributes */){markerInsertPosition=-1;}else{while(i<dst.length){var dstValue=dst[i++];if(typeof dstValue==='number'){if(dstValue===marker){markerInsertPosition=-1;break;}else if(dstValue>marker){// We need to save this as we want the markers to be inserted in specific order.
markerInsertPosition=i-1;break;}}}}// search until you find place of insertion
while(i<dst.length){var item=dst[i];if(typeof item==='number'){// since `i` started as the index after the marker, we did not find it if we are at the next
// marker
break;}else if(item===key1){// We already have same token
if(key2===null){if(value!==null){dst[i+1]=value;}return;}else if(key2===dst[i+1]){dst[i+2]=value;return;}}// Increment counter.
i++;if(key2!==null)i++;if(value!==null)i++;}// insert at location.
if(markerInsertPosition!==-1){dst.splice(markerInsertPosition,0,marker);i=markerInsertPosition+1;}dst.splice(i++,0,key1);if(key2!==null){dst.splice(i++,0,key2);}if(value!==null){dst.splice(i++,0,value);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /// Parent Injector Utils ///////////////////////////////////////////////////////////////
function hasParentInjector(parentLocation){return parentLocation!==NO_PARENT_INJECTOR;}function getParentInjectorIndex(parentLocation){return parentLocation&32767/* InjectorIndexMask */;}function getParentInjectorViewOffset(parentLocation){return parentLocation>>16/* ViewOffsetShift */;}/**
     * Unwraps a parent injector location number to find the view offset from the current injector,
     * then walks up the declaration view tree until the view is found that contains the parent
     * injector.
     *
     * @param location The location of the parent injector, which contains the view offset
     * @param startView The LView instance from which to start walking up the view tree
     * @returns The LView instance that contains the parent injector
     */function getParentInjectorView(location,startView){var viewOffset=getParentInjectorViewOffset(location);var parentView=startView;// For most cases, the parent injector can be found on the host node (e.g. for component
// or container), but we must keep the loop here to support the rarer case of deeply nested
// <ng-template> tags or inline views, where the parent injector might live many views
// above the child injector.
while(viewOffset>0){parentView=parentView[DECLARATION_VIEW];viewOffset--;}return parentView;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Used for stringify render output in Ivy.
     * Important! This function is very performance-sensitive and we should
     * be extra careful not to introduce megamorphic reads in it.
     */function renderStringify(value){if(typeof value==='string')return value;if(value==null)return'';return''+value;}/**
     * Used to stringify a value so that it can be displayed in an error message.
     * Important! This function contains a megamorphic read and should only be
     * used for error messages.
     */function stringifyForError(value){if(typeof value==='function')return value.name||value.toString();if(_typeof(value)==='object'&&value!=null&&typeof value.type==='function'){return value.type.name||value.type.toString();}return renderStringify(value);}var ɵ0$3=function ɵ0$3(){return(typeof requestAnimationFrame!=='undefined'&&requestAnimationFrame||// browser only
setTimeout// everything else
).bind(_global);};var defaultScheduler=ɵ0$3();/**
     *
     * @codeGenApi
     */function ɵɵresolveWindow(element){return{name:'window',target:element.ownerDocument.defaultView};}/**
     *
     * @codeGenApi
     */function ɵɵresolveDocument(element){return{name:'document',target:element.ownerDocument};}/**
     *
     * @codeGenApi
     */function ɵɵresolveBody(element){return{name:'body',target:element.ownerDocument.body};}/**
     * The special delimiter we use to separate property names, prefixes, and suffixes
     * in property binding metadata. See storeBindingMetadata().
     *
     * We intentionally use the Unicode "REPLACEMENT CHARACTER" (U+FFFD) as a delimiter
     * because it is a very uncommon character that is unlikely to be part of a user's
     * property names or interpolation strings. If it is in fact used in a property
     * binding, DebugElement.properties will not return the correct value for that
     * binding. However, there should be no runtime effect for real applications.
     *
     * This character is typically rendered as a question mark inside of a diamond.
     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)
     *
     */var INTERPOLATION_DELIMITER="\uFFFD";/**
     * Unwrap a value which might be behind a closure (for forward declaration reasons).
     */function maybeUnwrapFn(value){if(value instanceof Function){return value();}else{return value;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Defines if the call to `inject` should include `viewProviders` in its resolution.
     *
     * This is set to true when we try to instantiate a component. This value is reset in
     * `getNodeInjectable` to a value which matches the declaration location of the token about to be
     * instantiated. This is done so that if we are injecting a token which was declared outside of
     * `viewProviders` we don't accidentally pull `viewProviders` in.
     *
     * Example:
     *
     * ```
     * @Injectable()
     * class MyService {
     *   constructor(public value: String) {}
     * }
     *
     * @Component({
     *   providers: [
     *     MyService,
     *     {provide: String, value: 'providers' }
     *   ]
     *   viewProviders: [
     *     {provide: String, value: 'viewProviders'}
     *   ]
     * })
     * class MyComponent {
     *   constructor(myService: MyService, value: String) {
     *     // We expect that Component can see into `viewProviders`.
     *     expect(value).toEqual('viewProviders');
     *     // `MyService` was not declared in `viewProviders` hence it can't see it.
     *     expect(myService.value).toEqual('providers');
     *   }
     * }
     *
     * ```
     */var includeViewProviders=true;function setIncludeViewProviders(v){var oldValue=includeViewProviders;includeViewProviders=v;return oldValue;}/**
     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer
     * directives that will share slots, and thus, the fewer false positives when checking for
     * the existence of a directive.
     */var BLOOM_SIZE=256;var BLOOM_MASK=BLOOM_SIZE-1;/** Counter used to generate unique IDs for directives. */var nextNgElementId=0;/**
     * Registers this directive as present in its node's injector by flipping the directive's
     * corresponding bit in the injector's bloom filter.
     *
     * @param injectorIndex The index of the node injector where this token should be registered
     * @param tView The TView for the injector's bloom filters
     * @param type The directive token to register
     */function bloomAdd(injectorIndex,tView,type){ngDevMode&&assertEqual(tView.firstCreatePass,true,'expected firstCreatePass to be true');var id=typeof type!=='string'?type[NG_ELEMENT_ID]:type.charCodeAt(0)||0;// Set a unique ID on the directive type, so if something tries to inject the directive,
// we can easily retrieve the ID and hash it into the bloom bit that should be checked.
if(id==null){id=type[NG_ELEMENT_ID]=nextNgElementId++;}// We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),
// so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.
var bloomBit=id&BLOOM_MASK;// Create a mask that targets the specific bit associated with the directive.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomBit;// Use the raw bloomBit number to determine which bloom filter bucket we should check
// e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc
var b7=bloomBit&0x80;var b6=bloomBit&0x40;var b5=bloomBit&0x20;var tData=tView.data;if(b7){b6?b5?tData[injectorIndex+7]|=mask:tData[injectorIndex+6]|=mask:b5?tData[injectorIndex+5]|=mask:tData[injectorIndex+4]|=mask;}else{b6?b5?tData[injectorIndex+3]|=mask:tData[injectorIndex+2]|=mask:b5?tData[injectorIndex+1]|=mask:tData[injectorIndex]|=mask;}}/**
     * Creates (or gets an existing) injector for a given element or container.
     *
     * @param tNode for which an injector should be retrieved / created.
     * @param hostView View where the node is stored
     * @returns Node injector
     */function getOrCreateNodeInjectorForNode(tNode,hostView){var existingInjectorIndex=getInjectorIndex(tNode,hostView);if(existingInjectorIndex!==-1){return existingInjectorIndex;}var tView=hostView[TVIEW];if(tView.firstCreatePass){tNode.injectorIndex=hostView.length;insertBloom(tView.data,tNode);// foundation for node bloom
insertBloom(hostView,null);// foundation for cumulative bloom
insertBloom(tView.blueprint,null);}var parentLoc=getParentInjectorLocation(tNode,hostView);var injectorIndex=tNode.injectorIndex;// If a parent injector can't be found, its location is set to -1.
// In that case, we don't need to set up a cumulative bloom
if(hasParentInjector(parentLoc)){var parentIndex=getParentInjectorIndex(parentLoc);var parentLView=getParentInjectorView(parentLoc,hostView);var parentData=parentLView[TVIEW].data;// Creates a cumulative bloom filter that merges the parent's bloom filter
// and its own cumulative bloom (which contains tokens for all ancestors)
for(var i=0;i<8;i++){hostView[injectorIndex+i]=parentLView[parentIndex+i]|parentData[parentIndex+i];}}hostView[injectorIndex+PARENT_INJECTOR]=parentLoc;return injectorIndex;}function insertBloom(arr,footer){arr.push(0,0,0,0,0,0,0,0,footer);}function getInjectorIndex(tNode,hostView){if(tNode.injectorIndex===-1||// If the injector index is the same as its parent's injector index, then the index has been
// copied down from the parent node. No injector has been created yet on this node.
tNode.parent&&tNode.parent.injectorIndex===tNode.injectorIndex||// After the first template pass, the injector index might exist but the parent values
// might not have been calculated yet for this instance
hostView[tNode.injectorIndex+PARENT_INJECTOR]==null){return-1;}else{return tNode.injectorIndex;}}/**
     * Finds the index of the parent injector, with a view offset if applicable. Used to set the
     * parent injector initially.
     *
     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`
     */function getParentInjectorLocation(tNode,view){if(tNode.parent&&tNode.parent.injectorIndex!==-1){return tNode.parent.injectorIndex;// ViewOffset is 0
}// For most cases, the parent injector index can be found on the host node (e.g. for component
// or container), so this loop will be skipped, but we must keep the loop here to support
// the rarer case of deeply nested <ng-template> tags or inline views.
var hostTNode=view[T_HOST];var viewOffset=1;while(hostTNode&&hostTNode.injectorIndex===-1){view=view[DECLARATION_VIEW];hostTNode=view?view[T_HOST]:null;viewOffset++;}return hostTNode?hostTNode.injectorIndex|viewOffset<<16/* ViewOffsetShift */:-1;}/**
     * Makes a type or an injection token public to the DI system by adding it to an
     * injector's bloom filter.
     *
     * @param di The node injector in which a directive will be added
     * @param token The type or the injection token to be made public
     */function diPublicInInjector(injectorIndex,tView,token){bloomAdd(injectorIndex,tView,token);}/**
     * Inject static attribute value into directive constructor.
     *
     * This method is used with `factory` functions which are generated as part of
     * `defineDirective` or `defineComponent`. The method retrieves the static value
     * of an attribute. (Dynamic attributes are not supported since they are not resolved
     *  at the time of injection and can change over time.)
     *
     * # Example
     * Given:
     * ```
     * @Component(...)
     * class MyComponent {
     *   constructor(@Attribute('title') title: string) { ... }
     * }
     * ```
     * When instantiated with
     * ```
     * <my-component title="Hello"></my-component>
     * ```
     *
     * Then factory method generated is:
     * ```
     * MyComponent.ɵcmp = defineComponent({
     *   factory: () => new MyComponent(injectAttribute('title'))
     *   ...
     * })
     * ```
     *
     * @publicApi
     */function injectAttributeImpl(tNode,attrNameToInject){ngDevMode&&assertNodeOfPossibleTypes(tNode,0/* Container */,3/* Element */,4/* ElementContainer */);ngDevMode&&assertDefined(tNode,'expecting tNode');if(attrNameToInject==='class'){return tNode.classes;}if(attrNameToInject==='style'){return tNode.styles;}var attrs=tNode.attrs;if(attrs){var attrsLength=attrs.length;var i=0;while(i<attrsLength){var value=attrs[i];// If we hit a `Bindings` or `Template` marker then we are done.
if(isNameOnlyAttributeMarker(value))break;// Skip namespaced attributes
if(value===0/* NamespaceURI */){// we skip the next two values
// as namespaced attributes looks like
// [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',
// 'existValue', ...]
i=i+2;}else if(typeof value==='number'){// Skip to the first value of the marked attribute.
i++;while(i<attrsLength&&typeof attrs[i]==='string'){i++;}}else if(value===attrNameToInject){return attrs[i+1];}else{i=i+2;}}}return null;}/**
     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.
     *
     * Look for the injector providing the token by walking up the node injector tree and then
     * the module injector tree.
     *
     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom
     * filter. Negative values are reserved for special objects.
     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)
     *
     * @param tNode The Node where the search for the injector should start
     * @param lView The `LView` that contains the `tNode`
     * @param token The token to look for
     * @param flags Injection flags
     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`
     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided
     */function getOrCreateInjectable(tNode,lView,token,flags,notFoundValue){if(flags===void 0){flags=exports.InjectFlags.Default;}if(tNode!==null){var bloomHash=bloomHashBitOrFactory(token);// If the ID stored here is a function, this is a special object like ElementRef or TemplateRef
// so just call the factory function to create it.
if(typeof bloomHash==='function'){enterDI(lView,tNode);try{var value=bloomHash();if(value==null&&!(flags&exports.InjectFlags.Optional)){throw new Error("No provider for "+stringifyForError(token)+"!");}else{return value;}}finally{leaveDI();}}else if(typeof bloomHash=='number'){if(bloomHash===-1){// `-1` is a special value used to identify `Injector` types.
return new NodeInjector(tNode,lView);}// If the token has a bloom hash, then it is a token which could be in NodeInjector.
// A reference to the previous injector TView that was found while climbing the element
// injector tree. This is used to know if viewProviders can be accessed on the current
// injector.
var previousTView=null;var injectorIndex=getInjectorIndex(tNode,lView);var parentLocation=NO_PARENT_INJECTOR;var hostTElementNode=flags&exports.InjectFlags.Host?lView[DECLARATION_COMPONENT_VIEW][T_HOST]:null;// If we should skip this injector, or if there is no injector on this node, start by
// searching
// the parent injector.
if(injectorIndex===-1||flags&exports.InjectFlags.SkipSelf){parentLocation=injectorIndex===-1?getParentInjectorLocation(tNode,lView):lView[injectorIndex+PARENT_INJECTOR];if(!shouldSearchParent(flags,false)){injectorIndex=-1;}else{previousTView=lView[TVIEW];injectorIndex=getParentInjectorIndex(parentLocation);lView=getParentInjectorView(parentLocation,lView);}}// Traverse up the injector tree until we find a potential match or until we know there
// *isn't* a match.
while(injectorIndex!==-1){parentLocation=lView[injectorIndex+PARENT_INJECTOR];// Check the current injector. If it matches, see if it contains token.
var tView=lView[TVIEW];if(bloomHasToken(bloomHash,injectorIndex,tView.data)){// At this point, we have an injector which *may* contain the token, so we step through
// the providers and directives associated with the injector's corresponding node to get
// the instance.
var instance=searchTokensOnInjector(injectorIndex,lView,token,previousTView,flags,hostTElementNode);if(instance!==NOT_FOUND){return instance;}}if(shouldSearchParent(flags,lView[TVIEW].data[injectorIndex+TNODE]===hostTElementNode)&&bloomHasToken(bloomHash,injectorIndex,lView)){// The def wasn't found anywhere on this node, so it was a false positive.
// Traverse up the tree and continue searching.
previousTView=tView;injectorIndex=getParentInjectorIndex(parentLocation);lView=getParentInjectorView(parentLocation,lView);}else{// If we should not search parent OR If the ancestor bloom filter value does not have the
// bit corresponding to the directive we can give up on traversing up to find the specific
// injector.
injectorIndex=-1;}}}}if(flags&exports.InjectFlags.Optional&&notFoundValue===undefined){// This must be set or the NullInjector will throw for optional deps
notFoundValue=null;}if((flags&(exports.InjectFlags.Self|exports.InjectFlags.Host))===0){var moduleInjector=lView[INJECTOR$1];// switch to `injectInjectorOnly` implementation for module injector, since module injector
// should not have access to Component/Directive DI scope (that may happen through
// `directiveInject` implementation)
var previousInjectImplementation=setInjectImplementation(undefined);try{if(moduleInjector){return moduleInjector.get(token,notFoundValue,flags&exports.InjectFlags.Optional);}else{return injectRootLimpMode(token,notFoundValue,flags&exports.InjectFlags.Optional);}}finally{setInjectImplementation(previousInjectImplementation);}}if(flags&exports.InjectFlags.Optional){return notFoundValue;}else{throw new Error("NodeInjector: NOT_FOUND ["+stringifyForError(token)+"]");}}var NOT_FOUND={};function searchTokensOnInjector(injectorIndex,lView,token,previousTView,flags,hostTElementNode){var currentTView=lView[TVIEW];var tNode=currentTView.data[injectorIndex+TNODE];// First, we need to determine if view providers can be accessed by the starting element.
// There are two possibities
var canAccessViewProviders=previousTView==null?// 1) This is the first invocation `previousTView == null` which means that we are at the
// `TNode` of where injector is starting to look. In such a case the only time we are allowed
// to look into the ViewProviders is if:
// - we are on a component
// - AND the injector set `includeViewProviders` to true (implying that the token can see
// ViewProviders because it is the Component or a Service which itself was declared in
// ViewProviders)
isComponentHost(tNode)&&includeViewProviders:// 2) `previousTView != null` which means that we are now walking across the parent nodes.
// In such a case we are only allowed to look into the ViewProviders if:
// - We just crossed from child View to Parent View `previousTView != currentTView`
// - AND the parent TNode is an Element.
// This means that we just came from the Component's View and therefore are allowed to see
// into the ViewProviders.
previousTView!=currentTView&&tNode.type===3/* Element */;// This special case happens when there is a @host on the inject and when we are searching
// on the host element node.
var isHostSpecialCase=flags&exports.InjectFlags.Host&&hostTElementNode===tNode;var injectableIdx=locateDirectiveOrProvider(tNode,currentTView,token,canAccessViewProviders,isHostSpecialCase);if(injectableIdx!==null){return getNodeInjectable(lView,currentTView,injectableIdx,tNode);}else{return NOT_FOUND;}}/**
     * Searches for the given token among the node's directives and providers.
     *
     * @param tNode TNode on which directives are present.
     * @param tView The tView we are currently processing
     * @param token Provider token or type of a directive to look for.
     * @param canAccessViewProviders Whether view providers should be considered.
     * @param isHostSpecialCase Whether the host special case applies.
     * @returns Index of a found directive or provider, or null when none found.
     */function locateDirectiveOrProvider(tNode,tView,token,canAccessViewProviders,isHostSpecialCase){var nodeProviderIndexes=tNode.providerIndexes;var tInjectables=tView.data;var injectablesStart=nodeProviderIndexes&65535/* ProvidersStartIndexMask */;var directivesStart=tNode.directiveStart;var directiveEnd=tNode.directiveEnd;var cptViewProvidersCount=nodeProviderIndexes>>16/* CptViewProvidersCountShift */;var startingIndex=canAccessViewProviders?injectablesStart:injectablesStart+cptViewProvidersCount;// When the host special case applies, only the viewProviders and the component are visible
var endIndex=isHostSpecialCase?injectablesStart+cptViewProvidersCount:directiveEnd;for(var i=startingIndex;i<endIndex;i++){var providerTokenOrDef=tInjectables[i];if(i<directivesStart&&token===providerTokenOrDef||i>=directivesStart&&providerTokenOrDef.type===token){return i;}}if(isHostSpecialCase){var dirDef=tInjectables[directivesStart];if(dirDef&&isComponentDef(dirDef)&&dirDef.type===token){return directivesStart;}}return null;}/**
     * Retrieve or instantiate the injectable from the `LView` at particular `index`.
     *
     * This function checks to see if the value has already been instantiated and if so returns the
     * cached `injectable`. Otherwise if it detects that the value is still a factory it
     * instantiates the `injectable` and caches the value.
     */function getNodeInjectable(lView,tView,index,tNode){var value=lView[index];var tData=tView.data;if(isFactory(value)){var factory=value;if(factory.resolving){throw new Error("Circular dep for "+stringifyForError(tData[index]));}var previousIncludeViewProviders=setIncludeViewProviders(factory.canSeeViewProviders);factory.resolving=true;var previousInjectImplementation=void 0;if(factory.injectImpl){previousInjectImplementation=setInjectImplementation(factory.injectImpl);}enterDI(lView,tNode);try{value=lView[index]=factory.factory(undefined,tData,lView,tNode);// This code path is hit for both directives and providers.
// For perf reasons, we want to avoid searching for hooks on providers.
// It does no harm to try (the hooks just won't exist), but the extra
// checks are unnecessary and this is a hot path. So we check to see
// if the index of the dependency is in the directive range for this
// tNode. If it's not, we know it's a provider and skip hook registration.
if(tView.firstCreatePass&&index>=tNode.directiveStart){ngDevMode&&assertDirectiveDef(tData[index]);registerPreOrderHooks(index,tData[index],tView);}}finally{if(factory.injectImpl)setInjectImplementation(previousInjectImplementation);setIncludeViewProviders(previousIncludeViewProviders);factory.resolving=false;leaveDI();}}return value;}/**
     * Returns the bit in an injector's bloom filter that should be used to determine whether or not
     * the directive might be provided by the injector.
     *
     * When a directive is public, it is added to the bloom filter and given a unique ID that can be
     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`
     * is returned as the node injector can not possibly provide that token.
     *
     * @param token the injection token
     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.
     *   When the returned value is negative then it represents special values such as `Injector`.
     */function bloomHashBitOrFactory(token){ngDevMode&&assertDefined(token,'token must be defined');if(typeof token==='string'){return token.charCodeAt(0)||0;}var tokenId=token[NG_ELEMENT_ID];// Negative token IDs are used for special objects such as `Injector`
return typeof tokenId==='number'&&tokenId>0?tokenId&BLOOM_MASK:tokenId;}function bloomHasToken(bloomHash,injectorIndex,injectorView){// Create a mask that targets the specific bit associated with the directive we're looking for.
// JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding
// to bit positions 0 - 31 in a 32 bit integer.
var mask=1<<bloomHash;var b7=bloomHash&0x80;var b6=bloomHash&0x40;var b5=bloomHash&0x20;// Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:
// bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.
// Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.
var value;if(b7){value=b6?b5?injectorView[injectorIndex+7]:injectorView[injectorIndex+6]:b5?injectorView[injectorIndex+5]:injectorView[injectorIndex+4];}else{value=b6?b5?injectorView[injectorIndex+3]:injectorView[injectorIndex+2]:b5?injectorView[injectorIndex+1]:injectorView[injectorIndex];}// If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,
// this injector is a potential match.
return!!(value&mask);}/** Returns true if flags prevent parent injector from being searched for tokens */function shouldSearchParent(flags,isFirstHostTNode){return!(flags&exports.InjectFlags.Self)&&!(flags&exports.InjectFlags.Host&&isFirstHostTNode);}var NodeInjector=/** @class */function(){function NodeInjector(_tNode,_lView){this._tNode=_tNode;this._lView=_lView;}NodeInjector.prototype.get=function(token,notFoundValue){return getOrCreateInjectable(this._tNode,this._lView,token,undefined,notFoundValue);};return NodeInjector;}();/**
     * @codeGenApi
     */function ɵɵgetFactoryOf(type){var typeAny=type;if(isForwardRef(type)){return function(){var factory=ɵɵgetFactoryOf(resolveForwardRef(typeAny));return factory?factory():null;};}var factory=getFactoryDef(typeAny);if(factory===null){var injectorDef=getInjectorDef(typeAny);factory=injectorDef&&injectorDef.factory;}return factory||null;}/**
     * @codeGenApi
     */function ɵɵgetInheritedFactory(type){return noSideEffects(function(){var proto=Object.getPrototypeOf(type.prototype).constructor;var factory=proto[NG_FACTORY_DEF]||ɵɵgetFactoryOf(proto);if(factory!==null){return factory;}else{// There is no factory defined. Either this was improper usage of inheritance
// (no Angular decorator on the superclass) or there is no constructor at all
// in the inheritance chain. Since the two cases cannot be distinguished, the
// latter has to be assumed.
return function(t){return new t();};}});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ERROR_TYPE='ngType';var ERROR_DEBUG_CONTEXT='ngDebugContext';var ERROR_ORIGINAL_ERROR='ngOriginalError';var ERROR_LOGGER='ngErrorLogger';function wrappedError(message,originalError){var msg=message+" caused by: "+(originalError instanceof Error?originalError.message:originalError);var error=Error(msg);error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function getType(error){return error[ERROR_TYPE];}function getDebugContext(error){return error[ERROR_DEBUG_CONTEXT];}function getOriginalError(error){return error[ERROR_ORIGINAL_ERROR];}function getErrorLogger(error){return error[ERROR_LOGGER]||defaultErrorLogger;}function defaultErrorLogger(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}console.error.apply(console,__spread(values));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provides a hook for centralized exception handling.
     *
     * The default implementation of `ErrorHandler` prints error messages to the `console`. To
     * intercept error handling, write a custom exception handler that replaces this default as
     * appropriate for your app.
     *
     * @usageNotes
     * ### Example
     *
     * ```
     * class MyErrorHandler implements ErrorHandler {
     *   handleError(error) {
     *     // do something with the exception
     *   }
     * }
     *
     * @NgModule({
     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
     * })
     * class MyModule {}
     * ```
     *
     * @publicApi
     */var ErrorHandler=/** @class */function(){function ErrorHandler(){/**
             * @internal
             */this._console=console;}ErrorHandler.prototype.handleError=function(error){var originalError=this._findOriginalError(error);var context=this._findContext(error);// Note: Browser consoles show the place from where console.error was called.
// We can use this to give users additional information about the error.
var errorLogger=getErrorLogger(error);errorLogger(this._console,"ERROR",error);if(originalError){errorLogger(this._console,"ORIGINAL ERROR",originalError);}if(context){errorLogger(this._console,'ERROR CONTEXT',context);}};/** @internal */ErrorHandler.prototype._findContext=function(error){if(error){return getDebugContext(error)?getDebugContext(error):this._findContext(getOriginalError(error));}return null;};/** @internal */ErrorHandler.prototype._findOriginalError=function(error){var e=getOriginalError(error);while(e&&getOriginalError(e)){e=getOriginalError(e);}return e;};return ErrorHandler;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Defines a schema that allows an NgModule to contain the following:
     * - Non-Angular elements named with dash case (`-`).
     * - Element properties named with dash case (`-`).
     * Dash case is the naming convention for custom elements.
     *
     * @publicApi
     */var CUSTOM_ELEMENTS_SCHEMA={name:'custom-elements'};/**
     * Defines a schema that allows any property on any element.
     *
     * @publicApi
     */var NO_ERRORS_SCHEMA={name:'no-errors-schema'};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SafeValueImpl=/** @class */function(){function SafeValueImpl(changingThisBreaksApplicationSecurity){this.changingThisBreaksApplicationSecurity=changingThisBreaksApplicationSecurity;}SafeValueImpl.prototype.toString=function(){return"SafeValue must use [property]=binding: "+this.changingThisBreaksApplicationSecurity+" (see http://g.co/ng/security#xss)";};return SafeValueImpl;}();var SafeHtmlImpl=/** @class */function(_super){__extends(SafeHtmlImpl,_super);function SafeHtmlImpl(){return _super!==null&&_super.apply(this,arguments)||this;}SafeHtmlImpl.prototype.getTypeName=function(){return"HTML"/* Html */;};return SafeHtmlImpl;}(SafeValueImpl);var SafeStyleImpl=/** @class */function(_super){__extends(SafeStyleImpl,_super);function SafeStyleImpl(){return _super!==null&&_super.apply(this,arguments)||this;}SafeStyleImpl.prototype.getTypeName=function(){return"Style"/* Style */;};return SafeStyleImpl;}(SafeValueImpl);var SafeScriptImpl=/** @class */function(_super){__extends(SafeScriptImpl,_super);function SafeScriptImpl(){return _super!==null&&_super.apply(this,arguments)||this;}SafeScriptImpl.prototype.getTypeName=function(){return"Script"/* Script */;};return SafeScriptImpl;}(SafeValueImpl);var SafeUrlImpl=/** @class */function(_super){__extends(SafeUrlImpl,_super);function SafeUrlImpl(){return _super!==null&&_super.apply(this,arguments)||this;}SafeUrlImpl.prototype.getTypeName=function(){return"URL"/* Url */;};return SafeUrlImpl;}(SafeValueImpl);var SafeResourceUrlImpl=/** @class */function(_super){__extends(SafeResourceUrlImpl,_super);function SafeResourceUrlImpl(){return _super!==null&&_super.apply(this,arguments)||this;}SafeResourceUrlImpl.prototype.getTypeName=function(){return"ResourceURL"/* ResourceUrl */;};return SafeResourceUrlImpl;}(SafeValueImpl);function unwrapSafeValue(value){return value instanceof SafeValueImpl?value.changingThisBreaksApplicationSecurity:value;}function allowSanitizationBypassAndThrow(value,type){var actualType=getSanitizationBypassType(value);if(actualType!=null&&actualType!==type){// Allow ResourceURLs in URL contexts, they are strictly more trusted.
if(actualType==="ResourceURL"/* ResourceUrl */&&type==="URL"/* Url */)return true;throw new Error("Required a safe "+type+", got a "+actualType+" (see http://g.co/ng/security#xss)");}return actualType===type;}function getSanitizationBypassType(value){return value instanceof SafeValueImpl&&value.getTypeName()||null;}/**
     * Mark `html` string as trusted.
     *
     * This function wraps the trusted string in `String` and brands it in a way which makes it
     * recognizable to {@link htmlSanitizer} to be trusted implicitly.
     *
     * @param trustedHtml `html` string which needs to be implicitly trusted.
     * @returns a `html` which has been branded to be implicitly trusted.
     */function bypassSanitizationTrustHtml(trustedHtml){return new SafeHtmlImpl(trustedHtml);}/**
     * Mark `style` string as trusted.
     *
     * This function wraps the trusted string in `String` and brands it in a way which makes it
     * recognizable to {@link styleSanitizer} to be trusted implicitly.
     *
     * @param trustedStyle `style` string which needs to be implicitly trusted.
     * @returns a `style` hich has been branded to be implicitly trusted.
     */function bypassSanitizationTrustStyle(trustedStyle){return new SafeStyleImpl(trustedStyle);}/**
     * Mark `script` string as trusted.
     *
     * This function wraps the trusted string in `String` and brands it in a way which makes it
     * recognizable to {@link scriptSanitizer} to be trusted implicitly.
     *
     * @param trustedScript `script` string which needs to be implicitly trusted.
     * @returns a `script` which has been branded to be implicitly trusted.
     */function bypassSanitizationTrustScript(trustedScript){return new SafeScriptImpl(trustedScript);}/**
     * Mark `url` string as trusted.
     *
     * This function wraps the trusted string in `String` and brands it in a way which makes it
     * recognizable to {@link urlSanitizer} to be trusted implicitly.
     *
     * @param trustedUrl `url` string which needs to be implicitly trusted.
     * @returns a `url`  which has been branded to be implicitly trusted.
     */function bypassSanitizationTrustUrl(trustedUrl){return new SafeUrlImpl(trustedUrl);}/**
     * Mark `url` string as trusted.
     *
     * This function wraps the trusted string in `String` and brands it in a way which makes it
     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.
     *
     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.
     * @returns a `url` which has been branded to be implicitly trusted.
     */function bypassSanitizationTrustResourceUrl(trustedResourceUrl){return new SafeResourceUrlImpl(trustedResourceUrl);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.
     *
     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),
     * please see [BAZEL.md](./docs/BAZEL.md).
     */var _devMode=true;var _runModeLocked=false;/**
     * Returns whether Angular is in development mode. After called once,
     * the value is locked and won't change any more.
     *
     * By default, this is true, unless a user calls `enableProdMode` before calling this.
     *
     * @publicApi
     */function isDevMode(){_runModeLocked=true;return _devMode;}/**
     * Disable Angular's development mode, which turns off assertions and other
     * checks within the framework.
     *
     * One important assertion this disables verifies that a change detection pass
     * does not result in additional changes to any bindings (also known as
     * unidirectional data flow).
     *
     * @publicApi
     */function enableProdMode(){if(_runModeLocked){throw new Error('Cannot enable prod mode after platform setup.');}_devMode=false;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML
     * that needs sanitizing.
     * Depending upon browser support we must use one of three strategies for doing this.
     * Support: Safari 10.x -> XHR strategy
     * Support: Firefox -> DomParser strategy
     * Default: InertDocument strategy
     */var InertBodyHelper=/** @class */function(){function InertBodyHelper(defaultDoc){this.defaultDoc=defaultDoc;this.inertDocument=this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');var inertBodyElement=this.inertDocument.body;if(inertBodyElement==null){// usually there should be only one body element in the document, but IE doesn't have any, so
// we need to create one.
var inertHtml=this.inertDocument.createElement('html');this.inertDocument.appendChild(inertHtml);inertBodyElement=this.inertDocument.createElement('body');inertHtml.appendChild(inertBodyElement);}inertBodyElement.innerHTML='<svg><g onload="this.parentNode.remove()"></g></svg>';if(inertBodyElement.querySelector&&!inertBodyElement.querySelector('svg')){// We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element
// so use the XHR strategy.
this.getInertBodyElement=this.getInertBodyElement_XHR;return;}inertBodyElement.innerHTML='<svg><p><style><img src="</style><img src=x onerror=alert(1)//">';if(inertBodyElement.querySelector&&inertBodyElement.querySelector('svg img')){// We just hit the Firefox bug - which prevents the inner img JS from being sanitized
// so use the DOMParser strategy, if it is available.
// If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we
// fall through to the default strategy below.
if(isDOMParserAvailable()){this.getInertBodyElement=this.getInertBodyElement_DOMParser;return;}}// None of the bugs were hit so it is safe for us to use the default InertDocument strategy
this.getInertBodyElement=this.getInertBodyElement_InertDocument;}/**
         * Use XHR to create and fill an inert body element (on Safari 10.1)
         * See
         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449
         */InertBodyHelper.prototype.getInertBodyElement_XHR=function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{html=encodeURI(html);}catch(_a){return null;}var xhr=new XMLHttpRequest();xhr.responseType='document';xhr.open('GET','data:text/html;charset=utf-8,'+html,false);xhr.send(undefined);var body=xhr.response.body;body.removeChild(body.firstChild);return body;};/**
         * Use DOMParser to create and fill an inert body element (on Firefox)
         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7
         *
         */InertBodyHelper.prototype.getInertBodyElement_DOMParser=function(html){// We add these extra elements to ensure that the rest of the content is parsed as expected
// e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the
// `<head>` tag.
html='<body><remove></remove>'+html+'</body>';try{var body=new window.DOMParser().parseFromString(html,'text/html').body;body.removeChild(body.firstChild);return body;}catch(_a){return null;}};/**
         * Use an HTML5 `template` element, if supported, or an inert body element created via
         * `createHtmlDocument` to create and fill an inert DOM element.
         * This is the default sane strategy to use if the browser does not require one of the specialised
         * strategies above.
         */InertBodyHelper.prototype.getInertBodyElement_InertDocument=function(html){// Prefer using <template> element if supported.
var templateEl=this.inertDocument.createElement('template');if('content'in templateEl){templateEl.innerHTML=html;return templateEl;}// Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`
// and we returned the inert `body` node. This was changed, because IE seems to treat setting
// `innerHTML` on an inserted element differently, compared to one that hasn't been inserted
// yet. In particular, IE appears to split some of the text into multiple text nodes rather
// than keeping them in a single one which ends up messing with Ivy's i18n parsing further
// down the line. This has been worked around by creating a new inert `body` and using it as
// the root node in which we insert the HTML.
var inertBody=this.inertDocument.createElement('body');inertBody.innerHTML=html;// Support: IE 9-11 only
// strip custom-namespaced attributes on IE<=11
if(this.defaultDoc.documentMode){this.stripCustomNsAttrs(inertBody);}return inertBody;};/**
         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.
         * 'ns1:xlink:foo').
         *
         * This is undesirable since we don't want to allow any of these custom attributes. This method
         * strips them all.
         */InertBodyHelper.prototype.stripCustomNsAttrs=function(el){var elAttrs=el.attributes;// loop backwards so that we can support removals.
for(var i=elAttrs.length-1;0<i;i--){var attrib=elAttrs.item(i);var attrName=attrib.name;if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){el.removeAttribute(attrName);}}var childNode=el.firstChild;while(childNode){if(childNode.nodeType===Node.ELEMENT_NODE)this.stripCustomNsAttrs(childNode);childNode=childNode.nextSibling;}};return InertBodyHelper;}();/**
     * We need to determine whether the DOMParser exists in the global context.
     * The try-catch is because, on some browsers, trying to access this property
     * on window can actually throw an error.
     *
     * @suppress {uselessCode}
     */function isDOMParserAvailable(){try{return!!window.DOMParser;}catch(_a){return false;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A pattern that recognizes a commonly useful subset of URLs that are safe.
     *
     * This regular expression matches a subset of URLs that will not cause script
     * execution if used in URL context within a HTML document. Specifically, this
     * regular expression matches if (comment from here on and regex copied from
     * Soy's EscapingConventions):
     * (1) Either an allowed protocol (http, https, mailto or ftp).
     * (2) or no protocol.  A protocol must be followed by a colon. The below
     *     allows that by allowing colons only after one of the characters [/?#].
     *     A colon after a hash (#) must be in the fragment.
     *     Otherwise, a colon after a (?) must be in a query.
     *     Otherwise, a colon after a single solidus (/) must be in a path.
     *     Otherwise, a colon after a double solidus (//) must be in the authority
     *     (before port).
     *
     * The pattern disallows &, used in HTML entity declarations before
     * one of the characters in [/?#]. This disallows HTML entities used in the
     * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
     * It also disallows HTML entities in the first path part of a relative path,
     * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
     * that. More importantly, it disallows masking of a colon,
     * e.g. "javascript&#58;...".
     *
     * This regular expression was taken from the Closure sanitization library.
     */var SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;/* A pattern that matches safe srcset values */var SAFE_SRCSET_PATTERN=/^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;/** A pattern that matches safe data URLs. Only matches image, video and audio types. */var DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function _sanitizeUrl(url){url=String(url);if(url.match(SAFE_URL_PATTERN)||url.match(DATA_URL_PATTERN))return url;if(isDevMode()){console.warn("WARNING: sanitizing unsafe URL value "+url+" (see http://g.co/ng/security#xss)");}return'unsafe:'+url;}function sanitizeSrcset(srcset){srcset=String(srcset);return srcset.split(',').map(function(srcset){return _sanitizeUrl(srcset.trim());}).join(', ');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function tagSet(tags){var e_1,_a;var res={};try{for(var _b=__values(tags.split(',')),_c=_b.next();!_c.done;_c=_b.next()){var t=_c.value;res[t]=true;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return res;}function merge(){var e_2,_a;var sets=[];for(var _i=0;_i<arguments.length;_i++){sets[_i]=arguments[_i];}var res={};try{for(var sets_1=__values(sets),sets_1_1=sets_1.next();!sets_1_1.done;sets_1_1=sets_1.next()){var s=sets_1_1.value;for(var v in s){if(s.hasOwnProperty(v))res[v]=true;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(sets_1_1&&!sets_1_1.done&&(_a=sets_1["return"]))_a.call(sets_1);}finally{if(e_2)throw e_2.error;}}return res;}// Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements
var VOID_ELEMENTS=tagSet('area,br,col,hr,img,wbr');// Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags
var OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');var OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet('rp,rt');var OPTIONAL_END_TAG_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS);// Safe Block Elements - HTML5
var BLOCK_ELEMENTS=merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet('address,article,'+'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,'+'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));// Inline Elements - HTML5
var INLINE_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet('a,abbr,acronym,audio,b,'+'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,'+'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));var VALID_ELEMENTS=merge(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS);// Attributes that have href and hence need to be sanitized
var URI_ATTRS=tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');// Attributes that have special href set hence need to be sanitized
var SRCSET_ATTRS=tagSet('srcset');var HTML_ATTRS=tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,'+'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,'+'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,'+'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,'+'valign,value,vspace,width');// Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)
var ARIA_ATTRS=tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,'+'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,'+'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,'+'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,'+'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,'+'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,'+'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.
var VALID_ATTRS=merge(URI_ATTRS,SRCSET_ATTRS,HTML_ATTRS,ARIA_ATTRS);// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.
//
// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)
// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we
// don't want to preserve the content, if the elements themselves are going to be removed.
var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS=tagSet('script,style,template');/**
     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
     * attributes.
     */var SanitizingHtmlSerializer=/** @class */function(){function SanitizingHtmlSerializer(){// Explicitly track if something was stripped, to avoid accidentally warning of sanitization just
// because characters were re-encoded.
this.sanitizedSomething=false;this.buf=[];}SanitizingHtmlSerializer.prototype.sanitizeChildren=function(el){// This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
// However this code never accesses properties off of `document` before deleting its contents
// again, so it shouldn't be vulnerable to DOM clobbering.
var current=el.firstChild;var traverseContent=true;while(current){if(current.nodeType===Node.ELEMENT_NODE){traverseContent=this.startElement(current);}else if(current.nodeType===Node.TEXT_NODE){this.chars(current.nodeValue);}else{// Strip non-element, non-text nodes.
this.sanitizedSomething=true;}if(traverseContent&&current.firstChild){current=current.firstChild;continue;}while(current){// Leaving the element. Walk up and to the right, closing tags as we go.
if(current.nodeType===Node.ELEMENT_NODE){this.endElement(current);}var next=this.checkClobberedElement(current,current.nextSibling);if(next){current=next;break;}current=this.checkClobberedElement(current,current.parentNode);}}return this.buf.join('');};/**
         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should
         * be traversed. Element content must always be traversed (even if the element itself is not
         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.
         *
         * @param element The element to sanitize.
         * @return True if the element's contents should be traversed.
         */SanitizingHtmlSerializer.prototype.startElement=function(element){var tagName=element.nodeName.toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){this.sanitizedSomething=true;return!SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);}this.buf.push('<');this.buf.push(tagName);var elAttrs=element.attributes;for(var i=0;i<elAttrs.length;i++){var elAttr=elAttrs.item(i);var attrName=elAttr.name;var lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){this.sanitizedSomething=true;continue;}var value=elAttr.value;// TODO(martinprobst): Special case image URIs for data:image/...
if(URI_ATTRS[lower])value=_sanitizeUrl(value);if(SRCSET_ATTRS[lower])value=sanitizeSrcset(value);this.buf.push(' ',attrName,'="',encodeEntities(value),'"');}this.buf.push('>');return true;};SanitizingHtmlSerializer.prototype.endElement=function(current){var tagName=current.nodeName.toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)){this.buf.push('</');this.buf.push(tagName);this.buf.push('>');}};SanitizingHtmlSerializer.prototype.chars=function(chars){this.buf.push(encodeEntities(chars));};SanitizingHtmlSerializer.prototype.checkClobberedElement=function(node,nextNode){if(nextNode&&(node.compareDocumentPosition(nextNode)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY){throw new Error("Failed to sanitize html because the element is clobbered: "+node.outerHTML);}return nextNode;};return SanitizingHtmlSerializer;}();// Regular Expressions for parsing tags and attributes
var SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;// ! to ~ is the ASCII range.
var NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;/**
     * Escapes all potentially dangerous characters, so that the
     * resulting string can be safely inserted into attribute or
     * element text.
     * @param value
     */function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(SURROGATE_PAIR_REGEXP,function(match){var hi=match.charCodeAt(0);var low=match.charCodeAt(1);return'&#'+((hi-0xD800)*0x400+(low-0xDC00)+0x10000)+';';}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return'&#'+match.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}var inertBodyHelper;/**
     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
     * the DOM in a browser environment.
     */function _sanitizeHtml(defaultDoc,unsafeHtmlInput){var inertBodyElement=null;try{inertBodyHelper=inertBodyHelper||new InertBodyHelper(defaultDoc);// Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).
var unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):'';inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);// mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
// trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.
var mXSSAttempts=5;var parsedHtml=unsafeHtml;do{if(mXSSAttempts===0){throw new Error('Failed to sanitize html because the input is unstable');}mXSSAttempts--;unsafeHtml=parsedHtml;parsedHtml=inertBodyElement.innerHTML;inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);}while(unsafeHtml!==parsedHtml);var sanitizer=new SanitizingHtmlSerializer();var safeHtml=sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement)||inertBodyElement);if(isDevMode()&&sanitizer.sanitizedSomething){console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');}return safeHtml;}finally{// In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
if(inertBodyElement){var parent_1=getTemplateContent(inertBodyElement)||inertBodyElement;while(parent_1.firstChild){parent_1.removeChild(parent_1.firstChild);}}}}function getTemplateContent(el){return'content'in el/** Microsoft/TypeScript#21517 */&&isTemplateElement(el)?el.content:null;}function isTemplateElement(el){return el.nodeType===Node.ELEMENT_NODE&&el.nodeName==='TEMPLATE';}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(SecurityContext){SecurityContext[SecurityContext["NONE"]=0]="NONE";SecurityContext[SecurityContext["HTML"]=1]="HTML";SecurityContext[SecurityContext["STYLE"]=2]="STYLE";SecurityContext[SecurityContext["SCRIPT"]=3]="SCRIPT";SecurityContext[SecurityContext["URL"]=4]="URL";SecurityContext[SecurityContext["RESOURCE_URL"]=5]="RESOURCE_URL";})(exports.SecurityContext||(exports.SecurityContext={}));/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Regular expression for safe style values.
     *
     * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.
     *
     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or
     * font-family) and hence could allow multiple values to get injected, but that should pose no risk
     * of XSS.
     *
     * The function expression checks only for XSS safety, not for CSS validity.
     *
     * This regular expression was taken from the Closure sanitization library, and augmented for
     * transformation values.
     */var VALUES='[-,."\'%_!# a-zA-Z0-9]+';var TRANSFORMATION_FNS='(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';var COLOR_FNS='(?:rgb|hsl)a?';var GRADIENTS='(?:repeating-)?(?:linear|radial)-gradient';var CSS3_FNS='(?:attr|calc|var)';var FN_ARGS='\\([-0-9.%, #a-zA-Z]+\\)';var SAFE_STYLE_VALUE=new RegExp("^("+VALUES+"|"+("(?:"+TRANSFORMATION_FNS+"|"+COLOR_FNS+"|"+GRADIENTS+"|"+CSS3_FNS+")")+(FN_ARGS+")$"),'g');/**
     * Matches a `url(...)` value with an arbitrary argument as long as it does
     * not contain parentheses.
     *
     * The URL value still needs to be sanitized separately.
     *
     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted
     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.
     * by observing whether scroll bars are displayed, or character ranges used by a font face
     * definition.
     *
     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that
     * binding a URL value without further cooperation from the page will cause an information leak, and
     * if so, it is just a leak, not a full blown XSS vulnerability.
     *
     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this
     * code is permissive and allows URLs that sanitize otherwise.
     */var URL_RE=/^url\(([^)]+)\)$/;/**
     * Checks that quotes (" and ') are properly balanced inside a string. Assumes
     * that neither escape (\) nor any other character that could result in
     * breaking out of a string parsing context are allowed;
     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
     *
     * This code was taken from the Closure sanitization library.
     */function hasBalancedQuotes(value){var outsideSingle=true;var outsideDouble=true;for(var i=0;i<value.length;i++){var c=value.charAt(i);if(c==='\''&&outsideDouble){outsideSingle=!outsideSingle;}else if(c==='"'&&outsideSingle){outsideDouble=!outsideDouble;}}return outsideSingle&&outsideDouble;}/**
     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single
     * value) and returns a value that is safe to use in a browser environment.
     */function _sanitizeStyle(value){value=String(value).trim();// Make sure it's actually a string.
if(!value)return'';// Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for
// reasoning behind this.
var urlMatch=value.match(URL_RE);if(urlMatch&&_sanitizeUrl(urlMatch[1])===urlMatch[1]||value.match(SAFE_STYLE_VALUE)&&hasBalancedQuotes(value)){return value;// Safe style values.
}if(isDevMode()){console.warn("WARNING: sanitizing unsafe style value "+value+" (see http://g.co/ng/security#xss).");}return'unsafe';}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing
     * dangerous content.
     *
     * This method parses the `html` and locates potentially dangerous content (such as urls and
     * javascript) and removes it.
     *
     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.
     *
     * @param unsafeHtml untrusted `html`, typically from the user.
     * @returns `html` string which is safe to display to user, because all of the dangerous javascript
     * and urls have been removed.
     *
     * @publicApi
     */function ɵɵsanitizeHtml(unsafeHtml){var sanitizer=getSanitizer();if(sanitizer){return sanitizer.sanitize(exports.SecurityContext.HTML,unsafeHtml)||'';}if(allowSanitizationBypassAndThrow(unsafeHtml,"HTML"/* Html */)){return unwrapSafeValue(unsafeHtml);}return _sanitizeHtml(getDocument(),renderStringify(unsafeHtml));}/**
     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing
     * dangerous content.
     *
     * This method parses the `style` and locates potentially dangerous content (such as urls and
     * javascript) and removes it.
     *
     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.
     *
     * @param unsafeStyle untrusted `style`, typically from the user.
     * @returns `style` string which is safe to bind to the `style` properties, because all of the
     * dangerous javascript and urls have been removed.
     *
     * @publicApi
     */function ɵɵsanitizeStyle(unsafeStyle){var sanitizer=getSanitizer();if(sanitizer){return sanitizer.sanitize(exports.SecurityContext.STYLE,unsafeStyle)||'';}if(allowSanitizationBypassAndThrow(unsafeStyle,"Style"/* Style */)){return unwrapSafeValue(unsafeStyle);}return _sanitizeStyle(renderStringify(unsafeStyle));}/**
     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing
     * dangerous
     * content.
     *
     * This method parses the `url` and locates potentially dangerous content (such as javascript) and
     * removes it.
     *
     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.
     *
     * @param unsafeUrl untrusted `url`, typically from the user.
     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
     * all of the dangerous javascript has been removed.
     *
     * @publicApi
     */function ɵɵsanitizeUrl(unsafeUrl){var sanitizer=getSanitizer();if(sanitizer){return sanitizer.sanitize(exports.SecurityContext.URL,unsafeUrl)||'';}if(allowSanitizationBypassAndThrow(unsafeUrl,"URL"/* Url */)){return unwrapSafeValue(unsafeUrl);}return _sanitizeUrl(renderStringify(unsafeUrl));}/**
     * A `url` sanitizer which only lets trusted `url`s through.
     *
     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.
     *
     * @param unsafeResourceUrl untrusted `url`, typically from the user.
     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because
     * only trusted `url`s have been allowed to pass.
     *
     * @publicApi
     */function ɵɵsanitizeResourceUrl(unsafeResourceUrl){var sanitizer=getSanitizer();if(sanitizer){return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL,unsafeResourceUrl)||'';}if(allowSanitizationBypassAndThrow(unsafeResourceUrl,"ResourceURL"/* ResourceUrl */)){return unwrapSafeValue(unsafeResourceUrl);}throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');}/**
     * A `script` sanitizer which only lets trusted javascript through.
     *
     * This passes only `script`s marked trusted by calling {@link
     * bypassSanitizationTrustScript}.
     *
     * @param unsafeScript untrusted `script`, typically from the user.
     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,
     * because only trusted `scripts` have been allowed to pass.
     *
     * @publicApi
     */function ɵɵsanitizeScript(unsafeScript){var sanitizer=getSanitizer();if(sanitizer){return sanitizer.sanitize(exports.SecurityContext.SCRIPT,unsafeScript)||'';}if(allowSanitizationBypassAndThrow(unsafeScript,"Script"/* Script */)){return unwrapSafeValue(unsafeScript);}throw new Error('unsafe value used in a script context');}/**
     * Detects which sanitizer to use for URL property, based on tag name and prop name.
     *
     * The rules are based on the RESOURCE_URL context config from
     * `packages/compiler/src/schema/dom_security_schema.ts`.
     * If tag and prop names don't match Resource URL schema, use URL sanitizer.
     */function getUrlSanitizer(tag,prop){if(prop==='src'&&(tag==='embed'||tag==='frame'||tag==='iframe'||tag==='media'||tag==='script')||prop==='href'&&(tag==='base'||tag==='link')){return ɵɵsanitizeResourceUrl;}return ɵɵsanitizeUrl;}/**
     * Sanitizes URL, selecting sanitizer function based on tag and property names.
     *
     * This function is used in case we can't define security context at compile time, when only prop
     * name is available. This happens when we generate host bindings for Directives/Components. The
     * host element is unknown at compile time, so we defer calculation of specific sanitizer to
     * runtime.
     *
     * @param unsafeUrl untrusted `url`, typically from the user.
     * @param tag target element tag name.
     * @param prop name of the property that contains the value.
     * @returns `url` string which is safe to bind.
     *
     * @publicApi
     */function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl,tag,prop){return getUrlSanitizer(tag,prop)(unsafeUrl);}/**
     * The default style sanitizer will handle sanitization for style properties by
     * sanitizing any CSS property that can include a `url` value (usually image-based properties)
     *
     * @publicApi
     */var ɵɵdefaultStyleSanitizer=function ɵɵdefaultStyleSanitizer(prop,value,mode){if(value===undefined&&mode===undefined){// This is a workaround for the fact that `StyleSanitizeFn` should not exist once PR#34480
// lands. For now the `StyleSanitizeFn` and should act like `(value: any) => string` as a
// work around.
return ɵɵsanitizeStyle(prop);}mode=mode||3/* ValidateAndSanitize */;var doSanitizeValue=true;if(mode&1/* ValidateProperty */){doSanitizeValue=stylePropNeedsSanitization(prop);}if(mode&2/* SanitizeOnly */){return doSanitizeValue?ɵɵsanitizeStyle(value):unwrapSafeValue(value);}else{return doSanitizeValue;}};function stylePropNeedsSanitization(prop){return prop==='background-image'||prop==='backgroundImage'||prop==='background'||prop==='border-image'||prop==='borderImage'||prop==='border-image-source'||prop==='borderImageSource'||prop==='filter'||prop==='list-style'||prop==='listStyle'||prop==='list-style-image'||prop==='listStyleImage'||prop==='clip-path'||prop==='clipPath';}function validateAgainstEventProperties(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event property '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...")+("\nIf '"+name+"' is a directive input, make sure the directive is imported by the")+" current module.";throw new Error(msg);}}function validateAgainstEventAttributes(name){if(name.toLowerCase().startsWith('on')){var msg="Binding to event attribute '"+name+"' is disallowed for security reasons, "+("please use ("+name.slice(2)+")=...");throw new Error(msg);}}function getSanitizer(){var lView=getLView();return lView&&lView[SANITIZER];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!
     */ /**
     * Creates an `Array` construction with a given name. This is useful when
     * looking for memory consumption to see what time of array it is.
     *
     *
     * @param name Name to give to the constructor
     * @returns A subclass of `Array` if possible. This can only be done in
     *          environments which support `class` construct.
     */function createNamedArrayType(name){// This should never be called in prod mode, so let's verify that is the case.
if(ngDevMode){try{// We need to do it this way so that TypeScript does not down-level the below code.
var FunctionConstructor=createNamedArrayType.constructor;return new FunctionConstructor('Array',"return class "+name+" extends Array{}")(Array);}catch(e){// If it does not work just give up and fall back to regular Array.
return Array;}}else{throw new Error('Looks like we are in \'prod mode\', but we are creating a named Array type, which is wrong! Check your code');}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function normalizeDebugBindingName(name){// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
name=camelCaseToDashCase(name.replace(/[$@]/g,'_'));return"ng-reflect-"+name;}var CAMEL_CASE_REGEXP=/([A-Z])/g;function camelCaseToDashCase(input){return input.replace(CAMEL_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return'-'+m[1].toLowerCase();});}function normalizeDebugBindingValue(value){try{// Limit the size of the value as otherwise the DOM just gets polluted.
return value!=null?value.toString().slice(0,30):value;}catch(e){return'[ERROR] Exception while trying to serialize the value';}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Returns the matching `LContext` data for a given DOM node, directive or component instance.
     *
     * This function will examine the provided DOM element, component, or directive instance\'s
     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched
     * value will be that of the newly created `LContext`.
     *
     * If the monkey-patched value is the `LView` instance then the context value for that
     * target will be created and the monkey-patch reference will be updated. Therefore when this
     * function is called it may mutate the provided element\'s, component\'s or any of the associated
     * directive\'s monkey-patch values.
     *
     * If the monkey-patch value is not detected then the code will walk up the DOM until an element
     * is found which contains a monkey-patch reference. When that occurs then the provided element
     * will be updated with a new context (which is then returned). If the monkey-patch value is not
     * detected for a component/directive instance then it will throw an error (all components and
     * directives should be automatically monkey-patched by ivy).
     *
     * @param target Component, Directive or DOM Node.
     */function getLContext(target){var mpValue=readPatchedData(target);if(mpValue){// only when it's an array is it considered an LView instance
// ... otherwise it's an already constructed LContext instance
if(Array.isArray(mpValue)){var lView=mpValue;var nodeIndex=void 0;var component=undefined;var directives=undefined;if(isComponentInstance(target)){nodeIndex=findViaComponent(lView,target);if(nodeIndex==-1){throw new Error('The provided component was not found in the application');}component=target;}else if(isDirectiveInstance(target)){nodeIndex=findViaDirective(lView,target);if(nodeIndex==-1){throw new Error('The provided directive was not found in the application');}directives=getDirectivesAtNodeIndex(nodeIndex,lView,false);}else{nodeIndex=findViaNativeElement(lView,target);if(nodeIndex==-1){return null;}}// the goal is not to fill the entire context full of data because the lookups
// are expensive. Instead, only the target data (the element, component, container, ICU
// expression or directive details) are filled into the context. If called multiple times
// with different target values then the missing target data will be filled in.
var _native2=unwrapRNode(lView[nodeIndex]);var existingCtx=readPatchedData(_native2);var context=existingCtx&&!Array.isArray(existingCtx)?existingCtx:createLContext(lView,nodeIndex,_native2);// only when the component has been discovered then update the monkey-patch
if(component&&context.component===undefined){context.component=component;attachPatchData(context.component,context);}// only when the directives have been discovered then update the monkey-patch
if(directives&&context.directives===undefined){context.directives=directives;for(var i=0;i<directives.length;i++){attachPatchData(directives[i],context);}}attachPatchData(context["native"],context);mpValue=context;}}else{var rElement=target;ngDevMode&&assertDomNode(rElement);// if the context is not found then we need to traverse upwards up the DOM
// to find the nearest element that has already been monkey patched with data
var parent_1=rElement;while(parent_1=parent_1.parentNode){var parentContext=readPatchedData(parent_1);if(parentContext){var lView=void 0;if(Array.isArray(parentContext)){lView=parentContext;}else{lView=parentContext.lView;}// the edge of the app was also reached here through another means
// (maybe because the DOM was changed manually).
if(!lView){return null;}var index=findViaNativeElement(lView,rElement);if(index>=0){var _native2=unwrapRNode(lView[index]);var context=createLContext(lView,index,_native2);attachPatchData(_native2,context);mpValue=context;break;}}}}return mpValue||null;}/**
     * Creates an empty instance of a `LContext` context
     */function createLContext(lView,nodeIndex,_native3){return{lView:lView,nodeIndex:nodeIndex,"native":_native3,component:undefined,directives:undefined,localRefs:undefined};}/**
     * Takes a component instance and returns the view for that component.
     *
     * @param componentInstance
     * @returns The component's view
     */function getComponentViewByInstance(componentInstance){var lView=readPatchedData(componentInstance);var view;if(Array.isArray(lView)){var nodeIndex=findViaComponent(lView,componentInstance);view=getComponentLViewByIndex(nodeIndex,lView);var context=createLContext(lView,nodeIndex,view[HOST]);context.component=componentInstance;attachPatchData(componentInstance,context);attachPatchData(context["native"],context);}else{var context=lView;view=getComponentLViewByIndex(context.nodeIndex,context.lView);}return view;}/**
     * Assigns the given data to the given target (which could be a component,
     * directive or DOM node instance) using monkey-patching.
     */function attachPatchData(target,data){target[MONKEY_PATCH_KEY_NAME]=data;}function isComponentInstance(instance){return instance&&instance.constructor&&instance.constructor.ɵcmp;}function isDirectiveInstance(instance){return instance&&instance.constructor&&instance.constructor.ɵdir;}/**
     * Locates the element within the given LView and returns the matching index
     */function findViaNativeElement(lView,target){var tNode=lView[TVIEW].firstChild;while(tNode){var _native4=getNativeByTNodeOrNull(tNode,lView);if(_native4===target){return tNode.index;}tNode=traverseNextElement(tNode);}return-1;}/**
     * Locates the next tNode (child, sibling or parent).
     */function traverseNextElement(tNode){if(tNode.child){return tNode.child;}else if(tNode.next){return tNode.next;}else{// Let's take the following template: <div><span>text</span></div><component/>
// After checking the text node, we need to find the next parent that has a "next" TNode,
// in this case the parent `div`, so that we can find the component.
while(tNode.parent&&!tNode.parent.next){tNode=tNode.parent;}return tNode.parent&&tNode.parent.next;}}/**
     * Locates the component within the given LView and returns the matching index
     */function findViaComponent(lView,componentInstance){var componentIndices=lView[TVIEW].components;if(componentIndices){for(var i=0;i<componentIndices.length;i++){var elementComponentIndex=componentIndices[i];var componentView=getComponentLViewByIndex(elementComponentIndex,lView);if(componentView[CONTEXT]===componentInstance){return elementComponentIndex;}}}else{var rootComponentView=getComponentLViewByIndex(HEADER_OFFSET,lView);var rootComponent=rootComponentView[CONTEXT];if(rootComponent===componentInstance){// we are dealing with the root element here therefore we know that the
// element is the very first element after the HEADER data in the lView
return HEADER_OFFSET;}}return-1;}/**
     * Locates the directive within the given LView and returns the matching index
     */function findViaDirective(lView,directiveInstance){// if a directive is monkey patched then it will (by default)
// have a reference to the LView of the current view. The
// element bound to the directive being search lives somewhere
// in the view data. We loop through the nodes and check their
// list of directives for the instance.
var tNode=lView[TVIEW].firstChild;while(tNode){var directiveIndexStart=tNode.directiveStart;var directiveIndexEnd=tNode.directiveEnd;for(var i=directiveIndexStart;i<directiveIndexEnd;i++){if(lView[i]===directiveInstance){return tNode.index;}}tNode=traverseNextElement(tNode);}return-1;}/**
     * Returns a list of directives extracted from the given view based on the
     * provided list of directive index values.
     *
     * @param nodeIndex The node index
     * @param lView The target view data
     * @param includeComponents Whether or not to include components in returned directives
     */function getDirectivesAtNodeIndex(nodeIndex,lView,includeComponents){var tNode=lView[TVIEW].data[nodeIndex];var directiveStartIndex=tNode.directiveStart;if(directiveStartIndex==0)return EMPTY_ARRAY;var directiveEndIndex=tNode.directiveEnd;if(!includeComponents&&tNode.flags&2/* isComponentHost */)directiveStartIndex++;return lView.slice(directiveStartIndex,directiveEndIndex);}function getComponentAtNodeIndex(nodeIndex,lView){var tNode=lView[TVIEW].data[nodeIndex];var directiveStartIndex=tNode.directiveStart;return tNode.flags&2/* isComponentHost */?lView[directiveStartIndex]:null;}/**
     * Returns a map of local references (local reference name => element or directive instance) that
     * exist on a given element.
     */function discoverLocalRefs(lView,nodeIndex){var tNode=lView[TVIEW].data[nodeIndex];if(tNode&&tNode.localNames){var result={};var localIndex=tNode.index+1;for(var i=0;i<tNode.localNames.length;i+=2){result[tNode.localNames[i]]=lView[localIndex];localIndex++;}return result;}return null;}/** Called when directives inject each other (creating a circular dependency) */function throwCyclicDependencyError(token){throw new Error("Cannot instantiate cyclic dependency! "+token);}/** Called when there are multiple component selectors that match a given node */function throwMultipleComponentError(tNode){throw new Error("Multiple components match node with tagname "+tNode.tagName);}function throwMixedMultiProviderError(){throw new Error("Cannot mix multi providers and regular providers");}function throwInvalidProviderError(ngModuleType,providers,provider){var ngModuleDetail='';if(ngModuleType&&providers){var providerDetail=providers.map(function(v){return v==provider?'?'+provider+'?':'...';});ngModuleDetail=" - only instances of Provider and Type are allowed, got: ["+providerDetail.join(', ')+"]";}throw new Error("Invalid provider for the NgModule '"+stringify(ngModuleType)+"'"+ngModuleDetail);}/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */function throwErrorIfNoChangesMode(creationMode,oldValue,currValue,propName){var field=propName?" for '"+propName+"'":'';var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value"+field+": '"+oldValue+"'. Current value: '"+currValue+"'.";if(creationMode){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook?";}// TODO: include debug context, see `viewDebugError` function in
// `packages/core/src/view/errors.ts` for reference.
throw new Error(msg);}function constructDetailsForInterpolation(lView,rootIndex,expressionIndex,meta,changedValue){var _a=__read(meta.split(INTERPOLATION_DELIMITER)),propName=_a[0],prefix=_a[1],chunks=_a.slice(2);var oldValue=prefix,newValue=prefix;for(var i=0;i<chunks.length;i++){var slotIdx=rootIndex+i;oldValue+=""+lView[slotIdx]+chunks[i];newValue+=""+(slotIdx===expressionIndex?changedValue:lView[slotIdx])+chunks[i];}return{propName:propName,oldValue:oldValue,newValue:newValue};}/**
     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:
     * - property name (for property bindings or interpolations)
     * - old and new values, enriched using information from metadata
     *
     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`
     * function description.
     */function getExpressionChangedErrorDetails(lView,bindingIndex,oldValue,newValue){var tData=lView[TVIEW].data;var metadata=tData[bindingIndex];if(typeof metadata==='string'){// metadata for property interpolation
if(metadata.indexOf(INTERPOLATION_DELIMITER)>-1){return constructDetailsForInterpolation(lView,bindingIndex,bindingIndex,metadata,newValue);}// metadata for property binding
return{propName:metadata,oldValue:oldValue,newValue:newValue};}// metadata is not available for this expression, check if this expression is a part of the
// property interpolation by going from the current binding index left and look for a string that
// contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:
// [..., 'id�Prefix � and � suffix', null, null, null, ...]
if(metadata===null){var idx=bindingIndex-1;while(typeof tData[idx]!=='string'&&tData[idx+1]===null){idx--;}var meta=tData[idx];if(typeof meta==='string'){var matches=meta.match(new RegExp(INTERPOLATION_DELIMITER,'g'));// first interpolation delimiter separates property name from interpolation parts (in case of
// property interpolations), so we subtract one from total number of found delimiters
if(matches&&matches.length-1>bindingIndex-idx){return constructDetailsForInterpolation(lView,idx,bindingIndex,meta,newValue);}}}return{propName:undefined,oldValue:oldValue,newValue:newValue};}// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$4=1;/**
     * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.
     *
     * ```
     * <div my-dir [class]="exp"></div>
     * ```
     * and
     * ```
     * @Directive({
     * })
     * class MyDirective {
     *   @Input()
     *   class: string;
     * }
     * ```
     *
     * In the above case it is necessary to write the reconciled styling information into the
     * directive's input.
     *
     * @param tNode
     */function hasClassInput(tNode){return(tNode.flags&16/* hasClassInput */)!==0;}/**
     * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.
     *
     * ```
     * <div my-dir [style]="exp"></div>
     * ```
     * and
     * ```
     * @Directive({
     * })
     * class MyDirective {
     *   @Input()
     *   class: string;
     * }
     * ```
     *
     * In the above case it is necessary to write the reconciled styling information into the
     * directive's input.
     *
     * @param tNode
     */function hasStyleInput(tNode){return(tNode.flags&32/* hasStyleInput */)!==0;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$5=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Returns an index of `classToSearch` in `className` taking token boundaries into account.
     *
     * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)
     *
     * @param className A string containing classes (whitespace separated)
     * @param classToSearch A class name to locate
     * @param startingIndex Starting location of search
     * @returns an index of the located class (or -1 if not found)
     */function classIndexOf(className,classToSearch,startingIndex){ngDevMode&&assertNotEqual(classToSearch,'','can not look for "" string.');var end=className.length;while(true){var foundIndex=className.indexOf(classToSearch,startingIndex);if(foundIndex===-1)return foundIndex;if(foundIndex===0||className.charCodeAt(foundIndex-1)<=32/* SPACE */){// Ensure that it has leading whitespace
var length_1=classToSearch.length;if(foundIndex+length_1===end||className.charCodeAt(foundIndex+length_1)<=32/* SPACE */){// Ensure that it has trailing whitespace
return foundIndex;}}// False positive, keep searching from where we left off.
startingIndex=foundIndex+1;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var unusedValueToPlacateAjd=unusedValueExportToPlacateAjd$4+unusedValueExportToPlacateAjd$5;var NG_TEMPLATE_SELECTOR='ng-template';/**
     * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)
     *
     * @param attrs `TAttributes` to search through.
     * @param cssClassToMatch class to match (lowercase)
     * @param isProjectionMode Whether or not class matching should look into the attribute `class` in
     *    addition to the `AttributeMarker.Classes`.
     */function isCssClassMatching(attrs,cssClassToMatch,isProjectionMode){// TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.
// It is strange to me that sometimes the class information comes in form of `class` attribute
// and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine
// if that is the right behavior.
ngDevMode&&assertEqual(cssClassToMatch,cssClassToMatch.toLowerCase(),'Class name expected to be lowercase.');var i=0;while(i<attrs.length){var item=attrs[i++];if(isProjectionMode&&item==='class'){item=attrs[i];if(classIndexOf(item.toLowerCase(),cssClassToMatch,0)!==-1){return true;}}else if(item===1/* Classes */){// We found the classes section. Start searching for the class.
while(i<attrs.length&&typeof(item=attrs[i++])=='string'){// while we have strings
if(item.toLowerCase()===cssClassToMatch)return true;}return false;}}return false;}/**
     * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).
     *
     * @param tNode current TNode
     */function isInlineTemplate(tNode){return tNode.type===0/* Container */&&tNode.tagName!==NG_TEMPLATE_SELECTOR;}/**
     * Function that checks whether a given tNode matches tag-based selector and has a valid type.
     *
     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular
     * directive matching mode:
     * - in the "directive matching" mode we do _not_ take TContainer's tagName into account if it is
     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a
     * tag name was extracted from * syntax so we would match the same directive twice);
     * - in the "projection" mode, we use a tag name potentially extracted from the * syntax processing
     * (applicable to TNodeType.Container only).
     */function hasTagAndTypeMatch(tNode,currentSelector,isProjectionMode){var tagNameToCompare=tNode.type===0/* Container */&&!isProjectionMode?NG_TEMPLATE_SELECTOR:tNode.tagName;return currentSelector===tagNameToCompare;}/**
     * A utility function to match an Ivy node static data against a simple CSS selector
     *
     * @param node static data of the node to match
     * @param selector The selector to try matching against the node.
     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing
     * directive matching.
     * @returns true if node matches the selector.
     */function isNodeMatchingSelector(tNode,selector,isProjectionMode){ngDevMode&&assertDefined(selector[0],'Selector should have a tag name');var mode=4/* ELEMENT */;var nodeAttrs=tNode.attrs||[];// Find the index of first attribute that has no value, only a name.
var nameOnlyMarkerIdx=getNameOnlyMarkerIndex(nodeAttrs);// When processing ":not" selectors, we skip to the next ":not" if the
// current one doesn't match
var skipToNextSelector=false;for(var i=0;i<selector.length;i++){var current=selector[i];if(typeof current==='number'){// If we finish processing a :not selector and it hasn't failed, return false
if(!skipToNextSelector&&!isPositive(mode)&&!isPositive(current)){return false;}// If we are skipping to the next :not() and this mode flag is positive,
// it's a part of the current :not() selector, and we should keep skipping
if(skipToNextSelector&&isPositive(current))continue;skipToNextSelector=false;mode=current|mode&1/* NOT */;continue;}if(skipToNextSelector)continue;if(mode&4/* ELEMENT */){mode=2/* ATTRIBUTE */|mode&1/* NOT */;if(current!==''&&!hasTagAndTypeMatch(tNode,current,isProjectionMode)||current===''&&selector.length===1){if(isPositive(mode))return false;skipToNextSelector=true;}}else{var selectorAttrValue=mode&8/* CLASS */?current:selector[++i];// special case for matching against classes when a tNode has been instantiated with
// class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])
if(mode&8/* CLASS */&&tNode.attrs!==null){if(!isCssClassMatching(tNode.attrs,selectorAttrValue,isProjectionMode)){if(isPositive(mode))return false;skipToNextSelector=true;}continue;}var attrName=mode&8/* CLASS */?'class':current;var attrIndexInNode=findAttrIndexInNode(attrName,nodeAttrs,isInlineTemplate(tNode),isProjectionMode);if(attrIndexInNode===-1){if(isPositive(mode))return false;skipToNextSelector=true;continue;}if(selectorAttrValue!==''){var nodeAttrValue=void 0;if(attrIndexInNode>nameOnlyMarkerIdx){nodeAttrValue='';}else{ngDevMode&&assertNotEqual(nodeAttrs[attrIndexInNode],0/* NamespaceURI */,'We do not match directives on namespaced attributes');// we lowercase the attribute value to be able to match
// selectors without case-sensitivity
// (selectors are already in lowercase when generated)
nodeAttrValue=nodeAttrs[attrIndexInNode+1].toLowerCase();}var compareAgainstClassName=mode&8/* CLASS */?nodeAttrValue:null;if(compareAgainstClassName&&classIndexOf(compareAgainstClassName,selectorAttrValue,0)!==-1||mode&2/* ATTRIBUTE */&&selectorAttrValue!==nodeAttrValue){if(isPositive(mode))return false;skipToNextSelector=true;}}}}return isPositive(mode)||skipToNextSelector;}function isPositive(mode){return(mode&1/* NOT */)===0;}/**
     * Examines the attribute's definition array for a node to find the index of the
     * attribute that matches the given `name`.
     *
     * NOTE: This will not match namespaced attributes.
     *
     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.
     * The following table summarizes which types of attributes we attempt to match:
     *
     * ===========================================================================================================
     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n
     * Attributes
     * ===========================================================================================================
     * Inline + Projection     | YES               | YES                 | NO                  | YES
     * -----------------------------------------------------------------------------------------------------------
     * Inline + Directive      | NO                | NO                  | YES                 | NO
     * -----------------------------------------------------------------------------------------------------------
     * Non-inline + Projection | YES               | YES                 | NO                  | YES
     * -----------------------------------------------------------------------------------------------------------
     * Non-inline + Directive  | YES               | YES                 | NO                  | YES
     * ===========================================================================================================
     *
     * @param name the name of the attribute to find
     * @param attrs the attribute array to examine
     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)
     * rather than a manually expanded template node (e.g `<ng-template>`).
     * @param isProjectionMode true if we are matching against content projection otherwise we are
     * matching against directives.
     */function findAttrIndexInNode(name,attrs,isInlineTemplate,isProjectionMode){if(attrs===null)return-1;var i=0;if(isProjectionMode||!isInlineTemplate){var bindingsMode=false;while(i<attrs.length){var maybeAttrName=attrs[i];if(maybeAttrName===name){return i;}else if(maybeAttrName===3/* Bindings */||maybeAttrName===6/* I18n */){bindingsMode=true;}else if(maybeAttrName===1/* Classes */||maybeAttrName===2/* Styles */){var value=attrs[++i];// We should skip classes here because we have a separate mechanism for
// matching classes in projection mode.
while(typeof value==='string'){value=attrs[++i];}continue;}else if(maybeAttrName===4/* Template */){// We do not care about Template attributes in this scenario.
break;}else if(maybeAttrName===0/* NamespaceURI */){// Skip the whole namespaced attribute and value. This is by design.
i+=4;continue;}// In binding mode there are only names, rather than name-value pairs.
i+=bindingsMode?1:2;}// We did not match the attribute
return-1;}else{return matchTemplateAttribute(attrs,name);}}function isNodeMatchingSelectorList(tNode,selector,isProjectionMode){if(isProjectionMode===void 0){isProjectionMode=false;}for(var i=0;i<selector.length;i++){if(isNodeMatchingSelector(tNode,selector[i],isProjectionMode)){return true;}}return false;}function getProjectAsAttrValue(tNode){var nodeAttrs=tNode.attrs;if(nodeAttrs!=null){var ngProjectAsAttrIdx=nodeAttrs.indexOf(5/* ProjectAs */);// only check for ngProjectAs in attribute names, don't accidentally match attribute's value
// (attribute names are stored at even indexes)
if((ngProjectAsAttrIdx&1)===0){return nodeAttrs[ngProjectAsAttrIdx+1];}}return null;}function getNameOnlyMarkerIndex(nodeAttrs){for(var i=0;i<nodeAttrs.length;i++){var nodeAttr=nodeAttrs[i];if(isNameOnlyAttributeMarker(nodeAttr)){return i;}}return nodeAttrs.length;}function matchTemplateAttribute(attrs,name){var i=attrs.indexOf(4/* Template */);if(i>-1){i++;while(i<attrs.length){var attr=attrs[i];// Return in case we checked all template attrs and are switching to the next section in the
// attrs array (that starts with a number that represents an attribute marker).
if(typeof attr==='number')return-1;if(attr===name)return i;i++;}}return-1;}/**
     * Checks whether a selector is inside a CssSelectorList
     * @param selector Selector to be checked.
     * @param list List in which to look for the selector.
     */function isSelectorInSelectorList(selector,list){selectorListLoop:for(var i=0;i<list.length;i++){var currentSelectorInList=list[i];if(selector.length!==currentSelectorInList.length){continue;}for(var j=0;j<selector.length;j++){if(selector[j]!==currentSelectorInList[j]){continue selectorListLoop;}}return true;}return false;}function maybeWrapInNotSelector(isNegativeMode,chunk){return isNegativeMode?':not('+chunk.trim()+')':chunk;}function stringifyCSSSelector(selector){var result=selector[0];var i=1;var mode=2/* ATTRIBUTE */;var currentChunk='';var isNegativeMode=false;while(i<selector.length){var valueOrMarker=selector[i];if(typeof valueOrMarker==='string'){if(mode&2/* ATTRIBUTE */){var attrValue=selector[++i];currentChunk+='['+valueOrMarker+(attrValue.length>0?'="'+attrValue+'"':'')+']';}else if(mode&8/* CLASS */){currentChunk+='.'+valueOrMarker;}else if(mode&4/* ELEMENT */){currentChunk+=' '+valueOrMarker;}}else{//
// Append current chunk to the final result in case we come across SelectorFlag, which
// indicates that the previous section of a selector is over. We need to accumulate content
// between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.
// ```
//  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']
// ```
// should be transformed to `.classA :not(.classB .classC)`.
//
// Note: for negative selector part, we accumulate content between flags until we find the
// next negative flag. This is needed to support a case where `:not()` rule contains more than
// one chunk, e.g. the following selector:
// ```
//  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']
// ```
// should be stringified to `:not(p.foo) :not(.bar)`
//
if(currentChunk!==''&&!isPositive(valueOrMarker)){result+=maybeWrapInNotSelector(isNegativeMode,currentChunk);currentChunk='';}mode=valueOrMarker;// According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative
// mode is maintained for remaining chunks of a selector.
isNegativeMode=isNegativeMode||!isPositive(mode);}i++;}if(currentChunk!==''){result+=maybeWrapInNotSelector(isNegativeMode,currentChunk);}return result;}/**
     * Generates string representation of CSS selector in parsed form.
     *
     * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing
     * additional parsing at runtime (for example, for directive matching). However in some cases (for
     * example, while bootstrapping a component), a string version of the selector is required to query
     * for the host element on the page. This function takes the parsed form of a selector and returns
     * its string representation.
     *
     * @param selectorList selector in parsed form
     * @returns string representation of a given selector
     */function stringifyCSSSelectorList(selectorList){return selectorList.map(stringifyCSSSelector).join(',');}/**
     * Extracts attributes and classes information from a given CSS selector.
     *
     * This function is used while creating a component dynamically. In this case, the host element
     * (that is created dynamically) should contain attributes and classes specified in component's CSS
     * selector.
     *
     * @param selector CSS selector in parsed form (in a form of array)
     * @returns object with `attrs` and `classes` fields that contain extracted information
     */function extractAttrsAndClassesFromSelector(selector){var attrs=[];var classes=[];var i=1;var mode=2/* ATTRIBUTE */;while(i<selector.length){var valueOrMarker=selector[i];if(typeof valueOrMarker==='string'){if(mode===2/* ATTRIBUTE */){if(valueOrMarker!==''){attrs.push(valueOrMarker,selector[++i]);}}else if(mode===8/* CLASS */){classes.push(valueOrMarker);}}else{// According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative
// mode is maintained for remaining chunks of a selector. Since attributes and classes are
// extracted only for "positive" part of the selector, we can stop here.
if(!isPositive(mode))break;mode=valueOrMarker;}i++;}return{attrs:attrs,classes:classes};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /** A special value which designates that a value has not changed. */var NO_CHANGE=typeof ngDevMode==='undefined'||ngDevMode?{__brand__:'NO_CHANGE'}:{};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of
     * that LContainer, which is an LView
     * @param lView the lView whose parent to get
     */function getLViewParent(lView){ngDevMode&&assertLView(lView);var parent=lView[PARENT];return isLContainer(parent)?parent[PARENT]:parent;}/**
     * Retrieve the root view from any component or `LView` by walking the parent `LView` until
     * reaching the root `LView`.
     *
     * @param componentOrLView any component or `LView`
     */function getRootView(componentOrLView){ngDevMode&&assertDefined(componentOrLView,'component');var lView=isLView(componentOrLView)?componentOrLView:readPatchedLView(componentOrLView);while(lView&&!(lView[FLAGS]&512/* IsRoot */)){lView=getLViewParent(lView);}ngDevMode&&assertLView(lView);return lView;}/**
     * Returns the `RootContext` instance that is associated with
     * the application where the target is situated. It does this by walking the parent views until it
     * gets to the root view, then getting the context off of that.
     *
     * @param viewOrComponent the `LView` or component to get the root context for.
     */function getRootContext(viewOrComponent){var rootView=getRootView(viewOrComponent);ngDevMode&&assertDefined(rootView[CONTEXT],'RootView has no context. Perhaps it is disconnected?');return rootView[CONTEXT];}/**
     * Gets the first `LContainer` in the LView or `null` if none exists.
     */function getFirstLContainer(lView){return getNearestLContainer(lView[CHILD_HEAD]);}/**
     * Gets the next `LContainer` that is a sibling of the given container.
     */function getNextLContainer(container){return getNearestLContainer(container[NEXT]);}function getNearestLContainer(viewOrContainer){while(viewOrContainer!==null&&!isLContainer(viewOrContainer)){viewOrContainer=viewOrContainer[NEXT];}return viewOrContainer;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Advances to an element for later binding instructions.
     *
     * Used in conjunction with instructions like {@link property} to act on elements with specified
     * indices, for example those created with {@link element} or {@link elementStart}.
     *
     * ```ts
     * (rf: RenderFlags, ctx: any) => {
     *   if (rf & 1) {
     *     text(0, 'Hello');
     *     text(1, 'Goodbye')
     *     element(2, 'div');
     *   }
     *   if (rf & 2) {
     *     advance(2); // Advance twice to the <div>.
     *     property('title', 'test');
     *   }
     *  }
     * ```
     * @param delta Number of elements to advance forwards by.
     *
     * @codeGenApi
     */function ɵɵadvance(delta){ngDevMode&&assertGreaterThan(delta,0,'Can only advance forward');selectIndexInternal(getTView(),getLView(),getSelectedIndex()+delta,getCheckNoChangesMode());}/**
     * Selects an element for later binding instructions.
     * @deprecated No longer being generated, but still used in unit tests.
     * @codeGenApi
     */function ɵɵselect(index){// TODO(misko): Remove this function as it is no longer being used.
selectIndexInternal(getTView(),getLView(),index,getCheckNoChangesMode());}function selectIndexInternal(tView,lView,index,checkNoChangesMode){ngDevMode&&assertGreaterThan(index,-1,'Invalid index');ngDevMode&&assertDataInRange(lView,index+HEADER_OFFSET);// Flush the initial hooks for elements in the view that have been added up to this point.
// PERF WARNING: do NOT extract this to a separate function without running benchmarks
if(!checkNoChangesMode){var hooksInitPhaseCompleted=(lView[FLAGS]&3/* InitPhaseStateMask */)===3/* InitPhaseCompleted */;if(hooksInitPhaseCompleted){var preOrderCheckHooks=tView.preOrderCheckHooks;if(preOrderCheckHooks!==null){executeCheckHooks(lView,preOrderCheckHooks,index);}}else{var preOrderHooks=tView.preOrderHooks;if(preOrderHooks!==null){executeInitAndCheckHooks(lView,preOrderHooks,0/* OnInitHooksToBeRun */,index);}}}// We must set the selected index *after* running the hooks, because hooks may have side-effects
// that cause other template functions to run, thus updating the selected index, which is global
// state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index
// will be altered by the time we leave the `ɵɵadvance` instruction.
setSelectedIndex(index);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Marks that the next string is for element.
     *
     * See `I18nMutateOpCodes` documentation.
     */var ELEMENT_MARKER={marker:'element'};/**
     * Marks that the next string is for comment.
     *
     * See `I18nMutateOpCodes` documentation.
     */var COMMENT_MARKER={marker:'comment'};// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$6=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function toTStylingRange(prev,next){ngDevMode&&assertNumberInRange(prev,0,32767/* UNSIGNED_MASK */);ngDevMode&&assertNumberInRange(next,0,32767/* UNSIGNED_MASK */);return prev<<17/* PREV_SHIFT */|next<<2/* NEXT_SHIFT */;}function getTStylingRangePrev(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return tStylingRange>>17/* PREV_SHIFT */&32767/* UNSIGNED_MASK */;}function getTStylingRangePrevDuplicate(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return(tStylingRange&2/* PREV_DUPLICATE */)==2/* PREV_DUPLICATE */;}function setTStylingRangePrev(tStylingRange,previous){ngDevMode&&assertNumber(tStylingRange,'expected number');ngDevMode&&assertNumberInRange(previous,0,32767/* UNSIGNED_MASK */);return tStylingRange&~4294836224/* PREV_MASK */|previous<<17/* PREV_SHIFT */;}function setTStylingRangePrevDuplicate(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return tStylingRange|2/* PREV_DUPLICATE */;}function getTStylingRangeNext(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return(tStylingRange&131068/* NEXT_MASK */)>>2/* NEXT_SHIFT */;}function setTStylingRangeNext(tStylingRange,next){ngDevMode&&assertNumber(tStylingRange,'expected number');ngDevMode&&assertNumberInRange(next,0,32767/* UNSIGNED_MASK */);return tStylingRange&~131068/* NEXT_MASK */|//
next<<2/* NEXT_SHIFT */;}function getTStylingRangeNextDuplicate(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return(tStylingRange&1/* NEXT_DUPLICATE */)===1/* NEXT_DUPLICATE */;}function setTStylingRangeNextDuplicate(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');return tStylingRange|1/* NEXT_DUPLICATE */;}function getTStylingRangeTail(tStylingRange){ngDevMode&&assertNumber(tStylingRange,'expected number');var next=getTStylingRangeNext(tStylingRange);return next===0?getTStylingRangePrev(tStylingRange):next;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function attachDebugObject(obj,debug){Object.defineProperty(obj,'debug',{value:debug,enumerable:false});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NG_DEV_MODE=(typeof ngDevMode==='undefined'||!!ngDevMode)&&initNgDevMode();/*
     * This file contains conditionally attached classes which provide human readable (debug) level
     * information for `LView`, `LContainer` and other internal data structures. These data structures
     * are stored internally as array which makes it very difficult during debugging to reason about the
     * current state of the system.
     *
     * Patching the array with extra property does change the array's hidden class' but it does not
     * change the cost of access, therefore this patching should not have significant if any impact in
     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)
     *
     * So instead of seeing:
     * ```
     * Array(30) [Object, 659, null, …]
     * ```
     *
     * You get to see:
     * ```
     * LViewDebug {
     *   views: [...],
     *   flags: {attached: true, ...}
     *   nodes: [
     *     {html: '<div id="123">', ..., nodes: [
     *       {html: '<span>', ..., nodes: null}
     *     ]}
     *   ]
     * }
     * ```
     */var LVIEW_COMPONENT_CACHE;var LVIEW_EMBEDDED_CACHE;var LVIEW_ROOT;/**
     * This function clones a blueprint and creates LView.
     *
     * Simple slice will keep the same type, and we need it to be LView
     */function cloneToLViewFromTViewBlueprint(tView){var debugTView=tView;var lView=getLViewToClone(debugTView.type,tView.template&&tView.template.name);return lView.concat(tView.blueprint);}function getLViewToClone(type,name){switch(type){case 0/* Root */:if(LVIEW_ROOT===undefined)LVIEW_ROOT=new(createNamedArrayType('LRootView'))();return LVIEW_ROOT;case 1/* Component */:if(LVIEW_COMPONENT_CACHE===undefined)LVIEW_COMPONENT_CACHE=new Map();var componentArray=LVIEW_COMPONENT_CACHE.get(name);if(componentArray===undefined){componentArray=new(createNamedArrayType('LComponentView'+nameSuffix(name)))();LVIEW_COMPONENT_CACHE.set(name,componentArray);}return componentArray;case 2/* Embedded */:if(LVIEW_EMBEDDED_CACHE===undefined)LVIEW_EMBEDDED_CACHE=new Map();var embeddedArray=LVIEW_EMBEDDED_CACHE.get(name);if(embeddedArray===undefined){embeddedArray=new(createNamedArrayType('LEmbeddedView'+nameSuffix(name)))();LVIEW_EMBEDDED_CACHE.set(name,embeddedArray);}return embeddedArray;}throw new Error('unreachable code');}function nameSuffix(text){if(text==null)return'';var index=text.lastIndexOf('_Template');return'_'+(index===-1?text:text.substr(0,index));}/**
     * This class is a debug version of Object literal so that we can have constructor name show up
     * in
     * debug tools in ngDevMode.
     */var TViewConstructor=/** @class */function(){function TView(type,//
id,//
blueprint,//
template,//
queries,//
viewQuery,//
node,//
data,//
bindingStartIndex,//
expandoStartIndex,//
expandoInstructions,//
firstCreatePass,//
firstUpdatePass,//
staticViewQueries,//
staticContentQueries,//
preOrderHooks,//
preOrderCheckHooks,//
contentHooks,//
contentCheckHooks,//
viewHooks,//
viewCheckHooks,//
destroyHooks,//
cleanup,//
contentQueries,//
components,//
directiveRegistry,//
pipeRegistry,//
firstChild,//
schemas,//
consts,//
incompleteFirstPass//
){this.type=type;this.id=id;this.blueprint=blueprint;this.template=template;this.queries=queries;this.viewQuery=viewQuery;this.node=node;this.data=data;this.bindingStartIndex=bindingStartIndex;this.expandoStartIndex=expandoStartIndex;this.expandoInstructions=expandoInstructions;this.firstCreatePass=firstCreatePass;this.firstUpdatePass=firstUpdatePass;this.staticViewQueries=staticViewQueries;this.staticContentQueries=staticContentQueries;this.preOrderHooks=preOrderHooks;this.preOrderCheckHooks=preOrderCheckHooks;this.contentHooks=contentHooks;this.contentCheckHooks=contentCheckHooks;this.viewHooks=viewHooks;this.viewCheckHooks=viewCheckHooks;this.destroyHooks=destroyHooks;this.cleanup=cleanup;this.contentQueries=contentQueries;this.components=components;this.directiveRegistry=directiveRegistry;this.pipeRegistry=pipeRegistry;this.firstChild=firstChild;this.schemas=schemas;this.consts=consts;this.incompleteFirstPass=incompleteFirstPass;}Object.defineProperty(TView.prototype,"template_",{get:function get(){var buf=[];processTNodeChildren(this.firstChild,buf);return buf.join('');},enumerable:true,configurable:true});return TView;}();var TNode=/** @class */function(){function TNode(tView_,//
type,//
index,//
injectorIndex,//
directiveStart,//
directiveEnd,//
directiveStylingLast,//
propertyBindings,//
flags,//
providerIndexes,//
tagName,//
attrs,//
mergedAttrs,//
localNames,//
initialInputs,//
inputs,//
outputs,//
tViews,//
next,//
projectionNext,//
child,//
parent,//
projection,//
styles,//
stylesWithoutHost,//
residualStyles,//
classes,//
classesWithoutHost,//
residualClasses,//
classBindings,//
styleBindings){this.tView_=tView_;this.type=type;this.index=index;this.injectorIndex=injectorIndex;this.directiveStart=directiveStart;this.directiveEnd=directiveEnd;this.directiveStylingLast=directiveStylingLast;this.propertyBindings=propertyBindings;this.flags=flags;this.providerIndexes=providerIndexes;this.tagName=tagName;this.attrs=attrs;this.mergedAttrs=mergedAttrs;this.localNames=localNames;this.initialInputs=initialInputs;this.inputs=inputs;this.outputs=outputs;this.tViews=tViews;this.next=next;this.projectionNext=projectionNext;this.child=child;this.parent=parent;this.projection=projection;this.styles=styles;this.stylesWithoutHost=stylesWithoutHost;this.residualStyles=residualStyles;this.classes=classes;this.classesWithoutHost=classesWithoutHost;this.residualClasses=residualClasses;this.classBindings=classBindings;this.styleBindings=styleBindings;}Object.defineProperty(TNode.prototype,"type_",{get:function get(){switch(this.type){case 0/* Container */:return'TNodeType.Container';case 3/* Element */:return'TNodeType.Element';case 4/* ElementContainer */:return'TNodeType.ElementContainer';case 5/* IcuContainer */:return'TNodeType.IcuContainer';case 1/* Projection */:return'TNodeType.Projection';case 2/* View */:return'TNodeType.View';default:return'TNodeType.???';}},enumerable:true,configurable:true});Object.defineProperty(TNode.prototype,"flags_",{get:function get(){var flags=[];if(this.flags&16/* hasClassInput */)flags.push('TNodeFlags.hasClassInput');if(this.flags&8/* hasContentQuery */)flags.push('TNodeFlags.hasContentQuery');if(this.flags&32/* hasStyleInput */)flags.push('TNodeFlags.hasStyleInput');if(this.flags&128/* hasHostBindings */)flags.push('TNodeFlags.hasHostBindings');if(this.flags&2/* isComponentHost */)flags.push('TNodeFlags.isComponentHost');if(this.flags&1/* isDirectiveHost */)flags.push('TNodeFlags.isDirectiveHost');if(this.flags&64/* isDetached */)flags.push('TNodeFlags.isDetached');if(this.flags&4/* isProjected */)flags.push('TNodeFlags.isProjected');return flags.join('|');},enumerable:true,configurable:true});Object.defineProperty(TNode.prototype,"template_",{get:function get(){var buf=[];buf.push('<',this.tagName||this.type_);if(this.attrs){for(var i=0;i<this.attrs.length;){var attrName=this.attrs[i++];if(typeof attrName=='number'){break;}var attrValue=this.attrs[i++];buf.push(' ',attrName,'="',attrValue,'"');}}buf.push('>');processTNodeChildren(this.child,buf);buf.push('</',this.tagName||this.type_,'>');return buf.join('');},enumerable:true,configurable:true});Object.defineProperty(TNode.prototype,"styleBindings_",{get:function get(){return toDebugStyleBinding(this,false);},enumerable:true,configurable:true});Object.defineProperty(TNode.prototype,"classBindings_",{get:function get(){return toDebugStyleBinding(this,true);},enumerable:true,configurable:true});return TNode;}();var TNodeDebug=TNode;function toDebugStyleBinding(tNode,isClassBased){var tData=tNode.tView_.data;var bindings=[];var range=isClassBased?tNode.classBindings:tNode.styleBindings;var prev=getTStylingRangePrev(range);var next=getTStylingRangeNext(range);var isTemplate=next!==0;var cursor=isTemplate?next:prev;while(cursor!==0){var itemKey=tData[cursor];var itemRange=tData[cursor+1];bindings.unshift({key:itemKey,index:cursor,isTemplate:isTemplate,prevDuplicate:getTStylingRangePrevDuplicate(itemRange),nextDuplicate:getTStylingRangeNextDuplicate(itemRange),nextIndex:getTStylingRangeNext(itemRange),prevIndex:getTStylingRangePrev(itemRange)});if(cursor===prev)isTemplate=false;cursor=getTStylingRangePrev(itemRange);}bindings.push((isClassBased?tNode.residualClasses:tNode.residualStyles)||null);return bindings;}function processTNodeChildren(tNode,buf){while(tNode){buf.push(tNode.template_);tNode=tNode.next;}}var TViewData=NG_DEV_MODE&&createNamedArrayType('TViewData')||null;var TVIEWDATA_EMPTY;// can't initialize here or it will not be tree shaken, because
// `LView` constructor could have side-effects.
/**
     * This function clones a blueprint and creates TData.
     *
     * Simple slice will keep the same type, and we need it to be TData
     */function cloneToTViewData(list){if(TVIEWDATA_EMPTY===undefined)TVIEWDATA_EMPTY=new TViewData();return TVIEWDATA_EMPTY.concat(list);}var LViewBlueprint=NG_DEV_MODE&&createNamedArrayType('LViewBlueprint')||null;var MatchesArray=NG_DEV_MODE&&createNamedArrayType('MatchesArray')||null;var TViewComponents=NG_DEV_MODE&&createNamedArrayType('TViewComponents')||null;var TNodeLocalNames=NG_DEV_MODE&&createNamedArrayType('TNodeLocalNames')||null;var TNodeInitialInputs=NG_DEV_MODE&&createNamedArrayType('TNodeInitialInputs')||null;var TNodeInitialData=NG_DEV_MODE&&createNamedArrayType('TNodeInitialData')||null;var LCleanup=NG_DEV_MODE&&createNamedArrayType('LCleanup')||null;var TCleanup=NG_DEV_MODE&&createNamedArrayType('TCleanup')||null;function attachLViewDebug(lView){attachDebugObject(lView,new LViewDebug(lView));}function attachLContainerDebug(lContainer){attachDebugObject(lContainer,new LContainerDebug(lContainer));}function toDebug(obj){if(obj){var debug=obj.debug;assertDefined(debug,'Object does not have a debug representation.');return debug;}else{return obj;}}/**
     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier
     * reading.
     *
     * @param value possibly wrapped native DOM node.
     * @param includeChildren If `true` then the serialized HTML form will include child elements
     * (same
     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element
     * itself
     * (will not serialize child elements).
     */function toHtml(value,includeChildren){if(includeChildren===void 0){includeChildren=false;}var node=unwrapRNode(value);if(node){var isTextNode=node.nodeType===Node.TEXT_NODE;var outerHTML=(isTextNode?node.textContent:node.outerHTML)||'';if(includeChildren||isTextNode){return outerHTML;}else{var innerHTML='>'+node.innerHTML+'<';return outerHTML.split(innerHTML)[0]+'>';}}else{return null;}}var LViewDebug=/** @class */function(){function LViewDebug(_raw_lView){this._raw_lView=_raw_lView;}Object.defineProperty(LViewDebug.prototype,"flags",{/**
             * Flags associated with the `LView` unpacked into a more readable state.
             */get:function get(){var flags=this._raw_lView[FLAGS];return{__raw__flags__:flags,initPhaseState:flags&3/* InitPhaseStateMask */,creationMode:!!(flags&4/* CreationMode */),firstViewPass:!!(flags&8/* FirstLViewPass */),checkAlways:!!(flags&16/* CheckAlways */),dirty:!!(flags&64/* Dirty */),attached:!!(flags&128/* Attached */),destroyed:!!(flags&256/* Destroyed */),isRoot:!!(flags&512/* IsRoot */),indexWithinInitPhase:flags>>11/* IndexWithinInitPhaseShift */};},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"parent",{get:function get(){return toDebug(this._raw_lView[PARENT]);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"host",{get:function get(){return toHtml(this._raw_lView[HOST],true);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"html",{get:function get(){return(this.nodes||[]).map(function(node){return toHtml(node["native"],true);}).join('');},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"context",{get:function get(){return this._raw_lView[CONTEXT];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"nodes",{/**
             * The tree of nodes associated with the current `LView`. The nodes have been normalized into
             * a
             * tree structure with relevant details pulled out for readability.
             */get:function get(){var lView=this._raw_lView;var tNode=lView[TVIEW].firstChild;return toDebugNodes(tNode,lView);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"tView",{get:function get(){return this._raw_lView[TVIEW];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"cleanup",{get:function get(){return this._raw_lView[CLEANUP];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"injector",{get:function get(){return this._raw_lView[INJECTOR$1];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"rendererFactory",{get:function get(){return this._raw_lView[RENDERER_FACTORY];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"renderer",{get:function get(){return this._raw_lView[RENDERER];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"sanitizer",{get:function get(){return this._raw_lView[SANITIZER];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"childHead",{get:function get(){return toDebug(this._raw_lView[CHILD_HEAD]);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"next",{get:function get(){return toDebug(this._raw_lView[NEXT]);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"childTail",{get:function get(){return toDebug(this._raw_lView[CHILD_TAIL]);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"declarationView",{get:function get(){return toDebug(this._raw_lView[DECLARATION_VIEW]);},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"queries",{get:function get(){return this._raw_lView[QUERIES];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"tHost",{get:function get(){return this._raw_lView[T_HOST];},enumerable:true,configurable:true});Object.defineProperty(LViewDebug.prototype,"childViews",{/**
             * Normalized view of child views (and containers) attached at this location.
             */get:function get(){var childViews=[];var child=this.childHead;while(child){childViews.push(child);child=child.next;}return childViews;},enumerable:true,configurable:true});return LViewDebug;}();/**
     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.
     *
     * @param tNode
     * @param lView
     */function toDebugNodes(tNode,lView){if(tNode){var debugNodes=[];var tNodeCursor=tNode;while(tNodeCursor){debugNodes.push(buildDebugNode(tNodeCursor,lView,tNodeCursor.index));tNodeCursor=tNodeCursor.next;}return debugNodes;}else{return null;}}function buildDebugNode(tNode,lView,nodeIndex){var rawValue=lView[nodeIndex];var _native5=unwrapRNode(rawValue);var componentLViewDebug=toDebug(readLViewValue(rawValue));return{html:toHtml(_native5),"native":_native5,nodes:toDebugNodes(tNode.child,lView),component:componentLViewDebug};}var LContainerDebug=/** @class */function(){function LContainerDebug(_raw_lContainer){this._raw_lContainer=_raw_lContainer;}Object.defineProperty(LContainerDebug.prototype,"hasTransplantedViews",{get:function get(){return this._raw_lContainer[HAS_TRANSPLANTED_VIEWS];},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"views",{get:function get(){return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET).map(toDebug);},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"parent",{get:function get(){return toDebug(this._raw_lContainer[PARENT]);},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"movedViews",{get:function get(){return this._raw_lContainer[MOVED_VIEWS];},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"host",{get:function get(){return this._raw_lContainer[HOST];},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"native",{get:function get(){return this._raw_lContainer[NATIVE];},enumerable:true,configurable:true});Object.defineProperty(LContainerDebug.prototype,"next",{get:function get(){return toDebug(this._raw_lContainer[NEXT]);},enumerable:true,configurable:true});return LContainerDebug;}();/**
     * Return an `LView` value if found.
     *
     * @param value `LView` if any
     */function readLViewValue(value){while(Array.isArray(value)){// This check is not quite right, as it does not take into account `StylingContext`
// This is why it is in debug, not in util.ts
if(value.length>=HEADER_OFFSET-1)return value;value=value[HOST];}return null;}var I18NDebugItem=/** @class */function(){function I18NDebugItem(__raw_opCode,_lView,nodeIndex,type){this.__raw_opCode=__raw_opCode;this._lView=_lView;this.nodeIndex=nodeIndex;this.type=type;}Object.defineProperty(I18NDebugItem.prototype,"tNode",{get:function get(){return getTNode(this._lView[TVIEW],this.nodeIndex);},enumerable:true,configurable:true});return I18NDebugItem;}();/**
     * Turns a list of "Create" & "Update" OpCodes into a human-readable list of operations for
     * debugging purposes.
     * @param mutateOpCodes mutation opCodes to read
     * @param updateOpCodes update opCodes to read
     * @param icus list of ICU expressions
     * @param lView The view the opCodes are acting on
     */function attachI18nOpCodesDebug(mutateOpCodes,updateOpCodes,icus,lView){attachDebugObject(mutateOpCodes,new I18nMutateOpCodesDebug(mutateOpCodes,lView));attachDebugObject(updateOpCodes,new I18nUpdateOpCodesDebug(updateOpCodes,icus,lView));if(icus){icus.forEach(function(icu){icu.create.forEach(function(icuCase){attachDebugObject(icuCase,new I18nMutateOpCodesDebug(icuCase,lView));});icu.update.forEach(function(icuCase){attachDebugObject(icuCase,new I18nUpdateOpCodesDebug(icuCase,icus,lView));});});}}var I18nMutateOpCodesDebug=/** @class */function(){function I18nMutateOpCodesDebug(__raw_opCodes,__lView){this.__raw_opCodes=__raw_opCodes;this.__lView=__lView;}Object.defineProperty(I18nMutateOpCodesDebug.prototype,"operations",{/**
             * A list of operation information about how the OpCodes will act on the view.
             */get:function get(){var _a=this,__lView=_a.__lView,__raw_opCodes=_a.__raw_opCodes;var results=[];for(var i=0;i<__raw_opCodes.length;i++){var opCode=__raw_opCodes[i];var result=void 0;if(typeof opCode==='string'){result={__raw_opCode:opCode,type:'Create Text Node',nodeIndex:__raw_opCodes[++i],text:opCode};}if(typeof opCode==='number'){switch(opCode&7/* MASK_OPCODE */){case 1/* AppendChild */:var destinationNodeIndex=opCode>>>17/* SHIFT_PARENT */;result=new I18NDebugItem(opCode,__lView,destinationNodeIndex,'AppendChild');break;case 0/* Select */:var nodeIndex=opCode>>>3/* SHIFT_REF */;result=new I18NDebugItem(opCode,__lView,nodeIndex,'Select');break;case 5/* ElementEnd */:var elementIndex=opCode>>>3/* SHIFT_REF */;result=new I18NDebugItem(opCode,__lView,elementIndex,'ElementEnd');break;case 4/* Attr */:elementIndex=opCode>>>3/* SHIFT_REF */;result=new I18NDebugItem(opCode,__lView,elementIndex,'Attr');result['attrName']=__raw_opCodes[++i];result['attrValue']=__raw_opCodes[++i];break;}}if(!result){switch(opCode){case COMMENT_MARKER:result={__raw_opCode:opCode,type:'COMMENT_MARKER',commentValue:__raw_opCodes[++i],nodeIndex:__raw_opCodes[++i]};break;case ELEMENT_MARKER:result={__raw_opCode:opCode,type:'ELEMENT_MARKER'};break;}}if(!result){result={__raw_opCode:opCode,type:'Unknown Op Code',code:opCode};}results.push(result);}return results;},enumerable:true,configurable:true});return I18nMutateOpCodesDebug;}();var I18nUpdateOpCodesDebug=/** @class */function(){function I18nUpdateOpCodesDebug(__raw_opCodes,icus,__lView){this.__raw_opCodes=__raw_opCodes;this.icus=icus;this.__lView=__lView;}Object.defineProperty(I18nUpdateOpCodesDebug.prototype,"operations",{/**
             * A list of operation information about how the OpCodes will act on the view.
             */get:function get(){var _a=this,__lView=_a.__lView,__raw_opCodes=_a.__raw_opCodes,icus=_a.icus;var results=[];for(var i=0;i<__raw_opCodes.length;i++){// bit code to check if we should apply the next update
var checkBit=__raw_opCodes[i];// Number of opCodes to skip until next set of update codes
var skipCodes=__raw_opCodes[++i];var value='';for(var j=i+1;j<=i+skipCodes;j++){var opCode=__raw_opCodes[j];if(typeof opCode==='string'){value+=opCode;}else if(typeof opCode=='number'){if(opCode<0){// It's a binding index whose value is negative
// We cannot know the value of the binding so we only show the index
value+="\uFFFD"+(-opCode-1)+"\uFFFD";}else{var nodeIndex=opCode>>>2/* SHIFT_REF */;var tIcuIndex=void 0;var tIcu=void 0;switch(opCode&3/* MASK_OPCODE */){case 1/* Attr */:var attrName=__raw_opCodes[++j];var sanitizeFn=__raw_opCodes[++j];results.push({__raw_opCode:opCode,checkBit:checkBit,type:'Attr',attrValue:value,attrName:attrName,sanitizeFn:sanitizeFn});break;case 0/* Text */:results.push({__raw_opCode:opCode,checkBit:checkBit,type:'Text',nodeIndex:nodeIndex,text:value});break;case 2/* IcuSwitch */:tIcuIndex=__raw_opCodes[++j];tIcu=icus[tIcuIndex];var result=new I18NDebugItem(opCode,__lView,nodeIndex,'IcuSwitch');result['tIcuIndex']=tIcuIndex;result['checkBit']=checkBit;result['mainBinding']=value;result['tIcu']=tIcu;results.push(result);break;case 3/* IcuUpdate */:tIcuIndex=__raw_opCodes[++j];tIcu=icus[tIcuIndex];result=new I18NDebugItem(opCode,__lView,nodeIndex,'IcuUpdate');result['tIcuIndex']=tIcuIndex;result['checkBit']=checkBit;result['tIcu']=tIcu;results.push(result);break;}}}}i+=skipCodes;}return results;},enumerable:true,configurable:true});return I18nUpdateOpCodesDebug;}();var ɵ0$4=function ɵ0$4(){return Promise.resolve(null);};/**
     * A permanent marker promise which signifies that the current CD tree is
     * clean.
     */var _CLEAN_PROMISE=ɵ0$4();/**
     * Process the `TView.expandoInstructions`. (Execute the `hostBindings`.)
     *
     * @param tView `TView` containing the `expandoInstructions`
     * @param lView `LView` associated with the `TView`
     */function setHostBindingsByExecutingExpandoInstructions(tView,lView){ngDevMode&&assertSame(tView,lView[TVIEW],'`LView` is not associated with the `TView`!');try{var expandoInstructions=tView.expandoInstructions;if(expandoInstructions!==null){var bindingRootIndex=tView.expandoStartIndex;var currentDirectiveIndex=-1;var currentElementIndex=-1;// TODO(misko): PERF It is possible to get here with `TView.expandoInstructions` containing no
// functions to execute. This is wasteful as there is no work to be done, but we still need
// to iterate over the instructions.
// In example of this is in this test: `host_binding_spec.ts`
// `fit('should not cause problems if detectChanges is called when a property updates', ...`
// In the above test we get here with expando [0, 0, 1] which requires a lot of processing but
// there is no function to execute.
for(var i=0;i<expandoInstructions.length;i++){var instruction=expandoInstructions[i];if(typeof instruction==='number'){if(instruction<=0){// Negative numbers mean that we are starting new EXPANDO block and need to update
// the current element and directive index.
// Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce
// `-0` which requires non standard math arithmetic and it can prevent VM optimizations.
// `0-0` will always produce `0` and will not cause a potential deoptimization in VM.
// TODO(misko): PERF This should be refactored to use `~instruction` as that does not
// suffer from `-0` and it is faster/more compact.
currentElementIndex=0-instruction;setSelectedIndex(currentElementIndex);// Injector block and providers are taken into account.
var providerCount=expandoInstructions[++i];bindingRootIndex+=INJECTOR_BLOOM_PARENT_SIZE+providerCount;currentDirectiveIndex=bindingRootIndex;}else{// This is either the injector size (so the binding root can skip over directives
// and get to the first set of host bindings on this node) or the host var count
// (to get to the next set of host bindings on this node).
bindingRootIndex+=instruction;}}else{// If it's not a number, it's a host binding function that needs to be executed.
if(instruction!==null){setBindingRootForHostBindings(bindingRootIndex,currentDirectiveIndex);var hostCtx=lView[currentDirectiveIndex];instruction(2/* Update */,hostCtx);}// TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is
// sub-optimal. The implications are that if we have a lot of directives but none of them
// have host bindings we nevertheless need to iterate over the expando instructions to
// update the counter. It would be much better if we could encode the
// `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to
// iterate over those directives which actually have `hostBindings`.
currentDirectiveIndex++;}}}}finally{setSelectedIndex(-1);}}/** Refreshes all content queries declared by directives in a given view */function refreshContentQueries(tView,lView){var contentQueries=tView.contentQueries;if(contentQueries!==null){for(var i=0;i<contentQueries.length;i+=2){var queryStartIdx=contentQueries[i];var directiveDefIdx=contentQueries[i+1];if(directiveDefIdx!==-1){var directiveDef=tView.data[directiveDefIdx];ngDevMode&&assertDefined(directiveDef.contentQueries,'contentQueries function should be defined');setCurrentQueryIndex(queryStartIdx);directiveDef.contentQueries(2/* Update */,lView[directiveDefIdx],directiveDefIdx);}}}}/** Refreshes child components in the current view (update mode). */function refreshChildComponents(hostLView,components){for(var i=0;i<components.length;i++){refreshComponent(hostLView,components[i]);}}/** Renders child components in the current view (creation mode). */function renderChildComponents(hostLView,components){for(var i=0;i<components.length;i++){renderComponent(hostLView,components[i]);}}/**
     * Creates a native element from a tag name, using a renderer.
     * @param name the tag name
     * @param renderer A renderer to use
     * @returns the element created
     */function elementCreate(name,renderer,namespace){if(isProceduralRenderer(renderer)){return renderer.createElement(name,namespace);}else{return namespace===null?renderer.createElement(name):renderer.createElementNS(namespace,name);}}function createLView(parentLView,tView,context,flags,host,tHostNode,rendererFactory,renderer,sanitizer,injector){var lView=ngDevMode?cloneToLViewFromTViewBlueprint(tView):tView.blueprint.slice();lView[HOST]=host;lView[FLAGS]=flags|4/* CreationMode */|128/* Attached */|8/* FirstLViewPass */;resetPreOrderHookFlags(lView);lView[PARENT]=lView[DECLARATION_VIEW]=parentLView;lView[CONTEXT]=context;lView[RENDERER_FACTORY]=rendererFactory||parentLView&&parentLView[RENDERER_FACTORY];ngDevMode&&assertDefined(lView[RENDERER_FACTORY],'RendererFactory is required');lView[RENDERER]=renderer||parentLView&&parentLView[RENDERER];ngDevMode&&assertDefined(lView[RENDERER],'Renderer is required');lView[SANITIZER]=sanitizer||parentLView&&parentLView[SANITIZER]||null;lView[INJECTOR$1]=injector||parentLView&&parentLView[INJECTOR$1]||null;lView[T_HOST]=tHostNode;ngDevMode&&assertEqual(tView.type==2/* Embedded */?parentLView!==null:true,true,'Embedded views must have parentLView');lView[DECLARATION_COMPONENT_VIEW]=tView.type==2/* Embedded */?parentLView[DECLARATION_COMPONENT_VIEW]:lView;ngDevMode&&attachLViewDebug(lView);return lView;}function getOrCreateTNode(tView,tHostNode,index,type,name,attrs){// Keep this function short, so that the VM will inline it.
var adjustedIndex=index+HEADER_OFFSET;var tNode=tView.data[adjustedIndex]||createTNodeAtIndex(tView,tHostNode,adjustedIndex,type,name,attrs);setPreviousOrParentTNode(tNode,true);return tNode;}function createTNodeAtIndex(tView,tHostNode,adjustedIndex,type,name,attrs){var previousOrParentTNode=getPreviousOrParentTNode();var isParent=getIsParent();var parent=isParent?previousOrParentTNode:previousOrParentTNode&&previousOrParentTNode.parent;// Parents cannot cross component boundaries because components will be used in multiple places,
// so it's only set if the view is the same.
var parentInSameView=parent&&parent!==tHostNode;var tParentNode=parentInSameView?parent:null;var tNode=tView.data[adjustedIndex]=createTNode(tView,tParentNode,type,adjustedIndex,name,attrs);// Assign a pointer to the first child node of a given view. The first node is not always the one
// at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has
// the index 1 or more, so we can't just check node index.
if(tView.firstChild===null){tView.firstChild=tNode;}if(previousOrParentTNode){if(isParent&&previousOrParentTNode.child==null&&(tNode.parent!==null||previousOrParentTNode.type===2/* View */)){// We are in the same view, which means we are adding content node to the parent view.
previousOrParentTNode.child=tNode;}else if(!isParent){previousOrParentTNode.next=tNode;}}return tNode;}function assignTViewNodeToLView(tView,tParentNode,index,lView){// View nodes are not stored in data because they can be added / removed at runtime (which
// would cause indices to change). Their TNodes are instead stored in tView.node.
var tNode=tView.node;if(tNode==null){ngDevMode&&tParentNode&&assertNodeOfPossibleTypes(tParentNode,3/* Element */,0/* Container */);tView.node=tNode=createTNode(tView,tParentNode,//
2/* View */,index,null,null);}lView[T_HOST]=tNode;}/**
     * When elements are created dynamically after a view blueprint is created (e.g. through
     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future
     * template passes.
     *
     * @param tView `TView` associated with `LView`
     * @param view The `LView` containing the blueprint to adjust
     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0
     */function allocExpando(tView,lView,numSlotsToAlloc){ngDevMode&&assertGreaterThan(numSlotsToAlloc,0,'The number of slots to alloc should be greater than 0');if(numSlotsToAlloc>0){if(tView.firstCreatePass){for(var i=0;i<numSlotsToAlloc;i++){tView.blueprint.push(null);tView.data.push(null);lView.push(null);}// We should only increment the expando start index if there aren't already directives
// and injectors saved in the "expando" section
if(!tView.expandoInstructions){tView.expandoStartIndex+=numSlotsToAlloc;}else{// Since we're adding the dynamic nodes into the expando section, we need to let the host
// bindings know that they should skip x slots
tView.expandoInstructions.push(numSlotsToAlloc);}}}}//////////////////////////
//// Render
//////////////////////////
/**
     * Processes a view in the creation mode. This includes a number of steps in a specific order:
     * - creating view query functions (if any);
     * - executing a template function in the creation mode;
     * - updating static queries (if any);
     * - creating child components defined in a given view.
     */function renderView(tView,lView,context){ngDevMode&&assertEqual(isCreationMode(lView),true,'Should be run in creation mode');enterView(lView,lView[T_HOST]);try{var viewQuery=tView.viewQuery;if(viewQuery!==null){executeViewQueryFn(1/* Create */,viewQuery,context);}// Execute a template associated with this view, if it exists. A template function might not be
// defined for the root component views.
var templateFn=tView.template;if(templateFn!==null){executeTemplate(tView,lView,templateFn,1/* Create */,context);}// This needs to be set before children are processed to support recursive components.
// This must be set to false immediately after the first creation run because in an
// ngFor loop, all the views will be created together before update mode runs and turns
// off firstCreatePass. If we don't set it here, instances will perform directive
// matching, etc again and again.
if(tView.firstCreatePass){tView.firstCreatePass=false;}// We resolve content queries specifically marked as `static` in creation mode. Dynamic
// content queries are resolved during change detection (i.e. update mode), after embedded
// views are refreshed (see block above).
if(tView.staticContentQueries){refreshContentQueries(tView,lView);}// We must materialize query results before child components are processed
// in case a child component has projected a container. The LContainer needs
// to exist so the embedded views are properly attached by the container.
if(tView.staticViewQueries){executeViewQueryFn(2/* Update */,tView.viewQuery,context);}// Render child component views.
var components=tView.components;if(components!==null){renderChildComponents(lView,components);}}catch(error){// If we didn't manage to get past the first template pass due to
// an error, mark the view as corrupted so we can try to recover.
if(tView.firstCreatePass){tView.incompleteFirstPass=true;}throw error;}finally{lView[FLAGS]&=~4/* CreationMode */;leaveView();}}/**
     * Processes a view in update mode. This includes a number of steps in a specific order:
     * - executing a template function in update mode;
     * - executing hooks;
     * - refreshing queries;
     * - setting host bindings;
     * - refreshing child (embedded and component) views.
     */function refreshView(tView,lView,templateFn,context){ngDevMode&&assertEqual(isCreationMode(lView),false,'Should be run in update mode');var flags=lView[FLAGS];if((flags&256/* Destroyed */)===256/* Destroyed */)return;enterView(lView,lView[T_HOST]);var checkNoChangesMode=getCheckNoChangesMode();try{resetPreOrderHookFlags(lView);setBindingIndex(tView.bindingStartIndex);if(templateFn!==null){executeTemplate(tView,lView,templateFn,2/* Update */,context);}var hooksInitPhaseCompleted=(flags&3/* InitPhaseStateMask */)===3/* InitPhaseCompleted */;// execute pre-order hooks (OnInit, OnChanges, DoCheck)
// PERF WARNING: do NOT extract this to a separate function without running benchmarks
if(!checkNoChangesMode){if(hooksInitPhaseCompleted){var preOrderCheckHooks=tView.preOrderCheckHooks;if(preOrderCheckHooks!==null){executeCheckHooks(lView,preOrderCheckHooks,null);}}else{var preOrderHooks=tView.preOrderHooks;if(preOrderHooks!==null){executeInitAndCheckHooks(lView,preOrderHooks,0/* OnInitHooksToBeRun */,null);}incrementInitPhaseFlags(lView,0/* OnInitHooksToBeRun */);}}// First mark transplanted views that are declared in this lView as needing a refresh at their
// insertion points. This is needed to avoid the situation where the template is defined in this
// `LView` but its declaration appears after the insertion component.
markTransplantedViewsForRefresh(lView);refreshEmbeddedViews(lView);// Content query results must be refreshed before content hooks are called.
if(tView.contentQueries!==null){refreshContentQueries(tView,lView);}// execute content hooks (AfterContentInit, AfterContentChecked)
// PERF WARNING: do NOT extract this to a separate function without running benchmarks
if(!checkNoChangesMode){if(hooksInitPhaseCompleted){var contentCheckHooks=tView.contentCheckHooks;if(contentCheckHooks!==null){executeCheckHooks(lView,contentCheckHooks);}}else{var contentHooks=tView.contentHooks;if(contentHooks!==null){executeInitAndCheckHooks(lView,contentHooks,1/* AfterContentInitHooksToBeRun */);}incrementInitPhaseFlags(lView,1/* AfterContentInitHooksToBeRun */);}}setHostBindingsByExecutingExpandoInstructions(tView,lView);// Refresh child component views.
var components=tView.components;if(components!==null){refreshChildComponents(lView,components);}// View queries must execute after refreshing child components because a template in this view
// could be inserted in a child component. If the view query executes before child component
// refresh, the template might not yet be inserted.
var viewQuery=tView.viewQuery;if(viewQuery!==null){executeViewQueryFn(2/* Update */,viewQuery,context);}// execute view hooks (AfterViewInit, AfterViewChecked)
// PERF WARNING: do NOT extract this to a separate function without running benchmarks
if(!checkNoChangesMode){if(hooksInitPhaseCompleted){var viewCheckHooks=tView.viewCheckHooks;if(viewCheckHooks!==null){executeCheckHooks(lView,viewCheckHooks);}}else{var viewHooks=tView.viewHooks;if(viewHooks!==null){executeInitAndCheckHooks(lView,viewHooks,2/* AfterViewInitHooksToBeRun */);}incrementInitPhaseFlags(lView,2/* AfterViewInitHooksToBeRun */);}}if(tView.firstUpdatePass===true){// We need to make sure that we only flip the flag on successful `refreshView` only
// Don't do this in `finally` block.
// If we did this in `finally` block then an exception could block the execution of styling
// instructions which in turn would be unable to insert themselves into the styling linked
// list. The result of this would be that if the exception would not be throw on subsequent CD
// the styling would be unable to process it data and reflect to the DOM.
tView.firstUpdatePass=false;}// Do not reset the dirty state when running in check no changes mode. We don't want components
// to behave differently depending on whether check no changes is enabled or not. For example:
// Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to
// refresh a `NgClass` binding should work. If we would reset the dirty state in the check
// no changes cycle, the component would be not be dirty for the next update pass. This would
// be different in production mode where the component dirty state is not reset.
if(!checkNoChangesMode){lView[FLAGS]&=~(64/* Dirty */|8/* FirstLViewPass */);}if(lView[FLAGS]&1024/* RefreshTransplantedView */){lView[FLAGS]&=~1024/* RefreshTransplantedView */;updateTransplantedViewCount(lView[PARENT],-1);}}finally{leaveView();}}function renderComponentOrTemplate(tView,lView,templateFn,context){var rendererFactory=lView[RENDERER_FACTORY];var normalExecutionPath=!getCheckNoChangesMode();var creationModeIsActive=isCreationMode(lView);try{if(normalExecutionPath&&!creationModeIsActive&&rendererFactory.begin){rendererFactory.begin();}if(creationModeIsActive){renderView(tView,lView,context);}refreshView(tView,lView,templateFn,context);}finally{if(normalExecutionPath&&!creationModeIsActive&&rendererFactory.end){rendererFactory.end();}}}function executeTemplate(tView,lView,templateFn,rf,context){var prevSelectedIndex=getSelectedIndex();try{setSelectedIndex(-1);if(rf&2/* Update */&&lView.length>HEADER_OFFSET){// When we're updating, inherently select 0 so we don't
// have to generate that instruction for most update blocks.
selectIndexInternal(tView,lView,0,getCheckNoChangesMode());}templateFn(rf,context);}finally{setSelectedIndex(prevSelectedIndex);}}//////////////////////////
//// Element
//////////////////////////
function executeContentQueries(tView,tNode,lView){if(isContentQueryHost(tNode)){var start=tNode.directiveStart;var end=tNode.directiveEnd;for(var directiveIndex=start;directiveIndex<end;directiveIndex++){var def=tView.data[directiveIndex];if(def.contentQueries){def.contentQueries(1/* Create */,lView[directiveIndex],directiveIndex);}}}}/**
     * Creates directive instances.
     */function createDirectivesInstances(tView,lView,tNode){if(!getBindingsEnabled())return;instantiateAllDirectives(tView,lView,tNode,getNativeByTNode(tNode,lView));if((tNode.flags&128/* hasHostBindings */)===128/* hasHostBindings */){invokeDirectivesHostBindings(tView,lView,tNode);}}/**
     * Takes a list of local names and indices and pushes the resolved local variable values
     * to LView in the same order as they are loaded in the template with load().
     */function saveResolvedLocalsInData(viewData,tNode,localRefExtractor){if(localRefExtractor===void 0){localRefExtractor=getNativeByTNode;}var localNames=tNode.localNames;if(localNames!==null){var localIndex=tNode.index+1;for(var i=0;i<localNames.length;i+=2){var index=localNames[i+1];var value=index===-1?localRefExtractor(tNode,viewData):viewData[index];viewData[localIndex++]=value;}}}/**
     * Gets TView from a template function or creates a new TView
     * if it doesn't already exist.
     *
     * @param def ComponentDef
     * @returns TView
     */function getOrCreateTComponentView(def){var tView=def.tView;// Create a TView if there isn't one, or recreate it if the first create pass didn't
// complete successfuly since we can't know for sure whether it's in a usable shape.
if(tView===null||tView.incompleteFirstPass){return def.tView=createTView(1/* Component */,-1,def.template,def.decls,def.vars,def.directiveDefs,def.pipeDefs,def.viewQuery,def.schemas,def.consts);}return tView;}/**
     * Creates a TView instance
     *
     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic
     * @param templateFn Template function
     * @param decls The number of nodes, local refs, and pipes in this template
     * @param directives Registry of directives for this view
     * @param pipes Registry of pipes for this view
     * @param viewQuery View queries for this view
     * @param schemas Schemas for this view
     * @param consts Constants for this view
     */function createTView(type,viewIndex,templateFn,decls,vars,directives,pipes,viewQuery,schemas,consts){ngDevMode&&ngDevMode.tView++;var bindingStartIndex=HEADER_OFFSET+decls;// This length does not yet contain host bindings from child directives because at this point,
// we don't know which directives are active on this template. As soon as a directive is matched
// that has a host binding, we will update the blueprint with that def's hostVars count.
var initialViewLength=bindingStartIndex+vars;var blueprint=createViewBlueprint(bindingStartIndex,initialViewLength);return blueprint[TVIEW]=ngDevMode?new TViewConstructor(type,viewIndex,// id: number,
blueprint,// blueprint: LView,
templateFn,// template: ComponentTemplate<{}>|null,
null,// queries: TQueries|null
viewQuery,// viewQuery: ViewQueriesFunction<{}>|null,
null,// node: TViewNode|TElementNode|null,
cloneToTViewData(blueprint).fill(null,bindingStartIndex),// data: TData,
bindingStartIndex,// bindingStartIndex: number,
initialViewLength,// expandoStartIndex: number,
null,// expandoInstructions: ExpandoInstructions|null,
true,// firstCreatePass: boolean,
true,// firstUpdatePass: boolean,
false,// staticViewQueries: boolean,
false,// staticContentQueries: boolean,
null,// preOrderHooks: HookData|null,
null,// preOrderCheckHooks: HookData|null,
null,// contentHooks: HookData|null,
null,// contentCheckHooks: HookData|null,
null,// viewHooks: HookData|null,
null,// viewCheckHooks: HookData|null,
null,// destroyHooks: DestroyHookData|null,
null,// cleanup: any[]|null,
null,// contentQueries: number[]|null,
null,// components: number[]|null,
typeof directives==='function'?directives():directives,// directiveRegistry: DirectiveDefList|null,
typeof pipes==='function'?pipes():pipes,// pipeRegistry: PipeDefList|null,
null,// firstChild: TNode|null,
schemas,// schemas: SchemaMetadata[]|null,
consts,// consts: TConstants|null
false// incompleteFirstPass: boolean
):{type:type,id:viewIndex,blueprint:blueprint,template:templateFn,queries:null,viewQuery:viewQuery,node:null,data:blueprint.slice().fill(null,bindingStartIndex),bindingStartIndex:bindingStartIndex,expandoStartIndex:initialViewLength,expandoInstructions:null,firstCreatePass:true,firstUpdatePass:true,staticViewQueries:false,staticContentQueries:false,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:typeof directives==='function'?directives():directives,pipeRegistry:typeof pipes==='function'?pipes():pipes,firstChild:null,schemas:schemas,consts:consts,incompleteFirstPass:false};}function createViewBlueprint(bindingStartIndex,initialViewLength){var blueprint=ngDevMode?new LViewBlueprint():[];for(var i=0;i<initialViewLength;i++){blueprint.push(i<bindingStartIndex?null:NO_CHANGE);}return blueprint;}function createError(text,token){return new Error("Renderer: "+text+" ["+stringifyForError(token)+"]");}function assertHostNodeExists(rElement,elementOrSelector){if(!rElement){if(typeof elementOrSelector==='string'){throw createError('Host node with selector not found:',elementOrSelector);}else{throw createError('Host node is required:',elementOrSelector);}}}/**
     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.
     *
     * @param rendererFactory Factory function to create renderer instance.
     * @param elementOrSelector Render element or CSS selector to locate the element.
     * @param encapsulation View Encapsulation defined for component that requests host element.
     */function locateHostElement(renderer,elementOrSelector,encapsulation){if(isProceduralRenderer(renderer)){// When using native Shadow DOM, do not clear host element to allow native slot projection
var preserveContent=encapsulation===exports.ViewEncapsulation.ShadowDom;return renderer.selectRootElement(elementOrSelector,preserveContent);}var rElement=typeof elementOrSelector==='string'?renderer.querySelector(elementOrSelector):elementOrSelector;ngDevMode&&assertHostNodeExists(rElement,elementOrSelector);// Always clear host element's content when Renderer3 is in use. For procedural renderer case we
// make it depend on whether ShadowDom encapsulation is used (in which case the content should be
// preserved to allow native slot projection). ShadowDom encapsulation requires procedural
// renderer, and procedural renderer case is handled above.
rElement.textContent='';return rElement;}/**
     * Saves context for this cleanup function in LView.cleanupInstances.
     *
     * On the first template pass, saves in TView:
     * - Cleanup function
     * - Index of context we just saved in LView.cleanupInstances
     */function storeCleanupWithContext(tView,lView,context,cleanupFn){var lCleanup=getLCleanup(lView);lCleanup.push(context);if(tView.firstCreatePass){getTViewCleanup(tView).push(cleanupFn,lCleanup.length-1);}}/**
     * Saves the cleanup function itself in LView.cleanupInstances.
     *
     * This is necessary for functions that are wrapped with their contexts, like in renderer2
     * listeners.
     *
     * On the first template pass, the index of the cleanup function is saved in TView.
     */function storeCleanupFn(tView,lView,cleanupFn){getLCleanup(lView).push(cleanupFn);if(tView.firstCreatePass){getTViewCleanup(tView).push(lView[CLEANUP].length-1,null);}}/**
     * Constructs a TNode object from the arguments.
     *
     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)
     * @param type The type of the node
     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET
     * @param tagName The tag name of the node
     * @param attrs The attributes defined on this node
     * @param tViews Any TViews attached to this node
     * @returns the TNode object
     */function createTNode(tView,tParent,type,adjustedIndex,tagName,attrs){ngDevMode&&ngDevMode.tNode++;var injectorIndex=tParent?tParent.injectorIndex:-1;return ngDevMode?new TNodeDebug(tView,// tView_: TView
type,// type: TNodeType
adjustedIndex,// index: number
injectorIndex,// injectorIndex: number
-1,// directiveStart: number
-1,// directiveEnd: number
-1,// directiveStylingLast: number
null,// propertyBindings: number[]|null
0,// flags: TNodeFlags
0,// providerIndexes: TNodeProviderIndexes
tagName,// tagName: string|null
attrs,// attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null
null,// mergedAttrs
null,// localNames: (string|number)[]|null
undefined,// initialInputs: (string[]|null)[]|null|undefined
null,// inputs: PropertyAliases|null
null,// outputs: PropertyAliases|null
null,// tViews: ITView|ITView[]|null
null,// next: ITNode|null
null,// projectionNext: ITNode|null
null,// child: ITNode|null
tParent,// parent: TElementNode|TContainerNode|null
null,// projection: number|(ITNode|RNode[])[]|null
null,// styles: string|null
null,// stylesWithoutHost: string|null
undefined,// residualStyles: string|null
null,// classes: string|null
null,// classesWithoutHost: string|null
undefined,// residualClasses: string|null
0,// classBindings: TStylingRange;
0):{type:type,index:adjustedIndex,injectorIndex:injectorIndex,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,tagName:tagName,attrs:attrs,mergedAttrs:null,localNames:null,initialInputs:undefined,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:tParent,projection:null,styles:null,stylesWithoutHost:null,residualStyles:undefined,classes:null,classesWithoutHost:null,residualClasses:undefined,classBindings:0,styleBindings:0};}function generatePropertyAliases(inputAliasMap,directiveDefIdx,propStore){for(var publicName in inputAliasMap){if(inputAliasMap.hasOwnProperty(publicName)){propStore=propStore===null?{}:propStore;var internalName=inputAliasMap[publicName];if(propStore.hasOwnProperty(publicName)){propStore[publicName].push(directiveDefIdx,internalName);}else{propStore[publicName]=[directiveDefIdx,internalName];}}}return propStore;}/**
     * Initializes data structures required to work with directive outputs and outputs.
     * Initialization is done for all directives matched on a given TNode.
     */function initializeInputAndOutputAliases(tView,tNode){ngDevMode&&assertFirstCreatePass(tView);var start=tNode.directiveStart;var end=tNode.directiveEnd;var defs=tView.data;var tNodeAttrs=tNode.attrs;var inputsFromAttrs=ngDevMode?new TNodeInitialInputs():[];var inputsStore=null;var outputsStore=null;for(var i=start;i<end;i++){var directiveDef=defs[i];var directiveInputs=directiveDef.inputs;// Do not use unbound attributes as inputs to structural directives, since structural
// directive inputs can only be set using microsyntax (e.g. `<div *dir="exp">`).
// TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which
// should be set for inline templates.
var initialInputs=tNodeAttrs!==null&&!isInlineTemplate(tNode)?generateInitialInputs(directiveInputs,tNodeAttrs):null;inputsFromAttrs.push(initialInputs);inputsStore=generatePropertyAliases(directiveInputs,i,inputsStore);outputsStore=generatePropertyAliases(directiveDef.outputs,i,outputsStore);}if(inputsStore!==null){if(inputsStore.hasOwnProperty('class')){tNode.flags|=16/* hasClassInput */;}if(inputsStore.hasOwnProperty('style')){tNode.flags|=32/* hasStyleInput */;}}tNode.initialInputs=inputsFromAttrs;tNode.inputs=inputsStore;tNode.outputs=outputsStore;}/**
     * Mapping between attributes names that don't correspond to their element property names.
     *
     * Performance note: this function is written as a series of if checks (instead of, say, a property
     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of
     * mapping property names. Do NOT change without benchmarking.
     *
     * Note: this mapping has to be kept in sync with the equally named mapping in the template
     * type-checking machinery of ngtsc.
     */function mapPropName(name){if(name==='class')return'className';if(name==='for')return'htmlFor';if(name==='formaction')return'formAction';if(name==='innerHtml')return'innerHTML';if(name==='readonly')return'readOnly';if(name==='tabindex')return'tabIndex';return name;}function elementPropertyInternal(tView,tNode,lView,propName,value,renderer,sanitizer,nativeOnly){ngDevMode&&assertNotSame(value,NO_CHANGE,'Incoming value should never be NO_CHANGE.');var element=getNativeByTNode(tNode,lView);var inputData=tNode.inputs;var dataValue;if(!nativeOnly&&inputData!=null&&(dataValue=inputData[propName])){setInputsForProperty(tView,lView,dataValue,propName,value);if(isComponentHost(tNode))markDirtyIfOnPush(lView,tNode.index);if(ngDevMode){setNgReflectProperties(lView,element,tNode.type,dataValue,value);}}else if(tNode.type===3/* Element */){propName=mapPropName(propName);if(ngDevMode){validateAgainstEventProperties(propName);if(!validateProperty(tView,lView,element,propName,tNode)){// Return here since we only log warnings for unknown properties.
warnAboutUnknownProperty(propName,tNode);return;}ngDevMode.rendererSetProperty++;}// It is assumed that the sanitizer is only added when the compiler determines that the
// property is risky, so sanitization can be done without further checks.
value=sanitizer!=null?sanitizer(value,tNode.tagName||'',propName):value;if(isProceduralRenderer(renderer)){renderer.setProperty(element,propName,value);}else if(!isAnimationProp(propName)){element.setProperty?element.setProperty(propName,value):element[propName]=value;}}else if(tNode.type===0/* Container */){// If the node is a container and the property didn't
// match any of the inputs or schemas we should throw.
if(ngDevMode&&!matchingSchemas(tView,lView,tNode.tagName)){warnAboutUnknownProperty(propName,tNode);}}}/** If node is an OnPush component, marks its LView dirty. */function markDirtyIfOnPush(lView,viewIndex){ngDevMode&&assertLView(lView);var childComponentLView=getComponentLViewByIndex(viewIndex,lView);if(!(childComponentLView[FLAGS]&16/* CheckAlways */)){childComponentLView[FLAGS]|=64/* Dirty */;}}function setNgReflectProperty(lView,element,type,attrName,value){var _a;var renderer=lView[RENDERER];attrName=normalizeDebugBindingName(attrName);var debugValue=normalizeDebugBindingValue(value);if(type===3/* Element */){if(value==null){isProceduralRenderer(renderer)?renderer.removeAttribute(element,attrName):element.removeAttribute(attrName);}else{isProceduralRenderer(renderer)?renderer.setAttribute(element,attrName,debugValue):element.setAttribute(attrName,debugValue);}}else{var textContent="bindings="+JSON.stringify((_a={},_a[attrName]=debugValue,_a),null,2);if(isProceduralRenderer(renderer)){renderer.setValue(element,textContent);}else{element.textContent=textContent;}}}function setNgReflectProperties(lView,element,type,dataValue,value){if(type===3/* Element */||type===0/* Container */){/**
             * dataValue is an array containing runtime input or output names for the directives:
             * i+0: directive instance index
             * i+1: privateName
             *
             * e.g. [0, 'change', 'change-minified']
             * we want to set the reflected property with the privateName: dataValue[i+1]
             */for(var i=0;i<dataValue.length;i+=2){setNgReflectProperty(lView,element,type,dataValue[i+1],value);}}}function validateProperty(tView,lView,element,propName,tNode){// If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT
// mode where this check happens at compile time. In JIT mode, `schemas` is always present and
// defined as an array (as an empty array in case `schemas` field is not defined) and we should
// execute the check below.
if(tView.schemas===null)return true;// The property is considered valid if the element matches the schema, it exists on the element
// or it is synthetic, and we are in a browser context (web worker nodes should be skipped).
if(matchingSchemas(tView,lView,tNode.tagName)||propName in element||isAnimationProp(propName)){return true;}// Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we
// need to account for both here, while being careful for `typeof null` also returning 'object'.
return typeof Node==='undefined'||Node===null||!(element instanceof Node);}function matchingSchemas(tView,lView,tagName){var schemas=tView.schemas;if(schemas!==null){for(var i=0;i<schemas.length;i++){var schema=schemas[i];if(schema===NO_ERRORS_SCHEMA||schema===CUSTOM_ELEMENTS_SCHEMA&&tagName&&tagName.indexOf('-')>-1){return true;}}}return false;}/**
     * Logs a warning that a property is not supported on an element.
     * @param propName Name of the invalid property.
     * @param tNode Node on which we encountered the property.
     */function warnAboutUnknownProperty(propName,tNode){console.warn("Can't bind to '"+propName+"' since it isn't a known property of '"+tNode.tagName+"'.");}/**
     * Instantiate a root component.
     */function instantiateRootComponent(tView,lView,def){var rootTNode=getPreviousOrParentTNode();if(tView.firstCreatePass){if(def.providersResolver)def.providersResolver(def);generateExpandoInstructionBlock(tView,rootTNode,1);baseResolveDirective(tView,lView,def);}var directive=getNodeInjectable(lView,tView,lView.length-1,rootTNode);attachPatchData(directive,lView);var _native6=getNativeByTNode(rootTNode,lView);if(_native6){attachPatchData(_native6,lView);}return directive;}/**
     * Resolve the matched directives on a node.
     */function resolveDirectives(tView,lView,tNode,localRefs){// Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in
// tsickle.
ngDevMode&&assertFirstCreatePass(tView);var hasDirectives=false;if(getBindingsEnabled()){var directiveDefs=findDirectiveDefMatches(tView,lView,tNode);var exportsMap=localRefs===null?null:{'':-1};if(directiveDefs!==null){var totalDirectiveHostVars=0;hasDirectives=true;initTNodeFlags(tNode,tView.data.length,directiveDefs.length);// When the same token is provided by several directives on the same node, some rules apply in
// the viewEngine:
// - viewProviders have priority over providers
// - the last directive in NgModule.declarations has priority over the previous one
// So to match these rules, the order in which providers are added in the arrays is very
// important.
for(var i=0;i<directiveDefs.length;i++){var def=directiveDefs[i];if(def.providersResolver)def.providersResolver(def);}generateExpandoInstructionBlock(tView,tNode,directiveDefs.length);var preOrderHooksFound=false;var preOrderCheckHooksFound=false;for(var i=0;i<directiveDefs.length;i++){var def=directiveDefs[i];// Merge the attrs in the order of matches. This assumes that the first directive is the
// component itself, so that the component has the least priority.
tNode.mergedAttrs=mergeHostAttrs(tNode.mergedAttrs,def.hostAttrs);baseResolveDirective(tView,lView,def);saveNameToExportMap(tView.data.length-1,def,exportsMap);if(def.contentQueries!==null)tNode.flags|=8/* hasContentQuery */;if(def.hostBindings!==null||def.hostAttrs!==null||def.hostVars!==0)tNode.flags|=128/* hasHostBindings */;// Only push a node index into the preOrderHooks array if this is the first
// pre-order hook found on this node.
if(!preOrderHooksFound&&(def.onChanges||def.onInit||def.doCheck)){// We will push the actual hook function into this array later during dir instantiation.
// We cannot do it now because we must ensure hooks are registered in the same
// order that directives are created (i.e. injection order).
(tView.preOrderHooks||(tView.preOrderHooks=[])).push(tNode.index-HEADER_OFFSET);preOrderHooksFound=true;}if(!preOrderCheckHooksFound&&(def.onChanges||def.doCheck)){(tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(tNode.index-HEADER_OFFSET);preOrderCheckHooksFound=true;}addHostBindingsToExpandoInstructions(tView,def);totalDirectiveHostVars+=def.hostVars;}initializeInputAndOutputAliases(tView,tNode);growHostVarsSpace(tView,lView,totalDirectiveHostVars);}if(exportsMap)cacheMatchingLocalNames(tNode,localRefs,exportsMap);}// Merge the template attrs last so that they have the highest priority.
tNode.mergedAttrs=mergeHostAttrs(tNode.mergedAttrs,tNode.attrs);return hasDirectives;}/**
     * Add `hostBindings` to the `TView.expandoInstructions`.
     *
     * @param tView `TView` to which the `hostBindings` should be added.
     * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.
     */function addHostBindingsToExpandoInstructions(tView,def){ngDevMode&&assertFirstCreatePass(tView);var expando=tView.expandoInstructions;// TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is
// suboptimal for performance. `def.hostBindings` may be null,
// but we still need to push null to the array as a placeholder
// to ensure the directive counter is incremented (so host
// binding functions always line up with the corrective directive).
// This is suboptimal for performance. See `currentDirectiveIndex`
//  comment in `setHostBindingsByExecutingExpandoInstructions` for more
// details.  expando.push(def.hostBindings);
expando.push(def.hostBindings);var hostVars=def.hostVars;if(hostVars!==0){expando.push(def.hostVars);}}/**
     * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.
     *
     * To support locality we don't know ahead of time how many `hostVars` of the containing directives
     * we need to allocate. For this reason we allow growing these data structures as we discover more
     * directives to accommodate them.
     *
     * @param tView `TView` which needs to be grown.
     * @param lView `LView` which needs to be grown.
     * @param count Size by which we need to grow the data structures.
     */function growHostVarsSpace(tView,lView,count){ngDevMode&&assertFirstCreatePass(tView);ngDevMode&&assertSame(tView,lView[TVIEW],'`LView` must be associated with `TView`!');for(var i=0;i<count;i++){lView.push(NO_CHANGE);tView.blueprint.push(NO_CHANGE);tView.data.push(null);}}/**
     * Instantiate all the directives that were previously resolved on the current node.
     */function instantiateAllDirectives(tView,lView,tNode,_native7){var start=tNode.directiveStart;var end=tNode.directiveEnd;if(!tView.firstCreatePass){getOrCreateNodeInjectorForNode(tNode,lView);}attachPatchData(_native7,lView);var initialInputs=tNode.initialInputs;for(var i=start;i<end;i++){var def=tView.data[i];var isComponent=isComponentDef(def);if(isComponent){ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */);addComponentLogic(lView,tNode,def);}var directive=getNodeInjectable(lView,tView,i,tNode);attachPatchData(directive,lView);if(initialInputs!==null){setInputsFromAttrs(lView,i-start,directive,def,tNode,initialInputs);}if(isComponent){var componentView=getComponentLViewByIndex(tNode.index,lView);componentView[CONTEXT]=directive;}}}function invokeDirectivesHostBindings(tView,lView,tNode){var start=tNode.directiveStart;var end=tNode.directiveEnd;var expando=tView.expandoInstructions;var firstCreatePass=tView.firstCreatePass;var elementIndex=tNode.index-HEADER_OFFSET;var currentDirectiveIndex=getCurrentDirectiveIndex();try{setSelectedIndex(elementIndex);for(var dirIndex=start;dirIndex<end;dirIndex++){var def=tView.data[dirIndex];var directive=lView[dirIndex];setCurrentDirectiveIndex(dirIndex);if(def.hostBindings!==null||def.hostVars!==0||def.hostAttrs!==null){invokeHostBindingsInCreationMode(def,directive);}else if(firstCreatePass){expando.push(null);}}}finally{setSelectedIndex(-1);setCurrentDirectiveIndex(currentDirectiveIndex);}}/**
     * Invoke the host bindings in creation mode.
     *
     * @param def `DirectiveDef` which may contain the `hostBindings` function.
     * @param directive Instance of directive.
     */function invokeHostBindingsInCreationMode(def,directive){if(def.hostBindings!==null){def.hostBindings(1/* Create */,directive);}}/**
     * Generates a new block in TView.expandoInstructions for this node.
     *
     * Each expando block starts with the element index (turned negative so we can distinguish
     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.
     */function generateExpandoInstructionBlock(tView,tNode,directiveCount){ngDevMode&&assertEqual(tView.firstCreatePass,true,'Expando block should only be generated on first create pass.');// Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which
// requires non standard math arithmetic and it can prevent VM optimizations.
// `0-0` will always produce `0` and will not cause a potential deoptimization in VM.
var elementIndex=HEADER_OFFSET-tNode.index;var providerStartIndex=tNode.providerIndexes&65535/* ProvidersStartIndexMask */;var providerCount=tView.data.length-providerStartIndex;(tView.expandoInstructions||(tView.expandoInstructions=[])).push(elementIndex,providerCount,directiveCount);}/**
     * Matches the current node against all available selectors.
     * If a component is matched (at most one), it is returned in first position in the array.
     */function findDirectiveDefMatches(tView,viewData,tNode){ngDevMode&&assertFirstCreatePass(tView);ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,4/* ElementContainer */,0/* Container */);var registry=tView.directiveRegistry;var matches=null;if(registry){for(var i=0;i<registry.length;i++){var def=registry[i];if(isNodeMatchingSelectorList(tNode,def.selectors,/* isProjectionMode */false)){matches||(matches=ngDevMode?new MatchesArray():[]);diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,viewData),tView,def.type);if(isComponentDef(def)){if(tNode.flags&2/* isComponentHost */)throwMultipleComponentError(tNode);markAsComponentHost(tView,tNode);// The component is always stored first with directives after.
matches.unshift(def);}else{matches.push(def);}}}}return matches;}/**
     * Marks a given TNode as a component's host. This consists of:
     * - setting appropriate TNode flags;
     * - storing index of component's host element so it will be queued for view refresh during CD.
     */function markAsComponentHost(tView,hostTNode){ngDevMode&&assertFirstCreatePass(tView);hostTNode.flags|=2/* isComponentHost */;(tView.components||(tView.components=ngDevMode?new TViewComponents():[])).push(hostTNode.index);}/** Caches local names and their matching directive indices for query and template lookups. */function cacheMatchingLocalNames(tNode,localRefs,exportsMap){if(localRefs){var localNames=tNode.localNames=ngDevMode?new TNodeLocalNames():[];// Local names must be stored in tNode in the same order that localRefs are defined
// in the template to ensure the data is loaded in the same slots as their refs
// in the template (for template queries).
for(var i=0;i<localRefs.length;i+=2){var index=exportsMap[localRefs[i+1]];if(index==null)throw new Error("Export of name '"+localRefs[i+1]+"' not found!");localNames.push(localRefs[i],index);}}}/**
     * Builds up an export map as directives are created, so local refs can be quickly mapped
     * to their directive instances.
     */function saveNameToExportMap(index,def,exportsMap){if(exportsMap){if(def.exportAs){for(var i=0;i<def.exportAs.length;i++){exportsMap[def.exportAs[i]]=index;}}if(isComponentDef(def))exportsMap['']=index;}}/**
     * Initializes the flags on the current node, setting all indices to the initial index,
     * the directive count to 0, and adding the isComponent flag.
     * @param index the initial index
     */function initTNodeFlags(tNode,index,numberOfDirectives){ngDevMode&&assertNotEqual(numberOfDirectives,tNode.directiveEnd-tNode.directiveStart,'Reached the max number of directives');tNode.flags|=1/* isDirectiveHost */;// When the first directive is created on a node, save the index
tNode.directiveStart=index;tNode.directiveEnd=index+numberOfDirectives;tNode.providerIndexes=index;}function baseResolveDirective(tView,viewData,def){tView.data.push(def);var directiveFactory=def.factory||(def.factory=getFactoryDef(def.type,true));var nodeInjectorFactory=new NodeInjectorFactory(directiveFactory,isComponentDef(def),null);tView.blueprint.push(nodeInjectorFactory);viewData.push(nodeInjectorFactory);}function addComponentLogic(lView,hostTNode,def){var _native8=getNativeByTNode(hostTNode,lView);var tView=getOrCreateTComponentView(def);// Only component views should be added to the view tree directly. Embedded views are
// accessed through their containers because they may be removed / re-added later.
var rendererFactory=lView[RENDERER_FACTORY];var componentView=addToViewTree(lView,createLView(lView,tView,null,def.onPush?64/* Dirty */:16/* CheckAlways */,_native8,hostTNode,rendererFactory,rendererFactory.createRenderer(_native8,def)));// Component view will always be created before any injected LContainers,
// so this is a regular element, wrap it with the component view
lView[hostTNode.index]=componentView;}function elementAttributeInternal(tNode,lView,name,value,sanitizer,namespace){ngDevMode&&assertNotSame(value,NO_CHANGE,'Incoming value should never be NO_CHANGE.');ngDevMode&&validateAgainstEventAttributes(name);var element=getNativeByTNode(tNode,lView);var renderer=lView[RENDERER];if(value==null){ngDevMode&&ngDevMode.rendererRemoveAttribute++;isProceduralRenderer(renderer)?renderer.removeAttribute(element,name,namespace):element.removeAttribute(name);}else{ngDevMode&&ngDevMode.rendererSetAttribute++;var strValue=sanitizer==null?renderStringify(value):sanitizer(value,tNode.tagName||'',name);if(isProceduralRenderer(renderer)){renderer.setAttribute(element,name,strValue,namespace);}else{namespace?element.setAttributeNS(namespace,name,strValue):element.setAttribute(name,strValue);}}}/**
     * Sets initial input properties on directive instances from attribute data
     *
     * @param lView Current LView that is being processed.
     * @param directiveIndex Index of the directive in directives array
     * @param instance Instance of the directive on which to set the initial inputs
     * @param def The directive def that contains the list of inputs
     * @param tNode The static data for this node
     */function setInputsFromAttrs(lView,directiveIndex,instance,def,tNode,initialInputData){var initialInputs=initialInputData[directiveIndex];if(initialInputs!==null){var setInput=def.setInput;for(var i=0;i<initialInputs.length;){var publicName=initialInputs[i++];var privateName=initialInputs[i++];var value=initialInputs[i++];if(setInput!==null){def.setInput(instance,value,publicName,privateName);}else{instance[privateName]=value;}if(ngDevMode){var nativeElement=getNativeByTNode(tNode,lView);setNgReflectProperty(lView,nativeElement,tNode.type,privateName,value);}}}}/**
     * Generates initialInputData for a node and stores it in the template's static storage
     * so subsequent template invocations don't have to recalculate it.
     *
     * initialInputData is an array containing values that need to be set as input properties
     * for directives on this node, but only once on creation. We need this array to support
     * the case where you set an @Input property of a directive using attribute-like syntax.
     * e.g. if you have a `name` @Input, you can set it once like this:
     *
     * <my-component name="Bess"></my-component>
     *
     * @param inputs The list of inputs from the directive def
     * @param attrs The static attrs on this node
     */function generateInitialInputs(inputs,attrs){var inputsToStore=null;var i=0;while(i<attrs.length){var attrName=attrs[i];if(attrName===0/* NamespaceURI */){// We do not allow inputs on namespaced attributes.
i+=4;continue;}else if(attrName===5/* ProjectAs */){// Skip over the `ngProjectAs` value.
i+=2;continue;}// If we hit any other attribute markers, we're done anyway. None of those are valid inputs.
if(typeof attrName==='number')break;if(inputs.hasOwnProperty(attrName)){if(inputsToStore===null)inputsToStore=[];inputsToStore.push(attrName,inputs[attrName],attrs[i+1]);}i+=2;}return inputsToStore;}//////////////////////////
//// ViewContainer & View
//////////////////////////
// Not sure why I need to do `any` here but TS complains later.
var LContainerArray=(typeof ngDevMode==='undefined'||ngDevMode)&&initNgDevMode()&&createNamedArrayType('LContainer');/**
     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.
     *
     * @param hostNative The host element for the LContainer
     * @param hostTNode The host TNode for the LContainer
     * @param currentView The parent view of the LContainer
     * @param native The native comment element
     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case
     * @returns LContainer
     */function createLContainer(hostNative,currentView,_native9,tNode){ngDevMode&&assertLView(currentView);ngDevMode&&!isProceduralRenderer(currentView[RENDERER])&&assertDomNode(_native9);// https://jsperf.com/array-literal-vs-new-array-really
var lContainer=new(ngDevMode?LContainerArray:Array)(hostNative,// host native
true,// Boolean `true` in this position signifies that this is an `LContainer`
false,// has transplanted views
currentView,// parent
null,// next
0,// transplanted views to refresh count
tNode,// t_host
_native9,// native,
null,// view refs
null);ngDevMode&&assertEqual(lContainer.length,CONTAINER_HEADER_OFFSET,'Should allocate correct number of slots for LContainer header.');ngDevMode&&attachLContainerDebug(lContainer);return lContainer;}/**
     * Goes over embedded views (ones created through ViewContainerRef APIs) and refreshes
     * them by executing an associated template function.
     */function refreshEmbeddedViews(lView){for(var lContainer=getFirstLContainer(lView);lContainer!==null;lContainer=getNextLContainer(lContainer)){for(var i=CONTAINER_HEADER_OFFSET;i<lContainer.length;i++){var embeddedLView=lContainer[i];var embeddedTView=embeddedLView[TVIEW];ngDevMode&&assertDefined(embeddedTView,'TView must be allocated');if(viewAttachedToChangeDetector(embeddedLView)){refreshView(embeddedTView,embeddedLView,embeddedTView.template,embeddedLView[CONTEXT]);}}}}/**
     * Mark transplanted views as needing to be refreshed at their insertion points.
     *
     * @param lView The `LView` that may have transplanted views.
     */function markTransplantedViewsForRefresh(lView){for(var lContainer=getFirstLContainer(lView);lContainer!==null;lContainer=getNextLContainer(lContainer)){if(!lContainer[HAS_TRANSPLANTED_VIEWS])continue;var movedViews=lContainer[MOVED_VIEWS];ngDevMode&&assertDefined(movedViews,'Transplanted View flags set but missing MOVED_VIEWS');for(var i=0;i<movedViews.length;i++){var movedLView=movedViews[i];var insertionLContainer=movedLView[PARENT];ngDevMode&&assertLContainer(insertionLContainer);// We don't want to increment the counter if the moved LView was already marked for
// refresh.
if((movedLView[FLAGS]&1024/* RefreshTransplantedView */)===0){updateTransplantedViewCount(insertionLContainer,1);}// Note, it is possible that the `movedViews` is tracking views that are transplanted *and*
// those that aren't (declaration component === insertion component). In the latter case,
// it's fine to add the flag, as we will clear it immediately in
// `refreshEmbeddedViews` for the view currently being refreshed.
movedLView[FLAGS]|=1024/* RefreshTransplantedView */;}}}/////////////
/**
     * Refreshes components by entering the component view and processing its bindings, queries, etc.
     *
     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)
     */function refreshComponent(hostLView,componentHostIdx){ngDevMode&&assertEqual(isCreationMode(hostLView),false,'Should be run in update mode');var componentView=getComponentLViewByIndex(componentHostIdx,hostLView);// Only attached components that are CheckAlways or OnPush and dirty should be refreshed
if(viewAttachedToChangeDetector(componentView)){var tView=componentView[TVIEW];if(componentView[FLAGS]&(16/* CheckAlways */|64/* Dirty */)){refreshView(tView,componentView,tView.template,componentView[CONTEXT]);}else if(componentView[TRANSPLANTED_VIEWS_TO_REFRESH]>0){// Only attached components that are CheckAlways or OnPush and dirty should be refreshed
refreshContainsDirtyView(componentView);}}}/**
     * Refreshes all transplanted views marked with `LViewFlags.RefreshTransplantedView` that are
     * children or descendants of the given lView.
     *
     * @param lView The lView which contains descendant transplanted views that need to be refreshed.
     */function refreshContainsDirtyView(lView){for(var lContainer=getFirstLContainer(lView);lContainer!==null;lContainer=getNextLContainer(lContainer)){for(var i=CONTAINER_HEADER_OFFSET;i<lContainer.length;i++){var embeddedLView=lContainer[i];if(embeddedLView[FLAGS]&1024/* RefreshTransplantedView */){var embeddedTView=embeddedLView[TVIEW];ngDevMode&&assertDefined(embeddedTView,'TView must be allocated');refreshView(embeddedTView,embeddedLView,embeddedTView.template,embeddedLView[CONTEXT]);}else if(embeddedLView[TRANSPLANTED_VIEWS_TO_REFRESH]>0){refreshContainsDirtyView(embeddedLView);}}}var tView=lView[TVIEW];// Refresh child component views.
var components=tView.components;if(components!==null){for(var i=0;i<components.length;i++){var componentView=getComponentLViewByIndex(components[i],lView);// Only attached components that are CheckAlways or OnPush and dirty should be refreshed
if(viewAttachedToChangeDetector(componentView)&&componentView[TRANSPLANTED_VIEWS_TO_REFRESH]>0){refreshContainsDirtyView(componentView);}}}}function renderComponent(hostLView,componentHostIdx){ngDevMode&&assertEqual(isCreationMode(hostLView),true,'Should be run in creation mode');var componentView=getComponentLViewByIndex(componentHostIdx,hostLView);var componentTView=componentView[TVIEW];syncViewWithBlueprint(componentTView,componentView);renderView(componentTView,componentView,componentView[CONTEXT]);}/**
     * Syncs an LView instance with its blueprint if they have gotten out of sync.
     *
     * Typically, blueprints and their view instances should always be in sync, so the loop here
     * will be skipped. However, consider this case of two components side-by-side:
     *
     * App template:
     * ```
     * <comp></comp>
     * <comp></comp>
     * ```
     *
     * The following will happen:
     * 1. App template begins processing.
     * 2. First <comp> is matched as a component and its LView is created.
     * 3. Second <comp> is matched as a component and its LView is created.
     * 4. App template completes processing, so it's time to check child templates.
     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.
     * 6. Second <comp> template is checked. Its blueprint has been updated by the first
     * <comp> template, but its LView was created before this update, so it is out of sync.
     *
     * Note that embedded views inside ngFor loops will never be out of sync because these views
     * are processed as soon as they are created.
     *
     * @param tView The `TView` that contains the blueprint for syncing
     * @param lView The view to sync
     */function syncViewWithBlueprint(tView,lView){for(var i=lView.length;i<tView.blueprint.length;i++){lView.push(tView.blueprint[i]);}}/**
     * Adds LView or LContainer to the end of the current view tree.
     *
     * This structure will be used to traverse through nested views to remove listeners
     * and call onDestroy callbacks.
     *
     * @param lView The view where LView or LContainer should be added
     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header
     * @param lViewOrLContainer The LView or LContainer to add to the view tree
     * @returns The state passed in
     */function addToViewTree(lView,lViewOrLContainer){// TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer
// to the end of the queue, which means if the developer retrieves the LContainers from RNodes out
// of order, the change detection will run out of order, as the act of retrieving the the
// LContainer from the RNode is what adds it to the queue.
if(lView[CHILD_HEAD]){lView[CHILD_TAIL][NEXT]=lViewOrLContainer;}else{lView[CHILD_HEAD]=lViewOrLContainer;}lView[CHILD_TAIL]=lViewOrLContainer;return lViewOrLContainer;}///////////////////////////////
//// Change detection
///////////////////////////////
/**
     * Marks current view and all ancestors dirty.
     *
     * Returns the root view because it is found as a byproduct of marking the view tree
     * dirty, and can be used by methods that consume markViewDirty() to easily schedule
     * change detection. Otherwise, such methods would need to traverse up the view tree
     * an additional time to get the root view and schedule a tick on it.
     *
     * @param lView The starting LView to mark dirty
     * @returns the root LView
     */function markViewDirty(lView){while(lView){lView[FLAGS]|=64/* Dirty */;var parent_1=getLViewParent(lView);// Stop traversing up as soon as you find a root view that wasn't attached to any container
if(isRootView(lView)&&!parent_1){return lView;}// continue otherwise
lView=parent_1;}return null;}/**
     * Used to schedule change detection on the whole application.
     *
     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.
     * It is usually called indirectly by calling `markDirty` when the view needs to be
     * re-rendered.
     *
     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple
     * `scheduleTick` requests. The scheduling function can be overridden in
     * `renderComponent`'s `scheduler` option.
     */function scheduleTick(rootContext,flags){var nothingScheduled=rootContext.flags===0/* Empty */;rootContext.flags|=flags;if(nothingScheduled&&rootContext.clean==_CLEAN_PROMISE){var res_1;rootContext.clean=new Promise(function(r){return res_1=r;});rootContext.scheduler(function(){if(rootContext.flags&1/* DetectChanges */){rootContext.flags&=~1/* DetectChanges */;tickRootContext(rootContext);}if(rootContext.flags&2/* FlushPlayers */){rootContext.flags&=~2/* FlushPlayers */;var playerHandler=rootContext.playerHandler;if(playerHandler){playerHandler.flushPlayers();}}rootContext.clean=_CLEAN_PROMISE;res_1(null);});}}function tickRootContext(rootContext){for(var i=0;i<rootContext.components.length;i++){var rootComponent=rootContext.components[i];var lView=readPatchedLView(rootComponent);var tView=lView[TVIEW];renderComponentOrTemplate(tView,lView,tView.template,rootComponent);}}function detectChangesInternal(tView,lView,context){var rendererFactory=lView[RENDERER_FACTORY];if(rendererFactory.begin)rendererFactory.begin();try{refreshView(tView,lView,tView.template,context);}catch(error){handleError(lView,error);throw error;}finally{if(rendererFactory.end)rendererFactory.end();}}/**
     * Synchronously perform change detection on a root view and its components.
     *
     * @param lView The view which the change detection should be performed on.
     */function detectChangesInRootView(lView){tickRootContext(lView[CONTEXT]);}function checkNoChangesInternal(tView,view,context){setCheckNoChangesMode(true);try{detectChangesInternal(tView,view,context);}finally{setCheckNoChangesMode(false);}}/**
     * Checks the change detector on a root view and its components, and throws if any changes are
     * detected.
     *
     * This is used in development mode to verify that running change detection doesn't
     * introduce other changes.
     *
     * @param lView The view which the change detection should be checked on.
     */function checkNoChangesInRootView(lView){setCheckNoChangesMode(true);try{detectChangesInRootView(lView);}finally{setCheckNoChangesMode(false);}}function executeViewQueryFn(flags,viewQueryFn,component){ngDevMode&&assertDefined(viewQueryFn,'View queries function to execute must be defined.');setCurrentQueryIndex(0);viewQueryFn(flags,component);}///////////////////////////////
//// Bindings & interpolations
///////////////////////////////
/**
     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.
     *
     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:
     * - a bound property name;
     * - a static parts of interpolated strings;
     *
     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a
     * property binding metadata will be stored in `TView.data` at the same index as a bound value in
     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the
     * following format:
     * - `propertyName` for bound properties;
     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for
     * interpolated properties.
     *
     * @param tData `TData` where meta-data will be saved;
     * @param tNode `TNode` that is a target of the binding;
     * @param propertyName bound property name;
     * @param bindingIndex binding index in `LView`
     * @param interpolationParts static interpolation parts (for property interpolations)
     */function storePropertyBindingMetadata(tData,tNode,propertyName,bindingIndex){var interpolationParts=[];for(var _i=4;_i<arguments.length;_i++){interpolationParts[_i-4]=arguments[_i];}// Binding meta-data are stored only the first time a given property instruction is processed.
// Since we don't have a concept of the "first update pass" we need to check for presence of the
// binding meta-data to decide if one should be stored (or if was stored already).
if(tData[bindingIndex]===null){if(tNode.inputs==null||!tNode.inputs[propertyName]){var propBindingIdxs=tNode.propertyBindings||(tNode.propertyBindings=[]);propBindingIdxs.push(bindingIndex);var bindingMetadata=propertyName;if(interpolationParts.length>0){bindingMetadata+=INTERPOLATION_DELIMITER+interpolationParts.join(INTERPOLATION_DELIMITER);}tData[bindingIndex]=bindingMetadata;}}}var CLEAN_PROMISE=_CLEAN_PROMISE;function getLCleanup(view){// top level variables should not be exported for performance reasons (PERF_NOTES.md)
return view[CLEANUP]||(view[CLEANUP]=ngDevMode?new LCleanup():[]);}function getTViewCleanup(tView){return tView.cleanup||(tView.cleanup=ngDevMode?new TCleanup():[]);}/**
     * There are cases where the sub component's renderer needs to be included
     * instead of the current renderer (see the componentSyntheticHost* instructions).
     */function loadComponentRenderer(currentDef,tNode,lView){// TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root
// component (see packages/core/src/render3/component.ts). This is not consistent with the process
// of creating inner components, when current directive index is available in the state. In order
// to avoid relying on current def being `null` (thus special-casing root component creation), the
// process of creating root component should be unified with the process of creating inner
// components.
if(currentDef===null||isComponentDef(currentDef)){lView=unwrapLView(lView[tNode.index]);}return lView[RENDERER];}/** Handles an error thrown in an LView. */function handleError(lView,error){var injector=lView[INJECTOR$1];var errorHandler=injector?injector.get(ErrorHandler,null):null;errorHandler&&errorHandler.handleError(error);}/**
     * Set the inputs of directives at the current node to corresponding value.
     *
     * @param tView The current TView
     * @param lView the `LView` which contains the directives.
     * @param inputs mapping between the public "input" name and privately-known,
     *        possibly minified, property names to write to.
     * @param value Value to set.
     */function setInputsForProperty(tView,lView,inputs,publicName,value){for(var i=0;i<inputs.length;){var index=inputs[i++];var privateName=inputs[i++];var instance=lView[index];ngDevMode&&assertDataInRange(lView,index);var def=tView.data[index];if(def.setInput!==null){def.setInput(instance,value,publicName,privateName);}else{instance[privateName]=value;}}}/**
     * Updates a text binding at a given index in a given LView.
     */function textBindingInternal(lView,index,value){ngDevMode&&assertNotSame(value,NO_CHANGE,'value should not be NO_CHANGE');ngDevMode&&assertDataInRange(lView,index+HEADER_OFFSET);var element=getNativeByIndex(index,lView);ngDevMode&&assertDefined(element,'native element should exist');ngDevMode&&ngDevMode.rendererSetText++;var renderer=lView[RENDERER];isProceduralRenderer(renderer)?renderer.setValue(element,value):element.textContent=value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var unusedValueToPlacateAjd$1=unusedValueExportToPlacateAjd$1+unusedValueExportToPlacateAjd$4+unusedValueExportToPlacateAjd$5+unusedValueExportToPlacateAjd$2+unusedValueExportToPlacateAjd;function getLContainer(tNode,embeddedView){ngDevMode&&assertLView(embeddedView);var container=embeddedView[PARENT];if(tNode.index===-1){// This is a dynamically created view inside a dynamic container.
// The parent isn't an LContainer if the embedded view hasn't been attached yet.
return isLContainer(container)?container:null;}else{ngDevMode&&assertLContainer(container);// This is a inline view node (e.g. embeddedViewStart)
return container;}}/**
     * Retrieves render parent for a given view.
     * Might be null if a view is not yet attached to any container.
     */function getContainerRenderParent(tViewNode,view){var container=getLContainer(tViewNode,view);return container?nativeParentNode(view[RENDERER],container[NATIVE]):null;}/**
     * NOTE: for performance reasons, the possible actions are inlined within the function instead of
     * being passed as an argument.
     */function applyToElementOrContainer(action,renderer,parent,lNodeToHandle,beforeNode){// If this slot was allocated for a text node dynamically created by i18n, the text node itself
// won't be created until i18nApply() in the update block, so this node should be skipped.
// For more info, see "ICU expressions should work inside an ngTemplateOutlet inside an ngFor"
// in `i18n_spec.ts`.
if(lNodeToHandle!=null){var lContainer=void 0;var isComponent=false;// We are expecting an RNode, but in the case of a component or LContainer the `RNode` is
// wrapped in an array which needs to be unwrapped. We need to know if it is a component and if
// it has LContainer so that we can process all of those cases appropriately.
if(isLContainer(lNodeToHandle)){lContainer=lNodeToHandle;}else if(isLView(lNodeToHandle)){isComponent=true;ngDevMode&&assertDefined(lNodeToHandle[HOST],'HOST must be defined for a component LView');lNodeToHandle=lNodeToHandle[HOST];}var rNode=unwrapRNode(lNodeToHandle);ngDevMode&&!isProceduralRenderer(renderer)&&assertDomNode(rNode);if(action===0/* Create */&&parent!==null){if(beforeNode==null){nativeAppendChild(renderer,parent,rNode);}else{nativeInsertBefore(renderer,parent,rNode,beforeNode||null);}}else if(action===1/* Insert */&&parent!==null){nativeInsertBefore(renderer,parent,rNode,beforeNode||null);}else if(action===2/* Detach */){nativeRemoveNode(renderer,rNode,isComponent);}else if(action===3/* Destroy */){ngDevMode&&ngDevMode.rendererDestroyNode++;renderer.destroyNode(rNode);}if(lContainer!=null){applyContainer(renderer,action,lContainer,parent,beforeNode);}}}function createTextNode(value,renderer){ngDevMode&&ngDevMode.rendererCreateTextNode++;ngDevMode&&ngDevMode.rendererSetText++;return isProceduralRenderer(renderer)?renderer.createText(value):renderer.createTextNode(value);}function addRemoveViewFromContainer(tView,lView,insertMode,beforeNode){var renderParent=getContainerRenderParent(tView.node,lView);ngDevMode&&assertNodeType(tView.node,2/* View */);if(renderParent){var renderer=lView[RENDERER];var action=insertMode?1/* Insert */:2/* Detach */;applyView(tView,lView,renderer,action,renderParent,beforeNode);}}/**
     * Detach a `LView` from the DOM by detaching its nodes.
     *
     * @param tView The `TView' of the `LView` to be detached
     * @param lView the `LView` to be detached.
     */function renderDetachView(tView,lView){applyView(tView,lView,lView[RENDERER],2/* Detach */,null,null);}/**
     * Traverses down and up the tree of views and containers to remove listeners and
     * call onDestroy callbacks.
     *
     * Notes:
     *  - Because it's used for onDestroy calls, it needs to be bottom-up.
     *  - Must process containers instead of their views to avoid splicing
     *  when views are destroyed and re-added.
     *  - Using a while loop because it's faster than recursion
     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)
     *
     *  @param rootView The view to destroy
     */function destroyViewTree(rootView){// If the view has no children, we can clean it up and return early.
var lViewOrLContainer=rootView[CHILD_HEAD];if(!lViewOrLContainer){return cleanUpView(rootView[TVIEW],rootView);}while(lViewOrLContainer){var next=null;if(isLView(lViewOrLContainer)){// If LView, traverse down to child.
next=lViewOrLContainer[CHILD_HEAD];}else{ngDevMode&&assertLContainer(lViewOrLContainer);// If container, traverse down to its first LView.
var firstView=lViewOrLContainer[CONTAINER_HEADER_OFFSET];if(firstView)next=firstView;}if(!next){// Only clean up view when moving to the side or up, as destroy hooks
// should be called in order from the bottom up.
while(lViewOrLContainer&&!lViewOrLContainer[NEXT]&&lViewOrLContainer!==rootView){isLView(lViewOrLContainer)&&cleanUpView(lViewOrLContainer[TVIEW],lViewOrLContainer);lViewOrLContainer=getParentState(lViewOrLContainer,rootView);}if(lViewOrLContainer===null)lViewOrLContainer=rootView;isLView(lViewOrLContainer)&&cleanUpView(lViewOrLContainer[TVIEW],lViewOrLContainer);next=lViewOrLContainer&&lViewOrLContainer[NEXT];}lViewOrLContainer=next;}}/**
     * Inserts a view into a container.
     *
     * This adds the view to the container's array of active views in the correct
     * position. It also adds the view's elements to the DOM if the container isn't a
     * root node of another view (in that case, the view's elements will be added when
     * the container's parent view is added later).
     *
     * @param tView The `TView' of the `LView` to insert
     * @param lView The view to insert
     * @param lContainer The container into which the view should be inserted
     * @param index Which index in the container to insert the child view into
     */function insertView(tView,lView,lContainer,index){ngDevMode&&assertLView(lView);ngDevMode&&assertLContainer(lContainer);var indexInContainer=CONTAINER_HEADER_OFFSET+index;var containerLength=lContainer.length;if(index>0){// This is a new view, we need to add it to the children.
lContainer[indexInContainer-1][NEXT]=lView;}if(index<containerLength-CONTAINER_HEADER_OFFSET){lView[NEXT]=lContainer[indexInContainer];addToArray(lContainer,CONTAINER_HEADER_OFFSET+index,lView);}else{lContainer.push(lView);lView[NEXT]=null;}lView[PARENT]=lContainer;// track views where declaration and insertion points are different
var declarationLContainer=lView[DECLARATION_LCONTAINER];if(declarationLContainer!==null&&lContainer!==declarationLContainer){trackMovedView(declarationLContainer,lView);}// notify query that a new view has been added
var lQueries=lView[QUERIES];if(lQueries!==null){lQueries.insertView(tView);}// Sets the attached flag
lView[FLAGS]|=128/* Attached */;}/**
     * Track views created from the declaration container (TemplateRef) and inserted into a
     * different LContainer.
     */function trackMovedView(declarationContainer,lView){ngDevMode&&assertDefined(lView,'LView required');ngDevMode&&assertLContainer(declarationContainer);var movedViews=declarationContainer[MOVED_VIEWS];var insertedLContainer=lView[PARENT];ngDevMode&&assertLContainer(insertedLContainer);var insertedComponentLView=insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];ngDevMode&&assertDefined(insertedComponentLView,'Missing insertedComponentLView');var declaredComponentLView=lView[DECLARATION_COMPONENT_VIEW];ngDevMode&&assertDefined(declaredComponentLView,'Missing declaredComponentLView');if(declaredComponentLView!==insertedComponentLView){// At this point the declaration-component is not same as insertion-component; this means that
// this is a transplanted view. Mark the declared lView as having transplanted views so that
// those views can participate in CD.
declarationContainer[HAS_TRANSPLANTED_VIEWS]=true;}if(movedViews===null){declarationContainer[MOVED_VIEWS]=[lView];}else{movedViews.push(lView);}}function detachMovedView(declarationContainer,lView){ngDevMode&&assertLContainer(declarationContainer);ngDevMode&&assertDefined(declarationContainer[MOVED_VIEWS],'A projected view should belong to a non-empty projected views collection');var movedViews=declarationContainer[MOVED_VIEWS];var declarationViewIndex=movedViews.indexOf(lView);var insertionLContainer=lView[PARENT];ngDevMode&&assertLContainer(insertionLContainer);// If the view was marked for refresh but then detached before it was checked (where the flag
// would be cleared and the counter decremented), we need to decrement the view counter here
// instead.
if(lView[FLAGS]&1024/* RefreshTransplantedView */){updateTransplantedViewCount(insertionLContainer,-1);}movedViews.splice(declarationViewIndex,1);}/**
     * Detaches a view from a container.
     *
     * This method removes the view from the container's array of active views. It also
     * removes the view's elements from the DOM.
     *
     * @param lContainer The container from which to detach a view
     * @param removeIndex The index of the view to detach
     * @returns Detached LView instance.
     */function detachView(lContainer,removeIndex){if(lContainer.length<=CONTAINER_HEADER_OFFSET)return;var indexInContainer=CONTAINER_HEADER_OFFSET+removeIndex;var viewToDetach=lContainer[indexInContainer];if(viewToDetach){var declarationLContainer=viewToDetach[DECLARATION_LCONTAINER];if(declarationLContainer!==null&&declarationLContainer!==lContainer){detachMovedView(declarationLContainer,viewToDetach);}if(removeIndex>0){lContainer[indexInContainer-1][NEXT]=viewToDetach[NEXT];}var removedLView=removeFromArray(lContainer,CONTAINER_HEADER_OFFSET+removeIndex);addRemoveViewFromContainer(viewToDetach[TVIEW],viewToDetach,false,null);// notify query that a view has been removed
var lQueries=removedLView[QUERIES];if(lQueries!==null){lQueries.detachView(removedLView[TVIEW]);}viewToDetach[PARENT]=null;viewToDetach[NEXT]=null;// Unsets the attached flag
viewToDetach[FLAGS]&=~128/* Attached */;}return viewToDetach;}/**
     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.
     *
     * @param lContainer The container from which to remove a view
     * @param removeIndex The index of the view to remove
     */function removeView(lContainer,removeIndex){var detachedView=detachView(lContainer,removeIndex);detachedView&&destroyLView(detachedView[TVIEW],detachedView);}/**
     * A standalone function which destroys an LView,
     * conducting clean up (e.g. removing listeners, calling onDestroys).
     *
     * @param tView The `TView' of the `LView` to be destroyed
     * @param lView The view to be destroyed.
     */function destroyLView(tView,lView){if(!(lView[FLAGS]&256/* Destroyed */)){var renderer=lView[RENDERER];if(isProceduralRenderer(renderer)&&renderer.destroyNode){applyView(tView,lView,renderer,3/* Destroy */,null,null);}destroyViewTree(lView);}}/**
     * Determines which LViewOrLContainer to jump to when traversing back up the
     * tree in destroyViewTree.
     *
     * Normally, the view's parent LView should be checked, but in the case of
     * embedded views, the container (which is the view node's parent, but not the
     * LView's parent) needs to be checked for a possible next property.
     *
     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state
     * @param rootView The rootView, so we don't propagate too far up the view tree
     * @returns The correct parent LViewOrLContainer
     */function getParentState(lViewOrLContainer,rootView){var tNode;if(isLView(lViewOrLContainer)&&(tNode=lViewOrLContainer[T_HOST])&&tNode.type===2/* View */){// if it's an embedded view, the state needs to go up to the container, in case the
// container has a next
return getLContainer(tNode,lViewOrLContainer);}else{// otherwise, use parent view for containers or component views
return lViewOrLContainer[PARENT]===rootView?null:lViewOrLContainer[PARENT];}}/**
     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all
     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks
     * can be propagated to @Output listeners.
     *
     * @param tView `TView` for the `LView` to clean up.
     * @param lView The LView to clean up
     */function cleanUpView(tView,lView){if(!(lView[FLAGS]&256/* Destroyed */)){// Usually the Attached flag is removed when the view is detached from its parent, however
// if it's a root view, the flag won't be unset hence why we're also removing on destroy.
lView[FLAGS]&=~128/* Attached */;// Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook
// runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If
// We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.
// This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is
// really more of an "afterDestroy" hook if you think about it.
lView[FLAGS]|=256/* Destroyed */;executeOnDestroys(tView,lView);removeListeners(tView,lView);var hostTNode=lView[T_HOST];// For component views only, the local renderer is destroyed as clean up time.
if(hostTNode&&hostTNode.type===3/* Element */&&isProceduralRenderer(lView[RENDERER])){ngDevMode&&ngDevMode.rendererDestroy++;lView[RENDERER].destroy();}var declarationContainer=lView[DECLARATION_LCONTAINER];// we are dealing with an embedded view that is still inserted into a container
if(declarationContainer!==null&&isLContainer(lView[PARENT])){// and this is a projected view
if(declarationContainer!==lView[PARENT]){detachMovedView(declarationContainer,lView);}// For embedded views still attached to a container: remove query result from this view.
var lQueries=lView[QUERIES];if(lQueries!==null){lQueries.detachView(tView);}}}}/** Removes listeners and unsubscribes from output subscriptions */function removeListeners(tView,lView){var tCleanup=tView.cleanup;if(tCleanup!==null){var lCleanup=lView[CLEANUP];for(var i=0;i<tCleanup.length-1;i+=2){if(typeof tCleanup[i]==='string'){// This is a native DOM listener
var idxOrTargetGetter=tCleanup[i+1];var target=typeof idxOrTargetGetter==='function'?idxOrTargetGetter(lView):unwrapRNode(lView[idxOrTargetGetter]);var listener=lCleanup[tCleanup[i+2]];var useCaptureOrSubIdx=tCleanup[i+3];if(typeof useCaptureOrSubIdx==='boolean'){// native DOM listener registered with Renderer3
target.removeEventListener(tCleanup[i],listener,useCaptureOrSubIdx);}else{if(useCaptureOrSubIdx>=0){// unregister
lCleanup[useCaptureOrSubIdx]();}else{// Subscription
lCleanup[-useCaptureOrSubIdx].unsubscribe();}}i+=2;}else{// This is a cleanup function that is grouped with the index of its context
var context=lCleanup[tCleanup[i+1]];tCleanup[i].call(context);}}lView[CLEANUP]=null;}}/** Calls onDestroy hooks for this view */function executeOnDestroys(tView,lView){var destroyHooks;if(tView!=null&&(destroyHooks=tView.destroyHooks)!=null){for(var i=0;i<destroyHooks.length;i+=2){var context=lView[destroyHooks[i]];// Only call the destroy hook if the context has been requested.
if(!(context instanceof NodeInjectorFactory)){var toCall=destroyHooks[i+1];if(Array.isArray(toCall)){for(var j=0;j<toCall.length;j+=2){toCall[j+1].call(context[toCall[j]]);}}else{toCall.call(context);}}}}}/**
     * Returns a native element if a node can be inserted into the given parent.
     *
     * There are two reasons why we may not be able to insert a element immediately.
     * - Projection: When creating a child content element of a component, we have to skip the
     *   insertion because the content of a component will be projected.
     *   `<component><content>delayed due to projection</content></component>`
     * - Parent container is disconnected: This can happen when we are inserting a view into
     *   parent container, which itself is disconnected. For example the parent container is part
     *   of a View which has not be inserted or is made for projection but has not been inserted
     *   into destination.
     */function getRenderParent(tView,tNode,currentView){// Skip over element and ICU containers as those are represented by a comment node and
// can't be used as a render parent.
var parentTNode=tNode.parent;while(parentTNode!=null&&(parentTNode.type===4/* ElementContainer */||parentTNode.type===5/* IcuContainer */)){tNode=parentTNode;parentTNode=tNode.parent;}// If the parent tNode is null, then we are inserting across views: either into an embedded view
// or a component view.
if(parentTNode==null){var hostTNode=currentView[T_HOST];if(hostTNode.type===2/* View */){// We are inserting a root element of an embedded view We might delay insertion of children
// for a given view if it is disconnected. This might happen for 2 main reasons:
// - view is not inserted into any container(view was created but not inserted yet)
// - view is inserted into a container but the container itself is not inserted into the DOM
// (container might be part of projection or child of a view that is not inserted yet).
// In other words we can insert children of a given view if this view was inserted into a
// container and the container itself has its render parent determined.
return getContainerRenderParent(hostTNode,currentView);}else{// We are inserting a root element of the component view into the component host element and
// it should always be eager.
ngDevMode&&assertNodeOfPossibleTypes(hostTNode,3/* Element */);return currentView[HOST];}}else{var isIcuCase=tNode&&tNode.type===5/* IcuContainer */;// If the parent of this node is an ICU container, then it is represented by comment node and we
// need to use it as an anchor. If it is projected then it's direct parent node is the renderer.
if(isIcuCase&&tNode.flags&4/* isProjected */){return getNativeByTNode(tNode,currentView).parentNode;}ngDevMode&&assertNodeType(parentTNode,3/* Element */);if(parentTNode.flags&2/* isComponentHost */){var tData=tView.data;var tNode_1=tData[parentTNode.index];var encapsulation=tData[tNode_1.directiveStart].encapsulation;// We've got a parent which is an element in the current view. We just need to verify if the
// parent element is not a component. Component's content nodes are not inserted immediately
// because they will be projected, and so doing insert at this point would be wasteful.
// Since the projection would then move it to its final destination. Note that we can't
// make this assumption when using the Shadow DOM, because the native projection placeholders
// (<content> or <slot>) have to be in place as elements are being inserted.
if(encapsulation!==exports.ViewEncapsulation.ShadowDom&&encapsulation!==exports.ViewEncapsulation.Native){return null;}}return getNativeByTNode(parentTNode,currentView);}}/**
     * Inserts a native node before another native node for a given parent using {@link Renderer3}.
     * This is a utility function that can be used when native nodes were determined - it abstracts an
     * actual renderer being used.
     */function nativeInsertBefore(renderer,parent,child,beforeNode){ngDevMode&&ngDevMode.rendererInsertBefore++;if(isProceduralRenderer(renderer)){renderer.insertBefore(parent,child,beforeNode);}else{parent.insertBefore(child,beforeNode,true);}}function nativeAppendChild(renderer,parent,child){ngDevMode&&ngDevMode.rendererAppendChild++;ngDevMode&&assertDefined(parent,'parent node must be defined');if(isProceduralRenderer(renderer)){renderer.appendChild(parent,child);}else{parent.appendChild(child);}}function nativeAppendOrInsertBefore(renderer,parent,child,beforeNode){if(beforeNode!==null){nativeInsertBefore(renderer,parent,child,beforeNode);}else{nativeAppendChild(renderer,parent,child);}}/** Removes a node from the DOM given its native parent. */function nativeRemoveChild(renderer,parent,child,isHostElement){if(isProceduralRenderer(renderer)){renderer.removeChild(parent,child,isHostElement);}else{parent.removeChild(child);}}/**
     * Returns a native parent of a given native node.
     */function nativeParentNode(renderer,node){return isProceduralRenderer(renderer)?renderer.parentNode(node):node.parentNode;}/**
     * Returns a native sibling of a given native node.
     */function nativeNextSibling(renderer,node){return isProceduralRenderer(renderer)?renderer.nextSibling(node):node.nextSibling;}/**
     * Finds a native "anchor" node for cases where we can't append a native child directly
     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.
     * @param parentTNode
     * @param lView
     */function getNativeAnchorNode(parentTNode,lView){if(parentTNode.type===2/* View */){var lContainer=getLContainer(parentTNode,lView);if(lContainer===null)return null;var index=lContainer.indexOf(lView,CONTAINER_HEADER_OFFSET)-CONTAINER_HEADER_OFFSET;return getBeforeNodeForView(index,lContainer);}else if(parentTNode.type===4/* ElementContainer */||parentTNode.type===5/* IcuContainer */){return getNativeByTNode(parentTNode,lView);}return null;}/**
     * Appends the `child` native node (or a collection of nodes) to the `parent`.
     *
     * The element insertion might be delayed {@link canInsertNativeNode}.
     *
     * @param tView The `TView' to be appended
     * @param lView The current LView
     * @param childEl The native child (or children) that should be appended
     * @param childTNode The TNode of the child element
     * @returns Whether or not the child was appended
     */function appendChild(tView,lView,childEl,childTNode){var renderParent=getRenderParent(tView,childTNode,lView);if(renderParent!=null){var renderer=lView[RENDERER];var parentTNode=childTNode.parent||lView[T_HOST];var anchorNode=getNativeAnchorNode(parentTNode,lView);if(Array.isArray(childEl)){for(var i=0;i<childEl.length;i++){nativeAppendOrInsertBefore(renderer,renderParent,childEl[i],anchorNode);}}else{nativeAppendOrInsertBefore(renderer,renderParent,childEl,anchorNode);}}}/**
     * Returns the first native node for a given LView, starting from the provided TNode.
     *
     * Native nodes are returned in the order in which those appear in the native tree (DOM).
     */function getFirstNativeNode(lView,tNode){if(tNode!==null){ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */,4/* ElementContainer */,5/* IcuContainer */,1/* Projection */);var tNodeType=tNode.type;if(tNodeType===3/* Element */){return getNativeByTNode(tNode,lView);}else if(tNodeType===0/* Container */){return getBeforeNodeForView(-1,lView[tNode.index]);}else if(tNodeType===4/* ElementContainer */||tNodeType===5/* IcuContainer */){var elIcuContainerChild=tNode.child;if(elIcuContainerChild!==null){return getFirstNativeNode(lView,elIcuContainerChild);}else{var rNodeOrLContainer=lView[tNode.index];if(isLContainer(rNodeOrLContainer)){return getBeforeNodeForView(-1,rNodeOrLContainer);}else{return unwrapRNode(rNodeOrLContainer);}}}else{var componentView=lView[DECLARATION_COMPONENT_VIEW];var componentHost=componentView[T_HOST];var parentView=getLViewParent(componentView);var firstProjectedTNode=componentHost.projection[tNode.projection];if(firstProjectedTNode!=null){return getFirstNativeNode(parentView,firstProjectedTNode);}else{return getFirstNativeNode(lView,tNode.next);}}}return null;}function getBeforeNodeForView(viewIndexInContainer,lContainer){var nextViewIndex=CONTAINER_HEADER_OFFSET+viewIndexInContainer+1;if(nextViewIndex<lContainer.length){var lView=lContainer[nextViewIndex];var firstTNodeOfView=lView[TVIEW].firstChild;if(firstTNodeOfView!==null){return getFirstNativeNode(lView,firstTNodeOfView);}}return lContainer[NATIVE];}/**
     * Removes a native node itself using a given renderer. To remove the node we are looking up its
     * parent from the native tree as not all platforms / browsers support the equivalent of
     * node.remove().
     *
     * @param renderer A renderer to be used
     * @param rNode The native node that should be removed
     * @param isHostElement A flag indicating if a node to be removed is a host of a component.
     */function nativeRemoveNode(renderer,rNode,isHostElement){var nativeParent=nativeParentNode(renderer,rNode);if(nativeParent){nativeRemoveChild(renderer,nativeParent,rNode,isHostElement);}}/**
     * Performs the operation of `action` on the node. Typically this involves inserting or removing
     * nodes on the LView or projection boundary.
     */function applyNodes(renderer,action,tNode,lView,renderParent,beforeNode,isProjection){while(tNode!=null){ngDevMode&&assertTNodeForLView(tNode,lView);ngDevMode&&assertNodeOfPossibleTypes(tNode,0/* Container */,3/* Element */,4/* ElementContainer */,1/* Projection */,1/* Projection */,5/* IcuContainer */);var rawSlotValue=lView[tNode.index];var tNodeType=tNode.type;if(isProjection){if(action===0/* Create */){rawSlotValue&&attachPatchData(unwrapRNode(rawSlotValue),lView);tNode.flags|=4/* isProjected */;}}if((tNode.flags&64/* isDetached */)!==64/* isDetached */){if(tNodeType===4/* ElementContainer */||tNodeType===5/* IcuContainer */){applyNodes(renderer,action,tNode.child,lView,renderParent,beforeNode,false);applyToElementOrContainer(action,renderer,renderParent,rawSlotValue,beforeNode);}else if(tNodeType===1/* Projection */){applyProjectionRecursive(renderer,action,lView,tNode,renderParent,beforeNode);}else{ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */);applyToElementOrContainer(action,renderer,renderParent,rawSlotValue,beforeNode);}}tNode=isProjection?tNode.projectionNext:tNode.next;}}/**
     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)
     *
     * Inserting a view without projection or containers at top level is simple. Just iterate over the
     * root nodes of the View, and for each node perform the `action`.
     *
     * Things get more complicated with containers and projections. That is because coming across:
     * - Container: implies that we have to insert/remove/destroy the views of that container as well
     *              which in turn can have their own Containers at the View roots.
     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The
     *               complication is that the nodes we are projecting can themselves have Containers
     *               or other Projections.
     *
     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the
     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.
     *
     * @param tView The `TView' which needs to be inserted, detached, destroyed
     * @param lView The LView which needs to be inserted, detached, destroyed.
     * @param renderer Renderer to use
     * @param action action to perform (insert, detach, destroy)
     * @param renderParent parent DOM element for insertion/removal.
     * @param beforeNode Before which node the insertions should happen.
     */function applyView(tView,lView,renderer,action,renderParent,beforeNode){ngDevMode&&assertNodeType(tView.node,2/* View */);var viewRootTNode=tView.node.child;applyNodes(renderer,action,viewRootTNode,lView,renderParent,beforeNode,false);}/**
     * `applyProjection` performs operation on the projection.
     *
     * Inserting a projection requires us to locate the projected nodes from the parent component. The
     * complication is that those nodes themselves could be re-projected from their parent component.
     *
     * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed
     * @param lView The `LView` which needs to be inserted, detached, destroyed.
     * @param tProjectionNode node to project
     */function applyProjection(tView,lView,tProjectionNode){var renderer=lView[RENDERER];var renderParent=getRenderParent(tView,tProjectionNode,lView);var parentTNode=tProjectionNode.parent||lView[T_HOST];var beforeNode=getNativeAnchorNode(parentTNode,lView);applyProjectionRecursive(renderer,0/* Create */,lView,tProjectionNode,renderParent,beforeNode);}/**
     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,
     * detach, destroy)
     *
     * Inserting a projection requires us to locate the projected nodes from the parent component. The
     * complication is that those nodes themselves could be re-projected from their parent component.
     *
     * @param renderer Render to use
     * @param action action to perform (insert, detach, destroy)
     * @param lView The LView which needs to be inserted, detached, destroyed.
     * @param tProjectionNode node to project
     * @param renderParent parent DOM element for insertion/removal.
     * @param beforeNode Before which node the insertions should happen.
     */function applyProjectionRecursive(renderer,action,lView,tProjectionNode,renderParent,beforeNode){var componentLView=lView[DECLARATION_COMPONENT_VIEW];var componentNode=componentLView[T_HOST];ngDevMode&&assertEqual(_typeof(tProjectionNode.projection),'number','expecting projection index');var nodeToProjectOrRNodes=componentNode.projection[tProjectionNode.projection];if(Array.isArray(nodeToProjectOrRNodes)){// This should not exist, it is a bit of a hack. When we bootstrap a top level node and we
// need to support passing projectable nodes, so we cheat and put them in the TNode
// of the Host TView. (Yes we put instance info at the T Level). We can get away with it
// because we know that that TView is not shared and therefore it will not be a problem.
// This should be refactored and cleaned up.
for(var i=0;i<nodeToProjectOrRNodes.length;i++){var rNode=nodeToProjectOrRNodes[i];applyToElementOrContainer(action,renderer,renderParent,rNode,beforeNode);}}else{var nodeToProject=nodeToProjectOrRNodes;var projectedComponentLView=componentLView[PARENT];applyNodes(renderer,action,nodeToProject,projectedComponentLView,renderParent,beforeNode,true);}}/**
     * `applyContainer` performs an operation on the container and its views as specified by
     * `action` (insert, detach, destroy)
     *
     * Inserting a Container is complicated by the fact that the container may have Views which
     * themselves have containers or projections.
     *
     * @param renderer Renderer to use
     * @param action action to perform (insert, detach, destroy)
     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.
     * @param renderParent parent DOM element for insertion/removal.
     * @param beforeNode Before which node the insertions should happen.
     */function applyContainer(renderer,action,lContainer,renderParent,beforeNode){ngDevMode&&assertLContainer(lContainer);var anchor=lContainer[NATIVE];// LContainer has its own before node.
var _native10=unwrapRNode(lContainer);// An LContainer can be created dynamically on any node by injecting ViewContainerRef.
// Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node
// (comment in the DOM) that will be different from the LContainer's host node. In this particular
// case we need to execute action on 2 nodes:
// - container's host node (this is done in the executeActionOnElementOrContainer)
// - container's host node (this is done here)
if(anchor!==_native10){// This is very strange to me (Misko). I would expect that the native is same as anchor. I don't
// see a reason why they should be different, but they are.
//
// If they are we need to process the second anchor as well.
applyToElementOrContainer(action,renderer,renderParent,anchor,beforeNode);}for(var i=CONTAINER_HEADER_OFFSET;i<lContainer.length;i++){var lView=lContainer[i];applyView(lView[TVIEW],lView,renderer,action,renderParent,anchor);}}/**
     * Writes class/style to element.
     *
     * @param renderer Renderer to use.
     * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)
     * @param rNode The Node to write to.
     * @param prop Property to write to. This would be the class/style name.
     * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add
     *        otherwise).
     */function applyStyling(renderer,isClassBased,rNode,prop,value){var isProcedural=isProceduralRenderer(renderer);if(isClassBased){// We actually want JS true/false here because any truthy value should add the class
if(!value){ngDevMode&&ngDevMode.rendererRemoveClass++;if(isProcedural){renderer.removeClass(rNode,prop);}else{rNode.classList.remove(prop);}}else{ngDevMode&&ngDevMode.rendererAddClass++;if(isProcedural){renderer.addClass(rNode,prop);}else{ngDevMode&&assertDefined(rNode.classList,'HTMLElement expected');rNode.classList.add(prop);}}}else{// TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in
// different order which causes failures. Using direct constant as workaround for now.
var flags=prop.indexOf('-')==-1?undefined:2/* RendererStyleFlags2.DashCase */;if(value==null/** || value === undefined */){ngDevMode&&ngDevMode.rendererRemoveStyle++;if(isProcedural){renderer.removeStyle(rNode,prop,flags);}else{rNode.style.removeProperty(prop);}}else{ngDevMode&&ngDevMode.rendererSetStyle++;if(isProcedural){renderer.setStyle(rNode,prop,value,flags);}else{ngDevMode&&assertDefined(rNode.style,'HTMLElement expected');rNode.style.setProperty(prop,value);}}}}/**
     * Write `cssText` to `RElement`.
     *
     * This function does direct write without any reconciliation. Used for writing initial values, so
     * that static styling values do not pull in the style parser.
     *
     * @param renderer Renderer to use
     * @param element The element which needs to be updated.
     * @param newValue The new class list to write.
     */function writeDirectStyle(renderer,element,newValue){ngDevMode&&assertString(newValue,'\'newValue\' should be a string');if(isProceduralRenderer(renderer)){renderer.setAttribute(element,'style',newValue);}else{element.style.cssText=newValue;}ngDevMode&&ngDevMode.rendererSetStyle++;}/**
     * Write `className` to `RElement`.
     *
     * This function does direct write without any reconciliation. Used for writing initial values, so
     * that static styling values do not pull in the style parser.
     *
     * @param renderer Renderer to use
     * @param element The element which needs to be updated.
     * @param newValue The new class list to write.
     */function writeDirectClass(renderer,element,newValue){ngDevMode&&assertString(newValue,'\'newValue\' should be a string');if(isProceduralRenderer(renderer)){if(newValue===''){// There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.
renderer.removeAttribute(element,'class');}else{renderer.setAttribute(element,'class',newValue);}}else{element.className=newValue;}ngDevMode&&ngDevMode.rendererSetClassName++;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * If `startTNode.parent` exists and has an injector, returns TNode for that injector.
     * Otherwise, unwraps a parent injector location number to find the view offset from the current
     * injector, then walks up the declaration view tree until the TNode of the parent injector is
     * found.
     *
     * @param location The location of the parent injector, which contains the view offset
     * @param startView The LView instance from which to start walking up the view tree
     * @param startTNode The TNode instance of the starting element
     * @returns The TNode of the parent injector
     */function getParentInjectorTNode(location,startView,startTNode){// If there is an injector on the parent TNode, retrieve the TNode for that injector.
if(startTNode.parent&&startTNode.parent.injectorIndex!==-1){// view offset is 0
var injectorIndex=startTNode.parent.injectorIndex;var tNode=startTNode.parent;// If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent
// injector.
while(tNode.parent!=null&&injectorIndex==tNode.parent.injectorIndex){tNode=tNode.parent;}return tNode;}var viewOffset=getParentInjectorViewOffset(location);// view offset is 1
var parentView=startView;var parentTNode=startView[T_HOST];// view offset is superior to 1
while(viewOffset>1){parentView=parentView[DECLARATION_VIEW];parentTNode=parentView[T_HOST];viewOffset--;}return parentTNode;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ViewRef=/** @class */function(){function ViewRef(/**
         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.
         *
         * When ViewRef is created for a dynamic component, this also represents the `LView` for the
         * component.
         *
         * For a "regular" ViewRef created for an embedded view, this is the `LView` for the embedded
         * view.
         *
         * @internal
         */_lView,/**
         * This represents the `LView` associated with the point where `ChangeDetectorRef` was
         * requested.
         *
         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.
         */_cdRefInjectingView){this._lView=_lView;this._cdRefInjectingView=_cdRefInjectingView;this._appRef=null;this._viewContainerRef=null;}Object.defineProperty(ViewRef.prototype,"rootNodes",{get:function get(){var lView=this._lView;if(lView[HOST]==null){var hostTView=lView[T_HOST];return collectNativeNodes(lView[TVIEW],lView,hostTView.child,[]);}return[];},enumerable:true,configurable:true});Object.defineProperty(ViewRef.prototype,"context",{get:function get(){return this._lView[CONTEXT];},enumerable:true,configurable:true});Object.defineProperty(ViewRef.prototype,"destroyed",{get:function get(){return(this._lView[FLAGS]&256/* Destroyed */)===256/* Destroyed */;},enumerable:true,configurable:true});ViewRef.prototype.destroy=function(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){var index=this._viewContainerRef.indexOf(this);if(index>-1){this._viewContainerRef.detach(index);}this._viewContainerRef=null;}destroyLView(this._lView[TVIEW],this._lView);};ViewRef.prototype.onDestroy=function(callback){storeCleanupFn(this._lView[TVIEW],this._lView,callback);};/**
         * Marks a view and all of its ancestors dirty.
         *
         * It also triggers change detection by calling `scheduleTick` internally, which coalesces
         * multiple `markForCheck` calls to into one change detection run.
         *
         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is
         * checked when it needs to be re-rendered but the two normal triggers haven't marked it
         * dirty (i.e. inputs haven't changed and events haven't fired in the view).
         *
         * <!-- TODO: Add a link to a chapter on OnPush components -->
         *
         * @usageNotes
         * ### Example
         *
         * ```typescript
         * @Component({
         *   selector: 'my-app',
         *   template: `Number of ticks: {{numberOfTicks}}`
         *   changeDetection: ChangeDetectionStrategy.OnPush,
         * })
         * class AppComponent {
         *   numberOfTicks = 0;
         *
         *   constructor(private ref: ChangeDetectorRef) {
         *     setInterval(() => {
         *       this.numberOfTicks++;
         *       // the following is required, otherwise the view will not be updated
         *       this.ref.markForCheck();
         *     }, 1000);
         *   }
         * }
         * ```
         */ViewRef.prototype.markForCheck=function(){markViewDirty(this._cdRefInjectingView||this._lView);};/**
         * Detaches the view from the change detection tree.
         *
         * Detached views will not be checked during change detection runs until they are
         * re-attached, even if they are dirty. `detach` can be used in combination with
         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change
         * detection checks.
         *
         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
         *
         * @usageNotes
         * ### Example
         *
         * The following example defines a component with a large list of readonly data.
         * Imagine the data changes constantly, many times per second. For performance reasons,
         * we want to check and update the list every five seconds. We can do that by detaching
         * the component's change detector and doing a local check every five seconds.
         *
         * ```typescript
         * class DataProvider {
         *   // in a real application the returned data will be different every time
         *   get data() {
         *     return [1,2,3,4,5];
         *   }
         * }
         *
         * @Component({
         *   selector: 'giant-list',
         *   template: `
         *     <li *ngFor="let d of dataProvider.data">Data {{d}}</li>
         *   `,
         * })
         * class GiantList {
         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {
         *     ref.detach();
         *     setInterval(() => {
         *       this.ref.detectChanges();
         *     }, 5000);
         *   }
         * }
         *
         * @Component({
         *   selector: 'app',
         *   providers: [DataProvider],
         *   template: `
         *     <giant-list><giant-list>
         *   `,
         * })
         * class App {
         * }
         * ```
         */ViewRef.prototype.detach=function(){this._lView[FLAGS]&=~128/* Attached */;};/**
         * Re-attaches a view to the change detection tree.
         *
         * This can be used to re-attach views that were previously detached from the tree
         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.
         *
         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
         *
         * @usageNotes
         * ### Example
         *
         * The following example creates a component displaying `live` data. The component will detach
         * its change detector from the main change detector tree when the component's live property
         * is set to false.
         *
         * ```typescript
         * class DataProvider {
         *   data = 1;
         *
         *   constructor() {
         *     setInterval(() => {
         *       this.data = this.data * 2;
         *     }, 500);
         *   }
         * }
         *
         * @Component({
         *   selector: 'live-data',
         *   inputs: ['live'],
         *   template: 'Data: {{dataProvider.data}}'
         * })
         * class LiveData {
         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}
         *
         *   set live(value) {
         *     if (value) {
         *       this.ref.reattach();
         *     } else {
         *       this.ref.detach();
         *     }
         *   }
         * }
         *
         * @Component({
         *   selector: 'my-app',
         *   providers: [DataProvider],
         *   template: `
         *     Live Update: <input type="checkbox" [(ngModel)]="live">
         *     <live-data [live]="live"><live-data>
         *   `,
         * })
         * class AppComponent {
         *   live = true;
         * }
         * ```
         */ViewRef.prototype.reattach=function(){this._lView[FLAGS]|=128/* Attached */;};/**
         * Checks the view and its children.
         *
         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement
         * local change detection checks.
         *
         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
         *
         * @usageNotes
         * ### Example
         *
         * The following example defines a component with a large list of readonly data.
         * Imagine, the data changes constantly, many times per second. For performance reasons,
         * we want to check and update the list every five seconds.
         *
         * We can do that by detaching the component's change detector and doing a local change detection
         * check every five seconds.
         *
         * See {@link ChangeDetectorRef#detach detach} for more information.
         */ViewRef.prototype.detectChanges=function(){detectChangesInternal(this._lView[TVIEW],this._lView,this.context);};/**
         * Checks the change detector and its children, and throws if any changes are detected.
         *
         * This is used in development mode to verify that running change detection doesn't
         * introduce other changes.
         */ViewRef.prototype.checkNoChanges=function(){checkNoChangesInternal(this._lView[TVIEW],this._lView,this.context);};ViewRef.prototype.attachToViewContainerRef=function(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;};ViewRef.prototype.detachFromAppRef=function(){this._appRef=null;renderDetachView(this._lView[TVIEW],this._lView);};ViewRef.prototype.attachToAppRef=function(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;};return ViewRef;}();/** @internal */var RootViewRef=/** @class */function(_super){__extends(RootViewRef,_super);function RootViewRef(_view){var _this=_super.call(this,_view)||this;_this._view=_view;return _this;}RootViewRef.prototype.detectChanges=function(){detectChangesInRootView(this._view);};RootViewRef.prototype.checkNoChanges=function(){checkNoChangesInRootView(this._view);};Object.defineProperty(RootViewRef.prototype,"context",{get:function get(){return null;},enumerable:true,configurable:true});return RootViewRef;}(ViewRef);function collectNativeNodes(tView,lView,tNode,result,isProjection){if(isProjection===void 0){isProjection=false;}while(tNode!==null){ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */,1/* Projection */,4/* ElementContainer */,5/* IcuContainer */);var lNode=lView[tNode.index];if(lNode!==null){result.push(unwrapRNode(lNode));}// A given lNode can represent either a native node or a LContainer (when it is a host of a
// ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes
// from the views in this container.
if(isLContainer(lNode)){for(var i=CONTAINER_HEADER_OFFSET;i<lNode.length;i++){var lViewInAContainer=lNode[i];var lViewFirstChildTNode=lViewInAContainer[TVIEW].firstChild;if(lViewFirstChildTNode!==null){collectNativeNodes(lViewInAContainer[TVIEW],lViewInAContainer,lViewFirstChildTNode,result);}}}var tNodeType=tNode.type;if(tNodeType===4/* ElementContainer */||tNodeType===5/* IcuContainer */){collectNativeNodes(tView,lView,tNode.child,result);}else if(tNodeType===1/* Projection */){var componentView=lView[DECLARATION_COMPONENT_VIEW];var componentHost=componentView[T_HOST];var slotIdx=tNode.projection;ngDevMode&&assertDefined(componentHost.projection,'Components with projection nodes (<ng-content>) must have projection slots defined.');var nodesInSlot=componentHost.projection[slotIdx];if(Array.isArray(nodesInSlot)){result.push.apply(result,__spread(nodesInSlot));}else{var parentView=getLViewParent(componentView);ngDevMode&&assertDefined(parentView,'Component views should always have a parent view (component\'s host view)');collectNativeNodes(parentView[TVIEW],parentView,nodesInSlot,result,true);}}tNode=isProjection?tNode.projectionNext:tNode.next;}return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Creates an ElementRef from the most recent node.
     *
     * @returns The ElementRef instance to use
     */function injectElementRef(ElementRefToken){return createElementRef(ElementRefToken,getPreviousOrParentTNode(),getLView());}var R3ElementRef;/**
     * Creates an ElementRef given a node.
     *
     * @param ElementRefToken The ElementRef type
     * @param tNode The node for which you'd like an ElementRef
     * @param view The view to which the node belongs
     * @returns The ElementRef instance to use
     */function createElementRef(ElementRefToken,tNode,view){if(!R3ElementRef){R3ElementRef=/** @class */function(_super){__extends(ElementRef,_super);function ElementRef(){return _super!==null&&_super.apply(this,arguments)||this;}return ElementRef;}(ElementRefToken);}return new R3ElementRef(getNativeByTNode(tNode,view));}var R3TemplateRef;/**
     * Creates a TemplateRef given a node.
     *
     * @returns The TemplateRef instance to use
     */function injectTemplateRef(TemplateRefToken,ElementRefToken){return createTemplateRef(TemplateRefToken,ElementRefToken,getPreviousOrParentTNode(),getLView());}/**
     * Creates a TemplateRef and stores it on the injector.
     *
     * @param TemplateRefToken The TemplateRef type
     * @param ElementRefToken The ElementRef type
     * @param hostTNode The node on which a TemplateRef is requested
     * @param hostView The view to which the node belongs
     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type
     */function createTemplateRef(TemplateRefToken,ElementRefToken,hostTNode,hostView){if(!R3TemplateRef){R3TemplateRef=/** @class */function(_super){__extends(TemplateRef,_super);function TemplateRef(_declarationView,_declarationTContainer,elementRef){var _this=_super.call(this)||this;_this._declarationView=_declarationView;_this._declarationTContainer=_declarationTContainer;_this.elementRef=elementRef;return _this;}TemplateRef.prototype.createEmbeddedView=function(context){var embeddedTView=this._declarationTContainer.tViews;var embeddedLView=createLView(this._declarationView,embeddedTView,context,16/* CheckAlways */,null,embeddedTView.node);var declarationLContainer=this._declarationView[this._declarationTContainer.index];ngDevMode&&assertLContainer(declarationLContainer);embeddedLView[DECLARATION_LCONTAINER]=declarationLContainer;var declarationViewLQueries=this._declarationView[QUERIES];if(declarationViewLQueries!==null){embeddedLView[QUERIES]=declarationViewLQueries.createEmbeddedView(embeddedTView);}renderView(embeddedTView,embeddedLView,context);return new ViewRef(embeddedLView);};return TemplateRef;}(TemplateRefToken);}if(hostTNode.type===0/* Container */){ngDevMode&&assertDefined(hostTNode.tViews,'TView must be allocated');return new R3TemplateRef(hostView,hostTNode,createElementRef(ElementRefToken,hostTNode,hostView));}else{return null;}}var R3ViewContainerRef;/**
     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef
     * already exists, retrieves the existing ViewContainerRef.
     *
     * @returns The ViewContainerRef instance to use
     */function injectViewContainerRef(ViewContainerRefToken,ElementRefToken){var previousTNode=getPreviousOrParentTNode();return createContainerRef(ViewContainerRefToken,ElementRefToken,previousTNode,getLView());}/**
     * Creates a ViewContainerRef and stores it on the injector.
     *
     * @param ViewContainerRefToken The ViewContainerRef type
     * @param ElementRefToken The ElementRef type
     * @param hostTNode The node that is requesting a ViewContainerRef
     * @param hostView The view to which the node belongs
     * @returns The ViewContainerRef instance to use
     */function createContainerRef(ViewContainerRefToken,ElementRefToken,hostTNode,hostView){if(!R3ViewContainerRef){R3ViewContainerRef=/** @class */function(_super){__extends(ViewContainerRef,_super);function ViewContainerRef(_lContainer,_hostTNode,_hostView){var _this=_super.call(this)||this;_this._lContainer=_lContainer;_this._hostTNode=_hostTNode;_this._hostView=_hostView;return _this;}Object.defineProperty(ViewContainerRef.prototype,"element",{get:function get(){return createElementRef(ElementRefToken,this._hostTNode,this._hostView);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef.prototype,"injector",{get:function get(){return new NodeInjector(this._hostTNode,this._hostView);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef.prototype,"parentInjector",{/** @deprecated No replacement */get:function get(){var parentLocation=getParentInjectorLocation(this._hostTNode,this._hostView);var parentView=getParentInjectorView(parentLocation,this._hostView);var parentTNode=getParentInjectorTNode(parentLocation,this._hostView,this._hostTNode);return!hasParentInjector(parentLocation)||parentTNode==null?new NodeInjector(null,this._hostView):new NodeInjector(parentTNode,parentView);},enumerable:true,configurable:true});ViewContainerRef.prototype.clear=function(){while(this.length>0){this.remove(this.length-1);}};ViewContainerRef.prototype.get=function(index){return this._lContainer[VIEW_REFS]!==null&&this._lContainer[VIEW_REFS][index]||null;};Object.defineProperty(ViewContainerRef.prototype,"length",{get:function get(){return this._lContainer.length-CONTAINER_HEADER_OFFSET;},enumerable:true,configurable:true});ViewContainerRef.prototype.createEmbeddedView=function(templateRef,context,index){var viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;};ViewContainerRef.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModuleRef){var contextInjector=injector||this.parentInjector;if(!ngModuleRef&&componentFactory.ngModule==null&&contextInjector){// DO NOT REFACTOR. The code here used to have a `value || undefined` expression
// which seems to cause internal google apps to fail. This is documented in the
// following internal bug issue: go/b/142967802
var result=contextInjector.get(NgModuleRef,null);if(result){ngModuleRef=result;}}var componentRef=componentFactory.create(contextInjector,projectableNodes,undefined,ngModuleRef);this.insert(componentRef.hostView,index);return componentRef;};ViewContainerRef.prototype.insert=function(viewRef,index){var lView=viewRef._lView;var tView=lView[TVIEW];if(viewRef.destroyed){throw new Error('Cannot insert a destroyed View in a ViewContainer!');}this.allocateContainerIfNeeded();if(viewAttachedToContainer(lView)){// If view is already attached, detach it first so we clean up references appropriately.
var prevIdx=this.indexOf(viewRef);// A view might be attached either to this or a different container. The `prevIdx` for
// those cases will be:
// equal to -1 for views attached to this ViewContainerRef
// >= 0 for views attached to a different ViewContainerRef
if(prevIdx!==-1){this.detach(prevIdx);}else{var prevLContainer=lView[PARENT];ngDevMode&&assertEqual(isLContainer(prevLContainer),true,'An attached view should have its PARENT point to a container.');// We need to re-create a R3ViewContainerRef instance since those are not stored on
// LView (nor anywhere else).
var prevVCRef=new R3ViewContainerRef(prevLContainer,prevLContainer[T_HOST],prevLContainer[PARENT]);prevVCRef.detach(prevVCRef.indexOf(viewRef));}}var adjustedIdx=this._adjustIndex(index);insertView(tView,lView,this._lContainer,adjustedIdx);var beforeNode=getBeforeNodeForView(adjustedIdx,this._lContainer);addRemoveViewFromContainer(tView,lView,true,beforeNode);viewRef.attachToViewContainerRef(this);addToArray(this._lContainer[VIEW_REFS],adjustedIdx,viewRef);return viewRef;};ViewContainerRef.prototype.move=function(viewRef,newIndex){if(viewRef.destroyed){throw new Error('Cannot move a destroyed View in a ViewContainer!');}return this.insert(viewRef,newIndex);};ViewContainerRef.prototype.indexOf=function(viewRef){var viewRefsArr=this._lContainer[VIEW_REFS];return viewRefsArr!==null?viewRefsArr.indexOf(viewRef):-1;};ViewContainerRef.prototype.remove=function(index){this.allocateContainerIfNeeded();var adjustedIdx=this._adjustIndex(index,-1);removeView(this._lContainer,adjustedIdx);removeFromArray(this._lContainer[VIEW_REFS],adjustedIdx);};ViewContainerRef.prototype.detach=function(index){this.allocateContainerIfNeeded();var adjustedIdx=this._adjustIndex(index,-1);var view=detachView(this._lContainer,adjustedIdx);var wasDetached=view&&removeFromArray(this._lContainer[VIEW_REFS],adjustedIdx)!=null;return wasDetached?new ViewRef(view):null;};ViewContainerRef.prototype._adjustIndex=function(index,shift){if(shift===void 0){shift=0;}if(index==null){return this.length+shift;}if(ngDevMode){assertGreaterThan(index,-1,"ViewRef index must be positive, got "+index);// +1 because it's legal to insert at the end.
assertLessThan(index,this.length+1+shift,'index');}return index;};ViewContainerRef.prototype.allocateContainerIfNeeded=function(){if(this._lContainer[VIEW_REFS]===null){this._lContainer[VIEW_REFS]=[];}};return ViewContainerRef;}(ViewContainerRefToken);}ngDevMode&&assertNodeOfPossibleTypes(hostTNode,0/* Container */,3/* Element */,4/* ElementContainer */);var lContainer;var slotValue=hostView[hostTNode.index];if(isLContainer(slotValue)){// If the host is a container, we don't need to create a new LContainer
lContainer=slotValue;}else{var commentNode=void 0;// If the host is an element container, the native host element is guaranteed to be a
// comment and we can reuse that comment as anchor element for the new LContainer.
// The comment node in question is already part of the DOM structure so we don't need to append
// it again.
if(hostTNode.type===4/* ElementContainer */){commentNode=unwrapRNode(slotValue);}else{ngDevMode&&ngDevMode.rendererCreateComment++;commentNode=hostView[RENDERER].createComment(ngDevMode?'container':'');// A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In
// this case we can't use TView / TNode data structures to insert container's marker node
// (both a parent of a comment node and the comment node itself are not part of any view). In
// this specific case we use low-level DOM manipulation to insert container's marker (comment)
// node.
if(isRootView(hostView)){var renderer=hostView[RENDERER];var hostNative=getNativeByTNode(hostTNode,hostView);var parentOfHostNative=nativeParentNode(renderer,hostNative);nativeInsertBefore(renderer,parentOfHostNative,commentNode,nativeNextSibling(renderer,hostNative));}else{appendChild(hostView[TVIEW],hostView,commentNode,hostTNode);}}hostView[hostTNode.index]=lContainer=createLContainer(slotValue,hostView,commentNode,hostTNode);addToViewTree(hostView,lContainer);}return new R3ViewContainerRef(lContainer,hostTNode,hostView);}/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */function injectChangeDetectorRef(isPipe){if(isPipe===void 0){isPipe=false;}return createViewRef(getPreviousOrParentTNode(),getLView(),isPipe);}/**
     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).
     *
     * @param tNode The node that is requesting a ChangeDetectorRef
     * @param lView The view to which the node belongs
     * @param isPipe Whether the view is being injected into a pipe.
     * @returns The ChangeDetectorRef to use
     */function createViewRef(tNode,lView,isPipe){// `isComponentView` will be true for Component and Directives (but not for Pipes).
// See https://github.com/angular/angular/pull/33072 for proper fix
var isComponentView=!isPipe&&isComponentHost(tNode);if(isComponentView){// The LView represents the location where the component is declared.
// Instead we want the LView for the component View and so we need to look it up.
var componentView=getComponentLViewByIndex(tNode.index,lView);// look down
return new ViewRef(componentView,componentView);}else if(tNode.type===3/* Element */||tNode.type===0/* Container */||tNode.type===4/* ElementContainer */||tNode.type===5/* IcuContainer */){// The LView represents the location where the injection is requested from.
// We need to locate the containing LView (in case where the `lView` is an embedded view)
var hostComponentView=lView[DECLARATION_COMPONENT_VIEW];// look up
return new ViewRef(hostComponentView,lView);}return null;}/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */function getOrCreateRenderer2(view){var renderer=view[RENDERER];if(isProceduralRenderer(renderer)){return renderer;}else{throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');}}/** Injects a Renderer2 for the current component. */function injectRenderer2(){// We need the Renderer to be based on the component that it's being injected into, however since
// DI happens before we've entered its view, `getLView` will return the parent view instead.
var lView=getLView();var tNode=getPreviousOrParentTNode();var nodeAtIndex=getComponentLViewByIndex(tNode.index,lView);return getOrCreateRenderer2(isLView(nodeAtIndex)?nodeAtIndex:lView);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Base class for Angular Views, provides change detection functionality.
     * A change-detection tree collects all views that are to be checked for changes.
     * Use the methods to add and remove views from the tree, initiate change-detection,
     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.
     *
     * @usageNotes
     *
     * The following examples demonstrate how to modify default change-detection behavior
     * to perform explicit detection when needed.
     *
     * ### Use `markForCheck()` with `CheckOnce` strategy
     *
     * The following example sets the `OnPush` change-detection strategy for a component
     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check
     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).
     *
     * <code-example path="core/ts/change_detect/change-detection.ts"
     * region="mark-for-check"></code-example>
     *
     * ### Detach change detector to limit how often check occurs
     *
     * The following example defines a component with a large list of read-only data
     * that is expected to change constantly, many times per second.
     * To improve performance, we want to check and update the list
     * less often than the changes actually occur. To do that, we detach
     * the component's change detector and perform an explicit local check every five seconds.
     *
     * <code-example path="core/ts/change_detect/change-detection.ts" region="detach"></code-example>
     *
     *
     * ### Reattaching a detached component
     *
     * The following example creates a component displaying live data.
     * The component detaches its change detector from the main change detector tree
     * when the `live` property is set to false, and reattaches it when the property
     * becomes true.
     *
     * <code-example path="core/ts/change_detect/change-detection.ts" region="reattach"></code-example>
     *
     * @publicApi
     */var ChangeDetectorRef=/** @class */function(){function ChangeDetectorRef(){}/**
         * @internal
         * @nocollapse
         */ChangeDetectorRef.__NG_ELEMENT_ID__=function(){return SWITCH_CHANGE_DETECTOR_REF_FACTORY();};return ChangeDetectorRef;}();var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__=injectChangeDetectorRef;var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__=function SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}};var ɵ0$5=SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;var SWITCH_CHANGE_DETECTOR_REF_FACTORY=SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Represents a type that a Component or other object is instances of.
     *
     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by
     * the `MyCustomComponent` constructor function.
     *
     * @publicApi
     */var Type=Function;function isType(v){return typeof v==='function';}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Attention: These regex has to hold even if the code is minified!
     */var DELEGATE_CTOR=/^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*arguments\)/;var INHERITED_CLASS=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{/;var INHERITED_CLASS_WITH_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(/;var INHERITED_CLASS_WITH_DELEGATE_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(\)\s*{\s*super\(\.\.\.arguments\)/;/**
     * Determine whether a stringified type is a class which delegates its constructor
     * to its parent.
     *
     * This is not trivial since compiled code can actually contain a constructor function
     * even if the original source code did not. For instance, when the child class contains
     * an initialized instance property.
     */function isDelegateCtor(typeStr){return DELEGATE_CTOR.test(typeStr)||INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr)||INHERITED_CLASS.test(typeStr)&&!INHERITED_CLASS_WITH_CTOR.test(typeStr);}var ReflectionCapabilities=/** @class */function(){function ReflectionCapabilities(reflect){this._reflect=reflect||_global['Reflect'];}ReflectionCapabilities.prototype.isReflectionEnabled=function(){return true;};ReflectionCapabilities.prototype.factory=function(t){return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return new(t.bind.apply(t,__spread([void 0],args)))();};};/** @internal */ReflectionCapabilities.prototype._zipTypesAndAnnotations=function(paramTypes,paramAnnotations){var result;if(typeof paramTypes==='undefined'){result=newArray(paramAnnotations.length);}else{result=newArray(paramTypes.length);}for(var i=0;i<result.length;i++){// TS outputs Object for parameters without types, while Traceur omits
// the annotations. For now we preserve the Traceur behavior to aid
// migration, but this can be revisited.
if(typeof paramTypes==='undefined'){result[i]=[];}else if(paramTypes[i]&&paramTypes[i]!=Object){result[i]=[paramTypes[i]];}else{result[i]=[];}if(paramAnnotations&&paramAnnotations[i]!=null){result[i]=result[i].concat(paramAnnotations[i]);}}return result;};ReflectionCapabilities.prototype._ownParameters=function(type,parentCtor){var typeStr=type.toString();// If we have no decorators, we only have function.length as metadata.
// In that case, to detect whether a child class declared an own constructor or not,
// we need to look inside of that constructor to check whether it is
// just calling the parent.
// This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
// that sets 'design:paramtypes' to []
// if a class inherits from another class but has no ctor declared itself.
if(isDelegateCtor(typeStr)){return null;}// Prefer the direct API.
if(type.parameters&&type.parameters!==parentCtor.parameters){return type.parameters;}// API of tsickle for lowering decorators to properties on the class.
var tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){// Newer tsickle uses a function closure
// Retain the non-function case for compatibility with older tsickle
var ctorParameters=typeof tsickleCtorParams==='function'?tsickleCtorParams():tsickleCtorParams;var paramTypes_1=ctorParameters.map(function(ctorParam){return ctorParam&&ctorParam.type;});var paramAnnotations_1=ctorParameters.map(function(ctorParam){return ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators);});return this._zipTypesAndAnnotations(paramTypes_1,paramAnnotations_1);}// API for metadata created by invoking the decorators.
var paramAnnotations=type.hasOwnProperty(PARAMETERS)&&type[PARAMETERS];var paramTypes=this._reflect&&this._reflect.getOwnMetadata&&this._reflect.getOwnMetadata('design:paramtypes',type);if(paramTypes||paramAnnotations){return this._zipTypesAndAnnotations(paramTypes,paramAnnotations);}// If a class has no decorators, at least create metadata
// based on function.length.
// Note: We know that this is a real constructor as we checked
// the content of the constructor above.
return newArray(type.length);};ReflectionCapabilities.prototype.parameters=function(type){// Note: only report metadata if we have at least one class decorator
// to stay in sync with the static reflector.
if(!isType(type)){return[];}var parentCtor=getParentCtor(type);var parameters=this._ownParameters(type,parentCtor);if(!parameters&&parentCtor!==Object){parameters=this.parameters(parentCtor);}return parameters||[];};ReflectionCapabilities.prototype._ownAnnotations=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){var annotations=typeOrFunc.annotations;if(typeof annotations==='function'&&annotations.annotations){annotations=annotations.annotations;}return annotations;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators){return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(ANNOTATIONS)){return typeOrFunc[ANNOTATIONS];}return null;};ReflectionCapabilities.prototype.annotations=function(typeOrFunc){if(!isType(typeOrFunc)){return[];}var parentCtor=getParentCtor(typeOrFunc);var ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];var parentAnnotations=parentCtor!==Object?this.annotations(parentCtor):[];return parentAnnotations.concat(ownAnnotations);};ReflectionCapabilities.prototype._ownPropMetadata=function(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){var propMetadata=typeOrFunc.propMetadata;if(typeof propMetadata==='function'&&propMetadata.propMetadata){propMetadata=propMetadata.propMetadata;}return propMetadata;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){var propDecorators_1=typeOrFunc.propDecorators;var propMetadata_1={};Object.keys(propDecorators_1).forEach(function(prop){propMetadata_1[prop]=convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);});return propMetadata_1;}// API for metadata created by invoking the decorators.
if(typeOrFunc.hasOwnProperty(PROP_METADATA)){return typeOrFunc[PROP_METADATA];}return null;};ReflectionCapabilities.prototype.propMetadata=function(typeOrFunc){if(!isType(typeOrFunc)){return{};}var parentCtor=getParentCtor(typeOrFunc);var propMetadata={};if(parentCtor!==Object){var parentPropMetadata_1=this.propMetadata(parentCtor);Object.keys(parentPropMetadata_1).forEach(function(propName){propMetadata[propName]=parentPropMetadata_1[propName];});}var ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);if(ownPropMetadata){Object.keys(ownPropMetadata).forEach(function(propName){var decorators=[];if(propMetadata.hasOwnProperty(propName)){decorators.push.apply(decorators,__spread(propMetadata[propName]));}decorators.push.apply(decorators,__spread(ownPropMetadata[propName]));propMetadata[propName]=decorators;});}return propMetadata;};ReflectionCapabilities.prototype.ownPropMetadata=function(typeOrFunc){if(!isType(typeOrFunc)){return{};}return this._ownPropMetadata(typeOrFunc,getParentCtor(typeOrFunc))||{};};ReflectionCapabilities.prototype.hasLifecycleHook=function(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype;};ReflectionCapabilities.prototype.guards=function(type){return{};};ReflectionCapabilities.prototype.getter=function(name){return new Function('o','return o.'+name+';');};ReflectionCapabilities.prototype.setter=function(name){return new Function('o','v','return o.'+name+' = v;');};ReflectionCapabilities.prototype.method=function(name){var functionBody="if (!o."+name+") throw new Error('\""+name+"\" is undefined');\n        return o."+name+".apply(o, args);";return new Function('o','args',functionBody);};// There is not a concept of import uri in Js, but this is useful in developing Dart applications.
ReflectionCapabilities.prototype.importUri=function(type){// StaticSymbol
if(_typeof(type)==='object'&&type['filePath']){return type['filePath'];}// Runtime type
return"./"+stringify(type);};ReflectionCapabilities.prototype.resourceUri=function(type){return"./"+stringify(type);};ReflectionCapabilities.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return runtime;};ReflectionCapabilities.prototype.resolveEnum=function(enumIdentifier,name){return enumIdentifier[name];};return ReflectionCapabilities;}();function convertTsickleDecoratorIntoMetadata(decoratorInvocations){if(!decoratorInvocations){return[];}return decoratorInvocations.map(function(decoratorInvocation){var decoratorType=decoratorInvocation.type;var annotationCls=decoratorType.annotationCls;var annotationArgs=decoratorInvocation.args?decoratorInvocation.args:[];return new(annotationCls.bind.apply(annotationCls,__spread([void 0],annotationArgs)))();});}function getParentCtor(ctor){var parentProto=ctor.prototype?Object.getPrototypeOf(ctor.prototype):null;var parentCtor=parentProto?parentProto.constructor:null;// Note: We always use `Object` as the null value
// to simplify checking later on.
return parentCtor||Object;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _reflect=null;function getReflect(){return _reflect=_reflect||new ReflectionCapabilities();}function reflectDependencies(type){return convertDependencies(getReflect().parameters(type));}function convertDependencies(deps){var compiler=getCompilerFacade();return deps.map(function(dep){return reflectDependency(compiler,dep);});}function reflectDependency(compiler,dep){var meta={token:null,host:false,optional:false,resolved:compiler.R3ResolvedDependencyType.Token,self:false,skipSelf:false};function setTokenAndResolvedType(token){meta.resolved=compiler.R3ResolvedDependencyType.Token;meta.token=token;}if(Array.isArray(dep)&&dep.length>0){for(var j=0;j<dep.length;j++){var param=dep[j];if(param===undefined){// param may be undefined if type of dep is not set by ngtsc
continue;}var proto=Object.getPrototypeOf(param);if(param instanceof Optional||proto.ngMetadataName==='Optional'){meta.optional=true;}else if(param instanceof SkipSelf||proto.ngMetadataName==='SkipSelf'){meta.skipSelf=true;}else if(param instanceof Self||proto.ngMetadataName==='Self'){meta.self=true;}else if(param instanceof Host||proto.ngMetadataName==='Host'){meta.host=true;}else if(param instanceof Inject){meta.token=param.token;}else if(param instanceof Attribute){if(param.attributeName===undefined){throw new Error("Attribute name must be defined.");}meta.token=param.attributeName;meta.resolved=compiler.R3ResolvedDependencyType.Attribute;}else if(param===ChangeDetectorRef){meta.token=param;meta.resolved=compiler.R3ResolvedDependencyType.ChangeDetectorRef;}else{setTokenAndResolvedType(param);}}}else if(dep===undefined||Array.isArray(dep)&&dep.length===0){meta.token=undefined;meta.resolved=R3ResolvedDependencyType.Invalid;}else{setTokenAndResolvedType(dep);}return meta;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting
     * injectable def (`ɵprov`) onto the injectable type.
     */function compileInjectable(type,srcMeta){var ngInjectableDef=null;var ngFactoryDef=null;// if NG_PROV_DEF is already defined on this class then don't overwrite it
if(!type.hasOwnProperty(NG_PROV_DEF)){Object.defineProperty(type,NG_PROV_DEF,{get:function get(){if(ngInjectableDef===null){ngInjectableDef=getCompilerFacade().compileInjectable(angularCoreDiEnv,"ng:///"+type.name+"/\u0275prov.js",getInjectableMetadata(type,srcMeta));}return ngInjectableDef;}});// On IE10 properties defined via `defineProperty` won't be inherited by child classes,
// which will break inheriting the injectable definition from a grandparent through an
// undecorated parent class. We work around it by defining a method which should be used
// as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript
// seems to have a workaround for static properties. When inheriting from an undecorated
// parent is no longer supported in v10, this can safely be removed.
if(!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)){type[NG_PROV_DEF_FALLBACK]=function(){return type[NG_PROV_DEF];};}}// if NG_FACTORY_DEF is already defined on this class then don't overwrite it
if(!type.hasOwnProperty(NG_FACTORY_DEF)){Object.defineProperty(type,NG_FACTORY_DEF,{get:function get(){if(ngFactoryDef===null){var metadata=getInjectableMetadata(type,srcMeta);var compiler=getCompilerFacade();ngFactoryDef=compiler.compileFactory(angularCoreDiEnv,"ng:///"+type.name+"/\u0275fac.js",{name:metadata.name,type:metadata.type,typeArgumentCount:metadata.typeArgumentCount,deps:reflectDependencies(type),injectFn:'inject',target:compiler.R3FactoryTarget.Injectable});}return ngFactoryDef;},// Leave this configurable so that the factories from directives or pipes can take precedence.
configurable:true});}}var ɵ0$6=getClosureSafeProperty;var USE_VALUE$1=getClosureSafeProperty({provide:String,useValue:ɵ0$6});function isUseClassProvider(meta){return meta.useClass!==undefined;}function isUseValueProvider(meta){return USE_VALUE$1 in meta;}function isUseFactoryProvider(meta){return meta.useFactory!==undefined;}function isUseExistingProvider(meta){return meta.useExisting!==undefined;}function getInjectableMetadata(type,srcMeta){// Allow the compilation of a class with a `@Injectable()` decorator without parameters
var meta=srcMeta||{providedIn:null};var compilerMeta={name:type.name,type:type,typeArgumentCount:0,providedIn:meta.providedIn,userDeps:undefined};if((isUseClassProvider(meta)||isUseFactoryProvider(meta))&&meta.deps!==undefined){compilerMeta.userDeps=convertDependencies(meta.deps);}if(isUseClassProvider(meta)){// The user explicitly specified useClass, and may or may not have provided deps.
compilerMeta.useClass=resolveForwardRef(meta.useClass);}else if(isUseValueProvider(meta)){// The user explicitly specified useValue.
compilerMeta.useValue=resolveForwardRef(meta.useValue);}else if(isUseFactoryProvider(meta)){// The user explicitly specified useFactory.
compilerMeta.useFactory=meta.useFactory;}else if(isUseExistingProvider(meta)){// The user explicitly specified useExisting.
compilerMeta.useExisting=resolveForwardRef(meta.useExisting);}return compilerMeta;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$7=getClosureSafeProperty;var USE_VALUE$2=getClosureSafeProperty({provide:String,useValue:ɵ0$7});var EMPTY_ARRAY$1=[];function convertInjectableProviderToFactory(type,provider){if(!provider){var reflectionCapabilities=new ReflectionCapabilities();var deps_1=reflectionCapabilities.parameters(type);// TODO - convert to flags.
return function(){return new(type.bind.apply(type,__spread([void 0],injectArgs(deps_1))))();};}if(USE_VALUE$2 in provider){var valueProvider_1=provider;return function(){return valueProvider_1.useValue;};}else if(provider.useExisting){var existingProvider_1=provider;return function(){return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting));};}else if(provider.useFactory){var factoryProvider_1=provider;return function(){return factoryProvider_1.useFactory.apply(factoryProvider_1,__spread(injectArgs(factoryProvider_1.deps||EMPTY_ARRAY$1)));};}else if(provider.useClass){var classProvider_1=provider;var deps_2=provider.deps;if(!deps_2){var reflectionCapabilities=new ReflectionCapabilities();deps_2=reflectionCapabilities.parameters(type);}return function(){var _a;return new((_a=resolveForwardRef(classProvider_1.useClass)).bind.apply(_a,__spread([void 0],injectArgs(deps_2))))();};}else{var deps_3=provider.deps;if(!deps_3){var reflectionCapabilities=new ReflectionCapabilities();deps_3=reflectionCapabilities.parameters(type);}return function(){return new(type.bind.apply(type,__spread([void 0],injectArgs(deps_3))))();};}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$8=function ɵ0$8(type,meta){return SWITCH_COMPILE_INJECTABLE(type,meta);};/**
     * Injectable decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Injectable=makeDecorator('Injectable',undefined,undefined,undefined,ɵ0$8);/**
     * Supports @Injectable() in JIT mode for Render2.
     */function render2CompileInjectable(injectableType,options){if(options&&options.providedIn!==undefined&&!getInjectableDef(injectableType)){injectableType.ɵprov=ɵɵdefineInjectable({token:injectableType,providedIn:options.providedIn,factory:convertInjectableProviderToFactory(injectableType,options)});}}var SWITCH_COMPILE_INJECTABLE__POST_R3__=compileInjectable;var SWITCH_COMPILE_INJECTABLE__PRE_R3__=render2CompileInjectable;var SWITCH_COMPILE_INJECTABLE=SWITCH_COMPILE_INJECTABLE__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An internal token whose presence in an injector indicates that the injector should treat itself
     * as a root scoped injector when processing requests for unknown tokens which may indicate
     * they are provided in the root scope.
     */var INJECTOR_SCOPE=new InjectionToken('Set Injector scope.');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Marker which indicates that a value has not yet been created from the factory function.
     */var NOT_YET={};/**
     * Marker which indicates that the factory function for a token is in the process of being called.
     *
     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates
     * injection of a dependency has recursively attempted to inject the original token, and there is
     * a circular dependency among the providers.
     */var CIRCULAR={};var EMPTY_ARRAY$2=[];/**
     * A lazily initialized NullInjector.
     */var NULL_INJECTOR=undefined;function getNullInjector(){if(NULL_INJECTOR===undefined){NULL_INJECTOR=new NullInjector();}return NULL_INJECTOR;}/**
     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.
     *
     * @publicApi
     */function createInjector(defType,parent,additionalProviders,name){if(parent===void 0){parent=null;}if(additionalProviders===void 0){additionalProviders=null;}var injector=createInjectorWithoutInjectorInstances(defType,parent,additionalProviders,name);injector._resolveInjectorDefTypes();return injector;}/**
     * Creates a new injector without eagerly resolving its injector types. Can be used in places
     * where resolving the injector types immediately can lead to an infinite loop. The injector types
     * should be resolved at a later point by calling `_resolveInjectorDefTypes`.
     */function createInjectorWithoutInjectorInstances(defType,parent,additionalProviders,name){if(parent===void 0){parent=null;}if(additionalProviders===void 0){additionalProviders=null;}return new R3Injector(defType,additionalProviders,parent||getNullInjector(),name);}var R3Injector=/** @class */function(){function R3Injector(def,additionalProviders,parent,source){var _this=this;if(source===void 0){source=null;}this.parent=parent;/**
             * Map of tokens to records which contain the instances of those tokens.
             * - `null` value implies that we don't have the record. Used by tree-shakable injectors
             * to prevent further searches.
             */this.records=new Map();/**
             * The transitive set of `InjectorType`s which define this injector.
             */this.injectorDefTypes=new Set();/**
             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.
             */this.onDestroy=new Set();this._destroyed=false;var dedupStack=[];// Start off by creating Records for every provider declared in every InjectorType
// included transitively in additional providers then do the same for `def`. This order is
// important because `def` may include providers that override ones in additionalProviders.
additionalProviders&&deepForEach(additionalProviders,function(provider){return _this.processProvider(provider,def,additionalProviders);});deepForEach([def],function(injectorDef){return _this.processInjectorType(injectorDef,[],dedupStack);});// Make sure the INJECTOR token provides this injector.
this.records.set(INJECTOR,makeRecord(undefined,this));// Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide
// any injectable scoped to APP_ROOT_SCOPE.
var record=this.records.get(INJECTOR_SCOPE);this.scope=record!=null?record.value:null;// Source name, used for debugging
this.source=source||(_typeof(def)==='object'?null:stringify(def));}Object.defineProperty(R3Injector.prototype,"destroyed",{/**
             * Flag indicating that this injector was previously destroyed.
             */get:function get(){return this._destroyed;},enumerable:true,configurable:true});/**
         * Destroy the injector and release references to every instance or provider associated with it.
         *
         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a
         * hook was found.
         */R3Injector.prototype.destroy=function(){this.assertNotDestroyed();// Set destroyed = true first, in case lifecycle hooks re-enter destroy().
this._destroyed=true;try{// Call all the lifecycle hooks.
this.onDestroy.forEach(function(service){return service.ngOnDestroy();});}finally{// Release all references.
this.records.clear();this.onDestroy.clear();this.injectorDefTypes.clear();}};R3Injector.prototype.get=function(token,notFoundValue,flags){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}if(flags===void 0){flags=exports.InjectFlags.Default;}this.assertNotDestroyed();// Set the injection context.
var previousInjector=setCurrentInjector(this);try{// Check for the SkipSelf flag.
if(!(flags&exports.InjectFlags.SkipSelf)){// SkipSelf isn't set, check if the record belongs to this injector.
var record=this.records.get(token);if(record===undefined){// No record, but maybe the token is scoped to this injector. Look for an injectable
// def with a scope matching this injector.
var def=couldBeInjectableType(token)&&getInjectableDef(token);if(def&&this.injectableDefInScope(def)){// Found an injectable def and it's scoped to this injector. Pretend as if it was here
// all along.
record=makeRecord(injectableDefOrInjectorDefFactory(token),NOT_YET);}else{record=null;}this.records.set(token,record);}// If a record was found, get the instance for it and return it.
if(record!=null/* NOT null || undefined */){return this.hydrate(token,record);}}// Select the next injector based on the Self flag - if self is set, the next injector is
// the NullInjector, otherwise it's the parent.
var nextInjector=!(flags&exports.InjectFlags.Self)?this.parent:getNullInjector();// Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue
// is undefined, the value is null, otherwise it's the notFoundValue.
notFoundValue=flags&exports.InjectFlags.Optional&&notFoundValue===THROW_IF_NOT_FOUND?null:notFoundValue;return nextInjector.get(token,notFoundValue);}catch(e){if(e.name==='NullInjectorError'){var path=e[NG_TEMP_TOKEN_PATH]=e[NG_TEMP_TOKEN_PATH]||[];path.unshift(stringify(token));if(previousInjector){// We still have a parent injector, keep throwing
throw e;}else{// Format & throw the final error message when we don't have any previous injector
return catchInjectorError(e,token,'R3InjectorError',this.source);}}else{throw e;}}finally{// Lastly, clean up the state by restoring the previous injector.
setCurrentInjector(previousInjector);}};/** @internal */R3Injector.prototype._resolveInjectorDefTypes=function(){var _this=this;this.injectorDefTypes.forEach(function(defType){return _this.get(defType);});};R3Injector.prototype.toString=function(){var tokens=[],records=this.records;records.forEach(function(v,token){return tokens.push(stringify(token));});return"R3Injector["+tokens.join(', ')+"]";};R3Injector.prototype.assertNotDestroyed=function(){if(this._destroyed){throw new Error('Injector has already been destroyed.');}};/**
         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers
         * to this injector.
         *
         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,
         * the function will return "true" to indicate that the providers of the type definition need
         * to be processed. This allows us to process providers of injector types after all imports of
         * an injector definition are processed. (following View Engine semantics: see FW-1349)
         */R3Injector.prototype.processInjectorType=function(defOrWrappedDef,parents,dedupStack){var _this=this;defOrWrappedDef=resolveForwardRef(defOrWrappedDef);if(!defOrWrappedDef)return false;// Either the defOrWrappedDef is an InjectorType (with injector def) or an
// InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic
// read, so care is taken to only do the read once.
// First attempt to read the injector def (`ɵinj`).
var def=getInjectorDef(defOrWrappedDef);// If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.
var ngModule=def==null&&defOrWrappedDef.ngModule||undefined;// Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,
// then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type
// is the `ngModule`.
var defType=ngModule===undefined?defOrWrappedDef:ngModule;// Check for circular dependencies.
if(ngDevMode&&parents.indexOf(defType)!==-1){var defName=stringify(defType);throw new Error("Circular dependency in DI detected for type "+defName+". Dependency path: "+parents.map(function(defType){return stringify(defType);}).join(' > ')+" > "+defName+".");}// Check for multiple imports of the same module
var isDuplicate=dedupStack.indexOf(defType)!==-1;// Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual
// `InjectorDef` is on its `ngModule`.
if(ngModule!==undefined){def=getInjectorDef(ngModule);}// If no definition was found, it might be from exports. Remove it.
if(def==null){return false;}// Add providers in the same way that @NgModule resolution did:
// First, include providers from any imports.
if(def.imports!=null&&!isDuplicate){// Before processing defType's imports, add it to the set of parents. This way, if it ends
// up deeply importing itself, this can be detected.
ngDevMode&&parents.push(defType);// Add it to the set of dedups. This way we can detect multiple imports of the same module
dedupStack.push(defType);var importTypesWithProviders_1;try{deepForEach(def.imports,function(imported){if(_this.processInjectorType(imported,parents,dedupStack)){if(importTypesWithProviders_1===undefined)importTypesWithProviders_1=[];// If the processed import is an injector type with providers, we store it in the
// list of import types with providers, so that we can process those afterwards.
importTypesWithProviders_1.push(imported);}});}finally{// Remove it from the parents set when finished.
ngDevMode&&parents.pop();}// Imports which are declared with providers (TypeWithProviders) need to be processed
// after all imported modules are processed. This is similar to how View Engine
// processes/merges module imports in the metadata resolver. See: FW-1349.
if(importTypesWithProviders_1!==undefined){var _loop_1=function _loop_1(i){var _a=importTypesWithProviders_1[i],ngModule_1=_a.ngModule,providers=_a.providers;deepForEach(providers,function(provider){return _this.processProvider(provider,ngModule_1,providers||EMPTY_ARRAY$2);});};for(var i=0;i<importTypesWithProviders_1.length;i++){_loop_1(i);}}}// Track the InjectorType and add a provider for it. It's important that this is done after the
// def's imports.
this.injectorDefTypes.add(defType);this.records.set(defType,makeRecord(def.factory,NOT_YET));// Next, include providers listed on the definition itself.
var defProviders=def.providers;if(defProviders!=null&&!isDuplicate){var injectorType_1=defOrWrappedDef;deepForEach(defProviders,function(provider){return _this.processProvider(provider,injectorType_1,defProviders);});}return ngModule!==undefined&&defOrWrappedDef.providers!==undefined;};/**
         * Process a `SingleProvider` and add it.
         */R3Injector.prototype.processProvider=function(provider,ngModuleType,providers){// Determine the token from the provider. Either it's its own token, or has a {provide: ...}
// property.
provider=resolveForwardRef(provider);var token=isTypeProvider(provider)?provider:resolveForwardRef(provider&&provider.provide);// Construct a `Record` for the provider.
var record=providerToRecord(provider,ngModuleType,providers);if(!isTypeProvider(provider)&&provider.multi===true){// If the provider indicates that it's a multi-provider, process it specially.
// First check whether it's been defined already.
var multiRecord_1=this.records.get(token);if(multiRecord_1){// It has. Throw a nice error if
if(multiRecord_1.multi===undefined){throwMixedMultiProviderError();}}else{multiRecord_1=makeRecord(undefined,NOT_YET,true);multiRecord_1.factory=function(){return injectArgs(multiRecord_1.multi);};this.records.set(token,multiRecord_1);}token=provider;multiRecord_1.multi.push(provider);}else{var existing=this.records.get(token);if(existing&&existing.multi!==undefined){throwMixedMultiProviderError();}}this.records.set(token,record);};R3Injector.prototype.hydrate=function(token,record){if(record.value===CIRCULAR){throwCyclicDependencyError(stringify(token));}else if(record.value===NOT_YET){record.value=CIRCULAR;record.value=record.factory();}if(_typeof(record.value)==='object'&&record.value&&hasOnDestroy(record.value)){this.onDestroy.add(record.value);}return record.value;};R3Injector.prototype.injectableDefInScope=function(def){if(!def.providedIn){return false;}else if(typeof def.providedIn==='string'){return def.providedIn==='any'||def.providedIn===this.scope;}else{return this.injectorDefTypes.has(def.providedIn);}};return R3Injector;}();function injectableDefOrInjectorDefFactory(token){// Most tokens will have an injectable def directly on them, which specifies a factory directly.
var injectableDef=getInjectableDef(token);var factory=injectableDef!==null?injectableDef.factory:getFactoryDef(token);if(factory!==null){return factory;}// If the token is an NgModule, it's also injectable but the factory is on its injector def
// (`ɵinj`)
var injectorDef=getInjectorDef(token);if(injectorDef!==null){return injectorDef.factory;}// InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.
// If it's missing that, it's an error.
if(token instanceof InjectionToken){throw new Error("Token "+stringify(token)+" is missing a \u0275prov definition.");}// Undecorated types can sometimes be created if they have no constructor arguments.
if(token instanceof Function){return getUndecoratedInjectableFactory(token);}// There was no way to resolve a factory for this token.
throw new Error('unreachable');}function getUndecoratedInjectableFactory(token){// If the token has parameters then it has dependencies that we cannot resolve implicitly.
var paramLength=token.length;if(paramLength>0){var args=newArray(paramLength,'?');throw new Error("Can't resolve all parameters for "+stringify(token)+": ("+args.join(', ')+").");}// The constructor function appears to have no parameters.
// This might be because it inherits from a super-class. In which case, use an injectable
// def from an ancestor if there is one.
// Otherwise this really is a simple class with no dependencies, so return a factory that
// just instantiates the zero-arg constructor.
var inheritedInjectableDef=getInheritedInjectableDef(token);if(inheritedInjectableDef!==null){return function(){return inheritedInjectableDef.factory(token);};}else{return function(){return new token();};}}function providerToRecord(provider,ngModuleType,providers){if(isValueProvider(provider)){return makeRecord(undefined,provider.useValue);}else{var factory=providerToFactory(provider,ngModuleType,providers);return makeRecord(factory,NOT_YET);}}/**
     * Converts a `SingleProvider` into a factory function.
     *
     * @param provider provider to convert to factory
     */function providerToFactory(provider,ngModuleType,providers){var factory=undefined;if(isTypeProvider(provider)){var unwrappedProvider=resolveForwardRef(provider);return getFactoryDef(unwrappedProvider)||injectableDefOrInjectorDefFactory(unwrappedProvider);}else{if(isValueProvider(provider)){factory=function factory(){return resolveForwardRef(provider.useValue);};}else if(isFactoryProvider(provider)){factory=function factory(){return provider.useFactory.apply(provider,__spread(injectArgs(provider.deps||[])));};}else if(isExistingProvider(provider)){factory=function factory(){return ɵɵinject(resolveForwardRef(provider.useExisting));};}else{var classRef_1=resolveForwardRef(provider&&(provider.useClass||provider.provide));if(!classRef_1){throwInvalidProviderError(ngModuleType,providers,provider);}if(hasDeps(provider)){factory=function factory(){return new(classRef_1.bind.apply(classRef_1,__spread([void 0],injectArgs(provider.deps))))();};}else{return getFactoryDef(classRef_1)||injectableDefOrInjectorDefFactory(classRef_1);}}}return factory;}function makeRecord(factory,value,multi){if(multi===void 0){multi=false;}return{factory:factory,value:value,multi:multi?[]:undefined};}function isValueProvider(value){return value!==null&&_typeof(value)=='object'&&USE_VALUE in value;}function isExistingProvider(value){return!!(value&&value.useExisting);}function isFactoryProvider(value){return!!(value&&value.useFactory);}function isTypeProvider(value){return typeof value==='function';}function isClassProvider(value){return!!value.useClass;}function hasDeps(value){return!!value.deps;}function hasOnDestroy(value){return value!==null&&_typeof(value)==='object'&&typeof value.ngOnDestroy==='function';}function couldBeInjectableType(value){return typeof value==='function'||_typeof(value)==='object'&&value instanceof InjectionToken;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function INJECTOR_IMPL__PRE_R3__(providers,parent,name){return new StaticInjector(providers,parent,name);}function INJECTOR_IMPL__POST_R3__(providers,parent,name){return createInjector({name:name},parent,providers,name);}var INJECTOR_IMPL=INJECTOR_IMPL__PRE_R3__;/**
     * Concrete injectors implement this interface. Injectors are configured
     * with [providers](guide/glossary#provider) that associate
     * dependencies of various types with [injection tokens](guide/glossary#di-token).
     *
     * @see ["DI Providers"](guide/dependency-injection-providers).
     * @see `StaticProvider`
     *
     * @usageNotes
     *
     *  The following example creates a service injector instance.
     *
     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}
     *
     * ### Usage example
     *
     * {@example core/di/ts/injector_spec.ts region='Injector'}
     *
     * `Injector` returns itself when given `Injector` as a token:
     *
     * {@example core/di/ts/injector_spec.ts region='injectInjector'}
     *
     * @publicApi
     */var Injector=/** @class */function(){function Injector(){}Injector.create=function(options,parent){if(Array.isArray(options)){return INJECTOR_IMPL(options,parent,'');}else{return INJECTOR_IMPL(options.providers,options.parent,options.name||'');}};Injector.THROW_IF_NOT_FOUND=THROW_IF_NOT_FOUND;Injector.NULL=new NullInjector();/** @nocollapse */Injector.ɵprov=ɵɵdefineInjectable({token:Injector,providedIn:'any',factory:function factory(){return ɵɵinject(INJECTOR);}});/**
         * @internal
         * @nocollapse
         */Injector.__NG_ELEMENT_ID__=-1;return Injector;}();var IDENT=function IDENT(value){return value;};var ɵ0$9=IDENT;var EMPTY=[];var CIRCULAR$1=IDENT;var MULTI_PROVIDER_FN=function MULTI_PROVIDER_FN(){return Array.prototype.slice.call(arguments);};var ɵ1$1=MULTI_PROVIDER_FN;var NO_NEW_LINE$1='ɵ';var StaticInjector=/** @class */function(){function StaticInjector(providers,parent,source){if(parent===void 0){parent=Injector.NULL;}if(source===void 0){source=null;}this.parent=parent;this.source=source;var records=this._records=new Map();records.set(Injector,{token:Injector,fn:IDENT,deps:EMPTY,value:this,useNew:false});records.set(INJECTOR,{token:INJECTOR,fn:IDENT,deps:EMPTY,value:this,useNew:false});this.scope=recursivelyProcessProviders(records,providers);}StaticInjector.prototype.get=function(token,notFoundValue,flags){if(flags===void 0){flags=exports.InjectFlags.Default;}var records=this._records;var record=records.get(token);if(record===undefined){// This means we have never seen this record, see if it is tree shakable provider.
var injectableDef=getInjectableDef(token);if(injectableDef){var providedIn=injectableDef&&injectableDef.providedIn;if(providedIn==='any'||providedIn!=null&&providedIn===this.scope){records.set(token,record=resolveProvider({provide:token,useFactory:injectableDef.factory,deps:EMPTY}));}}if(record===undefined){// Set record to null to make sure that we don't go through expensive lookup above again.
records.set(token,null);}}var lastInjector=setCurrentInjector(this);try{return tryResolveToken(token,record,records,this.parent,notFoundValue,flags);}catch(e){return catchInjectorError(e,token,'StaticInjectorError',this.source);}finally{setCurrentInjector(lastInjector);}};StaticInjector.prototype.toString=function(){var tokens=[],records=this._records;records.forEach(function(v,token){return tokens.push(stringify(token));});return"StaticInjector["+tokens.join(', ')+"]";};return StaticInjector;}();function resolveProvider(provider){var deps=computeDeps(provider);var fn=IDENT;var value=EMPTY;var useNew=false;var provide=resolveForwardRef(provider.provide);if(USE_VALUE in provider){// We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.
value=provider.useValue;}else if(provider.useFactory){fn=provider.useFactory;}else if(provider.useExisting){// Just use IDENT
}else if(provider.useClass){useNew=true;fn=resolveForwardRef(provider.useClass);}else if(typeof provide=='function'){useNew=true;fn=provide;}else{throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',provider);}return{deps:deps,fn:fn,useNew:useNew,value:value};}function multiProviderMixError(token){return staticError('Cannot mix multi providers and regular providers',token);}function recursivelyProcessProviders(records,provider){var scope=null;if(provider){provider=resolveForwardRef(provider);if(Array.isArray(provider)){// if we have an array recurse into the array
for(var i=0;i<provider.length;i++){scope=recursivelyProcessProviders(records,provider[i])||scope;}}else if(typeof provider==='function'){// Functions were supported in ReflectiveInjector, but are not here. For safety give useful
// error messages
throw staticError('Function/Class not supported',provider);}else if(provider&&_typeof(provider)==='object'&&provider.provide){// At this point we have what looks like a provider: {provide: ?, ....}
var token=resolveForwardRef(provider.provide);var resolvedProvider=resolveProvider(provider);if(provider.multi===true){// This is a multi provider.
var multiProvider=records.get(token);if(multiProvider){if(multiProvider.fn!==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}}else{// Create a placeholder factory which will look up the constituents of the multi provider.
records.set(token,multiProvider={token:provider.provide,deps:[],useNew:false,fn:MULTI_PROVIDER_FN,value:EMPTY});}// Treat the provider as the token.
token=provider;multiProvider.deps.push({token:token,options:6/* Default */});}var record=records.get(token);if(record&&record.fn==MULTI_PROVIDER_FN){throw multiProviderMixError(token);}if(token===INJECTOR_SCOPE){scope=resolvedProvider.value;}records.set(token,resolvedProvider);}else{throw staticError('Unexpected provider',provider);}}return scope;}function tryResolveToken(token,record,records,parent,notFoundValue,flags){try{return resolveToken(token,record,records,parent,notFoundValue,flags);}catch(e){// ensure that 'e' is of type Error.
if(!(e instanceof Error)){e=new Error(e);}var path=e[NG_TEMP_TOKEN_PATH]=e[NG_TEMP_TOKEN_PATH]||[];path.unshift(token);if(record&&record.value==CIRCULAR$1){// Reset the Circular flag.
record.value=EMPTY;}throw e;}}function resolveToken(token,record,records,parent,notFoundValue,flags){var _a;var value;if(record&&!(flags&exports.InjectFlags.SkipSelf)){// If we don't have a record, this implies that we don't own the provider hence don't know how
// to resolve it.
value=record.value;if(value==CIRCULAR$1){throw Error(NO_NEW_LINE$1+'Circular dependency');}else if(value===EMPTY){record.value=CIRCULAR$1;var obj=undefined;var useNew=record.useNew;var fn=record.fn;var depRecords=record.deps;var deps=EMPTY;if(depRecords.length){deps=[];for(var i=0;i<depRecords.length;i++){var depRecord=depRecords[i];var options=depRecord.options;var childRecord=options&2/* CheckSelf */?records.get(depRecord.token):undefined;deps.push(tryResolveToken(// Current Token to resolve
depRecord.token,// A record which describes how to resolve the token.
// If undefined, this means we don't have such a record
childRecord,// Other records we know about.
records,// If we don't know how to resolve dependency and we should not check parent for it,
// than pass in Null injector.
!childRecord&&!(options&4/* CheckParent */)?Injector.NULL:parent,options&1/* Optional */?null:Injector.THROW_IF_NOT_FOUND,exports.InjectFlags.Default));}}record.value=value=useNew?new((_a=fn).bind.apply(_a,__spread([void 0],deps)))():fn.apply(obj,deps);}}else if(!(flags&exports.InjectFlags.Self)){value=parent.get(token,notFoundValue,exports.InjectFlags.Default);}else if(!(flags&exports.InjectFlags.Optional)){value=Injector.NULL.get(token,notFoundValue);}else{value=Injector.NULL.get(token,typeof notFoundValue!=='undefined'?notFoundValue:null);}return value;}function computeDeps(provider){var deps=EMPTY;var providerDeps=provider.deps;if(providerDeps&&providerDeps.length){deps=[];for(var i=0;i<providerDeps.length;i++){var options=6/* Default */;var token=resolveForwardRef(providerDeps[i]);if(Array.isArray(token)){for(var j=0,annotations=token;j<annotations.length;j++){var annotation=annotations[j];if(annotation instanceof Optional||annotation==Optional){options=options|1/* Optional */;}else if(annotation instanceof SkipSelf||annotation==SkipSelf){options=options&~2/* CheckSelf */;}else if(annotation instanceof Self||annotation==Self){options=options&~4/* CheckParent */;}else if(annotation instanceof Inject){token=annotation.token;}else{token=resolveForwardRef(annotation);}}}deps.push({token:token,options:options});}}else if(provider.useExisting){var token=resolveForwardRef(provider.useExisting);deps=[{token:token,options:6/* Default */}];}else if(!providerDeps&&!(USE_VALUE in provider)){// useValue & useExisting are the only ones which are exempt from deps all others need it.
throw staticError('\'deps\' required',provider);}return deps;}function staticError(text,obj){return new Error(formatError(text,obj,'StaticInjectorError'));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function findFirstClosedCycle(keys){var res=[];for(var i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1){res.push(keys[i]);return res;}res.push(keys[i]);}return res;}function constructResolvingPath(keys){if(keys.length>1){var reversed=findFirstClosedCycle(keys.slice().reverse());var tokenStrs=reversed.map(function(k){return stringify(k.token);});return' ('+tokenStrs.join(' -> ')+')';}return'';}function injectionError(injector,key,constructResolvingMessage,originalError){var keys=[key];var errMsg=constructResolvingMessage(keys);var error=originalError?wrappedError(errMsg,originalError):Error(errMsg);error.addKey=addKey;error.keys=keys;error.injectors=[injector];error.constructResolvingMessage=constructResolvingMessage;error[ERROR_ORIGINAL_ERROR]=originalError;return error;}function addKey(injector,key){this.injectors.push(injector);this.keys.push(key);// Note: This updated message won't be reflected in the `.stack` property
this.message=this.constructResolvingMessage(this.keys);}/**
     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the
     * {@link Injector} does not have a {@link Provider} for the given key.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * class A {
     *   constructor(b:B) {}
     * }
     *
     * expect(() => Injector.resolveAndCreate([A])).toThrowError();
     * ```
     */function noProviderError(injector,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return"No provider for "+first+"!"+constructResolvingPath(keys);});}/**
     * Thrown when dependencies form a cycle.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * var injector = Injector.resolveAndCreate([
     *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
     *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
     * ]);
     *
     * expect(() => injector.get("one")).toThrowError();
     * ```
     *
     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
     */function cyclicDependencyError(injector,key){return injectionError(injector,key,function(keys){return"Cannot instantiate cyclic dependency!"+constructResolvingPath(keys);});}/**
     * Thrown when a constructing type returns with an Error.
     *
     * The `InstantiationError` class contains the original error plus the dependency graph which caused
     * this object to be instantiated.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * class A {
     *   constructor() {
     *     throw new Error('message');
     *   }
     * }
     *
     * var injector = Injector.resolveAndCreate([A]);

     * try {
     *   injector.get(A);
     * } catch (e) {
     *   expect(e instanceof InstantiationError).toBe(true);
     *   expect(e.originalException.message).toEqual("message");
     *   expect(e.originalStack).toBeDefined();
     * }
     * ```
     */function instantiationError(injector,originalException,originalStack,key){return injectionError(injector,key,function(keys){var first=stringify(keys[0].token);return originalException.message+": Error during instantiation of "+first+"!"+constructResolvingPath(keys)+".";},originalException);}/**
     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}
     * creation.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
     * ```
     */function invalidProviderError(provider){return Error("Invalid provider - only instances of Provider and Type are allowed, got: "+provider);}/**
     * Thrown when the class has no annotation information.
     *
     * Lack of annotation information prevents the {@link Injector} from determining which dependencies
     * need to be injected into the constructor.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * class A {
     *   constructor(b) {}
     * }
     *
     * expect(() => Injector.resolveAndCreate([A])).toThrowError();
     * ```
     *
     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.
     *
     * ```typescript
     * class B {}
     *
     * class A {
     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
     * }
     *
     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
     * ```
     *
     */function noAnnotationError(typeOrFunc,params){var signature=[];for(var i=0,ii=params.length;i<ii;i++){var parameter=params[i];if(!parameter||parameter.length==0){signature.push('?');}else{signature.push(parameter.map(stringify).join(' '));}}return Error('Cannot resolve all parameters for \''+stringify(typeOrFunc)+'\'('+signature.join(', ')+'). '+'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \''+stringify(typeOrFunc)+'\' is decorated with Injectable.');}/**
     * Thrown when getting an object by index.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * class A {}
     *
     * var injector = Injector.resolveAndCreate([A]);
     *
     * expect(() => injector.getAt(100)).toThrowError();
     * ```
     *
     */function outOfBoundsError(index){return Error("Index "+index+" is out-of-bounds.");}// TODO: add a working example after alpha38 is released
/**
     * Thrown when a multi provider and a regular provider are bound to the same token.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * expect(() => Injector.resolveAndCreate([
     *   { provide: "Strings", useValue: "string1", multi: true},
     *   { provide: "Strings", useValue: "string2", multi: false}
     * ])).toThrowError();
     * ```
     */function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error("Cannot mix multi providers and regular providers, got: "+provider1+" "+provider2);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A unique object used for retrieving items from the {@link ReflectiveInjector}.
     *
     * Keys have:
     * - a system-wide unique `id`.
     * - a `token`.
     *
     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows
     * the
     * injector to store created objects in a more efficient way.
     *
     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when
     * resolving
     * providers.
     *
     * @deprecated No replacement
     * @publicApi
     */var ReflectiveKey=/** @class */function(){/**
         * Private
         */function ReflectiveKey(token,id){this.token=token;this.id=id;if(!token){throw new Error('Token must be defined!');}this.displayName=stringify(this.token);}/**
         * Retrieves a `Key` for a token.
         */ReflectiveKey.get=function(token){return _globalKeyRegistry.get(resolveForwardRef(token));};Object.defineProperty(ReflectiveKey,"numberOfKeys",{/**
             * @returns the number of keys registered in the system.
             */get:function get(){return _globalKeyRegistry.numberOfKeys;},enumerable:true,configurable:true});return ReflectiveKey;}();var KeyRegistry=/** @class */function(){function KeyRegistry(){this._allKeys=new Map();}KeyRegistry.prototype.get=function(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token)){return this._allKeys.get(token);}var newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);this._allKeys.set(token,newKey);return newKey;};Object.defineProperty(KeyRegistry.prototype,"numberOfKeys",{get:function get(){return this._allKeys.size;},enumerable:true,configurable:true});return KeyRegistry;}();var _globalKeyRegistry=new KeyRegistry();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provides access to reflection data about symbols. Used internally by Angular
     * to power dependency injection and compilation.
     */var Reflector=/** @class */function(){function Reflector(reflectionCapabilities){this.reflectionCapabilities=reflectionCapabilities;}Reflector.prototype.updateCapabilities=function(caps){this.reflectionCapabilities=caps;};Reflector.prototype.factory=function(type){return this.reflectionCapabilities.factory(type);};Reflector.prototype.parameters=function(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);};Reflector.prototype.annotations=function(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);};Reflector.prototype.propMetadata=function(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);};Reflector.prototype.hasLifecycleHook=function(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);};Reflector.prototype.getter=function(name){return this.reflectionCapabilities.getter(name);};Reflector.prototype.setter=function(name){return this.reflectionCapabilities.setter(name);};Reflector.prototype.method=function(name){return this.reflectionCapabilities.method(name);};Reflector.prototype.importUri=function(type){return this.reflectionCapabilities.importUri(type);};Reflector.prototype.resourceUri=function(type){return this.reflectionCapabilities.resourceUri(type);};Reflector.prototype.resolveIdentifier=function(name,moduleUrl,members,runtime){return this.reflectionCapabilities.resolveIdentifier(name,moduleUrl,members,runtime);};Reflector.prototype.resolveEnum=function(identifier,name){return this.reflectionCapabilities.resolveEnum(identifier,name);};return Reflector;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The {@link Reflector} used internally in Angular to access metadata
     * about symbols.
     */var reflector=new Reflector(new ReflectionCapabilities());/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * `Dependency` is used by the framework to extend DI.
     * This is internal to Angular and should not be used directly.
     */var ReflectiveDependency=/** @class */function(){function ReflectiveDependency(key,optional,visibility){this.key=key;this.optional=optional;this.visibility=visibility;}ReflectiveDependency.fromKey=function(key){return new ReflectiveDependency(key,false,null);};return ReflectiveDependency;}();var _EMPTY_LIST=[];var ResolvedReflectiveProvider_=/** @class */function(){function ResolvedReflectiveProvider_(key,resolvedFactories,multiProvider){this.key=key;this.resolvedFactories=resolvedFactories;this.multiProvider=multiProvider;this.resolvedFactory=this.resolvedFactories[0];}return ResolvedReflectiveProvider_;}();/**
     * An internal resolved representation of a factory function created by resolving `Provider`.
     * @publicApi
     */var ResolvedReflectiveFactory=/** @class */function(){function ResolvedReflectiveFactory(/**
         * Factory function which can return an instance of an object represented by a key.
         */factory,/**
         * Arguments (dependencies) to the `factory` function.
         */dependencies){this.factory=factory;this.dependencies=dependencies;}return ResolvedReflectiveFactory;}();/**
     * Resolve a single provider.
     */function resolveReflectiveFactory(provider){var factoryFn;var resolvedDeps;if(provider.useClass){var useClass=resolveForwardRef(provider.useClass);factoryFn=reflector.factory(useClass);resolvedDeps=_dependenciesFor(useClass);}else if(provider.useExisting){factoryFn=function factoryFn(aliasInstance){return aliasInstance;};resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];}else if(provider.useFactory){factoryFn=provider.useFactory;resolvedDeps=constructDependencies(provider.useFactory,provider.deps);}else{factoryFn=function factoryFn(){return provider.useValue;};resolvedDeps=_EMPTY_LIST;}return new ResolvedReflectiveFactory(factoryFn,resolvedDeps);}/**
     * Converts the `Provider` into `ResolvedProvider`.
     *
     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider
     * syntax.
     */function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi||false);}/**
     * Resolve a list of Providers.
     */function resolveReflectiveProviders(providers){var normalized=_normalizeProviders(providers,[]);var resolved=normalized.map(resolveReflectiveProvider);var resolvedProviderMap=mergeResolvedReflectiveProviders(resolved,new Map());return Array.from(resolvedProviderMap.values());}/**
     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and
     * multi providers have been merged.
     */function mergeResolvedReflectiveProviders(providers,normalizedProvidersMap){for(var i=0;i<providers.length;i++){var provider=providers[i];var existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider){throw mixingMultiProvidersWithRegularProvidersError(existing,provider);}if(provider.multiProvider){for(var j=0;j<provider.resolvedFactories.length;j++){existing.resolvedFactories.push(provider.resolvedFactories[j]);}}else{normalizedProvidersMap.set(provider.key.id,provider);}}else{var resolvedProvider=void 0;if(provider.multiProvider){resolvedProvider=new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider);}else{resolvedProvider=provider;}normalizedProvidersMap.set(provider.key.id,resolvedProvider);}}return normalizedProvidersMap;}function _normalizeProviders(providers,res){providers.forEach(function(b){if(b instanceof Type){res.push({provide:b,useClass:b});}else if(b&&_typeof(b)=='object'&&b.provide!==undefined){res.push(b);}else if(Array.isArray(b)){_normalizeProviders(b,res);}else{throw invalidProviderError(b);}});return res;}function constructDependencies(typeOrFunc,dependencies){if(!dependencies){return _dependenciesFor(typeOrFunc);}else{var params_1=dependencies.map(function(t){return[t];});return dependencies.map(function(t){return _extractToken(typeOrFunc,t,params_1);});}}function _dependenciesFor(typeOrFunc){var params=reflector.parameters(typeOrFunc);if(!params)return[];if(params.some(function(p){return p==null;})){throw noAnnotationError(typeOrFunc,params);}return params.map(function(p){return _extractToken(typeOrFunc,p,params);});}function _extractToken(typeOrFunc,metadata,params){var token=null;var optional=false;if(!Array.isArray(metadata)){if(metadata instanceof Inject){return _createDependency(metadata.token,optional,null);}else{return _createDependency(metadata,optional,null);}}var visibility=null;for(var i=0;i<metadata.length;++i){var paramMetadata=metadata[i];if(paramMetadata instanceof Type){token=paramMetadata;}else if(paramMetadata instanceof Inject){token=paramMetadata.token;}else if(paramMetadata instanceof Optional){optional=true;}else if(paramMetadata instanceof Self||paramMetadata instanceof SkipSelf){visibility=paramMetadata;}else if(paramMetadata instanceof InjectionToken){token=paramMetadata;}}token=resolveForwardRef(token);if(token!=null){return _createDependency(token,optional,visibility);}else{throw noAnnotationError(typeOrFunc,params);}}function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Threshold for the dynamic version
var UNDEFINED={};/**
     * A ReflectiveDependency injection container used for instantiating objects and resolving
     * dependencies.
     *
     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
     * constructor dependencies.
     *
     * In typical use, application code asks for the dependencies in the constructor and they are
     * resolved by the `Injector`.
     *
     * @usageNotes
     * ### Example
     *
     * The following example creates an `Injector` configured to create `Engine` and `Car`.
     *
     * ```typescript
     * @Injectable()
     * class Engine {
     * }
     *
     * @Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * var car = injector.get(Car);
     * expect(car instanceof Car).toBe(true);
     * expect(car.engine instanceof Engine).toBe(true);
     * ```
     *
     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
     * resolve all of the object's dependencies automatically.
     *
     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.
     * @publicApi
     */var ReflectiveInjector=/** @class */function(){function ReflectiveInjector(){}/**
         * Turns an array of provider definitions into an array of resolved providers.
         *
         * A resolution is a process of flattening multiple nested arrays and converting individual
         * providers into an array of `ResolvedReflectiveProvider`s.
         *
         * @usageNotes
         * ### Example
         *
         * ```typescript
         * @Injectable()
         * class Engine {
         * }
         *
         * @Injectable()
         * class Car {
         *   constructor(public engine:Engine) {}
         * }
         *
         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
         *
         * expect(providers.length).toEqual(2);
         *
         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
         * expect(providers[0].key.displayName).toBe("Car");
         * expect(providers[0].dependencies.length).toEqual(1);
         * expect(providers[0].factory).toBeDefined();
         *
         * expect(providers[1].key.displayName).toBe("Engine");
         * });
         * ```
         *
         */ReflectiveInjector.resolve=function(providers){return resolveReflectiveProviders(providers);};/**
         * Resolves an array of providers and creates an injector from those providers.
         *
         * The passed-in providers can be an array of `Type`, `Provider`,
         * or a recursive array of more providers.
         *
         * @usageNotes
         * ### Example
         *
         * ```typescript
         * @Injectable()
         * class Engine {
         * }
         *
         * @Injectable()
         * class Car {
         *   constructor(public engine:Engine) {}
         * }
         *
         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
         * expect(injector.get(Car) instanceof Car).toBe(true);
         * ```
         */ReflectiveInjector.resolveAndCreate=function(providers,parent){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent);};/**
         * Creates an injector from previously resolved providers.
         *
         * This API is the recommended way to construct injectors in performance-sensitive parts.
         *
         * @usageNotes
         * ### Example
         *
         * ```typescript
         * @Injectable()
         * class Engine {
         * }
         *
         * @Injectable()
         * class Car {
         *   constructor(public engine:Engine) {}
         * }
         *
         * var providers = ReflectiveInjector.resolve([Car, Engine]);
         * var injector = ReflectiveInjector.fromResolvedProviders(providers);
         * expect(injector.get(Car) instanceof Car).toBe(true);
         * ```
         */ReflectiveInjector.fromResolvedProviders=function(providers,parent){return new ReflectiveInjector_(providers,parent);};return ReflectiveInjector;}();var ReflectiveInjector_=/** @class */function(){/**
         * Private
         */function ReflectiveInjector_(_providers,_parent){/** @internal */this._constructionCounter=0;this._providers=_providers;this.parent=_parent||null;var len=_providers.length;this.keyIds=[];this.objs=[];for(var i=0;i<len;i++){this.keyIds[i]=_providers[i].key.id;this.objs[i]=UNDEFINED;}}ReflectiveInjector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=THROW_IF_NOT_FOUND;}return this._getByKey(ReflectiveKey.get(token),null,notFoundValue);};ReflectiveInjector_.prototype.resolveAndCreateChild=function(providers){var ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders);};ReflectiveInjector_.prototype.createChildFromResolved=function(providers){var inj=new ReflectiveInjector_(providers);inj.parent=this;return inj;};ReflectiveInjector_.prototype.resolveAndInstantiate=function(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);};ReflectiveInjector_.prototype.instantiateResolved=function(provider){return this._instantiateProvider(provider);};ReflectiveInjector_.prototype.getProviderAtIndex=function(index){if(index<0||index>=this._providers.length){throw outOfBoundsError(index);}return this._providers[index];};/** @internal */ReflectiveInjector_.prototype._new=function(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects()){throw cyclicDependencyError(this,provider.key);}return this._instantiateProvider(provider);};ReflectiveInjector_.prototype._getMaxNumberOfObjects=function(){return this.objs.length;};ReflectiveInjector_.prototype._instantiateProvider=function(provider){if(provider.multiProvider){var res=[];for(var i=0;i<provider.resolvedFactories.length;++i){res[i]=this._instantiate(provider,provider.resolvedFactories[i]);}return res;}else{return this._instantiate(provider,provider.resolvedFactories[0]);}};ReflectiveInjector_.prototype._instantiate=function(provider,ResolvedReflectiveFactory){var _this=this;var factory=ResolvedReflectiveFactory.factory;var deps;try{deps=ResolvedReflectiveFactory.dependencies.map(function(dep){return _this._getByReflectiveDependency(dep);});}catch(e){if(e.addKey){e.addKey(this,provider.key);}throw e;}var obj;try{obj=factory.apply(void 0,__spread(deps));}catch(e){throw instantiationError(this,e,e.stack,provider.key);}return obj;};ReflectiveInjector_.prototype._getByReflectiveDependency=function(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND);};ReflectiveInjector_.prototype._getByKey=function(key,visibility,notFoundValue){if(key===ReflectiveInjector_.INJECTOR_KEY){return this;}if(visibility instanceof Self){return this._getByKeySelf(key,notFoundValue);}else{return this._getByKeyDefault(key,notFoundValue,visibility);}};ReflectiveInjector_.prototype._getObjByKeyId=function(keyId){for(var i=0;i<this.keyIds.length;i++){if(this.keyIds[i]===keyId){if(this.objs[i]===UNDEFINED){this.objs[i]=this._new(this._providers[i]);}return this.objs[i];}}return UNDEFINED;};/** @internal */ReflectiveInjector_.prototype._throwOrNull=function(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND){return notFoundValue;}else{throw noProviderError(this,key);}};/** @internal */ReflectiveInjector_.prototype._getByKeySelf=function(key,notFoundValue){var obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue);};/** @internal */ReflectiveInjector_.prototype._getByKeyDefault=function(key,notFoundValue,visibility){var inj;if(visibility instanceof SkipSelf){inj=this.parent;}else{inj=this;}while(inj instanceof ReflectiveInjector_){var inj_=inj;var obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_.parent;}if(inj!==null){return inj.get(key.token,notFoundValue);}else{return this._throwOrNull(key,notFoundValue);}};Object.defineProperty(ReflectiveInjector_.prototype,"displayName",{get:function get(){var providers=_mapProviders(this,function(b){return' "'+b.key.displayName+'" ';}).join(', ');return"ReflectiveInjector(providers: ["+providers+"])";},enumerable:true,configurable:true});ReflectiveInjector_.prototype.toString=function(){return this.displayName;};ReflectiveInjector_.INJECTOR_KEY=ReflectiveKey.get(Injector);return ReflectiveInjector_;}();function _mapProviders(injector,fn){var res=[];for(var i=0;i<injector._providers.length;++i){res[i]=fn(injector.getProviderAtIndex(i));}return res;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)
     * that will populate the `entryComponents` field of components and NgModules
     * based on its `useValue` property value.
     * All components that are referenced in the `useValue` value (either directly
     * or in a nested array or map) are added to the `entryComponents` property.
     *
     * @usageNotes
     *
     * The following example shows how the router can populate the `entryComponents`
     * field of an NgModule based on a router configuration that refers
     * to components.
     *
     * ```typescript
     * // helper function inside the router
     * function provideRoutes(routes) {
     *   return [
     *     {provide: ROUTES, useValue: routes},
     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
     *   ];
     * }
     *
     * // user code
     * let routes = [
     *   {path: '/root', component: RootComp},
     *   {path: '/teams', component: TeamsComp}
     * ];
     *
     * @NgModule({
     *   providers: [provideRoutes(routes)]
     * })
     * class ModuleWithRoutes {}
     * ```
     *
     * @publicApi
     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.
     */var ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken('AnalyzeForEntryComponents');/**
     * Base class for query metadata.
     *
     * @see `ContentChildren`.
     * @see `ContentChild`.
     * @see `ViewChildren`.
     * @see `ViewChild`.
     *
     * @publicApi
     */var Query=/** @class */function(){function Query(){}return Query;}();var ɵ0$a=function ɵ0$a(selector,data){if(data===void 0){data={};}return _assign4({selector:selector,first:false,isViewQuery:false,descendants:false},data);};/**
     * ContentChildren decorator and metadata.
     *
     *
     * @Annotation
     * @publicApi
     */var ContentChildren=makePropDecorator('ContentChildren',ɵ0$a,Query);var ɵ1$2=function ɵ1$2(selector,data){if(data===void 0){data={};}return _assign4({selector:selector,first:true,isViewQuery:false,descendants:true},data);};/**
     * ContentChild decorator and metadata.
     *
     *
     * @Annotation
     *
     * @publicApi
     */var ContentChild=makePropDecorator('ContentChild',ɵ1$2,Query);var ɵ2=function ɵ2(selector,data){if(data===void 0){data={};}return _assign4({selector:selector,first:false,isViewQuery:true,descendants:true},data);};/**
     * ViewChildren decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var ViewChildren=makePropDecorator('ViewChildren',ɵ2,Query);var ɵ3=function ɵ3(selector,data){return _assign4({selector:selector,first:true,isViewQuery:true,descendants:true},data);};/**
     * ViewChild decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var ViewChild=makePropDecorator('ViewChild',ɵ3,Query);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Used to resolve resource URLs on `@Component` when used with JIT compilation.
     *
     * Example:
     * ```
     * @Component({
     *   selector: 'my-comp',
     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution
     * })
     * class MyComponent{
     * }
     *
     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process
     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.
     *
     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into
     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.
     *
     * // Use browser's `fetch()` function as the default resource resolution strategy.
     * resolveComponentResources(fetch).then(() => {
     *   // After resolution all URLs have been converted into `template` strings.
     *   renderComponent(MyComponent);
     * });
     *
     * ```
     *
     * NOTE: In AOT the resolution happens during compilation, and so there should be no need
     * to call this method outside JIT mode.
     *
     * @param resourceResolver a function which is responsible for returning a `Promise` to the
     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.
     */function resolveComponentResources(resourceResolver){// Store all promises which are fetching the resources.
var componentResolved=[];// Cache so that we don't fetch the same resource more than once.
var urlMap=new Map();function cachedResourceResolve(url){var promise=urlMap.get(url);if(!promise){var resp=resourceResolver(url);urlMap.set(url,promise=resp.then(unwrapResponse));}return promise;}componentResourceResolutionQueue.forEach(function(component,type){var promises=[];if(component.templateUrl){promises.push(cachedResourceResolve(component.templateUrl).then(function(template){component.template=template;}));}var styleUrls=component.styleUrls;var styles=component.styles||(component.styles=[]);var styleOffset=component.styles.length;styleUrls&&styleUrls.forEach(function(styleUrl,index){styles.push('');// pre-allocate array.
promises.push(cachedResourceResolve(styleUrl).then(function(style){styles[styleOffset+index]=style;styleUrls.splice(styleUrls.indexOf(styleUrl),1);if(styleUrls.length==0){component.styleUrls=undefined;}}));});var fullyResolved=Promise.all(promises).then(function(){return componentDefResolved(type);});componentResolved.push(fullyResolved);});clearResolutionOfComponentResourcesQueue();return Promise.all(componentResolved).then(function(){return undefined;});}var componentResourceResolutionQueue=new Map();// Track when existing ɵcmp for a Type is waiting on resources.
var componentDefPendingResolution=new Set();function maybeQueueResolutionOfComponentResources(type,metadata){if(componentNeedsResolution(metadata)){componentResourceResolutionQueue.set(type,metadata);componentDefPendingResolution.add(type);}}function isComponentDefPendingResolution(type){return componentDefPendingResolution.has(type);}function componentNeedsResolution(component){return!!(component.templateUrl&&!component.hasOwnProperty('template')||component.styleUrls&&component.styleUrls.length);}function clearResolutionOfComponentResourcesQueue(){var old=componentResourceResolutionQueue;componentResourceResolutionQueue=new Map();return old;}function restoreComponentResolutionQueue(queue){componentDefPendingResolution.clear();queue.forEach(function(_,type){return componentDefPendingResolution.add(type);});componentResourceResolutionQueue=queue;}function isComponentResourceResolutionQueueEmpty(){return componentResourceResolutionQueue.size===0;}function unwrapResponse(response){return typeof response=='string'?response:response.text();}function componentDefResolved(type){componentDefPendingResolution["delete"](type);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Compute the static styling (class/style) from `TAttributes`.
     *
     * This function should be called during `firstCreatePass` only.
     *
     * @param tNode The `TNode` into which the styling information should be loaded.
     * @param attrs `TAttributes` containing the styling information.
     * @param writeToHost Where should the resulting static styles be written?
     *   - `false` Write to `TNode.stylesWithoutHost` / `TNode.classesWithoutHost`
     *   - `true` Write to `TNode.styles` / `TNode.classes`
     */function computeStaticStyling(tNode,attrs,writeToHost){ngDevMode&&assertFirstCreatePass(getTView(),'Expecting to be called in first template pass only');var styles=writeToHost?tNode.styles:null;var classes=writeToHost?tNode.classes:null;var mode=0;if(attrs!==null){for(var i=0;i<attrs.length;i++){var value=attrs[i];if(typeof value==='number'){mode=value;}else if(mode==1/* Classes */){classes=concatStringsWithSpace(classes,value);}else if(mode==2/* Styles */){var style=value;var styleValue=attrs[++i];styles=concatStringsWithSpace(styles,style+': '+styleValue+';');}}}writeToHost?tNode.styles=styles:tNode.stylesWithoutHost=styles;writeToHost?tNode.classes=classes:tNode.classesWithoutHost=classes;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _symbolIterator=null;function getSymbolIterator(){if(!_symbolIterator){var Symbol_1=_global['Symbol'];if(Symbol_1&&Symbol_1.iterator){_symbolIterator=Symbol_1.iterator;}else{// es6-shim specific logic
var keys=Object.getOwnPropertyNames(Map.prototype);for(var i=0;i<keys.length;++i){var key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function isIterable(obj){return obj!==null&&_typeof(obj)==='object'&&obj[getSymbolIterator()]!==undefined;}function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&// JS Map are iterables but return entries as [k, v]
getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}function areIterablesEqual(a,b,comparator){var iterator1=a[getSymbolIterator()]();var iterator2=b[getSymbolIterator()]();while(true){var item1=iterator1.next();var item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}function iterateListLike(obj,fn){if(Array.isArray(obj)){for(var i=0;i<obj.length;i++){fn(obj[i]);}}else{var iterator=obj[getSymbolIterator()]();var item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}function isJsObject(o){return o!==null&&(typeof o==='function'||_typeof(o)==='object');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // JS has NaN !== NaN
function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}function devModeEqual(a,b){var isListLikeIterableA=isListLikeIterable(a);var isListLikeIterableB=isListLikeIterable(b);if(isListLikeIterableA&&isListLikeIterableB){return areIterablesEqual(a,b,devModeEqual);}else{var isAObject=a&&(_typeof(a)==='object'||typeof a==='function');var isBObject=b&&(_typeof(b)==='object'||typeof b==='function');if(!isListLikeIterableA&&isAObject&&!isListLikeIterableB&&isBObject){return true;}else{return looseIdentical(a,b);}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function devModeEqual$1(a,b){var isListLikeIterableA=isListLikeIterable$1(a);var isListLikeIterableB=isListLikeIterable$1(b);if(isListLikeIterableA&&isListLikeIterableB){return areIterablesEqual$1(a,b,devModeEqual$1);}else{var isAObject=a&&(_typeof(a)==='object'||typeof a==='function');var isBObject=b&&(_typeof(b)==='object'||typeof b==='function');if(!isListLikeIterableA&&isAObject&&!isListLikeIterableB&&isBObject){return true;}else{return looseIdentical(a,b);}}}/**
     * Indicates that the result of a {@link Pipe} transformation has changed even though the
     * reference has not changed.
     *
     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value
     * is stored.
     *
     * Example:
     *
     * ```
     * if (this._latestValue === this._latestReturnedValue) {
     *    return this._latestReturnedValue;
     *  } else {
     *    this._latestReturnedValue = this._latestValue;
     *    return WrappedValue.wrap(this._latestValue); // this will force update
     *  }
     * ```
     *
     * @publicApi
     */var WrappedValue=/** @class */function(){function WrappedValue(value){this.wrapped=value;}/** Creates a wrapped value. */WrappedValue.wrap=function(value){return new WrappedValue(value);};/**
         * Returns the underlying value of a wrapped value.
         * Returns the given `value` when it is not wrapped.
         **/WrappedValue.unwrap=function(value){return WrappedValue.isWrapped(value)?value.wrapped:value;};/** Returns true if `value` is a wrapped value. */WrappedValue.isWrapped=function(value){return value instanceof WrappedValue;};return WrappedValue;}();function isListLikeIterable$1(obj){if(!isJsObject$1(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&// JS Map are iterables but return entries as [k, v]
getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}function areIterablesEqual$1(a,b,comparator){var iterator1=a[getSymbolIterator()]();var iterator2=b[getSymbolIterator()]();while(true){var item1=iterator1.next();var item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}function iterateListLike$1(obj,fn){if(Array.isArray(obj)){for(var i=0;i<obj.length;i++){fn(obj[i]);}}else{var iterator=obj[getSymbolIterator()]();var item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}function isJsObject$1(o){return o!==null&&(typeof o==='function'||_typeof(o)==='object');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // TODO(misko): consider inlining
/** Updates binding and returns the value. */function updateBinding(lView,bindingIndex,value){return lView[bindingIndex]=value;}/** Gets the current binding value. */function getBinding(lView,bindingIndex){ngDevMode&&assertDataInRange(lView,bindingIndex);ngDevMode&&assertNotSame(lView[bindingIndex],NO_CHANGE,'Stored value should never be NO_CHANGE.');return lView[bindingIndex];}/**
     * Updates binding if changed, then returns whether it was updated.
     *
     * This function also checks the `CheckNoChangesMode` and throws if changes are made.
     * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE
     * behavior.
     *
     * @param lView current `LView`
     * @param bindingIndex The binding in the `LView` to check
     * @param value New value to check against `lView[bindingIndex]`
     * @returns `true` if the bindings has changed. (Throws if binding has changed during
     *          `CheckNoChangesMode`)
     */function bindingUpdated(lView,bindingIndex,value){ngDevMode&&assertNotSame(value,NO_CHANGE,'Incoming value should never be NO_CHANGE.');ngDevMode&&assertLessThan(bindingIndex,lView.length,"Slot should have been initialized to NO_CHANGE");var oldValue=lView[bindingIndex];if(Object.is(oldValue,value)){return false;}else{if(ngDevMode&&getCheckNoChangesMode()){// View engine didn't report undefined values as changed on the first checkNoChanges pass
// (before the change detection was run).
var oldValueToCompare=oldValue!==NO_CHANGE?oldValue:undefined;if(!devModeEqual$1(oldValueToCompare,value)){var details=getExpressionChangedErrorDetails(lView,bindingIndex,oldValueToCompare,value);throwErrorIfNoChangesMode(oldValue===NO_CHANGE,details.oldValue,details.newValue,details.propName);}// There was a change, but the `devModeEqual` decided that the change is exempt from an error.
// For this reason we exit as if no change. The early exit is needed to prevent the changed
// value to be written into `LView` (If we would write the new value that we would not see it
// as change on next CD.)
return false;}lView[bindingIndex]=value;return true;}}/** Updates 2 bindings if changed, then returns whether either was updated. */function bindingUpdated2(lView,bindingIndex,exp1,exp2){var different=bindingUpdated(lView,bindingIndex,exp1);return bindingUpdated(lView,bindingIndex+1,exp2)||different;}/** Updates 3 bindings if changed, then returns whether any was updated. */function bindingUpdated3(lView,bindingIndex,exp1,exp2,exp3){var different=bindingUpdated2(lView,bindingIndex,exp1,exp2);return bindingUpdated(lView,bindingIndex+2,exp3)||different;}/** Updates 4 bindings if changed, then returns whether any was updated. */function bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4){var different=bindingUpdated2(lView,bindingIndex,exp1,exp2);return bindingUpdated2(lView,bindingIndex+2,exp3,exp4)||different;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Updates the value of or removes a bound attribute on an Element.
     *
     * Used in the case of `[attr.title]="value"`
     *
     * @param name name The name of the attribute.
     * @param value value The attribute is removed when value is `null` or `undefined`.
     *                  Otherwise the attribute value is set to the stringified value.
     * @param sanitizer An optional function used to sanitize the value.
     * @param namespace Optional namespace to use when setting the attribute.
     *
     * @codeGenApi
     */function ɵɵattribute(name,value,sanitizer,namespace){var lView=getLView();var bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){var tView=getTView();var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,name,value,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,'attr.'+name,bindingIndex);}return ɵɵattribute;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Create interpolation bindings with a variable number of expressions.
     *
     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.
     * Those are faster because there is no need to create an array of expressions and iterate over it.
     *
     * `values`:
     * - has static text at even indexes,
     * - has evaluated expressions at odd indexes.
     *
     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.
     */function interpolationV(lView,values){ngDevMode&&assertLessThan(2,values.length,'should have at least 3 values');ngDevMode&&assertEqual(values.length%2,1,'should have an odd number of values');var isBindingUpdated=false;var bindingIndex=getBindingIndex();for(var i=1;i<values.length;i+=2){// Check if bindings (odd indexes) have changed
isBindingUpdated=bindingUpdated(lView,bindingIndex++,values[i])||isBindingUpdated;}setBindingIndex(bindingIndex);if(!isBindingUpdated){return NO_CHANGE;}// Build the updated content
var content=values[0];for(var i=1;i<values.length;i+=2){content+=renderStringify(values[i])+values[i+1];}return content;}/**
     * Creates an interpolation binding with 1 expression.
     *
     * @param prefix static value used for concatenation only.
     * @param v0 value checked for change.
     * @param suffix static value used for concatenation only.
     */function interpolation1(lView,prefix,v0,suffix){var different=bindingUpdated(lView,nextBindingIndex(),v0);return different?prefix+renderStringify(v0)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 2 expressions.
     */function interpolation2(lView,prefix,v0,i0,v1,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated2(lView,bindingIndex,v0,v1);incrementBindingIndex(2);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 3 expressions.
     */function interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated3(lView,bindingIndex,v0,v1,v2);incrementBindingIndex(3);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+suffix:NO_CHANGE;}/**
     * Create an interpolation binding with 4 expressions.
     */function interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);incrementBindingIndex(4);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 5 expressions.
     */function interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);different=bindingUpdated(lView,bindingIndex+4,v4)||different;incrementBindingIndex(5);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 6 expressions.
     */function interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);different=bindingUpdated2(lView,bindingIndex+4,v4,v5)||different;incrementBindingIndex(6);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 7 expressions.
     */function interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);different=bindingUpdated3(lView,bindingIndex+4,v4,v5,v6)||different;incrementBindingIndex(7);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+i5+renderStringify(v6)+suffix:NO_CHANGE;}/**
     * Creates an interpolation binding with 8 expressions.
     */function interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var bindingIndex=getBindingIndex();var different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);different=bindingUpdated4(lView,bindingIndex+4,v4,v5,v6,v7)||different;incrementBindingIndex(8);return different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+i5+renderStringify(v6)+i6+renderStringify(v7)+suffix:NO_CHANGE;}/**
     *
     * Update an interpolated attribute on an element with single bound value surrounded by text.
     *
     * Used when the value passed to a property has 1 interpolated value in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate1(attrName,prefix,v0,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation1(lView,prefix,v0,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-1,prefix,suffix);}return ɵɵattributeInterpolate1;}/**
     *
     * Update an interpolated attribute on an element with 2 bound values surrounded by text.
     *
     * Used when the value passed to a property has 2 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate2(attrName,prefix,v0,i0,v1,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-2,prefix,i0,suffix);}return ɵɵattributeInterpolate2;}/**
     *
     * Update an interpolated attribute on an element with 3 bound values surrounded by text.
     *
     * Used when the value passed to a property has 3 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate3(
     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate3(attrName,prefix,v0,i0,v1,i1,v2,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-3,prefix,i0,i1,suffix);}return ɵɵattributeInterpolate3;}/**
     *
     * Update an interpolated attribute on an element with 4 bound values surrounded by text.
     *
     * Used when the value passed to a property has 4 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate4(
     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate4(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-4,prefix,i0,i1,i2,suffix);}return ɵɵattributeInterpolate4;}/**
     *
     * Update an interpolated attribute on an element with 5 bound values surrounded by text.
     *
     * Used when the value passed to a property has 5 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate5(
     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate5(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-5,prefix,i0,i1,i2,i3,suffix);}return ɵɵattributeInterpolate5;}/**
     *
     * Update an interpolated attribute on an element with 6 bound values surrounded by text.
     *
     * Used when the value passed to a property has 6 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate6(
     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate6(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-6,prefix,i0,i1,i2,i3,i4,suffix);}return ɵɵattributeInterpolate6;}/**
     *
     * Update an interpolated attribute on an element with 7 bound values surrounded by text.
     *
     * Used when the value passed to a property has 7 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate7(
     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate7(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-7,prefix,i0,i1,i2,i3,i4,i5,suffix);}return ɵɵattributeInterpolate7;}/**
     *
     * Update an interpolated attribute on an element with 8 bound values surrounded by text.
     *
     * Used when the value passed to a property has 8 interpolated values in it:
     *
     * ```html
     * <div attr.title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolate8(
     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
     * ```
     *
     * @param attrName The name of the attribute to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param i6 Static value used for concatenation only.
     * @param v7 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolate8(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,sanitizer,namespace){var lView=getLView();var interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);if(interpolatedValue!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace);ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,'attr.'+attrName,getBindingIndex()-8,prefix,i0,i1,i2,i3,i4,i5,i6,suffix);}return ɵɵattributeInterpolate8;}/**
     * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div
     *  title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵattributeInterpolateV(
     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
     *  'suffix']);
     * ```
     *
     * @param attrName The name of the attribute to update.
     * @param values The collection of values and the strings in-between those values, beginning with
     * a string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵattributeInterpolateV(attrName,values,sanitizer,namespace){var lView=getLView();var interpolated=interpolationV(lView,values);if(interpolated!==NO_CHANGE){var tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolated,sanitizer,namespace);if(ngDevMode){var interpolationInBetween=[values[0]];// prefix
for(var i=2;i<values.length;i+=2){interpolationInBetween.push(values[i]);}storePropertyBindingMetadata.apply(void 0,__spread([getTView().data,tNode,'attr.'+attrName,getBindingIndex()-interpolationInBetween.length+1],interpolationInBetween));}}return ɵɵattributeInterpolateV;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Synchronously perform change detection on a component (and possibly its sub-components).
     *
     * This function triggers change detection in a synchronous way on a component.
     *
     * @param component The component which the change detection should be performed on.
     */function detectChanges(component){var view=getComponentViewByInstance(component);detectChangesInternal(view[TVIEW],view,component);}/**
     * Marks the component as dirty (needing change detection). Marking a component dirty will
     * schedule a change detection on it at some point in the future.
     *
     * Marking an already dirty component as dirty won't do anything. Only one outstanding change
     * detection can be scheduled per component tree.
     *
     * @param component Component to mark as dirty.
     */function markDirty(component){ngDevMode&&assertDefined(component,'component');var rootView=markViewDirty(getComponentViewByInstance(component));ngDevMode&&assertDefined(rootView[CONTEXT],'rootContext should be defined');scheduleTick(rootView[CONTEXT],1/* DetectChanges */);}/**
     * Used to perform change detection on the whole application.
     *
     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`
     * executes lifecycle hooks and conditionally checks components based on their
     * `ChangeDetectionStrategy` and dirtiness.
     *
     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally
     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a
     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can
     * be changed when calling `renderComponent` and providing the `scheduler` option.
     */function tick(component){var rootView=getRootView(component);var rootContext=rootView[CONTEXT];tickRootContext(rootContext);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function templateFirstCreatePass(index,tView,lView,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex){ngDevMode&&assertFirstCreatePass(tView);ngDevMode&&ngDevMode.firstCreatePass++;var tViewConsts=tView.consts;// TODO(pk): refactor getOrCreateTNode to have the "create" only version
var tNode=getOrCreateTNode(tView,lView[T_HOST],index,0/* Container */,tagName||null,getConstant(tViewConsts,attrsIndex));resolveDirectives(tView,lView,tNode,getConstant(tViewConsts,localRefsIndex));registerPostOrderHooks(tView,tNode);var embeddedTView=tNode.tViews=createTView(2/* Embedded */,-1,templateFn,decls,vars,tView.directiveRegistry,tView.pipeRegistry,null,tView.schemas,tViewConsts);var embeddedTViewNode=createTNode(tView,null,2/* View */,-1,null,null);embeddedTViewNode.injectorIndex=tNode.injectorIndex;embeddedTView.node=embeddedTViewNode;if(tView.queries!==null){tView.queries.template(tView,tNode);embeddedTView.queries=tView.queries.embeddedTView(tNode);}return tNode;}/**
     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.
     *
     * <ng-template #foo>
     *    <div></div>
     * </ng-template>
     *
     * @param index The index of the container in the data array
     * @param templateFn Inline template
     * @param decls The number of nodes, local refs, and pipes for this template
     * @param vars The number of bindings for this template
     * @param tagName The name of the container element, if applicable
     * @param attrsIndex Index of template attributes in the `consts` array.
     * @param localRefs Index of the local references in the `consts` array.
     * @param localRefExtractor A function which extracts local-refs values from the template.
     *        Defaults to the current element associated with the local-ref.
     *
     * @codeGenApi
     */function ɵɵtemplate(index,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex,localRefExtractor){var lView=getLView();var tView=getTView();var adjustedIndex=index+HEADER_OFFSET;var tNode=tView.firstCreatePass?templateFirstCreatePass(index,tView,lView,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setPreviousOrParentTNode(tNode,false);var comment=lView[RENDERER].createComment(ngDevMode?'container':'');appendChild(tView,lView,comment,tNode);attachPatchData(comment,lView);addToViewTree(lView,lView[adjustedIndex]=createLContainer(comment,lView,comment,tNode));if(isDirectiveHost(tNode)){createDirectivesInstances(tView,lView,tNode);}if(localRefsIndex!=null){saveResolvedLocalsInData(lView,tNode,localRefExtractor);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /** Store a value in the `data` at a given `index`. */function store(tView,lView,index,value){// We don't store any static data for local variables, so the first time
// we see the template, we should store as null to avoid a sparse array
var adjustedIndex=index+HEADER_OFFSET;if(adjustedIndex>=tView.data.length){tView.data[adjustedIndex]=null;tView.blueprint[adjustedIndex]=null;}lView[adjustedIndex]=value;}/**
     * Retrieves a local reference from the current contextViewData.
     *
     * If the reference to retrieve is in a parent view, this instruction is used in conjunction
     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.
     *
     * @param index The index of the local ref in contextViewData.
     *
     * @codeGenApi
     */function ɵɵreference(index){var contextLView=getContextLView();return load(contextLView,index);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function ɵɵdirectiveInject(token,flags){if(flags===void 0){flags=exports.InjectFlags.Default;}var lView=getLView();// Fall back to inject() if view hasn't been created. This situation can happen in tests
// if inject utilities are used before bootstrapping.
if(lView==null)return ɵɵinject(token,flags);var tNode=getPreviousOrParentTNode();return getOrCreateInjectable(tNode,lView,resolveForwardRef(token),flags);}/**
     * Facade for the attribute injection from DI.
     *
     * @codeGenApi
     */function ɵɵinjectAttribute(attrNameToInject){return injectAttributeImpl(getPreviousOrParentTNode(),attrNameToInject);}/**
     * Throws an error indicating that a factory function could not be generated by the compiler for a
     * particular class.
     *
     * This instruction allows the actual error message to be optimized away when ngDevMode is turned
     * off, saving bytes of generated code while still providing a good experience in dev mode.
     *
     * The name of the class is not mentioned here, but will be in the generated factory function name
     * and thus in the stack trace.
     *
     * @codeGenApi
     */function ɵɵinvalidFactory(){var msg=ngDevMode?"This constructor was not compatible with Dependency Injection.":'invalid';throw new Error(msg);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Update a property on a selected element.
     *
     * Operates on the element selected by index via the {@link select} instruction.
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled
     *
     * @param propName Name of property. Because it is going to DOM, this is not subject to
     *        renaming as part of minification.
     * @param value New value to write.
     * @param sanitizer An optional function used to sanitize the value.
     * @returns This function returns itself so that it may be chained
     * (e.g. `property('name', ctx.name)('title', ctx.title)`)
     *
     * @codeGenApi
     */function ɵɵproperty(propName,value,sanitizer){var lView=getLView();var bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,value,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex);}return ɵɵproperty;}/**
     * Given `<div style="..." my-dir>` and `MyDir` with `@Input('style')` we need to write to
     * directive input.
     */function setDirectiveInputsWhichShadowsStyling(tView,tNode,lView,value,isClassBased){var inputs=tNode.inputs;var property=isClassBased?'class':'style';// We support both 'class' and `className` hence the fallback.
setInputsForProperty(tView,lView,inputs[property],property,value);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function elementStartFirstCreatePass(index,tView,lView,_native11,name,attrsIndex,localRefsIndex){ngDevMode&&assertFirstCreatePass(tView);ngDevMode&&ngDevMode.firstCreatePass++;var tViewConsts=tView.consts;var attrs=getConstant(tViewConsts,attrsIndex);var tNode=getOrCreateTNode(tView,lView[T_HOST],index,3/* Element */,name,attrs);var hasDirectives=resolveDirectives(tView,lView,tNode,getConstant(tViewConsts,localRefsIndex));ngDevMode&&warnAboutUnknownElement(tView,lView,_native11,tNode,hasDirectives);if(tNode.attrs!==null){computeStaticStyling(tNode,tNode.attrs,false);}if(tNode.mergedAttrs!==null){computeStaticStyling(tNode,tNode.mergedAttrs,true);}if(tView.queries!==null){tView.queries.elementStart(tView,tNode);}return tNode;}/**
     * Create DOM element. The instruction must later be followed by `elementEnd()` call.
     *
     * @param index Index of the element in the LView array
     * @param name Name of the DOM Node
     * @param attrsIndex Index of the element's attributes in the `consts` array.
     * @param localRefsIndex Index of the element's local references in the `consts` array.
     *
     * Attributes and localRefs are passed as an array of strings where elements with an even index
     * hold an attribute name and elements with an odd index hold an attribute value, ex.:
     * ['id', 'warning5', 'class', 'alert']
     *
     * @codeGenApi
     */function ɵɵelementStart(index,name,attrsIndex,localRefsIndex){var lView=getLView();var tView=getTView();var adjustedIndex=HEADER_OFFSET+index;ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,'elements should be created before any bindings');ngDevMode&&ngDevMode.rendererCreateElement++;ngDevMode&&assertDataInRange(lView,adjustedIndex);var renderer=lView[RENDERER];var _native12=lView[adjustedIndex]=elementCreate(name,renderer,getNamespace());var tNode=tView.firstCreatePass?elementStartFirstCreatePass(index,tView,lView,_native12,name,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setPreviousOrParentTNode(tNode,true);var mergedAttrs=tNode.mergedAttrs;if(mergedAttrs!==null){setUpAttributes(renderer,_native12,mergedAttrs);}var classes=tNode.classes;if(classes!==null){writeDirectClass(renderer,_native12,classes);}var styles=tNode.styles;if(styles!==null){writeDirectStyle(renderer,_native12,styles);}appendChild(tView,lView,_native12,tNode);// any immediate children of a component or template container must be pre-emptively
// monkey-patched with the component view data so that the element can be inspected
// later on using any element discovery utility methods (see `element_discovery.ts`)
if(getElementDepthCount()===0){attachPatchData(_native12,lView);}increaseElementDepthCount();if(isDirectiveHost(tNode)){createDirectivesInstances(tView,lView,tNode);executeContentQueries(tView,tNode,lView);}if(localRefsIndex!==null){saveResolvedLocalsInData(lView,tNode);}}/**
     * Mark the end of the element.
     *
     * @codeGenApi
     */function ɵɵelementEnd(){var previousOrParentTNode=getPreviousOrParentTNode();ngDevMode&&assertDefined(previousOrParentTNode,'No parent node to close.');if(getIsParent()){setIsNotParent();}else{ngDevMode&&assertHasParent(getPreviousOrParentTNode());previousOrParentTNode=previousOrParentTNode.parent;setPreviousOrParentTNode(previousOrParentTNode,false);}var tNode=previousOrParentTNode;ngDevMode&&assertNodeType(tNode,3/* Element */);decreaseElementDepthCount();var tView=getTView();if(tView.firstCreatePass){registerPostOrderHooks(tView,previousOrParentTNode);if(isContentQueryHost(previousOrParentTNode)){tView.queries.elementEnd(previousOrParentTNode);}}if(tNode.classesWithoutHost!=null&&hasClassInput(tNode)){setDirectiveInputsWhichShadowsStyling(tView,tNode,getLView(),tNode.classesWithoutHost,true);}if(tNode.stylesWithoutHost!=null&&hasStyleInput(tNode)){setDirectiveInputsWhichShadowsStyling(tView,tNode,getLView(),tNode.stylesWithoutHost,false);}}/**
     * Creates an empty element using {@link elementStart} and {@link elementEnd}
     *
     * @param index Index of the element in the data array
     * @param name Name of the DOM Node
     * @param attrsIndex Index of the element's attributes in the `consts` array.
     * @param localRefsIndex Index of the element's local references in the `consts` array.
     *
     * @codeGenApi
     */function ɵɵelement(index,name,attrsIndex,localRefsIndex){ɵɵelementStart(index,name,attrsIndex,localRefsIndex);ɵɵelementEnd();}function warnAboutUnknownElement(tView,lView,element,tNode,hasDirectives){var schemas=tView.schemas;// If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT
// mode where this check happens at compile time. In JIT mode, `schemas` is always present and
// defined as an array (as an empty array in case `schemas` field is not defined) and we should
// execute the check below.
if(schemas===null)return;var tagName=tNode.tagName;// If the element matches any directive, it's considered as valid.
if(!hasDirectives&&tagName!==null){// The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered
// as a custom element. Note that unknown elements with a dash in their name won't be instances
// of HTMLUnknownElement in browsers that support web components.
var isUnknown=// Note that we can't check for `typeof HTMLUnknownElement === 'function'`,
// because while most browsers return 'function', IE returns 'object'.
typeof HTMLUnknownElement!=='undefined'&&HTMLUnknownElement&&element instanceof HTMLUnknownElement||typeof customElements!=='undefined'&&tagName.indexOf('-')>-1&&!customElements.get(tagName);if(isUnknown&&!matchingSchemas(tView,lView,tagName)){var warning="'"+tagName+"' is not a known element:\n";warning+="1. If '"+tagName+"' is an Angular component, then verify that it is part of this module.\n";if(tagName&&tagName.indexOf('-')>-1){warning+="2. If '"+tagName+"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.";}else{warning+="2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.";}console.warn(warning);}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function elementContainerStartFirstCreatePass(index,tView,lView,attrsIndex,localRefsIndex){ngDevMode&&ngDevMode.firstCreatePass++;var tViewConsts=tView.consts;var attrs=getConstant(tViewConsts,attrsIndex);var tNode=getOrCreateTNode(tView,lView[T_HOST],index,4/* ElementContainer */,'ng-container',attrs);// While ng-container doesn't necessarily support styling, we use the style context to identify
// and execute directives on the ng-container.
if(attrs!==null){computeStaticStyling(tNode,attrs,true);}var localRefs=getConstant(tViewConsts,localRefsIndex);resolveDirectives(tView,lView,tNode,localRefs);if(tView.queries!==null){tView.queries.elementStart(tView,tNode);}return tNode;}/**
     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.
     * The instruction must later be followed by `elementContainerEnd()` call.
     *
     * @param index Index of the element in the LView array
     * @param attrsIndex Index of the container attributes in the `consts` array.
     * @param localRefsIndex Index of the container's local references in the `consts` array.
     *
     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to
     * the DOM (as a comment node can't have attributes). Attributes are here only for directive
     * matching purposes and setting initial inputs of directives.
     *
     * @codeGenApi
     */function ɵɵelementContainerStart(index,attrsIndex,localRefsIndex){var lView=getLView();var tView=getTView();var adjustedIndex=index+HEADER_OFFSET;ngDevMode&&assertDataInRange(lView,adjustedIndex);ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,'element containers should be created before any bindings');var tNode=tView.firstCreatePass?elementContainerStartFirstCreatePass(index,tView,lView,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setPreviousOrParentTNode(tNode,true);ngDevMode&&ngDevMode.rendererCreateComment++;var _native13=lView[adjustedIndex]=lView[RENDERER].createComment(ngDevMode?'ng-container':'');appendChild(tView,lView,_native13,tNode);attachPatchData(_native13,lView);if(isDirectiveHost(tNode)){createDirectivesInstances(tView,lView,tNode);executeContentQueries(tView,tNode,lView);}if(localRefsIndex!=null){saveResolvedLocalsInData(lView,tNode);}}/**
     * Mark the end of the <ng-container>.
     *
     * @codeGenApi
     */function ɵɵelementContainerEnd(){var previousOrParentTNode=getPreviousOrParentTNode();var tView=getTView();if(getIsParent()){setIsNotParent();}else{ngDevMode&&assertHasParent(previousOrParentTNode);previousOrParentTNode=previousOrParentTNode.parent;setPreviousOrParentTNode(previousOrParentTNode,false);}ngDevMode&&assertNodeType(previousOrParentTNode,4/* ElementContainer */);if(tView.firstCreatePass){registerPostOrderHooks(tView,previousOrParentTNode);if(isContentQueryHost(previousOrParentTNode)){tView.queries.elementEnd(previousOrParentTNode);}}}/**
     * Creates an empty logical container using {@link elementContainerStart}
     * and {@link elementContainerEnd}
     *
     * @param index Index of the element in the LView array
     * @param attrsIndex Index of the container attributes in the `consts` array.
     * @param localRefsIndex Index of the container's local references in the `consts` array.
     *
     * @codeGenApi
     */function ɵɵelementContainer(index,attrsIndex,localRefsIndex){ɵɵelementContainerStart(index,attrsIndex,localRefsIndex);ɵɵelementContainerEnd();}/**
     * Returns the current OpaqueViewState instance.
     *
     * Used in conjunction with the restoreView() instruction to save a snapshot
     * of the current view and restore it when listeners are invoked. This allows
     * walking the declaration view tree in listeners to get vars from parent views.
     *
     * @codeGenApi
     */function ɵɵgetCurrentView(){return getLView();}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Determine if the argument is shaped like a Promise
     */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}/**
     * Determine if the argument is an Observable
     */function isObservable(obj){// TODO: use isObservable once we update pass rxjs 6.1
// https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03
return!!obj&&typeof obj.subscribe==='function';}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Adds an event listener to the current node.
     *
     * If an output exists on one of the node's directives, it also subscribes to the output
     * and saves the subscription for later cleanup.
     *
     * @param eventName Name of the event
     * @param listenerFn The function to be called when event emits
     * @param useCapture Whether or not to use capture in event listener
     * @param eventTargetResolver Function that returns global target information in case this listener
     * should be attached to a global object like window, document or body
     *
     * @codeGenApi
     */function ɵɵlistener(eventName,listenerFn,useCapture,eventTargetResolver){if(useCapture===void 0){useCapture=false;}var lView=getLView();var tView=getTView();var tNode=getPreviousOrParentTNode();listenerInternal(tView,lView,lView[RENDERER],tNode,eventName,listenerFn,useCapture,eventTargetResolver);return ɵɵlistener;}/**
     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.
     *
     * This instruction is for compatibility purposes and is designed to ensure that a
     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered
     * in the component's renderer. Normally all host listeners are evaluated with the
     * parent component's renderer, but, in the case of animation @triggers, they need
     * to be evaluated with the sub component's renderer (because that's where the
     * animation triggers are defined).
     *
     * Do not use this instruction as a replacement for `listener`. This instruction
     * only exists to ensure compatibility with the ViewEngine's host binding behavior.
     *
     * @param eventName Name of the event
     * @param listenerFn The function to be called when event emits
     * @param useCapture Whether or not to use capture in event listener
     * @param eventTargetResolver Function that returns global target information in case this listener
     * should be attached to a global object like window, document or body
     *
     * @codeGenApi
     */function ɵɵcomponentHostSyntheticListener(eventName,listenerFn,useCapture,eventTargetResolver){if(useCapture===void 0){useCapture=false;}var tNode=getPreviousOrParentTNode();var lView=getLView();var tView=getTView();var currentDef=getCurrentDirectiveDef(tView.data);var renderer=loadComponentRenderer(currentDef,tNode,lView);listenerInternal(tView,lView,renderer,tNode,eventName,listenerFn,useCapture,eventTargetResolver);return ɵɵcomponentHostSyntheticListener;}/**
     * A utility function that checks if a given element has already an event handler registered for an
     * event with a specified name. The TView.cleanup data structure is used to find out which events
     * are registered for a given element.
     */function findExistingListener(tView,lView,eventName,tNodeIdx){var tCleanup=tView.cleanup;if(tCleanup!=null){for(var i=0;i<tCleanup.length-1;i+=2){var cleanupEventName=tCleanup[i];if(cleanupEventName===eventName&&tCleanup[i+1]===tNodeIdx){// We have found a matching event name on the same node but it might not have been
// registered yet, so we must explicitly verify entries in the LView cleanup data
// structures.
var lCleanup=lView[CLEANUP];var listenerIdxInLCleanup=tCleanup[i+2];return lCleanup.length>listenerIdxInLCleanup?lCleanup[listenerIdxInLCleanup]:null;}// TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or
// 2-element entries (for directive and queries destroy hooks). As such we can encounter
// blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements
// first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check
// documentation of TView.cleanup for more details of this data structure layout.
if(typeof cleanupEventName==='string'){i+=2;}}}return null;}function listenerInternal(tView,lView,renderer,tNode,eventName,listenerFn,useCapture,eventTargetResolver){if(useCapture===void 0){useCapture=false;}var isTNodeDirectiveHost=isDirectiveHost(tNode);var firstCreatePass=tView.firstCreatePass;var tCleanup=firstCreatePass&&(tView.cleanup||(tView.cleanup=[]));// When the ɵɵlistener instruction was generated and is executed we know that there is either a
// native listener or a directive output on this element. As such we we know that we will have to
// register a listener and store its cleanup function on LView.
var lCleanup=getLCleanup(lView);ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */,4/* ElementContainer */);var processOutputs=true;// add native event listener - applicable to elements only
if(tNode.type===3/* Element */){var _native14=getNativeByTNode(tNode,lView);var resolved=eventTargetResolver?eventTargetResolver(_native14):EMPTY_OBJ;var target=resolved.target||_native14;var lCleanupIndex=lCleanup.length;var idxOrTargetGetter=eventTargetResolver?function(_lView){return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target;}:tNode.index;// In order to match current behavior, native DOM event listeners must be added for all
// events (including outputs).
if(isProceduralRenderer(renderer)){// There might be cases where multiple directives on the same element try to register an event
// handler function for the same event. In this situation we want to avoid registration of
// several native listeners as each registration would be intercepted by NgZone and
// trigger change detection. This would mean that a single user action would result in several
// change detections being invoked. To avoid this situation we want to have only one call to
// native handler registration (for the same element and same type of event).
//
// In order to have just one native event handler in presence of multiple handler functions,
// we just register a first handler function as a native event listener and then chain
// (coalesce) other handler functions on top of the first native handler function.
var existingListener=null;// Please note that the coalescing described here doesn't happen for events specifying an
// alternative target (ex. (document:click)) - this is to keep backward compatibility with the
// view engine.
// Also, we don't have to search for existing listeners is there are no directives
// matching on a given node as we can't register multiple event handlers for the same event in
// a template (this would mean having duplicate attributes).
if(!eventTargetResolver&&isTNodeDirectiveHost){existingListener=findExistingListener(tView,lView,eventName,tNode.index);}if(existingListener!==null){// Attach a new listener to coalesced listeners list, maintaining the order in which
// listeners are registered. For performance reasons, we keep a reference to the last
// listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through
// the entire set each time we need to add a new listener.
var lastListenerFn=existingListener.__ngLastListenerFn__||existingListener;lastListenerFn.__ngNextListenerFn__=listenerFn;existingListener.__ngLastListenerFn__=listenerFn;processOutputs=false;}else{// The first argument of `listen` function in Procedural Renderer is:
// - either a target name (as a string) in case of global target (window, document, body)
// - or element reference (in all other cases)
listenerFn=wrapListener(tNode,lView,listenerFn,false/** preventDefault */);var cleanupFn=renderer.listen(resolved.name||target,eventName,listenerFn);ngDevMode&&ngDevMode.rendererAddEventListener++;lCleanup.push(listenerFn,cleanupFn);tCleanup&&tCleanup.push(eventName,idxOrTargetGetter,lCleanupIndex,lCleanupIndex+1);}}else{listenerFn=wrapListener(tNode,lView,listenerFn,true/** preventDefault */);target.addEventListener(eventName,listenerFn,useCapture);ngDevMode&&ngDevMode.rendererAddEventListener++;lCleanup.push(listenerFn);tCleanup&&tCleanup.push(eventName,idxOrTargetGetter,lCleanupIndex,useCapture);}}// subscribe to directive outputs
var outputs=tNode.outputs;var props;if(processOutputs&&outputs!==null&&(props=outputs[eventName])){var propsLength=props.length;if(propsLength){for(var i=0;i<propsLength;i+=2){var index=props[i];ngDevMode&&assertDataInRange(lView,index);var minifiedName=props[i+1];var directiveInstance=lView[index];var output=directiveInstance[minifiedName];if(ngDevMode&&!isObservable(output)){throw new Error("@Output "+minifiedName+" not initialized in '"+directiveInstance.constructor.name+"'.");}var subscription=output.subscribe(listenerFn);var idx=lCleanup.length;lCleanup.push(listenerFn,subscription);tCleanup&&tCleanup.push(eventName,tNode.index,idx,-(idx+1));}}}}function executeListenerWithErrorHandling(lView,listenerFn,e){try{// Only explicitly returning false from a listener should preventDefault
return listenerFn(e)!==false;}catch(error){handleError(lView,error);return false;}}/**
     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,
     * if applicable.
     *
     * @param tNode The TNode associated with this listener
     * @param lView The LView that contains this listener
     * @param listenerFn The listener function to call
     * @param wrapWithPreventDefault Whether or not to prevent default behavior
     * (the procedural renderer does this already, so in those cases, we should skip)
     */function wrapListener(tNode,lView,listenerFn,wrapWithPreventDefault){// Note: we are performing most of the work in the listener function itself
// to optimize listener registration.
return function wrapListenerIn_markDirtyAndPreventDefault(e){// Ivy uses `Function` as a special token that allows us to unwrap the function
// so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.
if(e===Function){return listenerFn;}// In order to be backwards compatible with View Engine, events on component host nodes
// must also mark the component view itself dirty (i.e. the view that it owns).
var startView=tNode.flags&2/* isComponentHost */?getComponentLViewByIndex(tNode.index,lView):lView;// See interfaces/view.ts for more on LViewFlags.ManualOnPush
if((lView[FLAGS]&32/* ManualOnPush */)===0){markViewDirty(startView);}var result=executeListenerWithErrorHandling(lView,listenerFn,e);// A just-invoked listener function might have coalesced listeners so we need to check for
// their presence and invoke as needed.
var nextListenerFn=wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;while(nextListenerFn){// We should prevent default if any of the listeners explicitly return false
result=executeListenerWithErrorHandling(lView,nextListenerFn,e)&&result;nextListenerFn=nextListenerFn.__ngNextListenerFn__;}if(wrapWithPreventDefault&&result===false){e.preventDefault();// Necessary for legacy browsers that don't support preventDefault (e.g. IE)
e.returnValue=false;}return result;};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Retrieves a context at the level specified and saves it as the global, contextViewData.
     * Will get the next level up if level is not specified.
     *
     * This is used to save contexts of parent views so they can be bound in embedded views, or
     * in conjunction with reference() to bind a ref from a parent view.
     *
     * @param level The relative level of the view from which to grab context compared to contextVewData
     * @returns context
     *
     * @codeGenApi
     */function ɵɵnextContext(level){if(level===void 0){level=1;}return nextContextImpl(level);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Checks a given node against matching projection slots and returns the
     * determined slot index. Returns "null" if no slot matched the given node.
     *
     * This function takes into account the parsed ngProjectAs selector from the
     * node's attributes. If present, it will check whether the ngProjectAs selector
     * matches any of the projection slot selectors.
     */function matchingProjectionSlotIndex(tNode,projectionSlots){var wildcardNgContentIndex=null;var ngProjectAsAttrVal=getProjectAsAttrValue(tNode);for(var i=0;i<projectionSlots.length;i++){var slotValue=projectionSlots[i];// The last wildcard projection slot should match all nodes which aren't matching
// any selector. This is necessary to be backwards compatible with view engine.
if(slotValue==='*'){wildcardNgContentIndex=i;continue;}// If we ran into an `ngProjectAs` attribute, we should match its parsed selector
// to the list of selectors, otherwise we fall back to matching against the node.
if(ngProjectAsAttrVal===null?isNodeMatchingSelectorList(tNode,slotValue,/* isProjectionMode */true):isSelectorInSelectorList(ngProjectAsAttrVal,slotValue)){return i;// first matching selector "captures" a given node
}}return wildcardNgContentIndex;}/**
     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.
     * It takes all the selectors from the entire component's template and decides where
     * each projected node belongs (it re-distributes nodes among "buckets" where each "bucket" is
     * backed by a selector).
     *
     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,
     * un-parsed form.
     *
     * The parsed form is needed for efficient matching of a node against a given CSS selector.
     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.
     *
     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more
     * drawbacks:
     * - having only a textual form would require runtime parsing of CSS selectors;
     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a
     * template author).
     *
     * @param projectionSlots? A collection of projection slots. A projection slot can be based
     *        on a parsed CSS selectors or set to the wildcard selector ("*") in order to match
     *        all nodes which do not match any selector. If not specified, a single wildcard
     *        selector projection slot will be defined.
     *
     * @codeGenApi
     */function ɵɵprojectionDef(projectionSlots){var componentNode=getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];if(!componentNode.projection){// If no explicit projection slots are defined, fall back to a single
// projection slot with the wildcard selector.
var numProjectionSlots=projectionSlots?projectionSlots.length:1;var projectionHeads=componentNode.projection=newArray(numProjectionSlots,null);var tails=projectionHeads.slice();var componentChild=componentNode.child;while(componentChild!==null){var slotIndex=projectionSlots?matchingProjectionSlotIndex(componentChild,projectionSlots):0;if(slotIndex!==null){if(tails[slotIndex]){tails[slotIndex].projectionNext=componentChild;}else{projectionHeads[slotIndex]=componentChild;}tails[slotIndex]=componentChild;}componentChild=componentChild.next;}}}var delayProjection=false;function setDelayProjection(value){delayProjection=value;}/**
     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call
     * to the projectionDef instruction.
     *
     * @param nodeIndex
     * @param selectorIndex:
     *        - 0 when the selector is `*` (or unspecified as this is the default value),
     *        - 1 based index of the selector from the {@link projectionDef}
     *
     * @codeGenApi
     */function ɵɵprojection(nodeIndex,selectorIndex,attrs){if(selectorIndex===void 0){selectorIndex=0;}var lView=getLView();var tView=getTView();var tProjectionNode=getOrCreateTNode(tView,lView[T_HOST],nodeIndex,1/* Projection */,null,attrs||null);// We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.
if(tProjectionNode.projection===null)tProjectionNode.projection=selectorIndex;// `<ng-content>` has no content
setIsNotParent();// We might need to delay the projection of nodes if they are in the middle of an i18n block
if(!delayProjection){// re-distribution of projectable nodes is stored on a component's view level
applyProjection(tView,lView,tProjectionNode);}}/**
     *
     * Update an interpolated property on an element with a lone bound value
     *
     * Used when the value passed to a property has 1 interpolated value in it, an no additional text
     * surrounds that interpolated value:
     *
     * ```html
     * <div title="{{v0}}"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate('title', v0);
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate(propName,v0,sanitizer){ɵɵpropertyInterpolate1(propName,'',v0,'',sanitizer);return ɵɵpropertyInterpolate;}/**
     *
     * Update an interpolated property on an element with single bound value surrounded by text.
     *
     * Used when the value passed to a property has 1 interpolated value in it:
     *
     * ```html
     * <div title="prefix{{v0}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate1(propName,prefix,v0,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation1(lView,prefix,v0,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-1,prefix,suffix);}return ɵɵpropertyInterpolate1;}/**
     *
     * Update an interpolated property on an element with 2 bound values surrounded by text.
     *
     * Used when the value passed to a property has 2 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate2(propName,prefix,v0,i0,v1,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-2,prefix,i0,suffix);}return ɵɵpropertyInterpolate2;}/**
     *
     * Update an interpolated property on an element with 3 bound values surrounded by text.
     *
     * Used when the value passed to a property has 3 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate3(
     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate3(propName,prefix,v0,i0,v1,i1,v2,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-3,prefix,i0,i1,suffix);}return ɵɵpropertyInterpolate3;}/**
     *
     * Update an interpolated property on an element with 4 bound values surrounded by text.
     *
     * Used when the value passed to a property has 4 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate4(
     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate4(propName,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-4,prefix,i0,i1,i2,suffix);}return ɵɵpropertyInterpolate4;}/**
     *
     * Update an interpolated property on an element with 5 bound values surrounded by text.
     *
     * Used when the value passed to a property has 5 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate5(
     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate5(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-5,prefix,i0,i1,i2,i3,suffix);}return ɵɵpropertyInterpolate5;}/**
     *
     * Update an interpolated property on an element with 6 bound values surrounded by text.
     *
     * Used when the value passed to a property has 6 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate6(
     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate6(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-6,prefix,i0,i1,i2,i3,i4,suffix);}return ɵɵpropertyInterpolate6;}/**
     *
     * Update an interpolated property on an element with 7 bound values surrounded by text.
     *
     * Used when the value passed to a property has 7 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate7(
     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate7(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-7,prefix,i0,i1,i2,i3,i4,i5,suffix);}return ɵɵpropertyInterpolate7;}/**
     *
     * Update an interpolated property on an element with 8 bound values surrounded by text.
     *
     * Used when the value passed to a property has 8 interpolated values in it:
     *
     * ```html
     * <div title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolate8(
     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param i6 Static value used for concatenation only.
     * @param v7 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolate8(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,sanitizer){var lView=getLView();var interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-8,prefix,i0,i1,i2,i3,i4,i5,i6,suffix);}return ɵɵpropertyInterpolate8;}/**
     * Update an interpolated property on an element with 9 or more bound values surrounded by text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div
     *  title="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
     * ```
     *
     * Its compiled representation is::
     *
     * ```ts
     * ɵɵpropertyInterpolateV(
     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
     *  'suffix']);
     * ```
     *
     * If the property name also exists as an input property on one of the element's directives,
     * the component property will be set instead of the element property. This check must
     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.
     *
     * @param propName The name of the property to update.
     * @param values The collection of values and the strings inbetween those values, beginning with a
     * string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
     * @param sanitizer An optional sanitizer function
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵpropertyInterpolateV(propName,values,sanitizer){var lView=getLView();var interpolatedValue=interpolationV(lView,values);if(interpolatedValue!==NO_CHANGE){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[RENDERER],sanitizer,false);if(ngDevMode){var interpolationInBetween=[values[0]];// prefix
for(var i=2;i<values.length;i+=2){interpolationInBetween.push(values[i]);}storePropertyBindingMetadata.apply(void 0,__spread([tView.data,tNode,propName,getBindingIndex()-interpolationInBetween.length+1],interpolationInBetween));}}return ɵɵpropertyInterpolateV;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This file contains reuseable "empty" symbols that can be used as default return values
     * in different parts of the rendering code. Because the same symbols are returned, this
     * allows for identity checks against these values to be consistently used by the framework
     * code.
     */var EMPTY_OBJ$1={};var EMPTY_ARRAY$3=[];// freezing the values prevents any code from accidentally inserting new values in
if((typeof ngDevMode==='undefined'||ngDevMode)&&initNgDevMode()){// These property accesses can be ignored because ngDevMode will be set to false
// when optimizing code and the whole if statement will be dropped.
// tslint:disable-next-line:no-toplevel-property-access
Object.freeze(EMPTY_OBJ$1);// tslint:disable-next-line:no-toplevel-property-access
Object.freeze(EMPTY_ARRAY$3);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * NOTE: The word `styling` is used interchangeably as style or class styling.
     *
     * This file contains code to link styling instructions together so that they can be replayed in
     * priority order. The file exists because Ivy styling instruction execution order does not match
     * that of the priority order. The purpose of this code is to create a linked list so that the
     * instructions can be traversed in priority order when computing the styles.
     *
     * Assume we are dealing with the following code:
     * ```
     * @Component({
     *   template: `
     *     <my-cmp [style]=" {color: '#001'} "
     *             [style.color]=" #002 "
     *             dir-style-color-1
     *             dir-style-color-2> `
     * })
     * class ExampleComponent {
     *   static ngComp = ... {
     *     ...
     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
     *     ɵɵstyleMap({color: '#001'});
     *     ɵɵstyleProp('color', '#002');
     *     ...
     *   }
     * }
     *
     * @Directive({
     *   selector: `[dir-style-color-1]',
     * })
     * class Style1Directive {
     *   @HostBinding('style') style = {color: '#005'};
     *   @HostBinding('style.color') color = '#006';
     *
     *   static ngDir = ... {
     *     ...
     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
     *     ɵɵstyleMap({color: '#005'});
     *     ɵɵstyleProp('color', '#006');
     *     ...
     *   }
     * }
     *
     * @Directive({
     *   selector: `[dir-style-color-2]',
     * })
     * class Style2Directive {
     *   @HostBinding('style') style = {color: '#007'};
     *   @HostBinding('style.color') color = '#008';
     *
     *   static ngDir = ... {
     *     ...
     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
     *     ɵɵstyleMap({color: '#007'});
     *     ɵɵstyleProp('color', '#008');
     *     ...
     *   }
     * }
     *
     * @Directive({
     *   selector: `my-cmp',
     * })
     * class MyComponent {
     *   @HostBinding('style') style = {color: '#003'};
     *   @HostBinding('style.color') color = '#004';
     *
     *   static ngComp = ... {
     *     ...
     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`
     *     ɵɵstyleMap({color: '#003'});
     *     ɵɵstyleProp('color', '#004');
     *     ...
     *   }
     * }
     * ```
     *
     * The Order of instruction execution is:
     *
     * NOTE: the comment binding location is for illustrative purposes only.
     *
     * ```
     * // Template: (ExampleComponent)
     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10
     *     ɵɵstyleProp('color', '#002');  // Binding index: 12
     * // MyComponent
     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20
     *     ɵɵstyleProp('color', '#004');  // Binding index: 22
     * // Style1Directive
     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24
     *     ɵɵstyleProp('color', '#006');  // Binding index: 26
     * // Style2Directive
     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28
     *     ɵɵstyleProp('color', '#008');  // Binding index: 30
     * ```
     *
     * The correct priority order of concatenation is:
     *
     * ```
     * // MyComponent
     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20
     *     ɵɵstyleProp('color', '#004');  // Binding index: 22
     * // Style1Directive
     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24
     *     ɵɵstyleProp('color', '#006');  // Binding index: 26
     * // Style2Directive
     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28
     *     ɵɵstyleProp('color', '#008');  // Binding index: 30
     * // Template: (ExampleComponent)
     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10
     *     ɵɵstyleProp('color', '#002');  // Binding index: 12
     * ```
     *
     * What color should be rendered?
     *
     * Once the items are correctly sorted in the list, the answer is simply the last item in the
     * concatenation list which is `#002`.
     *
     * To do so we keep a linked list of all of the bindings which pertain to this element.
     * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows
     * us to traverse them in the order of priority.
     *
     * |Idx|`TView.data`|`LView`          | Notes
     * |---|------------|-----------------|--------------
     * |...|            |                 |
     * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`
     * |11 |`30 | 12`   | ...             |
     * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`
     * |13 |`10 | 0`    | ...             |
     * |...|            |                 |
     * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`
     * |21 |`0 | 22`    | ...             |
     * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`
     * |23 |`20 | 24`   | ...             |
     * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`
     * |25 |`22 | 26`   | ...             |
     * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`
     * |27 |`24 | 28`   | ...             |
     * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`
     * |29 |`26 | 30`   | ...             |
     * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`
     * |31 |`28 | 10`   | ...             |
     *
     * The above data structure allows us to re-concatenate the styling no matter which data binding
     * changes.
     *
     * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next
     * duplicate bit. The duplicate bit if true says there either is a binding with the same name or
     * there is a map (which may contain the name). This information is useful in knowing if other
     * styles with higher priority need to be searched for overwrites.
     *
     * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in
     * `tnode_linked_list_spec.ts` for working example.
     */var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;/**
     * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked
     * list of styles and compute the duplicate flag.
     *
     * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.
     *
     * The function works by keeping track of `tStylingRange` which contains two pointers pointing to
     * the head/tail of the template portion of the styles.
     *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`
     *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`
     *
     * @param tData The `TData` to insert into.
     * @param tNode `TNode` associated with the styling element.
     * @param tStylingKey See `TStylingKey`.
     * @param index location of where `tStyleValue` should be stored (and linked into list.)
     * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of
     *               template.)
     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.
     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)
     */function insertTStylingBinding(tData,tNode,tStylingKeyWithStatic,index,isHostBinding,isClassBinding){ngDevMode&&assertFirstUpdatePass(getTView());var tBindings=isClassBinding?tNode.classBindings:tNode.styleBindings;var tmplHead=getTStylingRangePrev(tBindings);var tmplTail=getTStylingRangeNext(tBindings);tData[index]=tStylingKeyWithStatic;var isKeyDuplicateOfStatic=false;var tStylingKey;if(Array.isArray(tStylingKeyWithStatic)){// We are case when the `TStylingKey` contains static fields as well.
var staticKeyValueArray=tStylingKeyWithStatic;tStylingKey=staticKeyValueArray[1];// unwrap.
// We need to check if our key is present in the static so that we can mark it as duplicate.
if(tStylingKey===null||keyValueArrayIndexOf(staticKeyValueArray,tStylingKey)>0){// tStylingKey is present in the statics, need to mark it as duplicate.
isKeyDuplicateOfStatic=true;}}else{tStylingKey=tStylingKeyWithStatic;}if(isHostBinding){// We are inserting host bindings
// If we don't have template bindings then `tail` is 0.
var hasTemplateBindings=tmplTail!==0;// This is important to know because that means that the `head` can't point to the first
// template bindings (there are none.) Instead the head points to the tail of the template.
if(hasTemplateBindings){// template head's "prev" will point to last host binding or to 0 if no host bindings yet
var previousNode=getTStylingRangePrev(tData[tmplHead+1]);tData[index+1]=toTStylingRange(previousNode,tmplHead);// if a host binding has already been registered, we need to update the next of that host
// binding to point to this one
if(previousNode!==0){// We need to update the template-tail value to point to us.
tData[previousNode+1]=setTStylingRangeNext(tData[previousNode+1],index);}// The "previous" of the template binding head should point to this host binding
tData[tmplHead+1]=setTStylingRangePrev(tData[tmplHead+1],index);}else{tData[index+1]=toTStylingRange(tmplHead,0);// if a host binding has already been registered, we need to update the next of that host
// binding to point to this one
if(tmplHead!==0){// We need to update the template-tail value to point to us.
tData[tmplHead+1]=setTStylingRangeNext(tData[tmplHead+1],index);}// if we don't have template, the head points to template-tail, and needs to be advanced.
tmplHead=index;}}else{// We are inserting in template section.
// We need to set this binding's "previous" to the current template tail
tData[index+1]=toTStylingRange(tmplTail,0);ngDevMode&&assertEqual(tmplHead!==0&&tmplTail===0,false,'Adding template bindings after hostBindings is not allowed.');if(tmplHead===0){tmplHead=index;}else{// We need to update the previous value "next" to point to this binding
tData[tmplTail+1]=setTStylingRangeNext(tData[tmplTail+1],index);}tmplTail=index;}// Now we need to update / compute the duplicates.
// Starting with our location search towards head (least priority)
if(isKeyDuplicateOfStatic){tData[index+1]=setTStylingRangePrevDuplicate(tData[index+1]);}markDuplicates(tData,tStylingKey,index,true,isClassBinding);markDuplicates(tData,tStylingKey,index,false,isClassBinding);markDuplicateOfResidualStyling(tNode,tStylingKey,tData,index,isClassBinding);tBindings=toTStylingRange(tmplHead,tmplTail);if(isClassBinding){tNode.classBindings=tBindings;}else{tNode.styleBindings=tBindings;}}/**
     * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.
     *
     * @param tNode `TNode` where the residual is stored.
     * @param tStylingKey `TStylingKey` to store.
     * @param tData `TData` associated with the current `LView`.
     * @param index location of where `tStyleValue` should be stored (and linked into list.)
     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.
     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)
     */function markDuplicateOfResidualStyling(tNode,tStylingKey,tData,index,isClassBinding){var residual=isClassBinding?tNode.residualClasses:tNode.residualStyles;if(residual!=null/* or undefined */&&typeof tStylingKey=='string'&&keyValueArrayIndexOf(residual,tStylingKey)>=0){// We have duplicate in the residual so mark ourselves as duplicate.
tData[index+1]=setTStylingRangeNextDuplicate(tData[index+1]);}}/**
     * Marks `TStyleValue`s as duplicates if another style binding in the list has the same
     * `TStyleValue`.
     *
     * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once
     * with it set to `false` to search both the previous as well as next items in the list.
     *
     * No duplicate case
     * ```
     *   [style.color]
     *   [style.width.px] <<- index
     *   [style.height.px]
     * ```
     *
     * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no
     * duplicates because `width` is not found in any other part of the linked list.
     *
     * Duplicate case
     * ```
     *   [style.color]
     *   [style.width.em]
     *   [style.width.px] <<- index
     * ```
     * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`
     * because `width` is found in the chain.
     *
     * Map case 1
     * ```
     *   [style.width.px]
     *   [style.color]
     *   [style]  <<- index
     * ```
     * In the above case adding `[style]` will produce a duplicate with any other bindings because
     * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.
     *
     * Map case 2
     * ```
     *   [style]
     *   [style.width.px]
     *   [style.color]  <<- index
     * ```
     * In the above case adding `[style.color]` will produce a duplicate because there is already a
     * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or
     * `width`.
     *
     * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.
     * NOTE: We use `style` as example, but same logic is applied to `class`es as well.
     *
     * @param tData `TData` where the linked list is stored.
     * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in
     *        the linked list.
     * @param index Starting location in the linked list to search from
     * @param isPrevDir Direction.
     *        - `true` for previous (lower priority);
     *        - `false` for next (higher priority).
     */function markDuplicates(tData,tStylingKey,index,isPrevDir,isClassBinding){var tStylingAtIndex=tData[index+1];var isMap=tStylingKey===null;var cursor=isPrevDir?getTStylingRangePrev(tStylingAtIndex):getTStylingRangeNext(tStylingAtIndex);var foundDuplicate=false;// We keep iterating as long as we have a cursor
// AND either:
// - we found what we are looking for, OR
// - we are a map in which case we have to continue searching even after we find what we were
//   looking for since we are a wild card and everything needs to be flipped to duplicate.
while(cursor!==0&&(foundDuplicate===false||isMap)){ngDevMode&&assertDataInRange(tData,cursor);var tStylingValueAtCursor=tData[cursor];var tStyleRangeAtCursor=tData[cursor+1];if(isStylingMatch(tStylingValueAtCursor,tStylingKey)){foundDuplicate=true;tData[cursor+1]=isPrevDir?setTStylingRangeNextDuplicate(tStyleRangeAtCursor):setTStylingRangePrevDuplicate(tStyleRangeAtCursor);}cursor=isPrevDir?getTStylingRangePrev(tStyleRangeAtCursor):getTStylingRangeNext(tStyleRangeAtCursor);}if(foundDuplicate){// if we found a duplicate, than mark ourselves.
tData[index+1]=isPrevDir?setTStylingRangePrevDuplicate(tStylingAtIndex):setTStylingRangeNextDuplicate(tStylingAtIndex);}}/**
     * Determines if two `TStylingKey`s are a match.
     *
     * When computing weather a binding contains a duplicate, we need to compare if the instruction
     * `TStylingKey` has a match.
     *
     * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:
     * - `color`
     *    - `color`    // Match another color
     *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction
     *    - `['', 'color', 'other', true]` // wrapped `color` so match
     *    - `['', null, 'other', true]`       // wrapped `null` so match
     *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`
     * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction
     *
     * @param tStylingKeyCursor
     * @param tStylingKey
     */function isStylingMatch(tStylingKeyCursor,tStylingKey){ngDevMode&&assertNotEqual(Array.isArray(tStylingKey),true,'Expected that \'tStylingKey\' has been unwrapped');if(tStylingKeyCursor===null||// If the cursor is `null` it means that we have map at that
// location so we must assume that we have a match.
tStylingKey==null||// If `tStylingKey` is `null` then it is a map therefor assume that it
// contains a match.
(Array.isArray(tStylingKeyCursor)?tStylingKeyCursor[1]:tStylingKeyCursor)===tStylingKey// If the keys match explicitly than we are a match.
){return true;}else if(Array.isArray(tStylingKeyCursor)&&typeof tStylingKey==='string'){// if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has
// statics and we need to check those as well.
return keyValueArrayIndexOf(tStylingKeyCursor,tStylingKey)>=0;// see if we are matching the key
}return false;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Global state of the parser. (This makes parser non-reentrant, but that is not an issue)
var parserState={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};/**
     * Retrieves the last parsed `key` of style.
     * @param text the text to substring the key from.
     */function getLastParsedKey(text){return text.substring(parserState.key,parserState.keyEnd);}/**
     * Retrieves the last parsed `value` of style.
     * @param text the text to substring the key from.
     */function getLastParsedValue(text){return text.substring(parserState.value,parserState.valueEnd);}/**
     * Initializes `className` string for parsing and parses the first token.
     *
     * This function is intended to be used in this format:
     * ```
     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {
     *   const key = getLastParsedKey();
     *   ...
     * }
     * ```
     * @param text `className` to parse
     * @returns index where the next invocation of `parseClassNameNext` should resume.
     */function parseClassName(text){resetParserState(text);return parseClassNameNext(text,consumeWhitespace(text,0,parserState.textEnd));}/**
     * Parses next `className` token.
     *
     * This function is intended to be used in this format:
     * ```
     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {
     *   const key = getLastParsedKey();
     *   ...
     * }
     * ```
     *
     * @param text `className` to parse
     * @param index where the parsing should resume.
     * @returns index where the next invocation of `parseClassNameNext` should resume.
     */function parseClassNameNext(text,index){var end=parserState.textEnd;if(end===index){return-1;}index=parserState.keyEnd=consumeClassToken(text,parserState.key=index,end);return consumeWhitespace(text,index,end);}/**
     * Initializes `cssText` string for parsing and parses the first key/values.
     *
     * This function is intended to be used in this format:
     * ```
     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {
     *   const key = getLastParsedKey();
     *   const value = getLastParsedValue();
     *   ...
     * }
     * ```
     * @param text `cssText` to parse
     * @returns index where the next invocation of `parseStyleNext` should resume.
     */function parseStyle(text){resetParserState(text);return parseStyleNext(text,consumeWhitespace(text,0,parserState.textEnd));}/**
     * Parses the next `cssText` key/values.
     *
     * This function is intended to be used in this format:
     * ```
     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {
     *   const key = getLastParsedKey();
     *   const value = getLastParsedValue();
     *   ...
     * }
     *
     * @param text `cssText` to parse
     * @param index where the parsing should resume.
     * @returns index where the next invocation of `parseStyleNext` should resume.
     */function parseStyleNext(text,startIndex){var end=parserState.textEnd;var index=parserState.key=consumeWhitespace(text,startIndex,end);if(end===index){// we reached an end so just quit
return-1;}index=parserState.keyEnd=consumeStyleKey(text,index,end);index=consumeSeparator(text,index,end,58/* COLON */);index=parserState.value=consumeWhitespace(text,index,end);index=parserState.valueEnd=consumeStyleValue(text,index,end);return consumeSeparator(text,index,end,59/* SEMI_COLON */);}/**
     * Reset the global state of the styling parser.
     * @param text The styling text to parse.
     */function resetParserState(text){parserState.key=0;parserState.keyEnd=0;parserState.value=0;parserState.valueEnd=0;parserState.textEnd=text.length;}/**
     * Returns index of next non-whitespace character.
     *
     * @param text Text to scan
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at
     *          that location.)
     */function consumeWhitespace(text,startIndex,endIndex){while(startIndex<endIndex&&text.charCodeAt(startIndex)<=32/* SPACE */){startIndex++;}return startIndex;}/**
     * Returns index of last char in class token.
     *
     * @param text Text to scan
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index after last char in class token.
     */function consumeClassToken(text,startIndex,endIndex){while(startIndex<endIndex&&text.charCodeAt(startIndex)>32/* SPACE */){startIndex++;}return startIndex;}/**
     * Consumes all of the characters belonging to style key and token.
     *
     * @param text Text to scan
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index after last style key character.
     */function consumeStyleKey(text,startIndex,endIndex){var ch;while(startIndex<endIndex&&((ch=text.charCodeAt(startIndex))===45/* DASH */||ch===95/* UNDERSCORE */||(ch&-33/* UPPER_CASE */)>=65/* A */&&(ch&-33/* UPPER_CASE */)<=90/* Z */)){startIndex++;}return startIndex;}/**
     * Consumes all whitespace and the separator `:` after the style key.
     *
     * @param text Text to scan
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index after separator and surrounding whitespace.
     */function consumeSeparator(text,startIndex,endIndex,separator){startIndex=consumeWhitespace(text,startIndex,endIndex);if(startIndex<endIndex){if(ngDevMode&&text.charCodeAt(startIndex)!==separator){malformedStyleError(text,String.fromCharCode(separator),startIndex);}startIndex++;}return startIndex;}/**
     * Consumes style value honoring `url()` and `""` text.
     *
     * @param text Text to scan
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index after last style value character.
     */function consumeStyleValue(text,startIndex,endIndex){var ch1=-1;// 1st previous character
var ch2=-1;// 2nd previous character
var ch3=-1;// 3rd previous character
var i=startIndex;var lastChIndex=i;while(i<endIndex){var ch=text.charCodeAt(i++);if(ch===59/* SEMI_COLON */){return lastChIndex;}else if(ch===34/* DOUBLE_QUOTE */||ch===39/* SINGLE_QUOTE */){lastChIndex=i=consumeQuotedText(text,ch,i,endIndex);}else if(startIndex===i-4&&// We have seen only 4 characters so far "URL(" (Ignore "foo_URL()")
ch3===85/* U */&&ch2===82/* R */&&ch1===76/* L */&&ch===40/* OPEN_PAREN */){lastChIndex=i=consumeQuotedText(text,41/* CLOSE_PAREN */,i,endIndex);}else if(ch>32/* SPACE */){// if we have a non-whitespace character then capture its location
lastChIndex=i;}ch3=ch2;ch2=ch1;ch1=ch&-33/* UPPER_CASE */;}return lastChIndex;}/**
     * Consumes all of the quoted characters.
     *
     * @param text Text to scan
     * @param quoteCharCode CharCode of either `"` or `'` quote or `)` for `url(...)`.
     * @param startIndex Starting index of character where the scan should start.
     * @param endIndex Ending index of character where the scan should end.
     * @returns Index after quoted characters.
     */function consumeQuotedText(text,quoteCharCode,startIndex,endIndex){var ch1=-1;// 1st previous character
var index=startIndex;while(index<endIndex){var ch=text.charCodeAt(index++);if(ch==quoteCharCode&&ch1!==92/* BACK_SLASH */){return index;}if(ch==92/* BACK_SLASH */&&ch1===92/* BACK_SLASH */){// two back slashes cancel each other out. For example `"\\"` should properly end the
// quotation. (It should not assume that the last `"` is escaped.)
ch1=0;}else{ch1=ch;}}throw ngDevMode?malformedStyleError(text,String.fromCharCode(quoteCharCode),endIndex):new Error();}function malformedStyleError(text,expecting,index){ngDevMode&&assertEqual(typeof text==='string',true,'String expected here');throw throwError("Malformed style at location "+index+" in string '"+text.substring(0,index)+'[>>'+text.substring(index,index+1)+'<<]'+text.substr(index+1)+("'. Expecting '"+expecting+"'."));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Sets the current style sanitizer function which will then be used
     * within all follow-up prop and map-based style binding instructions
     * for the given element.
     *
     * Note that once styling has been applied to the element (i.e. once
     * `advance(n)` is executed or the hostBindings/template function exits)
     * then the active `sanitizerFn` will be set to `null`. This means that
     * once styling is applied to another element then a another call to
     * `styleSanitizer` will need to be made.
     *
     * @param sanitizerFn The sanitization function that will be used to
     *       process style prop/value entries.
     *
     * @codeGenApi
     */function ɵɵstyleSanitizer(sanitizer){setCurrentStyleSanitizer(sanitizer);}/**
     * Update a style binding on an element with the provided value.
     *
     * If the style value is falsy then it will be removed from the element
     * (or assigned a different value depending if there are any styles placed
     * on the element with `styleMap` or any static styles that are
     * present from when the element was created with `styling`).
     *
     * Note that the styling element is updated as part of `stylingApply`.
     *
     * @param prop A valid CSS property.
     * @param value New value to write (`null` or an empty string to remove).
     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.
     *        Note that when a suffix is provided then the underlying sanitizer will
     *        be ignored.
     *
     * Note that this will apply the provided style value to the host element if this function is called
     * within a host binding function.
     *
     * @codeGenApi
     */function ɵɵstyleProp(prop,value,suffix){checkStylingProperty(prop,value,suffix,false);return ɵɵstyleProp;}/**
     * Update a class binding on an element with the provided value.
     *
     * This instruction is meant to handle the `[class.foo]="exp"` case and,
     * therefore, the class binding itself must already be allocated using
     * `styling` within the creation block.
     *
     * @param prop A valid CSS class (only one).
     * @param value A true/false value which will turn the class on or off.
     *
     * Note that this will apply the provided class value to the host element if this function
     * is called within a host binding function.
     *
     * @codeGenApi
     */function ɵɵclassProp(className,value){checkStylingProperty(className,value,null,true);return ɵɵclassProp;}/**
     * Update style bindings using an object literal on an element.
     *
     * This instruction is meant to apply styling via the `[style]="exp"` template bindings.
     * When styles are applied to the element they will then be updated with respect to
     * any styles/classes set via `styleProp`. If any styles are set to falsy
     * then they will be removed from the element.
     *
     * Note that the styling instruction will not be applied until `stylingApply` is called.
     *
     * @param styles A key/value style map of the styles that will be applied to the given element.
     *        Any missing styles (that have already been applied to the element beforehand) will be
     *        removed (unset) from the element's styling.
     *
     * Note that this will apply the provided styleMap value to the host element if this function
     * is called within a host binding.
     *
     * @codeGenApi
     */function ɵɵstyleMap(styles){checkStylingMap(styleKeyValueArraySet,styleStringParser,styles,false);}/**
     * Parse text as style and add values to KeyValueArray.
     *
     * This code is pulled out to a separate function so that it can be tree shaken away if it is not
     * needed. It is only referenced from `ɵɵstyleMap`.
     *
     * @param keyValueArray KeyValueArray to add parsed values to.
     * @param text text to parse.
     */function styleStringParser(keyValueArray,text){for(var i=parseStyle(text);i>=0;i=parseStyleNext(text,i)){styleKeyValueArraySet(keyValueArray,getLastParsedKey(text),getLastParsedValue(text));}}/**
     * Update class bindings using an object literal or class-string on an element.
     *
     * This instruction is meant to apply styling via the `[class]="exp"` template bindings.
     * When classes are applied to the element they will then be updated with
     * respect to any styles/classes set via `classProp`. If any
     * classes are set to falsy then they will be removed from the element.
     *
     * Note that the styling instruction will not be applied until `stylingApply` is called.
     * Note that this will the provided classMap value to the host element if this function is called
     * within a host binding.
     *
     * @param classes A key/value map or string of CSS classes that will be added to the
     *        given element. Any missing classes (that have already been applied to the element
     *        beforehand) will be removed (unset) from the element's list of CSS classes.
     *
     * @codeGenApi
     */function ɵɵclassMap(classes){checkStylingMap(keyValueArraySet,classStringParser,classes,true);}/**
     * Parse text as class and add values to KeyValueArray.
     *
     * This code is pulled out to a separate function so that it can be tree shaken away if it is not
     * needed. It is only referenced from `ɵɵclassMap`.
     *
     * @param keyValueArray KeyValueArray to add parsed values to.
     * @param text text to parse.
     */function classStringParser(keyValueArray,text){for(var i=parseClassName(text);i>=0;i=parseClassNameNext(text,i)){keyValueArraySet(keyValueArray,getLastParsedKey(text),true);}}/**
     * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.
     *
     * @param prop property name.
     * @param value binding value.
     * @param suffixOrSanitizer suffix or sanitization function
     * @param isClassBased `true` if `class` change (`false` if `style`)
     */function checkStylingProperty(prop,value,suffixOrSanitizer,isClassBased){var lView=getLView();var tView=getTView();// Styling instructions use 2 slots per binding.
// 1. one for the value / TStylingKey
// 2. one for the intermittent-value / TStylingRange
var bindingIndex=incrementBindingIndex(2);if(tView.firstUpdatePass){stylingFirstUpdatePass(tView,prop,bindingIndex,isClassBased);}if(value!==NO_CHANGE&&bindingUpdated(lView,bindingIndex,value)){// This is a work around. Once PR#34480 lands the sanitizer is passed explicitly and this line
// can be removed.
var styleSanitizer=void 0;if(suffixOrSanitizer==null){if(styleSanitizer=getCurrentStyleSanitizer()){suffixOrSanitizer=styleSanitizer;}}var tNode=tView.data[getSelectedIndex()+HEADER_OFFSET];updateStyling(tView,tNode,lView,lView[RENDERER],prop,lView[bindingIndex+1]=normalizeAndApplySuffixOrSanitizer(value,suffixOrSanitizer),isClassBased,bindingIndex);}}/**
     * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.
     *
     * @param keyValueArraySet (See `keyValueArraySet` in "util/array_utils") Gets passed in as a
     * function so that
     *        `style` can pass in version which does sanitization. This is done for tree shaking
     *        purposes.
     * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`
     *        have different parsers.)
     * @param value bound value from application
     * @param isClassBased `true` if `class` change (`false` if `style`)
     */function checkStylingMap(keyValueArraySet,stringParser,value,isClassBased){var tView=getTView();var bindingIndex=incrementBindingIndex(2);if(tView.firstUpdatePass){stylingFirstUpdatePass(tView,null,bindingIndex,isClassBased);}var lView=getLView();if(value!==NO_CHANGE&&bindingUpdated(lView,bindingIndex,value)){// `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the
// if so as not to read unnecessarily.
var tNode=tView.data[getSelectedIndex()+HEADER_OFFSET];if(hasStylingInputShadow(tNode,isClassBased)&&!isInHostBindings(tView,bindingIndex)){if(ngDevMode){// verify that if we are shadowing then `TData` is appropriately marked so that we skip
// processing this binding in styling resolution.
var tStylingKey=tView.data[bindingIndex];assertEqual(Array.isArray(tStylingKey)?tStylingKey[1]:tStylingKey,false,'Styling linked list shadow input should be marked as \'false\'');}// VE does not concatenate the static portion like we are doing here.
// Instead VE just ignores the static completely if dynamic binding is present.
// Because of locality we have already set the static portion because we don't know if there
// is a dynamic portion until later. If we would ignore the static portion it would look like
// the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong
// thing as it would think that the static portion was removed. For this reason we
// concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.
var staticPrefix=isClassBased?tNode.classesWithoutHost:tNode.stylesWithoutHost;ngDevMode&&isClassBased===false&&staticPrefix!==null&&assertEqual(staticPrefix.endsWith(';'),true,'Expecting static portion to end with \';\'');if(staticPrefix!==null){// We want to make sure that falsy values of `value` become empty strings.
value=concatStringsWithSpace(staticPrefix,value?value:'');}// Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.
// This takes over the `[style]` binding. (Same for `[class]`)
setDirectiveInputsWhichShadowsStyling(tView,tNode,lView,value,isClassBased);}else{updateStylingMap(tView,tNode,lView,lView[RENDERER],lView[bindingIndex+1],lView[bindingIndex+1]=toStylingKeyValueArray(keyValueArraySet,stringParser,value),isClassBased,bindingIndex);}}}/**
     * Determines when the binding is in `hostBindings` section
     *
     * @param tView Current `TView`
     * @param bindingIndex index of binding which we would like if it is in `hostBindings`
     */function isInHostBindings(tView,bindingIndex){// All host bindings are placed after the expando section.
return bindingIndex>=tView.expandoStartIndex;}/**
     * Collects the necessary information to insert the binding into a linked list of style bindings
     * using `insertTStylingBinding`.
     *
     * @param tView `TView` where the binding linked list will be stored.
     * @param tStylingKey Property/key of the binding.
     * @param bindingIndex Index of binding associated with the `prop`
     * @param isClassBased `true` if `class` change (`false` if `style`)
     */function stylingFirstUpdatePass(tView,tStylingKey,bindingIndex,isClassBased){ngDevMode&&assertFirstUpdatePass(tView);var tData=tView.data;if(tData[bindingIndex+1]===null){// The above check is necessary because we don't clear first update pass until first successful
// (no exception) template execution. This prevents the styling instruction from double adding
// itself to the list.
// `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the
// if so as not to read unnecessarily.
var tNode=tData[getSelectedIndex()+HEADER_OFFSET];var isHostBindings=isInHostBindings(tView,bindingIndex);if(hasStylingInputShadow(tNode,isClassBased)&&tStylingKey===null&&!isHostBindings){// `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.
// If there is a directive which uses `@Input('style')` or `@Input('class')` than
// we need to neutralize this binding since that directive is shadowing it.
// We turn this into a noop by setting the key to `false`
tStylingKey=false;}tStylingKey=wrapInStaticStylingKey(tData,tNode,tStylingKey,isClassBased);insertTStylingBinding(tData,tNode,tStylingKey,bindingIndex,isHostBindings,isClassBased);}}/**
     * Adds static styling information to the binding if applicable.
     *
     * The linked list of styles not only stores the list and keys, but also stores static styling
     * information on some of the keys. This function determines if the key should contain the styling
     * information and computes it.
     *
     * See `TStylingStatic` for more details.
     *
     * @param tData `TData` where the linked list is stored.
     * @param tNode `TNode` for which the styling is being computed.
     * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function wrapInStaticStylingKey(tData,tNode,stylingKey,isClassBased){var hostDirectiveDef=getCurrentDirectiveDef(tData);var residual=isClassBased?tNode.residualClasses:tNode.residualStyles;if(hostDirectiveDef===null){// We are in template node.
// If template node already had styling instruction then it has already collected the static
// styling and there is no need to collect them again. We know that we are the first styling
// instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).
var isFirstStylingInstructionInTemplate=(isClassBased?tNode.classBindings:tNode.styleBindings)===0;if(isFirstStylingInstructionInTemplate){// It would be nice to be able to get the statics from `mergeAttrs`, however, at this point
// they are already merged and it would not be possible to figure which property belongs where
// in the priority.
stylingKey=collectStylingFromDirectives(null,tData,tNode,stylingKey,isClassBased);stylingKey=collectStylingFromTAttrs(stylingKey,tNode.attrs,isClassBased);// We know that if we have styling binding in template we can't have residual.
residual=null;}}else{// We are in host binding node and there was no binding instruction in template node.
// This means that we need to compute the residual.
var directiveStylingLast=tNode.directiveStylingLast;var isFirstStylingInstructionInHostBinding=directiveStylingLast===-1||tData[directiveStylingLast]!==hostDirectiveDef;if(isFirstStylingInstructionInHostBinding){stylingKey=collectStylingFromDirectives(hostDirectiveDef,tData,tNode,stylingKey,isClassBased);if(residual===null){// - If `null` than either:
//    - Template styling instruction already ran and it has consumed the static
//      styling into its `TStylingKey` and so there is no need to update residual. Instead
//      we need to update the `TStylingKey` associated with the first template node
//      instruction. OR
//    - Some other styling instruction ran and determined that there are no residuals
var templateStylingKey=getTemplateHeadTStylingKey(tData,tNode,isClassBased);if(templateStylingKey!==undefined&&Array.isArray(templateStylingKey)){// Only recompute if `templateStylingKey` had static values. (If no static value found
// then there is nothing to do since this operation can only produce less static keys, not
// more.)
templateStylingKey=collectStylingFromDirectives(null,tData,tNode,templateStylingKey[1]/* unwrap previous statics */,isClassBased);templateStylingKey=collectStylingFromTAttrs(templateStylingKey,tNode.attrs,isClassBased);setTemplateHeadTStylingKey(tData,tNode,isClassBased,templateStylingKey);}}else{// We only need to recompute residual if it is not `null`.
// - If existing residual (implies there was no template styling). This means that some of
//   the statics may have moved from the residual to the `stylingKey` and so we have to
//   recompute.
// - If `undefined` this is the first time we are running.
residual=collectResidual(tData,tNode,isClassBased);}}}if(residual!==undefined){isClassBased?tNode.residualClasses=residual:tNode.residualStyles=residual;}return stylingKey;}/**
     * Retrieve the `TStylingKey` for the template styling instruction.
     *
     * This is needed since `hostBinding` styling instructions are inserted after the template
     * instruction. While the template instruction needs to update the residual in `TNode` the
     * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because
     * the template instruction is downstream from the `hostBindings` instructions.
     *
     * @param tData `TData` where the linked list is stored.
     * @param tNode `TNode` for which the styling is being computed.
     * @param isClassBased `true` if `class` (`false` if `style`)
     * @return `TStylingKey` if found or `undefined` if not found.
     */function getTemplateHeadTStylingKey(tData,tNode,isClassBased){var bindings=isClassBased?tNode.classBindings:tNode.styleBindings;if(getTStylingRangeNext(bindings)===0){// There does not seem to be a styling instruction in the `template`.
return undefined;}return tData[getTStylingRangePrev(bindings)];}/**
     * Update the `TStylingKey` of the first template instruction in `TNode`.
     *
     * Logically `hostBindings` styling instructions are of lower priority than that of the template.
     * However, they execute after the template styling instructions. This means that they get inserted
     * in front of the template styling instructions.
     *
     * If we have a template styling instruction and a new `hostBindings` styling instruction is
     * executed it means that it may need to steal static fields from the template instruction. This
     * method allows us to update the first template instruction `TStylingKey` with a new value.
     *
     * Assume:
     * ```
     * <div my-dir style="color: red" [style.color]="tmplExp"></div>
     *
     * @Directive({
     *   host: {
     *     'style': 'width: 100px',
     *     '[style.color]': 'dirExp',
     *   }
     * })
     * class MyDir {}
     * ```
     *
     * when `[style.color]="tmplExp"` executes it creates this data structure.
     * ```
     *  ['', 'color', 'color', 'red', 'width', '100px'],
     * ```
     *
     * The reason for this is that the template instruction does not know if there are styling
     * instructions and must assume that there are none and must collect all of the static styling.
     * (both
     * `color' and 'width`)
     *
     * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.
     * ```
     *  ['', 'color', 'width', '100px'],  // newly inserted
     *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong
     * ```
     *
     * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to
     * update it like so:
     * ```
     *  ['', 'color', 'width', '100px'],
     *  ['', 'color', 'color', 'red'],    // UPDATE
     * ```
     *
     * @param tData `TData` where the linked list is stored.
     * @param tNode `TNode` for which the styling is being computed.
     * @param isClassBased `true` if `class` (`false` if `style`)
     * @param tStylingKey New `TStylingKey` which is replacing the old one.
     */function setTemplateHeadTStylingKey(tData,tNode,isClassBased,tStylingKey){var bindings=isClassBased?tNode.classBindings:tNode.styleBindings;ngDevMode&&assertNotEqual(getTStylingRangeNext(bindings),0,'Expecting to have at least one template styling binding.');tData[getTStylingRangePrev(bindings)]=tStylingKey;}/**
     * Collect all static values after the current `TNode.directiveStylingLast` index.
     *
     * Collect the remaining styling information which has not yet been collected by an existing
     * styling instruction.
     *
     * @param tData `TData` where the `DirectiveDefs` are stored.
     * @param tNode `TNode` which contains the directive range.
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function collectResidual(tData,tNode,isClassBased){var residual=undefined;var directiveEnd=tNode.directiveEnd;ngDevMode&&assertNotEqual(tNode.directiveStylingLast,-1,'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');// We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are
// collecting things after the last `hostBindings` directive which had a styling instruction.)
for(var i=1+tNode.directiveStylingLast;i<directiveEnd;i++){var attrs=tData[i].hostAttrs;residual=collectStylingFromTAttrs(residual,attrs,isClassBased);}return collectStylingFromTAttrs(residual,tNode.attrs,isClassBased);}/**
     * Collect the static styling information with lower priority than `hostDirectiveDef`.
     *
     * (This is opposite of residual styling.)
     *
     * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static
     *        styling. (Or `null` if template styling)
     * @param tData `TData` where the linked list is stored.
     * @param tNode `TNode` for which the styling is being computed.
     * @param stylingKey Existing `TStylingKey` to update or wrap.
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function collectStylingFromDirectives(hostDirectiveDef,tData,tNode,stylingKey,isClassBased){// We need to loop because there can be directives which have `hostAttrs` but don't have
// `hostBindings` so this loop catches up to the current directive..
var currentDirective=null;var directiveEnd=tNode.directiveEnd;var directiveStylingLast=tNode.directiveStylingLast;if(directiveStylingLast===-1){directiveStylingLast=tNode.directiveStart;}else{directiveStylingLast++;}while(directiveStylingLast<directiveEnd){currentDirective=tData[directiveStylingLast];ngDevMode&&assertDefined(currentDirective,'expected to be defined');stylingKey=collectStylingFromTAttrs(stylingKey,currentDirective.hostAttrs,isClassBased);if(currentDirective===hostDirectiveDef)break;directiveStylingLast++;}if(hostDirectiveDef!==null){// we only advance the styling cursor if we are collecting data from host bindings.
// Template executes before host bindings and so if we would update the index,
// host bindings would not get their statics.
tNode.directiveStylingLast=directiveStylingLast;}return stylingKey;}/**
     * Convert `TAttrs` into `TStylingStatic`.
     *
     * @param stylingKey existing `TStylingKey` to update or wrap.
     * @param attrs `TAttributes` to process.
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function collectStylingFromTAttrs(stylingKey,attrs,isClassBased){var desiredMarker=isClassBased?1/* Classes */:2/* Styles */;var currentMarker=-1/* ImplicitAttributes */;if(attrs!==null){for(var i=0;i<attrs.length;i++){var item=attrs[i];if(typeof item==='number'){currentMarker=item;}else{if(currentMarker===desiredMarker){if(!Array.isArray(stylingKey)){stylingKey=stylingKey===undefined?[]:['',stylingKey];}keyValueArraySet(stylingKey,item,isClassBased?true:attrs[++i]);}}}}return stylingKey===undefined?null:stylingKey;}/**
     * Convert user input to `KeyValueArray`.
     *
     * This function takes user input which could be `string`, Object literal, or iterable and converts
     * it into a consistent representation. The output of this is `KeyValueArray` (which is an array
     * where
     * even indexes contain keys and odd indexes contain values for those keys).
     *
     * The advantage of converting to `KeyValueArray` is that we can perform diff in an input
     * independent
     * way.
     * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be
     * applied)
     *
     * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the
     * difference in linear fashion without the need to allocate any additional data.
     *
     * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine
     * which values need to be deleted, over the new `Map` to determine additions, and we would have to
     * keep additional `Map` to keep track of duplicates or items which have not yet been visited.
     *
     * @param keyValueArraySet (See `keyValueArraySet` in "util/array_utils") Gets passed in as a
     * function so that
     *        `style` can pass in version which does sanitization. This is done for tree shaking
     *        purposes.
     * @param stringParser The parser is passed in so that it will be tree shakable. See
     *        `styleStringParser` and `classStringParser`
     * @param value The value to parse/convert to `KeyValueArray`
     */function toStylingKeyValueArray(keyValueArraySet,stringParser,value){if(value==null/*|| value === undefined */||value==='')return EMPTY_ARRAY$3;var styleKeyValueArray=[];var unwrappedValue=unwrapSafeValue(value);if(Array.isArray(unwrappedValue)){for(var i=0;i<unwrappedValue.length;i++){keyValueArraySet(styleKeyValueArray,unwrappedValue[i],true);}}else if(_typeof(unwrappedValue)==='object'){for(var key in unwrappedValue){if(unwrappedValue.hasOwnProperty(key)){keyValueArraySet(styleKeyValueArray,key,unwrappedValue[key]);}}}else if(typeof unwrappedValue==='string'){stringParser(styleKeyValueArray,unwrappedValue);}else{ngDevMode&&throwError('Unsupported styling type '+_typeof(unwrappedValue)+': '+unwrappedValue);}return styleKeyValueArray;}/**
     * Set a `value` for a `key` taking style sanitization into account.
     *
     * See: `keyValueArraySet` for details
     *
     * @param keyValueArray KeyValueArray to add to.
     * @param key Style key to add. (This key will be checked if it needs sanitization)
     * @param value The value to set (If key needs sanitization it will be sanitized)
     */function styleKeyValueArraySet(keyValueArray,key,value){if(stylePropNeedsSanitization(key)){value=ɵɵsanitizeStyle(value);}keyValueArraySet(keyValueArray,key,value);}/**
     * Update map based styling.
     *
     * Map based styling could be anything which contains more than one binding. For example `string`,
     * or object literal. Dealing with all of these types would complicate the logic so
     * instead this function expects that the complex input is first converted into normalized
     * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it
     * very cheap to compute deltas between the previous and current value.
     *
     * @param tView Associated `TView.data` contains the linked list of binding priorities.
     * @param tNode `TNode` where the binding is located.
     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.
     * @param renderer Renderer to use if any updates.
     * @param oldKeyValueArray Previous value represented as `KeyValueArray`
     * @param newKeyValueArray Current value represented as `KeyValueArray`
     * @param isClassBased `true` if `class` (`false` if `style`)
     * @param bindingIndex Binding index of the binding.
     */function updateStylingMap(tView,tNode,lView,renderer,oldKeyValueArray,newKeyValueArray,isClassBased,bindingIndex){if(oldKeyValueArray===NO_CHANGE){// On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.
oldKeyValueArray=EMPTY_ARRAY$3;}var oldIndex=0;var newIndex=0;var oldKey=0<oldKeyValueArray.length?oldKeyValueArray[0]:null;var newKey=0<newKeyValueArray.length?newKeyValueArray[0]:null;while(oldKey!==null||newKey!==null){ngDevMode&&assertLessThan(oldIndex,999,'Are we stuck in infinite loop?');ngDevMode&&assertLessThan(newIndex,999,'Are we stuck in infinite loop?');var oldValue=oldIndex<oldKeyValueArray.length?oldKeyValueArray[oldIndex+1]:undefined;var newValue=newIndex<newKeyValueArray.length?newKeyValueArray[newIndex+1]:undefined;var setKey=null;var setValue=undefined;if(oldKey===newKey){// UPDATE: Keys are equal => new value is overwriting old value.
oldIndex+=2;newIndex+=2;if(oldValue!==newValue){setKey=newKey;setValue=newValue;}}else if(newKey===null||oldKey!==null&&oldKey<newKey){// DELETE: oldKey key is missing or we did not find the oldKey in the newValue
// (because the keyValueArray is sorted and `newKey` is found later alphabetically).
// `"background" < "color"` so we need to delete `"background"` because it is not found in the
// new array.
oldIndex+=2;setKey=oldKey;}else{// CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.
// `"color" > "background"` so we need to add `color` because it is in new array but not in
// old array.
ngDevMode&&assertDefined(newKey,'Expecting to have a valid key');newIndex+=2;setKey=newKey;setValue=newValue;}if(setKey!==null){updateStyling(tView,tNode,lView,renderer,setKey,setValue,isClassBased,bindingIndex);}oldKey=oldIndex<oldKeyValueArray.length?oldKeyValueArray[oldIndex]:null;newKey=newIndex<newKeyValueArray.length?newKeyValueArray[newIndex]:null;}}/**
     * Update a simple (property name) styling.
     *
     * This function takes `prop` and updates the DOM to that value. The function takes the binding
     * value as well as binding priority into consideration to determine which value should be written
     * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks
     * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)
     *
     * @param tView Associated `TView.data` contains the linked list of binding priorities.
     * @param tNode `TNode` where the binding is located.
     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.
     * @param renderer Renderer to use if any updates.
     * @param prop Either style property name or a class name.
     * @param value Either style value for `prop` or `true`/`false` if `prop` is class.
     * @param isClassBased `true` if `class` (`false` if `style`)
     * @param bindingIndex Binding index of the binding.
     */function updateStyling(tView,tNode,lView,renderer,prop,value,isClassBased,bindingIndex){if(tNode.type!==3/* Element */){// It is possible to have styling on non-elements (such as ng-container).
// This is rare, but it does happen. In such a case, just ignore the binding.
return;}var tData=tView.data;var tRange=tData[bindingIndex+1];var higherPriorityValue=getTStylingRangeNextDuplicate(tRange)?findStylingValue(tData,tNode,lView,prop,getTStylingRangeNext(tRange),isClassBased):undefined;if(!isStylingValuePresent(higherPriorityValue)){// We don't have a next duplicate, or we did not find a duplicate value.
if(!isStylingValuePresent(value)){// We should delete current value or restore to lower priority value.
if(getTStylingRangePrevDuplicate(tRange)){// We have a possible prev duplicate, let's retrieve it.
value=findStylingValue(tData,null,lView,prop,bindingIndex,isClassBased);}}var rNode=getNativeByIndex(getSelectedIndex(),lView);applyStyling(renderer,isClassBased,rNode,prop,value);}}/**
     * Search for styling value with higher priority which is overwriting current value, or a
     * value of lower priority to which we should fall back if the value is `undefined`.
     *
     * When value is being applied at a location, related values need to be consulted.
     * - If there is a higher priority binding, we should be using that one instead.
     *   For example `<div  [style]="{color:exp1}" [style.color]="exp2">` change to `exp1`
     *   requires that we check `exp2` to see if it is set to value other than `undefined`.
     * - If there is a lower priority binding and we are changing to `undefined`
     *   For example `<div  [style]="{color:exp1}" [style.color]="exp2">` change to `exp2` to
     *   `undefined` requires that we check `exp1` (and static values) and use that as new value.
     *
     * NOTE: The styling stores two values.
     * 1. The raw value which came from the application is stored at `index + 0` location. (This value
     *    is used for dirty checking).
     * 2. The normalized value (converted to `KeyValueArray` if map and sanitized) is stored at `index +
     * 1`.
     *    The advantage of storing the sanitized value is that once the value is written we don't need
     *    to worry about sanitizing it later or keeping track of the sanitizer.
     *
     * @param tData `TData` used for traversing the priority.
     * @param tNode `TNode` to use for resolving static styling. Also controls search direction.
     *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.
     *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.
     *   - `null` search prev and go all the way to end. Return last value where
     *     `isStylingValuePresent(value)` is true.
     * @param lView `LView` used for retrieving the actual values.
     * @param prop Property which we are interested in.
     * @param index Starting index in the linked list of styling bindings where the search should start.
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function findStylingValue(tData,tNode,lView,prop,index,isClassBased){// `TNode` to use for resolving static styling. Also controls search direction.
//   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.
//      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.
//   - `null` search prev and go all the way to end. Return last value where
//     `isStylingValuePresent(value)` is true.
var isPrevDirection=tNode===null;var value=undefined;while(index>0){var rawKey=tData[index];var containsStatics=Array.isArray(rawKey);// Unwrap the key if we contain static values.
var key=containsStatics?rawKey[1]:rawKey;var isStylingMap=key===null;var valueAtLViewIndex=lView[index+1];if(valueAtLViewIndex===NO_CHANGE){// In firstUpdatePass the styling instructions create a linked list of styling.
// On subsequent passes it is possible for a styling instruction to try to read a binding
// which
// has not yet executed. In that case we will find `NO_CHANGE` and we should assume that
// we have `undefined` (or empty array in case of styling-map instruction) instead. This
// allows the resolution to apply the value (which may later be overwritten when the
// binding actually executes.)
valueAtLViewIndex=isStylingMap?EMPTY_ARRAY$3:undefined;}var currentValue=isStylingMap?keyValueArrayGet(valueAtLViewIndex,prop):key===prop?valueAtLViewIndex:undefined;if(containsStatics&&!isStylingValuePresent(currentValue)){currentValue=keyValueArrayGet(rawKey,prop);}if(isStylingValuePresent(currentValue)){value=currentValue;if(isPrevDirection){return value;}}var tRange=tData[index+1];index=isPrevDirection?getTStylingRangePrev(tRange):getTStylingRangeNext(tRange);}if(tNode!==null){// in case where we are going in next direction AND we did not find anything, we need to
// consult residual styling
var residual=isClassBased?tNode.residualClasses:tNode.residualStyles;if(residual!=null/** OR residual !=== undefined */){value=keyValueArrayGet(residual,prop);}}return value;}/**
     * Determines if the binding value should be used (or if the value is 'undefined' and hence priority
     * resolution should be used.)
     *
     * @param value Binding style value.
     */function isStylingValuePresent(value){// Currently only `undefined` value is considered non-binding. That is `undefined` says I don't
// have an opinion as to what this binding should be and you should consult other bindings by
// priority to determine the valid value.
// This is extracted into a single function so that we have a single place to control this.
return value!==undefined;}/**
     * Sanitizes or adds suffix to the value.
     *
     * If value is `null`/`undefined` no suffix is added
     * @param value
     * @param suffixOrSanitizer
     */function normalizeAndApplySuffixOrSanitizer(value,suffixOrSanitizer){if(value==null/** || value === undefined */){// do nothing
}else if(typeof suffixOrSanitizer==='function'){// sanitize the value.
value=suffixOrSanitizer(value);}else if(typeof suffixOrSanitizer==='string'){value=value+suffixOrSanitizer;}else if(_typeof(value)==='object'){value=stringify(unwrapSafeValue(value));}return value;}/**
     * Tests if the `TNode` has input shadow.
     *
     * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or
     * `@Input('class')` as input.
     *
     * @param tNode `TNode` which we would like to see if it has shadow.
     * @param isClassBased `true` if `class` (`false` if `style`)
     */function hasStylingInputShadow(tNode,isClassBased){return(tNode.flags&(isClassBased?16/* hasClassInput */:32/* hasStyleInput */))!==0;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Create static text node
     *
     * @param index Index of the node in the data array
     * @param value Static string value to write.
     *
     * @codeGenApi
     */function ɵɵtext(index,value){if(value===void 0){value='';}var lView=getLView();var tView=getTView();var adjustedIndex=index+HEADER_OFFSET;ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,'text nodes should be created before any bindings');ngDevMode&&assertDataInRange(lView,adjustedIndex);var tNode=tView.firstCreatePass?getOrCreateTNode(tView,lView[T_HOST],index,3/* Element */,null,null):tView.data[adjustedIndex];var textNative=lView[adjustedIndex]=createTextNode(value,lView[RENDERER]);appendChild(tView,lView,textNative,tNode);// Text nodes are self closing.
setPreviousOrParentTNode(tNode,false);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     *
     * Update text content with a lone bound value
     *
     * Used when a text node has 1 interpolated value in it, an no additional text
     * surrounds that interpolated value:
     *
     * ```html
     * <div>{{v0}}</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate(v0);
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate(v0){ɵɵtextInterpolate1('',v0,'');return ɵɵtextInterpolate;}/**
     *
     * Update text content with single bound value surrounded by other text.
     *
     * Used when a text node has 1 interpolated value in it:
     *
     * ```html
     * <div>prefix{{v0}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate1('prefix', v0, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate1(prefix,v0,suffix){var lView=getLView();var interpolated=interpolation1(lView,prefix,v0,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate1;}/**
     *
     * Update text content with 2 bound values surrounded by other text.
     *
     * Used when a text node has 2 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate2(prefix,v0,i0,v1,suffix){var lView=getLView();var interpolated=interpolation2(lView,prefix,v0,i0,v1,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate2;}/**
     *
     * Update text content with 3 bound values surrounded by other text.
     *
     * Used when a text node has 3 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate3(
     * 'prefix', v0, '-', v1, '-', v2, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){var lView=getLView();var interpolated=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate3;}/**
     *
     * Update text content with 4 bound values surrounded by other text.
     *
     * Used when a text node has 4 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate4(
     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see ɵɵtextInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var lView=getLView();var interpolated=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate4;}/**
     *
     * Update text content with 5 bound values surrounded by other text.
     *
     * Used when a text node has 5 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate5(
     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var lView=getLView();var interpolated=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate5;}/**
     *
     * Update text content with 6 bound values surrounded by other text.
     *
     * Used when a text node has 6 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate6(
     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
     * ```
     *
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change. @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var lView=getLView();var interpolated=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate6;}/**
     *
     * Update text content with 7 bound values surrounded by other text.
     *
     * Used when a text node has 7 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate7(
     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var lView=getLView();var interpolated=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate7;}/**
     *
     * Update text content with 8 bound values surrounded by other text.
     *
     * Used when a text node has 8 interpolated values in it:
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolate8(
     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
     * ```
     * @returns itself, so that it may be chained.
     * @see textInterpolateV
     * @codeGenApi
     */function ɵɵtextInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var lView=getLView();var interpolated=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolate8;}/**
     * Update text content with 9 or more bound values other surrounded by text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵtextInterpolateV(
     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
     *  'suffix']);
     * ```
     *.
     * @param values The collection of values and the strings in between those values, beginning with
     * a string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
     *
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵtextInterpolateV(values){var lView=getLView();var interpolated=interpolationV(lView,values);if(interpolated!==NO_CHANGE){textBindingInternal(lView,getSelectedIndex(),interpolated);}return ɵɵtextInterpolateV;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     *
     * Update an interpolated class on an element with single bound value surrounded by text.
     *
     * Used when the value passed to a property has 1 interpolated value in it:
     *
     * ```html
     * <div class="prefix{{v0}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate1(prefix,v0,suffix){var lView=getLView();var interpolatedValue=interpolation1(lView,prefix,v0,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 2 bound values surrounded by text.
     *
     * Used when the value passed to a property has 2 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate2(prefix,v0,i0,v1,suffix){var lView=getLView();var interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 3 bound values surrounded by text.
     *
     * Used when the value passed to a property has 3 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate3(
     * 'prefix', v0, '-', v1, '-', v2, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){var lView=getLView();var interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 4 bound values surrounded by text.
     *
     * Used when the value passed to a property has 4 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate4(
     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var lView=getLView();var interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 5 bound values surrounded by text.
     *
     * Used when the value passed to a property has 5 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate5(
     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var lView=getLView();var interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 6 bound values surrounded by text.
     *
     * Used when the value passed to a property has 6 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate6(
     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var lView=getLView();var interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 7 bound values surrounded by text.
     *
     * Used when the value passed to a property has 7 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate7(
     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var lView=getLView();var interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     *
     * Update an interpolated class on an element with 8 bound values surrounded by text.
     *
     * Used when the value passed to a property has 8 interpolated values in it:
     *
     * ```html
     * <div class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolate8(
     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param i6 Static value used for concatenation only.
     * @param v7 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵclassMapInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var lView=getLView();var interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     * Update an interpolated class on an element with 9 or more bound values surrounded by text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div
     *  class="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵclassMapInterpolateV(
     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
     *  'suffix']);
     * ```
     *.
     * @param values The collection of values and the strings in-between those values, beginning with
     * a string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
     * @codeGenApi
     */function ɵɵclassMapInterpolateV(values){var lView=getLView();var interpolatedValue=interpolationV(lView,values);checkStylingMap(keyValueArraySet,classStringParser,interpolatedValue,true);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     *
     * Update an interpolated style on an element with single bound value surrounded by text.
     *
     * Used when the value passed to a property has 1 interpolated value in it:
     *
     * ```html
     * <div style="key: {{v0}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate1(prefix,v0,suffix){var lView=getLView();var interpolatedValue=interpolation1(lView,prefix,v0,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 2 bound values surrounded by text.
     *
     * Used when the value passed to a property has 2 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate2(prefix,v0,i0,v1,suffix){var lView=getLView();var interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 3 bound values surrounded by text.
     *
     * Used when the value passed to a property has 3 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate3(
     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){var lView=getLView();var interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 4 bound values surrounded by text.
     *
     * Used when the value passed to a property has 4 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate4(
     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){var lView=getLView();var interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 5 bound values surrounded by text.
     *
     * Used when the value passed to a property has 5 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate5(
     *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){var lView=getLView();var interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 6 bound values surrounded by text.
     *
     * Used when the value passed to a property has 6 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};
     *             key5: {{v5}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate6(
     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
     *    'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){var lView=getLView();var interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 7 bound values surrounded by text.
     *
     * Used when the value passed to a property has 7 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
     *             key6: {{v6}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate7(
     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
     *    '; key6: ', v6, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){var lView=getLView();var interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);ɵɵstyleMap(interpolatedValue);}/**
     *
     * Update an interpolated style on an element with 8 bound values surrounded by text.
     *
     * Used when the value passed to a property has 8 interpolated values in it:
     *
     * ```html
     * <div style="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
     *             key6: {{v6}}; key7: {{v7}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolate8(
     *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
     *    '; key6: ', v6, '; key7: ', v7, 'suffix');
     * ```
     *
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param i6 Static value used for concatenation only.
     * @param v7 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @codeGenApi
     */function ɵɵstyleMapInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){var lView=getLView();var interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);ɵɵstyleMap(interpolatedValue);}/**
     * Update an interpolated style on an element with 9 or more bound values surrounded by text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div
     *  class="key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};
     *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstyleMapInterpolateV(
     *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,
     *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);
     * ```
     *.
     * @param values The collection of values and the strings in-between those values, beginning with
     * a string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)
     * @codeGenApi
     */function ɵɵstyleMapInterpolateV(values){var lView=getLView();var interpolatedValue=interpolationV(lView,values);ɵɵstyleMap(interpolatedValue);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     *
     * Update an interpolated style property on an element with single bound value surrounded by text.
     *
     * Used when the value passed to a property has 1 interpolated value in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate1(prop,prefix,v0,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation1(lView,prefix,v0,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate1;}/**
     *
     * Update an interpolated style property on an element with 2 bound values surrounded by text.
     *
     * Used when the value passed to a property has 2 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate2(prop,prefix,v0,i0,v1,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate2;}/**
     *
     * Update an interpolated style property on an element with 3 bound values surrounded by text.
     *
     * Used when the value passed to a property has 3 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate3(prop,prefix,v0,i0,v1,i1,v2,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate3;}/**
     *
     * Update an interpolated style property on an element with 4 bound values surrounded by text.
     *
     * Used when the value passed to a property has 4 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate4(prop,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate4;}/**
     *
     * Update an interpolated style property on an element with 5 bound values surrounded by text.
     *
     * Used when the value passed to a property has 5 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate5(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate5;}/**
     *
     * Update an interpolated style property on an element with 6 bound values surrounded by text.
     *
     * Used when the value passed to a property has 6 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate6(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate6;}/**
     *
     * Update an interpolated style property on an element with 7 bound values surrounded by text.
     *
     * Used when the value passed to a property has 7 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate7(
     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate7(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate7;}/**
     *
     * Update an interpolated style property on an element with 8 bound values surrounded by text.
     *
     * Used when the value passed to a property has 8 interpolated values in it:
     *
     * ```html
     * <div style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix"></div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,
     * '-', v7, 'suffix');
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`.
     * @param prefix Static value used for concatenation only.
     * @param v0 Value checked for change.
     * @param i0 Static value used for concatenation only.
     * @param v1 Value checked for change.
     * @param i1 Static value used for concatenation only.
     * @param v2 Value checked for change.
     * @param i2 Static value used for concatenation only.
     * @param v3 Value checked for change.
     * @param i3 Static value used for concatenation only.
     * @param v4 Value checked for change.
     * @param i4 Static value used for concatenation only.
     * @param v5 Value checked for change.
     * @param i5 Static value used for concatenation only.
     * @param v6 Value checked for change.
     * @param i6 Static value used for concatenation only.
     * @param v7 Value checked for change.
     * @param suffix Static value used for concatenation only.
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolate8(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,valueSuffix){var lView=getLView();var interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolate8;}/**
     * Update an interpolated style property on an element with 9 or more bound values surrounded by
     * text.
     *
     * Used when the number of interpolated values exceeds 8.
     *
     * ```html
     * <div
     *  style.color="prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix">
     * </div>
     * ```
     *
     * Its compiled representation is:
     *
     * ```ts
     * ɵɵstylePropInterpolateV(
     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,
     *  'suffix']);
     * ```
     *
     * @param styleIndex Index of style to update. This index value refers to the
     *        index of the style in the style bindings array that was passed into
     *        `styling`..
     * @param values The collection of values and the strings in-between those values, beginning with
     * a string prefix and ending with a string suffix.
     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)
     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.
     * @returns itself, so that it may be chained.
     * @codeGenApi
     */function ɵɵstylePropInterpolateV(prop,values,valueSuffix){var lView=getLView();var interpolatedValue=interpolationV(lView,values);checkStylingProperty(prop,interpolatedValue,valueSuffix,false);return ɵɵstylePropInterpolateV;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Update a property on a host element. Only applies to native node properties, not inputs.
     *
     * Operates on the element selected by index via the {@link select} instruction.
     *
     * @param propName Name of property. Because it is going to DOM, this is not subject to
     *        renaming as part of minification.
     * @param value New value to write.
     * @param sanitizer An optional function used to sanitize the value.
     * @returns This function returns itself so that it may be chained
     * (e.g. `property('name', ctx.name)('title', ctx.title)`)
     *
     * @codeGenApi
     */function ɵɵhostProperty(propName,value,sanitizer){var lView=getLView();var bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){var tView=getTView();var tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,value,lView[RENDERER],sanitizer,true);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex);}return ɵɵhostProperty;}/**
     * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.
     *
     * This instruction is for compatibility purposes and is designed to ensure that a
     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in
     * the component's renderer. Normally all host bindings are evaluated with the parent
     * component's renderer, but, in the case of animation @triggers, they need to be
     * evaluated with the sub component's renderer (because that's where the animation
     * triggers are defined).
     *
     * Do not use this instruction as a replacement for `elementProperty`. This instruction
     * only exists to ensure compatibility with the ViewEngine's host binding behavior.
     *
     * @param index The index of the element to update in the data array
     * @param propName Name of property. Because it is going to DOM, this is not subject to
     *        renaming as part of minification.
     * @param value New value to write.
     * @param sanitizer An optional function used to sanitize the value.
     *
     * @codeGenApi
     */function ɵɵupdateSyntheticHostBinding(propName,value,sanitizer){var lView=getLView();var bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){var tView=getTView();var tNode=getSelectedTNode();var currentDef=getCurrentDirectiveDef(tView.data);var renderer=loadComponentRenderer(currentDef,tNode,lView);elementPropertyInternal(tView,tNode,lView,propName,value,renderer,sanitizer,true);ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex);}return ɵɵupdateSyntheticHostBinding;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Retrieves the component instance associated with a given DOM element.
     *
     * @usageNotes
     * Given the following DOM structure:
     * ```html
     * <my-app>
     *   <div>
     *     <child-comp></child-comp>
     *   </div>
     * </my-app>
     * ```
     * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`
     * associated with this DOM element.
     *
     * Calling the function on `<my-app>` will return the `MyApp` instance.
     *
     *
     * @param element DOM element from which the component should be retrieved.
     * @returns Component instance associated with the element or `null` if there
     *    is no component associated with it.
     *
     * @publicApi
     * @globalApi ng
     */function getComponent(element){assertDomElement(element);var context=loadLContext(element,false);if(context===null)return null;if(context.component===undefined){context.component=getComponentAtNodeIndex(context.nodeIndex,context.lView);}return context.component;}/**
     * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded
     * view that the element is part of. Otherwise retrieves the instance of the component whose view
     * owns the element (in this case, the result is the same as calling `getOwningComponent`).
     *
     * @param element Element for which to get the surrounding component instance.
     * @returns Instance of the component that is around the element or null if the element isn't
     *    inside any component.
     *
     * @publicApi
     * @globalApi ng
     */function getContext(element){assertDomElement(element);var context=loadLContext(element,false);return context===null?null:context.lView[CONTEXT];}/**
     * Retrieves the component instance whose view contains the DOM element.
     *
     * For example, if `<child-comp>` is used in the template of `<app-comp>`
     * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`
     * would return `<app-comp>`.
     *
     * @param elementOrDir DOM element, component or directive instance
     *    for which to retrieve the root components.
     * @returns Component instance whose view owns the DOM element or null if the element is not
     *    part of a component view.
     *
     * @publicApi
     * @globalApi ng
     */function getOwningComponent(elementOrDir){var context=loadLContext(elementOrDir,false);if(context===null)return null;var lView=context.lView;var parent;ngDevMode&&assertLView(lView);while(lView[HOST]===null&&(parent=getLViewParent(lView))){// As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`
lView=parent;}return lView[FLAGS]&512/* IsRoot */?null:lView[CONTEXT];}/**
     * Retrieves all root components associated with a DOM element, directive or component instance.
     * Root components are those which have been bootstrapped by Angular.
     *
     * @param elementOrDir DOM element, component or directive instance
     *    for which to retrieve the root components.
     * @returns Root components associated with the target object.
     *
     * @publicApi
     * @globalApi ng
     */function getRootComponents(elementOrDir){return __spread(getRootContext(elementOrDir).components);}/**
     * Retrieves an `Injector` associated with an element, component or directive instance.
     *
     * @param elementOrDir DOM element, component or directive instance for which to
     *    retrieve the injector.
     * @returns Injector associated with the element, component or directive instance.
     *
     * @publicApi
     * @globalApi ng
     */function getInjector(elementOrDir){var context=loadLContext(elementOrDir,false);if(context===null)return Injector.NULL;var tNode=context.lView[TVIEW].data[context.nodeIndex];return new NodeInjector(tNode,context.lView);}/**
     * Retrieve a set of injection tokens at a given DOM node.
     *
     * @param element Element for which the injection tokens should be retrieved.
     */function getInjectionTokens(element){var context=loadLContext(element,false);if(context===null)return[];var lView=context.lView;var tView=lView[TVIEW];var tNode=tView.data[context.nodeIndex];var providerTokens=[];var startIndex=tNode.providerIndexes&65535/* ProvidersStartIndexMask */;var endIndex=tNode.directiveEnd;for(var i=startIndex;i<endIndex;i++){var value=tView.data[i];if(isDirectiveDefHack(value)){// The fact that we sometimes store Type and sometimes DirectiveDef in this location is a
// design flaw.  We should always store same type so that we can be monomorphic. The issue
// is that for Components/Directives we store the def instead the type. The correct behavior
// is that we should always be storing injectable type in this location.
value=value.type;}providerTokens.push(value);}return providerTokens;}/**
     * Retrieves directive instances associated with a given DOM element. Does not include
     * component instances.
     *
     * @usageNotes
     * Given the following DOM structure:
     * ```
     * <my-app>
     *   <button my-button></button>
     *   <my-comp></my-comp>
     * </my-app>
     * ```
     * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`
     * directive that is associated with the DOM element.
     *
     * Calling `getDirectives` on `<my-comp>` will return an empty array.
     *
     * @param element DOM element for which to get the directives.
     * @returns Array of directives associated with the element.
     *
     * @publicApi
     * @globalApi ng
     */function getDirectives(element){var context=loadLContext(element);if(context.directives===undefined){context.directives=getDirectivesAtNodeIndex(context.nodeIndex,context.lView,false);}// The `directives` in this case are a named array called `LComponentView`. Clone the
// result so we don't expose an internal data structure in the user's console.
return context.directives===null?[]:__spread(context.directives);}function loadLContext(target,throwOnNotFound){if(throwOnNotFound===void 0){throwOnNotFound=true;}var context=getLContext(target);if(!context&&throwOnNotFound){throw new Error(ngDevMode?"Unable to find context associated with "+stringifyForError(target):'Invalid ng target');}return context;}/**
     * Retrieve map of local references.
     *
     * The references are retrieved as a map of local reference name to element or directive instance.
     *
     * @param target DOM element, component or directive instance for which to retrieve
     *    the local references.
     */function getLocalRefs(target){var context=loadLContext(target,false);if(context===null)return{};if(context.localRefs===undefined){context.localRefs=discoverLocalRefs(context.lView,context.nodeIndex);}return context.localRefs||{};}/**
     * Retrieves the host element of a component or directive instance.
     * The host element is the DOM element that matched the selector of the directive.
     *
     * @param componentOrDirective Component or directive instance for which the host
     *     element should be retrieved.
     * @returns Host element of the target.
     *
     * @publicApi
     * @globalApi ng
     */function getHostElement(componentOrDirective){return getLContext(componentOrDirective)["native"];}/**
     * Retrieves the rendered text for a given component.
     *
     * This function retrieves the host element of a component and
     * and then returns the `textContent` for that element. This implies
     * that the text returned will include re-projected content of
     * the component as well.
     *
     * @param component The component to return the content text for.
     */function getRenderedText(component){var hostElement=getHostElement(component);return hostElement.textContent||'';}function loadLContextFromNode(node){if(!(node instanceof Node))throw new Error('Expecting instance of DOM Element');return loadLContext(node);}/**
     * Retrieves a list of event listeners associated with a DOM element. The list does include host
     * listeners, but it does not include event listeners defined outside of the Angular context
     * (e.g. through `addEventListener`).
     *
     * @usageNotes
     * Given the following DOM structure:
     * ```
     * <my-app>
     *   <div (click)="doSomething()"></div>
     * </my-app>
     *
     * ```
     * Calling `getListeners` on `<div>` will return an object that looks as follows:
     * ```
     * {
     *   name: 'click',
     *   element: <div>,
     *   callback: () => doSomething(),
     *   useCapture: false
     * }
     * ```
     *
     * @param element Element for which the DOM listeners should be retrieved.
     * @returns Array of event listeners on the DOM element.
     *
     * @publicApi
     * @globalApi ng
     */function getListeners(element){assertDomElement(element);var lContext=loadLContext(element,false);if(lContext===null)return[];var lView=lContext.lView;var tView=lView[TVIEW];var lCleanup=lView[CLEANUP];var tCleanup=tView.cleanup;var listeners=[];if(tCleanup&&lCleanup){for(var i=0;i<tCleanup.length;){var firstParam=tCleanup[i++];var secondParam=tCleanup[i++];if(typeof firstParam==='string'){var name_1=firstParam;var listenerElement=unwrapRNode(lView[secondParam]);var callback=lCleanup[tCleanup[i++]];var useCaptureOrIndx=tCleanup[i++];// if useCaptureOrIndx is boolean then report it as is.
// if useCaptureOrIndx is positive number then it in unsubscribe method
// if useCaptureOrIndx is negative number then it is a Subscription
var type=typeof useCaptureOrIndx==='boolean'||useCaptureOrIndx>=0?'dom':'output';var useCapture=typeof useCaptureOrIndx==='boolean'?useCaptureOrIndx:false;if(element==listenerElement){listeners.push({element:element,name:name_1,callback:callback,useCapture:useCapture,type:type});}}}}listeners.sort(sortListeners);return listeners;}function sortListeners(a,b){if(a.name==b.name)return 0;return a.name<b.name?-1:1;}/**
     * This function should not exist because it is megamorphic and only mostly correct.
     *
     * See call site for more info.
     */function isDirectiveDefHack(obj){return obj.type!==undefined&&obj.template!==undefined&&obj.declaredInputs!==undefined;}/**
     * Returns the attached `DebugNode` instance for an element in the DOM.
     *
     * @param element DOM element which is owned by an existing component's view.
     */function getDebugNode(element){var debugNode=null;var lContext=loadLContextFromNode(element);var lView=lContext.lView;var nodeIndex=lContext.nodeIndex;if(nodeIndex!==-1){var valueInLView=lView[nodeIndex];// this means that value in the lView is a component with its own
// data. In this situation the TNode is not accessed at the same spot.
var tNode=isLView(valueInLView)?valueInLView[T_HOST]:getTNode(lView[TVIEW],nodeIndex-HEADER_OFFSET);debugNode=buildDebugNode(tNode,lView,nodeIndex);}return debugNode;}/**
     * Retrieve the component `LView` from component/element.
     *
     * NOTE: `LView` is a private and should not be leaked outside.
     *       Don't export this method to `ng.*` on window.
     *
     * @param target DOM element or component instance for which to retrieve the LView.
     */function getComponentLView(target){var lContext=loadLContext(target);var nodeIndx=lContext.nodeIndex;var lView=lContext.lView;var componentLView=lView[nodeIndx];ngDevMode&&assertLView(componentLView);return componentLView;}/** Asserts that a value is a DOM Element. */function assertDomElement(value){if(typeof Element!=='undefined'&&!(value instanceof Element)){throw new Error('Expecting instance of DOM Element');}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Marks a component for check (in case of OnPush components) and synchronously
     * performs change detection on the application this component belongs to.
     *
     * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.
     *
     * @publicApi
     * @globalApi ng
     */function applyChanges(component){markDirty(component);getRootComponents(component).forEach(function(rootComponent){return detectChanges(rootComponent);});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This file introduces series of globally accessible debug tools
     * to allow for the Angular debugging story to function.
     *
     * To see this in action run the following command:
     *
     *   bazel run --config=ivy
     *   //packages/core/test/bundling/todo:devserver
     *
     *  Then load `localhost:5432` and start using the console tools.
     */ /**
     * This value reflects the property on the window where the dev
     * tools are patched (window.ng).
     * */var GLOBAL_PUBLISH_EXPANDO_KEY='ng';var _published=false;/**
     * Publishes a collection of default debug tools onto`window.ng`.
     *
     * These functions are available globally when Angular is in development
     * mode and are automatically stripped away from prod mode is on.
     */function publishDefaultGlobalUtils(){if(!_published){_published=true;publishGlobalUtil('getComponent',getComponent);publishGlobalUtil('getContext',getContext);publishGlobalUtil('getListeners',getListeners);publishGlobalUtil('getOwningComponent',getOwningComponent);publishGlobalUtil('getHostElement',getHostElement);publishGlobalUtil('getInjector',getInjector);publishGlobalUtil('getRootComponents',getRootComponents);publishGlobalUtil('getDirectives',getDirectives);publishGlobalUtil('applyChanges',applyChanges);}}/**
     * Publishes the given function to `window.ng` so that it can be
     * used from the browser console when an application is not in production.
     */function publishGlobalUtil(name,fn){if(typeof COMPILED==='undefined'||!COMPILED){// Note: we can't export `ng` when using closure enhanced optimization as:
// - closure declares globals itself for minified names, which sometimes clobber our `ng` global
// - we can't declare a closure extern as the namespace `ng` is already used within Google
//   for typings for AngularJS (via `goog.provide('ng....')`).
var w=_global;ngDevMode&&assertDefined(fn,'function not defined');if(w){var container=w[GLOBAL_PUBLISH_EXPANDO_KEY];if(!container){container=w[GLOBAL_PUBLISH_EXPANDO_KEY]={};}container[name]=fn;}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$b=function ɵ0$b(token,notFoundValue){throw new Error('NullInjector: Not found: '+stringifyForError(token));};// TODO: A hack to not pull in the NullInjector from @angular/core.
var NULL_INJECTOR$1={get:ɵ0$b};/**
     * Bootstraps a Component into an existing host element and returns an instance
     * of the component.
     *
     * Use this function to bootstrap a component into the DOM tree. Each invocation
     * of this function will create a separate tree of components, injectors and
     * change detection cycles and lifetimes. To dynamically insert a new component
     * into an existing tree such that it shares the same injection, change detection
     * and object lifetime, use {@link ViewContainer#createComponent}.
     *
     * @param componentType Component to bootstrap
     * @param options Optional parameters which control bootstrapping
     */function renderComponent$1(componentType/* Type as workaround for: Microsoft/TypeScript/issues/4881 */,opts){if(opts===void 0){opts={};}ngDevMode&&publishDefaultGlobalUtils();ngDevMode&&assertComponentType(componentType);var rendererFactory=opts.rendererFactory||domRendererFactory3;var sanitizer=opts.sanitizer||null;var componentDef=getComponentDef(componentType);if(componentDef.type!=componentType)componentDef.type=componentType;// The first index of the first selector is the tag name.
var componentTag=componentDef.selectors[0][0];var hostRenderer=rendererFactory.createRenderer(null,null);var hostRNode=locateHostElement(hostRenderer,opts.host||componentTag,componentDef.encapsulation);var rootFlags=componentDef.onPush?64/* Dirty */|512/* IsRoot */:16/* CheckAlways */|512/* IsRoot */;var rootContext=createRootContext(opts.scheduler,opts.playerHandler);var renderer=rendererFactory.createRenderer(hostRNode,componentDef);var rootTView=createTView(0/* Root */,-1,null,1,0,null,null,null,null,null);var rootView=createLView(null,rootTView,rootContext,rootFlags,null,null,rendererFactory,renderer,undefined,opts.injector||null);enterView(rootView,null);var component;try{if(rendererFactory.begin)rendererFactory.begin();var componentView=createRootComponentView(hostRNode,componentDef,rootView,rendererFactory,renderer,sanitizer);component=createRootComponent(componentView,componentDef,rootView,rootContext,opts.hostFeatures||null);// create mode pass
renderView(rootTView,rootView,null);// update mode pass
refreshView(rootTView,rootView,null,null);}finally{leaveView();if(rendererFactory.end)rendererFactory.end();}return component;}/**
     * Creates the root component view and the root component node.
     *
     * @param rNode Render host element.
     * @param def ComponentDef
     * @param rootView The parent view where the host node is stored
     * @param hostRenderer The current renderer
     * @param sanitizer The sanitizer, if provided
     *
     * @returns Component view created
     */function createRootComponentView(rNode,def,rootView,rendererFactory,hostRenderer,sanitizer){var tView=rootView[TVIEW];ngDevMode&&assertDataInRange(rootView,0+HEADER_OFFSET);rootView[0+HEADER_OFFSET]=rNode;var tNode=getOrCreateTNode(tView,null,0,3/* Element */,null,null);var mergedAttrs=tNode.mergedAttrs=def.hostAttrs;if(mergedAttrs!==null){computeStaticStyling(tNode,mergedAttrs,true);if(rNode!==null){setUpAttributes(hostRenderer,rNode,mergedAttrs);if(tNode.classes!==null){writeDirectClass(hostRenderer,rNode,tNode.classes);}if(tNode.styles!==null){writeDirectStyle(hostRenderer,rNode,tNode.styles);}}}var viewRenderer=rendererFactory.createRenderer(rNode,def);var componentView=createLView(rootView,getOrCreateTComponentView(def),null,def.onPush?64/* Dirty */:16/* CheckAlways */,rootView[HEADER_OFFSET],tNode,rendererFactory,viewRenderer,sanitizer);if(tView.firstCreatePass){diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,rootView),tView,def.type);markAsComponentHost(tView,tNode);initTNodeFlags(tNode,rootView.length,1);}addToViewTree(rootView,componentView);// Store component view at node index, with node as the HOST
return rootView[HEADER_OFFSET]=componentView;}/**
     * Creates a root component and sets it up with features and host bindings. Shared by
     * renderComponent() and ViewContainerRef.createComponent().
     */function createRootComponent(componentView,componentDef,rootLView,rootContext,hostFeatures){var tView=rootLView[TVIEW];// Create directive instance with factory() and store at next index in viewData
var component=instantiateRootComponent(tView,rootLView,componentDef);rootContext.components.push(component);componentView[CONTEXT]=component;hostFeatures&&hostFeatures.forEach(function(feature){return feature(component,componentDef);});// We want to generate an empty QueryList for root content queries for backwards
// compatibility with ViewEngine.
if(componentDef.contentQueries){componentDef.contentQueries(1/* Create */,component,rootLView.length-1);}var rootTNode=getPreviousOrParentTNode();if(tView.firstCreatePass&&(componentDef.hostBindings!==null||componentDef.hostAttrs!==null)){var elementIndex=rootTNode.index-HEADER_OFFSET;setSelectedIndex(elementIndex);var rootTView=rootLView[TVIEW];addHostBindingsToExpandoInstructions(rootTView,componentDef);growHostVarsSpace(rootTView,rootLView,componentDef.hostVars);invokeHostBindingsInCreationMode(componentDef,component);}return component;}function createRootContext(scheduler,playerHandler){return{components:[],scheduler:scheduler||defaultScheduler,clean:CLEAN_PROMISE,playerHandler:playerHandler||null,flags:0/* Empty */};}/**
     * Used to enable lifecycle hooks on the root component.
     *
     * Include this feature when calling `renderComponent` if the root component
     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't
     * be called properly.
     *
     * Example:
     *
     * ```
     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});
     * ```
     */function LifecycleHooksFeature(component,def){var rootTView=readPatchedLView(component)[TVIEW];var dirIndex=rootTView.data.length-1;// TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on
// LNode).
registerPostOrderHooks(rootTView,{directiveStart:dirIndex,directiveEnd:dirIndex+1});}/**
     * Wait on component until it is rendered.
     *
     * This function returns a `Promise` which is resolved when the component's
     * change detection is executed. This is determined by finding the scheduler
     * associated with the `component`'s render tree and waiting until the scheduler
     * flushes. If nothing is scheduled, the function returns a resolved promise.
     *
     * Example:
     * ```
     * await whenRendered(myComponent);
     * ```
     *
     * @param component Component to wait upon
     * @returns Promise which resolves when the component is rendered.
     */function whenRendered(component){return getRootContext(component).clean;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function getSuperType(type){return Object.getPrototypeOf(type.prototype).constructor;}/**
     * Merges the definition from a super class to a sub class.
     * @param definition The definition that is a SubClass of another directive of component
     *
     * @codeGenApi
     */function ɵɵInheritDefinitionFeature(definition){var superType=getSuperType(definition.type);var shouldInheritFields=true;var inheritanceChain=[definition];while(superType){var superDef=undefined;if(isComponentDef(definition)){// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ɵcmp||superType.ɵdir;}else{if(superType.ɵcmp){throw new Error('Directives cannot inherit Components');}// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ɵdir;}if(superDef){if(shouldInheritFields){inheritanceChain.push(superDef);// Some fields in the definition may be empty, if there were no values to put in them that
// would've justified object creation. Unwrap them if necessary.
var writeableDef=definition;writeableDef.inputs=maybeUnwrapEmpty(definition.inputs);writeableDef.declaredInputs=maybeUnwrapEmpty(definition.declaredInputs);writeableDef.outputs=maybeUnwrapEmpty(definition.outputs);// Merge hostBindings
var superHostBindings=superDef.hostBindings;superHostBindings&&inheritHostBindings(definition,superHostBindings);// Merge queries
var superViewQuery=superDef.viewQuery;var superContentQueries=superDef.contentQueries;superViewQuery&&inheritViewQuery(definition,superViewQuery);superContentQueries&&inheritContentQueries(definition,superContentQueries);// Merge inputs and outputs
fillProperties(definition.inputs,superDef.inputs);fillProperties(definition.declaredInputs,superDef.declaredInputs);fillProperties(definition.outputs,superDef.outputs);// Merge animations metadata.
// If `superDef` is a Component, the `data` field is present (defaults to an empty object).
if(isComponentDef(superDef)&&superDef.data.animation){// If super def is a Component, the `definition` is also a Component, since Directives can
// not inherit Components (we throw an error above and cannot reach this code).
var defData=definition.data;defData.animation=(defData.animation||[]).concat(superDef.data.animation);}// Inherit hooks
// Assume super class inheritance feature has already run.
writeableDef.afterContentChecked=writeableDef.afterContentChecked||superDef.afterContentChecked;writeableDef.afterContentInit=definition.afterContentInit||superDef.afterContentInit;writeableDef.afterViewChecked=definition.afterViewChecked||superDef.afterViewChecked;writeableDef.afterViewInit=definition.afterViewInit||superDef.afterViewInit;writeableDef.doCheck=definition.doCheck||superDef.doCheck;writeableDef.onDestroy=definition.onDestroy||superDef.onDestroy;writeableDef.onInit=definition.onInit||superDef.onInit;}// Run parent features
var features=superDef.features;if(features){for(var i=0;i<features.length;i++){var feature=features[i];if(feature&&feature.ngInherit){feature(definition);}// If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this
// def already has all the necessary information inherited from its super class(es), so we
// can stop merging fields from super classes. However we need to iterate through the
// prototype chain to look for classes that might contain other "features" (like
// NgOnChanges), which we should invoke for the original `definition`. We set the
// `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance
// logic and only invoking functions from the "features" list.
if(feature===ɵɵInheritDefinitionFeature){shouldInheritFields=false;}}}}superType=Object.getPrototypeOf(superType);}mergeHostAttrsAcrossInheritance(inheritanceChain);}/**
     * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.
     *
     * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing
     * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child
     * type.
     */function mergeHostAttrsAcrossInheritance(inheritanceChain){var hostVars=0;var hostAttrs=null;// We process the inheritance order from the base to the leaves here.
for(var i=inheritanceChain.length-1;i>=0;i--){var def=inheritanceChain[i];// For each `hostVars`, we need to add the superclass amount.
def.hostVars=hostVars+=def.hostVars;// for each `hostAttrs` we need to merge it with superclass.
def.hostAttrs=mergeHostAttrs(def.hostAttrs,hostAttrs=mergeHostAttrs(hostAttrs,def.hostAttrs));}}function maybeUnwrapEmpty(value){if(value===EMPTY_OBJ){return{};}else if(value===EMPTY_ARRAY){return[];}else{return value;}}function inheritViewQuery(definition,superViewQuery){var prevViewQuery=definition.viewQuery;if(prevViewQuery){definition.viewQuery=function(rf,ctx){superViewQuery(rf,ctx);prevViewQuery(rf,ctx);};}else{definition.viewQuery=superViewQuery;}}function inheritContentQueries(definition,superContentQueries){var prevContentQueries=definition.contentQueries;if(prevContentQueries){definition.contentQueries=function(rf,ctx,directiveIndex){superContentQueries(rf,ctx,directiveIndex);prevContentQueries(rf,ctx,directiveIndex);};}else{definition.contentQueries=superContentQueries;}}function inheritHostBindings(definition,superHostBindings){var prevHostBindings=definition.hostBindings;if(prevHostBindings){definition.hostBindings=function(rf,ctx){superHostBindings(rf,ctx);prevHostBindings(rf,ctx);};}else{definition.hostBindings=superHostBindings;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Fields which exist on either directive or component definitions, and need to be copied from
     * parent to child classes by the `ɵɵCopyDefinitionFeature`.
     */var COPY_DIRECTIVE_FIELDS=[// The child class should use the providers of its parent.
'providersResolver'];/**
     * Fields which exist only on component definitions, and need to be copied from parent to child
     * classes by the `ɵɵCopyDefinitionFeature`.
     *
     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,
     * since those should go in `COPY_DIRECTIVE_FIELDS` above.
     */var COPY_COMPONENT_FIELDS=[// The child class should use the template function of its parent, including all template
// semantics.
'template','decls','consts','vars','onPush','ngContentSelectors',// The child class should use the CSS styles of its parent, including all styling semantics.
'styles','encapsulation',// The child class should be checked by the runtime in the same way as its parent.
'schemas'];/**
     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a
     * definition.
     *
     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an
     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it
     * generates a skeleton definition on the child class, and applies this feature.
     *
     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,
     * including things like the component template function.
     *
     * @param definition The definition of a child class which inherits from a parent class with its
     * own definition.
     *
     * @codeGenApi
     */function ɵɵCopyDefinitionFeature(definition){var e_1,_a,e_2,_b;var superType=getSuperType(definition.type);var superDef=undefined;if(isComponentDef(definition)){// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ɵcmp;}else{// Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.
superDef=superType.ɵdir;}// Needed because `definition` fields are readonly.
var defAny=definition;try{// Copy over any fields that apply to either directives or components.
for(var COPY_DIRECTIVE_FIELDS_1=__values(COPY_DIRECTIVE_FIELDS),COPY_DIRECTIVE_FIELDS_1_1=COPY_DIRECTIVE_FIELDS_1.next();!COPY_DIRECTIVE_FIELDS_1_1.done;COPY_DIRECTIVE_FIELDS_1_1=COPY_DIRECTIVE_FIELDS_1.next()){var field=COPY_DIRECTIVE_FIELDS_1_1.value;defAny[field]=superDef[field];}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(COPY_DIRECTIVE_FIELDS_1_1&&!COPY_DIRECTIVE_FIELDS_1_1.done&&(_a=COPY_DIRECTIVE_FIELDS_1["return"]))_a.call(COPY_DIRECTIVE_FIELDS_1);}finally{if(e_1)throw e_1.error;}}if(isComponentDef(superDef)){try{// Copy over any component-specific fields.
for(var COPY_COMPONENT_FIELDS_1=__values(COPY_COMPONENT_FIELDS),COPY_COMPONENT_FIELDS_1_1=COPY_COMPONENT_FIELDS_1.next();!COPY_COMPONENT_FIELDS_1_1.done;COPY_COMPONENT_FIELDS_1_1=COPY_COMPONENT_FIELDS_1.next()){var field=COPY_COMPONENT_FIELDS_1_1.value;defAny[field]=superDef[field];}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(COPY_COMPONENT_FIELDS_1_1&&!COPY_COMPONENT_FIELDS_1_1.done&&(_b=COPY_COMPONENT_FIELDS_1["return"]))_b.call(COPY_COMPONENT_FIELDS_1);}finally{if(e_2)throw e_2.error;}}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents a basic change from a previous to a new value for a single
     * property on a directive instance. Passed as a value in a
     * {@link SimpleChanges} object to the `ngOnChanges` hook.
     *
     * @see `OnChanges`
     *
     * @publicApi
     */var SimpleChange=/** @class */function(){function SimpleChange(previousValue,currentValue,firstChange){this.previousValue=previousValue;this.currentValue=currentValue;this.firstChange=firstChange;}/**
         * Check whether the new value is the first value assigned.
         */SimpleChange.prototype.isFirstChange=function(){return this.firstChange;};return SimpleChange;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var PRIVATE_PREFIX='__ngOnChanges_';/**
     * The NgOnChangesFeature decorates a component with support for the ngOnChanges
     * lifecycle hook, so it should be included in any component that implements
     * that hook.
     *
     * If the component or directive uses inheritance, the NgOnChangesFeature MUST
     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise
     * inherited properties will not be propagated to the ngOnChanges lifecycle
     * hook.
     *
     * Example usage:
     *
     * ```
     * static ɵcmp = defineComponent({
     *   ...
     *   inputs: {name: 'publicName'},
     *   features: [NgOnChangesFeature]
     * });
     * ```
     *
     * @codeGenApi
     */function ɵɵNgOnChangesFeature(definition){if(definition.type.prototype.ngOnChanges){definition.setInput=ngOnChangesSetInput;definition.onChanges=wrapOnChanges();}}// This option ensures that the ngOnChanges lifecycle hook will be inherited
// from superclasses (in InheritDefinitionFeature).
/** @nocollapse */ // tslint:disable-next-line:no-toplevel-property-access
ɵɵNgOnChangesFeature.ngInherit=true;function wrapOnChanges(){return function wrapOnChangesHook_inPreviousChangesStorage(){var simpleChangesStore=getSimpleChangesStore(this);var current=simpleChangesStore&&simpleChangesStore.current;if(current){var previous=simpleChangesStore.previous;if(previous===EMPTY_OBJ){simpleChangesStore.previous=current;}else{// New changes are copied to the previous store, so that we don't lose history for inputs
// which were not changed this time
for(var key in current){previous[key]=current[key];}}simpleChangesStore.current=null;this.ngOnChanges(current);}};}function ngOnChangesSetInput(instance,value,publicName,privateName){var simpleChangesStore=getSimpleChangesStore(instance)||setSimpleChangesStore(instance,{previous:EMPTY_OBJ,current:null});var current=simpleChangesStore.current||(simpleChangesStore.current={});var previous=simpleChangesStore.previous;var declaredName=this.declaredInputs[publicName];var previousChange=previous[declaredName];current[declaredName]=new SimpleChange(previousChange&&previousChange.currentValue,value,previous===EMPTY_OBJ);instance[privateName]=value;}var SIMPLE_CHANGES_STORE='__ngSimpleChanges__';function getSimpleChangesStore(instance){return instance[SIMPLE_CHANGES_STORE]||null;}function setSimpleChangesStore(instance,store){return instance[SIMPLE_CHANGES_STORE]=store;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Resolves the providers which are defined in the DirectiveDef.
     *
     * When inserting the tokens and the factories in their respective arrays, we can assume that
     * this method is called first for the component (if any), and then for other directives on the same
     * node.
     * As a consequence,the providers are always processed in that order:
     * 1) The view providers of the component
     * 2) The providers of the component
     * 3) The providers of the other directives
     * This matches the structure of the injectables arrays of a view (for each node).
     * So the tokens and the factories can be pushed at the end of the arrays, except
     * in one case for multi providers.
     *
     * @param def the directive definition
     * @param providers: Array of `providers`.
     * @param viewProviders: Array of `viewProviders`.
     */function providersResolver(def,providers,viewProviders){var tView=getTView();if(tView.firstCreatePass){var isComponent=isComponentDef(def);// The list of view providers is processed first, and the flags are updated
resolveProvider$1(viewProviders,tView.data,tView.blueprint,isComponent,true);// Then, the list of providers is processed, and the flags are updated
resolveProvider$1(providers,tView.data,tView.blueprint,isComponent,false);}}/**
     * Resolves a provider and publishes it to the DI system.
     */function resolveProvider$1(provider,tInjectables,lInjectablesBlueprint,isComponent,isViewProvider){provider=resolveForwardRef(provider);if(Array.isArray(provider)){// Recursively call `resolveProvider`
// Recursion is OK in this case because this code will not be in hot-path once we implement
// cloning of the initial state.
for(var i=0;i<provider.length;i++){resolveProvider$1(provider[i],tInjectables,lInjectablesBlueprint,isComponent,isViewProvider);}}else{var tView=getTView();var lView=getLView();var token=isTypeProvider(provider)?provider:resolveForwardRef(provider.provide);var providerFactory=providerToFactory(provider);var tNode=getPreviousOrParentTNode();var beginIndex=tNode.providerIndexes&65535/* ProvidersStartIndexMask */;var endIndex=tNode.directiveStart;var cptViewProvidersCount=tNode.providerIndexes>>16/* CptViewProvidersCountShift */;if(isTypeProvider(provider)||!provider.multi){// Single provider case: the factory is created and pushed immediately
var factory=new NodeInjectorFactory(providerFactory,isViewProvider,ɵɵdirectiveInject);var existingFactoryIndex=indexOf(token,tInjectables,isViewProvider?beginIndex:beginIndex+cptViewProvidersCount,endIndex);if(existingFactoryIndex===-1){diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,lView),tView,token);registerDestroyHooksIfSupported(tView,provider,tInjectables.length);tInjectables.push(token);tNode.directiveStart++;tNode.directiveEnd++;if(isViewProvider){tNode.providerIndexes+=65536/* CptViewProvidersCountShifter */;}lInjectablesBlueprint.push(factory);lView.push(factory);}else{lInjectablesBlueprint[existingFactoryIndex]=factory;lView[existingFactoryIndex]=factory;}}else{// Multi provider case:
// We create a multi factory which is going to aggregate all the values.
// Since the output of such a factory depends on content or view injection,
// we create two of them, which are linked together.
//
// The first one (for view providers) is always in the first block of the injectables array,
// and the second one (for providers) is always in the second block.
// This is important because view providers have higher priority. When a multi token
// is being looked up, the view providers should be found first.
// Note that it is not possible to have a multi factory in the third block (directive block).
//
// The algorithm to process multi providers is as follows:
// 1) If the multi provider comes from the `viewProviders` of the component:
//   a) If the special view providers factory doesn't exist, it is created and pushed.
//   b) Else, the multi provider is added to the existing multi factory.
// 2) If the multi provider comes from the `providers` of the component or of another
// directive:
//   a) If the multi factory doesn't exist, it is created and provider pushed into it.
//      It is also linked to the multi factory for view providers, if it exists.
//   b) Else, the multi provider is added to the existing multi factory.
var existingProvidersFactoryIndex=indexOf(token,tInjectables,beginIndex+cptViewProvidersCount,endIndex);var existingViewProvidersFactoryIndex=indexOf(token,tInjectables,beginIndex,beginIndex+cptViewProvidersCount);var doesProvidersFactoryExist=existingProvidersFactoryIndex>=0&&lInjectablesBlueprint[existingProvidersFactoryIndex];var doesViewProvidersFactoryExist=existingViewProvidersFactoryIndex>=0&&lInjectablesBlueprint[existingViewProvidersFactoryIndex];if(isViewProvider&&!doesViewProvidersFactoryExist||!isViewProvider&&!doesProvidersFactoryExist){// Cases 1.a and 2.a
diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,lView),tView,token);var factory=multiFactory(isViewProvider?multiViewProvidersFactoryResolver:multiProvidersFactoryResolver,lInjectablesBlueprint.length,isViewProvider,isComponent,providerFactory);if(!isViewProvider&&doesViewProvidersFactoryExist){lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory=factory;}registerDestroyHooksIfSupported(tView,provider,tInjectables.length,0);tInjectables.push(token);tNode.directiveStart++;tNode.directiveEnd++;if(isViewProvider){tNode.providerIndexes+=65536/* CptViewProvidersCountShifter */;}lInjectablesBlueprint.push(factory);lView.push(factory);}else{// Cases 1.b and 2.b
var indexInFactory=multiFactoryAdd(lInjectablesBlueprint[isViewProvider?existingViewProvidersFactoryIndex:existingProvidersFactoryIndex],providerFactory,!isViewProvider&&isComponent);registerDestroyHooksIfSupported(tView,provider,existingProvidersFactoryIndex>-1?existingProvidersFactoryIndex:existingViewProvidersFactoryIndex,indexInFactory);}if(!isViewProvider&&isComponent&&doesViewProvidersFactoryExist){lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;}}}}/**
     * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.
     * @param tView `TView` in which to register the hook.
     * @param provider Provider whose hook should be registered.
     * @param contextIndex Index under which to find the context for the hook when it's being invoked.
     * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi
     * provider factory.
     */function registerDestroyHooksIfSupported(tView,provider,contextIndex,indexInFactory){var providerIsTypeProvider=isTypeProvider(provider);if(providerIsTypeProvider||isClassProvider(provider)){var prototype=(provider.useClass||provider).prototype;var ngOnDestroy=prototype.ngOnDestroy;if(ngOnDestroy){var hooks=tView.destroyHooks||(tView.destroyHooks=[]);if(!providerIsTypeProvider&&provider.multi){ngDevMode&&assertDefined(indexInFactory,'indexInFactory when registering multi factory destroy hook');var existingCallbacksIndex=hooks.indexOf(contextIndex);if(existingCallbacksIndex===-1){hooks.push(contextIndex,[indexInFactory,ngOnDestroy]);}else{hooks[existingCallbacksIndex+1].push(indexInFactory,ngOnDestroy);}}else{hooks.push(contextIndex,ngOnDestroy);}}}}/**
     * Add a factory in a multi factory.
     * @returns Index at which the factory was inserted.
     */function multiFactoryAdd(multiFactory,factory,isComponentProvider){if(isComponentProvider){multiFactory.componentProviders++;}return multiFactory.multi.push(factory)-1;}/**
     * Returns the index of item in the array, but only in the begin to end range.
     */function indexOf(item,arr,begin,end){for(var i=begin;i<end;i++){if(arr[i]===item)return i;}return-1;}/**
     * Use this with `multi` `providers`.
     */function multiProvidersFactoryResolver(_,tData,lData,tNode){return multiResolve(this.multi,[]);}/**
     * Use this with `multi` `viewProviders`.
     *
     * This factory knows how to concatenate itself with the existing `multi` `providers`.
     */function multiViewProvidersFactoryResolver(_,tData,lView,tNode){var factories=this.multi;var result;if(this.providerFactory){var componentCount=this.providerFactory.componentProviders;var multiProviders=getNodeInjectable(lView,lView[TVIEW],this.providerFactory.index,tNode);// Copy the section of the array which contains `multi` `providers` from the component
result=multiProviders.slice(0,componentCount);// Insert the `viewProvider` instances.
multiResolve(factories,result);// Copy the section of the array which contains `multi` `providers` from other directives
for(var i=componentCount;i<multiProviders.length;i++){result.push(multiProviders[i]);}}else{result=[];// Insert the `viewProvider` instances.
multiResolve(factories,result);}return result;}/**
     * Maps an array of factories into an array of values.
     */function multiResolve(factories,result){for(var i=0;i<factories.length;i++){var factory=factories[i];result.push(factory());}return result;}/**
     * Creates a multi factory.
     */function multiFactory(factoryFn,index,isViewProvider,isComponent,f){var factory=new NodeInjectorFactory(factoryFn,isViewProvider,ɵɵdirectiveInject);factory.multi=[];factory.index=index;factory.componentProviders=0;multiFactoryAdd(factory,f,isComponent&&!isViewProvider);return factory;}/**
     * This feature resolves the providers of a directive (or component),
     * and publish them into the DI system, making it visible to others for injection.
     *
     * For example:
     * ```ts
     * class ComponentWithProviders {
     *   constructor(private greeter: GreeterDE) {}
     *
     *   static ɵcmp = defineComponent({
     *     type: ComponentWithProviders,
     *     selectors: [['component-with-providers']],
     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),
     *    decls: 1,
     *    vars: 1,
     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {
     *      if (fs & RenderFlags.Create) {
     *        ɵɵtext(0);
     *      }
     *      if (fs & RenderFlags.Update) {
     *        ɵɵtextInterpolate(ctx.greeter.greet());
     *      }
     *    },
     *    features: [ProvidersFeature([GreeterDE])]
     *  });
     * }
     * ```
     *
     * @param definition
     *
     * @codeGenApi
     */function ɵɵProvidersFeature(providers,viewProviders){if(viewProviders===void 0){viewProviders=[];}return function(definition){definition.providersResolver=function(def,processProvidersFn){return providersResolver(def,//
processProvidersFn?processProvidersFn(providers):providers,//
viewProviders);};};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents a component created by a `ComponentFactory`.
     * Provides access to the component instance and related objects,
     * and provides the means of destroying the instance.
     *
     * @publicApi
     */var ComponentRef=/** @class */function(){function ComponentRef(){}return ComponentRef;}();/**
     * Base class for a factory that can create a component dynamically.
     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.
     * Use the resulting `ComponentFactory.create()` method to create a component of that type.
     *
     * @see [Dynamic Components](guide/dynamic-component-loader)
     *
     * @publicApi
     */var ComponentFactory=/** @class */function(){function ComponentFactory(){}return ComponentFactory;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function noComponentFactoryError(component){var error=Error("No component factory found for "+stringify(component)+". Did you add it to @NgModule.entryComponents?");error[ERROR_COMPONENT]=component;return error;}var ERROR_COMPONENT='ngComponent';function getComponent$1(error){return error[ERROR_COMPONENT];}var _NullComponentFactoryResolver=/** @class */function(){function _NullComponentFactoryResolver(){}_NullComponentFactoryResolver.prototype.resolveComponentFactory=function(component){throw noComponentFactoryError(component);};return _NullComponentFactoryResolver;}();/**
     * A simple registry that maps `Components` to generated `ComponentFactory` classes
     * that can be used to create instances of components.
     * Use to obtain the factory for a given component type,
     * then use the factory's `create()` method to create a component of that type.
     *
     * @see [Dynamic Components](guide/dynamic-component-loader)
     * @publicApi
     */var ComponentFactoryResolver=/** @class */function(){function ComponentFactoryResolver(){}ComponentFactoryResolver.NULL=new _NullComponentFactoryResolver();return ComponentFactoryResolver;}();var CodegenComponentFactoryResolver=/** @class */function(){function CodegenComponentFactoryResolver(factories,_parent,_ngModule){this._parent=_parent;this._ngModule=_ngModule;this._factories=new Map();for(var i=0;i<factories.length;i++){var factory=factories[i];this._factories.set(factory.componentType,factory);}}CodegenComponentFactoryResolver.prototype.resolveComponentFactory=function(component){var factory=this._factories.get(component);if(!factory&&this._parent){factory=this._parent.resolveComponentFactory(component);}if(!factory){throw noComponentFactoryError(component);}return new ComponentFactoryBoundToModule(factory,this._ngModule);};return CodegenComponentFactoryResolver;}();var ComponentFactoryBoundToModule=/** @class */function(_super){__extends(ComponentFactoryBoundToModule,_super);function ComponentFactoryBoundToModule(factory,ngModule){var _this=_super.call(this)||this;_this.factory=factory;_this.ngModule=ngModule;_this.selector=factory.selector;_this.componentType=factory.componentType;_this.ngContentSelectors=factory.ngContentSelectors;_this.inputs=factory.inputs;_this.outputs=factory.outputs;return _this;}ComponentFactoryBoundToModule.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){return this.factory.create(injector,projectableNodes,rootSelectorOrNode,ngModule||this.ngModule);};return ComponentFactoryBoundToModule;}(ComponentFactory);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function noop(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}// Do nothing.
}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A wrapper around a native element inside of a View.
     *
     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM
     * element.
     *
     * @security Permitting direct access to the DOM can make your application more vulnerable to
     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the
     * [Security Guide](http://g.co/ng/security).
     *
     * @publicApi
     */ // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,
// i.e. users have to ask for what they need. With that, we can build better analysis tools
// and could do better codegen in the future.
var ElementRef=/** @class */function(){function ElementRef(nativeElement){this.nativeElement=nativeElement;}/**
         * @internal
         * @nocollapse
         */ElementRef.__NG_ELEMENT_ID__=function(){return SWITCH_ELEMENT_REF_FACTORY(ElementRef);};return ElementRef;}();var SWITCH_ELEMENT_REF_FACTORY__POST_R3__=injectElementRef;var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__=noop;var SWITCH_ELEMENT_REF_FACTORY=SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Renderer2Interceptor=new InjectionToken('Renderer2Interceptor');/**
     * Creates and initializes a custom renderer that implements the `Renderer2` base class.
     *
     * @publicApi
     */var RendererFactory2=/** @class */function(){function RendererFactory2(){}return RendererFactory2;}();(function(RendererStyleFlags2){// TODO(misko): This needs to be refactored into a separate file so that it can be imported from
// `node_manipulation.ts` Currently doing the import cause resolution order to change and fails
// the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.
/**
         * Marks a style as important.
         */RendererStyleFlags2[RendererStyleFlags2["Important"]=1]="Important";/**
         * Marks a style as using dash case naming (this-is-dash-case).
         */RendererStyleFlags2[RendererStyleFlags2["DashCase"]=2]="DashCase";})(exports.RendererStyleFlags2||(exports.RendererStyleFlags2={}));/**
     * Extend this base class to implement custom rendering. By default, Angular
     * renders a template into DOM. You can use custom rendering to intercept
     * rendering calls, or to render to something other than DOM.
     *
     * Create your custom renderer using `RendererFactory2`.
     *
     * Use a custom renderer to bypass Angular's templating and
     * make custom UI changes that can't be expressed declaratively.
     * For example if you need to set a property or an attribute whose name is
     * not statically known, use the `setProperty()` or
     * `setAttribute()` method.
     *
     * @publicApi
     */var Renderer2=/** @class */function(){function Renderer2(){}/**
         * @internal
         * @nocollapse
         */Renderer2.__NG_ELEMENT_ID__=function(){return SWITCH_RENDERER2_FACTORY();};return Renderer2;}();var SWITCH_RENDERER2_FACTORY__POST_R3__=injectRenderer2;var SWITCH_RENDERER2_FACTORY__PRE_R3__=noop;var SWITCH_RENDERER2_FACTORY=SWITCH_RENDERER2_FACTORY__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Sanitizer is used by the views to sanitize potentially dangerous values.
     *
     * @publicApi
     */var Sanitizer=/** @class */function(){function Sanitizer(){}/** @nocollapse */Sanitizer.ɵprov=ɵɵdefineInjectable({token:Sanitizer,providedIn:'root',factory:function factory(){return null;}});return Sanitizer;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description Represents the version of Angular
     *
     * @publicApi
     */var Version=/** @class */function(){function Version(full){this.full=full;this.major=full.split('.')[0];this.minor=full.split('.')[1];this.patch=full.split('.').slice(2).join('.');}return Version;}();/**
     * @publicApi
     */var VERSION=new Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var DefaultIterableDifferFactory=/** @class */function(){function DefaultIterableDifferFactory(){}DefaultIterableDifferFactory.prototype.supports=function(obj){return isListLikeIterable$1(obj);};DefaultIterableDifferFactory.prototype.create=function(trackByFn){return new DefaultIterableDiffer(trackByFn);};return DefaultIterableDifferFactory;}();var trackByIdentity=function trackByIdentity(index,item){return item;};var ɵ0$c=trackByIdentity;/**
     * @deprecated v4.0.0 - Should not be part of public API.
     * @publicApi
     */var DefaultIterableDiffer=/** @class */function(){function DefaultIterableDiffer(trackByFn){this.length=0;// Keeps track of the used records at any point in time (during & across `_check()` calls)
this._linkedRecords=null;// Keeps track of the removed records at any point in time during `_check()` calls.
this._unlinkedRecords=null;this._previousItHead=null;this._itHead=null;this._itTail=null;this._additionsHead=null;this._additionsTail=null;this._movesHead=null;this._movesTail=null;this._removalsHead=null;this._removalsTail=null;// Keeps track of records where custom track by is the same, but item identity has changed
this._identityChangesHead=null;this._identityChangesTail=null;this._trackByFn=trackByFn||trackByIdentity;}DefaultIterableDiffer.prototype.forEachItem=function(fn){var record;for(record=this._itHead;record!==null;record=record._next){fn(record);}};DefaultIterableDiffer.prototype.forEachOperation=function(fn){var nextIt=this._itHead;var nextRemove=this._removalsHead;var addRemoveOffset=0;var moveOffsets=null;while(nextIt||nextRemove){// Figure out which is the next record to process
// Order: remove, add, move
var record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove;var adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets);var currentIndex=record.currentIndex;// consume the item, and adjust the addRemoveOffset and update moveDistance if necessary
if(record===nextRemove){addRemoveOffset--;nextRemove=nextRemove._nextRemoved;}else{nextIt=nextIt._next;if(record.previousIndex==null){addRemoveOffset++;}else{// INVARIANT:  currentIndex < previousIndex
if(!moveOffsets)moveOffsets=[];var localMovePreviousIndex=adjPreviousIndex-addRemoveOffset;var localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(var i=0;i<localMovePreviousIndex;i++){var offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0;var index=offset+i;if(localCurrentIndex<=index&&index<localMovePreviousIndex){moveOffsets[i]=offset+1;}}var previousIndex=record.previousIndex;moveOffsets[previousIndex]=localCurrentIndex-localMovePreviousIndex;}}}if(adjPreviousIndex!==currentIndex){fn(record,adjPreviousIndex,currentIndex);}}};DefaultIterableDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousItHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultIterableDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultIterableDiffer.prototype.forEachMovedItem=function(fn){var record;for(record=this._movesHead;record!==null;record=record._nextMoved){fn(record);}};DefaultIterableDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultIterableDiffer.prototype.forEachIdentityChange=function(fn){var record;for(record=this._identityChangesHead;record!==null;record=record._nextIdentityChange){fn(record);}};DefaultIterableDiffer.prototype.diff=function(collection){if(collection==null)collection=[];if(!isListLikeIterable$1(collection)){throw new Error("Error trying to diff '"+stringify(collection)+"'. Only arrays and iterables are allowed");}if(this.check(collection)){return this;}else{return null;}};DefaultIterableDiffer.prototype.onDestroy=function(){};DefaultIterableDiffer.prototype.check=function(collection){var _this=this;this._reset();var record=this._itHead;var mayBeDirty=false;var index;var item;var itemTrackBy;if(Array.isArray(collection)){this.length=collection.length;for(var index_1=0;index_1<this.length;index_1++){item=collection[index_1];itemTrackBy=this._trackByFn(index_1,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=this._mismatch(record,item,itemTrackBy,index_1);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=this._verifyReinsertion(record,item,itemTrackBy,index_1);}if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);}record=record._next;}}else{index=0;iterateListLike$1(collection,function(item){itemTrackBy=_this._trackByFn(index,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=_this._mismatch(record,item,itemTrackBy,index);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=_this._verifyReinsertion(record,item,itemTrackBy,index);}if(!looseIdentical(record.item,item))_this._addIdentityChange(record,item);}record=record._next;index++;});this.length=index;}this._truncate(record);this.collection=collection;return this.isDirty;};Object.defineProperty(DefaultIterableDiffer.prototype,"isDirty",{/* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity
             * changes.
             */get:function get(){return this._additionsHead!==null||this._movesHead!==null||this._removalsHead!==null||this._identityChangesHead!==null;},enumerable:true,configurable:true});/**
         * Reset the state of the change objects to show no changes. This means set previousKey to
         * currentKey, and clear all of the queues (additions, moves, removals).
         * Set the previousIndexes of moved and added items to their currentIndexes
         * Reset the list of additions, moves and removals
         *
         * @internal
         */DefaultIterableDiffer.prototype._reset=function(){if(this.isDirty){var record=void 0;var nextRecord=void 0;for(record=this._previousItHead=this._itHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._additionsHead;record!==null;record=record._nextAdded){record.previousIndex=record.currentIndex;}this._additionsHead=this._additionsTail=null;for(record=this._movesHead;record!==null;record=nextRecord){record.previousIndex=record.currentIndex;nextRecord=record._nextMoved;}this._movesHead=this._movesTail=null;this._removalsHead=this._removalsTail=null;this._identityChangesHead=this._identityChangesTail=null;// TODO(vicb): when assert gets supported
// assert(!this.isDirty);
}};/**
         * This is the core function which handles differences between collections.
         *
         * - `record` is the record which we saw at this position last time. If null then it is a new
         *   item.
         * - `item` is the current item in the collection
         * - `index` is the position of the item in the collection
         *
         * @internal
         */DefaultIterableDiffer.prototype._mismatch=function(record,item,itemTrackBy,index){// The previous record after which we will append the current one.
var previousRecord;if(record===null){previousRecord=this._itTail;}else{previousRecord=record._prev;// Remove the record from the collection since we know it does not match the item.
this._remove(record);}// Attempt to see if we have seen the item before.
record=this._linkedRecords===null?null:this._linkedRecords.get(itemTrackBy,index);if(record!==null){// We have seen this before, we need to move it forward in the collection.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._moveAfter(record,previousRecord,index);}else{// Never seen it, check evicted list.
record=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(record!==null){// It is an item which we have evicted earlier: reinsert it back into the list.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._reinsertAfter(record,previousRecord,index);}else{// It is a new item: add it.
record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index);}}return record;};/**
         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
         *
         * Use case: `[a, a]` => `[b, a, a]`
         *
         * If we did not have this check then the insertion of `b` would:
         *   1) evict first `a`
         *   2) insert `b` at `0` index.
         *   3) leave `a` at index `1` as is. <-- this is wrong!
         *   3) reinsert `a` at index 2. <-- this is wrong!
         *
         * The correct behavior is:
         *   1) evict first `a`
         *   2) insert `b` at `0` index.
         *   3) reinsert `a` at index 1.
         *   3) move `a` at from `1` to `2`.
         *
         *
         * Double check that we have not evicted a duplicate item. We need to check if the item type may
         * have already been removed:
         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
         * at the end.
         *
         * @internal
         */DefaultIterableDiffer.prototype._verifyReinsertion=function(record,item,itemTrackBy,index){var reinsertRecord=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy,null);if(reinsertRecord!==null){record=this._reinsertAfter(reinsertRecord,record._prev,index);}else if(record.currentIndex!=index){record.currentIndex=index;this._addToMoves(record,index);}return record;};/**
         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection
         *
         * - `record` The first excess {@link IterableChangeRecord_}.
         *
         * @internal
         */DefaultIterableDiffer.prototype._truncate=function(record){// Anything after that needs to be removed;
while(record!==null){var nextRecord=record._next;this._addToRemovals(this._unlink(record));record=nextRecord;}if(this._unlinkedRecords!==null){this._unlinkedRecords.clear();}if(this._additionsTail!==null){this._additionsTail._nextAdded=null;}if(this._movesTail!==null){this._movesTail._nextMoved=null;}if(this._itTail!==null){this._itTail._next=null;}if(this._removalsTail!==null){this._removalsTail._nextRemoved=null;}if(this._identityChangesTail!==null){this._identityChangesTail._nextIdentityChange=null;}};/** @internal */DefaultIterableDiffer.prototype._reinsertAfter=function(record,prevRecord,index){if(this._unlinkedRecords!==null){this._unlinkedRecords.remove(record);}var prev=record._prevRemoved;var next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */DefaultIterableDiffer.prototype._moveAfter=function(record,prevRecord,index){this._unlink(record);this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;};/** @internal */DefaultIterableDiffer.prototype._addAfter=function(record,prevRecord,index){this._insertAfter(record,prevRecord,index);if(this._additionsTail===null){// TODO(vicb):
// assert(this._additionsHead === null);
this._additionsTail=this._additionsHead=record;}else{// TODO(vicb):
// assert(_additionsTail._nextAdded === null);
// assert(record._nextAdded === null);
this._additionsTail=this._additionsTail._nextAdded=record;}return record;};/** @internal */DefaultIterableDiffer.prototype._insertAfter=function(record,prevRecord,index){// TODO(vicb):
// assert(record != prevRecord);
// assert(record._next === null);
// assert(record._prev === null);
var next=prevRecord===null?this._itHead:prevRecord._next;// TODO(vicb):
// assert(next != record);
// assert(prevRecord != record);
record._next=next;record._prev=prevRecord;if(next===null){this._itTail=record;}else{next._prev=record;}if(prevRecord===null){this._itHead=record;}else{prevRecord._next=record;}if(this._linkedRecords===null){this._linkedRecords=new _DuplicateMap();}this._linkedRecords.put(record);record.currentIndex=index;return record;};/** @internal */DefaultIterableDiffer.prototype._remove=function(record){return this._addToRemovals(this._unlink(record));};/** @internal */DefaultIterableDiffer.prototype._unlink=function(record){if(this._linkedRecords!==null){this._linkedRecords.remove(record);}var prev=record._prev;var next=record._next;// TODO(vicb):
// assert((record._prev = null) === null);
// assert((record._next = null) === null);
if(prev===null){this._itHead=next;}else{prev._next=next;}if(next===null){this._itTail=prev;}else{next._prev=prev;}return record;};/** @internal */DefaultIterableDiffer.prototype._addToMoves=function(record,toIndex){// TODO(vicb):
// assert(record._nextMoved === null);
if(record.previousIndex===toIndex){return record;}if(this._movesTail===null){// TODO(vicb):
// assert(_movesHead === null);
this._movesTail=this._movesHead=record;}else{// TODO(vicb):
// assert(_movesTail._nextMoved === null);
this._movesTail=this._movesTail._nextMoved=record;}return record;};DefaultIterableDiffer.prototype._addToRemovals=function(record){if(this._unlinkedRecords===null){this._unlinkedRecords=new _DuplicateMap();}this._unlinkedRecords.put(record);record.currentIndex=null;record._nextRemoved=null;if(this._removalsTail===null){// TODO(vicb):
// assert(_removalsHead === null);
this._removalsTail=this._removalsHead=record;record._prevRemoved=null;}else{// TODO(vicb):
// assert(_removalsTail._nextRemoved === null);
// assert(record._nextRemoved === null);
record._prevRemoved=this._removalsTail;this._removalsTail=this._removalsTail._nextRemoved=record;}return record;};/** @internal */DefaultIterableDiffer.prototype._addIdentityChange=function(record,item){record.item=item;if(this._identityChangesTail===null){this._identityChangesTail=this._identityChangesHead=record;}else{this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record;}return record;};return DefaultIterableDiffer;}();var IterableChangeRecord_=/** @class */function(){function IterableChangeRecord_(item,trackById){this.item=item;this.trackById=trackById;this.currentIndex=null;this.previousIndex=null;/** @internal */this._nextPrevious=null;/** @internal */this._prev=null;/** @internal */this._next=null;/** @internal */this._prevDup=null;/** @internal */this._nextDup=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextAdded=null;/** @internal */this._nextMoved=null;/** @internal */this._nextIdentityChange=null;}return IterableChangeRecord_;}();// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item
var _DuplicateItemRecordList=/** @class */function(){function _DuplicateItemRecordList(){/** @internal */this._head=null;/** @internal */this._tail=null;}/**
         * Append the record to the list of duplicates.
         *
         * Note: by design all records in the list of duplicates hold the same value in record.item.
         */_DuplicateItemRecordList.prototype.add=function(record){if(this._head===null){this._head=this._tail=record;record._nextDup=null;record._prevDup=null;}else{// TODO(vicb):
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
this._tail._nextDup=record;record._prevDup=this._tail;record._nextDup=null;this._tail=record;}};// Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and
// IterableChangeRecord_.currentIndex >= atOrAfterIndex
_DuplicateItemRecordList.prototype.get=function(trackById,atOrAfterIndex){var record;for(record=this._head;record!==null;record=record._nextDup){if((atOrAfterIndex===null||atOrAfterIndex<=record.currentIndex)&&looseIdentical(record.trackById,trackById)){return record;}}return null;};/**
         * Remove one {@link IterableChangeRecord_} from the list of duplicates.
         *
         * Returns whether the list of duplicates is empty.
         */_DuplicateItemRecordList.prototype.remove=function(record){// TODO(vicb):
// assert(() {
//  // verify that the record being removed is in the list.
//  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
//    if (identical(cursor, record)) return true;
//  }
//  return false;
//});
var prev=record._prevDup;var next=record._nextDup;if(prev===null){this._head=next;}else{prev._nextDup=next;}if(next===null){this._tail=prev;}else{next._prevDup=prev;}return this._head===null;};return _DuplicateItemRecordList;}();var _DuplicateMap=/** @class */function(){function _DuplicateMap(){this.map=new Map();}_DuplicateMap.prototype.put=function(record){var key=record.trackById;var duplicates=this.map.get(key);if(!duplicates){duplicates=new _DuplicateItemRecordList();this.map.set(key,duplicates);}duplicates.add(record);};/**
         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.
         *
         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
         * have any more `a`s needs to return the second `a`.
         */_DuplicateMap.prototype.get=function(trackById,atOrAfterIndex){var key=trackById;var recordList=this.map.get(key);return recordList?recordList.get(trackById,atOrAfterIndex):null;};/**
         * Removes a {@link IterableChangeRecord_} from the list of duplicates.
         *
         * The list of duplicates also is removed from the map if it gets empty.
         */_DuplicateMap.prototype.remove=function(record){var key=record.trackById;var recordList=this.map.get(key);// Remove the list of duplicates when it gets empty
if(recordList.remove(record)){this.map["delete"](key);}return record;};Object.defineProperty(_DuplicateMap.prototype,"isEmpty",{get:function get(){return this.map.size===0;},enumerable:true,configurable:true});_DuplicateMap.prototype.clear=function(){this.map.clear();};return _DuplicateMap;}();function getPreviousIndex(item,addRemoveOffset,moveOffsets){var previousIndex=item.previousIndex;if(previousIndex===null)return previousIndex;var moveOffset=0;if(moveOffsets&&previousIndex<moveOffsets.length){moveOffset=moveOffsets[previousIndex];}return previousIndex+addRemoveOffset+moveOffset;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var DefaultKeyValueDifferFactory=/** @class */function(){function DefaultKeyValueDifferFactory(){}DefaultKeyValueDifferFactory.prototype.supports=function(obj){return obj instanceof Map||isJsObject$1(obj);};DefaultKeyValueDifferFactory.prototype.create=function(){return new DefaultKeyValueDiffer();};return DefaultKeyValueDifferFactory;}();var DefaultKeyValueDiffer=/** @class */function(){function DefaultKeyValueDiffer(){this._records=new Map();this._mapHead=null;// _appendAfter is used in the check loop
this._appendAfter=null;this._previousMapHead=null;this._changesHead=null;this._changesTail=null;this._additionsHead=null;this._additionsTail=null;this._removalsHead=null;this._removalsTail=null;}Object.defineProperty(DefaultKeyValueDiffer.prototype,"isDirty",{get:function get(){return this._additionsHead!==null||this._changesHead!==null||this._removalsHead!==null;},enumerable:true,configurable:true});DefaultKeyValueDiffer.prototype.forEachItem=function(fn){var record;for(record=this._mapHead;record!==null;record=record._next){fn(record);}};DefaultKeyValueDiffer.prototype.forEachPreviousItem=function(fn){var record;for(record=this._previousMapHead;record!==null;record=record._nextPrevious){fn(record);}};DefaultKeyValueDiffer.prototype.forEachChangedItem=function(fn){var record;for(record=this._changesHead;record!==null;record=record._nextChanged){fn(record);}};DefaultKeyValueDiffer.prototype.forEachAddedItem=function(fn){var record;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}};DefaultKeyValueDiffer.prototype.forEachRemovedItem=function(fn){var record;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}};DefaultKeyValueDiffer.prototype.diff=function(map){if(!map){map=new Map();}else if(!(map instanceof Map||isJsObject$1(map))){throw new Error("Error trying to diff '"+stringify(map)+"'. Only maps and objects are allowed");}return this.check(map)?this:null;};DefaultKeyValueDiffer.prototype.onDestroy=function(){};/**
         * Check the current state of the map vs the previous.
         * The algorithm is optimised for when the keys do no change.
         */DefaultKeyValueDiffer.prototype.check=function(map){var _this=this;this._reset();var insertBefore=this._mapHead;this._appendAfter=null;this._forEach(map,function(value,key){if(insertBefore&&insertBefore.key===key){_this._maybeAddToChanges(insertBefore,value);_this._appendAfter=insertBefore;insertBefore=insertBefore._next;}else{var record=_this._getOrCreateRecordForKey(key,value);insertBefore=_this._insertBeforeOrAppend(insertBefore,record);}});// Items remaining at the end of the list have been deleted
if(insertBefore){if(insertBefore._prev){insertBefore._prev._next=null;}this._removalsHead=insertBefore;for(var record=insertBefore;record!==null;record=record._nextRemoved){if(record===this._mapHead){this._mapHead=null;}this._records["delete"](record.key);record._nextRemoved=record._next;record.previousValue=record.currentValue;record.currentValue=null;record._prev=null;record._next=null;}}// Make sure tails have no next records from previous runs
if(this._changesTail)this._changesTail._nextChanged=null;if(this._additionsTail)this._additionsTail._nextAdded=null;return this.isDirty;};/**
         * Inserts a record before `before` or append at the end of the list when `before` is null.
         *
         * Notes:
         * - This method appends at `this._appendAfter`,
         * - This method updates `this._appendAfter`,
         * - The return value is the new value for the insertion pointer.
         */DefaultKeyValueDiffer.prototype._insertBeforeOrAppend=function(before,record){if(before){var prev=before._prev;record._next=before;record._prev=prev;before._prev=record;if(prev){prev._next=record;}if(before===this._mapHead){this._mapHead=record;}this._appendAfter=before;return before;}if(this._appendAfter){this._appendAfter._next=record;record._prev=this._appendAfter;}else{this._mapHead=record;}this._appendAfter=record;return null;};DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey=function(key,value){if(this._records.has(key)){var record_1=this._records.get(key);this._maybeAddToChanges(record_1,value);var prev=record_1._prev;var next=record_1._next;if(prev){prev._next=next;}if(next){next._prev=prev;}record_1._next=null;record_1._prev=null;return record_1;}var record=new KeyValueChangeRecord_(key);this._records.set(key,record);record.currentValue=value;this._addToAdditions(record);return record;};/** @internal */DefaultKeyValueDiffer.prototype._reset=function(){if(this.isDirty){var record=void 0;// let `_previousMapHead` contain the state of the map before the changes
this._previousMapHead=this._mapHead;for(record=this._previousMapHead;record!==null;record=record._next){record._nextPrevious=record._next;}// Update `record.previousValue` with the value of the item before the changes
// We need to update all changed items (that's those which have been added and changed)
for(record=this._changesHead;record!==null;record=record._nextChanged){record.previousValue=record.currentValue;}for(record=this._additionsHead;record!=null;record=record._nextAdded){record.previousValue=record.currentValue;}this._changesHead=this._changesTail=null;this._additionsHead=this._additionsTail=null;this._removalsHead=null;}};// Add the record or a given key to the list of changes only when the value has actually changed
DefaultKeyValueDiffer.prototype._maybeAddToChanges=function(record,newValue){if(!looseIdentical(newValue,record.currentValue)){record.previousValue=record.currentValue;record.currentValue=newValue;this._addToChanges(record);}};DefaultKeyValueDiffer.prototype._addToAdditions=function(record){if(this._additionsHead===null){this._additionsHead=this._additionsTail=record;}else{this._additionsTail._nextAdded=record;this._additionsTail=record;}};DefaultKeyValueDiffer.prototype._addToChanges=function(record){if(this._changesHead===null){this._changesHead=this._changesTail=record;}else{this._changesTail._nextChanged=record;this._changesTail=record;}};/** @internal */DefaultKeyValueDiffer.prototype._forEach=function(obj,fn){if(obj instanceof Map){obj.forEach(fn);}else{Object.keys(obj).forEach(function(k){return fn(obj[k],k);});}};return DefaultKeyValueDiffer;}();var KeyValueChangeRecord_=/** @class */function(){function KeyValueChangeRecord_(key){this.key=key;this.previousValue=null;this.currentValue=null;/** @internal */this._nextPrevious=null;/** @internal */this._next=null;/** @internal */this._prev=null;/** @internal */this._nextAdded=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextChanged=null;}return KeyValueChangeRecord_;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.
     *
     * @publicApi
     */var IterableDiffers=/** @class */function(){function IterableDiffers(factories){this.factories=factories;}IterableDiffers.create=function(factories,parent){if(parent!=null){var copied=parent.factories.slice();factories=factories.concat(copied);}return new IterableDiffers(factories);};/**
         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the
         * inherited {@link IterableDiffers} instance with the provided factories and return a new
         * {@link IterableDiffers} instance.
         *
         * @usageNotes
         * ### Example
         *
         * The following example shows how to extend an existing list of factories,
         * which will only be applied to the injector for this component and its children.
         * This step is all that's required to make a new {@link IterableDiffer} available.
         *
         * ```
         * @Component({
         *   viewProviders: [
         *     IterableDiffers.extend([new ImmutableListDiffer()])
         *   ]
         * })
         * ```
         */IterableDiffers.extend=function(factories){return{provide:IterableDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling IterableDiffers.extend inside of dependencies passed
// to
// bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend IterableDiffers without a parent injector');}return IterableDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[IterableDiffers,new SkipSelf(),new Optional()]]};};IterableDiffers.prototype.find=function(iterable){var factory=this.factories.find(function(f){return f.supports(iterable);});if(factory!=null){return factory;}else{throw new Error("Cannot find a differ supporting object '"+iterable+"' of type '"+getTypeNameForDebugging(iterable)+"'");}};/** @nocollapse */IterableDiffers.ɵprov=ɵɵdefineInjectable({token:IterableDiffers,providedIn:'root',factory:function factory(){return new IterableDiffers([new DefaultIterableDifferFactory()]);}});return IterableDiffers;}();function getTypeNameForDebugging(type){return type['name']||_typeof(type);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.
     *
     * @publicApi
     */var KeyValueDiffers=/** @class */function(){function KeyValueDiffers(factories){this.factories=factories;}KeyValueDiffers.create=function(factories,parent){if(parent){var copied=parent.factories.slice();factories=factories.concat(copied);}return new KeyValueDiffers(factories);};/**
         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the
         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new
         * {@link KeyValueDiffers} instance.
         *
         * @usageNotes
         * ### Example
         *
         * The following example shows how to extend an existing list of factories,
         * which will only be applied to the injector for this component and its children.
         * This step is all that's required to make a new {@link KeyValueDiffer} available.
         *
         * ```
         * @Component({
         *   viewProviders: [
         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
         *   ]
         * })
         * ```
         */KeyValueDiffers.extend=function(factories){return{provide:KeyValueDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
// to bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend KeyValueDiffers without a parent injector');}return KeyValueDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[KeyValueDiffers,new SkipSelf(),new Optional()]]};};KeyValueDiffers.prototype.find=function(kv){var factory=this.factories.find(function(f){return f.supports(kv);});if(factory){return factory;}throw new Error("Cannot find a differ supporting object '"+kv+"'");};/** @nocollapse */KeyValueDiffers.ɵprov=ɵɵdefineInjectable({token:KeyValueDiffers,providedIn:'root',factory:function factory(){return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]);}});return KeyValueDiffers;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Structural diffing for `Object`s and `Map`s.
     */var keyValDiff=[new DefaultKeyValueDifferFactory()];/**
     * Structural diffing for `Iterable` types such as `Array`s.
     */var iterableDiff=[new DefaultIterableDifferFactory()];var defaultIterableDiffers=new IterableDiffers(iterableDiff);var defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents an embedded template that can be used to instantiate embedded views.
     * To instantiate embedded views based on a template, use the `ViewContainerRef`
     * method `createEmbeddedView()`.
     *
     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`
     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view
     * is injected into the constructor of the directive,
     * using the `TemplateRef` token.
     *
     * You can also use a `Query` to find a `TemplateRef` associated with
     * a component or a directive.
     *
     * @see `ViewContainerRef`
     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)
     *
     * @publicApi
     */var TemplateRef=/** @class */function(){function TemplateRef(){}/**
         * @internal
         * @nocollapse
         */TemplateRef.__NG_ELEMENT_ID__=function(){return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef,ElementRef);};return TemplateRef;}();var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__=injectTemplateRef;var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__=noop;var SWITCH_TEMPLATE_REF_FACTORY=SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents a container where one or more views can be attached to a component.
     *
     * Can contain *host views* (created by instantiating a
     * component with the `createComponent()` method), and *embedded views*
     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).
     *
     * A view container instance can contain other view containers,
     * creating a [view hierarchy](guide/glossary#view-tree).
     *
     * @see `ComponentRef`
     * @see `EmbeddedViewRef`
     *
     * @publicApi
     */var ViewContainerRef=/** @class */function(){function ViewContainerRef(){}/**
         * @internal
         * @nocollapse
         */ViewContainerRef.__NG_ELEMENT_ID__=function(){return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef,ElementRef);};return ViewContainerRef;}();var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__=injectViewContainerRef;var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__=noop;var SWITCH_VIEW_CONTAINER_REF_FACTORY=SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function expressionChangedAfterItHasBeenCheckedError(context,oldValue,currValue,isFirstCheck){var msg="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(isFirstCheck){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}return viewDebugError(msg,context);}function viewWrappedDebugError(err,context){if(!(err instanceof Error)){// errors that are not Error instances don't have a stack,
// so it is ok to wrap them into a new Error object...
err=new Error(err.toString());}_addDebugContext(err,context);return err;}function viewDebugError(msg,context){var err=new Error(msg);_addDebugContext(err,context);return err;}function _addDebugContext(err,context){err[ERROR_DEBUG_CONTEXT]=context;err[ERROR_LOGGER]=context.logError.bind(context);}function isViewDebugError(err){return!!getDebugContext(err);}function viewDestroyedError(action){return new Error("ViewDestroyedError: Attempt to use a destroyed view: "+action);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Called before each cycle of a view's check to detect whether this is in the
// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit
// lifecycle methods. Returns true if this check cycle should call lifecycle
// methods.
function shiftInitState(view,priorInitState,newInitState){// Only update the InitState if we are currently in the prior state.
// For example, only move into CallingInit if we are in BeforeInit. Only
// move into CallingContentInit if we are in CallingInit. Normally this will
// always be true because of how checkCycle is called in checkAndUpdateView.
// However, if checkAndUpdateView is called recursively or if an exception is
// thrown while checkAndUpdateView is running, checkAndUpdateView starts over
// from the beginning. This ensures the state is monotonically increasing,
// terminating in the AfterInit state, which ensures the Init methods are called
// at least once and only once.
var state=view.state;var initState=state&1792/* InitState_Mask */;if(initState===priorInitState){view.state=state&~1792/* InitState_Mask */|newInitState;view.initIndex=-1;return true;}return initState===newInitState;}// Returns true if the lifecycle init method should be called for the node with
// the given init index.
function shouldCallLifecycleInitHook(view,initState,index){if((view.state&1792/* InitState_Mask */)===initState&&view.initIndex<=index){view.initIndex=index+1;return true;}return false;}/**
     * Node instance data.
     *
     * We have a separate type per NodeType to save memory
     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)
     *
     * To keep our code monomorphic,
     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).
     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different
     * purposes.
     */var NodeData=/** @class */function(){function NodeData(){}return NodeData;}();/**
     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
     */function asTextData(view,index){return view.nodes[index];}/**
     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
     */function asElementData(view,index){return view.nodes[index];}/**
     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
     */function asProviderData(view,index){return view.nodes[index];}/**
     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
     */function asPureExpressionData(view,index){return view.nodes[index];}/**
     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
     */function asQueryList(view,index){return view.nodes[index];}var DebugContext=/** @class */function(){function DebugContext(){}return DebugContext;}();/**
     * This object is used to prevent cycles in the source files and to have a place where
     * debug mode can hook it. It is lazily filled when `isDevMode` is known.
     */var Services={setCurrentNode:undefined,createRootView:undefined,createEmbeddedView:undefined,createComponentView:undefined,createNgModuleRef:undefined,overrideProvider:undefined,overrideComponentView:undefined,clearOverrides:undefined,checkAndUpdateView:undefined,checkNoChangesView:undefined,destroyView:undefined,resolveDep:undefined,createDebugContext:undefined,handleEvent:undefined,updateDirectives:undefined,updateRenderer:undefined,dirtyParentQueries:undefined};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NOOP=function NOOP(){};var _tokenKeyCache=new Map();function tokenKey(token){var key=_tokenKeyCache.get(token);if(!key){key=stringify(token)+'_'+_tokenKeyCache.size;_tokenKeyCache.set(token,key);}return key;}function unwrapValue(view,nodeIdx,bindingIdx,value){if(WrappedValue.isWrapped(value)){value=WrappedValue.unwrap(value);var globalBindingIdx=view.def.nodes[nodeIdx].bindingIndex+bindingIdx;var oldValue=WrappedValue.unwrap(view.oldValues[globalBindingIdx]);view.oldValues[globalBindingIdx]=new WrappedValue(oldValue);}return value;}var UNDEFINED_RENDERER_TYPE_ID='$$undefined';var EMPTY_RENDERER_TYPE_ID='$$empty';// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createRendererType2(values){return{id:UNDEFINED_RENDERER_TYPE_ID,styles:values.styles,encapsulation:values.encapsulation,data:values.data};}var _renderCompCount$1=0;function resolveRendererType2(type){if(type&&type.id===UNDEFINED_RENDERER_TYPE_ID){// first time we see this RendererType2. Initialize it...
var isFilled=type.encapsulation!=null&&type.encapsulation!==exports.ViewEncapsulation.None||type.styles.length||Object.keys(type.data).length;if(isFilled){type.id="c"+_renderCompCount$1++;}else{type.id=EMPTY_RENDERER_TYPE_ID;}}if(type&&type.id===EMPTY_RENDERER_TYPE_ID){type=null;}return type||null;}function checkBinding(view,def,bindingIdx,value){var oldValues=view.oldValues;if(view.state&2/* FirstCheck */||!looseIdentical(oldValues[def.bindingIndex+bindingIdx],value)){return true;}return false;}function checkAndUpdateBinding(view,def,bindingIdx,value){if(checkBinding(view,def,bindingIdx,value)){view.oldValues[def.bindingIndex+bindingIdx]=value;return true;}return false;}function checkBindingNoChanges(view,def,bindingIdx,value){var oldValue=view.oldValues[def.bindingIndex+bindingIdx];if(view.state&1/* BeforeFirstCheck */||!devModeEqual$1(oldValue,value)){var bindingName=def.bindings[bindingIdx].name;throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,def.nodeIndex),bindingName+": "+oldValue,bindingName+": "+value,(view.state&1/* BeforeFirstCheck */)!==0);}}function markParentViewsForCheck(view){var currView=view;while(currView){if(currView.def.flags&2/* OnPush */){currView.state|=8/* ChecksEnabled */;}currView=currView.viewContainerParent||currView.parent;}}function markParentViewsForCheckProjectedViews(view,endView){var currView=view;while(currView&&currView!==endView){currView.state|=64/* CheckProjectedViews */;currView=currView.viewContainerParent||currView.parent;}}function dispatchEvent(view,nodeIndex,eventName,event){try{var nodeDef=view.def.nodes[nodeIndex];var startView=nodeDef.flags&33554432/* ComponentView */?asElementData(view,nodeIndex).componentView:view;markParentViewsForCheck(startView);return Services.handleEvent(view,nodeIndex,eventName,event);}catch(e){// Attention: Don't rethrow, as it would cancel Observable subscriptions!
view.root.errorHandler.handleError(e);}}function declaredViewContainer(view){if(view.parent){var parentView=view.parent;return asElementData(parentView,view.parentNodeDef.nodeIndex);}return null;}/**
     * for component views, this is the host element.
     * for embedded views, this is the index of the parent node
     * that contains the view container.
     */function viewParentEl(view){var parentView=view.parent;if(parentView){return view.parentNodeDef.parent;}else{return null;}}function renderNode(view,def){switch(def.flags&201347067/* Types */){case 1/* TypeElement */:return asElementData(view,def.nodeIndex).renderElement;case 2/* TypeText */:return asTextData(view,def.nodeIndex).renderText;}}function elementEventFullName(target,name){return target?target+":"+name:name;}function isComponentView(view){return!!view.parent&&!!(view.parentNodeDef.flags&32768/* Component */);}function isEmbeddedView(view){return!!view.parent&&!(view.parentNodeDef.flags&32768/* Component */);}function filterQueryId(queryId){return 1<<queryId%32;}function splitMatchedQueriesDsl(matchedQueriesDsl){var matchedQueries={};var matchedQueryIds=0;var references={};if(matchedQueriesDsl){matchedQueriesDsl.forEach(function(_a){var _b=__read(_a,2),queryId=_b[0],valueType=_b[1];if(typeof queryId==='number'){matchedQueries[queryId]=valueType;matchedQueryIds|=filterQueryId(queryId);}else{references[queryId]=valueType;}});}return{matchedQueries:matchedQueries,references:references,matchedQueryIds:matchedQueryIds};}function splitDepsDsl(deps,sourceName){return deps.map(function(value){var _a;var token;var flags;if(Array.isArray(value)){_a=__read(value,2),flags=_a[0],token=_a[1];}else{flags=0/* None */;token=value;}if(token&&(typeof token==='function'||_typeof(token)==='object')&&sourceName){Object.defineProperty(token,SOURCE,{value:sourceName,configurable:true});}return{flags:flags,token:token,tokenKey:tokenKey(token)};});}function getParentRenderElement(view,renderHost,def){var renderParent=def.renderParent;if(renderParent){if((renderParent.flags&1/* TypeElement */)===0||(renderParent.flags&33554432/* ComponentView */)===0||renderParent.element.componentRendererType&&renderParent.element.componentRendererType.encapsulation===exports.ViewEncapsulation.Native){// only children of non components, or children of components with native encapsulation should
// be attached.
return asElementData(view,def.renderParent.nodeIndex).renderElement;}}else{return renderHost;}}var DEFINITION_CACHE=new WeakMap();function resolveDefinition(factory){var value=DEFINITION_CACHE.get(factory);if(!value){value=factory(function(){return NOOP;});value.factory=factory;DEFINITION_CACHE.set(factory,value);}return value;}function rootRenderNodes(view){var renderNodes=[];visitRootRenderNodes(view,0/* Collect */,undefined,undefined,renderNodes);return renderNodes;}function visitRootRenderNodes(view,action,parentNode,nextSibling,target){// We need to re-compute the parent node in case the nodes have been moved around manually
if(action===3/* RemoveChild */){parentNode=view.renderer.parentNode(renderNode(view,view.def.lastRenderRootNode));}visitSiblingRenderNodes(view,action,0,view.def.nodes.length-1,parentNode,nextSibling,target);}function visitSiblingRenderNodes(view,action,startIndex,endIndex,parentNode,nextSibling,target){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&(1/* TypeElement */|2/* TypeText */|8/* TypeNgContent */)){visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}}function visitProjectedRenderNodes(view,ngContentIndex,action,parentNode,nextSibling,target){var compView=view;while(compView&&!isComponentView(compView)){compView=compView.parent;}var hostView=compView.parent;var hostElDef=viewParentEl(compView);var startIndex=hostElDef.nodeIndex+1;var endIndex=hostElDef.nodeIndex+hostElDef.childCount;for(var i=startIndex;i<=endIndex;i++){var nodeDef=hostView.def.nodes[i];if(nodeDef.ngContentIndex===ngContentIndex){visitRenderNode(hostView,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}if(!hostView.parent){// a root view
var projectedNodes=view.root.projectableNodes[ngContentIndex];if(projectedNodes){for(var i=0;i<projectedNodes.length;i++){execRenderNodeAction(view,projectedNodes[i],action,parentNode,nextSibling,target);}}}}function visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target){if(nodeDef.flags&8/* TypeNgContent */){visitProjectedRenderNodes(view,nodeDef.ngContent.index,action,parentNode,nextSibling,target);}else{var rn=renderNode(view,nodeDef);if(action===3/* RemoveChild */&&nodeDef.flags&33554432/* ComponentView */&&nodeDef.bindingFlags&48/* CatSyntheticProperty */){// Note: we might need to do both actions.
if(nodeDef.bindingFlags&16/* SyntheticProperty */){execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.bindingFlags&32/* SyntheticHostProperty */){var compView=asElementData(view,nodeDef.nodeIndex).componentView;execRenderNodeAction(compView,rn,action,parentNode,nextSibling,target);}}else{execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=asElementData(view,nodeDef.nodeIndex).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){visitRootRenderNodes(embeddedViews[k],action,parentNode,nextSibling,target);}}if(nodeDef.flags&1/* TypeElement */&&!nodeDef.element.name){visitSiblingRenderNodes(view,action,nodeDef.nodeIndex+1,nodeDef.nodeIndex+nodeDef.childCount,parentNode,nextSibling,target);}}}function execRenderNodeAction(view,renderNode,action,parentNode,nextSibling,target){var renderer=view.renderer;switch(action){case 1/* AppendChild */:renderer.appendChild(parentNode,renderNode);break;case 2/* InsertBefore */:renderer.insertBefore(parentNode,renderNode,nextSibling);break;case 3/* RemoveChild */:renderer.removeChild(parentNode,renderNode);break;case 0/* Collect */:target.push(renderNode);break;}}var NS_PREFIX_RE=/^:([^:]+):(.+)$/;function splitNamespace(name){if(name[0]===':'){var match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}return['',name];}function calcBindingFlags(bindings){var flags=0;for(var i=0;i<bindings.length;i++){flags|=bindings[i].flags;}return flags;}function interpolate(valueCount,constAndInterp){var result='';for(var i=0;i<valueCount*2;i=i+2){result=result+constAndInterp[i]+_toStringWithNull(constAndInterp[i+1]);}return result+constAndInterp[valueCount*2];}function inlineInterpolate(valueCount,c0,a1,c1,a2,c2,a3,c3,a4,c4,a5,c5,a6,c6,a7,c7,a8,c8,a9,c9){switch(valueCount){case 1:return c0+_toStringWithNull(a1)+c1;case 2:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2;case 3:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3;case 4:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4;case 5:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5;case 6:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6;case 7:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7;case 8:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8;case 9:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8+_toStringWithNull(a9)+c9;default:throw new Error("Does not support more than 9 expressions");}}function _toStringWithNull(v){return v!=null?v.toString():'';}var EMPTY_ARRAY$4=[];var EMPTY_MAP={};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var UNDEFINED_VALUE={};var InjectorRefTokenKey=tokenKey(Injector);var INJECTORRefTokenKey=tokenKey(INJECTOR);var NgModuleRefTokenKey=tokenKey(NgModuleRef);function moduleProvideDef(flags,token,value,deps){// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the module definition
index:-1,deps:depDefs,flags:flags,token:token,value:value};}function moduleDef(providers){var providersByKey={};var modules=[];var scope=null;for(var i=0;i<providers.length;i++){var provider=providers[i];if(provider.token===INJECTOR_SCOPE){scope=provider.value;}if(provider.flags&1073741824/* TypeNgModule */){modules.push(provider.token);}provider.index=i;providersByKey[tokenKey(provider.token)]=provider;}return{// Will be filled later...
factory:null,providersByKey:providersByKey,providers:providers,modules:modules,scope:scope};}function initNgModule(data){var def=data._def;var providers=data._providers=newArray(def.providers.length);for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(!(provDef.flags&4096/* LazyProvider */)){// Make sure the provider has not been already initialized outside this loop.
if(providers[i]===undefined){providers[i]=_createProviderInstance(data,provDef);}}}}function resolveNgModuleDep(data,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var former=setCurrentInjector(data);try{if(depDef.flags&8/* Value */){return depDef.token;}if(depDef.flags&2/* Optional */){notFoundValue=null;}if(depDef.flags&1/* SkipSelf */){return data._parent.get(depDef.token,notFoundValue);}var tokenKey_1=depDef.tokenKey;switch(tokenKey_1){case InjectorRefTokenKey:case INJECTORRefTokenKey:case NgModuleRefTokenKey:return data;}var providerDef=data._def.providersByKey[tokenKey_1];var injectableDef=void 0;if(providerDef){var providerInstance=data._providers[providerDef.index];if(providerInstance===undefined){providerInstance=data._providers[providerDef.index]=_createProviderInstance(data,providerDef);}return providerInstance===UNDEFINED_VALUE?undefined:providerInstance;}else if((injectableDef=getInjectableDef(depDef.token))&&targetsModule(data,injectableDef)){var index=data._providers.length;data._def.providers[index]=data._def.providersByKey[depDef.tokenKey]={flags:1024/* TypeFactoryProvider */|4096/* LazyProvider */,value:injectableDef.factory,deps:[],index:index,token:depDef.token};data._providers[index]=UNDEFINED_VALUE;return data._providers[index]=_createProviderInstance(data,data._def.providersByKey[depDef.tokenKey]);}else if(depDef.flags&4/* Self */){return notFoundValue;}return data._parent.get(depDef.token,notFoundValue);}finally{setCurrentInjector(former);}}function moduleTransitivelyPresent(ngModule,scope){return ngModule._def.modules.indexOf(scope)>-1;}function targetsModule(ngModule,def){var providedIn=def.providedIn;return providedIn!=null&&(providedIn==='any'||providedIn===ngModule._def.scope||moduleTransitivelyPresent(ngModule,providedIn));}function _createProviderInstance(ngModule,providerDef){var injectable;switch(providerDef.flags&201347067/* Types */){case 512/* TypeClassProvider */:injectable=_createClass(ngModule,providerDef.value,providerDef.deps);break;case 1024/* TypeFactoryProvider */:injectable=_callFactory(ngModule,providerDef.value,providerDef.deps);break;case 2048/* TypeUseExistingProvider */:injectable=resolveNgModuleDep(ngModule,providerDef.deps[0]);break;case 256/* TypeValueProvider */:injectable=providerDef.value;break;}// The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be
// avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be
// checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already
// set (ngOnDestroy was detected statically).
if(injectable!==UNDEFINED_VALUE&&injectable!==null&&_typeof(injectable)==='object'&&!(providerDef.flags&131072/* OnDestroy */)&&typeof injectable.ngOnDestroy==='function'){providerDef.flags|=131072/* OnDestroy */;}return injectable===undefined?UNDEFINED_VALUE:injectable;}function _createClass(ngModule,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveNgModuleDep(ngModule,deps[0]));case 2:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return new ctor(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=[];for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return new(ctor.bind.apply(ctor,__spread([void 0],depValues)))();}}function _callFactory(ngModule,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveNgModuleDep(ngModule,deps[0]));case 2:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]));case 3:return factory(resolveNgModuleDep(ngModule,deps[0]),resolveNgModuleDep(ngModule,deps[1]),resolveNgModuleDep(ngModule,deps[2]));default:var depValues=[];for(var i=0;i<len;i++){depValues[i]=resolveNgModuleDep(ngModule,deps[i]);}return factory.apply(void 0,__spread(depValues));}}function callNgModuleLifecycle(ngModule,lifecycles){var def=ngModule._def;var destroyed=new Set();for(var i=0;i<def.providers.length;i++){var provDef=def.providers[i];if(provDef.flags&131072/* OnDestroy */){var instance=ngModule._providers[i];if(instance&&instance!==UNDEFINED_VALUE){var onDestroy=instance.ngOnDestroy;if(typeof onDestroy==='function'&&!destroyed.has(instance)){onDestroy.apply(instance);destroyed.add(instance);}}}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function attachEmbeddedView(parentView,elementData,viewIndex,view){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex===null||viewIndex===undefined){viewIndex=embeddedViews.length;}view.viewContainerParent=parentView;addToArray(embeddedViews,viewIndex,view);attachProjectedView(elementData,view);Services.dirtyParentQueries(view);var prevView=viewIndex>0?embeddedViews[viewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);}function attachProjectedView(vcElementData,view){var dvcElementData=declaredViewContainer(view);if(!dvcElementData||dvcElementData===vcElementData||view.state&16/* IsProjectedView */){return;}// Note: For performance reasons, we
// - add a view to template._projectedViews only 1x throughout its lifetime,
//   and remove it not until the view is destroyed.
//   (hard, as when a parent view is attached/detached we would need to attach/detach all
//    nested projected views as well, even across component boundaries).
// - don't track the insertion order of views in the projected views array
//   (hard, as when the views of the same template are inserted different view containers)
view.state|=16/* IsProjectedView */;var projectedViews=dvcElementData.template._projectedViews;if(!projectedViews){projectedViews=dvcElementData.template._projectedViews=[];}projectedViews.push(view);// Note: we are changing the NodeDef here as we cannot calculate
// the fact whether a template is used for projection during compilation.
markNodeAsProjectedTemplate(view.parent.def,view.parentNodeDef);}function markNodeAsProjectedTemplate(viewDef,nodeDef){if(nodeDef.flags&4/* ProjectedTemplate */){return;}viewDef.nodeFlags|=4/* ProjectedTemplate */;nodeDef.flags|=4/* ProjectedTemplate */;var parentNodeDef=nodeDef.parent;while(parentNodeDef){parentNodeDef.childFlags|=4/* ProjectedTemplate */;parentNodeDef=parentNodeDef.parent;}}function detachEmbeddedView(elementData,viewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;if(viewIndex==null||viewIndex>=embeddedViews.length){viewIndex=embeddedViews.length-1;}if(viewIndex<0){return null;}var view=embeddedViews[viewIndex];view.viewContainerParent=null;removeFromArray(embeddedViews,viewIndex);// See attachProjectedView for why we don't update projectedViews here.
Services.dirtyParentQueries(view);renderDetachView$1(view);return view;}function detachProjectedView(view){if(!(view.state&16/* IsProjectedView */)){return;}var dvcElementData=declaredViewContainer(view);if(dvcElementData){var projectedViews=dvcElementData.template._projectedViews;if(projectedViews){removeFromArray(projectedViews,projectedViews.indexOf(view));Services.dirtyParentQueries(view);}}}function moveEmbeddedView(elementData,oldViewIndex,newViewIndex){var embeddedViews=elementData.viewContainer._embeddedViews;var view=embeddedViews[oldViewIndex];removeFromArray(embeddedViews,oldViewIndex);if(newViewIndex==null){newViewIndex=embeddedViews.length;}addToArray(embeddedViews,newViewIndex,view);// Note: Don't need to change projectedViews as the order in there
// as always invalid...
Services.dirtyParentQueries(view);renderDetachView$1(view);var prevView=newViewIndex>0?embeddedViews[newViewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);return view;}function renderAttachEmbeddedView(elementData,prevView,view){var prevRenderNode=prevView?renderNode(prevView,prevView.def.lastRenderRootNode):elementData.renderElement;var parentNode=view.renderer.parentNode(prevRenderNode);var nextSibling=view.renderer.nextSibling(prevRenderNode);// Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
// However, browsers automatically do `appendChild` when there is no `nextSibling`.
visitRootRenderNodes(view,2/* InsertBefore */,parentNode,nextSibling,undefined);}function renderDetachView$1(view){visitRootRenderNodes(view,3/* RemoveChild */,null,null,undefined);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var EMPTY_CONTEXT={};// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createComponentFactory(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors){return new ComponentFactory_(selector,componentType,viewDefFactory,inputs,outputs,ngContentSelectors);}function getComponentViewDefinitionFactory(componentFactory){return componentFactory.viewDefFactory;}var ComponentFactory_=/** @class */function(_super){__extends(ComponentFactory_,_super);function ComponentFactory_(selector,componentType,viewDefFactory,_inputs,_outputs,ngContentSelectors){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.selector=selector;_this.componentType=componentType;_this._inputs=_inputs;_this._outputs=_outputs;_this.ngContentSelectors=ngContentSelectors;_this.viewDefFactory=viewDefFactory;return _this;}Object.defineProperty(ComponentFactory_.prototype,"inputs",{get:function get(){var inputsArr=[];var inputs=this._inputs;for(var propName in inputs){var templateName=inputs[propName];inputsArr.push({propName:propName,templateName:templateName});}return inputsArr;},enumerable:true,configurable:true});Object.defineProperty(ComponentFactory_.prototype,"outputs",{get:function get(){var outputsArr=[];for(var propName in this._outputs){var templateName=this._outputs[propName];outputsArr.push({propName:propName,templateName:templateName});}return outputsArr;},enumerable:true,configurable:true});/**
         * Creates a new component.
         */ComponentFactory_.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){if(!ngModule){throw new Error('ngModule should be provided');}var viewDef=resolveDefinition(this.viewDefFactory);var componentNodeIndex=viewDef.nodes[0].element.componentProvider.nodeIndex;var view=Services.createRootView(injector,projectableNodes||[],rootSelectorOrNode,viewDef,ngModule,EMPTY_CONTEXT);var component=asProviderData(view,componentNodeIndex).instance;if(rootSelectorOrNode){view.renderer.setAttribute(asElementData(view,0).renderElement,'ng-version',VERSION.full);}return new ComponentRef_(view,new ViewRef_(view),component);};return ComponentFactory_;}(ComponentFactory);var ComponentRef_=/** @class */function(_super){__extends(ComponentRef_,_super);function ComponentRef_(_view,_viewRef,_component){var _this=_super.call(this)||this;_this._view=_view;_this._viewRef=_viewRef;_this._component=_component;_this._elDef=_this._view.def.nodes[0];_this.hostView=_viewRef;_this.changeDetectorRef=_viewRef;_this.instance=_component;return _this;}Object.defineProperty(ComponentRef_.prototype,"location",{get:function get(){return new ElementRef(asElementData(this._view,this._elDef.nodeIndex).renderElement);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ComponentRef_.prototype,"componentType",{get:function get(){return this._component.constructor;},enumerable:true,configurable:true});ComponentRef_.prototype.destroy=function(){this._viewRef.destroy();};ComponentRef_.prototype.onDestroy=function(callback){this._viewRef.onDestroy(callback);};return ComponentRef_;}(ComponentRef);function createViewContainerData(view,elDef,elData){return new ViewContainerRef_(view,elDef,elData);}var ViewContainerRef_=/** @class */function(){function ViewContainerRef_(_view,_elDef,_data){this._view=_view;this._elDef=_elDef;this._data=_data;/**
             * @internal
             */this._embeddedViews=[];}Object.defineProperty(ViewContainerRef_.prototype,"element",{get:function get(){return new ElementRef(this._data.renderElement);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"injector",{get:function get(){return new Injector_(this._view,this._elDef);},enumerable:true,configurable:true});Object.defineProperty(ViewContainerRef_.prototype,"parentInjector",{/** @deprecated No replacement */get:function get(){var view=this._view;var elDef=this._elDef.parent;while(!elDef&&view){elDef=viewParentEl(view);view=view.parent;}return view?new Injector_(view,elDef):new Injector_(this._view,null);},enumerable:true,configurable:true});ViewContainerRef_.prototype.clear=function(){var len=this._embeddedViews.length;for(var i=len-1;i>=0;i--){var view=detachEmbeddedView(this._data,i);Services.destroyView(view);}};ViewContainerRef_.prototype.get=function(index){var view=this._embeddedViews[index];if(view){var ref=new ViewRef_(view);ref.attachToViewContainerRef(this);return ref;}return null;};Object.defineProperty(ViewContainerRef_.prototype,"length",{get:function get(){return this._embeddedViews.length;},enumerable:true,configurable:true});ViewContainerRef_.prototype.createEmbeddedView=function(templateRef,context,index){var viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;};ViewContainerRef_.prototype.createComponent=function(componentFactory,index,injector,projectableNodes,ngModuleRef){var contextInjector=injector||this.parentInjector;if(!ngModuleRef&&!(componentFactory instanceof ComponentFactoryBoundToModule)){ngModuleRef=contextInjector.get(NgModuleRef);}var componentRef=componentFactory.create(contextInjector,projectableNodes,undefined,ngModuleRef);this.insert(componentRef.hostView,index);return componentRef;};ViewContainerRef_.prototype.insert=function(viewRef,index){if(viewRef.destroyed){throw new Error('Cannot insert a destroyed View in a ViewContainer!');}var viewRef_=viewRef;var viewData=viewRef_._view;attachEmbeddedView(this._view,this._data,index,viewData);viewRef_.attachToViewContainerRef(this);return viewRef;};ViewContainerRef_.prototype.move=function(viewRef,currentIndex){if(viewRef.destroyed){throw new Error('Cannot move a destroyed View in a ViewContainer!');}var previousIndex=this._embeddedViews.indexOf(viewRef._view);moveEmbeddedView(this._data,previousIndex,currentIndex);return viewRef;};ViewContainerRef_.prototype.indexOf=function(viewRef){return this._embeddedViews.indexOf(viewRef._view);};ViewContainerRef_.prototype.remove=function(index){var viewData=detachEmbeddedView(this._data,index);if(viewData){Services.destroyView(viewData);}};ViewContainerRef_.prototype.detach=function(index){var view=detachEmbeddedView(this._data,index);return view?new ViewRef_(view):null;};return ViewContainerRef_;}();function createChangeDetectorRef(view){return new ViewRef_(view);}var ViewRef_=/** @class */function(){function ViewRef_(_view){this._view=_view;this._viewContainerRef=null;this._appRef=null;}Object.defineProperty(ViewRef_.prototype,"rootNodes",{get:function get(){return rootRenderNodes(this._view);},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"context",{get:function get(){return this._view.context;},enumerable:true,configurable:true});Object.defineProperty(ViewRef_.prototype,"destroyed",{get:function get(){return(this._view.state&128/* Destroyed */)!==0;},enumerable:true,configurable:true});ViewRef_.prototype.markForCheck=function(){markParentViewsForCheck(this._view);};ViewRef_.prototype.detach=function(){this._view.state&=~4/* Attached */;};ViewRef_.prototype.detectChanges=function(){var fs=this._view.root.rendererFactory;if(fs.begin){fs.begin();}try{Services.checkAndUpdateView(this._view);}finally{if(fs.end){fs.end();}}};ViewRef_.prototype.checkNoChanges=function(){Services.checkNoChangesView(this._view);};ViewRef_.prototype.reattach=function(){this._view.state|=4/* Attached */;};ViewRef_.prototype.onDestroy=function(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(callback);};ViewRef_.prototype.destroy=function(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));}Services.destroyView(this._view);};ViewRef_.prototype.detachFromAppRef=function(){this._appRef=null;renderDetachView$1(this._view);Services.dirtyParentQueries(this._view);};ViewRef_.prototype.attachToAppRef=function(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;};ViewRef_.prototype.attachToViewContainerRef=function(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;};return ViewRef_;}();function createTemplateData(view,def){return new TemplateRef_(view,def);}var TemplateRef_=/** @class */function(_super){__extends(TemplateRef_,_super);function TemplateRef_(_parentView,_def){var _this=_super.call(this)||this;_this._parentView=_parentView;_this._def=_def;return _this;}TemplateRef_.prototype.createEmbeddedView=function(context){return new ViewRef_(Services.createEmbeddedView(this._parentView,this._def,this._def.element.template,context));};Object.defineProperty(TemplateRef_.prototype,"elementRef",{get:function get(){return new ElementRef(asElementData(this._parentView,this._def.nodeIndex).renderElement);},enumerable:true,configurable:true});return TemplateRef_;}(TemplateRef);function createInjector$1(view,elDef){return new Injector_(view,elDef);}var Injector_=/** @class */function(){function Injector_(view,elDef){this.view=view;this.elDef=elDef;}Injector_.prototype.get=function(token,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}var allowPrivateServices=this.elDef?(this.elDef.flags&33554432/* ComponentView */)!==0:false;return Services.resolveDep(this.view,this.elDef,allowPrivateServices,{flags:0/* None */,token:token,tokenKey:tokenKey(token)},notFoundValue);};return Injector_;}();function nodeValue(view,index){var def=view.def.nodes[index];if(def.flags&1/* TypeElement */){var elData=asElementData(view,def.nodeIndex);return def.element.template?elData.template:elData.renderElement;}else if(def.flags&2/* TypeText */){return asTextData(view,def.nodeIndex).renderText;}else if(def.flags&(20224/* CatProvider */|16/* TypePipe */)){return asProviderData(view,def.nodeIndex).instance;}throw new Error("Illegal state: read nodeValue for node index "+index);}function createNgModuleRef(moduleType,parent,bootstrapComponents,def){return new NgModuleRef_(moduleType,parent,bootstrapComponents,def);}var NgModuleRef_=/** @class */function(){function NgModuleRef_(_moduleType,_parent,_bootstrapComponents,_def){this._moduleType=_moduleType;this._parent=_parent;this._bootstrapComponents=_bootstrapComponents;this._def=_def;this._destroyListeners=[];this._destroyed=false;this.injector=this;initNgModule(this);}NgModuleRef_.prototype.get=function(token,notFoundValue,injectFlags){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(injectFlags===void 0){injectFlags=exports.InjectFlags.Default;}var flags=0/* None */;if(injectFlags&exports.InjectFlags.SkipSelf){flags|=1/* SkipSelf */;}else if(injectFlags&exports.InjectFlags.Self){flags|=4/* Self */;}return resolveNgModuleDep(this,{token:token,tokenKey:tokenKey(token),flags:flags},notFoundValue);};Object.defineProperty(NgModuleRef_.prototype,"instance",{get:function get(){return this.get(this._moduleType);},enumerable:true,configurable:true});Object.defineProperty(NgModuleRef_.prototype,"componentFactoryResolver",{get:function get(){return this.get(ComponentFactoryResolver);},enumerable:true,configurable:true});NgModuleRef_.prototype.destroy=function(){if(this._destroyed){throw new Error("The ng module "+stringify(this.instance.constructor)+" has already been destroyed.");}this._destroyed=true;callNgModuleLifecycle(this,131072/* OnDestroy */);this._destroyListeners.forEach(function(listener){return listener();});};NgModuleRef_.prototype.onDestroy=function(callback){this._destroyListeners.push(callback);};return NgModuleRef_;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Renderer2TokenKey=tokenKey(Renderer2);var ElementRefTokenKey=tokenKey(ElementRef);var ViewContainerRefTokenKey=tokenKey(ViewContainerRef);var TemplateRefTokenKey=tokenKey(TemplateRef);var ChangeDetectorRefTokenKey=tokenKey(ChangeDetectorRef);var InjectorRefTokenKey$1=tokenKey(Injector);var INJECTORRefTokenKey$1=tokenKey(INJECTOR);function directiveDef(checkIndex,flags,matchedQueries,childCount,ctor,deps,props,outputs){var bindings=[];if(props){for(var prop in props){var _a=__read(props[prop],2),bindingIndex=_a[0],nonMinifiedName=_a[1];bindings[bindingIndex]={flags:8/* TypeProperty */,name:prop,nonMinifiedName:nonMinifiedName,ns:null,securityContext:null,suffix:null};}}var outputDefs=[];if(outputs){for(var propName in outputs){outputDefs.push({type:1/* DirectiveOutput */,propName:propName,target:null,eventName:outputs[propName]});}}flags|=16384/* TypeDirective */;return _def(checkIndex,flags,matchedQueries,childCount,ctor,ctor,deps,bindings,outputDefs);}function pipeDef(flags,ctor,deps){flags|=16/* TypePipe */;return _def(-1,flags,null,0,ctor,ctor,deps);}function providerDef(flags,matchedQueries,token,value,deps){return _def(-1,flags,matchedQueries,0,token,value,deps);}function _def(checkIndex,flags,matchedQueriesDsl,childCount,token,value,deps,bindings,outputs){var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;if(!outputs){outputs=[];}if(!bindings){bindings=[];}// Need to resolve forwardRefs as e.g. for `useValue` we
// lowered the expression and then stopped evaluating it,
// i.e. also didn't unwrap it.
value=resolveForwardRef(value);var depDefs=splitDepsDsl(deps,stringify(token));return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:-1,childCount:childCount,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:outputs,element:null,provider:{token:token,value:value,deps:depDefs},text:null,query:null,ngContent:null};}function createProviderInstance(view,def){return _createProviderInstance$1(view,def);}function createPipeInstance(view,def){// deps are looked up from component.
var compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}// pipes can see the private services of the component
var allowPrivateServices=true;// pipes are always eager and classes!
return createClass(compView.parent,viewParentEl(compView),allowPrivateServices,def.provider.value,def.provider.deps);}function createDirectiveInstance(view,def){// components can see other private services, other directives can't.
var allowPrivateServices=(def.flags&32768/* Component */)>0;// directives are always eager and classes!
var instance=createClass(view,def.parent,allowPrivateServices,def.provider.value,def.provider.deps);if(def.outputs.length){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var outputObservable=instance[output.propName];if(isObservable(outputObservable)){var subscription=outputObservable.subscribe(eventHandlerClosure(view,def.parent.nodeIndex,output.eventName));view.disposables[def.outputIndex+i]=subscription.unsubscribe.bind(subscription);}else{throw new Error("@Output "+output.propName+" not initialized in '"+instance.constructor.name+"'.");}}}return instance;}function eventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateDirectiveInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;var bindLen=def.bindings.length;if(bindLen>0&&checkBinding(view,def,0,v0)){changed=true;changes=updateProp(view,providerData,def,0,v0,changes);}if(bindLen>1&&checkBinding(view,def,1,v1)){changed=true;changes=updateProp(view,providerData,def,1,v1,changes);}if(bindLen>2&&checkBinding(view,def,2,v2)){changed=true;changes=updateProp(view,providerData,def,2,v2,changes);}if(bindLen>3&&checkBinding(view,def,3,v3)){changed=true;changes=updateProp(view,providerData,def,3,v3,changes);}if(bindLen>4&&checkBinding(view,def,4,v4)){changed=true;changes=updateProp(view,providerData,def,4,v4,changes);}if(bindLen>5&&checkBinding(view,def,5,v5)){changed=true;changes=updateProp(view,providerData,def,5,v5,changes);}if(bindLen>6&&checkBinding(view,def,6,v6)){changed=true;changes=updateProp(view,providerData,def,6,v6,changes);}if(bindLen>7&&checkBinding(view,def,7,v7)){changed=true;changes=updateProp(view,providerData,def,7,v7,changes);}if(bindLen>8&&checkBinding(view,def,8,v8)){changed=true;changes=updateProp(view,providerData,def,8,v8,changes);}if(bindLen>9&&checkBinding(view,def,9,v9)){changed=true;changes=updateProp(view,providerData,def,9,v9,changes);}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function checkAndUpdateDirectiveDynamic(view,def,values){var providerData=asProviderData(view,def.nodeIndex);var directive=providerData.instance;var changed=false;var changes=undefined;for(var i=0;i<values.length;i++){if(checkBinding(view,def,i,values[i])){changed=true;changes=updateProp(view,providerData,def,i,values[i],changes);}}if(changes){directive.ngOnChanges(changes);}if(def.flags&65536/* OnInit */&&shouldCallLifecycleInitHook(view,256/* InitState_CallingOnInit */,def.nodeIndex)){directive.ngOnInit();}if(def.flags&262144/* DoCheck */){directive.ngDoCheck();}return changed;}function _createProviderInstance$1(view,def){// private services can see other private services
var allowPrivateServices=(def.flags&8192/* PrivateProvider */)>0;var providerDef=def.provider;switch(def.flags&201347067/* Types */){case 512/* TypeClassProvider */:return createClass(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 1024/* TypeFactoryProvider */:return callFactory(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);case 2048/* TypeUseExistingProvider */:return resolveDep(view,def.parent,allowPrivateServices,providerDef.deps[0]);case 256/* TypeValueProvider */:return providerDef.value;}}function createClass(view,elDef,allowPrivateServices,ctor,deps){var len=deps.length;switch(len){case 0:return new ctor();case 1:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=[];for(var i=0;i<len;i++){depValues.push(resolveDep(view,elDef,allowPrivateServices,deps[i]));}return new(ctor.bind.apply(ctor,__spread([void 0],depValues)))();}}function callFactory(view,elDef,allowPrivateServices,factory,deps){var len=deps.length;switch(len){case 0:return factory();case 1:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]));case 2:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));case 3:return factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));default:var depValues=[];for(var i=0;i<len;i++){depValues.push(resolveDep(view,elDef,allowPrivateServices,deps[i]));}return factory.apply(void 0,__spread(depValues));}}// This default value is when checking the hierarchy for a token.
//
// It means both:
// - the token is not provided by the current injector,
// - only the element injectors should be checked (ie do not check module injectors
//
//          mod1
//         /
//       el1   mod2
//         \  /
//         el2
//
// When requesting el2.injector.get(token), we should check in the following order and return the
// first found value:
// - el2.injector.get(token, default)
// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module
// - mod2.injector.get(token, default)
var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR={};function resolveDep(view,elDef,allowPrivateServices,depDef,notFoundValue){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(depDef.flags&8/* Value */){return depDef.token;}var startView=view;if(depDef.flags&2/* Optional */){notFoundValue=null;}var tokenKey=depDef.tokenKey;if(tokenKey===ChangeDetectorRefTokenKey){// directives on the same element as a component should be able to control the change detector
// of that component as well.
allowPrivateServices=!!(elDef&&elDef.element.componentView);}if(elDef&&depDef.flags&1/* SkipSelf */){allowPrivateServices=false;elDef=elDef.parent;}var searchView=view;while(searchView){if(elDef){switch(tokenKey){case Renderer2TokenKey:{var compView=findCompView(searchView,elDef,allowPrivateServices);return compView.renderer;}case ElementRefTokenKey:return new ElementRef(asElementData(searchView,elDef.nodeIndex).renderElement);case ViewContainerRefTokenKey:return asElementData(searchView,elDef.nodeIndex).viewContainer;case TemplateRefTokenKey:{if(elDef.element.template){return asElementData(searchView,elDef.nodeIndex).template;}break;}case ChangeDetectorRefTokenKey:{var cdView=findCompView(searchView,elDef,allowPrivateServices);return createChangeDetectorRef(cdView);}case InjectorRefTokenKey$1:case INJECTORRefTokenKey$1:return createInjector$1(searchView,elDef);default:var providerDef_1=(allowPrivateServices?elDef.element.allProviders:elDef.element.publicProviders)[tokenKey];if(providerDef_1){var providerData=asProviderData(searchView,providerDef_1.nodeIndex);if(!providerData){providerData={instance:_createProviderInstance$1(searchView,providerDef_1)};searchView.nodes[providerDef_1.nodeIndex]=providerData;}return providerData.instance;}}}allowPrivateServices=isComponentView(searchView);elDef=viewParentEl(searchView);searchView=searchView.parent;if(depDef.flags&4/* Self */){searchView=null;}}var value=startView.root.injector.get(depDef.token,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);if(value!==NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR||notFoundValue===NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR){// Return the value from the root element injector when
// - it provides it
//   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
// - the module injector should not be checked
//   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
return value;}return startView.root.ngModule.injector.get(depDef.token,notFoundValue);}function findCompView(view,elDef,allowPrivateServices){var compView;if(allowPrivateServices){compView=asElementData(view,elDef.nodeIndex).componentView;}else{compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}}return compView;}function updateProp(view,providerData,def,bindingIdx,value,changes){if(def.flags&32768/* Component */){var compView=asElementData(view,def.parent.nodeIndex).componentView;if(compView.def.flags&2/* OnPush */){compView.state|=8/* ChecksEnabled */;}}var binding=def.bindings[bindingIdx];var propName=binding.name;// Note: This is still safe with Closure Compiler as
// the user passed in the property name as an object has to `providerDef`,
// so Closure Compiler will have renamed the property correctly already.
providerData.instance[propName]=value;if(def.flags&524288/* OnChanges */){changes=changes||{};var oldValue=WrappedValue.unwrap(view.oldValues[def.bindingIndex+bindingIdx]);var binding_1=def.bindings[bindingIdx];changes[binding_1.nonMinifiedName]=new SimpleChange(oldValue,value,(view.state&2/* FirstCheck */)!==0);}view.oldValues[def.bindingIndex+bindingIdx]=value;return changes;}// This function calls the ngAfterContentCheck, ngAfterContentInit,
// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node
// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are
// called during a pre-order traversal of the view tree (that is calling the
// parent hooks before the child hooks) these events are sent in using a
// post-order traversal of the tree (children before parents). This changes the
// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the
// expected nodeIndex which a ngOnInit should be called. When sending
// ngAfterContentInit and ngAfterViewInit it is the expected count of
// ngAfterContentInit or ngAfterViewInit methods that have been called. This
// ensure that despite being called recursively or after picking up after an
// exception, the ngAfterContentInit or ngAfterViewInit will be called on the
// correct nodes. Consider for example, the following (where E is an element
// and D is a directive)
//  Tree:       pre-order index  post-order index
//    E1        0                6
//      E2      1                1
//       D3     2                0
//      E4      3                5
//       E5     4                4
//        E6    5                2
//        E7    6                3
// As can be seen, the post-order index has an unclear relationship to the
// pre-order index (postOrderIndex === preOrderIndex - parentCount +
// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit
// are stable (will be the same for the same view regardless of exceptions or
// recursion) we just need to count them which will roughly correspond to the
// post-order index (it skips elements and directives that do not have
// lifecycle hooks).
//
// For example, if an exception is raised in the E6.onAfterViewInit() the
// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to
// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will
// not have their ngAfterViewInit() called but, starting with E7, the rest of
// the view will begin getting ngAfterViewInit() called until a check and
// pass is complete.
//
// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()
// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected
// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.
// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.
// When the recursion returns the initIndex will be 7 so E1 is skipped as it
// has already been called in the recursively called checkAnUpdateView().
function callLifecycleHooksChildrenFirst(view,lifecycles){if(!(view.def.nodeFlags&lifecycles)){return;}var nodes=view.def.nodes;var initIndex=0;for(var i=0;i<nodes.length;i++){var nodeDef=nodes[i];var parent_1=nodeDef.parent;if(!parent_1&&nodeDef.flags&lifecycles){// matching root node (e.g. a pipe)
callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}if((nodeDef.childFlags&lifecycles)===0){// no child matches one of the lifecycles
i+=nodeDef.childCount;}while(parent_1&&parent_1.flags&1/* TypeElement */&&i===parent_1.nodeIndex+parent_1.childCount){// last child of an element
if(parent_1.directChildFlags&lifecycles){initIndex=callElementProvidersLifecycles(view,parent_1,lifecycles,initIndex);}parent_1=parent_1.parent;}}}function callElementProvidersLifecycles(view,elDef,lifecycles,initIndex){for(var i=elDef.nodeIndex+1;i<=elDef.nodeIndex+elDef.childCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&lifecycles){callProviderLifecycles(view,i,nodeDef.flags&lifecycles,initIndex++);}// only visit direct children
i+=nodeDef.childCount;}return initIndex;}function callProviderLifecycles(view,index,lifecycles,initIndex){var providerData=asProviderData(view,index);if(!providerData){return;}var provider=providerData.instance;if(!provider){return;}Services.setCurrentNode(view,index);if(lifecycles&1048576/* AfterContentInit */&&shouldCallLifecycleInitHook(view,512/* InitState_CallingAfterContentInit */,initIndex)){provider.ngAfterContentInit();}if(lifecycles&2097152/* AfterContentChecked */){provider.ngAfterContentChecked();}if(lifecycles&4194304/* AfterViewInit */&&shouldCallLifecycleInitHook(view,768/* InitState_CallingAfterViewInit */,initIndex)){provider.ngAfterViewInit();}if(lifecycles&8388608/* AfterViewChecked */){provider.ngAfterViewChecked();}if(lifecycles&131072/* OnDestroy */){provider.ngOnDestroy();}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ComponentFactoryResolver$1=/** @class */function(_super){__extends(ComponentFactoryResolver,_super);/**
         * @param ngModule The NgModuleRef to which all resolved factories are bound.
         */function ComponentFactoryResolver(ngModule){var _this=_super.call(this)||this;_this.ngModule=ngModule;return _this;}ComponentFactoryResolver.prototype.resolveComponentFactory=function(component){ngDevMode&&assertComponentType(component);var componentDef=getComponentDef(component);return new ComponentFactory$1(componentDef,this.ngModule);};return ComponentFactoryResolver;}(ComponentFactoryResolver);function toRefArray(map){var array=[];for(var nonMinified in map){if(map.hasOwnProperty(nonMinified)){var minified=map[nonMinified];array.push({propName:minified,templateName:nonMinified});}}return array;}function getNamespace$1(elementName){var name=elementName.toLowerCase();return name==='svg'?SVG_NAMESPACE:name==='math'?MATH_ML_NAMESPACE:null;}/**
     * A change detection scheduler token for {@link RootContext}. This token is the default value used
     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.
     */var SCHEDULER=new InjectionToken('SCHEDULER_TOKEN',{providedIn:'root',factory:function factory(){return defaultScheduler;}});function createChainedInjector(rootViewInjector,moduleInjector){return{get:function get(token,notFoundValue,flags){var value=rootViewInjector.get(token,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,flags);if(value!==NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR||notFoundValue===NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR){// Return the value from the root element injector when
// - it provides it
//   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
// - the module injector should not be checked
//   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)
return value;}return moduleInjector.get(token,notFoundValue,flags);}};}/**
     * Render3 implementation of {@link viewEngine_ComponentFactory}.
     */var ComponentFactory$1=/** @class */function(_super){__extends(ComponentFactory,_super);/**
         * @param componentDef The component definition.
         * @param ngModule The NgModuleRef to which the factory is bound.
         */function ComponentFactory(componentDef,ngModule){var _this=_super.call(this)||this;_this.componentDef=componentDef;_this.ngModule=ngModule;_this.componentType=componentDef.type;_this.selector=stringifyCSSSelectorList(componentDef.selectors);_this.ngContentSelectors=componentDef.ngContentSelectors?componentDef.ngContentSelectors:[];_this.isBoundToModule=!!ngModule;return _this;}Object.defineProperty(ComponentFactory.prototype,"inputs",{get:function get(){return toRefArray(this.componentDef.inputs);},enumerable:true,configurable:true});Object.defineProperty(ComponentFactory.prototype,"outputs",{get:function get(){return toRefArray(this.componentDef.outputs);},enumerable:true,configurable:true});ComponentFactory.prototype.create=function(injector,projectableNodes,rootSelectorOrNode,ngModule){ngModule=ngModule||this.ngModule;var rootViewInjector=ngModule?createChainedInjector(injector,ngModule.injector):injector;var rendererFactory=rootViewInjector.get(RendererFactory2,domRendererFactory3);var sanitizer=rootViewInjector.get(Sanitizer,null);var hostRenderer=rendererFactory.createRenderer(null,this.componentDef);// Determine a tag name used for creating host elements when this component is created
// dynamically. Default to 'div' if this component did not specify any tag name in its selector.
var elementName=this.componentDef.selectors[0][0]||'div';var hostRNode=rootSelectorOrNode?locateHostElement(hostRenderer,rootSelectorOrNode,this.componentDef.encapsulation):elementCreate(elementName,rendererFactory.createRenderer(null,this.componentDef),getNamespace$1(elementName));var rootFlags=this.componentDef.onPush?64/* Dirty */|512/* IsRoot */:16/* CheckAlways */|512/* IsRoot */;// Check whether this Component needs to be isolated from other components, i.e. whether it
// should be placed into its own (empty) root context or existing root context should be used.
// Note: this is internal-only convention and might change in the future, so it should not be
// relied upon externally.
var isIsolated=typeof rootSelectorOrNode==='string'&&/^#root-ng-internal-isolated-\d+/.test(rootSelectorOrNode);var rootContext=createRootContext();// Create the root view. Uses empty TView and ContentTemplate.
var rootTView=createTView(0/* Root */,-1,null,1,0,null,null,null,null,null);var rootLView=createLView(null,rootTView,rootContext,rootFlags,null,null,rendererFactory,hostRenderer,sanitizer,rootViewInjector);// rootView is the parent when bootstrapping
// TODO(misko): it looks like we are entering view here but we don't really need to as
// `renderView` does that. However as the code is written it is needed because
// `createRootComponentView` and `createRootComponent` both read global state. Fixing those
// issues would allow us to drop this.
enterView(rootLView,null);var component;var tElementNode;try{var componentView=createRootComponentView(hostRNode,this.componentDef,rootLView,rendererFactory,hostRenderer);if(hostRNode){if(rootSelectorOrNode){setUpAttributes(hostRenderer,hostRNode,['ng-version',VERSION.full]);}else{// If host element is created as a part of this function call (i.e. `rootSelectorOrNode`
// is not defined), also apply attributes and classes extracted from component selector.
// Extract attributes and classes from the first selector only to match VE behavior.
var _a=extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]),attrs=_a.attrs,classes=_a.classes;if(attrs){setUpAttributes(hostRenderer,hostRNode,attrs);}if(classes&&classes.length>0){writeDirectClass(hostRenderer,hostRNode,classes.join(' '));}}}tElementNode=getTNode(rootTView,0);if(projectableNodes!==undefined){var projection=tElementNode.projection=[];for(var i=0;i<this.ngContentSelectors.length;i++){var nodesforSlot=projectableNodes[i];// Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade
// case). Here we do normalize passed data structure to be an array of arrays to avoid
// complex checks down the line.
// We also normalize the length of the passed in projectable nodes (to match the number of
// <ng-container> slots defined by a component).
projection.push(nodesforSlot!=null?Array.from(nodesforSlot):null);}}// TODO: should LifecycleHooksFeature and other host features be generated by the compiler and
// executed here?
// Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref
component=createRootComponent(componentView,this.componentDef,rootLView,rootContext,[LifecycleHooksFeature]);renderView(rootTView,rootLView,null);}finally{leaveView();}var componentRef=new ComponentRef$1(this.componentType,component,createElementRef(ElementRef,tElementNode,rootLView),rootLView,tElementNode);if(!rootSelectorOrNode||isIsolated){// The host element of the internal or isolated root view is attached to the component's host
// view node.
ngDevMode&&assertNodeOfPossibleTypes(rootTView.node,2/* View */);rootTView.node.child=tElementNode;}return componentRef;};return ComponentFactory;}(ComponentFactory);var componentFactoryResolver=new ComponentFactoryResolver$1();/**
     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the
     * ComponentFactoryResolver
     * already exists, retrieves the existing ComponentFactoryResolver.
     *
     * @returns The ComponentFactoryResolver instance to use
     */function injectComponentFactoryResolver(){return componentFactoryResolver;}/**
     * Represents an instance of a Component created via a {@link ComponentFactory}.
     *
     * `ComponentRef` provides access to the Component Instance as well other objects related to this
     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}
     * method.
     *
     */var ComponentRef$1=/** @class */function(_super){__extends(ComponentRef,_super);function ComponentRef(componentType,instance,location,_rootLView,_tNode){var _this=_super.call(this)||this;_this.location=location;_this._rootLView=_rootLView;_this._tNode=_tNode;_this.destroyCbs=[];_this.instance=instance;_this.hostView=_this.changeDetectorRef=new RootViewRef(_rootLView);assignTViewNodeToLView(_rootLView[TVIEW],null,-1,_rootLView);_this.componentType=componentType;return _this;}Object.defineProperty(ComponentRef.prototype,"injector",{get:function get(){return new NodeInjector(this._tNode,this._rootLView);},enumerable:true,configurable:true});ComponentRef.prototype.destroy=function(){if(this.destroyCbs){this.destroyCbs.forEach(function(fn){return fn();});this.destroyCbs=null;!this.hostView.destroyed&&this.hostView.destroy();}};ComponentRef.prototype.onDestroy=function(callback){if(this.destroyCbs){this.destroyCbs.push(callback);}};return ComponentRef;}(ComponentRef);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.
     */if(typeof ngI18nClosureMode==='undefined'){// These property accesses can be ignored because ngI18nClosureMode will be set to false
// when optimizing code and the whole if statement will be dropped.
// Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.
// NOTE: we need to have it in IIFE so that the tree-shaker is happy.
(function(){// tslint:disable-next-line:no-toplevel-property-access
_global['ngI18nClosureMode']=// TODO(FW-1250): validate that this actually, you know, works.
// tslint:disable-next-line:no-toplevel-property-access
typeof goog!=='undefined'&&typeof goog.getMsg==='function';})();}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // THIS CODE IS GENERATED - DO NOT MODIFY
// See angular/tools/gulp-tasks/cldr/extract.js
var u=undefined;function plural(n){var i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\.?/,'').length;if(i===1&&v===0)return 1;return 5;}var localeEn=['en',[['a','p'],['AM','PM'],u],[['AM','PM'],u,u],[['S','M','T','W','T','F','S'],['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],['Su','Mo','Tu','We','Th','Fr','Sa']],u,[['J','F','M','A','M','J','J','A','S','O','N','D'],['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],['January','February','March','April','May','June','July','August','September','October','November','December']],u,[['B','A'],['BC','AD'],['Before Christ','Anno Domini']],0,[6,0],['M/d/yy','MMM d, y','MMMM d, y','EEEE, MMMM d, y'],['h:mm a','h:mm:ss a','h:mm:ss a z','h:mm:ss a zzzz'],['{1}, {0}',u,'{1} \'at\' {0}',u],['.',',',';','%','+','-','E','×','‰','∞','NaN',':'],['#,##0.###','#,##0%','¤#,##0.00','#E0'],'USD','$','US Dollar',{},'ltr',plural];/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This const is used to store the locale data registered with `registerLocaleData`
     */var LOCALE_DATA={};/**
     * Register locale data to be used internally by Angular. See the
     * ["I18n guide"](guide/i18n#i18n-pipes) to know how to import additional locale data.
     *
     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1
     */function registerLocaleData(data,localeId,extraData){if(typeof localeId!=='string'){extraData=localeId;localeId=data[exports.ɵLocaleDataIndex.LocaleId];}localeId=localeId.toLowerCase().replace(/_/g,'-');LOCALE_DATA[localeId]=data;if(extraData){LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData]=extraData;}}/**
     * Finds the locale data for a given locale.
     *
     * @param locale The locale code.
     * @returns The locale data.
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     */function findLocaleData(locale){var normalizedLocale=normalizeLocale(locale);var match=getLocaleData(normalizedLocale);if(match){return match;}// let's try to find a parent locale
var parentLocale=normalizedLocale.split('-')[0];match=getLocaleData(parentLocale);if(match){return match;}if(parentLocale==='en'){return localeEn;}throw new Error("Missing locale data for the locale \""+locale+"\".");}/**
     * Retrieves the default currency code for the given locale.
     *
     * The default is defined as the first currency which is still in use.
     *
     * @param locale The code of the locale whose currency code we want.
     * @returns The code of the default currency for the given locale.
     *
     */function getLocaleCurrencyCode(locale){var data=findLocaleData(locale);return data[exports.ɵLocaleDataIndex.CurrencyCode]||null;}/**
     * Retrieves the plural function used by ICU expressions to determine the plural case to use
     * for a given locale.
     * @param locale A locale code for the locale format rules to use.
     * @returns The plural function for the locale.
     * @see `NgPlural`
     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)
     */function getLocalePluralCase(locale){var data=findLocaleData(locale);return data[exports.ɵLocaleDataIndex.PluralCase];}/**
     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`
     * or from the global `ng.common.locale`.
     */function getLocaleData(normalizedLocale){if(!(normalizedLocale in LOCALE_DATA)){LOCALE_DATA[normalizedLocale]=_global.ng&&_global.ng.common&&_global.ng.common.locales&&_global.ng.common.locales[normalizedLocale];}return LOCALE_DATA[normalizedLocale];}/**
     * Helper function to remove all the locale data from `LOCALE_DATA`.
     */function unregisterAllLocaleData(){LOCALE_DATA={};}(function(LocaleDataIndex){LocaleDataIndex[LocaleDataIndex["LocaleId"]=0]="LocaleId";LocaleDataIndex[LocaleDataIndex["DayPeriodsFormat"]=1]="DayPeriodsFormat";LocaleDataIndex[LocaleDataIndex["DayPeriodsStandalone"]=2]="DayPeriodsStandalone";LocaleDataIndex[LocaleDataIndex["DaysFormat"]=3]="DaysFormat";LocaleDataIndex[LocaleDataIndex["DaysStandalone"]=4]="DaysStandalone";LocaleDataIndex[LocaleDataIndex["MonthsFormat"]=5]="MonthsFormat";LocaleDataIndex[LocaleDataIndex["MonthsStandalone"]=6]="MonthsStandalone";LocaleDataIndex[LocaleDataIndex["Eras"]=7]="Eras";LocaleDataIndex[LocaleDataIndex["FirstDayOfWeek"]=8]="FirstDayOfWeek";LocaleDataIndex[LocaleDataIndex["WeekendRange"]=9]="WeekendRange";LocaleDataIndex[LocaleDataIndex["DateFormat"]=10]="DateFormat";LocaleDataIndex[LocaleDataIndex["TimeFormat"]=11]="TimeFormat";LocaleDataIndex[LocaleDataIndex["DateTimeFormat"]=12]="DateTimeFormat";LocaleDataIndex[LocaleDataIndex["NumberSymbols"]=13]="NumberSymbols";LocaleDataIndex[LocaleDataIndex["NumberFormats"]=14]="NumberFormats";LocaleDataIndex[LocaleDataIndex["CurrencyCode"]=15]="CurrencyCode";LocaleDataIndex[LocaleDataIndex["CurrencySymbol"]=16]="CurrencySymbol";LocaleDataIndex[LocaleDataIndex["CurrencyName"]=17]="CurrencyName";LocaleDataIndex[LocaleDataIndex["Currencies"]=18]="Currencies";LocaleDataIndex[LocaleDataIndex["Directionality"]=19]="Directionality";LocaleDataIndex[LocaleDataIndex["PluralCase"]=20]="PluralCase";LocaleDataIndex[LocaleDataIndex["ExtraData"]=21]="ExtraData";})(exports.ɵLocaleDataIndex||(exports.ɵLocaleDataIndex={}));/**
     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.
     */function normalizeLocale(locale){return locale.toLowerCase().replace(/_/g,'-');}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var pluralMapping=['zero','one','two','few','many'];/**
     * Returns the plural case based on the locale
     */function getPluralCase(value,locale){var plural=getLocalePluralCase(locale)(parseInt(value,10));var result=pluralMapping[plural];return result!==undefined?result:'other';}/**
     * The locale id that the application is using by default (for translations and ICU expressions).
     */var DEFAULT_LOCALE_ID='en-US';/**
     * USD currency code that the application uses by default for CurrencyPipe when no
     * DEFAULT_CURRENCY_CODE is provided.
     */var USD_CURRENCY_CODE='USD';var MARKER="\uFFFD";var ICU_BLOCK_REGEXP=/^\s*(�\d+:?\d*�)\s*,\s*(select|plural)\s*,/;var SUBTEMPLATE_REGEXP=/�\/?\*(\d+:\d+)�/gi;var PH_REGEXP=/�(\/?[#*!]\d+):?\d*�/gi;var BINDING_REGEXP=/�(\d+):?\d*�/gi;var ICU_REGEXP=/({\s*�\d+:?\d*�\s*,\s*\S{6}\s*,[\s\S]*})/gi;// i18nPostprocess consts
var ROOT_TEMPLATE_ID=0;var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP=/\[(�.+?�?)\]/;var PP_PLACEHOLDERS_REGEXP=/\[(�.+?�?)\]|(�\/?\*\d+:\d+�)/g;var PP_ICU_VARS_REGEXP=/({\s*)(VAR_(PLURAL|SELECT)(_\d+)?)(\s*,)/g;var PP_ICU_PLACEHOLDERS_REGEXP=/{([A-Z0-9_]+)}/g;var PP_ICUS_REGEXP=/�I18N_EXP_(ICU(_\d+)?)�/g;var PP_CLOSE_TEMPLATE_REGEXP=/\/\*/;var PP_TEMPLATE_ID_REGEXP=/\d+\:(\d+)/;/**
     * Breaks pattern into strings and top level {...} blocks.
     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into
     * keys and cases.
     * Original code from closure library, modified for Angular.
     *
     * @param pattern (sub)Pattern to be broken.
     *
     */function extractParts(pattern){if(!pattern){return[];}var prevPos=0;var braceStack=[];var results=[];var braces=/[{}]/g;// lastIndex doesn't get set to 0 so we have to.
braces.lastIndex=0;var match;while(match=braces.exec(pattern)){var pos=match.index;if(match[0]=='}'){braceStack.pop();if(braceStack.length==0){// End of the block.
var block=pattern.substring(prevPos,pos);if(ICU_BLOCK_REGEXP.test(block)){results.push(parseICUBlock(block));}else{results.push(block);}prevPos=pos+1;}}else{if(braceStack.length==0){var substring_1=pattern.substring(prevPos,pos);results.push(substring_1);prevPos=pos+1;}braceStack.push('{');}}var substring=pattern.substring(prevPos);results.push(substring);return results;}/**
     * Parses text containing an ICU expression and produces a JSON object for it.
     * Original code from closure library, modified for Angular.
     *
     * @param pattern Text containing an ICU expression that needs to be parsed.
     *
     */function parseICUBlock(pattern){var cases=[];var values=[];var icuType=1/* plural */;var mainBinding=0;pattern=pattern.replace(ICU_BLOCK_REGEXP,function(str,binding,type){if(type==='select'){icuType=0/* select */;}else{icuType=1/* plural */;}mainBinding=parseInt(binding.substr(1),10);return'';});var parts=extractParts(pattern);// Looking for (key block)+ sequence. One of the keys has to be "other".
for(var pos=0;pos<parts.length;){var key=parts[pos++].trim();if(icuType===1/* plural */){// Key can be "=x", we just want "x"
key=key.replace(/\s*(?:=)?(\w+)\s*/,'$1');}if(key.length){cases.push(key);}var blocks=extractParts(parts[pos++]);if(cases.length>values.length){values.push(blocks);}}// TODO(ocombe): support ICU expressions in attributes, see #21615
return{type:icuType,mainBinding:mainBinding,cases:cases,values:values};}/**
     * Removes everything inside the sub-templates of a message.
     */function removeInnerTemplateTranslation(message){var match;var res='';var index=0;var inTemplate=false;var tagMatched;while((match=SUBTEMPLATE_REGEXP.exec(message))!==null){if(!inTemplate){res+=message.substring(index,match.index+match[0].length);tagMatched=match[1];inTemplate=true;}else{if(match[0]===MARKER+"/*"+tagMatched+MARKER){index=match.index;inTemplate=false;}}}ngDevMode&&assertEqual(inTemplate,false,"Tag mismatch: unable to find the end of the sub-template in the translation \""+message+"\"");res+=message.substr(index);return res;}/**
     * Extracts a part of a message and removes the rest.
     *
     * This method is used for extracting a part of the message associated with a template. A translated
     * message can span multiple templates.
     *
     * Example:
     * ```
     * <div i18n>Translate <span *ngIf>me</span>!</div>
     * ```
     *
     * @param message The message to crop
     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the
     * external template and removes all sub-templates.
     */function getTranslationForTemplate(message,subTemplateIndex){if(isRootTemplateMessage(subTemplateIndex)){// We want the root template message, ignore all sub-templates
return removeInnerTemplateTranslation(message);}else{// We want a specific sub-template
var start=message.indexOf(":"+subTemplateIndex+MARKER)+2+subTemplateIndex.toString().length;var end=message.search(new RegExp(MARKER+"\\/\\*\\d+:"+subTemplateIndex+MARKER));return removeInnerTemplateTranslation(message.substring(start,end));}}/**
     * Generate the OpCodes to update the bindings of a string.
     *
     * @param str The string containing the bindings.
     * @param destinationNode Index of the destination node which will receive the binding.
     * @param attrName Name of the attribute, if the string belongs to an attribute.
     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.
     */function generateBindingUpdateOpCodes(str,destinationNode,attrName,sanitizeFn){if(sanitizeFn===void 0){sanitizeFn=null;}var updateOpCodes=[null,null];// Alloc space for mask and size
var textParts=str.split(BINDING_REGEXP);var mask=0;for(var j=0;j<textParts.length;j++){var textValue=textParts[j];if(j&1){// Odd indexes are bindings
var bindingIndex=parseInt(textValue,10);updateOpCodes.push(-1-bindingIndex);mask=mask|toMaskBit(bindingIndex);}else if(textValue!==''){// Even indexes are text
updateOpCodes.push(textValue);}}updateOpCodes.push(destinationNode<<2/* SHIFT_REF */|(attrName?1/* Attr */:0/* Text */));if(attrName){updateOpCodes.push(attrName,sanitizeFn);}updateOpCodes[0]=mask;updateOpCodes[1]=updateOpCodes.length-2;return updateOpCodes;}function getBindingMask(icuExpression,mask){if(mask===void 0){mask=0;}mask=mask|toMaskBit(icuExpression.mainBinding);var match;for(var i=0;i<icuExpression.values.length;i++){var valueArr=icuExpression.values[i];for(var j=0;j<valueArr.length;j++){var value=valueArr[j];if(typeof value==='string'){while(match=BINDING_REGEXP.exec(value)){mask=mask|toMaskBit(parseInt(match[1],10));}}else{mask=getBindingMask(value,mask);}}}return mask;}var i18nIndexStack=[];var i18nIndexStackPointer=-1;/**
     * Convert binding index to mask bit.
     *
     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make
     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have
     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is
     * that we will execute binding code more often than necessary. (penalty of performance)
     */function toMaskBit(bindingIndex){return 1<<Math.min(bindingIndex,31);}var parentIndexStack=[];/**
     * Marks a block of text as translatable.
     *
     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.
     * The translation `message` is the value which is locale specific. The translation string may
     * contain placeholders which associate inner elements and sub-templates within the translation.
     *
     * The translation `message` placeholders are:
     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be
     *   interpolated into. The placeholder `index` points to the expression binding index. An optional
     *   `block` that matches the sub-template in which it was declared.
     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning
     *   and end of DOM element that were embedded in the original translation block. The placeholder
     *   `index` points to the element index in the template instructions set. An optional `block` that
     *   matches the sub-template in which it was declared.
     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the
     *   beginning and end of <ng-content> that was embedded in the original translation block.
     *   The placeholder `index` points to the element index in the template instructions set.
     *   An optional `block` that matches the sub-template in which it was declared.
     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be
     *   split up and translated separately in each angular template function. The `index` points to the
     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.
     *
     * @param index A unique index of the translation in the static block.
     * @param message The translation message.
     * @param subTemplateIndex Optional sub-template index in the `message`.
     *
     * @codeGenApi
     */function ɵɵi18nStart(index,message,subTemplateIndex){var tView=getTView();ngDevMode&&assertDefined(tView,"tView should be defined");i18nIndexStack[++i18nIndexStackPointer]=index;// We need to delay projections until `i18nEnd`
setDelayProjection(true);if(tView.firstCreatePass&&tView.data[index+HEADER_OFFSET]===null){i18nStartFirstPass(getLView(),tView,index,message,subTemplateIndex);}}// Count for the number of vars that will be allocated for each i18n block.
// It is global because this is used in multiple functions that include loops and recursive calls.
// This is reset to 0 when `i18nStartFirstPass` is called.
var i18nVarsCount;function allocNodeIndex(startIndex){return startIndex+i18nVarsCount++;}/**
     * See `i18nStart` above.
     */function i18nStartFirstPass(lView,tView,index,message,subTemplateIndex){var startIndex=tView.blueprint.length-HEADER_OFFSET;i18nVarsCount=0;var previousOrParentTNode=getPreviousOrParentTNode();var parentTNode=getIsParent()?previousOrParentTNode:previousOrParentTNode&&previousOrParentTNode.parent;var parentIndex=parentTNode&&parentTNode!==lView[T_HOST]?parentTNode.index-HEADER_OFFSET:index;var parentIndexPointer=0;parentIndexStack[parentIndexPointer]=parentIndex;var createOpCodes=[];// If the previous node wasn't the direct parent then we have a translation without top level
// element and we need to keep a reference of the previous element if there is one. We should also
// keep track whether an element was a parent node or not, so that the logic that consumes
// the generated `I18nMutateOpCode`s can leverage this information to properly set TNode state
// (whether it's a parent or sibling).
if(index>0&&previousOrParentTNode!==parentTNode){var previousTNodeIndex=previousOrParentTNode.index-HEADER_OFFSET;// If current TNode is a sibling node, encode it using a negative index. This information is
// required when the `Select` action is processed (see the `readCreateOpCodes` function).
if(!getIsParent()){previousTNodeIndex=~previousTNodeIndex;}// Create an OpCode to select the previous TNode
createOpCodes.push(previousTNodeIndex<<3/* SHIFT_REF */|0/* Select */);}var updateOpCodes=[];var icuExpressions=[];if(message===''&&isRootTemplateMessage(subTemplateIndex)){// If top level translation is an empty string, do not invoke additional processing
// and just create op codes for empty text node instead.
createOpCodes.push(message,allocNodeIndex(startIndex),parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);}else{var templateTranslation=getTranslationForTemplate(message,subTemplateIndex);var msgParts=replaceNgsp(templateTranslation).split(PH_REGEXP);for(var i=0;i<msgParts.length;i++){var value=msgParts[i];if(i&1){// Odd indexes are placeholders (elements and sub-templates)
if(value.charAt(0)==='/'){// It is a closing tag
if(value.charAt(1)==="#"/* ELEMENT */){var phIndex=parseInt(value.substr(2),10);parentIndex=parentIndexStack[--parentIndexPointer];createOpCodes.push(phIndex<<3/* SHIFT_REF */|5/* ElementEnd */);}}else{var phIndex=parseInt(value.substr(1),10);var isElement=value.charAt(0)==="#"/* ELEMENT */;// The value represents a placeholder that we move to the designated index.
// Note: positive indicies indicate that a TNode with a given index should also be marked
// as parent while executing `Select` instruction.
createOpCodes.push((isElement?phIndex:~phIndex)<<3/* SHIFT_REF */|0/* Select */,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);if(isElement){parentIndexStack[++parentIndexPointer]=parentIndex=phIndex;}}}else{// Even indexes are text (including bindings & ICU expressions)
var parts=extractParts(value);for(var j=0;j<parts.length;j++){if(j&1){// Odd indexes are ICU expressions
var icuExpression=parts[j];// Verify that ICU expression has the right shape. Translations might contain invalid
// constructions (while original messages were correct), so ICU parsing at runtime may
// not succeed (thus `icuExpression` remains a string).
if(_typeof(icuExpression)!=='object'){throw new Error("Unable to parse ICU expression in \""+templateTranslation+"\" message.");}// Create the comment node that will anchor the ICU expression
var icuNodeIndex=allocNodeIndex(startIndex);createOpCodes.push(COMMENT_MARKER,ngDevMode?"ICU "+icuNodeIndex:'',icuNodeIndex,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);// Update codes for the ICU expression
var mask=getBindingMask(icuExpression);icuStart(icuExpressions,icuExpression,icuNodeIndex,icuNodeIndex);// Since this is recursive, the last TIcu that was pushed is the one we want
var tIcuIndex=icuExpressions.length-1;updateOpCodes.push(toMaskBit(icuExpression.mainBinding),// mask of the main binding
3,// skip 3 opCodes if not changed
-1-icuExpression.mainBinding,icuNodeIndex<<2/* SHIFT_REF */|2/* IcuSwitch */,tIcuIndex,mask,// mask of all the bindings of this ICU expression
2,// skip 2 opCodes if not changed
icuNodeIndex<<2/* SHIFT_REF */|3/* IcuUpdate */,tIcuIndex);}else if(parts[j]!==''){var text=parts[j];// Even indexes are text (including bindings)
var hasBinding=text.match(BINDING_REGEXP);// Create text nodes
var textNodeIndex=allocNodeIndex(startIndex);createOpCodes.push(// If there is a binding, the value will be set during update
hasBinding?'':text,textNodeIndex,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);if(hasBinding){addAllToArray(generateBindingUpdateOpCodes(text,textNodeIndex),updateOpCodes);}}}}}}if(i18nVarsCount>0){allocExpando(tView,lView,i18nVarsCount);}ngDevMode&&attachI18nOpCodesDebug(createOpCodes,updateOpCodes,icuExpressions.length?icuExpressions:null,lView);// NOTE: local var needed to properly assert the type of `TI18n`.
var tI18n={vars:i18nVarsCount,create:createOpCodes,update:updateOpCodes,icus:icuExpressions.length?icuExpressions:null};tView.data[index+HEADER_OFFSET]=tI18n;}function appendI18nNode(tView,tNode,parentTNode,previousTNode,lView){ngDevMode&&ngDevMode.rendererMoveNode++;var nextNode=tNode.next;if(!previousTNode){previousTNode=parentTNode;}// Re-organize node tree to put this node in the correct position.
if(previousTNode===parentTNode&&tNode!==parentTNode.child){tNode.next=parentTNode.child;parentTNode.child=tNode;}else if(previousTNode!==parentTNode&&tNode!==previousTNode.next){tNode.next=previousTNode.next;previousTNode.next=tNode;}else{tNode.next=null;}if(parentTNode!==lView[T_HOST]){tNode.parent=parentTNode;}// If tNode was moved around, we might need to fix a broken link.
var cursor=tNode.next;while(cursor){if(cursor.next===tNode){cursor.next=nextNode;}cursor=cursor.next;}// If the placeholder to append is a projection, we need to move the projected nodes instead
if(tNode.type===1/* Projection */){applyProjection(tView,lView,tNode);return tNode;}appendChild(tView,lView,getNativeByTNode(tNode,lView),tNode);var slotValue=lView[tNode.index];if(tNode.type!==0/* Container */&&isLContainer(slotValue)){// Nodes that inject ViewContainerRef also have a comment node that should be moved
appendChild(tView,lView,slotValue[NATIVE],tNode);}return tNode;}function isRootTemplateMessage(subTemplateIndex){return subTemplateIndex===undefined;}/**
     * Handles message string post-processing for internationalization.
     *
     * Handles message string post-processing by transforming it from intermediate
     * format (that might contain some markers that we need to replace) to the final
     * form, consumable by i18nStart instruction. Post processing steps include:
     *
     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])
     * 2. Replace all ICU vars (like "VAR_PLURAL")
     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}
     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)
     *    in case multiple ICUs have the same placeholder name
     *
     * @param message Raw translation string for post processing
     * @param replacements Set of replacements that should be applied
     *
     * @returns Transformed string that can be consumed by i18nStart instruction
     *
     * @codeGenApi
     */function ɵɵi18nPostprocess(message,replacements){if(replacements===void 0){replacements={};}/**
         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]
         *
         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically
         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root
         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index
         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in
         * front of �#6�. The post processing step restores the right order by keeping track of the
         * template id stack and looks for placeholders that belong to the currently active template.
         */var result=message;if(PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)){var matches_1={};var templateIdsStack_1=[ROOT_TEMPLATE_ID];result=result.replace(PP_PLACEHOLDERS_REGEXP,function(m,phs,tmpl){var content=phs||tmpl;var placeholders=matches_1[content]||[];if(!placeholders.length){content.split('|').forEach(function(placeholder){var match=placeholder.match(PP_TEMPLATE_ID_REGEXP);var templateId=match?parseInt(match[1],10):ROOT_TEMPLATE_ID;var isCloseTemplateTag=PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);placeholders.push([templateId,isCloseTemplateTag,placeholder]);});matches_1[content]=placeholders;}if(!placeholders.length){throw new Error("i18n postprocess: unmatched placeholder - "+content);}var currentTemplateId=templateIdsStack_1[templateIdsStack_1.length-1];var idx=0;// find placeholder index that matches current template id
for(var i=0;i<placeholders.length;i++){if(placeholders[i][0]===currentTemplateId){idx=i;break;}}// update template id stack based on the current tag extracted
var _a=__read(placeholders[idx],3),templateId=_a[0],isCloseTemplateTag=_a[1],placeholder=_a[2];if(isCloseTemplateTag){templateIdsStack_1.pop();}else if(currentTemplateId!==templateId){templateIdsStack_1.push(templateId);}// remove processed tag from the list
placeholders.splice(idx,1);return placeholder;});}// return current result if no replacements specified
if(!Object.keys(replacements).length){return result;}/**
         * Step 2: replace all ICU vars (like "VAR_PLURAL")
         */result=result.replace(PP_ICU_VARS_REGEXP,function(match,start,key,_type,_idx,end){return replacements.hasOwnProperty(key)?""+start+replacements[key]+end:match;});/**
         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}
         */result=result.replace(PP_ICU_PLACEHOLDERS_REGEXP,function(match,key){return replacements.hasOwnProperty(key)?replacements[key]:match;});/**
         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case
         * multiple ICUs have the same placeholder name
         */result=result.replace(PP_ICUS_REGEXP,function(match,key){if(replacements.hasOwnProperty(key)){var list=replacements[key];if(!list.length){throw new Error("i18n postprocess: unmatched ICU - "+match+" with key: "+key);}return list.shift();}return match;});return result;}/**
     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes
     * into the render tree, moves the placeholder nodes and removes the deleted nodes.
     *
     * @codeGenApi
     */function ɵɵi18nEnd(){var lView=getLView();var tView=getTView();ngDevMode&&assertDefined(tView,"tView should be defined");i18nEndFirstPass(tView,lView);// Stop delaying projections
setDelayProjection(false);}/**
     * See `i18nEnd` above.
     */function i18nEndFirstPass(tView,lView){ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,'i18nEnd should be called before any binding');var rootIndex=i18nIndexStack[i18nIndexStackPointer--];var tI18n=tView.data[rootIndex+HEADER_OFFSET];ngDevMode&&assertDefined(tI18n,"You should call i18nStart before i18nEnd");// Find the last node that was added before `i18nEnd`
var lastCreatedNode=getPreviousOrParentTNode();// Read the instructions to insert/move/remove DOM elements
var visitedNodes=readCreateOpCodes(rootIndex,tI18n.create,tView,lView);// Remove deleted nodes
var index=rootIndex+1;while(index<=lastCreatedNode.index-HEADER_OFFSET){if(visitedNodes.indexOf(index)===-1){removeNode(tView,lView,index,/* markAsDetached */true);}// Check if an element has any local refs and skip them
var tNode=getTNode(tView,index);if(tNode&&(tNode.type===0/* Container */||tNode.type===3/* Element */||tNode.type===4/* ElementContainer */)&&tNode.localNames!==null){// Divide by 2 to get the number of local refs,
// since they are stored as an array that also includes directive indexes,
// i.e. ["localRef", directiveIndex, ...]
index+=tNode.localNames.length>>1;}index++;}}/**
     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.
     */function createDynamicNodeAtIndex(tView,lView,index,type,_native15,name){var previousOrParentTNode=getPreviousOrParentTNode();ngDevMode&&assertDataInRange(lView,index+HEADER_OFFSET);lView[index+HEADER_OFFSET]=_native15;var tNode=getOrCreateTNode(tView,lView[T_HOST],index,type,name,null);// We are creating a dynamic node, the previous tNode might not be pointing at this node.
// We will link ourselves into the tree later with `appendI18nNode`.
if(previousOrParentTNode&&previousOrParentTNode.next===tNode){previousOrParentTNode.next=null;}return tNode;}function readCreateOpCodes(index,createOpCodes,tView,lView){var renderer=lView[RENDERER];var currentTNode=null;var previousTNode=null;var visitedNodes=[];for(var i=0;i<createOpCodes.length;i++){var opCode=createOpCodes[i];if(typeof opCode=='string'){var textRNode=createTextNode(opCode,renderer);var textNodeIndex=createOpCodes[++i];ngDevMode&&ngDevMode.rendererCreateTextNode++;previousTNode=currentTNode;currentTNode=createDynamicNodeAtIndex(tView,lView,textNodeIndex,3/* Element */,textRNode,null);visitedNodes.push(textNodeIndex);setIsNotParent();}else if(typeof opCode=='number'){switch(opCode&7/* MASK_OPCODE */){case 1/* AppendChild */:var destinationNodeIndex=opCode>>>17/* SHIFT_PARENT */;var destinationTNode=void 0;if(destinationNodeIndex===index){// If the destination node is `i18nStart`, we don't have a
// top-level node and we should use the host node instead
destinationTNode=lView[T_HOST];}else{destinationTNode=getTNode(tView,destinationNodeIndex);}ngDevMode&&assertDefined(currentTNode,"You need to create or select a node before you can insert it into the DOM");previousTNode=appendI18nNode(tView,currentTNode,destinationTNode,previousTNode,lView);break;case 0/* Select */:// Negative indicies indicate that a given TNode is a sibling node, not a parent node
// (see `i18nStartFirstPass` for additional information).
var isParent=opCode>=0;var nodeIndex=(isParent?opCode:~opCode)>>>3/* SHIFT_REF */;visitedNodes.push(nodeIndex);previousTNode=currentTNode;currentTNode=getTNode(tView,nodeIndex);if(currentTNode){setPreviousOrParentTNode(currentTNode,isParent);}break;case 5/* ElementEnd */:var elementIndex=opCode>>>3/* SHIFT_REF */;previousTNode=currentTNode=getTNode(tView,elementIndex);setPreviousOrParentTNode(currentTNode,false);break;case 4/* Attr */:var elementNodeIndex=opCode>>>3/* SHIFT_REF */;var attrName=createOpCodes[++i];var attrValue=createOpCodes[++i];// This code is used for ICU expressions only, since we don't support
// directives/components in ICUs, we don't need to worry about inputs here
elementAttributeInternal(getTNode(tView,elementNodeIndex),lView,attrName,attrValue,null,null);break;default:throw new Error("Unable to determine the type of mutate operation for \""+opCode+"\"");}}else{switch(opCode){case COMMENT_MARKER:var commentValue=createOpCodes[++i];var commentNodeIndex=createOpCodes[++i];ngDevMode&&assertEqual(_typeof(commentValue),'string',"Expected \""+commentValue+"\" to be a comment node value");var commentRNode=renderer.createComment(commentValue);ngDevMode&&ngDevMode.rendererCreateComment++;previousTNode=currentTNode;currentTNode=createDynamicNodeAtIndex(tView,lView,commentNodeIndex,5/* IcuContainer */,commentRNode,null);visitedNodes.push(commentNodeIndex);attachPatchData(commentRNode,lView);currentTNode.activeCaseIndex=null;// We will add the case nodes later, during the update phase
setIsNotParent();break;case ELEMENT_MARKER:var tagNameValue=createOpCodes[++i];var elementNodeIndex=createOpCodes[++i];ngDevMode&&assertEqual(_typeof(tagNameValue),'string',"Expected \""+tagNameValue+"\" to be an element node tag name");var elementRNode=renderer.createElement(tagNameValue);ngDevMode&&ngDevMode.rendererCreateElement++;previousTNode=currentTNode;currentTNode=createDynamicNodeAtIndex(tView,lView,elementNodeIndex,3/* Element */,elementRNode,tagNameValue);visitedNodes.push(elementNodeIndex);break;default:throw new Error("Unable to determine the type of mutate operation for \""+opCode+"\"");}}}setIsNotParent();return visitedNodes;}function readUpdateOpCodes(updateOpCodes,icus,bindingsStartIndex,changeMask,tView,lView,bypassCheckBit){if(bypassCheckBit===void 0){bypassCheckBit=false;}var caseCreated=false;for(var i=0;i<updateOpCodes.length;i++){// bit code to check if we should apply the next update
var checkBit=updateOpCodes[i];// Number of opCodes to skip until next set of update codes
var skipCodes=updateOpCodes[++i];if(bypassCheckBit||checkBit&changeMask){// The value has been updated since last checked
var value='';for(var j=i+1;j<=i+skipCodes;j++){var opCode=updateOpCodes[j];if(typeof opCode=='string'){value+=opCode;}else if(typeof opCode=='number'){if(opCode<0){// It's a binding index whose value is negative
value+=renderStringify(lView[bindingsStartIndex-opCode]);}else{var nodeIndex=opCode>>>2/* SHIFT_REF */;var tIcuIndex=void 0;var tIcu=void 0;var icuTNode=void 0;switch(opCode&3/* MASK_OPCODE */){case 1/* Attr */:var propName=updateOpCodes[++j];var sanitizeFn=updateOpCodes[++j];elementPropertyInternal(tView,getTNode(tView,nodeIndex),lView,propName,value,lView[RENDERER],sanitizeFn,false);break;case 0/* Text */:textBindingInternal(lView,nodeIndex,value);break;case 2/* IcuSwitch */:tIcuIndex=updateOpCodes[++j];tIcu=icus[tIcuIndex];icuTNode=getTNode(tView,nodeIndex);// If there is an active case, delete the old nodes
if(icuTNode.activeCaseIndex!==null){var removeCodes=tIcu.remove[icuTNode.activeCaseIndex];for(var k=0;k<removeCodes.length;k++){var removeOpCode=removeCodes[k];switch(removeOpCode&7/* MASK_OPCODE */){case 3/* Remove */:var nodeIndex_1=removeOpCode>>>3/* SHIFT_REF */;// Remove DOM element, but do *not* mark TNode as detached, since we are
// just switching ICU cases (while keeping the same TNode), so a DOM element
// representing a new ICU case will be re-created.
removeNode(tView,lView,nodeIndex_1,/* markAsDetached */false);break;case 6/* RemoveNestedIcu */:var nestedIcuNodeIndex=removeCodes[k+1]>>>3/* SHIFT_REF */;var nestedIcuTNode=getTNode(tView,nestedIcuNodeIndex);var activeIndex=nestedIcuTNode.activeCaseIndex;if(activeIndex!==null){var nestedIcuTIndex=removeOpCode>>>3/* SHIFT_REF */;var nestedTIcu=icus[nestedIcuTIndex];addAllToArray(nestedTIcu.remove[activeIndex],removeCodes);}break;}}}// Update the active caseIndex
var caseIndex=getCaseIndex(tIcu,value);icuTNode.activeCaseIndex=caseIndex!==-1?caseIndex:null;if(caseIndex>-1){// Add the nodes for the new case
readCreateOpCodes(-1,tIcu.create[caseIndex],tView,lView);caseCreated=true;}break;case 3/* IcuUpdate */:tIcuIndex=updateOpCodes[++j];tIcu=icus[tIcuIndex];icuTNode=getTNode(tView,nodeIndex);if(icuTNode.activeCaseIndex!==null){readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex],icus,bindingsStartIndex,changeMask,tView,lView,caseCreated);}break;}}}}}i+=skipCodes;}}function removeNode(tView,lView,index,markAsDetached){var removedPhTNode=getTNode(tView,index);var removedPhRNode=getNativeByIndex(index,lView);if(removedPhRNode){nativeRemoveNode(lView[RENDERER],removedPhRNode);}var slotValue=load(lView,index);if(isLContainer(slotValue)){var lContainer=slotValue;if(removedPhTNode.type!==0/* Container */){nativeRemoveNode(lView[RENDERER],lContainer[NATIVE]);}}if(markAsDetached){// Define this node as detached to avoid projecting it later
removedPhTNode.flags|=64/* isDetached */;}ngDevMode&&ngDevMode.rendererRemoveNode++;}/**
     *
     * Use this instruction to create a translation block that doesn't contain any placeholder.
     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.
     *
     * The translation `message` is the value which is locale specific. The translation string may
     * contain placeholders which associate inner elements and sub-templates within the translation.
     *
     * The translation `message` placeholders are:
     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be
     *   interpolated into. The placeholder `index` points to the expression binding index. An optional
     *   `block` that matches the sub-template in which it was declared.
     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning
     *   and end of DOM element that were embedded in the original translation block. The placeholder
     *   `index` points to the element index in the template instructions set. An optional `block` that
     *   matches the sub-template in which it was declared.
     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be
     *   split up and translated separately in each angular template function. The `index` points to the
     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.
     *
     * @param index A unique index of the translation in the static block.
     * @param message The translation message.
     * @param subTemplateIndex Optional sub-template index in the `message`.
     *
     * @codeGenApi
     */function ɵɵi18n(index,message,subTemplateIndex){ɵɵi18nStart(index,message,subTemplateIndex);ɵɵi18nEnd();}/**
     * Marks a list of attributes as translatable.
     *
     * @param index A unique index in the static block
     * @param values
     *
     * @codeGenApi
     */function ɵɵi18nAttributes(index,values){var lView=getLView();var tView=getTView();ngDevMode&&assertDefined(tView,"tView should be defined");i18nAttributesFirstPass(lView,tView,index,values);}/**
     * See `i18nAttributes` above.
     */function i18nAttributesFirstPass(lView,tView,index,values){var previousElement=getPreviousOrParentTNode();var previousElementIndex=previousElement.index-HEADER_OFFSET;var updateOpCodes=[];for(var i=0;i<values.length;i+=2){var attrName=values[i];var message=values[i+1];var parts=message.split(ICU_REGEXP);for(var j=0;j<parts.length;j++){var value=parts[j];if(j&1){// Odd indexes are ICU expressions
// TODO(ocombe): support ICU expressions in attributes
throw new Error('ICU expressions are not yet supported in attributes');}else if(value!==''){// Even indexes are text (including bindings)
var hasBinding=!!value.match(BINDING_REGEXP);if(hasBinding){if(tView.firstCreatePass&&tView.data[index+HEADER_OFFSET]===null){addAllToArray(generateBindingUpdateOpCodes(value,previousElementIndex,attrName),updateOpCodes);}}else{var tNode=getTNode(tView,previousElementIndex);// Set attributes for Elements only, for other types (like ElementContainer),
// only set inputs below
if(tNode.type===3/* Element */){elementAttributeInternal(tNode,lView,attrName,value,null,null);}// Check if that attribute is a directive input
var dataValue=tNode.inputs!==null&&tNode.inputs[attrName];if(dataValue){setInputsForProperty(tView,lView,dataValue,attrName,value);if(ngDevMode){var element=getNativeByIndex(previousElementIndex,lView);setNgReflectProperties(lView,element,tNode.type,dataValue,value);}}}}}}if(tView.firstCreatePass&&tView.data[index+HEADER_OFFSET]===null){tView.data[index+HEADER_OFFSET]=updateOpCodes;}}var changeMask=0;var shiftsCounter=0;/**
     * Stores the values of the bindings during each update cycle in order to determine if we need to
     * update the translated nodes.
     *
     * @param value The binding's value
     * @returns This function returns itself so that it may be chained
     * (e.g. `i18nExp(ctx.name)(ctx.title)`)
     *
     * @codeGenApi
     */function ɵɵi18nExp(value){var lView=getLView();if(bindingUpdated(lView,nextBindingIndex(),value)){changeMask=changeMask|1<<shiftsCounter;}shiftsCounter++;return ɵɵi18nExp;}/**
     * Updates a translation block or an i18n attribute when the bindings have changed.
     *
     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}
     * (i18n attribute) on which it should update the content.
     *
     * @codeGenApi
     */function ɵɵi18nApply(index){if(shiftsCounter){var tView=getTView();ngDevMode&&assertDefined(tView,"tView should be defined");var tI18n=tView.data[index+HEADER_OFFSET];var updateOpCodes=void 0;var icus=null;if(Array.isArray(tI18n)){updateOpCodes=tI18n;}else{updateOpCodes=tI18n.update;icus=tI18n.icus;}var bindingsStartIndex=getBindingIndex()-shiftsCounter-1;var lView=getLView();readUpdateOpCodes(updateOpCodes,icus,bindingsStartIndex,changeMask,tView,lView);// Reset changeMask & maskBit to default for the next update cycle
changeMask=0;shiftsCounter=0;}}/**
     * Returns the index of the current case of an ICU expression depending on the main binding value
     *
     * @param icuExpression
     * @param bindingValue The value of the main binding used by this ICU expression
     */function getCaseIndex(icuExpression,bindingValue){var index=icuExpression.cases.indexOf(bindingValue);if(index===-1){switch(icuExpression.type){case 1/* plural */:{var resolvedCase=getPluralCase(bindingValue,getLocaleId());index=icuExpression.cases.indexOf(resolvedCase);if(index===-1&&resolvedCase!=='other'){index=icuExpression.cases.indexOf('other');}break;}case 0/* select */:{index=icuExpression.cases.indexOf('other');break;}}}return index;}/**
     * Generate the OpCodes for ICU expressions.
     *
     * @param tIcus
     * @param icuExpression
     * @param startIndex
     * @param expandoStartIndex
     */function icuStart(tIcus,icuExpression,startIndex,expandoStartIndex){var createCodes=[];var removeCodes=[];var updateCodes=[];var vars=[];var childIcus=[];for(var i=0;i<icuExpression.values.length;i++){// Each value is an array of strings & other ICU expressions
var valueArr=icuExpression.values[i];var nestedIcus=[];for(var j=0;j<valueArr.length;j++){var value=valueArr[j];if(typeof value!=='string'){// It is an nested ICU expression
var icuIndex=nestedIcus.push(value)-1;// Replace nested ICU expression by a comment node
valueArr[j]="<!--\uFFFD"+icuIndex+"\uFFFD-->";}}var icuCase=parseIcuCase(valueArr.join(''),startIndex,nestedIcus,tIcus,expandoStartIndex);createCodes.push(icuCase.create);removeCodes.push(icuCase.remove);updateCodes.push(icuCase.update);vars.push(icuCase.vars);childIcus.push(icuCase.childIcus);}var tIcu={type:icuExpression.type,vars:vars,childIcus:childIcus,cases:icuExpression.cases,create:createCodes,remove:removeCodes,update:updateCodes};tIcus.push(tIcu);// Adding the maximum possible of vars needed (based on the cases with the most vars)
i18nVarsCount+=Math.max.apply(Math,__spread(vars));}/**
     * Transforms a string template into an HTML template and a list of instructions used to update
     * attributes or nodes that contain bindings.
     *
     * @param unsafeHtml The string to parse
     * @param parentIndex
     * @param nestedIcus
     * @param tIcus
     * @param expandoStartIndex
     */function parseIcuCase(unsafeHtml,parentIndex,nestedIcus,tIcus,expandoStartIndex){var inertBodyHelper=new InertBodyHelper(getDocument());var inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);if(!inertBodyElement){throw new Error('Unable to generate inert body element');}var wrapper=getTemplateContent(inertBodyElement)||inertBodyElement;var opCodes={vars:0,childIcus:[],create:[],remove:[],update:[]};parseNodes(wrapper.firstChild,opCodes,parentIndex,nestedIcus,tIcus,expandoStartIndex);return opCodes;}var NESTED_ICU=/�(\d+)�/;/**
     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.
     *
     * @param currentNode The first node to parse
     * @param icuCase The data for the ICU expression case that contains those nodes
     * @param parentIndex Index of the current node's parent
     * @param nestedIcus Data for the nested ICU expressions that this case contains
     * @param tIcus Data for all ICU expressions of the current message
     * @param expandoStartIndex Expando start index for the current ICU expression
     */function parseNodes(currentNode,icuCase,parentIndex,nestedIcus,tIcus,expandoStartIndex){if(currentNode){var nestedIcusToCreate=[];while(currentNode){var nextNode=currentNode.nextSibling;var newIndex=expandoStartIndex+ ++icuCase.vars;switch(currentNode.nodeType){case Node.ELEMENT_NODE:var element=currentNode;var tagName=element.tagName.toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){// This isn't a valid element, we won't create an element for it
icuCase.vars--;}else{icuCase.create.push(ELEMENT_MARKER,tagName,newIndex,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);var elAttrs=element.attributes;for(var i=0;i<elAttrs.length;i++){var attr=elAttrs.item(i);var lowerAttrName=attr.name.toLowerCase();var hasBinding_1=!!attr.value.match(BINDING_REGEXP);// we assume the input string is safe, unless it's using a binding
if(hasBinding_1){if(VALID_ATTRS.hasOwnProperty(lowerAttrName)){if(URI_ATTRS[lowerAttrName]){addAllToArray(generateBindingUpdateOpCodes(attr.value,newIndex,attr.name,_sanitizeUrl),icuCase.update);}else if(SRCSET_ATTRS[lowerAttrName]){addAllToArray(generateBindingUpdateOpCodes(attr.value,newIndex,attr.name,sanitizeSrcset),icuCase.update);}else{addAllToArray(generateBindingUpdateOpCodes(attr.value,newIndex,attr.name),icuCase.update);}}else{ngDevMode&&console.warn("WARNING: ignoring unsafe attribute value "+lowerAttrName+" on element "+tagName+" (see http://g.co/ng/security#xss)");}}else{icuCase.create.push(newIndex<<3/* SHIFT_REF */|4/* Attr */,attr.name,attr.value);}}// Parse the children of this node (if any)
parseNodes(currentNode.firstChild,icuCase,newIndex,nestedIcus,tIcus,expandoStartIndex);// Remove the parent node after the children
icuCase.remove.push(newIndex<<3/* SHIFT_REF */|3/* Remove */);}break;case Node.TEXT_NODE:var value=currentNode.textContent||'';var hasBinding=value.match(BINDING_REGEXP);icuCase.create.push(hasBinding?'':value,newIndex,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);icuCase.remove.push(newIndex<<3/* SHIFT_REF */|3/* Remove */);if(hasBinding){addAllToArray(generateBindingUpdateOpCodes(value,newIndex),icuCase.update);}break;case Node.COMMENT_NODE:// Check if the comment node is a placeholder for a nested ICU
var match=NESTED_ICU.exec(currentNode.textContent||'');if(match){var nestedIcuIndex=parseInt(match[1],10);var newLocal=ngDevMode?"nested ICU "+nestedIcuIndex:'';// Create the comment node that will anchor the ICU expression
icuCase.create.push(COMMENT_MARKER,newLocal,newIndex,parentIndex<<17/* SHIFT_PARENT */|1/* AppendChild */);var nestedIcu=nestedIcus[nestedIcuIndex];nestedIcusToCreate.push([nestedIcu,newIndex]);}else{// We do not handle any other type of comment
icuCase.vars--;}break;default:// We do not handle any other type of element
icuCase.vars--;}currentNode=nextNode;}for(var i=0;i<nestedIcusToCreate.length;i++){var nestedIcu=nestedIcusToCreate[i][0];var nestedIcuNodeIndex=nestedIcusToCreate[i][1];icuStart(tIcus,nestedIcu,nestedIcuNodeIndex,expandoStartIndex+icuCase.vars);// Since this is recursive, the last TIcu that was pushed is the one we want
var nestTIcuIndex=tIcus.length-1;icuCase.vars+=Math.max.apply(Math,__spread(tIcus[nestTIcuIndex].vars));icuCase.childIcus.push(nestTIcuIndex);var mask=getBindingMask(nestedIcu);icuCase.update.push(toMaskBit(nestedIcu.mainBinding),// mask of the main binding
3,// skip 3 opCodes if not changed
-1-nestedIcu.mainBinding,nestedIcuNodeIndex<<2/* SHIFT_REF */|2/* IcuSwitch */,nestTIcuIndex,mask,// mask of all the bindings of this ICU expression
2,// skip 2 opCodes if not changed
nestedIcuNodeIndex<<2/* SHIFT_REF */|3/* IcuUpdate */,nestTIcuIndex);icuCase.remove.push(nestTIcuIndex<<3/* SHIFT_REF */|6/* RemoveNestedIcu */,nestedIcuNodeIndex<<3/* SHIFT_REF */|3/* Remove */);}}}/**
     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:
     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32
     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character
     * and later on replaced by a space. We are re-implementing the same idea here, since translations
     * might contain this special character.
     */var NGSP_UNICODE_REGEXP=/\uE500/g;function replaceNgsp(value){return value.replace(NGSP_UNICODE_REGEXP,' ');}/**
     * The locale id that the application is currently using (for translations and ICU expressions).
     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
     * but is now defined as a global value.
     */var LOCALE_ID=DEFAULT_LOCALE_ID;/**
     * Sets the locale id that will be used for translations and ICU expressions.
     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
     * but is now defined as a global value.
     *
     * @param localeId
     */function setLocaleId(localeId){assertDefined(localeId,"Expected localeId to be defined");if(typeof localeId==='string'){LOCALE_ID=localeId.toLowerCase().replace(/_/g,'-');}}/**
     * Gets the locale id that will be used for translations and ICU expressions.
     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine
     * but is now defined as a global value.
     */function getLocaleId(){return LOCALE_ID;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Adds decorator, constructor, and property metadata to a given type via static metadata fields
     * on the type.
     *
     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.
     *
     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being
     * tree-shaken away during production builds.
     */function setClassMetadata(type,decorators,ctorParameters,propDecorators){return noSideEffects(function(){var _a;var clazz=type;// We determine whether a class has its own metadata by taking the metadata from the
// parent constructor and checking whether it's the same as the subclass metadata below.
// We can't use `hasOwnProperty` here because it doesn't work correctly in IE10 for
// static fields that are defined by TS. See
// https://github.com/angular/angular/pull/28439#issuecomment-459349218.
var parentPrototype=clazz.prototype?Object.getPrototypeOf(clazz.prototype):null;var parentConstructor=parentPrototype&&parentPrototype.constructor;if(decorators!==null){if(clazz.decorators!==undefined&&(!parentConstructor||parentConstructor.decorators!==clazz.decorators)){(_a=clazz.decorators).push.apply(_a,__spread(decorators));}else{clazz.decorators=decorators;}}if(ctorParameters!==null){// Rather than merging, clobber the existing parameters. If other projects exist which
// use tsickle-style annotations and reflect over them in the same way, this could
// cause issues, but that is vanishingly unlikely.
clazz.ctorParameters=ctorParameters;}if(propDecorators!==null){// The property decorator objects are merged as it is possible different fields have
// different decorator types. Decorators on individual fields are not merged, as it's
// also incredibly unlikely that a field will be decorated both with an Angular
// decorator and a non-Angular decorator that's also been downleveled.
if(clazz.propDecorators!==undefined&&(!parentConstructor||parentConstructor.propDecorators!==clazz.propDecorators)){clazz.propDecorators=_assign4(_assign4({},clazz.propDecorators),propDecorators);}else{clazz.propDecorators=propDecorators;}}});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Map of module-id to the corresponding NgModule.
     * - In pre Ivy we track NgModuleFactory,
     * - In post Ivy we track the NgModuleType
     */var modules=new Map();/**
     * Registers a loaded module. Should only be called from generated NgModuleFactory code.
     * @publicApi
     */function registerModuleFactory(id,factory){var existing=modules.get(id);assertSameOrNotExisting(id,existing&&existing.moduleType,factory.moduleType);modules.set(id,factory);}function assertSameOrNotExisting(id,type,incoming){if(type&&type!==incoming){throw new Error("Duplicate module registered for "+id+" - "+stringify(type)+" vs "+stringify(type.name));}}function registerNgModuleType(ngModuleType){if(ngModuleType.ɵmod.id!==null){var id=ngModuleType.ɵmod.id;var existing=modules.get(id);assertSameOrNotExisting(id,existing,ngModuleType);modules.set(id,ngModuleType);}var imports=ngModuleType.ɵmod.imports;if(imports instanceof Function){imports=imports();}if(imports){imports.forEach(function(i){return registerNgModuleType(i);});}}function clearModulesForTest(){modules.clear();}function getRegisteredNgModuleType(id){return modules.get(id)||autoRegisterModuleById[id];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NgModuleRef$1=/** @class */function(_super){__extends(NgModuleRef$1,_super);function NgModuleRef$1(ngModuleType,_parent){var _this=_super.call(this)||this;_this._parent=_parent;// tslint:disable-next-line:require-internal-with-underscore
_this._bootstrapComponents=[];_this.injector=_this;_this.destroyCbs=[];// When bootstrapping a module we have a dependency graph that looks like this:
// ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the
// module being resolved tries to inject the ComponentFactoryResolver, it'll create a
// circular dependency which will result in a runtime error, because the injector doesn't
// exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves
// and providing it, rather than letting the injector resolve it.
_this.componentFactoryResolver=new ComponentFactoryResolver$1(_this);var ngModuleDef=getNgModuleDef(ngModuleType);ngDevMode&&assertDefined(ngModuleDef,"NgModule '"+stringify(ngModuleType)+"' is not a subtype of 'NgModuleType'.");var ngLocaleIdDef=getNgLocaleIdDef(ngModuleType);ngLocaleIdDef&&setLocaleId(ngLocaleIdDef);_this._bootstrapComponents=maybeUnwrapFn(ngModuleDef.bootstrap);_this._r3Injector=createInjectorWithoutInjectorInstances(ngModuleType,_parent,[{provide:NgModuleRef,useValue:_this},{provide:ComponentFactoryResolver,useValue:_this.componentFactoryResolver}],stringify(ngModuleType));// We need to resolve the injector types separately from the injector creation, because
// the module might be trying to use this ref in its contructor for DI which will cause a
// circular error that will eventually error out, because the injector isn't created yet.
_this._r3Injector._resolveInjectorDefTypes();_this.instance=_this.get(ngModuleType);return _this;}NgModuleRef$1.prototype.get=function(token,notFoundValue,injectFlags){if(notFoundValue===void 0){notFoundValue=Injector.THROW_IF_NOT_FOUND;}if(injectFlags===void 0){injectFlags=exports.InjectFlags.Default;}if(token===Injector||token===NgModuleRef||token===INJECTOR){return this;}return this._r3Injector.get(token,notFoundValue,injectFlags);};NgModuleRef$1.prototype.destroy=function(){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');var injector=this._r3Injector;!injector.destroyed&&injector.destroy();this.destroyCbs.forEach(function(fn){return fn();});this.destroyCbs=null;};NgModuleRef$1.prototype.onDestroy=function(callback){ngDevMode&&assertDefined(this.destroyCbs,'NgModule already destroyed');this.destroyCbs.push(callback);};return NgModuleRef$1;}(NgModuleRef);var NgModuleFactory$1=/** @class */function(_super){__extends(NgModuleFactory,_super);function NgModuleFactory(moduleType){var _this=_super.call(this)||this;_this.moduleType=moduleType;var ngModuleDef=getNgModuleDef(moduleType);if(ngModuleDef!==null){// Register the NgModule with Angular's module registry. The location (and hence timing) of
// this call is critical to ensure this works correctly (modules get registered when expected)
// without bloating bundles (modules are registered when otherwise not referenced).
//
// In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has
// several practical consequences:
//
// - If an .ngfactory file is not imported from, the module won't be registered (and can be
//   tree shaken).
// - If an .ngfactory file is imported from, the module will be registered even if an instance
//   is not actually created (via `create` below).
// - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's
//   imports,
//
// In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are
// not a required API to use - there are other ways to obtain an NgModuleFactory for a given
// NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,
// the side effect of registration is added here, in the constructor of NgModuleFactory,
// ensuring no matter how a factory is created, the module is registered correctly.
//
// An alternative would be to include the registration side effect inline following the actual
// NgModule definition. This also has the correct timing, but breaks tree-shaking - modules
// will be registered and retained even if they're otherwise never referenced.
registerNgModuleType(moduleType);}return _this;}NgModuleFactory.prototype.create=function(parentInjector){return new NgModuleRef$1(this.moduleType,parentInjector);};return NgModuleFactory;}(NgModuleFactory);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Bindings for pure functions are stored after regular bindings.
     *
     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|
     * ------------------------------------------------------------------------------------------
     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |
     * ------------------------------------------------------------------------------------------
     *                    ^                      ^
     *      TView.bindingStartIndex      TView.expandoStartIndex
     *
     * Pure function instructions are given an offset from the binding root. Adding the offset to the
     * binding root gives the first index where the bindings are stored. In component views, the binding
     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +
     * any directive instances + any hostVars in directives evaluated before it.
     *
     * See VIEW_DATA.md for more information about host binding resolution.
     */ /**
     * If the value hasn't been saved, calls the pure function to store and return the
     * value. If it has been saved, returns the saved value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn Function that returns a value
     * @param thisArg Optional calling context of pureFn
     * @returns value
     *
     * @codeGenApi
     */function ɵɵpureFunction0(slotOffset,pureFn,thisArg){var bindingIndex=getBindingRoot()+slotOffset;var lView=getLView();return lView[bindingIndex]===NO_CHANGE?updateBinding(lView,bindingIndex,thisArg?pureFn.call(thisArg):pureFn()):getBinding(lView,bindingIndex);}/**
     * If the value of the provided exp has changed, calls the pure function to return
     * an updated value. Or if the value has not changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn Function that returns an updated value
     * @param exp Updated expression value
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction1(slotOffset,pureFn,exp,thisArg){return pureFunction1Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp,thisArg);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction2(slotOffset,pureFn,exp1,exp2,thisArg){return pureFunction2Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,thisArg);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction3(slotOffset,pureFn,exp1,exp2,exp3,thisArg){return pureFunction3Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,exp3,thisArg);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction4(slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg){return pureFunction4Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param exp5
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction5(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,thisArg){var bindingIndex=getBindingRoot()+slotOffset;var lView=getLView();var different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated(lView,bindingIndex+4,exp5)||different?updateBinding(lView,bindingIndex+5,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5):pureFn(exp1,exp2,exp3,exp4,exp5)):getBinding(lView,bindingIndex+5);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param exp5
     * @param exp6
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction6(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,thisArg){var bindingIndex=getBindingRoot()+slotOffset;var lView=getLView();var different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated2(lView,bindingIndex+4,exp5,exp6)||different?updateBinding(lView,bindingIndex+6,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6):pureFn(exp1,exp2,exp3,exp4,exp5,exp6)):getBinding(lView,bindingIndex+6);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param exp5
     * @param exp6
     * @param exp7
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction7(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,thisArg){var bindingIndex=getBindingRoot()+slotOffset;var lView=getLView();var different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated3(lView,bindingIndex+4,exp5,exp6,exp7)||different?updateBinding(lView,bindingIndex+7,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7)):getBinding(lView,bindingIndex+7);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param exp5
     * @param exp6
     * @param exp7
     * @param exp8
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunction8(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8,thisArg){var bindingIndex=getBindingRoot()+slotOffset;var lView=getLView();var different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated4(lView,bindingIndex+4,exp5,exp6,exp7,exp8)||different?updateBinding(lView,bindingIndex+8,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8)):getBinding(lView,bindingIndex+8);}/**
     * pureFunction instruction that can support any number of bindings.
     *
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn A pure function that takes binding values and builds an object or array
     * containing those values.
     * @param exps An array of binding values
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     * @codeGenApi
     */function ɵɵpureFunctionV(slotOffset,pureFn,exps,thisArg){return pureFunctionVInternal(getLView(),getBindingRoot(),slotOffset,pureFn,exps,thisArg);}/**
     * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized
     * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first
     * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE
     * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert
     * it to `undefined`.
     */function getPureFunctionReturnValue(lView,returnValueIndex){ngDevMode&&assertDataInRange(lView,returnValueIndex);var lastReturnValue=lView[returnValueIndex];return lastReturnValue===NO_CHANGE?undefined:lastReturnValue;}/**
     * If the value of the provided exp has changed, calls the pure function to return
     * an updated value. Or if the value has not changed, returns cached value.
     *
     * @param lView LView in which the function is being executed.
     * @param bindingRoot Binding root index.
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn Function that returns an updated value
     * @param exp Updated expression value
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     */function pureFunction1Internal(lView,bindingRoot,slotOffset,pureFn,exp,thisArg){var bindingIndex=bindingRoot+slotOffset;return bindingUpdated(lView,bindingIndex,exp)?updateBinding(lView,bindingIndex+1,thisArg?pureFn.call(thisArg,exp):pureFn(exp)):getPureFunctionReturnValue(lView,bindingIndex+1);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param lView LView in which the function is being executed.
     * @param bindingRoot Binding root index.
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     */function pureFunction2Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,thisArg){var bindingIndex=bindingRoot+slotOffset;return bindingUpdated2(lView,bindingIndex,exp1,exp2)?updateBinding(lView,bindingIndex+2,thisArg?pureFn.call(thisArg,exp1,exp2):pureFn(exp1,exp2)):getPureFunctionReturnValue(lView,bindingIndex+2);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param lView LView in which the function is being executed.
     * @param bindingRoot Binding root index.
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     */function pureFunction3Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,exp3,thisArg){var bindingIndex=bindingRoot+slotOffset;return bindingUpdated3(lView,bindingIndex,exp1,exp2,exp3)?updateBinding(lView,bindingIndex+3,thisArg?pureFn.call(thisArg,exp1,exp2,exp3):pureFn(exp1,exp2,exp3)):getPureFunctionReturnValue(lView,bindingIndex+3);}/**
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param lView LView in which the function is being executed.
     * @param bindingRoot Binding root index.
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn
     * @param exp1
     * @param exp2
     * @param exp3
     * @param exp4
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     *
     */function pureFunction4Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg){var bindingIndex=bindingRoot+slotOffset;return bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4)?updateBinding(lView,bindingIndex+4,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4):pureFn(exp1,exp2,exp3,exp4)):getPureFunctionReturnValue(lView,bindingIndex+4);}/**
     * pureFunction instruction that can support any number of bindings.
     *
     * If the value of any provided exp has changed, calls the pure function to return
     * an updated value. Or if no values have changed, returns cached value.
     *
     * @param lView LView in which the function is being executed.
     * @param bindingRoot Binding root index.
     * @param slotOffset the offset from binding root to the reserved slot
     * @param pureFn A pure function that takes binding values and builds an object or array
     * containing those values.
     * @param exps An array of binding values
     * @param thisArg Optional calling context of pureFn
     * @returns Updated or cached value
     */function pureFunctionVInternal(lView,bindingRoot,slotOffset,pureFn,exps,thisArg){var bindingIndex=bindingRoot+slotOffset;var different=false;for(var i=0;i<exps.length;i++){bindingUpdated(lView,bindingIndex++,exps[i])&&(different=true);}return different?updateBinding(lView,bindingIndex,pureFn.apply(thisArg,exps)):getPureFunctionReturnValue(lView,bindingIndex);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Create a pipe.
     *
     * @param index Pipe index where the pipe will be stored.
     * @param pipeName The name of the pipe
     * @returns T the instance of the pipe.
     *
     * @codeGenApi
     */function ɵɵpipe(index,pipeName){var tView=getTView();var pipeDef;var adjustedIndex=index+HEADER_OFFSET;if(tView.firstCreatePass){pipeDef=getPipeDef$1(pipeName,tView.pipeRegistry);tView.data[adjustedIndex]=pipeDef;if(pipeDef.onDestroy){(tView.destroyHooks||(tView.destroyHooks=[])).push(adjustedIndex,pipeDef.onDestroy);}}else{pipeDef=tView.data[adjustedIndex];}var pipeFactory=pipeDef.factory||(pipeDef.factory=getFactoryDef(pipeDef.type,true));var previousInjectImplementation=setInjectImplementation(ɵɵdirectiveInject);// DI for pipes is supposed to behave like directives when placed on a component
// host node, which means that we have to disable access to `viewProviders`.
var previousIncludeViewProviders=setIncludeViewProviders(false);var pipeInstance=pipeFactory();setIncludeViewProviders(previousIncludeViewProviders);setInjectImplementation(previousInjectImplementation);store(tView,getLView(),index,pipeInstance);return pipeInstance;}/**
     * Searches the pipe registry for a pipe with the given name. If one is found,
     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.
     *
     * @param name Name of pipe to resolve
     * @param registry Full list of available pipes
     * @returns Matching PipeDef
     */function getPipeDef$1(name,registry){if(registry){for(var i=registry.length-1;i>=0;i--){var pipeDef=registry[i];if(name===pipeDef.name){return pipeDef;}}}throw new Error("The pipe '"+name+"' could not be found!");}/**
     * Invokes a pipe with 1 arguments.
     *
     * This instruction acts as a guard to {@link PipeTransform#transform} invoking
     * the pipe only when an input to the pipe changes.
     *
     * @param index Pipe index where the pipe was stored on creation.
     * @param slotOffset the offset in the reserved slot space
     * @param v1 1st argument to {@link PipeTransform#transform}.
     *
     * @codeGenApi
     */function ɵɵpipeBind1(index,slotOffset,v1){var lView=getLView();var pipeInstance=load(lView,index);return unwrapValue$1(lView,isPure(lView,index)?pureFunction1Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,pipeInstance):pipeInstance.transform(v1));}/**
     * Invokes a pipe with 2 arguments.
     *
     * This instruction acts as a guard to {@link PipeTransform#transform} invoking
     * the pipe only when an input to the pipe changes.
     *
     * @param index Pipe index where the pipe was stored on creation.
     * @param slotOffset the offset in the reserved slot space
     * @param v1 1st argument to {@link PipeTransform#transform}.
     * @param v2 2nd argument to {@link PipeTransform#transform}.
     *
     * @codeGenApi
     */function ɵɵpipeBind2(index,slotOffset,v1,v2){var lView=getLView();var pipeInstance=load(lView,index);return unwrapValue$1(lView,isPure(lView,index)?pureFunction2Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,pipeInstance):pipeInstance.transform(v1,v2));}/**
     * Invokes a pipe with 3 arguments.
     *
     * This instruction acts as a guard to {@link PipeTransform#transform} invoking
     * the pipe only when an input to the pipe changes.
     *
     * @param index Pipe index where the pipe was stored on creation.
     * @param slotOffset the offset in the reserved slot space
     * @param v1 1st argument to {@link PipeTransform#transform}.
     * @param v2 2nd argument to {@link PipeTransform#transform}.
     * @param v3 4rd argument to {@link PipeTransform#transform}.
     *
     * @codeGenApi
     */function ɵɵpipeBind3(index,slotOffset,v1,v2,v3){var lView=getLView();var pipeInstance=load(lView,index);return unwrapValue$1(lView,isPure(lView,index)?pureFunction3Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,v3,pipeInstance):pipeInstance.transform(v1,v2,v3));}/**
     * Invokes a pipe with 4 arguments.
     *
     * This instruction acts as a guard to {@link PipeTransform#transform} invoking
     * the pipe only when an input to the pipe changes.
     *
     * @param index Pipe index where the pipe was stored on creation.
     * @param slotOffset the offset in the reserved slot space
     * @param v1 1st argument to {@link PipeTransform#transform}.
     * @param v2 2nd argument to {@link PipeTransform#transform}.
     * @param v3 3rd argument to {@link PipeTransform#transform}.
     * @param v4 4th argument to {@link PipeTransform#transform}.
     *
     * @codeGenApi
     */function ɵɵpipeBind4(index,slotOffset,v1,v2,v3,v4){var lView=getLView();var pipeInstance=load(lView,index);return unwrapValue$1(lView,isPure(lView,index)?pureFunction4Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,v3,v4,pipeInstance):pipeInstance.transform(v1,v2,v3,v4));}/**
     * Invokes a pipe with variable number of arguments.
     *
     * This instruction acts as a guard to {@link PipeTransform#transform} invoking
     * the pipe only when an input to the pipe changes.
     *
     * @param index Pipe index where the pipe was stored on creation.
     * @param slotOffset the offset in the reserved slot space
     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.
     *
     * @codeGenApi
     */function ɵɵpipeBindV(index,slotOffset,values){var lView=getLView();var pipeInstance=load(lView,index);return unwrapValue$1(lView,isPure(lView,index)?pureFunctionVInternal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,values,pipeInstance):pipeInstance.transform.apply(pipeInstance,values));}function isPure(lView,index){return lView[TVIEW].data[index+HEADER_OFFSET].pure;}/**
     * Unwrap the output of a pipe transformation.
     * In order to trick change detection into considering that the new value is always different from
     * the old one, the old value is overwritten by NO_CHANGE.
     *
     * @param newValue the pipe transformation output.
     */function unwrapValue$1(lView,newValue){if(WrappedValue.isWrapped(newValue)){newValue=WrappedValue.unwrap(newValue);// The NO_CHANGE value needs to be written at the index where the impacted binding value is
// stored
var bindingToInvalidateIdx=getBindingIndex();lView[bindingToInvalidateIdx]=NO_CHANGE;}return newValue;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Use in components with the `@Output` directive to emit custom events
     * synchronously or asynchronously, and register handlers for those events
     * by subscribing to an instance.
     *
     * @usageNotes
     *
     * Extends
     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)
     * for Angular by adding the `emit()` method.
     *
     * In the following example, a component defines two output properties
     * that create event emitters. When the title is clicked, the emitter
     * emits an open or close event to toggle the current visibility state.
     *
     * ```html
     * @Component({
     *   selector: 'zippy',
     *   template: `
     *   <div class="zippy">
     *     <div (click)="toggle()">Toggle</div>
     *     <div [hidden]="!visible">
     *       <ng-content></ng-content>
     *     </div>
     *  </div>`})
     * export class Zippy {
     *   visible: boolean = true;
     *   @Output() open: EventEmitter<any> = new EventEmitter();
     *   @Output() close: EventEmitter<any> = new EventEmitter();
     *
     *   toggle() {
     *     this.visible = !this.visible;
     *     if (this.visible) {
     *       this.open.emit(null);
     *     } else {
     *       this.close.emit(null);
     *     }
     *   }
     * }
     * ```
     *
     * Access the event object with the `$event` argument passed to the output event
     * handler:
     *
     * ```html
     * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
     * ```
     *
     * @see [Observables in Angular](guide/observables-in-angular)
     * @publicApi
     */var EventEmitter=/** @class */function(_super){__extends(EventEmitter,_super);/**
         * Creates an instance of this class that can
         * deliver events synchronously or asynchronously.
         *
         * @param isAsync When true, deliver events asynchronously.
         *
         */function EventEmitter(isAsync){if(isAsync===void 0){isAsync=false;}var _this=_super.call(this)||this;_this.__isAsync=isAsync;return _this;}/**
         * Emits an event containing a given value.
         * @param value The value to emit.
         */EventEmitter.prototype.emit=function(value){_super.prototype.next.call(this,value);};/**
         * Registers handlers for events emitted by this instance.
         * @param generatorOrNext When supplied, a custom handler for emitted events.
         * @param error When supplied, a custom handler for an error notification
         * from this emitter.
         * @param complete When supplied, a custom handler for a completion
         * notification from this emitter.
         */EventEmitter.prototype.subscribe=function(generatorOrNext,error,complete){var schedulerFn;var errorFn=function errorFn(err){return null;};var completeFn=function completeFn(){return null;};if(generatorOrNext&&_typeof(generatorOrNext)==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}var sink=_super.prototype.subscribe.call(this,schedulerFn,errorFn,completeFn);if(generatorOrNext instanceof rxjs.Subscription){generatorOrNext.add(sink);}return sink;};return EventEmitter;}(rxjs.Subject);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function symbolIterator(){return this._results[getSymbolIterator()]();}/**
     * An unmodifiable list of items that Angular keeps up to date when the state
     * of the application changes.
     *
     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}
     * provide.
     *
     * Implements an iterable interface, therefore it can be used in both ES6
     * javascript `for (var i of items)` loops as well as in Angular templates with
     * `*ngFor="let i of myList"`.
     *
     * Changes can be observed by subscribing to the changes `Observable`.
     *
     * NOTE: In the future this class will implement an `Observable` interface.
     *
     * @usageNotes
     * ### Example
     * ```typescript
     * @Component({...})
     * class Container {
     *   @ViewChildren(Item) items:QueryList<Item>;
     * }
     * ```
     *
     * @publicApi
     */var QueryList=/** @class */function(){function QueryList(){this.dirty=true;this._results=[];this.changes=new EventEmitter();this.length=0;// This function should be declared on the prototype, but doing so there will cause the class
// declaration to have side-effects and become not tree-shakable. For this reason we do it in
// the constructor.
// [getSymbolIterator()](): Iterator<T> { ... }
var symbol=getSymbolIterator();var proto=QueryList.prototype;if(!proto[symbol])proto[symbol]=symbolIterator;}/**
         * See
         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
         */QueryList.prototype.map=function(fn){return this._results.map(fn);};/**
         * See
         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
         */QueryList.prototype.filter=function(fn){return this._results.filter(fn);};/**
         * See
         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
         */QueryList.prototype.find=function(fn){return this._results.find(fn);};/**
         * See
         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
         */QueryList.prototype.reduce=function(fn,init){return this._results.reduce(fn,init);};/**
         * See
         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
         */QueryList.prototype.forEach=function(fn){this._results.forEach(fn);};/**
         * See
         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
         */QueryList.prototype.some=function(fn){return this._results.some(fn);};/**
         * Returns a copy of the internal results list as an Array.
         */QueryList.prototype.toArray=function(){return this._results.slice();};QueryList.prototype.toString=function(){return this._results.toString();};/**
         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that
         * on change detection, it will not notify of changes to the queries, unless a new change
         * occurs.
         *
         * @param resultsTree The query results to store
         */QueryList.prototype.reset=function(resultsTree){this._results=flatten(resultsTree);this.dirty=false;this.length=this._results.length;this.last=this._results[this.length-1];this.first=this._results[0];};/**
         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.
         */QueryList.prototype.notifyOnChanges=function(){this.changes.emit(this);};/** internal */QueryList.prototype.setDirty=function(){this.dirty=true;};/** internal */QueryList.prototype.destroy=function(){this.changes.complete();this.changes.unsubscribe();};return QueryList;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$7=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
var unusedValueExportToPlacateAjd$8=1;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var unusedValueToPlacateAjd$2=unusedValueExportToPlacateAjd$7+unusedValueExportToPlacateAjd$3+unusedValueExportToPlacateAjd$4+unusedValueExportToPlacateAjd$8;var LQuery_=/** @class */function(){function LQuery_(queryList){this.queryList=queryList;this.matches=null;}LQuery_.prototype.clone=function(){return new LQuery_(this.queryList);};LQuery_.prototype.setDirty=function(){this.queryList.setDirty();};return LQuery_;}();var LQueries_=/** @class */function(){function LQueries_(queries){if(queries===void 0){queries=[];}this.queries=queries;}LQueries_.prototype.createEmbeddedView=function(tView){var tQueries=tView.queries;if(tQueries!==null){var noOfInheritedQueries=tView.contentQueries!==null?tView.contentQueries[0]:tQueries.length;var viewLQueries=[];// An embedded view has queries propagated from a declaration view at the beginning of the
// TQueries collection and up until a first content query declared in the embedded view. Only
// propagated LQueries are created at this point (LQuery corresponding to declared content
// queries will be instantiated from the content query instructions for each directive).
for(var i=0;i<noOfInheritedQueries;i++){var tQuery=tQueries.getByIndex(i);var parentLQuery=this.queries[tQuery.indexInDeclarationView];viewLQueries.push(parentLQuery.clone());}return new LQueries_(viewLQueries);}return null;};LQueries_.prototype.insertView=function(tView){this.dirtyQueriesWithMatches(tView);};LQueries_.prototype.detachView=function(tView){this.dirtyQueriesWithMatches(tView);};LQueries_.prototype.dirtyQueriesWithMatches=function(tView){for(var i=0;i<this.queries.length;i++){if(getTQuery(tView,i).matches!==null){this.queries[i].setDirty();}}};return LQueries_;}();var TQueryMetadata_=/** @class */function(){function TQueryMetadata_(predicate,descendants,isStatic,read){if(read===void 0){read=null;}this.predicate=predicate;this.descendants=descendants;this.isStatic=isStatic;this.read=read;}return TQueryMetadata_;}();var TQueries_=/** @class */function(){function TQueries_(queries){if(queries===void 0){queries=[];}this.queries=queries;}TQueries_.prototype.elementStart=function(tView,tNode){ngDevMode&&assertFirstCreatePass(tView,'Queries should collect results on the first template pass only');for(var i=0;i<this.queries.length;i++){this.queries[i].elementStart(tView,tNode);}};TQueries_.prototype.elementEnd=function(tNode){for(var i=0;i<this.queries.length;i++){this.queries[i].elementEnd(tNode);}};TQueries_.prototype.embeddedTView=function(tNode){var queriesForTemplateRef=null;for(var i=0;i<this.length;i++){var childQueryIndex=queriesForTemplateRef!==null?queriesForTemplateRef.length:0;var tqueryClone=this.getByIndex(i).embeddedTView(tNode,childQueryIndex);if(tqueryClone){tqueryClone.indexInDeclarationView=i;if(queriesForTemplateRef!==null){queriesForTemplateRef.push(tqueryClone);}else{queriesForTemplateRef=[tqueryClone];}}}return queriesForTemplateRef!==null?new TQueries_(queriesForTemplateRef):null;};TQueries_.prototype.template=function(tView,tNode){ngDevMode&&assertFirstCreatePass(tView,'Queries should collect results on the first template pass only');for(var i=0;i<this.queries.length;i++){this.queries[i].template(tView,tNode);}};TQueries_.prototype.getByIndex=function(index){ngDevMode&&assertDataInRange(this.queries,index);return this.queries[index];};Object.defineProperty(TQueries_.prototype,"length",{get:function get(){return this.queries.length;},enumerable:true,configurable:true});TQueries_.prototype.track=function(tquery){this.queries.push(tquery);};return TQueries_;}();var TQuery_=/** @class */function(){function TQuery_(metadata,nodeIndex){if(nodeIndex===void 0){nodeIndex=-1;}this.metadata=metadata;this.matches=null;this.indexInDeclarationView=-1;this.crossesNgTemplate=false;/**
             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag
             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to
             * elements in a template.
             */this._appliesToNextNode=true;this._declarationNodeIndex=nodeIndex;}TQuery_.prototype.elementStart=function(tView,tNode){if(this.isApplyingToNode(tNode)){this.matchTNode(tView,tNode);}};TQuery_.prototype.elementEnd=function(tNode){if(this._declarationNodeIndex===tNode.index){this._appliesToNextNode=false;}};TQuery_.prototype.template=function(tView,tNode){this.elementStart(tView,tNode);};TQuery_.prototype.embeddedTView=function(tNode,childQueryIndex){if(this.isApplyingToNode(tNode)){this.crossesNgTemplate=true;// A marker indicating a `<ng-template>` element (a placeholder for query results from
// embedded views created based on this `<ng-template>`).
this.addMatch(-tNode.index,childQueryIndex);return new TQuery_(this.metadata);}return null;};TQuery_.prototype.isApplyingToNode=function(tNode){if(this._appliesToNextNode&&this.metadata.descendants===false){var declarationNodeIdx=this._declarationNodeIndex;var parent_1=tNode.parent;// Determine if a given TNode is a "direct" child of a node on which a content query was
// declared (only direct children of query's host node can match with the descendants: false
// option). There are 3 main use-case / conditions to consider here:
// - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query
// host node;
// - <needs-target><ng-template [ngIf]="true"><i #target></i></ng-template></needs-target>:
// here <i #target> parent node is null;
// - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need
// to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse
// up past the query's host node!).
while(parent_1!==null&&parent_1.type===4/* ElementContainer */&&parent_1.index!==declarationNodeIdx){parent_1=parent_1.parent;}return declarationNodeIdx===(parent_1!==null?parent_1.index:-1);}return this._appliesToNextNode;};TQuery_.prototype.matchTNode=function(tView,tNode){if(Array.isArray(this.metadata.predicate)){var localNames=this.metadata.predicate;for(var i=0;i<localNames.length;i++){this.matchTNodeWithReadOption(tView,tNode,getIdxOfMatchingSelector(tNode,localNames[i]));}}else{var typePredicate=this.metadata.predicate;if(typePredicate===TemplateRef){if(tNode.type===0/* Container */){this.matchTNodeWithReadOption(tView,tNode,-1);}}else{this.matchTNodeWithReadOption(tView,tNode,locateDirectiveOrProvider(tNode,tView,typePredicate,false,false));}}};TQuery_.prototype.matchTNodeWithReadOption=function(tView,tNode,nodeMatchIdx){if(nodeMatchIdx!==null){var read=this.metadata.read;if(read!==null){if(read===ElementRef||read===ViewContainerRef||read===TemplateRef&&tNode.type===0/* Container */){this.addMatch(tNode.index,-2);}else{var directiveOrProviderIdx=locateDirectiveOrProvider(tNode,tView,read,false,false);if(directiveOrProviderIdx!==null){this.addMatch(tNode.index,directiveOrProviderIdx);}}}else{this.addMatch(tNode.index,nodeMatchIdx);}}};TQuery_.prototype.addMatch=function(tNodeIdx,matchIdx){if(this.matches===null){this.matches=[tNodeIdx,matchIdx];}else{this.matches.push(tNodeIdx,matchIdx);}};return TQuery_;}();/**
     * Iterates over local names for a given node and returns directive index
     * (or -1 if a local name points to an element).
     *
     * @param tNode static data of a node to check
     * @param selector selector to match
     * @returns directive index, -1 or null if a selector didn't match any of the local names
     */function getIdxOfMatchingSelector(tNode,selector){var localNames=tNode.localNames;if(localNames!==null){for(var i=0;i<localNames.length;i+=2){if(localNames[i]===selector){return localNames[i+1];}}}return null;}function createResultByTNodeType(tNode,currentView){if(tNode.type===3/* Element */||tNode.type===4/* ElementContainer */){return createElementRef(ElementRef,tNode,currentView);}else if(tNode.type===0/* Container */){return createTemplateRef(TemplateRef,ElementRef,tNode,currentView);}return null;}function createResultForNode(lView,tNode,matchingIdx,read){if(matchingIdx===-1){// if read token and / or strategy is not specified, detect it using appropriate tNode type
return createResultByTNodeType(tNode,lView);}else if(matchingIdx===-2){// read a special token from a node injector
return createSpecialToken(lView,tNode,read);}else{// read a token
return getNodeInjectable(lView,lView[TVIEW],matchingIdx,tNode);}}function createSpecialToken(lView,tNode,read){if(read===ElementRef){return createElementRef(ElementRef,tNode,lView);}else if(read===TemplateRef){return createTemplateRef(TemplateRef,ElementRef,tNode,lView);}else if(read===ViewContainerRef){ngDevMode&&assertNodeOfPossibleTypes(tNode,3/* Element */,0/* Container */,4/* ElementContainer */);return createContainerRef(ViewContainerRef,ElementRef,tNode,lView);}else{ngDevMode&&throwError("Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got "+stringify(read)+".");}}/**
     * A helper function that creates query results for a given view. This function is meant to do the
     * processing once and only once for a given view instance (a set of results for a given view
     * doesn't change).
     */function materializeViewResults(tView,lView,tQuery,queryIndex){var lQuery=lView[QUERIES].queries[queryIndex];if(lQuery.matches===null){var tViewData=tView.data;var tQueryMatches=tQuery.matches;var result=[];for(var i=0;i<tQueryMatches.length;i+=2){var matchedNodeIdx=tQueryMatches[i];if(matchedNodeIdx<0){// we at the <ng-template> marker which might have results in views created based on this
// <ng-template> - those results will be in separate views though, so here we just leave
// null as a placeholder
result.push(null);}else{ngDevMode&&assertDataInRange(tViewData,matchedNodeIdx);var tNode=tViewData[matchedNodeIdx];result.push(createResultForNode(lView,tNode,tQueryMatches[i+1],tQuery.metadata.read));}}lQuery.matches=result;}return lQuery.matches;}/**
     * A helper function that collects (already materialized) query results from a tree of views,
     * starting with a provided LView.
     */function collectQueryResults(tView,lView,queryIndex,result){var tQuery=tView.queries.getByIndex(queryIndex);var tQueryMatches=tQuery.matches;if(tQueryMatches!==null){var lViewResults=materializeViewResults(tView,lView,tQuery,queryIndex);for(var i=0;i<tQueryMatches.length;i+=2){var tNodeIdx=tQueryMatches[i];if(tNodeIdx>0){result.push(lViewResults[i/2]);}else{var childQueryIndex=tQueryMatches[i+1];var declarationLContainer=lView[-tNodeIdx];ngDevMode&&assertLContainer(declarationLContainer);// collect matches for views inserted in this container
for(var i_1=CONTAINER_HEADER_OFFSET;i_1<declarationLContainer.length;i_1++){var embeddedLView=declarationLContainer[i_1];if(embeddedLView[DECLARATION_LCONTAINER]===embeddedLView[PARENT]){collectQueryResults(embeddedLView[TVIEW],embeddedLView,childQueryIndex,result);}}// collect matches for views created from this declaration container and inserted into
// different containers
if(declarationLContainer[MOVED_VIEWS]!==null){var embeddedLViews=declarationLContainer[MOVED_VIEWS];for(var i_2=0;i_2<embeddedLViews.length;i_2++){var embeddedLView=embeddedLViews[i_2];collectQueryResults(embeddedLView[TVIEW],embeddedLView,childQueryIndex,result);}}}}}return result;}/**
     * Refreshes a query by combining matches from all active views and removing matches from deleted
     * views.
     *
     * @returns `true` if a query got dirty during change detection or if this is a static query
     * resolving in creation mode, `false` otherwise.
     *
     * @codeGenApi
     */function ɵɵqueryRefresh(queryList){var lView=getLView();var tView=getTView();var queryIndex=getCurrentQueryIndex();setCurrentQueryIndex(queryIndex+1);var tQuery=getTQuery(tView,queryIndex);if(queryList.dirty&&isCreationMode(lView)===tQuery.metadata.isStatic){if(tQuery.matches===null){queryList.reset([]);}else{var result=tQuery.crossesNgTemplate?collectQueryResults(tView,lView,queryIndex,[]):materializeViewResults(tView,lView,tQuery,queryIndex);queryList.reset(result);queryList.notifyOnChanges();}return true;}return false;}/**
     * Creates new QueryList for a static view query.
     *
     * @param predicate The type for which the query will search
     * @param descend Whether or not to descend into children
     * @param read What to save in the query
     *
     * @codeGenApi
     */function ɵɵstaticViewQuery(predicate,descend,read){viewQueryInternal(getTView(),getLView(),predicate,descend,read,true);}/**
     * Creates new QueryList, stores the reference in LView and returns QueryList.
     *
     * @param predicate The type for which the query will search
     * @param descend Whether or not to descend into children
     * @param read What to save in the query
     *
     * @codeGenApi
     */function ɵɵviewQuery(predicate,descend,read){viewQueryInternal(getTView(),getLView(),predicate,descend,read,false);}function viewQueryInternal(tView,lView,predicate,descend,read,isStatic){if(tView.firstCreatePass){createTQuery(tView,new TQueryMetadata_(predicate,descend,isStatic,read),-1);if(isStatic){tView.staticViewQueries=true;}}createLQuery(tView,lView);}/**
     * Registers a QueryList, associated with a content query, for later refresh (part of a view
     * refresh).
     *
     * @param directiveIndex Current directive index
     * @param predicate The type for which the query will search
     * @param descend Whether or not to descend into children
     * @param read What to save in the query
     * @returns QueryList<T>
     *
     * @codeGenApi
     */function ɵɵcontentQuery(directiveIndex,predicate,descend,read){contentQueryInternal(getTView(),getLView(),predicate,descend,read,false,getPreviousOrParentTNode(),directiveIndex);}/**
     * Registers a QueryList, associated with a static content query, for later refresh
     * (part of a view refresh).
     *
     * @param directiveIndex Current directive index
     * @param predicate The type for which the query will search
     * @param descend Whether or not to descend into children
     * @param read What to save in the query
     * @returns QueryList<T>
     *
     * @codeGenApi
     */function ɵɵstaticContentQuery(directiveIndex,predicate,descend,read){contentQueryInternal(getTView(),getLView(),predicate,descend,read,true,getPreviousOrParentTNode(),directiveIndex);}function contentQueryInternal(tView,lView,predicate,descend,read,isStatic,tNode,directiveIndex){if(tView.firstCreatePass){createTQuery(tView,new TQueryMetadata_(predicate,descend,isStatic,read),tNode.index);saveContentQueryAndDirectiveIndex(tView,directiveIndex);if(isStatic){tView.staticContentQueries=true;}}createLQuery(tView,lView);}/**
     * Loads a QueryList corresponding to the current view or content query.
     *
     * @codeGenApi
     */function ɵɵloadQuery(){return loadQueryInternal(getLView(),getCurrentQueryIndex());}function loadQueryInternal(lView,queryIndex){ngDevMode&&assertDefined(lView[QUERIES],'LQueries should be defined when trying to load a query');ngDevMode&&assertDataInRange(lView[QUERIES].queries,queryIndex);return lView[QUERIES].queries[queryIndex].queryList;}function createLQuery(tView,lView){var queryList=new QueryList();storeCleanupWithContext(tView,lView,queryList,queryList.destroy);if(lView[QUERIES]===null)lView[QUERIES]=new LQueries_();lView[QUERIES].queries.push(new LQuery_(queryList));}function createTQuery(tView,metadata,nodeIndex){if(tView.queries===null)tView.queries=new TQueries_();tView.queries.track(new TQuery_(metadata,nodeIndex));}function saveContentQueryAndDirectiveIndex(tView,directiveIndex){var tViewContentQueries=tView.contentQueries||(tView.contentQueries=[]);var lastSavedDirectiveIndex=tView.contentQueries.length?tViewContentQueries[tViewContentQueries.length-1]:-1;if(directiveIndex!==lastSavedDirectiveIndex){tViewContentQueries.push(tView.queries.length-1,directiveIndex);}}function getTQuery(tView,index){ngDevMode&&assertDefined(tView.queries,'TQueries must be defined to retrieve a TQuery');return tView.queries.getByIndex(index);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the
     * `<ng-template>` element.
     *
     * @codeGenApi
     */function ɵɵtemplateRefExtractor(tNode,currentView){return createTemplateRef(TemplateRef,ElementRef,tNode,currentView);}/**
     * Returns the appropriate `ChangeDetectorRef` for a pipe.
     *
     * @codeGenApi
     */function ɵɵinjectPipeChangeDetectorRef(flags){if(flags===void 0){flags=exports.InjectFlags.Default;}var value=injectChangeDetectorRef(true);if(value==null&&!(flags&exports.InjectFlags.Optional)){throw new Error("No provider for ChangeDetectorRef!");}else{return value;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$d=function ɵ0$d(){return{'ɵɵattribute':ɵɵattribute,'ɵɵattributeInterpolate1':ɵɵattributeInterpolate1,'ɵɵattributeInterpolate2':ɵɵattributeInterpolate2,'ɵɵattributeInterpolate3':ɵɵattributeInterpolate3,'ɵɵattributeInterpolate4':ɵɵattributeInterpolate4,'ɵɵattributeInterpolate5':ɵɵattributeInterpolate5,'ɵɵattributeInterpolate6':ɵɵattributeInterpolate6,'ɵɵattributeInterpolate7':ɵɵattributeInterpolate7,'ɵɵattributeInterpolate8':ɵɵattributeInterpolate8,'ɵɵattributeInterpolateV':ɵɵattributeInterpolateV,'ɵɵdefineComponent':ɵɵdefineComponent,'ɵɵdefineDirective':ɵɵdefineDirective,'ɵɵdefineInjectable':ɵɵdefineInjectable,'ɵɵdefineInjector':ɵɵdefineInjector,'ɵɵdefineNgModule':ɵɵdefineNgModule,'ɵɵdefinePipe':ɵɵdefinePipe,'ɵɵdirectiveInject':ɵɵdirectiveInject,'ɵɵgetFactoryOf':ɵɵgetFactoryOf,'ɵɵgetInheritedFactory':ɵɵgetInheritedFactory,'ɵɵinject':ɵɵinject,'ɵɵinjectAttribute':ɵɵinjectAttribute,'ɵɵinvalidFactory':ɵɵinvalidFactory,'ɵɵinvalidFactoryDep':ɵɵinvalidFactoryDep,'ɵɵinjectPipeChangeDetectorRef':ɵɵinjectPipeChangeDetectorRef,'ɵɵtemplateRefExtractor':ɵɵtemplateRefExtractor,'ɵɵNgOnChangesFeature':ɵɵNgOnChangesFeature,'ɵɵProvidersFeature':ɵɵProvidersFeature,'ɵɵCopyDefinitionFeature':ɵɵCopyDefinitionFeature,'ɵɵInheritDefinitionFeature':ɵɵInheritDefinitionFeature,'ɵɵnextContext':ɵɵnextContext,'ɵɵnamespaceHTML':ɵɵnamespaceHTML,'ɵɵnamespaceMathML':ɵɵnamespaceMathML,'ɵɵnamespaceSVG':ɵɵnamespaceSVG,'ɵɵenableBindings':ɵɵenableBindings,'ɵɵdisableBindings':ɵɵdisableBindings,'ɵɵelementStart':ɵɵelementStart,'ɵɵelementEnd':ɵɵelementEnd,'ɵɵelement':ɵɵelement,'ɵɵelementContainerStart':ɵɵelementContainerStart,'ɵɵelementContainerEnd':ɵɵelementContainerEnd,'ɵɵelementContainer':ɵɵelementContainer,'ɵɵpureFunction0':ɵɵpureFunction0,'ɵɵpureFunction1':ɵɵpureFunction1,'ɵɵpureFunction2':ɵɵpureFunction2,'ɵɵpureFunction3':ɵɵpureFunction3,'ɵɵpureFunction4':ɵɵpureFunction4,'ɵɵpureFunction5':ɵɵpureFunction5,'ɵɵpureFunction6':ɵɵpureFunction6,'ɵɵpureFunction7':ɵɵpureFunction7,'ɵɵpureFunction8':ɵɵpureFunction8,'ɵɵpureFunctionV':ɵɵpureFunctionV,'ɵɵgetCurrentView':ɵɵgetCurrentView,'ɵɵrestoreView':ɵɵrestoreView,'ɵɵlistener':ɵɵlistener,'ɵɵprojection':ɵɵprojection,'ɵɵupdateSyntheticHostBinding':ɵɵupdateSyntheticHostBinding,'ɵɵcomponentHostSyntheticListener':ɵɵcomponentHostSyntheticListener,'ɵɵpipeBind1':ɵɵpipeBind1,'ɵɵpipeBind2':ɵɵpipeBind2,'ɵɵpipeBind3':ɵɵpipeBind3,'ɵɵpipeBind4':ɵɵpipeBind4,'ɵɵpipeBindV':ɵɵpipeBindV,'ɵɵprojectionDef':ɵɵprojectionDef,'ɵɵhostProperty':ɵɵhostProperty,'ɵɵproperty':ɵɵproperty,'ɵɵpropertyInterpolate':ɵɵpropertyInterpolate,'ɵɵpropertyInterpolate1':ɵɵpropertyInterpolate1,'ɵɵpropertyInterpolate2':ɵɵpropertyInterpolate2,'ɵɵpropertyInterpolate3':ɵɵpropertyInterpolate3,'ɵɵpropertyInterpolate4':ɵɵpropertyInterpolate4,'ɵɵpropertyInterpolate5':ɵɵpropertyInterpolate5,'ɵɵpropertyInterpolate6':ɵɵpropertyInterpolate6,'ɵɵpropertyInterpolate7':ɵɵpropertyInterpolate7,'ɵɵpropertyInterpolate8':ɵɵpropertyInterpolate8,'ɵɵpropertyInterpolateV':ɵɵpropertyInterpolateV,'ɵɵpipe':ɵɵpipe,'ɵɵqueryRefresh':ɵɵqueryRefresh,'ɵɵviewQuery':ɵɵviewQuery,'ɵɵstaticViewQuery':ɵɵstaticViewQuery,'ɵɵstaticContentQuery':ɵɵstaticContentQuery,'ɵɵloadQuery':ɵɵloadQuery,'ɵɵcontentQuery':ɵɵcontentQuery,'ɵɵreference':ɵɵreference,'ɵɵclassMap':ɵɵclassMap,'ɵɵclassMapInterpolate1':ɵɵclassMapInterpolate1,'ɵɵclassMapInterpolate2':ɵɵclassMapInterpolate2,'ɵɵclassMapInterpolate3':ɵɵclassMapInterpolate3,'ɵɵclassMapInterpolate4':ɵɵclassMapInterpolate4,'ɵɵclassMapInterpolate5':ɵɵclassMapInterpolate5,'ɵɵclassMapInterpolate6':ɵɵclassMapInterpolate6,'ɵɵclassMapInterpolate7':ɵɵclassMapInterpolate7,'ɵɵclassMapInterpolate8':ɵɵclassMapInterpolate8,'ɵɵclassMapInterpolateV':ɵɵclassMapInterpolateV,'ɵɵstyleMap':ɵɵstyleMap,'ɵɵstyleMapInterpolate1':ɵɵstyleMapInterpolate1,'ɵɵstyleMapInterpolate2':ɵɵstyleMapInterpolate2,'ɵɵstyleMapInterpolate3':ɵɵstyleMapInterpolate3,'ɵɵstyleMapInterpolate4':ɵɵstyleMapInterpolate4,'ɵɵstyleMapInterpolate5':ɵɵstyleMapInterpolate5,'ɵɵstyleMapInterpolate6':ɵɵstyleMapInterpolate6,'ɵɵstyleMapInterpolate7':ɵɵstyleMapInterpolate7,'ɵɵstyleMapInterpolate8':ɵɵstyleMapInterpolate8,'ɵɵstyleMapInterpolateV':ɵɵstyleMapInterpolateV,'ɵɵstyleProp':ɵɵstyleProp,'ɵɵstylePropInterpolate1':ɵɵstylePropInterpolate1,'ɵɵstylePropInterpolate2':ɵɵstylePropInterpolate2,'ɵɵstylePropInterpolate3':ɵɵstylePropInterpolate3,'ɵɵstylePropInterpolate4':ɵɵstylePropInterpolate4,'ɵɵstylePropInterpolate5':ɵɵstylePropInterpolate5,'ɵɵstylePropInterpolate6':ɵɵstylePropInterpolate6,'ɵɵstylePropInterpolate7':ɵɵstylePropInterpolate7,'ɵɵstylePropInterpolate8':ɵɵstylePropInterpolate8,'ɵɵstylePropInterpolateV':ɵɵstylePropInterpolateV,'ɵɵstyleSanitizer':ɵɵstyleSanitizer,'ɵɵclassProp':ɵɵclassProp,'ɵɵselect':ɵɵselect,'ɵɵadvance':ɵɵadvance,'ɵɵtemplate':ɵɵtemplate,'ɵɵtext':ɵɵtext,'ɵɵtextInterpolate':ɵɵtextInterpolate,'ɵɵtextInterpolate1':ɵɵtextInterpolate1,'ɵɵtextInterpolate2':ɵɵtextInterpolate2,'ɵɵtextInterpolate3':ɵɵtextInterpolate3,'ɵɵtextInterpolate4':ɵɵtextInterpolate4,'ɵɵtextInterpolate5':ɵɵtextInterpolate5,'ɵɵtextInterpolate6':ɵɵtextInterpolate6,'ɵɵtextInterpolate7':ɵɵtextInterpolate7,'ɵɵtextInterpolate8':ɵɵtextInterpolate8,'ɵɵtextInterpolateV':ɵɵtextInterpolateV,'ɵɵi18n':ɵɵi18n,'ɵɵi18nAttributes':ɵɵi18nAttributes,'ɵɵi18nExp':ɵɵi18nExp,'ɵɵi18nStart':ɵɵi18nStart,'ɵɵi18nEnd':ɵɵi18nEnd,'ɵɵi18nApply':ɵɵi18nApply,'ɵɵi18nPostprocess':ɵɵi18nPostprocess,'ɵɵresolveWindow':ɵɵresolveWindow,'ɵɵresolveDocument':ɵɵresolveDocument,'ɵɵresolveBody':ɵɵresolveBody,'ɵɵsetComponentScope':ɵɵsetComponentScope,'ɵɵsetNgModuleScope':ɵɵsetNgModuleScope,'ɵɵsanitizeHtml':ɵɵsanitizeHtml,'ɵɵsanitizeStyle':ɵɵsanitizeStyle,'ɵɵdefaultStyleSanitizer':ɵɵdefaultStyleSanitizer,'ɵɵsanitizeResourceUrl':ɵɵsanitizeResourceUrl,'ɵɵsanitizeScript':ɵɵsanitizeScript,'ɵɵsanitizeUrl':ɵɵsanitizeUrl,'ɵɵsanitizeUrlOrResourceUrl':ɵɵsanitizeUrlOrResourceUrl};};/**
     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.
     *
     * This should be kept up to date with the public exports of @angular/core.
     */var angularCoreEnv=ɵ0$d();var jitOptions=null;function setJitOptions(options){if(jitOptions!==null){if(options.defaultEncapsulation!==jitOptions.defaultEncapsulation){ngDevMode&&console.error('Provided value for `defaultEncapsulation` can not be changed once it has been set.');return;}if(options.preserveWhitespaces!==jitOptions.preserveWhitespaces){ngDevMode&&console.error('Provided value for `preserveWhitespaces` can not be changed once it has been set.');return;}}jitOptions=options;}function getJitOptions(){return jitOptions;}function resetJitOptions(){jitOptions=null;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var EMPTY_ARRAY$5=[];var moduleQueue=[];/**
     * Enqueues moduleDef to be checked later to see if scope can be set on its
     * component declarations.
     */function enqueueModuleForDelayedScoping(moduleType,ngModule){moduleQueue.push({moduleType:moduleType,ngModule:ngModule});}var flushingModuleQueue=false;/**
     * Loops over queued module definitions, if a given module definition has all of its
     * declarations resolved, it dequeues that module definition and sets the scope on
     * its declarations.
     */function flushModuleScopingQueueAsMuchAsPossible(){if(!flushingModuleQueue){flushingModuleQueue=true;try{for(var i=moduleQueue.length-1;i>=0;i--){var _a=moduleQueue[i],moduleType=_a.moduleType,ngModule=_a.ngModule;if(ngModule.declarations&&ngModule.declarations.every(isResolvedDeclaration)){// dequeue
moduleQueue.splice(i,1);setScopeOnDeclaredComponents(moduleType,ngModule);}}}finally{flushingModuleQueue=false;}}}/**
     * Returns truthy if a declaration has resolved. If the declaration happens to be
     * an array of declarations, it will recurse to check each declaration in that array
     * (which may also be arrays).
     */function isResolvedDeclaration(declaration){if(Array.isArray(declaration)){return declaration.every(isResolvedDeclaration);}return!!resolveForwardRef(declaration);}/**
     * Compiles a module in JIT mode.
     *
     * This function automatically gets called when a class has a `@NgModule` decorator.
     */function compileNgModule(moduleType,ngModule){if(ngModule===void 0){ngModule={};}compileNgModuleDefs(moduleType,ngModule);// Because we don't know if all declarations have resolved yet at the moment the
// NgModule decorator is executing, we're enqueueing the setting of module scope
// on its declarations to be run at a later time when all declarations for the module,
// including forward refs, have resolved.
enqueueModuleForDelayedScoping(moduleType,ngModule);}/**
     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.
     *
     * It's possible to compile a module via this API which will allow duplicate declarations in its
     * root.
     */function compileNgModuleDefs(moduleType,ngModule,allowDuplicateDeclarationsInRoot){if(allowDuplicateDeclarationsInRoot===void 0){allowDuplicateDeclarationsInRoot=false;}ngDevMode&&assertDefined(moduleType,'Required value moduleType');ngDevMode&&assertDefined(ngModule,'Required value ngModule');var declarations=flatten(ngModule.declarations||EMPTY_ARRAY$5);var ngModuleDef=null;Object.defineProperty(moduleType,NG_MOD_DEF,{configurable:true,get:function get(){if(ngModuleDef===null){if(ngDevMode&&ngModule.imports&&ngModule.imports.indexOf(moduleType)>-1){// We need to assert this immediately, because allowing it to continue will cause it to
// go into an infinite loop before we've reached the point where we throw all the errors.
throw new Error("'"+stringifyForError(moduleType)+"' module can't import itself");}ngModuleDef=getCompilerFacade().compileNgModule(angularCoreEnv,"ng:///"+moduleType.name+"/\u0275mod.js",{type:moduleType,bootstrap:flatten(ngModule.bootstrap||EMPTY_ARRAY$5).map(resolveForwardRef),declarations:declarations.map(resolveForwardRef),imports:flatten(ngModule.imports||EMPTY_ARRAY$5).map(resolveForwardRef).map(expandModuleWithProviders),exports:flatten(ngModule.exports||EMPTY_ARRAY$5).map(resolveForwardRef).map(expandModuleWithProviders),schemas:ngModule.schemas?flatten(ngModule.schemas):null,id:ngModule.id||null});// Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime
// should verify that there are no unknown elements in a template. In AOT mode, that check
// happens at compile time and `schemas` information is not present on Component and Module
// defs after compilation (so the check doesn't happen the second time at runtime).
if(!ngModuleDef.schemas){ngModuleDef.schemas=[];}}return ngModuleDef;}});var ngInjectorDef=null;Object.defineProperty(moduleType,NG_INJ_DEF,{get:function get(){if(ngInjectorDef===null){ngDevMode&&verifySemanticsOfNgModuleDef(moduleType,allowDuplicateDeclarationsInRoot);var meta={name:moduleType.name,type:moduleType,deps:reflectDependencies(moduleType),providers:ngModule.providers||EMPTY_ARRAY$5,imports:[(ngModule.imports||EMPTY_ARRAY$5).map(resolveForwardRef),(ngModule.exports||EMPTY_ARRAY$5).map(resolveForwardRef)]};ngInjectorDef=getCompilerFacade().compileInjector(angularCoreEnv,"ng:///"+moduleType.name+"/\u0275inj.js",meta);}return ngInjectorDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function verifySemanticsOfNgModuleDef(moduleType,allowDuplicateDeclarationsInRoot,importingModule){if(verifiedNgModule.get(moduleType))return;verifiedNgModule.set(moduleType,true);moduleType=resolveForwardRef(moduleType);var ngModuleDef;if(importingModule){ngModuleDef=getNgModuleDef(moduleType);if(!ngModuleDef){throw new Error("Unexpected value '"+moduleType.name+"' imported by the module '"+importingModule.name+"'. Please add an @NgModule annotation.");}}else{ngModuleDef=getNgModuleDef(moduleType,true);}var errors=[];var declarations=maybeUnwrapFn(ngModuleDef.declarations);var imports=maybeUnwrapFn(ngModuleDef.imports);flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function(mod){verifySemanticsOfNgModuleImport(mod,moduleType);verifySemanticsOfNgModuleDef(mod,false,moduleType);});var exports=maybeUnwrapFn(ngModuleDef.exports);declarations.forEach(verifyDeclarationsHaveDefinitions);declarations.forEach(verifyDirectivesHaveSelector);var combinedDeclarations=__spread(declarations.map(resolveForwardRef),flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));exports.forEach(verifyExportsAreDeclaredOrReExported);declarations.forEach(function(decl){return verifyDeclarationIsUnique(decl,allowDuplicateDeclarationsInRoot);});declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);var ngModule=getAnnotation(moduleType,'NgModule');if(ngModule){ngModule.imports&&flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function(mod){verifySemanticsOfNgModuleImport(mod,moduleType);verifySemanticsOfNgModuleDef(mod,false,moduleType);});ngModule.bootstrap&&deepForEach(ngModule.bootstrap,verifyCorrectBootstrapType);ngModule.bootstrap&&deepForEach(ngModule.bootstrap,verifyComponentIsPartOfNgModule);ngModule.entryComponents&&deepForEach(ngModule.entryComponents,verifyComponentIsPartOfNgModule);}// Throw Error if any errors were detected.
if(errors.length){throw new Error(errors.join('\n'));}////////////////////////////////////////////////////////////////////////////////////////////////
function verifyDeclarationsHaveDefinitions(type){type=resolveForwardRef(type);var def=getComponentDef(type)||getDirectiveDef(type)||getPipeDef(type);if(!def){errors.push("Unexpected value '"+stringifyForError(type)+"' declared by the module '"+stringifyForError(moduleType)+"'. Please add a @Pipe/@Directive/@Component annotation.");}}function verifyDirectivesHaveSelector(type){type=resolveForwardRef(type);var def=getDirectiveDef(type);if(!getComponentDef(type)&&def&&def.selectors.length==0){errors.push("Directive "+stringifyForError(type)+" has no selector, please add it!");}}function verifyExportsAreDeclaredOrReExported(type){type=resolveForwardRef(type);var kind=getComponentDef(type)&&'component'||getDirectiveDef(type)&&'directive'||getPipeDef(type)&&'pipe';if(kind){// only checked if we are declared as Component, Directive, or Pipe
// Modules don't need to be declared or imported.
if(combinedDeclarations.lastIndexOf(type)===-1){// We are exporting something which we don't explicitly declare or import.
errors.push("Can't export "+kind+" "+stringifyForError(type)+" from "+stringifyForError(moduleType)+" as it was neither declared nor imported!");}}}function verifyDeclarationIsUnique(type,suppressErrors){type=resolveForwardRef(type);var existingModule=ownerNgModule.get(type);if(existingModule&&existingModule!==moduleType){if(!suppressErrors){var modules=[existingModule,moduleType].map(stringifyForError).sort();errors.push("Type "+stringifyForError(type)+" is part of the declarations of 2 modules: "+modules[0]+" and "+modules[1]+"! "+("Please consider moving "+stringifyForError(type)+" to a higher module that imports "+modules[0]+" and "+modules[1]+". ")+("You can also create a new NgModule that exports and includes "+stringifyForError(type)+" then import that NgModule in "+modules[0]+" and "+modules[1]+"."));}}else{// Mark type as having owner.
ownerNgModule.set(type,moduleType);}}function verifyComponentIsPartOfNgModule(type){type=resolveForwardRef(type);var existingModule=ownerNgModule.get(type);if(!existingModule){errors.push("Component "+stringifyForError(type)+" is not part of any NgModule or the module has not been imported into your module.");}}function verifyCorrectBootstrapType(type){type=resolveForwardRef(type);if(!getComponentDef(type)){errors.push(stringifyForError(type)+" cannot be used as an entry component.");}}function verifyComponentEntryComponentsIsPartOfNgModule(type){type=resolveForwardRef(type);if(getComponentDef(type)){// We know we are component
var component=getAnnotation(type,'Component');if(component&&component.entryComponents){deepForEach(component.entryComponents,verifyComponentIsPartOfNgModule);}}}function verifySemanticsOfNgModuleImport(type,importingModule){type=resolveForwardRef(type);if(getComponentDef(type)||getDirectiveDef(type)){throw new Error("Unexpected directive '"+type.name+"' imported by the module '"+importingModule.name+"'. Please add an @NgModule annotation.");}if(getPipeDef(type)){throw new Error("Unexpected pipe '"+type.name+"' imported by the module '"+importingModule.name+"'. Please add an @NgModule annotation.");}}}function unwrapModuleWithProvidersImports(typeOrWithProviders){typeOrWithProviders=resolveForwardRef(typeOrWithProviders);return typeOrWithProviders.ngModule||typeOrWithProviders;}function getAnnotation(type,name){var annotation=null;collect(type.__annotations__);collect(type.decorators);return annotation;function collect(annotations){if(annotations){annotations.forEach(readAnnotation);}}function readAnnotation(decorator){if(!annotation){var proto=Object.getPrototypeOf(decorator);if(proto.ngMetadataName==name){annotation=decorator;}else if(decorator.type){var proto_1=Object.getPrototypeOf(decorator.type);if(proto_1.ngMetadataName==name){annotation=decorator.args[0];}}}}}/**
     * Keep track of compiled components. This is needed because in tests we often want to compile the
     * same component with more than one NgModule. This would cause an error unless we reset which
     * NgModule the component belongs to. We keep the list of compiled components here so that the
     * TestBed can reset it later.
     */var ownerNgModule=new Map();var verifiedNgModule=new Map();function resetCompiledComponents(){ownerNgModule=new Map();verifiedNgModule=new Map();moduleQueue.length=0;}/**
     * Computes the combined declarations of explicit declarations, as well as declarations inherited by
     * traversing the exports of imported modules.
     * @param type
     */function computeCombinedExports(type){type=resolveForwardRef(type);var ngModuleDef=getNgModuleDef(type,true);return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function(type){var ngModuleDef=getNgModuleDef(type);if(ngModuleDef){verifySemanticsOfNgModuleDef(type,false);return computeCombinedExports(type);}else{return type;}})));}/**
     * Some declared components may be compiled asynchronously, and thus may not have their
     * ɵcmp set yet. If this is the case, then a reference to the module is written into
     * the `ngSelectorScope` property of the declared type.
     */function setScopeOnDeclaredComponents(moduleType,ngModule){var declarations=flatten(ngModule.declarations||EMPTY_ARRAY$5);var transitiveScopes=transitiveScopesFor(moduleType);declarations.forEach(function(declaration){if(declaration.hasOwnProperty(NG_COMP_DEF)){// A `ɵcmp` field exists - go ahead and patch the component directly.
var component=declaration;var componentDef=getComponentDef(component);patchComponentDefWithScope(componentDef,transitiveScopes);}else if(!declaration.hasOwnProperty(NG_DIR_DEF)&&!declaration.hasOwnProperty(NG_PIPE_DEF)){// Set `ngSelectorScope` for future reference when the component compilation finishes.
declaration.ngSelectorScope=moduleType;}});}/**
     * Patch the definition of a component with directives and pipes from the compilation scope of
     * a given module.
     */function patchComponentDefWithScope(componentDef,transitiveScopes){componentDef.directiveDefs=function(){return Array.from(transitiveScopes.compilation.directives).map(function(dir){return dir.hasOwnProperty(NG_COMP_DEF)?getComponentDef(dir):getDirectiveDef(dir);}).filter(function(def){return!!def;});};componentDef.pipeDefs=function(){return Array.from(transitiveScopes.compilation.pipes).map(function(pipe){return getPipeDef(pipe);});};componentDef.schemas=transitiveScopes.schemas;// Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we
// may face a problem where previously compiled defs available to a given Component/Directive
// are cached in TView and may become stale (in case any of these defs gets recompiled). In
// order to avoid this problem, we force fresh TView to be created.
componentDef.tView=null;}/**
     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.
     *
     * This operation is memoized and the result is cached on the module's definition. This function can
     * be called on modules with components that have not fully compiled yet, but the result should not
     * be used until they have.
     *
     * @param moduleType module that transitive scope should be calculated for.
     */function transitiveScopesFor(moduleType){if(!isNgModule(moduleType)){throw new Error(moduleType.name+" does not have a module def (\u0275mod property)");}var def=getNgModuleDef(moduleType);if(def.transitiveCompileScopes!==null){return def.transitiveCompileScopes;}var scopes={schemas:def.schemas||null,compilation:{directives:new Set(),pipes:new Set()},exported:{directives:new Set(),pipes:new Set()}};maybeUnwrapFn(def.imports).forEach(function(imported){var importedType=imported;if(!isNgModule(importedType)){throw new Error("Importing "+importedType.name+" which does not have a \u0275mod property");}// When this module imports another, the imported module's exported directives and pipes are
// added to the compilation scope of this module.
var importedScope=transitiveScopesFor(importedType);importedScope.exported.directives.forEach(function(entry){return scopes.compilation.directives.add(entry);});importedScope.exported.pipes.forEach(function(entry){return scopes.compilation.pipes.add(entry);});});maybeUnwrapFn(def.declarations).forEach(function(declared){var declaredWithDefs=declared;if(getPipeDef(declaredWithDefs)){scopes.compilation.pipes.add(declared);}else{// Either declared has a ɵcmp or ɵdir, or it's a component which hasn't
// had its template compiled yet. In either case, it gets added to the compilation's
// directives.
scopes.compilation.directives.add(declared);}});maybeUnwrapFn(def.exports).forEach(function(exported){var exportedType=exported;// Either the type is a module, a pipe, or a component/directive (which may not have a
// ɵcmp as it might be compiled asynchronously).
if(isNgModule(exportedType)){// When this module exports another, the exported module's exported directives and pipes are
// added to both the compilation and exported scopes of this module.
var exportedScope=transitiveScopesFor(exportedType);exportedScope.exported.directives.forEach(function(entry){scopes.compilation.directives.add(entry);scopes.exported.directives.add(entry);});exportedScope.exported.pipes.forEach(function(entry){scopes.compilation.pipes.add(entry);scopes.exported.pipes.add(entry);});}else if(getPipeDef(exportedType)){scopes.exported.pipes.add(exportedType);}else{scopes.exported.directives.add(exportedType);}});def.transitiveCompileScopes=scopes;return scopes;}function expandModuleWithProviders(value){if(isModuleWithProviders(value)){return value.ngModule;}return value;}function isModuleWithProviders(value){return value.ngModule!==undefined;}function isNgModule(value){return!!getNgModuleDef(value);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Compile an Angular component according to its decorator metadata, and patch the resulting
     * component def (ɵcmp) onto the component type.
     *
     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or
     * other resources, for example). In the event that compilation is not immediate, `compileComponent`
     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`
     * until the global queue has been resolved with a call to `resolveComponentResources`.
     */function compileComponent(type,metadata){// Initialize ngDevMode. This must be the first statement in compileComponent.
// See the `initNgDevMode` docstring for more information.
(typeof ngDevMode==='undefined'||ngDevMode)&&initNgDevMode();var ngComponentDef=null;// Metadata may have resources which need to be resolved.
maybeQueueResolutionOfComponentResources(type,metadata);// Note that we're using the same function as `Directive`, because that's only subset of metadata
// that we need to create the ngFactoryDef. We're avoiding using the component metadata
// because we'd have to resolve the asynchronous templates.
addDirectiveFactoryDef(type,metadata);Object.defineProperty(type,NG_COMP_DEF,{get:function get(){if(ngComponentDef===null){var compiler=getCompilerFacade();if(componentNeedsResolution(metadata)){var error=["Component '"+type.name+"' is not resolved:"];if(metadata.templateUrl){error.push(" - templateUrl: "+metadata.templateUrl);}if(metadata.styleUrls&&metadata.styleUrls.length){error.push(" - styleUrls: "+JSON.stringify(metadata.styleUrls));}error.push("Did you run and wait for 'resolveComponentResources()'?");throw new Error(error.join('\n'));}// This const was called `jitOptions` previously but had to be renamed to `options` because
// of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.
// This bug was investigated in https://github.com/angular/angular-cli/issues/17264.
// We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.
var options=getJitOptions();var preserveWhitespaces=metadata.preserveWhitespaces;if(preserveWhitespaces===undefined){if(options!==null&&options.preserveWhitespaces!==undefined){preserveWhitespaces=options.preserveWhitespaces;}else{preserveWhitespaces=false;}}var encapsulation=metadata.encapsulation;if(encapsulation===undefined){if(options!==null&&options.defaultEncapsulation!==undefined){encapsulation=options.defaultEncapsulation;}else{encapsulation=exports.ViewEncapsulation.Emulated;}}var templateUrl=metadata.templateUrl||"ng:///"+type.name+"/template.html";var meta=_assign4(_assign4({},directiveMetadata(type,metadata)),{typeSourceSpan:compiler.createParseSourceSpan('Component',type.name,templateUrl),template:metadata.template||'',preserveWhitespaces:preserveWhitespaces,styles:metadata.styles||EMPTY_ARRAY,animations:metadata.animations,directives:[],changeDetection:metadata.changeDetection,pipes:new Map(),encapsulation:encapsulation,interpolation:metadata.interpolation,viewProviders:metadata.viewProviders||null});if(meta.usesInheritance){addDirectiveDefToUndecoratedParents(type);}ngComponentDef=compiler.compileComponent(angularCoreEnv,templateUrl,meta);// When NgModule decorator executed, we enqueued the module definition such that
// it would only dequeue and add itself as module scope to all of its declarations,
// but only if  if all of its declarations had resolved. This call runs the check
// to see if any modules that are in the queue can be dequeued and add scope to
// their declarations.
flushModuleScopingQueueAsMuchAsPossible();// If component compilation is async, then the @NgModule annotation which declares the
// component may execute and set an ngSelectorScope property on the component type. This
// allows the component to patch itself with directiveDefs from the module after it
// finishes compiling.
if(hasSelectorScope(type)){var scopes=transitiveScopesFor(type.ngSelectorScope);patchComponentDefWithScope(ngComponentDef,scopes);}}return ngComponentDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function hasSelectorScope(component){return component.ngSelectorScope!==undefined;}/**
     * Compile an Angular directive according to its decorator metadata, and patch the resulting
     * directive def onto the component type.
     *
     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which
     * will resolve when compilation completes and the directive becomes usable.
     */function compileDirective(type,directive){var ngDirectiveDef=null;addDirectiveFactoryDef(type,directive||{});Object.defineProperty(type,NG_DIR_DEF,{get:function get(){if(ngDirectiveDef===null){// `directive` can be null in the case of abstract directives as a base class
// that use `@Directive()` with no selector. In that case, pass empty object to the
// `directiveMetadata` function instead of null.
var meta=getDirectiveMetadata(type,directive||{});ngDirectiveDef=getCompilerFacade().compileDirective(angularCoreEnv,meta.sourceMapUrl,meta.metadata);}return ngDirectiveDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function getDirectiveMetadata(type,metadata){var name=type&&type.name;var sourceMapUrl="ng:///"+name+"/\u0275dir.js";var compiler=getCompilerFacade();var facade=directiveMetadata(type,metadata);facade.typeSourceSpan=compiler.createParseSourceSpan('Directive',name,sourceMapUrl);if(facade.usesInheritance){addDirectiveDefToUndecoratedParents(type);}return{metadata:facade,sourceMapUrl:sourceMapUrl};}function addDirectiveFactoryDef(type,metadata){var ngFactoryDef=null;Object.defineProperty(type,NG_FACTORY_DEF,{get:function get(){if(ngFactoryDef===null){var meta=getDirectiveMetadata(type,metadata);var compiler=getCompilerFacade();ngFactoryDef=compiler.compileFactory(angularCoreEnv,"ng:///"+type.name+"/\u0275fac.js",_assign4(_assign4({},meta.metadata),{injectFn:'directiveInject',target:compiler.R3FactoryTarget.Directive}));}return ngFactoryDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function extendsDirectlyFromObject(type){return Object.getPrototypeOf(type.prototype)===Object.prototype;}/**
     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a
     * `Component`).
     */function directiveMetadata(type,metadata){// Reflect inputs and outputs.
var reflect=getReflect();var propMetadata=reflect.ownPropMetadata(type);return{name:type.name,type:type,typeArgumentCount:0,selector:metadata.selector!==undefined?metadata.selector:null,deps:reflectDependencies(type),host:metadata.host||EMPTY_OBJ,propMetadata:propMetadata,inputs:metadata.inputs||EMPTY_ARRAY,outputs:metadata.outputs||EMPTY_ARRAY,queries:extractQueriesMetadata(type,propMetadata,isContentQuery),lifecycle:{usesOnChanges:reflect.hasLifecycleHook(type,'ngOnChanges')},typeSourceSpan:null,usesInheritance:!extendsDirectlyFromObject(type),exportAs:extractExportAs(metadata.exportAs),providers:metadata.providers||null,viewQueries:extractQueriesMetadata(type,propMetadata,isViewQuery)};}/**
     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.
     */function addDirectiveDefToUndecoratedParents(type){var objPrototype=Object.prototype;var parent=Object.getPrototypeOf(type.prototype).constructor;// Go up the prototype until we hit `Object`.
while(parent&&parent!==objPrototype){// Since inheritance works if the class was annotated already, we only need to add
// the def if there are no annotations and the def hasn't been created already.
if(!getDirectiveDef(parent)&&!getComponentDef(parent)&&shouldAddAbstractDirective(parent)){compileDirective(parent,null);}parent=Object.getPrototypeOf(parent);}}function convertToR3QueryPredicate(selector){return typeof selector==='string'?splitByComma(selector):resolveForwardRef(selector);}function convertToR3QueryMetadata(propertyName,ann){return{propertyName:propertyName,predicate:convertToR3QueryPredicate(ann.selector),descendants:ann.descendants,first:ann.first,read:ann.read?ann.read:null,"static":!!ann["static"]};}function extractQueriesMetadata(type,propMetadata,isQueryAnn){var queriesMeta=[];var _loop_1=function _loop_1(field){if(propMetadata.hasOwnProperty(field)){var annotations_1=propMetadata[field];annotations_1.forEach(function(ann){if(isQueryAnn(ann)){if(!ann.selector){throw new Error("Can't construct a query for the property \""+field+"\" of "+("\""+stringifyForError(type)+"\" since the query selector wasn't defined."));}if(annotations_1.some(isInputAnnotation)){throw new Error("Cannot combine @Input decorators with query decorators");}queriesMeta.push(convertToR3QueryMetadata(field,ann));}});}};for(var field in propMetadata){_loop_1(field);}return queriesMeta;}function extractExportAs(exportAs){return exportAs===undefined?null:splitByComma(exportAs);}function isContentQuery(value){var name=value.ngMetadataName;return name==='ContentChild'||name==='ContentChildren';}function isViewQuery(value){var name=value.ngMetadataName;return name==='ViewChild'||name==='ViewChildren';}function isInputAnnotation(value){return value.ngMetadataName==='Input';}function splitByComma(value){return value.split(',').map(function(piece){return piece.trim();});}var LIFECYCLE_HOOKS=['ngOnChanges','ngOnInit','ngOnDestroy','ngDoCheck','ngAfterViewInit','ngAfterViewChecked','ngAfterContentInit','ngAfterContentChecked'];function shouldAddAbstractDirective(type){var reflect=getReflect();if(LIFECYCLE_HOOKS.some(function(hookName){return reflect.hasLifecycleHook(type,hookName);})){return true;}var propMetadata=reflect.propMetadata(type);for(var field in propMetadata){var annotations=propMetadata[field];for(var i=0;i<annotations.length;i++){var current=annotations[i];var metadataName=current.ngMetadataName;if(isInputAnnotation(current)||isContentQuery(current)||isViewQuery(current)||metadataName==='Output'||metadataName==='HostBinding'||metadataName==='HostListener'){return true;}}}return false;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function compilePipe(type,meta){var ngPipeDef=null;var ngFactoryDef=null;Object.defineProperty(type,NG_FACTORY_DEF,{get:function get(){if(ngFactoryDef===null){var metadata=getPipeMetadata(type,meta);var compiler=getCompilerFacade();ngFactoryDef=compiler.compileFactory(angularCoreEnv,"ng:///"+metadata.name+"/\u0275fac.js",_assign4(_assign4({},metadata),{injectFn:'directiveInject',target:compiler.R3FactoryTarget.Pipe}));}return ngFactoryDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});Object.defineProperty(type,NG_PIPE_DEF,{get:function get(){if(ngPipeDef===null){var metadata=getPipeMetadata(type,meta);ngPipeDef=getCompilerFacade().compilePipe(angularCoreEnv,"ng:///"+metadata.name+"/\u0275pipe.js",metadata);}return ngPipeDef;},// Make the property configurable in dev mode to allow overriding in tests
configurable:!!ngDevMode});}function getPipeMetadata(type,meta){return{type:type,typeArgumentCount:0,name:type.name,deps:reflectDependencies(type),pipeName:meta.name,pure:meta.pure!==undefined?meta.pure:true};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$e=function ɵ0$e(dir){if(dir===void 0){dir={};}return dir;},ɵ1$3=function ɵ1$3(type,meta){return SWITCH_COMPILE_DIRECTIVE(type,meta);};/**
     * Type of the Directive metadata.
     *
     * @publicApi
     */var Directive=makeDecorator('Directive',ɵ0$e,undefined,undefined,ɵ1$3);var ɵ2$1=function ɵ2$1(c){if(c===void 0){c={};}return _assign4({changeDetection:exports.ChangeDetectionStrategy.Default},c);},ɵ3$1=function ɵ3$1(type,meta){return SWITCH_COMPILE_COMPONENT(type,meta);};/**
     * Component decorator and metadata.
     *
     * @Annotation
     * @publicApi
     */var Component=makeDecorator('Component',ɵ2$1,Directive,undefined,ɵ3$1);var ɵ4=function ɵ4(p){return _assign4({pure:true},p);},ɵ5=function ɵ5(type,meta){return SWITCH_COMPILE_PIPE(type,meta);};/**
     * @Annotation
     * @publicApi
     */var Pipe=makeDecorator('Pipe',ɵ4,undefined,undefined,ɵ5);var ɵ6=function ɵ6(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};};/**
     * @Annotation
     * @publicApi
     */var Input=makePropDecorator('Input',ɵ6);var ɵ7=function ɵ7(bindingPropertyName){return{bindingPropertyName:bindingPropertyName};};/**
     * @Annotation
     * @publicApi
     */var Output=makePropDecorator('Output',ɵ7);var ɵ8=function ɵ8(hostPropertyName){return{hostPropertyName:hostPropertyName};};/**
     * @Annotation
     * @publicApi
     */var HostBinding=makePropDecorator('HostBinding',ɵ8);var ɵ9=function ɵ9(eventName,args){return{eventName:eventName,args:args};};/**
     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.
     * Angular invokes the supplied handler method when the host element emits the specified event,
     * and updates the bound element with the result.
     *
     * If the handler method returns false, applies `preventDefault` on the bound element.
     *
     * @usageNotes
     *
     * The following example declares a directive
     * that attaches a click listener to a button and counts clicks.
     *
     * ```ts
     * @Directive({selector: 'button[counting]'})
     * class CountClicks {
     *   numberOfClicks = 0;
     *
     *   @HostListener('click', ['$event.target'])
     *   onClick(btn) {
     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);
     *  }
     * }
     *
     * @Component({
     *   selector: 'app',
     *   template: '<button counting>Increment</button>',
     * })
     * class App {}
     *
     * ```
     *
     * The following example registers another DOM event handler that listens for key-press events.
     * ``` ts
     * import { HostListener, Component } from "@angular/core";
     *
     * @Component({
     *   selector: 'app',
     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to
     * increment the counter.
     *   <button (click)="resetCounter()">Reset Counter</button>`
     * })
     * class AppComponent {
     *   counter = 0;
     *   @HostListener('window:keydown', ['$event'])
     *   handleKeyDown(event: KeyboardEvent) {
     *     this.counter++;
     *   }
     *   resetCounter() {
     *     this.counter = 0;
     *   }
     * }
     * ```
     *
     * @Annotation
     * @publicApi
     */var HostListener=makePropDecorator('HostListener',ɵ9);var SWITCH_COMPILE_COMPONENT__POST_R3__=compileComponent;var SWITCH_COMPILE_DIRECTIVE__POST_R3__=compileDirective;var SWITCH_COMPILE_PIPE__POST_R3__=compilePipe;var SWITCH_COMPILE_COMPONENT__PRE_R3__=noop;var SWITCH_COMPILE_DIRECTIVE__PRE_R3__=noop;var SWITCH_COMPILE_PIPE__PRE_R3__=noop;var SWITCH_COMPILE_COMPONENT=SWITCH_COMPILE_COMPONENT__PRE_R3__;var SWITCH_COMPILE_DIRECTIVE=SWITCH_COMPILE_DIRECTIVE__PRE_R3__;var SWITCH_COMPILE_PIPE=SWITCH_COMPILE_PIPE__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$f=function ɵ0$f(ngModule){return ngModule;},ɵ1$4=/**
     * Decorator that marks the following class as an NgModule, and supplies
     * configuration metadata for it.
     *
     * * The `declarations` and `entryComponents` options configure the compiler
     * with information about what belongs to the NgModule.
     * * The `providers` options configures the NgModule's injector to provide
     * dependencies the NgModule members.
     * * The `imports` and `exports` options bring in members from other modules, and make
     * this module's members available to others.
     */function ɵ1$4(type,meta){return SWITCH_COMPILE_NGMODULE(type,meta);};/**
     * @Annotation
     * @publicApi
     */var NgModule=makeDecorator('NgModule',ɵ0$f,undefined,undefined,ɵ1$4);function preR3NgModuleCompile(moduleType,metadata){var imports=metadata&&metadata.imports||[];if(metadata&&metadata.exports){imports=__spread(imports,[metadata.exports]);}moduleType.ɵinj=ɵɵdefineInjector({factory:convertInjectableProviderToFactory(moduleType,{useClass:moduleType}),providers:metadata&&metadata.providers,imports:imports});}var SWITCH_COMPILE_NGMODULE__POST_R3__=compileNgModule;var SWITCH_COMPILE_NGMODULE__PRE_R3__=preR3NgModuleCompile;var SWITCH_COMPILE_NGMODULE=SWITCH_COMPILE_NGMODULE__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An injection token that allows you to provide one or more initialization functions.
     * These function are injected at application startup and executed during
     * app initialization. If any of these functions returns a Promise, initialization
     * does not complete until the Promise is resolved.
     *
     * You can, for example, create a factory function that loads language data
     * or an external configuration, and provide that function to the `APP_INITIALIZER` token.
     * That way, the function is executed during the application bootstrap process,
     * and the needed data is available on startup.
     *
     * @publicApi
     */var APP_INITIALIZER=new InjectionToken('Application Initializer');/**
     * A class that reflects the state of running {@link APP_INITIALIZER}s.
     *
     * @publicApi
     */var ApplicationInitStatus=/** @class */function(){function ApplicationInitStatus(appInits){var _this=this;this.appInits=appInits;this.initialized=false;this.done=false;this.donePromise=new Promise(function(res,rej){_this.resolve=res;_this.reject=rej;});}/** @internal */ApplicationInitStatus.prototype.runInitializers=function(){var _this=this;if(this.initialized){return;}var asyncInitPromises=[];var complete=function complete(){_this.done=true;_this.resolve();};if(this.appInits){for(var i=0;i<this.appInits.length;i++){var initResult=this.appInits[i]();if(isPromise(initResult)){asyncInitPromises.push(initResult);}}}Promise.all(asyncInitPromises).then(function(){complete();})["catch"](function(e){_this.reject(e);});if(asyncInitPromises.length===0){complete();}this.initialized=true;};ApplicationInitStatus=__decorate([Injectable(),__param(0,Inject(APP_INITIALIZER)),__param(0,Optional()),__metadata("design:paramtypes",[Array])],ApplicationInitStatus);return ApplicationInitStatus;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * A DI Token representing a unique string id assigned to the application by Angular and used
     * primarily for prefixing application attributes and CSS styles when
     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.
     *
     * If you need to avoid randomly generated value to be used as an application id, you can provide
     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}
     * using this token.
     * @publicApi
     */var APP_ID=new InjectionToken('AppId');function _appIdRandomProviderFactory(){return""+_randomChar()+_randomChar()+_randomChar();}/**
     * Providers that will generate a random APP_ID_TOKEN.
     * @publicApi
     */var APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:[]};function _randomChar(){return String.fromCharCode(97+Math.floor(Math.random()*25));}/**
     * A function that will be executed when a platform is initialized.
     * @publicApi
     */var PLATFORM_INITIALIZER=new InjectionToken('Platform Initializer');/**
     * A token that indicates an opaque platform id.
     * @publicApi
     */var PLATFORM_ID=new InjectionToken('Platform ID');/**
     * All callbacks provided via this token will be called for every component that is bootstrapped.
     * Signature of the callback:
     *
     * `(componentRef: ComponentRef) => void`.
     *
     * @publicApi
     */var APP_BOOTSTRAP_LISTENER=new InjectionToken('appBootstrapListener');/**
     * A token which indicates the root directory of the application
     * @publicApi
     */var PACKAGE_ROOT_URL=new InjectionToken('Application Packages Root URL');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Console=/** @class */function(){function Console(){}Console.prototype.log=function(message){// tslint:disable-next-line:no-console
console.log(message);};// Note: for reporting errors use `DOM.logError()` as it is platform specific
Console.prototype.warn=function(message){// tslint:disable-next-line:no-console
console.warn(message);};Console=__decorate([Injectable()],Console);return Console;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provide this token to set the locale of your application.
     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,
     * DecimalPipe and PercentPipe) and by ICU expressions.
     *
     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * import { LOCALE_ID } from '@angular/core';
     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
     * import { AppModule } from './app/app.module';
     *
     * platformBrowserDynamic().bootstrapModule(AppModule, {
     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]
     * });
     * ```
     *
     * @publicApi
     */var LOCALE_ID$1=new InjectionToken('LocaleId');/**
     * Provide this token to set the default currency code your application uses for
     * CurrencyPipe when there is no currency code passed into it. This is only used by
     * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.
     *
     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.
     *
     * <div class="alert is-helpful">
     *
     * **Deprecation notice:**
     *
     * The default currency code is currently always `USD` but this is deprecated from v9.
     *
     * **In v10 the default currency code will be taken from the current locale.**
     *
     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in
     * your application `NgModule`:
     *
     * ```ts
     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}
     * ```
     *
     * </div>
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
     * import { AppModule } from './app/app.module';
     *
     * platformBrowserDynamic().bootstrapModule(AppModule, {
     *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]
     * });
     * ```
     *
     * @publicApi
     */var DEFAULT_CURRENCY_CODE=new InjectionToken('DefaultCurrencyCode');/**
     * Use this token at bootstrap to provide the content of your translation file (`xtb`,
     * `xlf` or `xlf2`) when you want to translate your application in another language.
     *
     * See the [i18n guide](guide/i18n#merge) for more information.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * import { TRANSLATIONS } from '@angular/core';
     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
     * import { AppModule } from './app/app.module';
     *
     * // content of your translation file
     * const translations = '....';
     *
     * platformBrowserDynamic().bootstrapModule(AppModule, {
     *   providers: [{provide: TRANSLATIONS, useValue: translations }]
     * });
     * ```
     *
     * @publicApi
     */var TRANSLATIONS=new InjectionToken('Translations');/**
     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,
     * `xlf` or `xlf2`.
     *
     * See the [i18n guide](guide/i18n#merge) for more information.
     *
     * @usageNotes
     * ### Example
     *
     * ```typescript
     * import { TRANSLATIONS_FORMAT } from '@angular/core';
     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
     * import { AppModule } from './app/app.module';
     *
     * platformBrowserDynamic().bootstrapModule(AppModule, {
     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]
     * });
     * ```
     *
     * @publicApi
     */var TRANSLATIONS_FORMAT=new InjectionToken('TranslationsFormat');(function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy["Error"]=0]="Error";MissingTranslationStrategy[MissingTranslationStrategy["Warning"]=1]="Warning";MissingTranslationStrategy[MissingTranslationStrategy["Ignore"]=2]="Ignore";})(exports.MissingTranslationStrategy||(exports.MissingTranslationStrategy={}));/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SWITCH_IVY_ENABLED__POST_R3__=true;var SWITCH_IVY_ENABLED__PRE_R3__=false;var ivyEnabled=SWITCH_IVY_ENABLED__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Combination of NgModuleFactory and ComponentFactorys.
     *
     * @publicApi
     */var ModuleWithComponentFactories=/** @class */function(){function ModuleWithComponentFactories(ngModuleFactory,componentFactories){this.ngModuleFactory=ngModuleFactory;this.componentFactories=componentFactories;}return ModuleWithComponentFactories;}();function _throwError(){throw new Error("Runtime compiler is not loaded");}var Compiler_compileModuleSync__PRE_R3__=_throwError;var Compiler_compileModuleSync__POST_R3__=function Compiler_compileModuleSync__POST_R3__(moduleType){return new NgModuleFactory$1(moduleType);};var Compiler_compileModuleSync=Compiler_compileModuleSync__PRE_R3__;var Compiler_compileModuleAsync__PRE_R3__=_throwError;var Compiler_compileModuleAsync__POST_R3__=function Compiler_compileModuleAsync__POST_R3__(moduleType){return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));};var Compiler_compileModuleAsync=Compiler_compileModuleAsync__PRE_R3__;var Compiler_compileModuleAndAllComponentsSync__PRE_R3__=_throwError;var Compiler_compileModuleAndAllComponentsSync__POST_R3__=function Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType){var ngModuleFactory=Compiler_compileModuleSync__POST_R3__(moduleType);var moduleDef=getNgModuleDef(moduleType);var componentFactories=maybeUnwrapFn(moduleDef.declarations).reduce(function(factories,declaration){var componentDef=getComponentDef(declaration);componentDef&&factories.push(new ComponentFactory$1(componentDef));return factories;},[]);return new ModuleWithComponentFactories(ngModuleFactory,componentFactories);};var Compiler_compileModuleAndAllComponentsSync=Compiler_compileModuleAndAllComponentsSync__PRE_R3__;var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__=_throwError;var Compiler_compileModuleAndAllComponentsAsync__POST_R3__=function Compiler_compileModuleAndAllComponentsAsync__POST_R3__(moduleType){return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));};var Compiler_compileModuleAndAllComponentsAsync=Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;/**
     * Low-level service for running the angular compiler during runtime
     * to create {@link ComponentFactory}s, which
     * can later be used to create and render a Component instance.
     *
     * Each `@NgModule` provides an own `Compiler` to its injector,
     * that will use the directives/pipes of the ng module for compilation
     * of components.
     *
     * @publicApi
     */var Compiler=/** @class */function(){function Compiler(){/**
             * Compiles the given NgModule and all of its components. All templates of the components listed
             * in `entryComponents` have to be inlined.
             */this.compileModuleSync=Compiler_compileModuleSync;/**
             * Compiles the given NgModule and all of its components
             */this.compileModuleAsync=Compiler_compileModuleAsync;/**
             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.
             */this.compileModuleAndAllComponentsSync=Compiler_compileModuleAndAllComponentsSync;/**
             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.
             */this.compileModuleAndAllComponentsAsync=Compiler_compileModuleAndAllComponentsAsync;}/**
         * Clears all caches.
         */Compiler.prototype.clearCache=function(){};/**
         * Clears the cache for the given component/ngModule.
         */Compiler.prototype.clearCacheFor=function(type){};/**
         * Returns the id for a given NgModule, if one is defined and known to the compiler.
         */Compiler.prototype.getModuleId=function(moduleType){return undefined;};Compiler=__decorate([Injectable()],Compiler);return Compiler;}();/**
     * Token to provide CompilerOptions in the platform injector.
     *
     * @publicApi
     */var COMPILER_OPTIONS=new InjectionToken('compilerOptions');/**
     * A factory for creating a Compiler
     *
     * @publicApi
     */var CompilerFactory=/** @class */function(){function CompilerFactory(){}return CompilerFactory;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var promise=function(){return Promise.resolve(0);}();function scheduleMicroTask(fn){if(typeof Zone==='undefined'){// use promise to schedule microTask instead of use Zone
promise.then(function(){fn&&fn.apply(null,null);});}else{Zone.current.scheduleMicroTask('scheduleMicrotask',fn);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function getNativeRequestAnimationFrame(){var nativeRequestAnimationFrame=_global['requestAnimationFrame'];var nativeCancelAnimationFrame=_global['cancelAnimationFrame'];if(typeof Zone!=='undefined'&&nativeRequestAnimationFrame&&nativeCancelAnimationFrame){// use unpatched version of requestAnimationFrame(native delegate) if possible
// to avoid another Change detection
var unpatchedRequestAnimationFrame=nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];if(unpatchedRequestAnimationFrame){nativeRequestAnimationFrame=unpatchedRequestAnimationFrame;}var unpatchedCancelAnimationFrame=nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];if(unpatchedCancelAnimationFrame){nativeCancelAnimationFrame=unpatchedCancelAnimationFrame;}}return{nativeRequestAnimationFrame:nativeRequestAnimationFrame,nativeCancelAnimationFrame:nativeCancelAnimationFrame};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An injectable service for executing work inside or outside of the Angular zone.
     *
     * The most common use of this service is to optimize performance when starting a work consisting of
     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks
     * can reenter the Angular zone via {@link #run}.
     *
     * <!-- TODO: add/fix links to:
     *   - docs explaining zones and the use of zones in Angular and change-detection
     *   - link to runOutsideAngular/run (throughout this file!)
     *   -->
     *
     * @usageNotes
     * ### Example
     *
     * ```
     * import {Component, NgZone} from '@angular/core';
     * import {NgIf} from '@angular/common';
     *
     * @Component({
     *   selector: 'ng-zone-demo',
     *   template: `
     *     <h2>Demo: NgZone</h2>
     *
     *     <p>Progress: {{progress}}%</p>
     *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
     *
     *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
     *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
     *   `,
     * })
     * export class NgZoneDemo {
     *   progress: number = 0;
     *   label: string;
     *
     *   constructor(private _ngZone: NgZone) {}
     *
     *   // Loop inside the Angular zone
     *   // so the UI DOES refresh after each setTimeout cycle
     *   processWithinAngularZone() {
     *     this.label = 'inside';
     *     this.progress = 0;
     *     this._increaseProgress(() => console.log('Inside Done!'));
     *   }
     *
     *   // Loop outside of the Angular zone
     *   // so the UI DOES NOT refresh after each setTimeout cycle
     *   processOutsideOfAngularZone() {
     *     this.label = 'outside';
     *     this.progress = 0;
     *     this._ngZone.runOutsideAngular(() => {
     *       this._increaseProgress(() => {
     *         // reenter the Angular zone and display done
     *         this._ngZone.run(() => { console.log('Outside Done!'); });
     *       });
     *     });
     *   }
     *
     *   _increaseProgress(doneCallback: () => void) {
     *     this.progress += 1;
     *     console.log(`Current progress: ${this.progress}%`);
     *
     *     if (this.progress < 100) {
     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);
     *     } else {
     *       doneCallback();
     *     }
     *   }
     * }
     * ```
     *
     * @publicApi
     */var NgZone=/** @class */function(){function NgZone(_a){var _b=_a.enableLongStackTrace,enableLongStackTrace=_b===void 0?false:_b,_c=_a.shouldCoalesceEventChangeDetection,shouldCoalesceEventChangeDetection=_c===void 0?false:_c;this.hasPendingMacrotasks=false;this.hasPendingMicrotasks=false;/**
             * Whether there are no outstanding microtasks or macrotasks.
             */this.isStable=true;/**
             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
             */this.onUnstable=new EventEmitter(false);/**
             * Notifies when there is no more microtasks enqueued in the current VM Turn.
             * This is a hint for Angular to do change detection, which may enqueue more microtasks.
             * For this reason this event can fire multiple times per VM Turn.
             */this.onMicrotaskEmpty=new EventEmitter(false);/**
             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
             * implies we are about to relinquish VM turn.
             * This event gets called just once.
             */this.onStable=new EventEmitter(false);/**
             * Notifies that an error has been delivered.
             */this.onError=new EventEmitter(false);if(typeof Zone=='undefined'){throw new Error("In this configuration Angular requires Zone.js");}Zone.assertZonePatched();var self=this;self._nesting=0;self._outer=self._inner=Zone.current;if(Zone['wtfZoneSpec']){self._inner=self._inner.fork(Zone['wtfZoneSpec']);}if(Zone['TaskTrackingZoneSpec']){self._inner=self._inner.fork(new Zone['TaskTrackingZoneSpec']());}if(enableLongStackTrace&&Zone['longStackTraceZoneSpec']){self._inner=self._inner.fork(Zone['longStackTraceZoneSpec']);}self.shouldCoalesceEventChangeDetection=shouldCoalesceEventChangeDetection;self.lastRequestAnimationFrameId=-1;self.nativeRequestAnimationFrame=getNativeRequestAnimationFrame().nativeRequestAnimationFrame;forkInnerZoneWithAngularBehavior(self);}NgZone.isInAngularZone=function(){return Zone.current.get('isAngularZone')===true;};NgZone.assertInAngularZone=function(){if(!NgZone.isInAngularZone()){throw new Error('Expected to be in Angular Zone, but it is not!');}};NgZone.assertNotInAngularZone=function(){if(NgZone.isInAngularZone()){throw new Error('Expected to not be in Angular Zone, but it is!');}};/**
         * Executes the `fn` function synchronously within the Angular zone and returns value returned by
         * the function.
         *
         * Running functions via `run` allows you to reenter Angular zone from a task that was executed
         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
         *
         * Any future tasks or microtasks scheduled from within this function will continue executing from
         * within the Angular zone.
         *
         * If a synchronous error happens it will be rethrown and not reported via `onError`.
         */NgZone.prototype.run=function(fn,applyThis,applyArgs){return this._inner.run(fn,applyThis,applyArgs);};/**
         * Executes the `fn` function synchronously within the Angular zone as a task and returns value
         * returned by the function.
         *
         * Running functions via `run` allows you to reenter Angular zone from a task that was executed
         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).
         *
         * Any future tasks or microtasks scheduled from within this function will continue executing from
         * within the Angular zone.
         *
         * If a synchronous error happens it will be rethrown and not reported via `onError`.
         */NgZone.prototype.runTask=function(fn,applyThis,applyArgs,name){var zone=this._inner;var task=zone.scheduleEventTask('NgZoneEvent: '+name,fn,EMPTY_PAYLOAD,noop$1,noop$1);try{return zone.runTask(task,applyThis,applyArgs);}finally{zone.cancelTask(task);}};/**
         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
         * rethrown.
         */NgZone.prototype.runGuarded=function(fn,applyThis,applyArgs){return this._inner.runGuarded(fn,applyThis,applyArgs);};/**
         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
         * the function.
         *
         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do
         * work that
         * doesn't trigger Angular change-detection or is subject to Angular's error handling.
         *
         * Any future tasks or microtasks scheduled from within this function will continue executing from
         * outside of the Angular zone.
         *
         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.
         */NgZone.prototype.runOutsideAngular=function(fn){return this._outer.run(fn);};return NgZone;}();function noop$1(){}var EMPTY_PAYLOAD={};function checkStable(zone){if(zone._nesting==0&&!zone.hasPendingMicrotasks&&!zone.isStable){try{zone._nesting++;zone.onMicrotaskEmpty.emit(null);}finally{zone._nesting--;if(!zone.hasPendingMicrotasks){try{zone.runOutsideAngular(function(){return zone.onStable.emit(null);});}finally{zone.isStable=true;}}}}}function delayChangeDetectionForEvents(zone){if(zone.lastRequestAnimationFrameId!==-1){return;}zone.lastRequestAnimationFrameId=zone.nativeRequestAnimationFrame.call(_global,function(){zone.lastRequestAnimationFrameId=-1;updateMicroTaskStatus(zone);checkStable(zone);});updateMicroTaskStatus(zone);}function forkInnerZoneWithAngularBehavior(zone){var delayChangeDetectionForEventsDelegate=function delayChangeDetectionForEventsDelegate(){delayChangeDetectionForEvents(zone);};var maybeDelayChangeDetection=!!zone.shouldCoalesceEventChangeDetection&&zone.nativeRequestAnimationFrame&&delayChangeDetectionForEventsDelegate;zone._inner=zone._inner.fork({name:'angular',properties:{'isAngularZone':true,'maybeDelayChangeDetection':maybeDelayChangeDetection},onInvokeTask:function onInvokeTask(delegate,current,target,task,applyThis,applyArgs){try{onEnter(zone);return delegate.invokeTask(target,task,applyThis,applyArgs);}finally{if(maybeDelayChangeDetection&&task.type==='eventTask'){maybeDelayChangeDetection();}onLeave(zone);}},onInvoke:function onInvoke(delegate,current,target,callback,applyThis,applyArgs,source){try{onEnter(zone);return delegate.invoke(target,callback,applyThis,applyArgs,source);}finally{onLeave(zone);}},onHasTask:function onHasTask(delegate,current,target,hasTaskState){delegate.hasTask(target,hasTaskState);if(current===target){// We are only interested in hasTask events which originate from our zone
// (A child hasTask event is not interesting to us)
if(hasTaskState.change=='microTask'){zone._hasPendingMicrotasks=hasTaskState.microTask;updateMicroTaskStatus(zone);checkStable(zone);}else if(hasTaskState.change=='macroTask'){zone.hasPendingMacrotasks=hasTaskState.macroTask;}}},onHandleError:function onHandleError(delegate,current,target,error){delegate.handleError(target,error);zone.runOutsideAngular(function(){return zone.onError.emit(error);});return false;}});}function updateMicroTaskStatus(zone){if(zone._hasPendingMicrotasks||zone.shouldCoalesceEventChangeDetection&&zone.lastRequestAnimationFrameId!==-1){zone.hasPendingMicrotasks=true;}else{zone.hasPendingMicrotasks=false;}}function onEnter(zone){zone._nesting++;if(zone.isStable){zone.isStable=false;zone.onUnstable.emit(null);}}function onLeave(zone){zone._nesting--;checkStable(zone);}/**
     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls
     * to framework to perform rendering.
     */var NoopNgZone=/** @class */function(){function NoopNgZone(){this.hasPendingMicrotasks=false;this.hasPendingMacrotasks=false;this.isStable=true;this.onUnstable=new EventEmitter();this.onMicrotaskEmpty=new EventEmitter();this.onStable=new EventEmitter();this.onError=new EventEmitter();}NoopNgZone.prototype.run=function(fn,applyThis,applyArgs){return fn.apply(applyThis,applyArgs);};NoopNgZone.prototype.runGuarded=function(fn,applyThis,applyArgs){return fn.apply(applyThis,applyArgs);};NoopNgZone.prototype.runOutsideAngular=function(fn){return fn();};NoopNgZone.prototype.runTask=function(fn,applyThis,applyArgs,name){return fn.apply(applyThis,applyArgs);};return NoopNgZone;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The Testability service provides testing hooks that can be accessed from
     * the browser and by services such as Protractor. Each bootstrapped Angular
     * application on the page will have an instance of Testability.
     * @publicApi
     */var Testability=/** @class */function(){function Testability(_ngZone){var _this=this;this._ngZone=_ngZone;this._pendingCount=0;this._isZoneStable=true;/**
             * Whether any work was done since the last 'whenStable' callback. This is
             * useful to detect if this could have potentially destabilized another
             * component while it is stabilizing.
             * @internal
             */this._didWork=false;this._callbacks=[];this.taskTrackingZone=null;this._watchAngularEvents();_ngZone.run(function(){_this.taskTrackingZone=typeof Zone=='undefined'?null:Zone.current.get('TaskTrackingZone');});}Testability.prototype._watchAngularEvents=function(){var _this=this;this._ngZone.onUnstable.subscribe({next:function next(){_this._didWork=true;_this._isZoneStable=false;}});this._ngZone.runOutsideAngular(function(){_this._ngZone.onStable.subscribe({next:function next(){NgZone.assertNotInAngularZone();scheduleMicroTask(function(){_this._isZoneStable=true;_this._runCallbacksIfReady();});}});});};/**
         * Increases the number of pending request
         * @deprecated pending requests are now tracked with zones.
         */Testability.prototype.increasePendingRequestCount=function(){this._pendingCount+=1;this._didWork=true;return this._pendingCount;};/**
         * Decreases the number of pending request
         * @deprecated pending requests are now tracked with zones
         */Testability.prototype.decreasePendingRequestCount=function(){this._pendingCount-=1;if(this._pendingCount<0){throw new Error('pending async requests below zero');}this._runCallbacksIfReady();return this._pendingCount;};/**
         * Whether an associated application is stable
         */Testability.prototype.isStable=function(){return this._isZoneStable&&this._pendingCount===0&&!this._ngZone.hasPendingMacrotasks;};Testability.prototype._runCallbacksIfReady=function(){var _this=this;if(this.isStable()){// Schedules the call backs in a new frame so that it is always async.
scheduleMicroTask(function(){while(_this._callbacks.length!==0){var cb=_this._callbacks.pop();clearTimeout(cb.timeoutId);cb.doneCb(_this._didWork);}_this._didWork=false;});}else{// Still not stable, send updates.
var pending_1=this.getPendingTasks();this._callbacks=this._callbacks.filter(function(cb){if(cb.updateCb&&cb.updateCb(pending_1)){clearTimeout(cb.timeoutId);return false;}return true;});this._didWork=true;}};Testability.prototype.getPendingTasks=function(){if(!this.taskTrackingZone){return[];}// Copy the tasks data so that we don't leak tasks.
return this.taskTrackingZone.macroTasks.map(function(t){return{source:t.source,// From TaskTrackingZone:
// https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40
creationLocation:t.creationLocation,data:t.data};});};Testability.prototype.addCallback=function(cb,timeout,updateCb){var _this=this;var timeoutId=-1;if(timeout&&timeout>0){timeoutId=setTimeout(function(){_this._callbacks=_this._callbacks.filter(function(cb){return cb.timeoutId!==timeoutId;});cb(_this._didWork,_this.getPendingTasks());},timeout);}this._callbacks.push({doneCb:cb,timeoutId:timeoutId,updateCb:updateCb});};/**
         * Wait for the application to be stable with a timeout. If the timeout is reached before that
         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.
         *
         * @param doneCb The callback to invoke when Angular is stable or the timeout expires
         *    whichever comes first.
         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not
         *    specified, whenStable() will wait forever.
         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of
         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked
         *    and no further updates will be issued.
         */Testability.prototype.whenStable=function(doneCb,timeout,updateCb){if(updateCb&&!this.taskTrackingZone){throw new Error('Task tracking zone is required when passing an update callback to '+'whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');}// These arguments are 'Function' above to keep the public API simple.
this.addCallback(doneCb,timeout,updateCb);this._runCallbacksIfReady();};/**
         * Get the number of pending requests
         * @deprecated pending requests are now tracked with zones
         */Testability.prototype.getPendingRequestCount=function(){return this._pendingCount;};/**
         * Find providers by name
         * @param using The root element to search from
         * @param provider The name of binding variable
         * @param exactMatch Whether using exactMatch
         */Testability.prototype.findProviders=function(using,provider,exactMatch){// TODO(juliemr): implement.
return[];};Testability=__decorate([Injectable(),__metadata("design:paramtypes",[NgZone])],Testability);return Testability;}();/**
     * A global registry of {@link Testability} instances for specific elements.
     * @publicApi
     */var TestabilityRegistry=/** @class */function(){function TestabilityRegistry(){/** @internal */this._applications=new Map();_testabilityGetter.addToWindow(this);}/**
         * Registers an application with a testability hook so that it can be tracked
         * @param token token of application, root element
         * @param testability Testability hook
         */TestabilityRegistry.prototype.registerApplication=function(token,testability){this._applications.set(token,testability);};/**
         * Unregisters an application.
         * @param token token of application, root element
         */TestabilityRegistry.prototype.unregisterApplication=function(token){this._applications["delete"](token);};/**
         * Unregisters all applications
         */TestabilityRegistry.prototype.unregisterAllApplications=function(){this._applications.clear();};/**
         * Get a testability hook associated with the application
         * @param elem root element
         */TestabilityRegistry.prototype.getTestability=function(elem){return this._applications.get(elem)||null;};/**
         * Get all registered testabilities
         */TestabilityRegistry.prototype.getAllTestabilities=function(){return Array.from(this._applications.values());};/**
         * Get all registered applications(root elements)
         */TestabilityRegistry.prototype.getAllRootElements=function(){return Array.from(this._applications.keys());};/**
         * Find testability of a node in the Tree
         * @param elem node
         * @param findInAncestors whether finding testability in ancestors if testability was not found in
         * current node
         */TestabilityRegistry.prototype.findTestabilityInTree=function(elem,findInAncestors){if(findInAncestors===void 0){findInAncestors=true;}return _testabilityGetter.findTestabilityInTree(this,elem,findInAncestors);};TestabilityRegistry=__decorate([Injectable(),__metadata("design:paramtypes",[])],TestabilityRegistry);return TestabilityRegistry;}();var _NoopGetTestability=/** @class */function(){function _NoopGetTestability(){}_NoopGetTestability.prototype.addToWindow=function(registry){};_NoopGetTestability.prototype.findTestabilityInTree=function(registry,elem,findInAncestors){return null;};return _NoopGetTestability;}();/**
     * Set the {@link GetTestability} implementation used by the Angular testing framework.
     * @publicApi
     */function setTestabilityGetter(getter){_testabilityGetter=getter;}var _testabilityGetter=new _NoopGetTestability();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _platform;var compileNgModuleFactory=compileNgModuleFactory__PRE_R3__;function compileNgModuleFactory__PRE_R3__(injector,options,moduleType){var compilerFactory=injector.get(CompilerFactory);var compiler=compilerFactory.createCompiler([options]);return compiler.compileModuleAsync(moduleType);}function compileNgModuleFactory__POST_R3__(injector,options,moduleType){ngDevMode&&assertNgModuleType(moduleType);var compilerOptions=injector.get(COMPILER_OPTIONS,[]).concat(options);if(typeof ngJitMode==='undefined'||ngJitMode){// Configure the compiler to use the provided options. This call may fail when multiple modules
// are bootstrapped with incompatible options, as a component can only be compiled according to
// a single set of options.
setJitOptions({defaultEncapsulation:_lastDefined(compilerOptions.map(function(options){return options.defaultEncapsulation;})),preserveWhitespaces:_lastDefined(compilerOptions.map(function(options){return options.preserveWhitespaces;}))});}var moduleFactory=new NgModuleFactory$1(moduleType);if(isComponentResourceResolutionQueueEmpty()){return Promise.resolve(moduleFactory);}var compilerProviders=_mergeArrays(compilerOptions.map(function(o){return o.providers;}));// In case there are no compiler providers, we just return the module factory as
// there won't be any resource loader. This can happen with Ivy, because AOT compiled
// modules can be still passed through "bootstrapModule". In that case we shouldn't
// unnecessarily require the JIT compiler.
if(compilerProviders.length===0){return Promise.resolve(moduleFactory);}var compiler=getCompilerFacade();var compilerInjector=Injector.create({providers:compilerProviders});var resourceLoader=compilerInjector.get(compiler.ResourceLoader);// The resource loader can also return a string while the "resolveComponentResources"
// always expects a promise. Therefore we need to wrap the returned value in a promise.
return resolveComponentResources(function(url){return Promise.resolve(resourceLoader.get(url));}).then(function(){return moduleFactory;});}// the `window.ng` global utilities are only available in non-VE versions of
// Angular. The function switch below will make sure that the code is not
// included into Angular when PRE mode is active.
function publishDefaultGlobalUtils__PRE_R3__(){}function publishDefaultGlobalUtils__POST_R3__(){ngDevMode&&publishDefaultGlobalUtils();}var publishDefaultGlobalUtils$1=publishDefaultGlobalUtils__PRE_R3__;var isBoundToModule=isBoundToModule__PRE_R3__;function isBoundToModule__PRE_R3__(cf){return cf instanceof ComponentFactoryBoundToModule;}function isBoundToModule__POST_R3__(cf){return cf.isBoundToModule;}var ALLOW_MULTIPLE_PLATFORMS=new InjectionToken('AllowMultipleToken');/**
     * A token for third-party components that can register themselves with NgProbe.
     *
     * @publicApi
     */var NgProbeToken=/** @class */function(){function NgProbeToken(name,token){this.name=name;this.token=token;}return NgProbeToken;}();/**
     * Creates a platform.
     * Platforms have to be eagerly created via this function.
     *
     * @publicApi
     */function createPlatform(injector){if(_platform&&!_platform.destroyed&&!_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){throw new Error('There can be only one platform. Destroy the previous one to create a new one.');}publishDefaultGlobalUtils$1();_platform=injector.get(PlatformRef);var inits=injector.get(PLATFORM_INITIALIZER,null);if(inits)inits.forEach(function(init){return init();});return _platform;}/**
     * Creates a factory for a platform
     *
     * @publicApi
     */function createPlatformFactory(parentPlatformFactory,name,providers){if(providers===void 0){providers=[];}var desc="Platform: "+name;var marker=new InjectionToken(desc);return function(extraProviders){if(extraProviders===void 0){extraProviders=[];}var platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){if(parentPlatformFactory){parentPlatformFactory(providers.concat(extraProviders).concat({provide:marker,useValue:true}));}else{var injectedProviders=providers.concat(extraProviders).concat({provide:marker,useValue:true},{provide:INJECTOR_SCOPE,useValue:'platform'});createPlatform(Injector.create({providers:injectedProviders,name:desc}));}}return assertPlatform(marker);};}/**
     * Checks that there currently is a platform which contains the given token as a provider.
     *
     * @publicApi
     */function assertPlatform(requiredToken){var platform=getPlatform();if(!platform){throw new Error('No platform exists!');}if(!platform.injector.get(requiredToken,null)){throw new Error('A platform with a different configuration has been created. Please destroy it first.');}return platform;}/**
     * Destroy the existing platform.
     *
     * @publicApi
     */function destroyPlatform(){if(_platform&&!_platform.destroyed){_platform.destroy();}}/**
     * Returns the current platform.
     *
     * @publicApi
     */function getPlatform(){return _platform&&!_platform.destroyed?_platform:null;}/**
     * The Angular platform is the entry point for Angular on a web page. Each page
     * has exactly one platform, and services (such as reflection) which are common
     * to every Angular application running on the page are bound in its scope.
     *
     * A page's platform is initialized implicitly when a platform is created via a platform factory
     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.
     *
     * @publicApi
     */var PlatformRef=/** @class */function(){/** @internal */function PlatformRef(_injector){this._injector=_injector;this._modules=[];this._destroyListeners=[];this._destroyed=false;}/**
         * Creates an instance of an `@NgModule` for the given platform
         * for offline compilation.
         *
         * @usageNotes
         * ### Simple Example
         *
         * ```typescript
         * my_module.ts:
         *
         * @NgModule({
         *   imports: [BrowserModule]
         * })
         * class MyModule {}
         *
         * main.ts:
         * import {MyModuleNgFactory} from './my_module.ngfactory';
         * import {platformBrowser} from '@angular/platform-browser';
         *
         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
         * ```
         */PlatformRef.prototype.bootstrapModuleFactory=function(moduleFactory,options){var _this=this;// Note: We need to create the NgZone _before_ we instantiate the module,
// as instantiating the module creates some providers eagerly.
// So we create a mini parent injector that just contains the new NgZone and
// pass that as parent to the NgModuleFactory.
var ngZoneOption=options?options.ngZone:undefined;var ngZoneEventCoalescing=options&&options.ngZoneEventCoalescing||false;var ngZone=getNgZone(ngZoneOption,ngZoneEventCoalescing);var providers=[{provide:NgZone,useValue:ngZone}];// Attention: Don't use ApplicationRef.run here,
// as we want to be sure that all possible constructor calls are inside `ngZone.run`!
return ngZone.run(function(){var ngZoneInjector=Injector.create({providers:providers,parent:_this.injector,name:moduleFactory.moduleType.name});var moduleRef=moduleFactory.create(ngZoneInjector);var exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler){throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');}moduleRef.onDestroy(function(){return remove(_this._modules,moduleRef);});ngZone.runOutsideAngular(function(){return ngZone.onError.subscribe({next:function next(error){exceptionHandler.handleError(error);}});});return _callAndReportToErrorHandler(exceptionHandler,ngZone,function(){var initStatus=moduleRef.injector.get(ApplicationInitStatus);initStatus.runInitializers();return initStatus.donePromise.then(function(){if(ivyEnabled){// If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy
var localeId=moduleRef.injector.get(LOCALE_ID$1,DEFAULT_LOCALE_ID);setLocaleId(localeId||DEFAULT_LOCALE_ID);}_this._moduleDoBootstrap(moduleRef);return moduleRef;});});});};/**
         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.
         *
         * @usageNotes
         * ### Simple Example
         *
         * ```typescript
         * @NgModule({
         *   imports: [BrowserModule]
         * })
         * class MyModule {}
         *
         * let moduleRef = platformBrowser().bootstrapModule(MyModule);
         * ```
         *
         */PlatformRef.prototype.bootstrapModule=function(moduleType,compilerOptions){var _this=this;if(compilerOptions===void 0){compilerOptions=[];}var options=optionsReducer({},compilerOptions);return compileNgModuleFactory(this.injector,options,moduleType).then(function(moduleFactory){return _this.bootstrapModuleFactory(moduleFactory,options);});};PlatformRef.prototype._moduleDoBootstrap=function(moduleRef){var appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef._bootstrapComponents.length>0){moduleRef._bootstrapComponents.forEach(function(f){return appRef.bootstrap(f);});}else if(moduleRef.instance.ngDoBootstrap){moduleRef.instance.ngDoBootstrap(appRef);}else{throw new Error("The module "+stringify(moduleRef.instance.constructor)+" was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. "+"Please define one of these.");}this._modules.push(moduleRef);};/**
         * Register a listener to be called when the platform is disposed.
         */PlatformRef.prototype.onDestroy=function(callback){this._destroyListeners.push(callback);};Object.defineProperty(PlatformRef.prototype,"injector",{/**
             * Retrieve the platform {@link Injector}, which is the parent injector for
             * every Angular application on the page and provides singleton providers.
             */get:function get(){return this._injector;},enumerable:true,configurable:true});/**
         * Destroy the Angular platform and all Angular applications on the page.
         */PlatformRef.prototype.destroy=function(){if(this._destroyed){throw new Error('The platform has already been destroyed!');}this._modules.slice().forEach(function(module){return module.destroy();});this._destroyListeners.forEach(function(listener){return listener();});this._destroyed=true;};Object.defineProperty(PlatformRef.prototype,"destroyed",{get:function get(){return this._destroyed;},enumerable:true,configurable:true});PlatformRef=__decorate([Injectable(),__metadata("design:paramtypes",[Injector])],PlatformRef);return PlatformRef;}();function getNgZone(ngZoneOption,ngZoneEventCoalescing){var ngZone;if(ngZoneOption==='noop'){ngZone=new NoopNgZone();}else{ngZone=(ngZoneOption==='zone.js'?undefined:ngZoneOption)||new NgZone({enableLongStackTrace:isDevMode(),shouldCoalesceEventChangeDetection:ngZoneEventCoalescing});}return ngZone;}function _callAndReportToErrorHandler(errorHandler,ngZone,callback){try{var result=callback();if(isPromise(result)){return result["catch"](function(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;});}return result;}catch(e){ngZone.runOutsideAngular(function(){return errorHandler.handleError(e);});// rethrow as the exception handler might not do it
throw e;}}function optionsReducer(dst,objs){if(Array.isArray(objs)){dst=objs.reduce(optionsReducer,dst);}else{dst=_assign4(_assign4({},dst),objs);}return dst;}/**
     * A reference to an Angular application running on a page.
     *
     * @usageNotes
     *
     * {@a is-stable-examples}
     * ### isStable examples and caveats
     *
     * Note two important points about `isStable`, demonstrated in the examples below:
     * - the application will never be stable if you start any kind
     * of recurrent asynchronous task when the application starts
     * (for example for a polling process, started with a `setInterval`, a `setTimeout`
     * or using RxJS operators like `interval`);
     * - the `isStable` Observable runs outside of the Angular zone.
     *
     * Let's imagine that you start a recurrent task
     * (here incrementing a counter, using RxJS `interval`),
     * and at the same time subscribe to `isStable`.
     *
     * ```
     * constructor(appRef: ApplicationRef) {
     *   appRef.isStable.pipe(
     *      filter(stable => stable)
     *   ).subscribe(() => console.log('App is stable now');
     *   interval(1000).subscribe(counter => console.log(counter));
     * }
     * ```
     * In this example, `isStable` will never emit `true`,
     * and the trace "App is stable now" will never get logged.
     *
     * If you want to execute something when the app is stable,
     * you have to wait for the application to be stable
     * before starting your polling process.
     *
     * ```
     * constructor(appRef: ApplicationRef) {
     *   appRef.isStable.pipe(
     *     first(stable => stable),
     *     tap(stable => console.log('App is stable now')),
     *     switchMap(() => interval(1000))
     *   ).subscribe(counter => console.log(counter));
     * }
     * ```
     * In this example, the trace "App is stable now" will be logged
     * and then the counter starts incrementing every second.
     *
     * Note also that this Observable runs outside of the Angular zone,
     * which means that the code in the subscription
     * to this Observable will not trigger the change detection.
     *
     * Let's imagine that instead of logging the counter value,
     * you update a field of your component
     * and display it in its template.
     *
     * ```
     * constructor(appRef: ApplicationRef) {
     *   appRef.isStable.pipe(
     *     first(stable => stable),
     *     switchMap(() => interval(1000))
     *   ).subscribe(counter => this.value = counter);
     * }
     * ```
     * As the `isStable` Observable runs outside the zone,
     * the `value` field will be updated properly,
     * but the template will not be refreshed!
     *
     * You'll have to manually trigger the change detection to update the template.
     *
     * ```
     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {
     *   appRef.isStable.pipe(
     *     first(stable => stable),
     *     switchMap(() => interval(1000))
     *   ).subscribe(counter => {
     *     this.value = counter;
     *     cd.detectChanges();
     *   });
     * }
     * ```
     *
     * Or make the subscription callback run inside the zone.
     *
     * ```
     * constructor(appRef: ApplicationRef, zone: NgZone) {
     *   appRef.isStable.pipe(
     *     first(stable => stable),
     *     switchMap(() => interval(1000))
     *   ).subscribe(counter => zone.run(() => this.value = counter));
     * }
     * ```
     *
     * @publicApi
     */var ApplicationRef=/** @class */function(){/** @internal */function ApplicationRef(_zone,_console,_injector,_exceptionHandler,_componentFactoryResolver,_initStatus){var _this=this;this._zone=_zone;this._console=_console;this._injector=_injector;this._exceptionHandler=_exceptionHandler;this._componentFactoryResolver=_componentFactoryResolver;this._initStatus=_initStatus;/** @internal */this._bootstrapListeners=[];this._views=[];this._runningTick=false;this._enforceNoNewChanges=false;this._stable=true;/**
             * Get a list of component types registered to this application.
             * This list is populated even before the component is created.
             */this.componentTypes=[];/**
             * Get a list of components registered to this application.
             */this.components=[];this._enforceNoNewChanges=isDevMode();this._zone.onMicrotaskEmpty.subscribe({next:function next(){_this._zone.run(function(){_this.tick();});}});var isCurrentlyStable=new rxjs.Observable(function(observer){_this._stable=_this._zone.isStable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks;_this._zone.runOutsideAngular(function(){observer.next(_this._stable);observer.complete();});});var isStable=new rxjs.Observable(function(observer){// Create the subscription to onStable outside the Angular Zone so that
// the callback is run outside the Angular Zone.
var stableSub;_this._zone.runOutsideAngular(function(){stableSub=_this._zone.onStable.subscribe(function(){NgZone.assertNotInAngularZone();// Check whether there are no pending macro/micro tasks in the next tick
// to allow for NgZone to update the state.
scheduleMicroTask(function(){if(!_this._stable&&!_this._zone.hasPendingMacrotasks&&!_this._zone.hasPendingMicrotasks){_this._stable=true;observer.next(true);}});});});var unstableSub=_this._zone.onUnstable.subscribe(function(){NgZone.assertInAngularZone();if(_this._stable){_this._stable=false;_this._zone.runOutsideAngular(function(){observer.next(false);});}});return function(){stableSub.unsubscribe();unstableSub.unsubscribe();};});this.isStable=rxjs.merge(isCurrentlyStable,isStable.pipe(operators.share()));}/**
         * Bootstrap a new component at the root level of the application.
         *
         * @usageNotes
         * ### Bootstrap process
         *
         * When bootstrapping a new root component into an application, Angular mounts the
         * specified application component onto DOM elements identified by the componentType's
         * selector and kicks off automatic change detection to finish initializing the component.
         *
         * Optionally, a component can be mounted onto a DOM element that does not match the
         * componentType's selector.
         *
         * ### Example
         * {@example core/ts/platform/platform.ts region='longform'}
         */ApplicationRef.prototype.bootstrap=function(componentOrFactory,rootSelectorOrNode){var _this=this;if(!this._initStatus.done){throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');}var componentFactory;if(componentOrFactory instanceof ComponentFactory){componentFactory=componentOrFactory;}else{componentFactory=this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);}this.componentTypes.push(componentFactory.componentType);// Create a factory associated with the current module if it's not bound to some other
var ngModule=isBoundToModule(componentFactory)?undefined:this._injector.get(NgModuleRef);var selectorOrNode=rootSelectorOrNode||componentFactory.selector;var compRef=componentFactory.create(Injector.NULL,[],selectorOrNode,ngModule);compRef.onDestroy(function(){_this._unloadComponent(compRef);});var testability=compRef.injector.get(Testability,null);if(testability){compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement,testability);}this._loadComponent(compRef);if(isDevMode()){this._console.log("Angular is running in the development mode. Call enableProdMode() to enable the production mode.");}return compRef;};/**
         * Invoke this method to explicitly process change detection and its side-effects.
         *
         * In development mode, `tick()` also performs a second change detection cycle to ensure that no
         * further changes are detected. If additional changes are picked up during this second cycle,
         * bindings in the app have side-effects that cannot be resolved in a single change detection
         * pass.
         * In this case, Angular throws an error, since an Angular application can only have one change
         * detection pass during which all change detection must complete.
         */ApplicationRef.prototype.tick=function(){var e_1,_a,e_2,_b;var _this=this;if(this._runningTick){throw new Error('ApplicationRef.tick is called recursively');}try{this._runningTick=true;try{for(var _c=__values(this._views),_d=_c.next();!_d.done;_d=_c.next()){var view=_d.value;view.detectChanges();}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c["return"]))_a.call(_c);}finally{if(e_1)throw e_1.error;}}if(this._enforceNoNewChanges){try{for(var _e=__values(this._views),_f=_e.next();!_f.done;_f=_e.next()){var view=_f.value;view.checkNoChanges();}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e["return"]))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e){// Attention: Don't rethrow as it could cancel subscriptions to Observables!
this._zone.runOutsideAngular(function(){return _this._exceptionHandler.handleError(e);});}finally{this._runningTick=false;}};/**
         * Attaches a view so that it will be dirty checked.
         * The view will be automatically detached when it is destroyed.
         * This will throw if the view is already attached to a ViewContainer.
         */ApplicationRef.prototype.attachView=function(viewRef){var view=viewRef;this._views.push(view);view.attachToAppRef(this);};/**
         * Detaches a view from dirty checking again.
         */ApplicationRef.prototype.detachView=function(viewRef){var view=viewRef;remove(this._views,view);view.detachFromAppRef();};ApplicationRef.prototype._loadComponent=function(componentRef){this.attachView(componentRef.hostView);this.tick();this.components.push(componentRef);// Get the listeners lazily to prevent DI cycles.
var listeners=this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners);listeners.forEach(function(listener){return listener(componentRef);});};ApplicationRef.prototype._unloadComponent=function(componentRef){this.detachView(componentRef.hostView);remove(this.components,componentRef);};/** @internal */ApplicationRef.prototype.ngOnDestroy=function(){// TODO(alxhub): Dispose of the NgZone.
this._views.slice().forEach(function(view){return view.destroy();});};Object.defineProperty(ApplicationRef.prototype,"viewCount",{/**
             * Returns the number of attached views.
             */get:function get(){return this._views.length;},enumerable:true,configurable:true});ApplicationRef=__decorate([Injectable(),__metadata("design:paramtypes",[NgZone,Console,Injector,ErrorHandler,ComponentFactoryResolver,ApplicationInitStatus])],ApplicationRef);return ApplicationRef;}();function remove(list,el){var index=list.indexOf(el);if(index>-1){list.splice(index,1);}}function _lastDefined(args){for(var i=args.length-1;i>=0;i--){if(args[i]!==undefined){return args[i];}}return undefined;}function _mergeArrays(parts){var result=[];parts.forEach(function(part){return part&&result.push.apply(result,__spread(part));});return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Used to load ng module factories.
     *
     * @publicApi
     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is
     * part of its implementation. See `LoadChildren` for more details.
     */var NgModuleFactoryLoader=/** @class */function(){function NgModuleFactoryLoader(){}return NgModuleFactoryLoader;}();function getModuleFactory__PRE_R3__(id){var factory=getRegisteredNgModuleType(id);if(!factory)throw noModuleError(id);return factory;}function getModuleFactory__POST_R3__(id){var type=getRegisteredNgModuleType(id);if(!type)throw noModuleError(id);return new NgModuleFactory$1(type);}/**
     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.
     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module
     * cannot be found.
     * @publicApi
     */var getModuleFactory=getModuleFactory__PRE_R3__;function noModuleError(id){return new Error("No module with ID "+id+" loaded");}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _SEPARATOR='#';var FACTORY_CLASS_SUFFIX='NgFactory';/**
     * Configuration for SystemJsNgModuleLoader.
     * token.
     *
     * @publicApi
     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`
     * is part of its implementation. See `LoadChildren` for more details.
     */var SystemJsNgModuleLoaderConfig=/** @class */function(){function SystemJsNgModuleLoaderConfig(){}return SystemJsNgModuleLoaderConfig;}();var DEFAULT_CONFIG={factoryPathPrefix:'',factoryPathSuffix:'.ngfactory'};/**
     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory
     * @publicApi
     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is
     * part of its implementation. See `LoadChildren` for more details.
     */var SystemJsNgModuleLoader=/** @class */function(){function SystemJsNgModuleLoader(_compiler,config){this._compiler=_compiler;this._config=config||DEFAULT_CONFIG;}SystemJsNgModuleLoader.prototype.load=function(path){var legacyOfflineMode=!ivyEnabled&&this._compiler instanceof Compiler;return legacyOfflineMode?this.loadFactory(path):this.loadAndCompile(path);};SystemJsNgModuleLoader.prototype.loadAndCompile=function(path){var _this=this;var _a=__read(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];if(exportName===undefined){exportName='default';}return System["import"](module).then(function(module){return module[exportName];}).then(function(type){return checkNotEmpty(type,module,exportName);}).then(function(type){return _this._compiler.compileModuleAsync(type);});};SystemJsNgModuleLoader.prototype.loadFactory=function(path){var _a=__read(path.split(_SEPARATOR),2),module=_a[0],exportName=_a[1];var factoryClassSuffix=FACTORY_CLASS_SUFFIX;if(exportName===undefined){exportName='default';factoryClassSuffix='';}return System["import"](this._config.factoryPathPrefix+module+this._config.factoryPathSuffix).then(function(module){return module[exportName+factoryClassSuffix];}).then(function(factory){return checkNotEmpty(factory,module,exportName);});};SystemJsNgModuleLoader=__decorate([Injectable(),__param(1,Optional()),__metadata("design:paramtypes",[Compiler,SystemJsNgModuleLoaderConfig])],SystemJsNgModuleLoader);return SystemJsNgModuleLoader;}();function checkNotEmpty(value,modulePath,exportName){if(!value){throw new Error("Cannot find '"+exportName+"' in '"+modulePath+"'");}return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents an Angular [view](guide/glossary#view),
     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.
     * Also serves as the base class
     * that adds destroy methods for [embedded views](guide/glossary#view-tree).
     *
     * @see `EmbeddedViewRef`
     *
     * @publicApi
     */var ViewRef$1=/** @class */function(_super){__extends(ViewRef,_super);function ViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return ViewRef;}(ChangeDetectorRef);/**
     * Represents an Angular [view](guide/glossary#view) in a view container.
     * An [embedded view](guide/glossary#view-tree) can be referenced from a component
     * other than the hosting component whose template defines it, or it can be defined
     * independently by a `TemplateRef`.
     *
     * Properties of elements in a view can change, but the structure (number and order) of elements in
     * a view cannot. Change the structure of elements by inserting, moving, or
     * removing nested views in a view container.
     *
     * @see `ViewContainerRef`
     *
     * @usageNotes
     *
     * The following template breaks down into two separate `TemplateRef` instances,
     * an outer one and an inner one.
     *
     * ```
     * Count: {{items.length}}
     * <ul>
     *   <li *ngFor="let  item of items">{{item}}</li>
     * </ul>
     * ```
     *
     * This is the outer `TemplateRef`:
     *
     * ```
     * Count: {{items.length}}
     * <ul>
     *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
     * </ul>
     * ```
     *
     * This is the inner `TemplateRef`:
     *
     * ```
     *   <li>{{item}}</li>
     * ```
     *
     * The outer and inner `TemplateRef` instances are assembled into views as follows:
     *
     * ```
     * <!-- ViewRef: outer-0 -->
     * Count: 2
     * <ul>
     *   <ng-template view-container-ref></ng-template>
     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
     * </ul>
     * <!-- /ViewRef: outer-0 -->
     * ```
     * @publicApi
     */var EmbeddedViewRef=/** @class */function(_super){__extends(EmbeddedViewRef,_super);function EmbeddedViewRef(){return _super!==null&&_super.apply(this,arguments)||this;}return EmbeddedViewRef;}(ViewRef$1);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var DebugEventListener=/** @class */function(){function DebugEventListener(name,callback){this.name=name;this.callback=callback;}return DebugEventListener;}();var DebugNode__PRE_R3__=/** @class */function(){function DebugNode__PRE_R3__(nativeNode,parent,_debugContext){this.listeners=[];this.parent=null;this._debugContext=_debugContext;this.nativeNode=nativeNode;if(parent&&parent instanceof DebugElement__PRE_R3__){parent.addChild(this);}}Object.defineProperty(DebugNode__PRE_R3__.prototype,"injector",{get:function get(){return this._debugContext.injector;},enumerable:true,configurable:true});Object.defineProperty(DebugNode__PRE_R3__.prototype,"componentInstance",{get:function get(){return this._debugContext.component;},enumerable:true,configurable:true});Object.defineProperty(DebugNode__PRE_R3__.prototype,"context",{get:function get(){return this._debugContext.context;},enumerable:true,configurable:true});Object.defineProperty(DebugNode__PRE_R3__.prototype,"references",{get:function get(){return this._debugContext.references;},enumerable:true,configurable:true});Object.defineProperty(DebugNode__PRE_R3__.prototype,"providerTokens",{get:function get(){return this._debugContext.providerTokens;},enumerable:true,configurable:true});return DebugNode__PRE_R3__;}();var DebugElement__PRE_R3__=/** @class */function(_super){__extends(DebugElement__PRE_R3__,_super);function DebugElement__PRE_R3__(nativeNode,parent,_debugContext){var _this=_super.call(this,nativeNode,parent,_debugContext)||this;_this.properties={};_this.attributes={};_this.classes={};_this.styles={};_this.childNodes=[];_this.nativeElement=nativeNode;return _this;}DebugElement__PRE_R3__.prototype.addChild=function(child){if(child){this.childNodes.push(child);child.parent=this;}};DebugElement__PRE_R3__.prototype.removeChild=function(child){var childIndex=this.childNodes.indexOf(child);if(childIndex!==-1){child.parent=null;this.childNodes.splice(childIndex,1);}};DebugElement__PRE_R3__.prototype.insertChildrenAfter=function(child,newChildren){var _a;var _this=this;var siblingIndex=this.childNodes.indexOf(child);if(siblingIndex!==-1){(_a=this.childNodes).splice.apply(_a,__spread([siblingIndex+1,0],newChildren));newChildren.forEach(function(c){if(c.parent){c.parent.removeChild(c);}child.parent=_this;});}};DebugElement__PRE_R3__.prototype.insertBefore=function(refChild,newChild){var refIndex=this.childNodes.indexOf(refChild);if(refIndex===-1){this.addChild(newChild);}else{if(newChild.parent){newChild.parent.removeChild(newChild);}newChild.parent=this;this.childNodes.splice(refIndex,0,newChild);}};DebugElement__PRE_R3__.prototype.query=function(predicate){var results=this.queryAll(predicate);return results[0]||null;};DebugElement__PRE_R3__.prototype.queryAll=function(predicate){var matches=[];_queryElementChildren(this,predicate,matches);return matches;};DebugElement__PRE_R3__.prototype.queryAllNodes=function(predicate){var matches=[];_queryNodeChildren(this,predicate,matches);return matches;};Object.defineProperty(DebugElement__PRE_R3__.prototype,"children",{get:function get(){return this.childNodes//
.filter(function(node){return node instanceof DebugElement__PRE_R3__;});},enumerable:true,configurable:true});DebugElement__PRE_R3__.prototype.triggerEventHandler=function(eventName,eventObj){this.listeners.forEach(function(listener){if(listener.name==eventName){listener.callback(eventObj);}});};return DebugElement__PRE_R3__;}(DebugNode__PRE_R3__);/**
     * @publicApi
     */function asNativeElements(debugEls){return debugEls.map(function(el){return el.nativeElement;});}function _queryElementChildren(element,predicate,matches){element.childNodes.forEach(function(node){if(node instanceof DebugElement__PRE_R3__){if(predicate(node)){matches.push(node);}_queryElementChildren(node,predicate,matches);}});}function _queryNodeChildren(parentNode,predicate,matches){if(parentNode instanceof DebugElement__PRE_R3__){parentNode.childNodes.forEach(function(node){if(predicate(node)){matches.push(node);}if(node instanceof DebugElement__PRE_R3__){_queryNodeChildren(node,predicate,matches);}});}}var DebugNode__POST_R3__=/** @class */function(){function DebugNode__POST_R3__(nativeNode){this.nativeNode=nativeNode;}Object.defineProperty(DebugNode__POST_R3__.prototype,"parent",{get:function get(){var parent=this.nativeNode.parentNode;return parent?new DebugElement__POST_R3__(parent):null;},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"injector",{get:function get(){return getInjector(this.nativeNode);},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"componentInstance",{get:function get(){var nativeElement=this.nativeNode;return nativeElement&&(getComponent(nativeElement)||getOwningComponent(nativeElement));},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"context",{get:function get(){return getComponent(this.nativeNode)||getContext(this.nativeNode);},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"listeners",{get:function get(){return getListeners(this.nativeNode).filter(function(listener){return listener.type==='dom';});},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"references",{get:function get(){return getLocalRefs(this.nativeNode);},enumerable:true,configurable:true});Object.defineProperty(DebugNode__POST_R3__.prototype,"providerTokens",{get:function get(){return getInjectionTokens(this.nativeNode);},enumerable:true,configurable:true});return DebugNode__POST_R3__;}();var DebugElement__POST_R3__=/** @class */function(_super){__extends(DebugElement__POST_R3__,_super);function DebugElement__POST_R3__(nativeNode){var _this=this;ngDevMode&&assertDomNode(nativeNode);_this=_super.call(this,nativeNode)||this;return _this;}Object.defineProperty(DebugElement__POST_R3__.prototype,"nativeElement",{get:function get(){return this.nativeNode.nodeType==Node.ELEMENT_NODE?this.nativeNode:null;},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"name",{get:function get(){try{var context=loadLContext(this.nativeNode);var lView=context.lView;var tData=lView[TVIEW].data;var tNode=tData[context.nodeIndex];return tNode.tagName;}catch(e){return this.nativeNode.nodeName;}},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"properties",{/**
             *  Gets a map of property names to property values for an element.
             *
             *  This map includes:
             *  - Regular property bindings (e.g. `[id]="id"`)
             *  - Host property bindings (e.g. `host: { '[id]': "id" }`)
             *  - Interpolated property bindings (e.g. `id="{{ value }}")
             *
             *  It does not include:
             *  - input property bindings (e.g. `[myCustomInput]="value"`)
             *  - attribute bindings (e.g. `[attr.role]="menu"`)
             */get:function get(){var context=loadLContext(this.nativeNode,false);if(context==null){return{};}var lView=context.lView;var tData=lView[TVIEW].data;var tNode=tData[context.nodeIndex];var properties={};// Collect properties from the DOM.
copyDomProperties(this.nativeElement,properties);// Collect properties from the bindings. This is needed for animation renderer which has
// synthetic properties which don't get reflected into the DOM.
collectPropertyBindings(properties,tNode,lView,tData);return properties;},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"attributes",{get:function get(){var attributes={};var element=this.nativeElement;if(!element){return attributes;}var context=loadLContext(element,false);if(context==null){return{};}var lView=context.lView;var tNodeAttrs=lView[TVIEW].data[context.nodeIndex].attrs;var lowercaseTNodeAttrs=[];// For debug nodes we take the element's attribute directly from the DOM since it allows us
// to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones
// that are set through `Renderer2`). The problem is that the browser will lowercase all names,
// however since we have the attributes already on the TNode, we can preserve the case by going
// through them once, adding them to the `attributes` map and putting their lower-cased name
// into an array. Afterwards when we're going through the native DOM attributes, we can check
// whether we haven't run into an attribute already through the TNode.
if(tNodeAttrs){var i=0;while(i<tNodeAttrs.length){var attrName=tNodeAttrs[i];// Stop as soon as we hit a marker. We only care about the regular attributes. Everything
// else will be handled below when we read the final attributes off the DOM.
if(typeof attrName!=='string')break;var attrValue=tNodeAttrs[i+1];attributes[attrName]=attrValue;lowercaseTNodeAttrs.push(attrName.toLowerCase());i+=2;}}var eAttrs=element.attributes;for(var i=0;i<eAttrs.length;i++){var attr=eAttrs[i];var lowercaseName=attr.name.toLowerCase();// Make sure that we don't assign the same attribute both in its
// case-sensitive form and the lower-cased one from the browser.
if(lowercaseTNodeAttrs.indexOf(lowercaseName)===-1){// Save the lowercase name to align the behavior between browsers.
// IE preserves the case, while all other browser convert it to lower case.
attributes[lowercaseName]=attr.value;}}return attributes;},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"styles",{get:function get(){if(this.nativeElement&&this.nativeElement.style){return this.nativeElement.style;}return{};},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"classes",{get:function get(){var result={};var element=this.nativeElement;// SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.
var className=element.className;var classes=className&&typeof className!=='string'?className.baseVal.split(' '):className.split(' ');classes.forEach(function(value){return result[value]=true;});return result;},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"childNodes",{get:function get(){var childNodes=this.nativeNode.childNodes;var children=[];for(var i=0;i<childNodes.length;i++){var element=childNodes[i];children.push(getDebugNode__POST_R3__(element));}return children;},enumerable:true,configurable:true});Object.defineProperty(DebugElement__POST_R3__.prototype,"children",{get:function get(){var nativeElement=this.nativeElement;if(!nativeElement)return[];var childNodes=nativeElement.children;var children=[];for(var i=0;i<childNodes.length;i++){var element=childNodes[i];children.push(getDebugNode__POST_R3__(element));}return children;},enumerable:true,configurable:true});DebugElement__POST_R3__.prototype.query=function(predicate){var results=this.queryAll(predicate);return results[0]||null;};DebugElement__POST_R3__.prototype.queryAll=function(predicate){var matches=[];_queryAllR3(this,predicate,matches,true);return matches;};DebugElement__POST_R3__.prototype.queryAllNodes=function(predicate){var matches=[];_queryAllR3(this,predicate,matches,false);return matches;};DebugElement__POST_R3__.prototype.triggerEventHandler=function(eventName,eventObj){var node=this.nativeNode;var invokedListeners=[];this.listeners.forEach(function(listener){if(listener.name===eventName){var callback=listener.callback;callback.call(node,eventObj);invokedListeners.push(callback);}});// We need to check whether `eventListeners` exists, because it's something
// that Zone.js only adds to `EventTarget` in browser environments.
if(typeof node.eventListeners==='function'){// Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some
// cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event
// listener.
node.eventListeners(eventName).forEach(function(listener){// In order to ensure that we can detect the special __ngUnwrap__ token described above, we
// use `toString` on the listener and see if it contains the token. We use this approach to
// ensure that it still worked with compiled code since it cannot remove or rename string
// literals. We also considered using a special function name (i.e. if(listener.name ===
// special)) but that was more cumbersome and we were also concerned the compiled code could
// strip the name, turning the condition in to ("" === "") and always returning true.
if(listener.toString().indexOf('__ngUnwrap__')!==-1){var unwrappedListener=listener('__ngUnwrap__');return invokedListeners.indexOf(unwrappedListener)===-1&&unwrappedListener.call(node,eventObj);}});}};return DebugElement__POST_R3__;}(DebugNode__POST_R3__);function copyDomProperties(element,properties){if(element){// Skip own properties (as those are patched)
var obj=Object.getPrototypeOf(element);var NodePrototype=Node.prototype;while(obj!==null&&obj!==NodePrototype){var descriptors=Object.getOwnPropertyDescriptors(obj);for(var key in descriptors){if(!key.startsWith('__')&&!key.startsWith('on')){// don't include properties starting with `__` and `on`.
// `__` are patched values which should not be included.
// `on` are listeners which also should not be included.
var value=element[key];if(isPrimitiveValue(value)){properties[key]=value;}}}obj=Object.getPrototypeOf(obj);}}}function isPrimitiveValue(value){return typeof value==='string'||typeof value==='boolean'||typeof value==='number'||value===null;}function _queryAllR3(parentElement,predicate,matches,elementsOnly){var context=loadLContext(parentElement.nativeNode,false);if(context!==null){var parentTNode=context.lView[TVIEW].data[context.nodeIndex];_queryNodeChildrenR3(parentTNode,context.lView,predicate,matches,elementsOnly,parentElement.nativeNode);}else{// If the context is null, then `parentElement` was either created with Renderer2 or native DOM
// APIs.
_queryNativeNodeDescendants(parentElement.nativeNode,predicate,matches,elementsOnly);}}/**
     * Recursively match the current TNode against the predicate, and goes on with the next ones.
     *
     * @param tNode the current TNode
     * @param lView the LView of this TNode
     * @param predicate the predicate to match
     * @param matches the list of positive matches
     * @param elementsOnly whether only elements should be searched
     * @param rootNativeNode the root native node on which predicate should not be matched
     */function _queryNodeChildrenR3(tNode,lView,predicate,matches,elementsOnly,rootNativeNode){var e_1,_a;var nativeNode=getNativeByTNodeOrNull(tNode,lView);// For each type of TNode, specific logic is executed.
if(tNode.type===3/* Element */||tNode.type===4/* ElementContainer */){// Case 1: the TNode is an element
// The native node has to be checked.
_addQueryMatchR3(nativeNode,predicate,matches,elementsOnly,rootNativeNode);if(isComponentHost(tNode)){// If the element is the host of a component, then all nodes in its view have to be processed.
// Note: the component's content (tNode.child) will be processed from the insertion points.
var componentView=getComponentLViewByIndex(tNode.index,lView);if(componentView&&componentView[TVIEW].firstChild){_queryNodeChildrenR3(componentView[TVIEW].firstChild,componentView,predicate,matches,elementsOnly,rootNativeNode);}}else{if(tNode.child){// Otherwise, its children have to be processed.
_queryNodeChildrenR3(tNode.child,lView,predicate,matches,elementsOnly,rootNativeNode);}// We also have to query the DOM directly in order to catch elements inserted through
// Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple
// times. ViewEngine could do it more efficiently, because all the insertions go through
// Renderer2, however that's not the case in Ivy. This approach is being used because:
// 1. Matching the ViewEngine behavior would mean potentially introducing a depedency
//    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.
// 2. We would have to make `Renderer3` "know" about debug nodes.
// 3. It allows us to capture nodes that were inserted directly via the DOM.
nativeNode&&_queryNativeNodeDescendants(nativeNode,predicate,matches,elementsOnly);}// In all cases, if a dynamic container exists for this node, each view inside it has to be
// processed.
var nodeOrContainer=lView[tNode.index];if(isLContainer(nodeOrContainer)){_queryNodeChildrenInContainerR3(nodeOrContainer,predicate,matches,elementsOnly,rootNativeNode);}}else if(tNode.type===0/* Container */){// Case 2: the TNode is a container
// The native node has to be checked.
var lContainer=lView[tNode.index];_addQueryMatchR3(lContainer[NATIVE],predicate,matches,elementsOnly,rootNativeNode);// Each view inside the container has to be processed.
_queryNodeChildrenInContainerR3(lContainer,predicate,matches,elementsOnly,rootNativeNode);}else if(tNode.type===1/* Projection */){// Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).
// The nodes projected at this location all need to be processed.
var componentView=lView[DECLARATION_COMPONENT_VIEW];var componentHost=componentView[T_HOST];var head=componentHost.projection[tNode.projection];if(Array.isArray(head)){try{for(var head_1=__values(head),head_1_1=head_1.next();!head_1_1.done;head_1_1=head_1.next()){var nativeNode_1=head_1_1.value;_addQueryMatchR3(nativeNode_1,predicate,matches,elementsOnly,rootNativeNode);}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(head_1_1&&!head_1_1.done&&(_a=head_1["return"]))_a.call(head_1);}finally{if(e_1)throw e_1.error;}}}else if(head){var nextLView=componentView[PARENT];var nextTNode=nextLView[TVIEW].data[head.index];_queryNodeChildrenR3(nextTNode,nextLView,predicate,matches,elementsOnly,rootNativeNode);}}else if(tNode.child){// Case 4: the TNode is a view.
_queryNodeChildrenR3(tNode.child,lView,predicate,matches,elementsOnly,rootNativeNode);}// We don't want to go to the next sibling of the root node.
if(rootNativeNode!==nativeNode){// To determine the next node to be processed, we need to use the next or the projectionNext
// link, depending on whether the current node has been projected.
var nextTNode=tNode.flags&4/* isProjected */?tNode.projectionNext:tNode.next;if(nextTNode){_queryNodeChildrenR3(nextTNode,lView,predicate,matches,elementsOnly,rootNativeNode);}}}/**
     * Process all TNodes in a given container.
     *
     * @param lContainer the container to be processed
     * @param predicate the predicate to match
     * @param matches the list of positive matches
     * @param elementsOnly whether only elements should be searched
     * @param rootNativeNode the root native node on which predicate should not be matched
     */function _queryNodeChildrenInContainerR3(lContainer,predicate,matches,elementsOnly,rootNativeNode){for(var i=CONTAINER_HEADER_OFFSET;i<lContainer.length;i++){var childView=lContainer[i];_queryNodeChildrenR3(childView[TVIEW].node,childView,predicate,matches,elementsOnly,rootNativeNode);}}/**
     * Match the current native node against the predicate.
     *
     * @param nativeNode the current native node
     * @param predicate the predicate to match
     * @param matches the list of positive matches
     * @param elementsOnly whether only elements should be searched
     * @param rootNativeNode the root native node on which predicate should not be matched
     */function _addQueryMatchR3(nativeNode,predicate,matches,elementsOnly,rootNativeNode){if(rootNativeNode!==nativeNode){var debugNode=getDebugNode$1(nativeNode);if(!debugNode){return;}// Type of the "predicate and "matches" array are set based on the value of
// the "elementsOnly" parameter. TypeScript is not able to properly infer these
// types with generics, so we manually cast the parameters accordingly.
if(elementsOnly&&debugNode instanceof DebugElement__POST_R3__&&predicate(debugNode)&&matches.indexOf(debugNode)===-1){matches.push(debugNode);}else if(!elementsOnly&&predicate(debugNode)&&matches.indexOf(debugNode)===-1){matches.push(debugNode);}}}/**
     * Match all the descendants of a DOM node against a predicate.
     *
     * @param nativeNode the current native node
     * @param predicate the predicate to match
     * @param matches the list of positive matches
     * @param elementsOnly whether only elements should be searched
     */function _queryNativeNodeDescendants(parentNode,predicate,matches,elementsOnly){var nodes=parentNode.childNodes;var length=nodes.length;for(var i=0;i<length;i++){var node=nodes[i];var debugNode=getDebugNode$1(node);if(debugNode){if(elementsOnly&&debugNode instanceof DebugElement__POST_R3__&&predicate(debugNode)&&matches.indexOf(debugNode)===-1){matches.push(debugNode);}else if(!elementsOnly&&predicate(debugNode)&&matches.indexOf(debugNode)===-1){matches.push(debugNode);}_queryNativeNodeDescendants(node,predicate,matches,elementsOnly);}}}/**
     * Iterates through the property bindings for a given node and generates
     * a map of property names to values. This map only contains property bindings
     * defined in templates, not in host bindings.
     */function collectPropertyBindings(properties,tNode,lView,tData){var bindingIndexes=tNode.propertyBindings;if(bindingIndexes!==null){for(var i=0;i<bindingIndexes.length;i++){var bindingIndex=bindingIndexes[i];var propMetadata=tData[bindingIndex];var metadataParts=propMetadata.split(INTERPOLATION_DELIMITER);var propertyName=metadataParts[0];if(metadataParts.length>1){var value=metadataParts[1];for(var j=1;j<metadataParts.length-1;j++){value+=renderStringify(lView[bindingIndex+j-1])+metadataParts[j+1];}properties[propertyName]=value;}else{properties[propertyName]=lView[bindingIndex];}}}}// Need to keep the nodes in a global Map so that multiple angular apps are supported.
var _nativeNodeToDebugNode=new Map();function getDebugNode__PRE_R3__(nativeNode){return _nativeNodeToDebugNode.get(nativeNode)||null;}var NG_DEBUG_PROPERTY='__ng_debug__';function getDebugNode__POST_R3__(nativeNode){if(nativeNode instanceof Node){if(!nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY)){nativeNode[NG_DEBUG_PROPERTY]=nativeNode.nodeType==Node.ELEMENT_NODE?new DebugElement__POST_R3__(nativeNode):new DebugNode__POST_R3__(nativeNode);}return nativeNode[NG_DEBUG_PROPERTY];}return null;}/**
     * @publicApi
     */var getDebugNode$1=getDebugNode__PRE_R3__;function getDebugNodeR2__PRE_R3__(nativeNode){return getDebugNode__PRE_R3__(nativeNode);}function getDebugNodeR2__POST_R3__(_nativeNode){return null;}var getDebugNodeR2=getDebugNodeR2__PRE_R3__;function getAllDebugNodes(){return Array.from(_nativeNodeToDebugNode.values());}function indexDebugNode(node){_nativeNodeToDebugNode.set(node.nativeNode,node);}function removeDebugNodeFromIndex(node){_nativeNodeToDebugNode["delete"](node.nativeNode);}/**
     * @publicApi
     */var DebugNode=DebugNode__PRE_R3__;/**
     * @publicApi
     */var DebugElement=DebugElement__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var _CORE_PLATFORM_PROVIDERS=[// Set a default platform name for platforms that don't set it explicitly.
{provide:PLATFORM_ID,useValue:'unknown'},{provide:PlatformRef,deps:[Injector]},{provide:TestabilityRegistry,deps:[]},{provide:Console,deps:[]}];/**
     * This platform has to be included in any other platform
     *
     * @publicApi
     */var platformCore=createPlatformFactory(null,'core',_CORE_PLATFORM_PROVIDERS);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function _iterableDiffersFactory(){return defaultIterableDiffers;}function _keyValueDiffersFactory(){return defaultKeyValueDiffers;}function _localeFactory(locale){locale=locale||getGlobalLocale();if(ivyEnabled){setLocaleId(locale);}return locale;}/**
     * Work out the locale from the potential global properties.
     *
     * * Closure Compiler: use `goog.LOCALE`.
     * * Ivy enabled: use `$localize.locale`
     */function getGlobalLocale(){if(typeof ngI18nClosureMode!=='undefined'&&ngI18nClosureMode&&typeof goog!=='undefined'&&goog.LOCALE!=='en'){// * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.
// * In order to preserve backwards compatibility, we use Angular default value over
//   Closure Compiler's one.
return goog.LOCALE;}else{// KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE
// COMPILE-TIME INLINER.
//
// * During compile time inlining of translations the expression will be replaced
//   with a string literal that is the current locale. Other forms of this expression are not
//   guaranteed to be replaced.
//
// * During runtime translation evaluation, the developer is required to set `$localize.locale`
//   if required, or just to provide their own `LOCALE_ID` provider.
return ivyEnabled&&typeof $localize!=='undefined'&&$localize.locale||DEFAULT_LOCALE_ID;}}var ɵ0$g=USD_CURRENCY_CODE;/**
     * A built-in [dependency injection token](guide/glossary#di-token)
     * that is used to configure the root injector for bootstrapping.
     */var APPLICATION_MODULE_PROVIDERS=[{provide:ApplicationRef,useClass:ApplicationRef,deps:[NgZone,Console,Injector,ErrorHandler,ComponentFactoryResolver,ApplicationInitStatus]},{provide:SCHEDULER,deps:[NgZone],useFactory:zoneSchedulerFactory},{provide:ApplicationInitStatus,useClass:ApplicationInitStatus,deps:[[new Optional(),APP_INITIALIZER]]},{provide:Compiler,useClass:Compiler,deps:[]},APP_ID_RANDOM_PROVIDER,{provide:IterableDiffers,useFactory:_iterableDiffersFactory,deps:[]},{provide:KeyValueDiffers,useFactory:_keyValueDiffersFactory,deps:[]},{provide:LOCALE_ID$1,useFactory:_localeFactory,deps:[[new Inject(LOCALE_ID$1),new Optional(),new SkipSelf()]]},{provide:DEFAULT_CURRENCY_CODE,useValue:ɵ0$g}];/**
     * Schedule work at next available slot.
     *
     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped
     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.
     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.
     *
     * @param ngZone NgZone to use for scheduling.
     */function zoneSchedulerFactory(ngZone){var queue=[];ngZone.onStable.subscribe(function(){while(queue.length){queue.pop()();}});return function(fn){queue.push(fn);};}/**
     * Configures the root injector for an app with
     * providers of `@angular/core` dependencies that `ApplicationRef` needs
     * to bootstrap components.
     *
     * Re-exported by `BrowserModule`, which is included automatically in the root
     * `AppModule` when you create a new app with the CLI `new` command.
     *
     * @publicApi
     */var ApplicationModule=/** @class */function(){// Inject ApplicationRef to make it eager...
function ApplicationModule(appRef){}ApplicationModule=__decorate([NgModule({providers:APPLICATION_MODULE_PROVIDERS}),__metadata("design:paramtypes",[ApplicationRef])],ApplicationModule);return ApplicationModule;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function anchorDef(flags,matchedQueriesDsl,ngContentIndex,childCount,handleEvent,templateFactory){flags|=1/* TypeElement */;var _a=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_a.matchedQueries,references=_a.references,matchedQueryIds=_a.matchedQueryIds;var template=templateFactory?resolveDefinition(templateFactory):null;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
flags:flags,checkIndex:-1,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:[],bindingFlags:0,outputs:[],element:{ns:null,name:null,attrs:null,template:template,componentProvider:null,componentView:null,componentRendererType:null,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};}function elementDef(checkIndex,flags,matchedQueriesDsl,ngContentIndex,childCount,namespaceAndName,fixedAttrs,bindings,outputs,handleEvent,componentView,componentRendererType){var _a;if(fixedAttrs===void 0){fixedAttrs=[];}if(!handleEvent){handleEvent=NOOP;}var _b=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_b.matchedQueries,references=_b.references,matchedQueryIds=_b.matchedQueryIds;var ns=null;var name=null;if(namespaceAndName){_a=__read(splitNamespace(namespaceAndName),2),ns=_a[0],name=_a[1];}bindings=bindings||[];var bindingDefs=[];for(var i=0;i<bindings.length;i++){var _c=__read(bindings[i],3),bindingFlags=_c[0],namespaceAndName_1=_c[1],suffixOrSecurityContext=_c[2];var _d=__read(splitNamespace(namespaceAndName_1),2),ns_1=_d[0],name_1=_d[1];var securityContext=undefined;var suffix=undefined;switch(bindingFlags&15/* Types */){case 4/* TypeElementStyle */:suffix=suffixOrSecurityContext;break;case 1/* TypeElementAttribute */:case 8/* TypeProperty */:securityContext=suffixOrSecurityContext;break;}bindingDefs[i]={flags:bindingFlags,ns:ns_1,name:name_1,nonMinifiedName:name_1,securityContext:securityContext,suffix:suffix};}outputs=outputs||[];var outputDefs=[];for(var i=0;i<outputs.length;i++){var _e=__read(outputs[i],2),target=_e[0],eventName=_e[1];outputDefs[i]={type:0/* ElementOutput */,target:target,eventName:eventName,propName:null};}fixedAttrs=fixedAttrs||[];var attrs=fixedAttrs.map(function(_a){var _b=__read(_a,2),namespaceAndName=_b[0],value=_b[1];var _c=__read(splitNamespace(namespaceAndName),2),ns=_c[0],name=_c[1];return[ns,name,value];});componentRendererType=resolveRendererType2(componentRendererType);if(componentView){flags|=33554432/* ComponentView */;}flags|=1/* TypeElement */;return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:bindingDefs,bindingFlags:calcBindingFlags(bindingDefs),outputs:outputDefs,element:{ns:ns,name:name,attrs:attrs,template:null,// will bet set by the view definition
componentProvider:null,componentView:componentView||null,componentRendererType:componentRendererType,publicProviders:null,allProviders:null,handleEvent:handleEvent||NOOP},provider:null,text:null,query:null,ngContent:null};}function createElement(view,renderHost,def){var elDef=def.element;var rootSelectorOrNode=view.root.selectorOrNode;var renderer=view.renderer;var el;if(view.parent||!rootSelectorOrNode){if(elDef.name){el=renderer.createElement(elDef.name,elDef.ns);}else{el=renderer.createComment('');}var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,el);}}else{// when using native Shadow DOM, do not clear the root element contents to allow slot projection
var preserveContent=!!elDef.componentRendererType&&elDef.componentRendererType.encapsulation===exports.ViewEncapsulation.ShadowDom;el=renderer.selectRootElement(rootSelectorOrNode,preserveContent);}if(elDef.attrs){for(var i=0;i<elDef.attrs.length;i++){var _a=__read(elDef.attrs[i],3),ns=_a[0],name_2=_a[1],value=_a[2];renderer.setAttribute(el,name_2,value,ns);}}return el;}function listenToElementOutputs(view,compView,def,el){for(var i=0;i<def.outputs.length;i++){var output=def.outputs[i];var handleEventClosure=renderEventHandlerClosure(view,def.nodeIndex,elementEventFullName(output.target,output.eventName));var listenTarget=output.target;var listenerView=view;if(output.target==='component'){listenTarget=null;listenerView=compView;}var disposable=listenerView.renderer.listen(listenTarget||el,output.eventName,handleEventClosure);view.disposables[def.outputIndex+i]=disposable;}}function renderEventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}function checkAndUpdateElementInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=def.bindings.length;var changed=false;if(bindLen>0&&checkAndUpdateElementValue(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateElementValue(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateElementValue(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateElementValue(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateElementValue(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateElementValue(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateElementValue(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateElementValue(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateElementValue(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateElementValue(view,def,9,v9))changed=true;return changed;}function checkAndUpdateElementDynamic(view,def,values){var changed=false;for(var i=0;i<values.length;i++){if(checkAndUpdateElementValue(view,def,i,values[i]))changed=true;}return changed;}function checkAndUpdateElementValue(view,def,bindingIdx,value){if(!checkAndUpdateBinding(view,def,bindingIdx,value)){return false;}var binding=def.bindings[bindingIdx];var elData=asElementData(view,def.nodeIndex);var renderNode=elData.renderElement;var name=binding.name;switch(binding.flags&15/* Types */){case 1/* TypeElementAttribute */:setElementAttribute(view,binding,renderNode,binding.ns,name,value);break;case 2/* TypeElementClass */:setElementClass(view,renderNode,name,value);break;case 4/* TypeElementStyle */:setElementStyle(view,binding,renderNode,name,value);break;case 8/* TypeProperty */:var bindView=def.flags&33554432/* ComponentView */&&binding.flags&32/* SyntheticHostProperty */?elData.componentView:view;setElementProperty(bindView,binding,renderNode,name,value);break;}return true;}function setElementAttribute(view,binding,renderNode,ns,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;renderValue=renderValue!=null?renderValue.toString():null;var renderer=view.renderer;if(value!=null){renderer.setAttribute(renderNode,name,renderValue,ns);}else{renderer.removeAttribute(renderNode,name,ns);}}function setElementClass(view,renderNode,name,value){var renderer=view.renderer;if(value){renderer.addClass(renderNode,name);}else{renderer.removeClass(renderNode,name);}}function setElementStyle(view,binding,renderNode,name,value){var renderValue=view.root.sanitizer.sanitize(exports.SecurityContext.STYLE,value);if(renderValue!=null){renderValue=renderValue.toString();var unit=binding.suffix;if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}var renderer=view.renderer;if(renderValue!=null){renderer.setStyle(renderNode,name,renderValue);}else{renderer.removeStyle(renderNode,name);}}function setElementProperty(view,binding,renderNode,name,value){var securityContext=binding.securityContext;var renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;view.renderer.setProperty(renderNode,name,renderValue);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function queryDef(flags,id,bindings){var bindingDefs=[];for(var propName in bindings){var bindingType=bindings[propName];bindingDefs.push({propName:propName,bindingType:bindingType});}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
// TODO(vicb): check
checkIndex:-1,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,ngContentIndex:-1,matchedQueries:{},matchedQueryIds:0,references:{},childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:{id:id,filterId:filterQueryId(id),bindings:bindingDefs},ngContent:null};}function createQuery(){return new QueryList();}function dirtyParentQueries(view){var queryIds=view.def.nodeMatchedQueries;while(view.parent&&isEmbeddedView(view)){var tplDef=view.parentNodeDef;view=view.parent;// content queries
var end=tplDef.nodeIndex+tplDef.childCount;for(var i=0;i<=end;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&67108864/* TypeContentQuery */&&nodeDef.flags&536870912/* DynamicQuery */&&(nodeDef.query.filterId&queryIds)===nodeDef.query.filterId){asQueryList(view,i).setDirty();}if(nodeDef.flags&1/* TypeElement */&&i+nodeDef.childCount<tplDef.nodeIndex||!(nodeDef.childFlags&67108864/* TypeContentQuery */)||!(nodeDef.childFlags&536870912/* DynamicQuery */)){// skip elements that don't contain the template element or no query.
i+=nodeDef.childCount;}}}// view queries
if(view.def.nodeFlags&134217728/* TypeViewQuery */){for(var i=0;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&134217728/* TypeViewQuery */&&nodeDef.flags&536870912/* DynamicQuery */){asQueryList(view,i).setDirty();}// only visit the root nodes
i+=nodeDef.childCount;}}}function checkAndUpdateQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(!queryList.dirty){return;}var directiveInstance;var newValues=undefined;if(nodeDef.flags&67108864/* TypeContentQuery */){var elementDef=nodeDef.parent.parent;newValues=calcQueryValues(view,elementDef.nodeIndex,elementDef.nodeIndex+elementDef.childCount,nodeDef.query,[]);directiveInstance=asProviderData(view,nodeDef.parent.nodeIndex).instance;}else if(nodeDef.flags&134217728/* TypeViewQuery */){newValues=calcQueryValues(view,0,view.def.nodes.length-1,nodeDef.query,[]);directiveInstance=view.component;}queryList.reset(newValues);var bindings=nodeDef.query.bindings;var notify=false;for(var i=0;i<bindings.length;i++){var binding=bindings[i];var boundValue=void 0;switch(binding.bindingType){case 0/* First */:boundValue=queryList.first;break;case 1/* All */:boundValue=queryList;notify=true;break;}directiveInstance[binding.propName]=boundValue;}if(notify){queryList.notifyOnChanges();}}function calcQueryValues(view,startIndex,endIndex,queryDef,values){for(var i=startIndex;i<=endIndex;i++){var nodeDef=view.def.nodes[i];var valueType=nodeDef.matchedQueries[queryDef.id];if(valueType!=null){values.push(getQueryValue(view,nodeDef,valueType));}if(nodeDef.flags&1/* TypeElement */&&nodeDef.element.template&&(nodeDef.element.template.nodeMatchedQueries&queryDef.filterId)===queryDef.filterId){var elementData=asElementData(view,i);// check embedded views that were attached at the place of their template,
// but process child nodes first if some match the query (see issue #16568)
if((nodeDef.childMatchedQueries&queryDef.filterId)===queryDef.filterId){calcQueryValues(view,i+1,i+nodeDef.childCount,queryDef,values);i+=nodeDef.childCount;}if(nodeDef.flags&16777216/* EmbeddedViews */){var embeddedViews=elementData.viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){var embeddedView=embeddedViews[k];var dvc=declaredViewContainer(embeddedView);if(dvc&&dvc===elementData){calcQueryValues(embeddedView,0,embeddedView.def.nodes.length-1,queryDef,values);}}}var projectedViews=elementData.template._projectedViews;if(projectedViews){for(var k=0;k<projectedViews.length;k++){var projectedView=projectedViews[k];calcQueryValues(projectedView,0,projectedView.def.nodes.length-1,queryDef,values);}}}if((nodeDef.childMatchedQueries&queryDef.filterId)!==queryDef.filterId){// if no child matches the query, skip the children.
i+=nodeDef.childCount;}}return values;}function getQueryValue(view,nodeDef,queryValueType){if(queryValueType!=null){// a match
switch(queryValueType){case 1/* RenderElement */:return asElementData(view,nodeDef.nodeIndex).renderElement;case 0/* ElementRef */:return new ElementRef(asElementData(view,nodeDef.nodeIndex).renderElement);case 2/* TemplateRef */:return asElementData(view,nodeDef.nodeIndex).template;case 3/* ViewContainerRef */:return asElementData(view,nodeDef.nodeIndex).viewContainer;case 4/* Provider */:return asProviderData(view,nodeDef.nodeIndex).instance;}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function ngContentDef(ngContentIndex,index){return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:-1,flags:8/* TypeNgContent */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:[],bindingFlags:0,outputs:[],element:null,provider:null,text:null,query:null,ngContent:{index:index}};}function appendNgContent(view,renderHost,def){var parentEl=getParentRenderElement(view,renderHost,def);if(!parentEl){// Nothing to do if there is no parent element.
return;}var ngContentIndex=def.ngContent.index;visitProjectedRenderNodes(view,ngContentIndex,1/* AppendChild */,parentEl,null,undefined);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function purePipeDef(checkIndex,argCount){// argCount + 1 to include the pipe as first arg
return _pureExpressionDef(128/* TypePurePipe */,checkIndex,newArray(argCount+1));}function pureArrayDef(checkIndex,argCount){return _pureExpressionDef(32/* TypePureArray */,checkIndex,newArray(argCount));}function pureObjectDef(checkIndex,propToIndex){var keys=Object.keys(propToIndex);var nbKeys=keys.length;var propertyNames=[];for(var i=0;i<nbKeys;i++){var key=keys[i];var index=propToIndex[key];propertyNames.push(key);}return _pureExpressionDef(64/* TypePureObject */,checkIndex,propertyNames);}function _pureExpressionDef(flags,checkIndex,propertyNames){var bindings=[];for(var i=0;i<propertyNames.length;i++){var prop=propertyNames[i];bindings.push({flags:8/* TypeProperty */,name:prop,ns:null,nonMinifiedName:prop,securityContext:null,suffix:null});}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:flags,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:-1,childCount:0,bindings:bindings,bindingFlags:calcBindingFlags(bindings),outputs:[],element:null,provider:null,text:null,query:null,ngContent:null};}function createPureExpression(view,def){return{value:undefined};}function checkAndUpdatePureExpressionInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindings=def.bindings;var changed=false;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=[];if(bindLen>0)value.push(v0);if(bindLen>1)value.push(v1);if(bindLen>2)value.push(v2);if(bindLen>3)value.push(v3);if(bindLen>4)value.push(v4);if(bindLen>5)value.push(v5);if(bindLen>6)value.push(v6);if(bindLen>7)value.push(v7);if(bindLen>8)value.push(v8);if(bindLen>9)value.push(v9);break;case 64/* TypePureObject */:value={};if(bindLen>0)value[bindings[0].name]=v0;if(bindLen>1)value[bindings[1].name]=v1;if(bindLen>2)value[bindings[2].name]=v2;if(bindLen>3)value[bindings[3].name]=v3;if(bindLen>4)value[bindings[4].name]=v4;if(bindLen>5)value[bindings[5].name]=v5;if(bindLen>6)value[bindings[6].name]=v6;if(bindLen>7)value[bindings[7].name]=v7;if(bindLen>8)value[bindings[8].name]=v8;if(bindLen>9)value[bindings[9].name]=v9;break;case 128/* TypePurePipe */:var pipe=v0;switch(bindLen){case 1:value=pipe.transform(v0);break;case 2:value=pipe.transform(v1);break;case 3:value=pipe.transform(v1,v2);break;case 4:value=pipe.transform(v1,v2,v3);break;case 5:value=pipe.transform(v1,v2,v3,v4);break;case 6:value=pipe.transform(v1,v2,v3,v4,v5);break;case 7:value=pipe.transform(v1,v2,v3,v4,v5,v6);break;case 8:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7);break;case 9:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8);break;case 10:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}break;}data.value=value;}return changed;}function checkAndUpdatePureExpressionDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var data=asPureExpressionData(view,def.nodeIndex);var value=void 0;switch(def.flags&201347067/* Types */){case 32/* TypePureArray */:value=values;break;case 64/* TypePureObject */:value={};for(var i=0;i<values.length;i++){value[bindings[i].name]=values[i];}break;case 128/* TypePurePipe */:var pipe=values[0];var params=values.slice(1);value=pipe.transform.apply(pipe,__spread(params));break;}data.value=value;}return changed;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function textDef(checkIndex,ngContentIndex,staticText){var bindings=[];for(var i=1;i<staticText.length;i++){bindings[i-1]={flags:8/* TypeProperty */,name:null,ns:null,nonMinifiedName:null,securityContext:null,suffix:staticText[i]};}return{// will bet set by the view definition
nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,// regular values
checkIndex:checkIndex,flags:2/* TypeText */,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:bindings,bindingFlags:8/* TypeProperty */,outputs:[],element:null,provider:null,text:{prefix:staticText[0]},query:null,ngContent:null};}function createText(view,renderHost,def){var renderNode;var renderer=view.renderer;renderNode=renderer.createText(def.text.prefix);var parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,renderNode);}return{renderText:renderNode};}function checkAndUpdateTextInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var changed=false;var bindings=def.bindings;var bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var value=def.text.prefix;if(bindLen>0)value+=_addInterpolationPart(v0,bindings[0]);if(bindLen>1)value+=_addInterpolationPart(v1,bindings[1]);if(bindLen>2)value+=_addInterpolationPart(v2,bindings[2]);if(bindLen>3)value+=_addInterpolationPart(v3,bindings[3]);if(bindLen>4)value+=_addInterpolationPart(v4,bindings[4]);if(bindLen>5)value+=_addInterpolationPart(v5,bindings[5]);if(bindLen>6)value+=_addInterpolationPart(v6,bindings[6]);if(bindLen>7)value+=_addInterpolationPart(v7,bindings[7]);if(bindLen>8)value+=_addInterpolationPart(v8,bindings[8]);if(bindLen>9)value+=_addInterpolationPart(v9,bindings[9]);var renderNode=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode,value);}return changed;}function checkAndUpdateTextDynamic(view,def,values){var bindings=def.bindings;var changed=false;for(var i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var value='';for(var i=0;i<values.length;i++){value=value+_addInterpolationPart(values[i],bindings[i]);}value=def.text.prefix+value;var renderNode=asTextData(view,def.nodeIndex).renderText;view.renderer.setValue(renderNode,value);}return changed;}function _addInterpolationPart(value,binding){var valueStr=value!=null?value.toString():'';return valueStr+binding.suffix;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function viewDef(flags,nodes,updateDirectives,updateRenderer){// clone nodes and set auto calculated values
var viewBindingCount=0;var viewDisposableCount=0;var viewNodeFlags=0;var viewRootNodeFlags=0;var viewMatchedQueries=0;var currentParent=null;var currentRenderParent=null;var currentElementHasPublicProviders=false;var currentElementHasPrivateProviders=false;var lastRenderRootNode=null;for(var i=0;i<nodes.length;i++){var node=nodes[i];node.nodeIndex=i;node.parent=currentParent;node.bindingIndex=viewBindingCount;node.outputIndex=viewDisposableCount;node.renderParent=currentRenderParent;viewNodeFlags|=node.flags;viewMatchedQueries|=node.matchedQueryIds;if(node.element){var elDef=node.element;elDef.publicProviders=currentParent?currentParent.element.publicProviders:Object.create(null);elDef.allProviders=elDef.publicProviders;// Note: We assume that all providers of an element are before any child element!
currentElementHasPublicProviders=false;currentElementHasPrivateProviders=false;if(node.element.template){viewMatchedQueries|=node.element.template.nodeMatchedQueries;}}validateNode(currentParent,node,nodes.length);viewBindingCount+=node.bindings.length;viewDisposableCount+=node.outputs.length;if(!currentRenderParent&&node.flags&3/* CatRenderNode */){lastRenderRootNode=node;}if(node.flags&20224/* CatProvider */){if(!currentElementHasPublicProviders){currentElementHasPublicProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.publicProviders=Object.create(currentParent.element.publicProviders);currentParent.element.allProviders=currentParent.element.publicProviders;}var isPrivateService=(node.flags&8192/* PrivateProvider */)!==0;var isComponent=(node.flags&32768/* Component */)!==0;if(!isPrivateService||isComponent){currentParent.element.publicProviders[tokenKey(node.provider.token)]=node;}else{if(!currentElementHasPrivateProviders){currentElementHasPrivateProviders=true;// Use prototypical inheritance to not get O(n^2) complexity...
currentParent.element.allProviders=Object.create(currentParent.element.publicProviders);}currentParent.element.allProviders[tokenKey(node.provider.token)]=node;}if(isComponent){currentParent.element.componentProvider=node;}}if(currentParent){currentParent.childFlags|=node.flags;currentParent.directChildFlags|=node.flags;currentParent.childMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){currentParent.childMatchedQueries|=node.element.template.nodeMatchedQueries;}}else{viewRootNodeFlags|=node.flags;}if(node.childCount>0){currentParent=node;if(!isNgContainer(node)){currentRenderParent=node;}}else{// When the current node has no children, check if it is the last children of its parent.
// When it is, propagate the flags up.
// The loop is required because an element could be the last transitive children of several
// elements. We loop to either the root or the highest opened element (= with remaining
// children)
while(currentParent&&i===currentParent.nodeIndex+currentParent.childCount){var newParent=currentParent.parent;if(newParent){newParent.childFlags|=currentParent.childFlags;newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=newParent;// We also need to update the render parent & account for ng-container
if(currentParent&&isNgContainer(currentParent)){currentRenderParent=currentParent.renderParent;}else{currentRenderParent=currentParent;}}}}var handleEvent=function handleEvent(view,nodeIndex,eventName,event){return nodes[nodeIndex].element.handleEvent(view,eventName,event);};return{// Will be filled later...
factory:null,nodeFlags:viewNodeFlags,rootNodeFlags:viewRootNodeFlags,nodeMatchedQueries:viewMatchedQueries,flags:flags,nodes:nodes,updateDirectives:updateDirectives||NOOP,updateRenderer:updateRenderer||NOOP,handleEvent:handleEvent,bindingCount:viewBindingCount,outputCount:viewDisposableCount,lastRenderRootNode:lastRenderRootNode};}function isNgContainer(node){return(node.flags&1/* TypeElement */)!==0&&node.element.name===null;}function validateNode(parent,node,nodeCount){var template=node.element&&node.element.template;if(template){if(!template.lastRenderRootNode){throw new Error("Illegal State: Embedded templates without nodes are not allowed!");}if(template.lastRenderRootNode&&template.lastRenderRootNode.flags&16777216/* EmbeddedViews */){throw new Error("Illegal State: Last root node of a template can't have embedded views, at index "+node.nodeIndex+"!");}}if(node.flags&20224/* CatProvider */){var parentFlags=parent?parent.flags:0;if((parentFlags&1/* TypeElement */)===0){throw new Error("Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index "+node.nodeIndex+"!");}}if(node.query){if(node.flags&67108864/* TypeContentQuery */&&(!parent||(parent.flags&16384/* TypeDirective */)===0)){throw new Error("Illegal State: Content Query nodes need to be children of directives, at index "+node.nodeIndex+"!");}if(node.flags&134217728/* TypeViewQuery */&&parent){throw new Error("Illegal State: View Query nodes have to be top level nodes, at index "+node.nodeIndex+"!");}}if(node.childCount){var parentEnd=parent?parent.nodeIndex+parent.childCount:nodeCount-1;if(node.nodeIndex<=parentEnd&&node.nodeIndex+node.childCount>parentEnd){throw new Error("Illegal State: childCount of node leads outside of parent, at index "+node.nodeIndex+"!");}}}function createEmbeddedView(parent,anchorDef,viewDef,context){// embedded views are seen as siblings to the anchor, so we need
// to get the parent of the anchor and use it as parentIndex.
var view=createView(parent.root,parent.renderer,parent,anchorDef,viewDef);initView(view,parent.component,context);createViewNodes(view);return view;}function createRootView(root,def,context){var view=createView(root,root.renderer,null,null,def);initView(view,context,context);createViewNodes(view);return view;}function createComponentView(parentView,nodeDef,viewDef,hostElement){var rendererType=nodeDef.element.componentRendererType;var compRenderer;if(!rendererType){compRenderer=parentView.root.renderer;}else{compRenderer=parentView.root.rendererFactory.createRenderer(hostElement,rendererType);}return createView(parentView.root,compRenderer,parentView,nodeDef.element.componentProvider,viewDef);}function createView(root,renderer,parent,parentNodeDef,def){var nodes=new Array(def.nodes.length);var disposables=def.outputCount?new Array(def.outputCount):null;var view={def:def,parent:parent,viewContainerParent:null,parentNodeDef:parentNodeDef,context:null,component:null,nodes:nodes,state:13/* CatInit */,root:root,renderer:renderer,oldValues:new Array(def.bindingCount),disposables:disposables,initIndex:-1};return view;}function initView(view,component,context){view.component=component;view.context=context;}function createViewNodes(view){var renderHost;if(isComponentView(view)){var hostDef=view.parentNodeDef;renderHost=asElementData(view.parent,hostDef.parent.nodeIndex).renderElement;}var def=view.def;var nodes=view.nodes;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];Services.setCurrentNode(view,i);var nodeData=void 0;switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:var el=createElement(view,renderHost,nodeDef);var componentView=undefined;if(nodeDef.flags&33554432/* ComponentView */){var compViewDef=resolveDefinition(nodeDef.element.componentView);componentView=Services.createComponentView(view,nodeDef,compViewDef,el);}listenToElementOutputs(view,componentView,nodeDef,el);nodeData={renderElement:el,componentView:componentView,viewContainer:null,template:nodeDef.element.template?createTemplateData(view,nodeDef):undefined};if(nodeDef.flags&16777216/* EmbeddedViews */){nodeData.viewContainer=createViewContainerData(view,nodeDef,nodeData);}break;case 2/* TypeText */:nodeData=createText(view,renderHost,nodeDef);break;case 512/* TypeClassProvider */:case 1024/* TypeFactoryProvider */:case 2048/* TypeUseExistingProvider */:case 256/* TypeValueProvider */:{nodeData=nodes[i];if(!nodeData&&!(nodeDef.flags&4096/* LazyProvider */)){var instance=createProviderInstance(view,nodeDef);nodeData={instance:instance};}break;}case 16/* TypePipe */:{var instance=createPipeInstance(view,nodeDef);nodeData={instance:instance};break;}case 16384/* TypeDirective */:{nodeData=nodes[i];if(!nodeData){var instance=createDirectiveInstance(view,nodeDef);nodeData={instance:instance};}if(nodeDef.flags&32768/* Component */){var compView=asElementData(view,nodeDef.parent.nodeIndex).componentView;initView(compView,nodeData.instance,nodeData.instance);}break;}case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:nodeData=createPureExpression(view,nodeDef);break;case 67108864/* TypeContentQuery */:case 134217728/* TypeViewQuery */:nodeData=createQuery();break;case 8/* TypeNgContent */:appendNgContent(view,renderHost,nodeDef);// no runtime data needed for NgContent...
nodeData=undefined;break;}nodes[i]=nodeData;}// Create the ViewData.nodes of component views after we created everything else,
// so that e.g. ng-content works
execComponentViewsAction(view,ViewAction.CreateViewNodes);// fill static content and view queries
execQueriesAction(view,67108864/* TypeContentQuery */|134217728/* TypeViewQuery */,268435456/* StaticQuery */,0/* CheckAndUpdate */);}function checkNoChangesView(view){markProjectedViewsForCheck(view);Services.updateDirectives(view,1/* CheckNoChanges */);execEmbeddedViewsAction(view,ViewAction.CheckNoChanges);Services.updateRenderer(view,1/* CheckNoChanges */);execComponentViewsAction(view,ViewAction.CheckNoChanges);// Note: We don't check queries for changes as we didn't do this in v2.x.
// TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.
view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);}function checkAndUpdateView(view){if(view.state&1/* BeforeFirstCheck */){view.state&=~1/* BeforeFirstCheck */;view.state|=2/* FirstCheck */;}else{view.state&=~2/* FirstCheck */;}shiftInitState(view,0/* InitState_BeforeInit */,256/* InitState_CallingOnInit */);markProjectedViewsForCheck(view);Services.updateDirectives(view,0/* CheckAndUpdate */);execEmbeddedViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,67108864/* TypeContentQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);var callInit=shiftInitState(view,256/* InitState_CallingOnInit */,512/* InitState_CallingAfterContentInit */);callLifecycleHooksChildrenFirst(view,2097152/* AfterContentChecked */|(callInit?1048576/* AfterContentInit */:0));Services.updateRenderer(view,0/* CheckAndUpdate */);execComponentViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,134217728/* TypeViewQuery */,536870912/* DynamicQuery */,0/* CheckAndUpdate */);callInit=shiftInitState(view,512/* InitState_CallingAfterContentInit */,768/* InitState_CallingAfterViewInit */);callLifecycleHooksChildrenFirst(view,8388608/* AfterViewChecked */|(callInit?4194304/* AfterViewInit */:0));if(view.def.flags&2/* OnPush */){view.state&=~8/* ChecksEnabled */;}view.state&=~(64/* CheckProjectedViews */|32/* CheckProjectedView */);shiftInitState(view,768/* InitState_CallingAfterViewInit */,1024/* InitState_AfterInit */);}function checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){return checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{return checkAndUpdateNodeDynamic(view,nodeDef,v0);}}function markProjectedViewsForCheck(view){var def=view.def;if(!(def.nodeFlags&4/* ProjectedTemplate */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&4/* ProjectedTemplate */){var projectedViews=asElementData(view,i).template._projectedViews;if(projectedViews){for(var i_1=0;i_1<projectedViews.length;i_1++){var projectedView=projectedViews[i_1];projectedView.state|=32/* CheckProjectedView */;markParentViewsForCheckProjectedViews(projectedView,view);}}}else if((nodeDef.childFlags&4/* ProjectedTemplate */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 2/* TypeText */:return checkAndUpdateTextInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 16384/* TypeDirective */:return checkAndUpdateDirectiveInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);default:throw'unreachable';}}function checkAndUpdateNodeDynamic(view,nodeDef,values){switch(nodeDef.flags&201347067/* Types */){case 1/* TypeElement */:return checkAndUpdateElementDynamic(view,nodeDef,values);case 2/* TypeText */:return checkAndUpdateTextDynamic(view,nodeDef,values);case 16384/* TypeDirective */:return checkAndUpdateDirectiveDynamic(view,nodeDef,values);case 32/* TypePureArray */:case 64/* TypePureObject */:case 128/* TypePurePipe */:return checkAndUpdatePureExpressionDynamic(view,nodeDef,values);default:throw'unreachable';}}function checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===0/* Inline */){checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{checkNoChangesNodeDynamic(view,nodeDef,v0);}// Returning false is ok here as we would have thrown in case of a change.
return false;}function checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var bindLen=nodeDef.bindings.length;if(bindLen>0)checkBindingNoChanges(view,nodeDef,0,v0);if(bindLen>1)checkBindingNoChanges(view,nodeDef,1,v1);if(bindLen>2)checkBindingNoChanges(view,nodeDef,2,v2);if(bindLen>3)checkBindingNoChanges(view,nodeDef,3,v3);if(bindLen>4)checkBindingNoChanges(view,nodeDef,4,v4);if(bindLen>5)checkBindingNoChanges(view,nodeDef,5,v5);if(bindLen>6)checkBindingNoChanges(view,nodeDef,6,v6);if(bindLen>7)checkBindingNoChanges(view,nodeDef,7,v7);if(bindLen>8)checkBindingNoChanges(view,nodeDef,8,v8);if(bindLen>9)checkBindingNoChanges(view,nodeDef,9,v9);}function checkNoChangesNodeDynamic(view,nodeDef,values){for(var i=0;i<values.length;i++){checkBindingNoChanges(view,nodeDef,i,values[i]);}}/**
     * Workaround https://github.com/angular/tsickle/issues/497
     * @suppress {misplacedTypeAnnotation}
     */function checkNoChangesQuery(view,nodeDef){var queryList=asQueryList(view,nodeDef.nodeIndex);if(queryList.dirty){throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view,nodeDef.nodeIndex),"Query "+nodeDef.query.id+" not dirty","Query "+nodeDef.query.id+" dirty",(view.state&1/* BeforeFirstCheck */)!==0);}}function destroyView(view){if(view.state&128/* Destroyed */){return;}execEmbeddedViewsAction(view,ViewAction.Destroy);execComponentViewsAction(view,ViewAction.Destroy);callLifecycleHooksChildrenFirst(view,131072/* OnDestroy */);if(view.disposables){for(var i=0;i<view.disposables.length;i++){view.disposables[i]();}}detachProjectedView(view);if(view.renderer.destroyNode){destroyViewNodes(view);}if(isComponentView(view)){view.renderer.destroy();}view.state|=128/* Destroyed */;}function destroyViewNodes(view){var len=view.def.nodes.length;for(var i=0;i<len;i++){var def=view.def.nodes[i];if(def.flags&1/* TypeElement */){view.renderer.destroyNode(asElementData(view,i).renderElement);}else if(def.flags&2/* TypeText */){view.renderer.destroyNode(asTextData(view,i).renderText);}else if(def.flags&67108864/* TypeContentQuery */||def.flags&134217728/* TypeViewQuery */){asQueryList(view,i).destroy();}}}var ViewAction;(function(ViewAction){ViewAction[ViewAction["CreateViewNodes"]=0]="CreateViewNodes";ViewAction[ViewAction["CheckNoChanges"]=1]="CheckNoChanges";ViewAction[ViewAction["CheckNoChangesProjectedViews"]=2]="CheckNoChangesProjectedViews";ViewAction[ViewAction["CheckAndUpdate"]=3]="CheckAndUpdate";ViewAction[ViewAction["CheckAndUpdateProjectedViews"]=4]="CheckAndUpdateProjectedViews";ViewAction[ViewAction["Destroy"]=5]="Destroy";})(ViewAction||(ViewAction={}));function execComponentViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&33554432/* ComponentView */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&33554432/* ComponentView */){// a leaf
callViewAction(asElementData(view,i).componentView,action);}else if((nodeDef.childFlags&33554432/* ComponentView */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function execEmbeddedViewsAction(view,action){var def=view.def;if(!(def.nodeFlags&16777216/* EmbeddedViews */)){return;}for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&16777216/* EmbeddedViews */){// a leaf
var embeddedViews=asElementData(view,i).viewContainer._embeddedViews;for(var k=0;k<embeddedViews.length;k++){callViewAction(embeddedViews[k],action);}}else if((nodeDef.childFlags&16777216/* EmbeddedViews */)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}function callViewAction(view,action){var viewState=view.state;switch(action){case ViewAction.CheckNoChanges:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckNoChangesProjectedViews);}}break;case ViewAction.CheckNoChangesProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkNoChangesView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.CheckAndUpdate:if((viewState&128/* Destroyed */)===0){if((viewState&12/* CatDetectChanges */)===12/* CatDetectChanges */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,ViewAction.CheckAndUpdateProjectedViews);}}break;case ViewAction.CheckAndUpdateProjectedViews:if((viewState&128/* Destroyed */)===0){if(viewState&32/* CheckProjectedView */){checkAndUpdateView(view);}else if(viewState&64/* CheckProjectedViews */){execProjectedViewsAction(view,action);}}break;case ViewAction.Destroy:// Note: destroyView recurses over all views,
// so we don't need to special case projected views here.
destroyView(view);break;case ViewAction.CreateViewNodes:createViewNodes(view);break;}}function execProjectedViewsAction(view,action){execEmbeddedViewsAction(view,action);execComponentViewsAction(view,action);}function execQueriesAction(view,queryFlags,staticDynamicQueryFlag,checkType){if(!(view.def.nodeFlags&queryFlags)||!(view.def.nodeFlags&staticDynamicQueryFlag)){return;}var nodeCount=view.def.nodes.length;for(var i=0;i<nodeCount;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&queryFlags&&nodeDef.flags&staticDynamicQueryFlag){Services.setCurrentNode(view,nodeDef.nodeIndex);switch(checkType){case 0/* CheckAndUpdate */:checkAndUpdateQuery(view,nodeDef);break;case 1/* CheckNoChanges */:checkNoChangesQuery(view,nodeDef);break;}}if(!(nodeDef.childFlags&queryFlags)||!(nodeDef.childFlags&staticDynamicQueryFlag)){// no child has a matching query
// then skip the children
i+=nodeDef.childCount;}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var initialized=false;function initServicesIfNeeded(){if(initialized){return;}initialized=true;var services=isDevMode()?createDebugServices():createProdServices();Services.setCurrentNode=services.setCurrentNode;Services.createRootView=services.createRootView;Services.createEmbeddedView=services.createEmbeddedView;Services.createComponentView=services.createComponentView;Services.createNgModuleRef=services.createNgModuleRef;Services.overrideProvider=services.overrideProvider;Services.overrideComponentView=services.overrideComponentView;Services.clearOverrides=services.clearOverrides;Services.checkAndUpdateView=services.checkAndUpdateView;Services.checkNoChangesView=services.checkNoChangesView;Services.destroyView=services.destroyView;Services.resolveDep=resolveDep;Services.createDebugContext=services.createDebugContext;Services.handleEvent=services.handleEvent;Services.updateDirectives=services.updateDirectives;Services.updateRenderer=services.updateRenderer;Services.dirtyParentQueries=dirtyParentQueries;}function createProdServices(){return{setCurrentNode:function setCurrentNode(){},createRootView:createProdRootView,createEmbeddedView:createEmbeddedView,createComponentView:createComponentView,createNgModuleRef:createNgModuleRef,overrideProvider:NOOP,overrideComponentView:NOOP,clearOverrides:NOOP,checkAndUpdateView:checkAndUpdateView,checkNoChangesView:checkNoChangesView,destroyView:destroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:function handleEvent(view,nodeIndex,eventName,event){return view.def.handleEvent(view,nodeIndex,eventName,event);},updateDirectives:function updateDirectives(view,checkType){return view.def.updateDirectives(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);},updateRenderer:function updateRenderer(view,checkType){return view.def.updateRenderer(checkType===0/* CheckAndUpdate */?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);}};}function createDebugServices(){return{setCurrentNode:debugSetCurrentNode,createRootView:debugCreateRootView,createEmbeddedView:debugCreateEmbeddedView,createComponentView:debugCreateComponentView,createNgModuleRef:debugCreateNgModuleRef,overrideProvider:debugOverrideProvider,overrideComponentView:debugOverrideComponentView,clearOverrides:debugClearOverrides,checkAndUpdateView:debugCheckAndUpdateView,checkNoChangesView:debugCheckNoChangesView,destroyView:debugDestroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:debugHandleEvent,updateDirectives:debugUpdateDirectives,updateRenderer:debugUpdateRenderer};}function createProdRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);return createRootView(createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode),def,context);}function debugCreateRootView(elInjector,projectableNodes,rootSelectorOrNode,def,ngModule,context){var rendererFactory=ngModule.injector.get(RendererFactory2);var root=createRootData(elInjector,ngModule,new DebugRendererFactory2(rendererFactory),projectableNodes,rootSelectorOrNode);var defWithOverride=applyProviderOverridesToView(def);return callWithDebugContext(DebugAction.create,createRootView,null,[root,defWithOverride,context]);}function createRootData(elInjector,ngModule,rendererFactory,projectableNodes,rootSelectorOrNode){var sanitizer=ngModule.injector.get(Sanitizer);var errorHandler=ngModule.injector.get(ErrorHandler);var renderer=rendererFactory.createRenderer(null,null);return{ngModule:ngModule,injector:elInjector,projectableNodes:projectableNodes,selectorOrNode:rootSelectorOrNode,sanitizer:sanitizer,rendererFactory:rendererFactory,renderer:renderer,errorHandler:errorHandler};}function debugCreateEmbeddedView(parentView,anchorDef,viewDef,context){var defWithOverride=applyProviderOverridesToView(viewDef);return callWithDebugContext(DebugAction.create,createEmbeddedView,null,[parentView,anchorDef,defWithOverride,context]);}function debugCreateComponentView(parentView,nodeDef,viewDef,hostElement){var overrideComponentView=viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);if(overrideComponentView){viewDef=overrideComponentView;}else{viewDef=applyProviderOverridesToView(viewDef);}return callWithDebugContext(DebugAction.create,createComponentView,null,[parentView,nodeDef,viewDef,hostElement]);}function debugCreateNgModuleRef(moduleType,parentInjector,bootstrapComponents,def){var defWithOverride=applyProviderOverridesToNgModule(def);return createNgModuleRef(moduleType,parentInjector,bootstrapComponents,defWithOverride);}var providerOverrides=new Map();var providerOverridesWithScope=new Map();var viewDefOverrides=new Map();function debugOverrideProvider(override){providerOverrides.set(override.token,override);var injectableDef;if(typeof override.token==='function'&&(injectableDef=getInjectableDef(override.token))&&typeof injectableDef.providedIn==='function'){providerOverridesWithScope.set(override.token,override);}}function debugOverrideComponentView(comp,compFactory){var hostViewDef=resolveDefinition(getComponentViewDefinitionFactory(compFactory));var compViewDef=resolveDefinition(hostViewDef.nodes[0].element.componentView);viewDefOverrides.set(comp,compViewDef);}function debugClearOverrides(){providerOverrides.clear();providerOverridesWithScope.clear();viewDefOverrides.clear();}// Notes about the algorithm:
// 1) Locate the providers of an element and check if one of them was overwritten
// 2) Change the providers of that element
//
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToView(def){if(providerOverrides.size===0){return def;}var elementIndicesWithOverwrittenProviders=findElementIndicesWithOverwrittenProviders(def);if(elementIndicesWithOverwrittenProviders.length===0){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});for(var i=0;i<elementIndicesWithOverwrittenProviders.length;i++){applyProviderOverridesToElement(def,elementIndicesWithOverwrittenProviders[i]);}return def;function findElementIndicesWithOverwrittenProviders(def){var elIndicesWithOverwrittenProviders=[];var lastElementDef=null;for(var i=0;i<def.nodes.length;i++){var nodeDef=def.nodes[i];if(nodeDef.flags&1/* TypeElement */){lastElementDef=nodeDef;}if(lastElementDef&&nodeDef.flags&3840/* CatProviderNoDirective */&&providerOverrides.has(nodeDef.provider.token)){elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);lastElementDef=null;}}return elIndicesWithOverwrittenProviders;}function applyProviderOverridesToElement(viewDef,elIndex){for(var i=elIndex+1;i<viewDef.nodes.length;i++){var nodeDef=viewDef.nodes[i];if(nodeDef.flags&1/* TypeElement */){// stop at the next element
return;}if(nodeDef.flags&3840/* CatProviderNoDirective */){var provider=nodeDef.provider;var override=providerOverrides.get(provider.token);if(override){nodeDef.flags=nodeDef.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}}}}// Notes about the algorithm:
// We only create new datastructures if we need to, to keep perf impact
// reasonable.
function applyProviderOverridesToNgModule(def){var _a=calcHasOverrides(def),hasOverrides=_a.hasOverrides,hasDeprecatedOverrides=_a.hasDeprecatedOverrides;if(!hasOverrides){return def;}// clone the whole view definition,
// as it maintains references between the nodes that are hard to update.
def=def.factory(function(){return NOOP;});applyProviderOverrides(def);return def;function calcHasOverrides(def){var hasOverrides=false;var hasDeprecatedOverrides=false;if(providerOverrides.size===0){return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}def.providers.forEach(function(node){var override=providerOverrides.get(node.token);if(node.flags&3840/* CatProviderNoDirective */&&override){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});def.modules.forEach(function(module){providerOverridesWithScope.forEach(function(override,token){if(getInjectableDef(token).providedIn===module){hasOverrides=true;hasDeprecatedOverrides=hasDeprecatedOverrides||override.deprecatedBehavior;}});});return{hasOverrides:hasOverrides,hasDeprecatedOverrides:hasDeprecatedOverrides};}function applyProviderOverrides(def){for(var i=0;i<def.providers.length;i++){var provider=def.providers[i];if(hasDeprecatedOverrides){// We had a bug where me made
// all providers lazy. Keep this logic behind a flag
// for migrating existing users.
provider.flags|=4096/* LazyProvider */;}var override=providerOverrides.get(provider.token);if(override){provider.flags=provider.flags&~3840/* CatProviderNoDirective */|override.flags;provider.deps=splitDepsDsl(override.deps);provider.value=override.value;}}if(providerOverridesWithScope.size>0){var moduleSet_1=new Set(def.modules);providerOverridesWithScope.forEach(function(override,token){if(moduleSet_1.has(getInjectableDef(token).providedIn)){var provider={token:token,flags:override.flags|(hasDeprecatedOverrides?4096/* LazyProvider */:0/* None */),deps:splitDepsDsl(override.deps),value:override.value,index:def.providers.length};def.providers.push(provider);def.providersByKey[tokenKey(token)]=provider;}});}}}function prodCheckAndUpdateNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function prodCheckNoChangesNode(view,checkIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var nodeDef=view.def.nodes[checkIndex];checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,checkIndex).value:undefined;}function debugCheckAndUpdateView(view){return callWithDebugContext(DebugAction.detectChanges,checkAndUpdateView,null,[view]);}function debugCheckNoChangesView(view){return callWithDebugContext(DebugAction.checkNoChanges,checkNoChangesView,null,[view]);}function debugDestroyView(view){return callWithDebugContext(DebugAction.destroy,destroyView,null,[view]);}var DebugAction;(function(DebugAction){DebugAction[DebugAction["create"]=0]="create";DebugAction[DebugAction["detectChanges"]=1]="detectChanges";DebugAction[DebugAction["checkNoChanges"]=2]="checkNoChanges";DebugAction[DebugAction["destroy"]=3]="destroy";DebugAction[DebugAction["handleEvent"]=4]="handleEvent";})(DebugAction||(DebugAction={}));var _currentAction;var _currentView;var _currentNodeIndex;function debugSetCurrentNode(view,nodeIndex){_currentView=view;_currentNodeIndex=nodeIndex;}function debugHandleEvent(view,nodeIndex,eventName,event){debugSetCurrentNode(view,nodeIndex);return callWithDebugContext(DebugAction.handleEvent,view.def.handleEvent,null,[view,nodeIndex,eventName,event]);}function debugUpdateDirectives(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextDirectiveWithBinding(view,0));return view.def.updateDirectives(debugCheckDirectivesFn,view);function debugCheckDirectivesFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&16384/* TypeDirective */){debugSetCurrentNode(view,nextDirectiveWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugUpdateRenderer(view,checkType){if(view.state&128/* Destroyed */){throw viewDestroyedError(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextRenderNodeWithBinding(view,0));return view.def.updateRenderer(debugCheckRenderNodeFn,view);function debugCheckRenderNodeFn(view,nodeIndex,argStyle){var values=[];for(var _i=3;_i<arguments.length;_i++){values[_i-3]=arguments[_i];}var nodeDef=view.def.nodes[nodeIndex];if(checkType===0/* CheckAndUpdate */){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.flags&3/* CatRenderNode */){debugSetCurrentNode(view,nextRenderNodeWithBinding(view,nodeIndex));}return nodeDef.flags&224/* CatPureExpression */?asPureExpressionData(view,nodeDef.nodeIndex).value:undefined;}}function debugCheckAndUpdateNode(view,nodeDef,argStyle,givenValues){var changed=checkAndUpdateNode.apply(void 0,__spread([view,nodeDef,argStyle],givenValues));if(changed){var values=argStyle===1/* Dynamic */?givenValues[0]:givenValues;if(nodeDef.flags&16384/* TypeDirective */){var bindingValues={};for(var i=0;i<nodeDef.bindings.length;i++){var binding=nodeDef.bindings[i];var value=values[i];if(binding.flags&8/* TypeProperty */){bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)]=normalizeDebugBindingValue(value);}}var elDef=nodeDef.parent;var el=asElementData(view,elDef.nodeIndex).renderElement;if(!elDef.element.name){// a comment.
view.renderer.setValue(el,"bindings="+JSON.stringify(bindingValues,null,2));}else{// a regular element.
for(var attr in bindingValues){var value=bindingValues[attr];if(value!=null){view.renderer.setAttribute(el,attr,value);}else{view.renderer.removeAttribute(el,attr);}}}}}}function debugCheckNoChangesNode(view,nodeDef,argStyle,values){checkNoChangesNode.apply(void 0,__spread([view,nodeDef,argStyle],values));}function nextDirectiveWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&16384/* TypeDirective */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}function nextRenderNodeWithBinding(view,nodeIndex){for(var i=nodeIndex;i<view.def.nodes.length;i++){var nodeDef=view.def.nodes[i];if(nodeDef.flags&3/* CatRenderNode */&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return null;}var DebugContext_=/** @class */function(){function DebugContext_(view,nodeIndex){this.view=view;this.nodeIndex=nodeIndex;if(nodeIndex==null){this.nodeIndex=nodeIndex=0;}this.nodeDef=view.def.nodes[nodeIndex];var elDef=this.nodeDef;var elView=view;while(elDef&&(elDef.flags&1/* TypeElement */)===0){elDef=elDef.parent;}if(!elDef){while(!elDef&&elView){elDef=viewParentEl(elView);elView=elView.parent;}}this.elDef=elDef;this.elView=elView;}Object.defineProperty(DebugContext_.prototype,"elOrCompView",{get:function get(){// Has to be done lazily as we use the DebugContext also during creation of elements...
return asElementData(this.elView,this.elDef.nodeIndex).componentView||this.view;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"injector",{get:function get(){return createInjector$1(this.elView,this.elDef);},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"component",{get:function get(){return this.elOrCompView.component;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"context",{get:function get(){return this.elOrCompView.context;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"providerTokens",{get:function get(){var tokens=[];if(this.elDef){for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){tokens.push(childDef.provider.token);}i+=childDef.childCount;}}return tokens;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"references",{get:function get(){var references={};if(this.elDef){collectReferences(this.elView,this.elDef,references);for(var i=this.elDef.nodeIndex+1;i<=this.elDef.nodeIndex+this.elDef.childCount;i++){var childDef=this.elView.def.nodes[i];if(childDef.flags&20224/* CatProvider */){collectReferences(this.elView,childDef,references);}i+=childDef.childCount;}}return references;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"componentRenderElement",{get:function get(){var elData=findHostElement(this.elOrCompView);return elData?elData.renderElement:undefined;},enumerable:true,configurable:true});Object.defineProperty(DebugContext_.prototype,"renderNode",{get:function get(){return this.nodeDef.flags&2/* TypeText */?renderNode(this.view,this.nodeDef):renderNode(this.elView,this.elDef);},enumerable:true,configurable:true});DebugContext_.prototype.logError=function(console){var values=[];for(var _i=1;_i<arguments.length;_i++){values[_i-1]=arguments[_i];}var logViewDef;var logNodeIndex;if(this.nodeDef.flags&2/* TypeText */){logViewDef=this.view.def;logNodeIndex=this.nodeDef.nodeIndex;}else{logViewDef=this.elView.def;logNodeIndex=this.elDef.nodeIndex;}// Note: we only generate a log function for text and element nodes
// to make the generated code as small as possible.
var renderNodeIndex=getRenderNodeIndex(logViewDef,logNodeIndex);var currRenderNodeIndex=-1;var nodeLogger=function nodeLogger(){var _a;currRenderNodeIndex++;if(currRenderNodeIndex===renderNodeIndex){return(_a=console.error).bind.apply(_a,__spread([console],values));}else{return NOOP;}};logViewDef.factory(nodeLogger);if(currRenderNodeIndex<renderNodeIndex){console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');console.error.apply(console,__spread(values));}};return DebugContext_;}();function getRenderNodeIndex(viewDef,nodeIndex){var renderNodeIndex=-1;for(var i=0;i<=nodeIndex;i++){var nodeDef=viewDef.nodes[i];if(nodeDef.flags&3/* CatRenderNode */){renderNodeIndex++;}}return renderNodeIndex;}function findHostElement(view){while(view&&!isComponentView(view)){view=view.parent;}if(view.parent){return asElementData(view.parent,viewParentEl(view).nodeIndex);}return null;}function collectReferences(view,nodeDef,references){for(var refName in nodeDef.references){references[refName]=getQueryValue(view,nodeDef,nodeDef.references[refName]);}}function callWithDebugContext(action,fn,self,args){var oldAction=_currentAction;var oldView=_currentView;var oldNodeIndex=_currentNodeIndex;try{_currentAction=action;var result=fn.apply(self,args);_currentView=oldView;_currentNodeIndex=oldNodeIndex;_currentAction=oldAction;return result;}catch(e){if(isViewDebugError(e)||!_currentView){throw e;}throw viewWrappedDebugError(e,getCurrentDebugContext());}}function getCurrentDebugContext(){return _currentView?new DebugContext_(_currentView,_currentNodeIndex):null;}var DebugRendererFactory2=/** @class */function(){function DebugRendererFactory2(delegate){this.delegate=delegate;}DebugRendererFactory2.prototype.createRenderer=function(element,renderData){return new DebugRenderer2(this.delegate.createRenderer(element,renderData));};DebugRendererFactory2.prototype.begin=function(){if(this.delegate.begin){this.delegate.begin();}};DebugRendererFactory2.prototype.end=function(){if(this.delegate.end){this.delegate.end();}};DebugRendererFactory2.prototype.whenRenderingDone=function(){if(this.delegate.whenRenderingDone){return this.delegate.whenRenderingDone();}return Promise.resolve(null);};return DebugRendererFactory2;}();var DebugRenderer2=/** @class */function(){function DebugRenderer2(delegate){this.delegate=delegate;/**
             * Factory function used to create a `DebugContext` when a node is created.
             *
             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.
             *
             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine
             * or a Render context.
             */this.debugContextFactory=getCurrentDebugContext;this.data=this.delegate.data;}DebugRenderer2.prototype.createDebugContext=function(nativeElement){return this.debugContextFactory(nativeElement);};DebugRenderer2.prototype.destroyNode=function(node){var debugNode=getDebugNode$1(node);removeDebugNodeFromIndex(debugNode);if(debugNode instanceof DebugNode__PRE_R3__){debugNode.listeners.length=0;}if(this.delegate.destroyNode){this.delegate.destroyNode(node);}};DebugRenderer2.prototype.destroy=function(){this.delegate.destroy();};DebugRenderer2.prototype.createElement=function(name,namespace){var el=this.delegate.createElement(name,namespace);var debugCtx=this.createDebugContext(el);if(debugCtx){var debugEl=new DebugElement__PRE_R3__(el,null,debugCtx);debugEl.name=name;indexDebugNode(debugEl);}return el;};DebugRenderer2.prototype.createComment=function(value){var comment=this.delegate.createComment(value);var debugCtx=this.createDebugContext(comment);if(debugCtx){indexDebugNode(new DebugNode__PRE_R3__(comment,null,debugCtx));}return comment;};DebugRenderer2.prototype.createText=function(value){var text=this.delegate.createText(value);var debugCtx=this.createDebugContext(text);if(debugCtx){indexDebugNode(new DebugNode__PRE_R3__(text,null,debugCtx));}return text;};DebugRenderer2.prototype.appendChild=function(parent,newChild){var debugEl=getDebugNode$1(parent);var debugChildEl=getDebugNode$1(newChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.addChild(debugChildEl);}this.delegate.appendChild(parent,newChild);};DebugRenderer2.prototype.insertBefore=function(parent,newChild,refChild){var debugEl=getDebugNode$1(parent);var debugChildEl=getDebugNode$1(newChild);var debugRefEl=getDebugNode$1(refChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.insertBefore(debugRefEl,debugChildEl);}this.delegate.insertBefore(parent,newChild,refChild);};DebugRenderer2.prototype.removeChild=function(parent,oldChild){var debugEl=getDebugNode$1(parent);var debugChildEl=getDebugNode$1(oldChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.removeChild(debugChildEl);}this.delegate.removeChild(parent,oldChild);};DebugRenderer2.prototype.selectRootElement=function(selectorOrNode,preserveContent){var el=this.delegate.selectRootElement(selectorOrNode,preserveContent);var debugCtx=getCurrentDebugContext();if(debugCtx){indexDebugNode(new DebugElement__PRE_R3__(el,null,debugCtx));}return el;};DebugRenderer2.prototype.setAttribute=function(el,name,value,namespace){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=value;}this.delegate.setAttribute(el,name,value,namespace);};DebugRenderer2.prototype.removeAttribute=function(el,name,namespace){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){var fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=null;}this.delegate.removeAttribute(el,name,namespace);};DebugRenderer2.prototype.addClass=function(el,name){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.classes[name]=true;}this.delegate.addClass(el,name);};DebugRenderer2.prototype.removeClass=function(el,name){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.classes[name]=false;}this.delegate.removeClass(el,name);};DebugRenderer2.prototype.setStyle=function(el,style,value,flags){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.styles[style]=value;}this.delegate.setStyle(el,style,value,flags);};DebugRenderer2.prototype.removeStyle=function(el,style,flags){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.styles[style]=null;}this.delegate.removeStyle(el,style,flags);};DebugRenderer2.prototype.setProperty=function(el,name,value){var debugEl=getDebugNode$1(el);if(debugEl&&debugEl instanceof DebugElement__PRE_R3__){debugEl.properties[name]=value;}this.delegate.setProperty(el,name,value);};DebugRenderer2.prototype.listen=function(target,eventName,callback){if(typeof target!=='string'){var debugEl=getDebugNode$1(target);if(debugEl){debugEl.listeners.push(new DebugEventListener(eventName,callback));}}return this.delegate.listen(target,eventName,callback);};DebugRenderer2.prototype.parentNode=function(node){return this.delegate.parentNode(node);};DebugRenderer2.prototype.nextSibling=function(node){return this.delegate.nextSibling(node);};DebugRenderer2.prototype.setValue=function(node,value){return this.delegate.setValue(node,value);};return DebugRenderer2;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function overrideProvider(override){initServicesIfNeeded();return Services.overrideProvider(override);}function overrideComponentView(comp,componentFactory){initServicesIfNeeded();return Services.overrideComponentView(comp,componentFactory);}function clearOverrides(){initServicesIfNeeded();return Services.clearOverrides();}// Attention: this function is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
function createNgModuleFactory(ngModuleType,bootstrapComponents,defFactory){return new NgModuleFactory_(ngModuleType,bootstrapComponents,defFactory);}function cloneNgModuleDefinition(def){var providers=Array.from(def.providers);var modules=Array.from(def.modules);var providersByKey={};for(var key in def.providersByKey){providersByKey[key]=def.providersByKey[key];}return{factory:def.factory,scope:def.scope,providers:providers,modules:modules,providersByKey:providersByKey};}var NgModuleFactory_=/** @class */function(_super){__extends(NgModuleFactory_,_super);function NgModuleFactory_(moduleType,_bootstrapComponents,_ngModuleDefFactory){var _this=// Attention: this ctor is called as top level function.
// Putting any logic in here will destroy closure tree shaking!
_super.call(this)||this;_this.moduleType=moduleType;_this._bootstrapComponents=_bootstrapComponents;_this._ngModuleDefFactory=_ngModuleDefFactory;return _this;}NgModuleFactory_.prototype.create=function(parentInjector){initServicesIfNeeded();// Clone the NgModuleDefinition so that any tree shakeable provider definition
// added to this instance of the NgModuleRef doesn't affect the cached copy.
// See https://github.com/angular/angular/issues/25018.
var def=cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));return Services.createNgModuleRef(this.moduleType,parentInjector||Injector.NULL,this._bootstrapComponents,def);};return NgModuleFactory_;}(NgModuleFactory);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // clang-format on
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */if(ngDevMode){// This helper is to give a reasonable error message to people upgrading to v9 that have not yet
// installed `@angular/localize` in their app.
// tslint:disable-next-line: no-toplevel-property-access
_global.$localize=_global.$localize||function(){throw new Error('It looks like your application or one of its dependencies is using i18n.\n'+'Angular 9 introduced a global `$localize()` function that needs to be loaded.\n'+'Please run `ng add @angular/localize` from the Angular CLI.\n'+'(For non-CLI projects, add `import \'@angular/localize/init\';` to your `polyfills.ts` file.\n'+'For server-side rendering applications add the import to your `main.server.ts` file.)');};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */exports.ANALYZE_FOR_ENTRY_COMPONENTS=ANALYZE_FOR_ENTRY_COMPONENTS;exports.APP_BOOTSTRAP_LISTENER=APP_BOOTSTRAP_LISTENER;exports.APP_ID=APP_ID;exports.APP_INITIALIZER=APP_INITIALIZER;exports.ApplicationInitStatus=ApplicationInitStatus;exports.ApplicationModule=ApplicationModule;exports.ApplicationRef=ApplicationRef;exports.Attribute=Attribute;exports.COMPILER_OPTIONS=COMPILER_OPTIONS;exports.CUSTOM_ELEMENTS_SCHEMA=CUSTOM_ELEMENTS_SCHEMA;exports.ChangeDetectorRef=ChangeDetectorRef;exports.Compiler=Compiler;exports.CompilerFactory=CompilerFactory;exports.Component=Component;exports.ComponentFactory=ComponentFactory;exports.ComponentFactoryResolver=ComponentFactoryResolver;exports.ComponentRef=ComponentRef;exports.ContentChild=ContentChild;exports.ContentChildren=ContentChildren;exports.DEFAULT_CURRENCY_CODE=DEFAULT_CURRENCY_CODE;exports.DebugElement=DebugElement;exports.DebugEventListener=DebugEventListener;exports.DebugNode=DebugNode;exports.DefaultIterableDiffer=DefaultIterableDiffer;exports.Directive=Directive;exports.ElementRef=ElementRef;exports.EmbeddedViewRef=EmbeddedViewRef;exports.ErrorHandler=ErrorHandler;exports.EventEmitter=EventEmitter;exports.Host=Host;exports.HostBinding=HostBinding;exports.HostListener=HostListener;exports.INJECTOR=INJECTOR;exports.Inject=Inject;exports.Injectable=Injectable;exports.InjectionToken=InjectionToken;exports.Injector=Injector;exports.Input=Input;exports.IterableDiffers=IterableDiffers;exports.KeyValueDiffers=KeyValueDiffers;exports.LOCALE_ID=LOCALE_ID$1;exports.ModuleWithComponentFactories=ModuleWithComponentFactories;exports.NO_ERRORS_SCHEMA=NO_ERRORS_SCHEMA;exports.NgModule=NgModule;exports.NgModuleFactory=NgModuleFactory;exports.NgModuleFactoryLoader=NgModuleFactoryLoader;exports.NgModuleRef=NgModuleRef;exports.NgProbeToken=NgProbeToken;exports.NgZone=NgZone;exports.Optional=Optional;exports.Output=Output;exports.PACKAGE_ROOT_URL=PACKAGE_ROOT_URL;exports.PLATFORM_ID=PLATFORM_ID;exports.PLATFORM_INITIALIZER=PLATFORM_INITIALIZER;exports.Pipe=Pipe;exports.PlatformRef=PlatformRef;exports.Query=Query;exports.QueryList=QueryList;exports.ReflectiveInjector=ReflectiveInjector;exports.ReflectiveKey=ReflectiveKey;exports.Renderer2=Renderer2;exports.RendererFactory2=RendererFactory2;exports.ResolvedReflectiveFactory=ResolvedReflectiveFactory;exports.Sanitizer=Sanitizer;exports.Self=Self;exports.SimpleChange=SimpleChange;exports.SkipSelf=SkipSelf;exports.SystemJsNgModuleLoader=SystemJsNgModuleLoader;exports.SystemJsNgModuleLoaderConfig=SystemJsNgModuleLoaderConfig;exports.TRANSLATIONS=TRANSLATIONS;exports.TRANSLATIONS_FORMAT=TRANSLATIONS_FORMAT;exports.TemplateRef=TemplateRef;exports.Testability=Testability;exports.TestabilityRegistry=TestabilityRegistry;exports.Type=Type;exports.VERSION=VERSION;exports.Version=Version;exports.ViewChild=ViewChild;exports.ViewChildren=ViewChildren;exports.ViewContainerRef=ViewContainerRef;exports.ViewRef=ViewRef$1;exports.WrappedValue=WrappedValue;exports.asNativeElements=asNativeElements;exports.assertPlatform=assertPlatform;exports.createPlatform=createPlatform;exports.createPlatformFactory=createPlatformFactory;exports.defineInjectable=defineInjectable;exports.destroyPlatform=destroyPlatform;exports.enableProdMode=enableProdMode;exports.forwardRef=forwardRef;exports.getDebugNode=getDebugNode$1;exports.getModuleFactory=getModuleFactory;exports.getPlatform=getPlatform;exports.inject=inject;exports.isDevMode=isDevMode;exports.platformCore=platformCore;exports.resolveForwardRef=resolveForwardRef;exports.setTestabilityGetter=setTestabilityGetter;exports.ɵ0=ɵ0;exports.ɵ1=ɵ1;exports.ɵALLOW_MULTIPLE_PLATFORMS=ALLOW_MULTIPLE_PLATFORMS;exports.ɵAPP_ID_RANDOM_PROVIDER=APP_ID_RANDOM_PROVIDER;exports.ɵCodegenComponentFactoryResolver=CodegenComponentFactoryResolver;exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__=Compiler_compileModuleAndAllComponentsAsync__POST_R3__;exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__=Compiler_compileModuleAndAllComponentsSync__POST_R3__;exports.ɵCompiler_compileModuleAsync__POST_R3__=Compiler_compileModuleAsync__POST_R3__;exports.ɵCompiler_compileModuleSync__POST_R3__=Compiler_compileModuleSync__POST_R3__;exports.ɵComponentFactory=ComponentFactory;exports.ɵConsole=Console;exports.ɵDEFAULT_LOCALE_ID=DEFAULT_LOCALE_ID;exports.ɵEMPTY_ARRAY=EMPTY_ARRAY$4;exports.ɵEMPTY_MAP=EMPTY_MAP;exports.ɵINJECTOR_IMPL__POST_R3__=INJECTOR_IMPL__POST_R3__;exports.ɵINJECTOR_SCOPE=INJECTOR_SCOPE;exports.ɵLifecycleHooksFeature=LifecycleHooksFeature;exports.ɵNG_COMP_DEF=NG_COMP_DEF;exports.ɵNG_DIR_DEF=NG_DIR_DEF;exports.ɵNG_ELEMENT_ID=NG_ELEMENT_ID;exports.ɵNG_INJ_DEF=NG_INJ_DEF;exports.ɵNG_MOD_DEF=NG_MOD_DEF;exports.ɵNG_PIPE_DEF=NG_PIPE_DEF;exports.ɵNG_PROV_DEF=NG_PROV_DEF;exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR=NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;exports.ɵNO_CHANGE=NO_CHANGE;exports.ɵNgModuleFactory=NgModuleFactory$1;exports.ɵNoopNgZone=NoopNgZone;exports.ɵReflectionCapabilities=ReflectionCapabilities;exports.ɵRender3ComponentFactory=ComponentFactory$1;exports.ɵRender3ComponentRef=ComponentRef$1;exports.ɵRender3NgModuleRef=NgModuleRef$1;exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__=SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__=SWITCH_COMPILE_COMPONENT__POST_R3__;exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__=SWITCH_COMPILE_DIRECTIVE__POST_R3__;exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__=SWITCH_COMPILE_INJECTABLE__POST_R3__;exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__=SWITCH_COMPILE_NGMODULE__POST_R3__;exports.ɵSWITCH_COMPILE_PIPE__POST_R3__=SWITCH_COMPILE_PIPE__POST_R3__;exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__=SWITCH_ELEMENT_REF_FACTORY__POST_R3__;exports.ɵSWITCH_IVY_ENABLED__POST_R3__=SWITCH_IVY_ENABLED__POST_R3__;exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__=SWITCH_RENDERER2_FACTORY__POST_R3__;exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__=SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__=SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;exports.ɵ_sanitizeHtml=_sanitizeHtml;exports.ɵ_sanitizeStyle=_sanitizeStyle;exports.ɵ_sanitizeUrl=_sanitizeUrl;exports.ɵallowSanitizationBypassAndThrow=allowSanitizationBypassAndThrow;exports.ɵand=anchorDef;exports.ɵangular_packages_core_core_a=isForwardRef;exports.ɵangular_packages_core_core_b=injectInjectorOnly;exports.ɵangular_packages_core_core_ba=getLView;exports.ɵangular_packages_core_core_bb=getPreviousOrParentTNode;exports.ɵangular_packages_core_core_bc=getBindingRoot;exports.ɵangular_packages_core_core_bd=nextContextImpl;exports.ɵangular_packages_core_core_bf=pureFunction1Internal;exports.ɵangular_packages_core_core_bg=pureFunction2Internal;exports.ɵangular_packages_core_core_bh=pureFunction3Internal;exports.ɵangular_packages_core_core_bi=pureFunction4Internal;exports.ɵangular_packages_core_core_bj=pureFunctionVInternal;exports.ɵangular_packages_core_core_bk=getUrlSanitizer;exports.ɵangular_packages_core_core_bl=makeParamDecorator;exports.ɵangular_packages_core_core_bm=makePropDecorator;exports.ɵangular_packages_core_core_bn=getClosureSafeProperty;exports.ɵangular_packages_core_core_bp=noSideEffects;exports.ɵangular_packages_core_core_bq=getRootContext;exports.ɵangular_packages_core_core_c=NullInjector;exports.ɵangular_packages_core_core_d=ReflectiveInjector_;exports.ɵangular_packages_core_core_e=ReflectiveDependency;exports.ɵangular_packages_core_core_f=resolveReflectiveProviders;exports.ɵangular_packages_core_core_g=_appIdRandomProviderFactory;exports.ɵangular_packages_core_core_h=createElementRef;exports.ɵangular_packages_core_core_i=createTemplateRef;exports.ɵangular_packages_core_core_j=getModuleFactory__PRE_R3__;exports.ɵangular_packages_core_core_k=DebugNode__PRE_R3__;exports.ɵangular_packages_core_core_l=DebugElement__PRE_R3__;exports.ɵangular_packages_core_core_m=getDebugNodeR2__PRE_R3__;exports.ɵangular_packages_core_core_n=DefaultIterableDifferFactory;exports.ɵangular_packages_core_core_o=DefaultKeyValueDifferFactory;exports.ɵangular_packages_core_core_p=_iterableDiffersFactory;exports.ɵangular_packages_core_core_q=_keyValueDiffersFactory;exports.ɵangular_packages_core_core_r=_localeFactory;exports.ɵangular_packages_core_core_s=APPLICATION_MODULE_PROVIDERS;exports.ɵangular_packages_core_core_t=zoneSchedulerFactory;exports.ɵangular_packages_core_core_u=USD_CURRENCY_CODE;exports.ɵangular_packages_core_core_v=_def;exports.ɵangular_packages_core_core_w=DebugContext;exports.ɵangular_packages_core_core_x=SCHEDULER;exports.ɵangular_packages_core_core_y=injectAttributeImpl;exports.ɵangular_packages_core_core_z=instructionState;exports.ɵbypassSanitizationTrustHtml=bypassSanitizationTrustHtml;exports.ɵbypassSanitizationTrustResourceUrl=bypassSanitizationTrustResourceUrl;exports.ɵbypassSanitizationTrustScript=bypassSanitizationTrustScript;exports.ɵbypassSanitizationTrustStyle=bypassSanitizationTrustStyle;exports.ɵbypassSanitizationTrustUrl=bypassSanitizationTrustUrl;exports.ɵccf=createComponentFactory;exports.ɵclearOverrides=clearOverrides;exports.ɵclearResolutionOfComponentResourcesQueue=clearResolutionOfComponentResourcesQueue;exports.ɵcmf=createNgModuleFactory;exports.ɵcompileComponent=compileComponent;exports.ɵcompileDirective=compileDirective;exports.ɵcompileNgModule=compileNgModule;exports.ɵcompileNgModuleDefs=compileNgModuleDefs;exports.ɵcompileNgModuleFactory__POST_R3__=compileNgModuleFactory__POST_R3__;exports.ɵcompilePipe=compilePipe;exports.ɵcreateInjector=createInjector;exports.ɵcrt=createRendererType2;exports.ɵdefaultIterableDiffers=defaultIterableDiffers;exports.ɵdefaultKeyValueDiffers=defaultKeyValueDiffers;exports.ɵdetectChanges=detectChanges;exports.ɵdevModeEqual=devModeEqual$1;exports.ɵdid=directiveDef;exports.ɵeld=elementDef;exports.ɵfindLocaleData=findLocaleData;exports.ɵflushModuleScopingQueueAsMuchAsPossible=flushModuleScopingQueueAsMuchAsPossible;exports.ɵgetComponentViewDefinitionFactory=getComponentViewDefinitionFactory;exports.ɵgetDebugNodeR2=getDebugNodeR2;exports.ɵgetDebugNode__POST_R3__=getDebugNode__POST_R3__;exports.ɵgetDirectives=getDirectives;exports.ɵgetHostElement=getHostElement;exports.ɵgetInjectableDef=getInjectableDef;exports.ɵgetLContext=getLContext;exports.ɵgetLocaleCurrencyCode=getLocaleCurrencyCode;exports.ɵgetLocalePluralCase=getLocalePluralCase;exports.ɵgetModuleFactory__POST_R3__=getModuleFactory__POST_R3__;exports.ɵgetSanitizationBypassType=getSanitizationBypassType;exports.ɵglobal=_global;exports.ɵinitServicesIfNeeded=initServicesIfNeeded;exports.ɵinlineInterpolate=inlineInterpolate;exports.ɵinterpolate=interpolate;exports.ɵisBoundToModule__POST_R3__=isBoundToModule__POST_R3__;exports.ɵisDefaultChangeDetectionStrategy=isDefaultChangeDetectionStrategy;exports.ɵisListLikeIterable=isListLikeIterable$1;exports.ɵisObservable=isObservable;exports.ɵisPromise=isPromise;exports.ɵivyEnabled=ivyEnabled;exports.ɵlooseIdentical=looseIdentical;exports.ɵmakeDecorator=makeDecorator;exports.ɵmarkDirty=markDirty;exports.ɵmod=moduleDef;exports.ɵmpd=moduleProvideDef;exports.ɵncd=ngContentDef;exports.ɵnov=nodeValue;exports.ɵoverrideComponentView=overrideComponentView;exports.ɵoverrideProvider=overrideProvider;exports.ɵpad=pureArrayDef;exports.ɵpatchComponentDefWithScope=patchComponentDefWithScope;exports.ɵpid=pipeDef;exports.ɵpod=pureObjectDef;exports.ɵppd=purePipeDef;exports.ɵprd=providerDef;exports.ɵpublishDefaultGlobalUtils=publishDefaultGlobalUtils;exports.ɵpublishGlobalUtil=publishGlobalUtil;exports.ɵqud=queryDef;exports.ɵregisterLocaleData=registerLocaleData;exports.ɵregisterModuleFactory=registerModuleFactory;exports.ɵregisterNgModuleType=registerNgModuleType;exports.ɵrenderComponent=renderComponent$1;exports.ɵresetCompiledComponents=resetCompiledComponents;exports.ɵresetJitOptions=resetJitOptions;exports.ɵresolveComponentResources=resolveComponentResources;exports.ɵsetClassMetadata=setClassMetadata;exports.ɵsetCurrentInjector=setCurrentInjector;exports.ɵsetDocument=setDocument;exports.ɵsetLocaleId=setLocaleId;exports.ɵstore=store;exports.ɵstringify=stringify;exports.ɵted=textDef;exports.ɵtransitiveScopesFor=transitiveScopesFor;exports.ɵunregisterLocaleData=unregisterAllLocaleData;exports.ɵunv=unwrapValue;exports.ɵunwrapSafeValue=unwrapSafeValue;exports.ɵvid=viewDef;exports.ɵwhenRendered=whenRendered;exports.ɵɵCopyDefinitionFeature=ɵɵCopyDefinitionFeature;exports.ɵɵInheritDefinitionFeature=ɵɵInheritDefinitionFeature;exports.ɵɵNgOnChangesFeature=ɵɵNgOnChangesFeature;exports.ɵɵProvidersFeature=ɵɵProvidersFeature;exports.ɵɵadvance=ɵɵadvance;exports.ɵɵattribute=ɵɵattribute;exports.ɵɵattributeInterpolate1=ɵɵattributeInterpolate1;exports.ɵɵattributeInterpolate2=ɵɵattributeInterpolate2;exports.ɵɵattributeInterpolate3=ɵɵattributeInterpolate3;exports.ɵɵattributeInterpolate4=ɵɵattributeInterpolate4;exports.ɵɵattributeInterpolate5=ɵɵattributeInterpolate5;exports.ɵɵattributeInterpolate6=ɵɵattributeInterpolate6;exports.ɵɵattributeInterpolate7=ɵɵattributeInterpolate7;exports.ɵɵattributeInterpolate8=ɵɵattributeInterpolate8;exports.ɵɵattributeInterpolateV=ɵɵattributeInterpolateV;exports.ɵɵclassMap=ɵɵclassMap;exports.ɵɵclassMapInterpolate1=ɵɵclassMapInterpolate1;exports.ɵɵclassMapInterpolate2=ɵɵclassMapInterpolate2;exports.ɵɵclassMapInterpolate3=ɵɵclassMapInterpolate3;exports.ɵɵclassMapInterpolate4=ɵɵclassMapInterpolate4;exports.ɵɵclassMapInterpolate5=ɵɵclassMapInterpolate5;exports.ɵɵclassMapInterpolate6=ɵɵclassMapInterpolate6;exports.ɵɵclassMapInterpolate7=ɵɵclassMapInterpolate7;exports.ɵɵclassMapInterpolate8=ɵɵclassMapInterpolate8;exports.ɵɵclassMapInterpolateV=ɵɵclassMapInterpolateV;exports.ɵɵclassProp=ɵɵclassProp;exports.ɵɵcomponentHostSyntheticListener=ɵɵcomponentHostSyntheticListener;exports.ɵɵcontentQuery=ɵɵcontentQuery;exports.ɵɵdefaultStyleSanitizer=ɵɵdefaultStyleSanitizer;exports.ɵɵdefineComponent=ɵɵdefineComponent;exports.ɵɵdefineDirective=ɵɵdefineDirective;exports.ɵɵdefineInjectable=ɵɵdefineInjectable;exports.ɵɵdefineInjector=ɵɵdefineInjector;exports.ɵɵdefineNgModule=ɵɵdefineNgModule;exports.ɵɵdefinePipe=ɵɵdefinePipe;exports.ɵɵdirectiveInject=ɵɵdirectiveInject;exports.ɵɵdisableBindings=ɵɵdisableBindings;exports.ɵɵelement=ɵɵelement;exports.ɵɵelementContainer=ɵɵelementContainer;exports.ɵɵelementContainerEnd=ɵɵelementContainerEnd;exports.ɵɵelementContainerStart=ɵɵelementContainerStart;exports.ɵɵelementEnd=ɵɵelementEnd;exports.ɵɵelementStart=ɵɵelementStart;exports.ɵɵenableBindings=ɵɵenableBindings;exports.ɵɵgetCurrentView=ɵɵgetCurrentView;exports.ɵɵgetFactoryOf=ɵɵgetFactoryOf;exports.ɵɵgetInheritedFactory=ɵɵgetInheritedFactory;exports.ɵɵhostProperty=ɵɵhostProperty;exports.ɵɵi18n=ɵɵi18n;exports.ɵɵi18nApply=ɵɵi18nApply;exports.ɵɵi18nAttributes=ɵɵi18nAttributes;exports.ɵɵi18nEnd=ɵɵi18nEnd;exports.ɵɵi18nExp=ɵɵi18nExp;exports.ɵɵi18nPostprocess=ɵɵi18nPostprocess;exports.ɵɵi18nStart=ɵɵi18nStart;exports.ɵɵinject=ɵɵinject;exports.ɵɵinjectAttribute=ɵɵinjectAttribute;exports.ɵɵinjectPipeChangeDetectorRef=ɵɵinjectPipeChangeDetectorRef;exports.ɵɵinvalidFactory=ɵɵinvalidFactory;exports.ɵɵinvalidFactoryDep=ɵɵinvalidFactoryDep;exports.ɵɵlistener=ɵɵlistener;exports.ɵɵloadQuery=ɵɵloadQuery;exports.ɵɵnamespaceHTML=ɵɵnamespaceHTML;exports.ɵɵnamespaceMathML=ɵɵnamespaceMathML;exports.ɵɵnamespaceSVG=ɵɵnamespaceSVG;exports.ɵɵnextContext=ɵɵnextContext;exports.ɵɵpipe=ɵɵpipe;exports.ɵɵpipeBind1=ɵɵpipeBind1;exports.ɵɵpipeBind2=ɵɵpipeBind2;exports.ɵɵpipeBind3=ɵɵpipeBind3;exports.ɵɵpipeBind4=ɵɵpipeBind4;exports.ɵɵpipeBindV=ɵɵpipeBindV;exports.ɵɵprojection=ɵɵprojection;exports.ɵɵprojectionDef=ɵɵprojectionDef;exports.ɵɵproperty=ɵɵproperty;exports.ɵɵpropertyInterpolate=ɵɵpropertyInterpolate;exports.ɵɵpropertyInterpolate1=ɵɵpropertyInterpolate1;exports.ɵɵpropertyInterpolate2=ɵɵpropertyInterpolate2;exports.ɵɵpropertyInterpolate3=ɵɵpropertyInterpolate3;exports.ɵɵpropertyInterpolate4=ɵɵpropertyInterpolate4;exports.ɵɵpropertyInterpolate5=ɵɵpropertyInterpolate5;exports.ɵɵpropertyInterpolate6=ɵɵpropertyInterpolate6;exports.ɵɵpropertyInterpolate7=ɵɵpropertyInterpolate7;exports.ɵɵpropertyInterpolate8=ɵɵpropertyInterpolate8;exports.ɵɵpropertyInterpolateV=ɵɵpropertyInterpolateV;exports.ɵɵpureFunction0=ɵɵpureFunction0;exports.ɵɵpureFunction1=ɵɵpureFunction1;exports.ɵɵpureFunction2=ɵɵpureFunction2;exports.ɵɵpureFunction3=ɵɵpureFunction3;exports.ɵɵpureFunction4=ɵɵpureFunction4;exports.ɵɵpureFunction5=ɵɵpureFunction5;exports.ɵɵpureFunction6=ɵɵpureFunction6;exports.ɵɵpureFunction7=ɵɵpureFunction7;exports.ɵɵpureFunction8=ɵɵpureFunction8;exports.ɵɵpureFunctionV=ɵɵpureFunctionV;exports.ɵɵqueryRefresh=ɵɵqueryRefresh;exports.ɵɵreference=ɵɵreference;exports.ɵɵresolveBody=ɵɵresolveBody;exports.ɵɵresolveDocument=ɵɵresolveDocument;exports.ɵɵresolveWindow=ɵɵresolveWindow;exports.ɵɵrestoreView=ɵɵrestoreView;exports.ɵɵsanitizeHtml=ɵɵsanitizeHtml;exports.ɵɵsanitizeResourceUrl=ɵɵsanitizeResourceUrl;exports.ɵɵsanitizeScript=ɵɵsanitizeScript;exports.ɵɵsanitizeStyle=ɵɵsanitizeStyle;exports.ɵɵsanitizeUrl=ɵɵsanitizeUrl;exports.ɵɵsanitizeUrlOrResourceUrl=ɵɵsanitizeUrlOrResourceUrl;exports.ɵɵselect=ɵɵselect;exports.ɵɵsetComponentScope=ɵɵsetComponentScope;exports.ɵɵsetNgModuleScope=ɵɵsetNgModuleScope;exports.ɵɵstaticContentQuery=ɵɵstaticContentQuery;exports.ɵɵstaticViewQuery=ɵɵstaticViewQuery;exports.ɵɵstyleMap=ɵɵstyleMap;exports.ɵɵstyleMapInterpolate1=ɵɵstyleMapInterpolate1;exports.ɵɵstyleMapInterpolate2=ɵɵstyleMapInterpolate2;exports.ɵɵstyleMapInterpolate3=ɵɵstyleMapInterpolate3;exports.ɵɵstyleMapInterpolate4=ɵɵstyleMapInterpolate4;exports.ɵɵstyleMapInterpolate5=ɵɵstyleMapInterpolate5;exports.ɵɵstyleMapInterpolate6=ɵɵstyleMapInterpolate6;exports.ɵɵstyleMapInterpolate7=ɵɵstyleMapInterpolate7;exports.ɵɵstyleMapInterpolate8=ɵɵstyleMapInterpolate8;exports.ɵɵstyleMapInterpolateV=ɵɵstyleMapInterpolateV;exports.ɵɵstyleProp=ɵɵstyleProp;exports.ɵɵstylePropInterpolate1=ɵɵstylePropInterpolate1;exports.ɵɵstylePropInterpolate2=ɵɵstylePropInterpolate2;exports.ɵɵstylePropInterpolate3=ɵɵstylePropInterpolate3;exports.ɵɵstylePropInterpolate4=ɵɵstylePropInterpolate4;exports.ɵɵstylePropInterpolate5=ɵɵstylePropInterpolate5;exports.ɵɵstylePropInterpolate6=ɵɵstylePropInterpolate6;exports.ɵɵstylePropInterpolate7=ɵɵstylePropInterpolate7;exports.ɵɵstylePropInterpolate8=ɵɵstylePropInterpolate8;exports.ɵɵstylePropInterpolateV=ɵɵstylePropInterpolateV;exports.ɵɵstyleSanitizer=ɵɵstyleSanitizer;exports.ɵɵtemplate=ɵɵtemplate;exports.ɵɵtemplateRefExtractor=ɵɵtemplateRefExtractor;exports.ɵɵtext=ɵɵtext;exports.ɵɵtextInterpolate=ɵɵtextInterpolate;exports.ɵɵtextInterpolate1=ɵɵtextInterpolate1;exports.ɵɵtextInterpolate2=ɵɵtextInterpolate2;exports.ɵɵtextInterpolate3=ɵɵtextInterpolate3;exports.ɵɵtextInterpolate4=ɵɵtextInterpolate4;exports.ɵɵtextInterpolate5=ɵɵtextInterpolate5;exports.ɵɵtextInterpolate6=ɵɵtextInterpolate6;exports.ɵɵtextInterpolate7=ɵɵtextInterpolate7;exports.ɵɵtextInterpolate8=ɵɵtextInterpolate8;exports.ɵɵtextInterpolateV=ɵɵtextInterpolateV;exports.ɵɵupdateSyntheticHostBinding=ɵɵupdateSyntheticHostBinding;exports.ɵɵviewQuery=ɵɵviewQuery;Object.defineProperty(exports,'__esModule',{value:true});});}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"rxjs":120,"rxjs/operators":318}],5:[function(require,module,exports){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('@angular/compiler'),require('@angular/core'),require('@angular/common'),require('@angular/platform-browser')):typeof define==='function'&&define.amd?define('@angular/platform-browser-dynamic',['exports','@angular/compiler','@angular/core','@angular/common','@angular/platform-browser'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.platformBrowserDynamic={}),global.ng.compiler,global.ng.core,global.ng.common,global.ng.platformBrowser));})(this,function(exports,compiler,core,common,platformBrowser){'use strict';/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics5=function extendStatics(d,b){_extendStatics5=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics5(d,b);};function __extends(d,b){_extendStatics5(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign5=function __assign(){_assign5=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign5.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var MODULE_SUFFIX='';var builtinExternalReferences=createBuiltinExternalReferencesMap();var JitReflector=/** @class */function(){function JitReflector(){this.reflectionCapabilities=new core.ɵReflectionCapabilities();}JitReflector.prototype.componentModuleUrl=function(type,cmpMetadata){var moduleId=cmpMetadata.moduleId;if(typeof moduleId==='string'){var scheme=compiler.getUrlScheme(moduleId);return scheme?moduleId:"package:"+moduleId+MODULE_SUFFIX;}else if(moduleId!==null&&moduleId!==void 0){throw compiler.syntaxError("moduleId should be a string in \""+core.ɵstringify(type)+"\". See https://goo.gl/wIDDiL for more information.\n"+"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.");}return"./"+core.ɵstringify(type);};JitReflector.prototype.parameters=function(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);};JitReflector.prototype.tryAnnotations=function(typeOrFunc){return this.annotations(typeOrFunc);};JitReflector.prototype.annotations=function(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);};JitReflector.prototype.shallowAnnotations=function(typeOrFunc){throw new Error('Not supported in JIT mode');};JitReflector.prototype.propMetadata=function(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);};JitReflector.prototype.hasLifecycleHook=function(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);};JitReflector.prototype.guards=function(type){return this.reflectionCapabilities.guards(type);};JitReflector.prototype.resolveExternalReference=function(ref){return builtinExternalReferences.get(ref)||ref.runtime;};return JitReflector;}();function createBuiltinExternalReferencesMap(){var map=new Map();map.set(compiler.Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS,core.ANALYZE_FOR_ENTRY_COMPONENTS);map.set(compiler.Identifiers.ElementRef,core.ElementRef);map.set(compiler.Identifiers.NgModuleRef,core.NgModuleRef);map.set(compiler.Identifiers.ViewContainerRef,core.ViewContainerRef);map.set(compiler.Identifiers.ChangeDetectorRef,core.ChangeDetectorRef);map.set(compiler.Identifiers.Renderer2,core.Renderer2);map.set(compiler.Identifiers.QueryList,core.QueryList);map.set(compiler.Identifiers.TemplateRef,core.TemplateRef);map.set(compiler.Identifiers.CodegenComponentFactoryResolver,core.ɵCodegenComponentFactoryResolver);map.set(compiler.Identifiers.ComponentFactoryResolver,core.ComponentFactoryResolver);map.set(compiler.Identifiers.ComponentFactory,core.ComponentFactory);map.set(compiler.Identifiers.ComponentRef,core.ComponentRef);map.set(compiler.Identifiers.NgModuleFactory,core.NgModuleFactory);map.set(compiler.Identifiers.createModuleFactory,core.ɵcmf);map.set(compiler.Identifiers.moduleDef,core.ɵmod);map.set(compiler.Identifiers.moduleProviderDef,core.ɵmpd);map.set(compiler.Identifiers.RegisterModuleFactoryFn,core.ɵregisterModuleFactory);map.set(compiler.Identifiers.Injector,core.Injector);map.set(compiler.Identifiers.ViewEncapsulation,core.ViewEncapsulation);map.set(compiler.Identifiers.ChangeDetectionStrategy,core.ChangeDetectionStrategy);map.set(compiler.Identifiers.SecurityContext,core.SecurityContext);map.set(compiler.Identifiers.LOCALE_ID,core.LOCALE_ID);map.set(compiler.Identifiers.TRANSLATIONS_FORMAT,core.TRANSLATIONS_FORMAT);map.set(compiler.Identifiers.inlineInterpolate,core.ɵinlineInterpolate);map.set(compiler.Identifiers.interpolate,core.ɵinterpolate);map.set(compiler.Identifiers.EMPTY_ARRAY,core.ɵEMPTY_ARRAY);map.set(compiler.Identifiers.EMPTY_MAP,core.ɵEMPTY_MAP);map.set(compiler.Identifiers.viewDef,core.ɵvid);map.set(compiler.Identifiers.elementDef,core.ɵeld);map.set(compiler.Identifiers.anchorDef,core.ɵand);map.set(compiler.Identifiers.textDef,core.ɵted);map.set(compiler.Identifiers.directiveDef,core.ɵdid);map.set(compiler.Identifiers.providerDef,core.ɵprd);map.set(compiler.Identifiers.queryDef,core.ɵqud);map.set(compiler.Identifiers.pureArrayDef,core.ɵpad);map.set(compiler.Identifiers.pureObjectDef,core.ɵpod);map.set(compiler.Identifiers.purePipeDef,core.ɵppd);map.set(compiler.Identifiers.pipeDef,core.ɵpid);map.set(compiler.Identifiers.nodeValue,core.ɵnov);map.set(compiler.Identifiers.ngContentDef,core.ɵncd);map.set(compiler.Identifiers.unwrapValue,core.ɵunv);map.set(compiler.Identifiers.createRendererType2,core.ɵcrt);map.set(compiler.Identifiers.createComponentFactory,core.ɵccf);return map;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ERROR_COLLECTOR_TOKEN=new core.InjectionToken('ErrorCollector');/**
     * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.
     */var DEFAULT_PACKAGE_URL_PROVIDER={provide:core.PACKAGE_ROOT_URL,useValue:'/'};var _NO_RESOURCE_LOADER={get:function get(url){throw new Error("No ResourceLoader implementation has been provided. Can't read the url \""+url+"\"");}};var baseHtmlParser=new core.InjectionToken('HtmlParser');var CompilerImpl=/** @class */function(){function CompilerImpl(injector,_metadataResolver,templateParser,styleCompiler,viewCompiler,ngModuleCompiler,summaryResolver,compileReflector,jitEvaluator,compilerConfig,console){this._metadataResolver=_metadataResolver;this._delegate=new compiler.JitCompiler(_metadataResolver,templateParser,styleCompiler,viewCompiler,ngModuleCompiler,summaryResolver,compileReflector,jitEvaluator,compilerConfig,console,this.getExtraNgModuleProviders.bind(this));this.injector=injector;}CompilerImpl.prototype.getExtraNgModuleProviders=function(){return[this._metadataResolver.getProviderMetadata(new compiler.ProviderMeta(core.Compiler,{useValue:this}))];};CompilerImpl.prototype.compileModuleSync=function(moduleType){return this._delegate.compileModuleSync(moduleType);};CompilerImpl.prototype.compileModuleAsync=function(moduleType){return this._delegate.compileModuleAsync(moduleType);};CompilerImpl.prototype.compileModuleAndAllComponentsSync=function(moduleType){var result=this._delegate.compileModuleAndAllComponentsSync(moduleType);return{ngModuleFactory:result.ngModuleFactory,componentFactories:result.componentFactories};};CompilerImpl.prototype.compileModuleAndAllComponentsAsync=function(moduleType){return this._delegate.compileModuleAndAllComponentsAsync(moduleType).then(function(result){return{ngModuleFactory:result.ngModuleFactory,componentFactories:result.componentFactories};});};CompilerImpl.prototype.loadAotSummaries=function(summaries){this._delegate.loadAotSummaries(summaries);};CompilerImpl.prototype.hasAotSummary=function(ref){return this._delegate.hasAotSummary(ref);};CompilerImpl.prototype.getComponentFactory=function(component){return this._delegate.getComponentFactory(component);};CompilerImpl.prototype.clearCache=function(){this._delegate.clearCache();};CompilerImpl.prototype.clearCacheFor=function(type){this._delegate.clearCacheFor(type);};CompilerImpl.prototype.getModuleId=function(moduleType){var meta=this._metadataResolver.getNgModuleMetadata(moduleType);return meta&&meta.id||undefined;};return CompilerImpl;}();var ɵ0=new JitReflector(),ɵ1=_NO_RESOURCE_LOADER,ɵ2=function ɵ2(parser,translations,format,config,console){translations=translations||'';var missingTranslation=translations?config.missingTranslation:core.MissingTranslationStrategy.Ignore;return new compiler.I18NHtmlParser(parser,translations,format,missingTranslation,console);},ɵ3=new compiler.CompilerConfig();/**
     * A set of providers that provide `JitCompiler` and its dependencies to use for
     * template compilation.
     */var COMPILER_PROVIDERS__PRE_R3__=[{provide:compiler.CompileReflector,useValue:ɵ0},{provide:compiler.ResourceLoader,useValue:ɵ1},{provide:compiler.JitSummaryResolver,deps:[]},{provide:compiler.SummaryResolver,useExisting:compiler.JitSummaryResolver},{provide:core.ɵConsole,deps:[]},{provide:compiler.Lexer,deps:[]},{provide:compiler.Parser,deps:[compiler.Lexer]},{provide:baseHtmlParser,useClass:compiler.HtmlParser,deps:[]},{provide:compiler.I18NHtmlParser,useFactory:ɵ2,deps:[baseHtmlParser,[new core.Optional(),new core.Inject(core.TRANSLATIONS)],[new core.Optional(),new core.Inject(core.TRANSLATIONS_FORMAT)],[compiler.CompilerConfig],[core.ɵConsole]]},{provide:compiler.HtmlParser,useExisting:compiler.I18NHtmlParser},{provide:compiler.TemplateParser,deps:[compiler.CompilerConfig,compiler.CompileReflector,compiler.Parser,compiler.ElementSchemaRegistry,compiler.I18NHtmlParser,core.ɵConsole]},{provide:compiler.JitEvaluator,useClass:compiler.JitEvaluator,deps:[]},{provide:compiler.DirectiveNormalizer,deps:[compiler.ResourceLoader,compiler.UrlResolver,compiler.HtmlParser,compiler.CompilerConfig]},{provide:compiler.CompileMetadataResolver,deps:[compiler.CompilerConfig,compiler.HtmlParser,compiler.NgModuleResolver,compiler.DirectiveResolver,compiler.PipeResolver,compiler.SummaryResolver,compiler.ElementSchemaRegistry,compiler.DirectiveNormalizer,core.ɵConsole,[core.Optional,compiler.StaticSymbolCache],compiler.CompileReflector,[core.Optional,ERROR_COLLECTOR_TOKEN]]},DEFAULT_PACKAGE_URL_PROVIDER,{provide:compiler.StyleCompiler,deps:[compiler.UrlResolver]},{provide:compiler.ViewCompiler,deps:[compiler.CompileReflector]},{provide:compiler.NgModuleCompiler,deps:[compiler.CompileReflector]},{provide:compiler.CompilerConfig,useValue:ɵ3},{provide:core.Compiler,useClass:CompilerImpl,deps:[core.Injector,compiler.CompileMetadataResolver,compiler.TemplateParser,compiler.StyleCompiler,compiler.ViewCompiler,compiler.NgModuleCompiler,compiler.SummaryResolver,compiler.CompileReflector,compiler.JitEvaluator,compiler.CompilerConfig,core.ɵConsole]},{provide:compiler.DomElementSchemaRegistry,deps:[]},{provide:compiler.ElementSchemaRegistry,useExisting:compiler.DomElementSchemaRegistry},{provide:compiler.UrlResolver,deps:[core.PACKAGE_ROOT_URL]},{provide:compiler.DirectiveResolver,deps:[compiler.CompileReflector]},{provide:compiler.PipeResolver,deps:[compiler.CompileReflector]},{provide:compiler.NgModuleResolver,deps:[compiler.CompileReflector]}];var COMPILER_PROVIDERS__POST_R3__=[{provide:core.Compiler,useFactory:function useFactory(){return new core.Compiler();}}];var COMPILER_PROVIDERS=COMPILER_PROVIDERS__PRE_R3__;/**
     * @publicApi
     */var JitCompilerFactory=/** @class */function(){/* @internal */function JitCompilerFactory(defaultOptions){var compilerOptions={useJit:true,defaultEncapsulation:core.ViewEncapsulation.Emulated,missingTranslation:core.MissingTranslationStrategy.Warning};this._defaultOptions=__spread([compilerOptions],defaultOptions);}JitCompilerFactory.prototype.createCompiler=function(options){if(options===void 0){options=[];}var opts=_mergeOptions(this._defaultOptions.concat(options));var injector=core.Injector.create([COMPILER_PROVIDERS,{provide:compiler.CompilerConfig,useFactory:function useFactory(){return new compiler.CompilerConfig({// let explicit values from the compiler options overwrite options
// from the app providers
useJit:opts.useJit,jitDevMode:core.isDevMode(),// let explicit values from the compiler options overwrite options
// from the app providers
defaultEncapsulation:opts.defaultEncapsulation,missingTranslation:opts.missingTranslation,preserveWhitespaces:opts.preserveWhitespaces});},deps:[]},opts.providers]);return injector.get(core.Compiler);};return JitCompilerFactory;}();function _mergeOptions(optionsArr){return{useJit:_lastDefined(optionsArr.map(function(options){return options.useJit;})),defaultEncapsulation:_lastDefined(optionsArr.map(function(options){return options.defaultEncapsulation;})),providers:_mergeArrays(optionsArr.map(function(options){return options.providers;})),missingTranslation:_lastDefined(optionsArr.map(function(options){return options.missingTranslation;})),preserveWhitespaces:_lastDefined(optionsArr.map(function(options){return options.preserveWhitespaces;}))};}function _lastDefined(args){for(var i=args.length-1;i>=0;i--){if(args[i]!==undefined){return args[i];}}return undefined;}function _mergeArrays(parts){var result=[];parts.forEach(function(part){return part&&result.push.apply(result,__spread(part));});return result;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$1={};/**
     * A platform that included corePlatform and the compiler.
     *
     * @publicApi
     */var platformCoreDynamic=core.createPlatformFactory(core.platformCore,'coreDynamic',[{provide:core.COMPILER_OPTIONS,useValue:ɵ0$1,multi:true},{provide:core.CompilerFactory,useClass:JitCompilerFactory,deps:[core.COMPILER_OPTIONS]}]);var ResourceLoaderImpl=/** @class */function(_super){__extends(ResourceLoaderImpl,_super);function ResourceLoaderImpl(){return _super!==null&&_super.apply(this,arguments)||this;}ResourceLoaderImpl.prototype.get=function(url){var resolve;var reject;var promise=new Promise(function(res,rej){resolve=res;reject=rej;});var xhr=new XMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='text';xhr.onload=function(){// responseText is the old-school way of retrieving response (supported by IE8 & 9)
// response/responseType properties were introduced in ResourceLoader Level2 spec (supported
// by IE10)
var response=xhr.response||xhr.responseText;// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
var status=xhr.status===1223?204:xhr.status;// fix status code when it is 0 (0 status is undocumented).
// Occurs when accessing file resources or on Android 4.1 stock browser
// while retrieving files from application cache.
if(status===0){status=response?200:0;}if(200<=status&&status<=300){resolve(response);}else{reject("Failed to load "+url);}};xhr.onerror=function(){reject("Failed to load "+url);};xhr.send();return promise;};ResourceLoaderImpl=__decorate([core.Injectable()],ResourceLoaderImpl);return ResourceLoaderImpl;}(compiler.ResourceLoader);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$2={providers:[{provide:compiler.ResourceLoader,useClass:ResourceLoaderImpl,deps:[]}]},ɵ1$1=common.ɵPLATFORM_BROWSER_ID;/**
     * @publicApi
     */var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS=[platformBrowser.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,{provide:core.COMPILER_OPTIONS,useValue:ɵ0$2,multi:true},{provide:core.PLATFORM_ID,useValue:ɵ1$1}];/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual
     * ResourceLoader.
     *
     * The template cache needs to be built and loaded into window.$templateCache
     * via a separate mechanism.
     *
     * @publicApi
     */var CachedResourceLoader=/** @class */function(_super){__extends(CachedResourceLoader,_super);function CachedResourceLoader(){var _this=_super.call(this)||this;_this._cache=core.ɵglobal.$templateCache;if(_this._cache==null){throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');}return _this;}CachedResourceLoader.prototype.get=function(url){if(this._cache.hasOwnProperty(url)){return Promise.resolve(this._cache[url]);}else{return Promise.reject('CachedResourceLoader: Did not find cached template for '+url);}};return CachedResourceLoader;}(compiler.ResourceLoader);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var VERSION=new core.Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var RESOURCE_CACHE_PROVIDER=[{provide:compiler.ResourceLoader,useClass:CachedResourceLoader,deps:[]}];/**
     * @publicApi
     */var platformBrowserDynamic=core.createPlatformFactory(platformCoreDynamic,'browserDynamic',INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */exports.JitCompilerFactory=JitCompilerFactory;exports.RESOURCE_CACHE_PROVIDER=RESOURCE_CACHE_PROVIDER;exports.VERSION=VERSION;exports.platformBrowserDynamic=platformBrowserDynamic;exports.ɵCOMPILER_PROVIDERS__POST_R3__=COMPILER_PROVIDERS__POST_R3__;exports.ɵCompilerImpl=CompilerImpl;exports.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS=INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS;exports.ɵResourceLoaderImpl=ResourceLoaderImpl;exports.ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a=CachedResourceLoader;exports.ɵplatformCoreDynamic=platformCoreDynamic;Object.defineProperty(exports,'__esModule',{value:true});});},{"@angular/common":2,"@angular/compiler":3,"@angular/core":4,"@angular/platform-browser":6}],6:[function(require,module,exports){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('@angular/common'),require('@angular/core')):typeof define==='function'&&define.amd?define('@angular/platform-browser',['exports','@angular/common','@angular/core'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.platformBrowser={}),global.ng.common,global.ng.core));})(this,function(exports,common,i0){'use strict';/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics6=function extendStatics(d,b){_extendStatics6=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics6(d,b);};function __extends(d,b){_extendStatics6(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign6=function __assign(){_assign6=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign6.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Provides DOM operations in any browser environment.
     *
     * @security Tread carefully! Interacting with the DOM directly is dangerous and
     * can introduce XSS risks.
     */var GenericBrowserDomAdapter=/** @class */function(_super){__extends(GenericBrowserDomAdapter,_super);function GenericBrowserDomAdapter(){return _super.call(this)||this;}GenericBrowserDomAdapter.prototype.supportsDOMEvents=function(){return true;};return GenericBrowserDomAdapter;}(common.ɵDomAdapter);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0=function ɵ0(){if(i0.ɵglobal['Node']){return i0.ɵglobal['Node'].prototype.contains||function(node){return!!(this.compareDocumentPosition(node)&16);};}return undefined;};var nodeContains=ɵ0();/**
     * A `DomAdapter` powered by full browser DOM APIs.
     *
     * @security Tread carefully! Interacting with the DOM directly is dangerous and
     * can introduce XSS risks.
     */ /* tslint:disable:requireParameterType no-console */var BrowserDomAdapter=/** @class */function(_super){__extends(BrowserDomAdapter,_super);function BrowserDomAdapter(){return _super!==null&&_super.apply(this,arguments)||this;}BrowserDomAdapter.makeCurrent=function(){common.ɵsetRootDomAdapter(new BrowserDomAdapter());};BrowserDomAdapter.prototype.getProperty=function(el,name){return el[name];};BrowserDomAdapter.prototype.log=function(error){if(window.console){window.console.log&&window.console.log(error);}};BrowserDomAdapter.prototype.logGroup=function(error){if(window.console){window.console.group&&window.console.group(error);}};BrowserDomAdapter.prototype.logGroupEnd=function(){if(window.console){window.console.groupEnd&&window.console.groupEnd();}};BrowserDomAdapter.prototype.onAndCancel=function(el,evt,listener){el.addEventListener(evt,listener,false);// Needed to follow Dart's subscription semantic, until fix of
// https://code.google.com/p/dart/issues/detail?id=17406
return function(){el.removeEventListener(evt,listener,false);};};BrowserDomAdapter.prototype.dispatchEvent=function(el,evt){el.dispatchEvent(evt);};BrowserDomAdapter.prototype.remove=function(node){if(node.parentNode){node.parentNode.removeChild(node);}return node;};BrowserDomAdapter.prototype.getValue=function(el){return el.value;};BrowserDomAdapter.prototype.createElement=function(tagName,doc){doc=doc||this.getDefaultDocument();return doc.createElement(tagName);};BrowserDomAdapter.prototype.createHtmlDocument=function(){return document.implementation.createHTMLDocument('fakeTitle');};BrowserDomAdapter.prototype.getDefaultDocument=function(){return document;};BrowserDomAdapter.prototype.isElementNode=function(node){return node.nodeType===Node.ELEMENT_NODE;};BrowserDomAdapter.prototype.isShadowRoot=function(node){return node instanceof DocumentFragment;};BrowserDomAdapter.prototype.getGlobalEventTarget=function(doc,target){if(target==='window'){return window;}if(target==='document'){return doc;}if(target==='body'){return doc.body;}return null;};BrowserDomAdapter.prototype.getHistory=function(){return window.history;};BrowserDomAdapter.prototype.getLocation=function(){return window.location;};BrowserDomAdapter.prototype.getBaseHref=function(doc){var href=getBaseElementHref();return href==null?null:relativePath(href);};BrowserDomAdapter.prototype.resetBaseElement=function(){baseElement=null;};BrowserDomAdapter.prototype.getUserAgent=function(){return window.navigator.userAgent;};BrowserDomAdapter.prototype.performanceNow=function(){// performance.now() is not available in all browsers, see
// http://caniuse.com/#search=performance.now
return window.performance&&window.performance.now?window.performance.now():new Date().getTime();};BrowserDomAdapter.prototype.supportsCookies=function(){return true;};BrowserDomAdapter.prototype.getCookie=function(name){return common.ɵparseCookieValue(document.cookie,name);};return BrowserDomAdapter;}(GenericBrowserDomAdapter);var baseElement=null;function getBaseElementHref(){if(!baseElement){baseElement=document.querySelector('base');if(!baseElement){return null;}}return baseElement.getAttribute('href');}// based on urlUtils.js in AngularJS 1
var urlParsingNode;function relativePath(url){if(!urlParsingNode){urlParsingNode=document.createElement('a');}urlParsingNode.setAttribute('href',url);return urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * An id that identifies a particular application being bootstrapped, that should
     * match across the client/server boundary.
     */var TRANSITION_ID=new i0.InjectionToken('TRANSITION_ID');function appInitializerFactory(transitionId,document,injector){return function(){// Wait for all application initializers to be completed before removing the styles set by
// the server.
injector.get(i0.ApplicationInitStatus).donePromise.then(function(){var dom=common.ɵgetDOM();var styles=Array.prototype.slice.apply(document.querySelectorAll("style[ng-transition]"));styles.filter(function(el){return el.getAttribute('ng-transition')===transitionId;}).forEach(function(el){return dom.remove(el);});});};}var SERVER_TRANSITION_PROVIDERS=[{provide:i0.APP_INITIALIZER,useFactory:appInitializerFactory,deps:[TRANSITION_ID,common.DOCUMENT,i0.Injector],multi:true}];/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var BrowserGetTestability=/** @class */function(){function BrowserGetTestability(){}BrowserGetTestability.init=function(){i0.setTestabilityGetter(new BrowserGetTestability());};BrowserGetTestability.prototype.addToWindow=function(registry){i0.ɵglobal['getAngularTestability']=function(elem,findInAncestors){if(findInAncestors===void 0){findInAncestors=true;}var testability=registry.findTestabilityInTree(elem,findInAncestors);if(testability==null){throw new Error('Could not find testability for element.');}return testability;};i0.ɵglobal['getAllAngularTestabilities']=function(){return registry.getAllTestabilities();};i0.ɵglobal['getAllAngularRootElements']=function(){return registry.getAllRootElements();};var whenAllStable=function whenAllStable(callback/** TODO #9100 */){var testabilities=i0.ɵglobal['getAllAngularTestabilities']();var count=testabilities.length;var didWork=false;var decrement=function decrement(didWork_/** TODO #9100 */){didWork=didWork||didWork_;count--;if(count==0){callback(didWork);}};testabilities.forEach(function(testability/** TODO #9100 */){testability.whenStable(decrement);});};if(!i0.ɵglobal['frameworkStabilizers']){i0.ɵglobal['frameworkStabilizers']=[];}i0.ɵglobal['frameworkStabilizers'].push(whenAllStable);};BrowserGetTestability.prototype.findTestabilityInTree=function(registry,elem,findInAncestors){if(elem==null){return null;}var t=registry.getTestability(elem);if(t!=null){return t;}else if(!findInAncestors){return null;}if(common.ɵgetDOM().isShadowRoot(elem)){return this.findTestabilityInTree(registry,elem.host,true);}return this.findTestabilityInTree(registry,elem.parentElement,true);};return BrowserGetTestability;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CAMEL_CASE_REGEXP=/([A-Z])/g;var DASH_CASE_REGEXP=/-([a-z])/g;function camelCaseToDashCase(input){return input.replace(CAMEL_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return'-'+m[1].toLowerCase();});}function dashCaseToCamelCase(input){return input.replace(DASH_CASE_REGEXP,function(){var m=[];for(var _i=0;_i<arguments.length;_i++){m[_i]=arguments[_i];}return m[1].toUpperCase();});}/**
     * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if
     * `name` is `'probe'`.
     * @param name Name under which it will be exported. Keep in mind this will be a property of the
     * global `ng` object.
     * @param value The value to export.
     */function exportNgVar(name,value){if(typeof COMPILED==='undefined'||!COMPILED){// Note: we can't export `ng` when using closure enhanced optimization as:
// - closure declares globals itself for minified names, which sometimes clobber our `ng` global
// - we can't declare a closure extern as the namespace `ng` is already used within Google
//   for typings for angularJS (via `goog.provide('ng....')`).
var ng=i0.ɵglobal['ng']=i0.ɵglobal['ng']||{};ng[name]=value;}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ɵ0$1=function ɵ0$1(){return{'ApplicationRef':i0.ApplicationRef,'NgZone':i0.NgZone};};var CORE_TOKENS=ɵ0$1();var INSPECT_GLOBAL_NAME='probe';var CORE_TOKENS_GLOBAL_NAME='coreTokens';/**
     * Returns a {@link DebugElement} for the given native DOM element, or
     * null if the given native element does not have an Angular view associated
     * with it.
     */function inspectNativeElementR2(element){return i0.ɵgetDebugNodeR2(element);}function _createNgProbeR2(coreTokens){exportNgVar(INSPECT_GLOBAL_NAME,inspectNativeElementR2);exportNgVar(CORE_TOKENS_GLOBAL_NAME,_assign6(_assign6({},CORE_TOKENS),_ngProbeTokensToMap(coreTokens||[])));return function(){return inspectNativeElementR2;};}function _ngProbeTokensToMap(tokens){return tokens.reduce(function(prev,t){return prev[t.name]=t.token,prev;},{});}/**
     * In Ivy, we don't support NgProbe because we have our own set of testing utilities
     * with more robust functionality.
     *
     * We shouldn't bring in NgProbe because it prevents DebugNode and friends from
     * tree-shaking properly.
     */var ELEMENT_PROBE_PROVIDERS__POST_R3__=[];/**
     * Providers which support debugging Angular applications (e.g. via `ng.probe`).
     */var ELEMENT_PROBE_PROVIDERS__PRE_R3__=[{provide:i0.APP_INITIALIZER,useFactory:_createNgProbeR2,deps:[[i0.NgProbeToken,new i0.Optional()]],multi:true}];var ELEMENT_PROBE_PROVIDERS=ELEMENT_PROBE_PROVIDERS__PRE_R3__;/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The injection token for the event-manager plug-in service.
     *
     * @publicApi
     */var EVENT_MANAGER_PLUGINS=new i0.InjectionToken('EventManagerPlugins');/**
     * An injectable service that provides event management for Angular
     * through a browser plug-in.
     *
     * @publicApi
     */var EventManager=/** @class */function(){/**
         * Initializes an instance of the event-manager service.
         */function EventManager(plugins,_zone){var _this=this;this._zone=_zone;this._eventNameToPlugin=new Map();plugins.forEach(function(p){return p.manager=_this;});this._plugins=plugins.slice().reverse();}/**
         * Registers a handler for a specific element and event.
         *
         * @param element The HTML element to receive event notifications.
         * @param eventName The name of the event to listen for.
         * @param handler A function to call when the notification occurs. Receives the
         * event object as an argument.
         * @returns  A callback function that can be used to remove the handler.
         */EventManager.prototype.addEventListener=function(element,eventName,handler){var plugin=this._findPluginFor(eventName);return plugin.addEventListener(element,eventName,handler);};/**
         * Registers a global handler for an event in a target view.
         *
         * @param target A target for global event notifications. One of "window", "document", or "body".
         * @param eventName The name of the event to listen for.
         * @param handler A function to call when the notification occurs. Receives the
         * event object as an argument.
         * @returns A callback function that can be used to remove the handler.
         */EventManager.prototype.addGlobalEventListener=function(target,eventName,handler){var plugin=this._findPluginFor(eventName);return plugin.addGlobalEventListener(target,eventName,handler);};/**
         * Retrieves the compilation zone in which event listeners are registered.
         */EventManager.prototype.getZone=function(){return this._zone;};/** @internal */EventManager.prototype._findPluginFor=function(eventName){var plugin=this._eventNameToPlugin.get(eventName);if(plugin){return plugin;}var plugins=this._plugins;for(var i=0;i<plugins.length;i++){var plugin_1=plugins[i];if(plugin_1.supports(eventName)){this._eventNameToPlugin.set(eventName,plugin_1);return plugin_1;}}throw new Error("No event manager plugin found for event "+eventName);};EventManager=__decorate([i0.Injectable(),__param(0,i0.Inject(EVENT_MANAGER_PLUGINS)),__metadata("design:paramtypes",[Array,i0.NgZone])],EventManager);return EventManager;}();var EventManagerPlugin=/** @class */function(){function EventManagerPlugin(_doc){this._doc=_doc;}EventManagerPlugin.prototype.addGlobalEventListener=function(element,eventName,handler){var target=common.ɵgetDOM().getGlobalEventTarget(this._doc,element);if(!target){throw new Error("Unsupported event target "+target+" for event "+eventName);}return this.addEventListener(target,eventName,handler);};return EventManagerPlugin;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var SharedStylesHost=/** @class */function(){function SharedStylesHost(){/** @internal */this._stylesSet=new Set();}SharedStylesHost.prototype.addStyles=function(styles){var _this=this;var additions=new Set();styles.forEach(function(style){if(!_this._stylesSet.has(style)){_this._stylesSet.add(style);additions.add(style);}});this.onStylesAdded(additions);};SharedStylesHost.prototype.onStylesAdded=function(additions){};SharedStylesHost.prototype.getAllStyles=function(){return Array.from(this._stylesSet);};SharedStylesHost=__decorate([i0.Injectable()],SharedStylesHost);return SharedStylesHost;}();var DomSharedStylesHost=/** @class */function(_super){__extends(DomSharedStylesHost,_super);function DomSharedStylesHost(_doc){var _this=_super.call(this)||this;_this._doc=_doc;_this._hostNodes=new Set();_this._styleNodes=new Set();_this._hostNodes.add(_doc.head);return _this;}DomSharedStylesHost.prototype._addStylesToHost=function(styles,host){var _this=this;styles.forEach(function(style){var styleEl=_this._doc.createElement('style');styleEl.textContent=style;_this._styleNodes.add(host.appendChild(styleEl));});};DomSharedStylesHost.prototype.addHost=function(hostNode){this._addStylesToHost(this._stylesSet,hostNode);this._hostNodes.add(hostNode);};DomSharedStylesHost.prototype.removeHost=function(hostNode){this._hostNodes["delete"](hostNode);};DomSharedStylesHost.prototype.onStylesAdded=function(additions){var _this=this;this._hostNodes.forEach(function(hostNode){return _this._addStylesToHost(additions,hostNode);});};DomSharedStylesHost.prototype.ngOnDestroy=function(){this._styleNodes.forEach(function(styleNode){return common.ɵgetDOM().remove(styleNode);});};DomSharedStylesHost=__decorate([i0.Injectable(),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],DomSharedStylesHost);return DomSharedStylesHost;}(SharedStylesHost);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NAMESPACE_URIS={'svg':'http://www.w3.org/2000/svg','xhtml':'http://www.w3.org/1999/xhtml','xlink':'http://www.w3.org/1999/xlink','xml':'http://www.w3.org/XML/1998/namespace','xmlns':'http://www.w3.org/2000/xmlns/'};var COMPONENT_REGEX=/%COMP%/g;var NG_DEV_MODE=typeof ngDevMode==='undefined'||!!ngDevMode;var COMPONENT_VARIABLE='%COMP%';var HOST_ATTR="_nghost-"+COMPONENT_VARIABLE;var CONTENT_ATTR="_ngcontent-"+COMPONENT_VARIABLE;function shimContentAttribute(componentShortId){return CONTENT_ATTR.replace(COMPONENT_REGEX,componentShortId);}function shimHostAttribute(componentShortId){return HOST_ATTR.replace(COMPONENT_REGEX,componentShortId);}function flattenStyles(compId,styles,target){for(var i=0;i<styles.length;i++){var style=styles[i];if(Array.isArray(style)){flattenStyles(compId,style,target);}else{style=style.replace(COMPONENT_REGEX,compId);target.push(style);}}return target;}function decoratePreventDefault(eventHandler){// `DebugNode.triggerEventHandler` needs to know if the listener was created with
// decoratePreventDefault or is a listener added outside the Angular context so it can handle the
// two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap
// the listener (see below).
return function(event){// Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function
// so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node
// can inspect the listener toString contents for the existence of this special token. Because
// the token is a string literal, it is ensured to not be modified by compiled code.
if(event==='__ngUnwrap__'){return eventHandler;}var allowDefaultBehavior=eventHandler(event);if(allowDefaultBehavior===false){// TODO(tbosch): move preventDefault into event plugins...
event.preventDefault();event.returnValue=false;}return undefined;};}var DomRendererFactory2=/** @class */function(){function DomRendererFactory2(eventManager,sharedStylesHost,appId){this.eventManager=eventManager;this.sharedStylesHost=sharedStylesHost;this.appId=appId;this.rendererByCompId=new Map();this.defaultRenderer=new DefaultDomRenderer2(eventManager);}DomRendererFactory2.prototype.createRenderer=function(element,type){if(!element||!type){return this.defaultRenderer;}switch(type.encapsulation){case i0.ViewEncapsulation.Emulated:{var renderer=this.rendererByCompId.get(type.id);if(!renderer){renderer=new EmulatedEncapsulationDomRenderer2(this.eventManager,this.sharedStylesHost,type,this.appId);this.rendererByCompId.set(type.id,renderer);}renderer.applyToHost(element);return renderer;}case i0.ViewEncapsulation.Native:case i0.ViewEncapsulation.ShadowDom:return new ShadowDomRenderer(this.eventManager,this.sharedStylesHost,element,type);default:{if(!this.rendererByCompId.has(type.id)){var styles=flattenStyles(type.id,type.styles,[]);this.sharedStylesHost.addStyles(styles);this.rendererByCompId.set(type.id,this.defaultRenderer);}return this.defaultRenderer;}}};DomRendererFactory2.prototype.begin=function(){};DomRendererFactory2.prototype.end=function(){};DomRendererFactory2=__decorate([i0.Injectable(),__param(2,i0.Inject(i0.APP_ID)),__metadata("design:paramtypes",[EventManager,DomSharedStylesHost,String])],DomRendererFactory2);return DomRendererFactory2;}();var DefaultDomRenderer2=/** @class */function(){function DefaultDomRenderer2(eventManager){this.eventManager=eventManager;this.data=Object.create(null);}DefaultDomRenderer2.prototype.destroy=function(){};DefaultDomRenderer2.prototype.createElement=function(name,namespace){if(namespace){// In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key
// will result in undefined, so we just return the namespace here.
return document.createElementNS(NAMESPACE_URIS[namespace]||namespace,name);}return document.createElement(name);};DefaultDomRenderer2.prototype.createComment=function(value){return document.createComment(value);};DefaultDomRenderer2.prototype.createText=function(value){return document.createTextNode(value);};DefaultDomRenderer2.prototype.appendChild=function(parent,newChild){parent.appendChild(newChild);};DefaultDomRenderer2.prototype.insertBefore=function(parent,newChild,refChild){if(parent){parent.insertBefore(newChild,refChild);}};DefaultDomRenderer2.prototype.removeChild=function(parent,oldChild){if(parent){parent.removeChild(oldChild);}};DefaultDomRenderer2.prototype.selectRootElement=function(selectorOrNode,preserveContent){var el=typeof selectorOrNode==='string'?document.querySelector(selectorOrNode):selectorOrNode;if(!el){throw new Error("The selector \""+selectorOrNode+"\" did not match any elements");}if(!preserveContent){el.textContent='';}return el;};DefaultDomRenderer2.prototype.parentNode=function(node){return node.parentNode;};DefaultDomRenderer2.prototype.nextSibling=function(node){return node.nextSibling;};DefaultDomRenderer2.prototype.setAttribute=function(el,name,value,namespace){if(namespace){name=namespace+':'+name;// TODO(FW-811): Ivy may cause issues here because it's passing around
// full URIs for namespaces, therefore this lookup will fail.
var namespaceUri=NAMESPACE_URIS[namespace];if(namespaceUri){el.setAttributeNS(namespaceUri,name,value);}else{el.setAttribute(name,value);}}else{el.setAttribute(name,value);}};DefaultDomRenderer2.prototype.removeAttribute=function(el,name,namespace){if(namespace){// TODO(FW-811): Ivy may cause issues here because it's passing around
// full URIs for namespaces, therefore this lookup will fail.
var namespaceUri=NAMESPACE_URIS[namespace];if(namespaceUri){el.removeAttributeNS(namespaceUri,name);}else{// TODO(FW-811): Since ivy is passing around full URIs for namespaces
// this could result in properties like `http://www.w3.org/2000/svg:cx="123"`,
// which is wrong.
el.removeAttribute(namespace+":"+name);}}else{el.removeAttribute(name);}};DefaultDomRenderer2.prototype.addClass=function(el,name){el.classList.add(name);};DefaultDomRenderer2.prototype.removeClass=function(el,name){el.classList.remove(name);};DefaultDomRenderer2.prototype.setStyle=function(el,style,value,flags){if(flags&i0.RendererStyleFlags2.DashCase){el.style.setProperty(style,value,!!(flags&i0.RendererStyleFlags2.Important)?'important':'');}else{el.style[style]=value;}};DefaultDomRenderer2.prototype.removeStyle=function(el,style,flags){if(flags&i0.RendererStyleFlags2.DashCase){el.style.removeProperty(style);}else{// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
el.style[style]='';}};DefaultDomRenderer2.prototype.setProperty=function(el,name,value){NG_DEV_MODE&&checkNoSyntheticProp(name,'property');el[name]=value;};DefaultDomRenderer2.prototype.setValue=function(node,value){node.nodeValue=value;};DefaultDomRenderer2.prototype.listen=function(target,event,callback){NG_DEV_MODE&&checkNoSyntheticProp(event,'listener');if(typeof target==='string'){return this.eventManager.addGlobalEventListener(target,event,decoratePreventDefault(callback));}return this.eventManager.addEventListener(target,event,decoratePreventDefault(callback));};return DefaultDomRenderer2;}();var ɵ0$2=function ɵ0$2(){return'@'.charCodeAt(0);};var AT_CHARCODE=ɵ0$2();function checkNoSyntheticProp(name,nameKind){if(name.charCodeAt(0)===AT_CHARCODE){throw new Error("Found the synthetic "+nameKind+" "+name+". Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.");}}var EmulatedEncapsulationDomRenderer2=/** @class */function(_super){__extends(EmulatedEncapsulationDomRenderer2,_super);function EmulatedEncapsulationDomRenderer2(eventManager,sharedStylesHost,component,appId){var _this=_super.call(this,eventManager)||this;_this.component=component;var styles=flattenStyles(appId+'-'+component.id,component.styles,[]);sharedStylesHost.addStyles(styles);_this.contentAttr=shimContentAttribute(appId+'-'+component.id);_this.hostAttr=shimHostAttribute(appId+'-'+component.id);return _this;}EmulatedEncapsulationDomRenderer2.prototype.applyToHost=function(element){_super.prototype.setAttribute.call(this,element,this.hostAttr,'');};EmulatedEncapsulationDomRenderer2.prototype.createElement=function(parent,name){var el=_super.prototype.createElement.call(this,parent,name);_super.prototype.setAttribute.call(this,el,this.contentAttr,'');return el;};return EmulatedEncapsulationDomRenderer2;}(DefaultDomRenderer2);var ShadowDomRenderer=/** @class */function(_super){__extends(ShadowDomRenderer,_super);function ShadowDomRenderer(eventManager,sharedStylesHost,hostEl,component){var _this=_super.call(this,eventManager)||this;_this.sharedStylesHost=sharedStylesHost;_this.hostEl=hostEl;_this.component=component;if(component.encapsulation===i0.ViewEncapsulation.ShadowDom){_this.shadowRoot=hostEl.attachShadow({mode:'open'});}else{_this.shadowRoot=hostEl.createShadowRoot();}_this.sharedStylesHost.addHost(_this.shadowRoot);var styles=flattenStyles(component.id,component.styles,[]);for(var i=0;i<styles.length;i++){var styleEl=document.createElement('style');styleEl.textContent=styles[i];_this.shadowRoot.appendChild(styleEl);}return _this;}ShadowDomRenderer.prototype.nodeOrShadowRoot=function(node){return node===this.hostEl?this.shadowRoot:node;};ShadowDomRenderer.prototype.destroy=function(){this.sharedStylesHost.removeHost(this.shadowRoot);};ShadowDomRenderer.prototype.appendChild=function(parent,newChild){return _super.prototype.appendChild.call(this,this.nodeOrShadowRoot(parent),newChild);};ShadowDomRenderer.prototype.insertBefore=function(parent,newChild,refChild){return _super.prototype.insertBefore.call(this,this.nodeOrShadowRoot(parent),newChild,refChild);};ShadowDomRenderer.prototype.removeChild=function(parent,oldChild){return _super.prototype.removeChild.call(this,this.nodeOrShadowRoot(parent),oldChild);};ShadowDomRenderer.prototype.parentNode=function(node){return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this,this.nodeOrShadowRoot(node)));};return ShadowDomRenderer;}(DefaultDomRenderer2);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var DomEventsPlugin=/** @class */function(_super){__extends(DomEventsPlugin,_super);function DomEventsPlugin(doc){return _super.call(this,doc)||this;}// This plugin should come last in the list of plugins, because it accepts all
// events.
DomEventsPlugin.prototype.supports=function(eventName){return true;};DomEventsPlugin.prototype.addEventListener=function(element,eventName,handler){var _this=this;element.addEventListener(eventName,handler,false);return function(){return _this.removeEventListener(element,eventName,handler);};};DomEventsPlugin.prototype.removeEventListener=function(target,eventName,callback){return target.removeEventListener(eventName,callback);};DomEventsPlugin=__decorate([i0.Injectable(),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],DomEventsPlugin);return DomEventsPlugin;}(EventManagerPlugin);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Supported HammerJS recognizer event names.
     */var EVENT_NAMES={// pan
'pan':true,'panstart':true,'panmove':true,'panend':true,'pancancel':true,'panleft':true,'panright':true,'panup':true,'pandown':true,// pinch
'pinch':true,'pinchstart':true,'pinchmove':true,'pinchend':true,'pinchcancel':true,'pinchin':true,'pinchout':true,// press
'press':true,'pressup':true,// rotate
'rotate':true,'rotatestart':true,'rotatemove':true,'rotateend':true,'rotatecancel':true,// swipe
'swipe':true,'swipeleft':true,'swiperight':true,'swipeup':true,'swipedown':true,// tap
'tap':true};/**
     * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.
     * @see `HammerGestureConfig`
     *
     * @ngModule HammerModule
     * @publicApi
     */var HAMMER_GESTURE_CONFIG=new i0.InjectionToken('HammerGestureConfig');/**
     * Injection token used to provide a {@link HammerLoader} to Angular.
     *
     * @publicApi
     */var HAMMER_LOADER=new i0.InjectionToken('HammerLoader');/**
     * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)
     * for gesture recognition. Configures specific event recognition.
     * @publicApi
     */var HammerGestureConfig=/** @class */function(){function HammerGestureConfig(){/**
             * A set of supported event names for gestures to be used in Angular.
             * Angular supports all built-in recognizers, as listed in
             * [HammerJS documentation](http://hammerjs.github.io/).
             */this.events=[];/**
             * Maps gesture event names to a set of configuration options
             * that specify overrides to the default values for specific properties.
             *
             * The key is a supported event name to be configured,
             * and the options object contains a set of properties, with override values
             * to be applied to the named recognizer event.
             * For example, to disable recognition of the rotate event, specify
             *  `{"rotate": {"enable": false}}`.
             *
             * Properties that are not present take the HammerJS default values.
             * For information about which properties are supported for which events,
             * and their allowed and default values, see
             * [HammerJS documentation](http://hammerjs.github.io/).
             *
             */this.overrides={};}/**
         * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)
         * and attaches it to a given HTML element.
         * @param element The element that will recognize gestures.
         * @returns A HammerJS event-manager object.
         */HammerGestureConfig.prototype.buildHammer=function(element){var mc=new Hammer(element,this.options);mc.get('pinch').set({enable:true});mc.get('rotate').set({enable:true});for(var eventName in this.overrides){mc.get(eventName).set(this.overrides[eventName]);}return mc;};HammerGestureConfig=__decorate([i0.Injectable()],HammerGestureConfig);return HammerGestureConfig;}();/**
     * Event plugin that adds Hammer support to an application.
     *
     * @ngModule HammerModule
     */var HammerGesturesPlugin=/** @class */function(_super){__extends(HammerGesturesPlugin,_super);function HammerGesturesPlugin(doc,_config,console,loader){var _this=_super.call(this,doc)||this;_this._config=_config;_this.console=console;_this.loader=loader;return _this;}HammerGesturesPlugin.prototype.supports=function(eventName){if(!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase())&&!this.isCustomEvent(eventName)){return false;}if(!window.Hammer&&!this.loader){this.console.warn("The \""+eventName+"\" event cannot be bound because Hammer.JS is not "+"loaded and no custom loader has been specified.");return false;}return true;};HammerGesturesPlugin.prototype.addEventListener=function(element,eventName,handler){var _this=this;var zone=this.manager.getZone();eventName=eventName.toLowerCase();// If Hammer is not present but a loader is specified, we defer adding the event listener
// until Hammer is loaded.
if(!window.Hammer&&this.loader){// This `addEventListener` method returns a function to remove the added listener.
// Until Hammer is loaded, the returned function needs to *cancel* the registration rather
// than remove anything.
var cancelRegistration_1=false;var deregister_1=function deregister_1(){cancelRegistration_1=true;};this.loader().then(function(){// If Hammer isn't actually loaded when the custom loader resolves, give up.
if(!window.Hammer){_this.console.warn("The custom HAMMER_LOADER completed, but Hammer.JS is not present.");deregister_1=function deregister_1(){};return;}if(!cancelRegistration_1){// Now that Hammer is loaded and the listener is being loaded for real,
// the deregistration function changes from canceling registration to removal.
deregister_1=_this.addEventListener(element,eventName,handler);}})["catch"](function(){_this.console.warn("The \""+eventName+"\" event cannot be bound because the custom "+"Hammer.JS loader failed.");deregister_1=function deregister_1(){};});// Return a function that *executes* `deregister` (and not `deregister` itself) so that we
// can change the behavior of `deregister` once the listener is added. Using a closure in
// this way allows us to avoid any additional data structures to track listener removal.
return function(){deregister_1();};}return zone.runOutsideAngular(function(){// Creating the manager bind events, must be done outside of angular
var mc=_this._config.buildHammer(element);var callback=function callback(eventObj){zone.runGuarded(function(){handler(eventObj);});};mc.on(eventName,callback);return function(){mc.off(eventName,callback);// destroy mc to prevent memory leak
if(typeof mc.destroy==='function'){mc.destroy();}};});};HammerGesturesPlugin.prototype.isCustomEvent=function(eventName){return this._config.events.indexOf(eventName)>-1;};HammerGesturesPlugin=__decorate([i0.Injectable(),__param(0,i0.Inject(common.DOCUMENT)),__param(1,i0.Inject(HAMMER_GESTURE_CONFIG)),__param(3,i0.Optional()),__param(3,i0.Inject(HAMMER_LOADER)),__metadata("design:paramtypes",[Object,HammerGestureConfig,i0.ɵConsole,Object])],HammerGesturesPlugin);return HammerGesturesPlugin;}(EventManagerPlugin);/**
     * In Ivy, support for Hammer gestures is optional, so applications must
     * import the `HammerModule` at root to turn on support. This means that
     * Hammer-specific code can be tree-shaken away if not needed.
     */var HAMMER_PROVIDERS__POST_R3__=[];/**
     * In View Engine, support for Hammer gestures is built-in by default.
     */var HAMMER_PROVIDERS__PRE_R3__=[{provide:EVENT_MANAGER_PLUGINS,useClass:HammerGesturesPlugin,multi:true,deps:[common.DOCUMENT,HAMMER_GESTURE_CONFIG,i0.ɵConsole,[new i0.Optional(),HAMMER_LOADER]]},{provide:HAMMER_GESTURE_CONFIG,useClass:HammerGestureConfig,deps:[]}];var HAMMER_PROVIDERS=HAMMER_PROVIDERS__PRE_R3__;/**
     * Adds support for HammerJS.
     *
     * Import this module at the root of your application so that Angular can work with
     * HammerJS to detect gesture events.
     *
     * Note that applications still need to include the HammerJS script itself. This module
     * simply sets up the coordination layer between HammerJS and Angular's EventManager.
     *
     * @publicApi
     */var HammerModule=/** @class */function(){function HammerModule(){}HammerModule=__decorate([i0.NgModule({providers:HAMMER_PROVIDERS__PRE_R3__})],HammerModule);return HammerModule;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Defines supported modifiers for key events.
     */var MODIFIER_KEYS=['alt','control','meta','shift'];var DOM_KEY_LOCATION_NUMPAD=3;// Map to convert some key or keyIdentifier values to what will be returned by getEventKey
var _keyMap={// The following values are here for cross-browser compatibility and to match the W3C standard
// cf http://www.w3.org/TR/DOM-Level-3-Events-key/
'\b':'Backspace','\t':'Tab','\x7F':'Delete','\x1B':'Escape','Del':'Delete','Esc':'Escape','Left':'ArrowLeft','Right':'ArrowRight','Up':'ArrowUp','Down':'ArrowDown','Menu':'ContextMenu','Scroll':'ScrollLock','Win':'OS'};// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
var _chromeNumKeyPadMap={'A':'1','B':'2','C':'3','D':'4','E':'5','F':'6','G':'7','H':'8','I':'9','J':'*','K':'+','M':'-','N':'.','O':'/','\x60':'0','\x90':'NumLock'};var ɵ0$3=function ɵ0$3(event){return event.altKey;},ɵ1=function ɵ1(event){return event.ctrlKey;},ɵ2=function ɵ2(event){return event.metaKey;},ɵ3=function ɵ3(event){return event.shiftKey;};/**
     * Retrieves modifiers from key-event objects.
     */var MODIFIER_KEY_GETTERS={'alt':ɵ0$3,'control':ɵ1,'meta':ɵ2,'shift':ɵ3};/**
     * @publicApi
     * A browser plug-in that provides support for handling of key events in Angular.
     */var KeyEventsPlugin=/** @class */function(_super){__extends(KeyEventsPlugin,_super);/**
         * Initializes an instance of the browser plug-in.
         * @param doc The document in which key events will be detected.
         */function KeyEventsPlugin(doc){return _super.call(this,doc)||this;}KeyEventsPlugin_1=KeyEventsPlugin;/**
         * Reports whether a named key event is supported.
         * @param eventName The event name to query.
         * @return True if the named key event is supported.
         */KeyEventsPlugin.prototype.supports=function(eventName){return KeyEventsPlugin_1.parseEventName(eventName)!=null;};/**
         * Registers a handler for a specific element and key event.
         * @param element The HTML element to receive event notifications.
         * @param eventName The name of the key event to listen for.
         * @param handler A function to call when the notification occurs. Receives the
         * event object as an argument.
         * @returns The key event that was registered.
         */KeyEventsPlugin.prototype.addEventListener=function(element,eventName,handler){var parsedEvent=KeyEventsPlugin_1.parseEventName(eventName);var outsideHandler=KeyEventsPlugin_1.eventCallback(parsedEvent['fullKey'],handler,this.manager.getZone());return this.manager.getZone().runOutsideAngular(function(){return common.ɵgetDOM().onAndCancel(element,parsedEvent['domEventName'],outsideHandler);});};KeyEventsPlugin.parseEventName=function(eventName){var parts=eventName.toLowerCase().split('.');var domEventName=parts.shift();if(parts.length===0||!(domEventName==='keydown'||domEventName==='keyup')){return null;}var key=KeyEventsPlugin_1._normalizeKey(parts.pop());var fullKey='';MODIFIER_KEYS.forEach(function(modifierName){var index=parts.indexOf(modifierName);if(index>-1){parts.splice(index,1);fullKey+=modifierName+'.';}});fullKey+=key;if(parts.length!=0||key.length===0){// returning null instead of throwing to let another plugin process the event
return null;}var result={};result['domEventName']=domEventName;result['fullKey']=fullKey;return result;};KeyEventsPlugin.getEventFullKey=function(event){var fullKey='';var key=getEventKey(event);key=key.toLowerCase();if(key===' '){key='space';// for readability
}else if(key==='.'){key='dot';// because '.' is used as a separator in event names
}MODIFIER_KEYS.forEach(function(modifierName){if(modifierName!=key){var modifierGetter=MODIFIER_KEY_GETTERS[modifierName];if(modifierGetter(event)){fullKey+=modifierName+'.';}}});fullKey+=key;return fullKey;};/**
         * Configures a handler callback for a key event.
         * @param fullKey The event name that combines all simultaneous keystrokes.
         * @param handler The function that responds to the key event.
         * @param zone The zone in which the event occurred.
         * @returns A callback function.
         */KeyEventsPlugin.eventCallback=function(fullKey,handler,zone){return function(event/** TODO #9100 */){if(KeyEventsPlugin_1.getEventFullKey(event)===fullKey){zone.runGuarded(function(){return handler(event);});}};};/** @internal */KeyEventsPlugin._normalizeKey=function(keyName){// TODO: switch to a Map if the mapping grows too much
switch(keyName){case'esc':return'escape';default:return keyName;}};var KeyEventsPlugin_1;KeyEventsPlugin=KeyEventsPlugin_1=__decorate([i0.Injectable(),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],KeyEventsPlugin);return KeyEventsPlugin;}(EventManagerPlugin);function getEventKey(event){var key=event.key;if(key==null){key=event.keyIdentifier;// keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
// Safari cf
// http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces
if(key==null){return'Unidentified';}if(key.startsWith('U+')){key=String.fromCharCode(parseInt(key.substring(2),16));if(event.location===DOM_KEY_LOCATION_NUMPAD&&_chromeNumKeyPadMap.hasOwnProperty(key)){// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
key=_chromeNumKeyPadMap[key];}}}return _keyMap[key]||key;}/**
     * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing
     * values to be safe to use in the different DOM contexts.
     *
     * For example, when binding a URL in an `<a [href]="someValue">` hyperlink, `someValue` will be
     * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on
     * the website.
     *
     * In specific situations, it might be necessary to disable sanitization, for example if the
     * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.
     * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`
     * methods, and then binding to that value from the template.
     *
     * These situations should be very rare, and extraordinary care must be taken to avoid creating a
     * Cross Site Scripting (XSS) security bug!
     *
     * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as
     * close as possible to the source of the value, to make it easy to verify no security bug is
     * created by its use.
     *
     * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that
     * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous
     * code. The sanitizer leaves safe values intact.
     *
     * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in
     * sanitization for the value passed in. Carefully check and audit all values and code paths going
     * into this call. Make sure any user data is appropriately escaped for this security context.
     * For more detail, see the [Security Guide](http://g.co/ng/security).
     *
     * @publicApi
     */var DomSanitizer=/** @class */function(){function DomSanitizer(){}DomSanitizer.ɵprov=i0.ɵɵdefineInjectable({factory:function DomSanitizer_Factory(){return i0.ɵɵinject(DomSanitizerImpl);},token:DomSanitizer,providedIn:"root"});DomSanitizer=__decorate([i0.Injectable({providedIn:'root',useExisting:i0.forwardRef(function(){return DomSanitizerImpl;})})],DomSanitizer);return DomSanitizer;}();function domSanitizerImplFactory(injector){return new DomSanitizerImpl(injector.get(common.DOCUMENT));}var DomSanitizerImpl=/** @class */function(_super){__extends(DomSanitizerImpl,_super);function DomSanitizerImpl(_doc){var _this=_super.call(this)||this;_this._doc=_doc;return _this;}DomSanitizerImpl.prototype.sanitize=function(ctx,value){if(value==null)return null;switch(ctx){case i0.SecurityContext.NONE:return value;case i0.SecurityContext.HTML:if(i0.ɵallowSanitizationBypassAndThrow(value,"HTML"/* Html */)){return i0.ɵunwrapSafeValue(value);}return i0.ɵ_sanitizeHtml(this._doc,String(value));case i0.SecurityContext.STYLE:if(i0.ɵallowSanitizationBypassAndThrow(value,"Style"/* Style */)){return i0.ɵunwrapSafeValue(value);}return i0.ɵ_sanitizeStyle(value);case i0.SecurityContext.SCRIPT:if(i0.ɵallowSanitizationBypassAndThrow(value,"Script"/* Script */)){return i0.ɵunwrapSafeValue(value);}throw new Error('unsafe value used in a script context');case i0.SecurityContext.URL:var type=i0.ɵgetSanitizationBypassType(value);if(i0.ɵallowSanitizationBypassAndThrow(value,"URL"/* Url */)){return i0.ɵunwrapSafeValue(value);}return i0.ɵ_sanitizeUrl(String(value));case i0.SecurityContext.RESOURCE_URL:if(i0.ɵallowSanitizationBypassAndThrow(value,"ResourceURL"/* ResourceUrl */)){return i0.ɵunwrapSafeValue(value);}throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');default:throw new Error("Unexpected SecurityContext "+ctx+" (see http://g.co/ng/security#xss)");}};DomSanitizerImpl.prototype.bypassSecurityTrustHtml=function(value){return i0.ɵbypassSanitizationTrustHtml(value);};DomSanitizerImpl.prototype.bypassSecurityTrustStyle=function(value){return i0.ɵbypassSanitizationTrustStyle(value);};DomSanitizerImpl.prototype.bypassSecurityTrustScript=function(value){return i0.ɵbypassSanitizationTrustScript(value);};DomSanitizerImpl.prototype.bypassSecurityTrustUrl=function(value){return i0.ɵbypassSanitizationTrustUrl(value);};DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl=function(value){return i0.ɵbypassSanitizationTrustResourceUrl(value);};DomSanitizerImpl.ɵprov=i0.ɵɵdefineInjectable({factory:function DomSanitizerImpl_Factory(){return domSanitizerImplFactory(i0.ɵɵinject(i0.INJECTOR));},token:DomSanitizerImpl,providedIn:"root"});DomSanitizerImpl=__decorate([i0.Injectable({providedIn:'root',useFactory:domSanitizerImplFactory,deps:[i0.Injector]}),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],DomSanitizerImpl);return DomSanitizerImpl;}(DomSanitizer);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function initDomAdapter(){BrowserDomAdapter.makeCurrent();BrowserGetTestability.init();}function errorHandler(){return new i0.ErrorHandler();}function _document(){// Tell ivy about the global document
i0.ɵsetDocument(document);return document;}var ɵ0$4=common.ɵPLATFORM_BROWSER_ID;var INTERNAL_BROWSER_PLATFORM_PROVIDERS=[{provide:i0.PLATFORM_ID,useValue:ɵ0$4},{provide:i0.PLATFORM_INITIALIZER,useValue:initDomAdapter,multi:true},{provide:common.DOCUMENT,useFactory:_document,deps:[]}];var BROWSER_SANITIZATION_PROVIDERS__PRE_R3__=[{provide:i0.Sanitizer,useExisting:DomSanitizer},{provide:DomSanitizer,useClass:DomSanitizerImpl,deps:[common.DOCUMENT]}];var BROWSER_SANITIZATION_PROVIDERS__POST_R3__=[];/**
     * @security Replacing built-in sanitization providers exposes the application to XSS risks.
     * Attacker-controlled data introduced by an unsanitized provider could expose your
     * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
     * @publicApi
     */var BROWSER_SANITIZATION_PROVIDERS=BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;/**
     * @publicApi
     */var platformBrowser=i0.createPlatformFactory(i0.platformCore,'browser',INTERNAL_BROWSER_PLATFORM_PROVIDERS);var BROWSER_MODULE_PROVIDERS=[BROWSER_SANITIZATION_PROVIDERS,{provide:i0.ɵINJECTOR_SCOPE,useValue:'root'},{provide:i0.ErrorHandler,useFactory:errorHandler,deps:[]},{provide:EVENT_MANAGER_PLUGINS,useClass:DomEventsPlugin,multi:true,deps:[common.DOCUMENT,i0.NgZone,i0.PLATFORM_ID]},{provide:EVENT_MANAGER_PLUGINS,useClass:KeyEventsPlugin,multi:true,deps:[common.DOCUMENT]},HAMMER_PROVIDERS,{provide:DomRendererFactory2,useClass:DomRendererFactory2,deps:[EventManager,DomSharedStylesHost,i0.APP_ID]},{provide:i0.RendererFactory2,useExisting:DomRendererFactory2},{provide:SharedStylesHost,useExisting:DomSharedStylesHost},{provide:DomSharedStylesHost,useClass:DomSharedStylesHost,deps:[common.DOCUMENT]},{provide:i0.Testability,useClass:i0.Testability,deps:[i0.NgZone]},{provide:EventManager,useClass:EventManager,deps:[EVENT_MANAGER_PLUGINS,i0.NgZone]},ELEMENT_PROBE_PROVIDERS];/**
     * Exports required infrastructure for all Angular apps.
     * Included by default in all Angular apps created with the CLI
     * `new` command.
     * Re-exports `CommonModule` and `ApplicationModule`, making their
     * exports and providers available to all apps.
     *
     * @publicApi
     */var BrowserModule=/** @class */function(){function BrowserModule(parentModule){if(parentModule){throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.");}}BrowserModule_1=BrowserModule;/**
         * Configures a browser-based app to transition from a server-rendered app, if
         * one is present on the page.
         *
         * @param params An object containing an identifier for the app to transition.
         * The ID must match between the client and server versions of the app.
         * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.
         */BrowserModule.withServerTransition=function(params){return{ngModule:BrowserModule_1,providers:[{provide:i0.APP_ID,useValue:params.appId},{provide:TRANSITION_ID,useExisting:i0.APP_ID},SERVER_TRANSITION_PROVIDERS]};};var BrowserModule_1;BrowserModule=BrowserModule_1=__decorate([i0.NgModule({providers:BROWSER_MODULE_PROVIDERS,exports:[common.CommonModule,i0.ApplicationModule]}),__param(0,i0.Optional()),__param(0,i0.SkipSelf()),__param(0,i0.Inject(BrowserModule_1)),__metadata("design:paramtypes",[Object])],BrowserModule);return BrowserModule;}();/**
     * Factory to create Meta service.
     */function createMeta(){return new Meta(i0.ɵɵinject(common.DOCUMENT));}/**
     * A service that can be used to get and add meta tags.
     *
     * @publicApi
     */var Meta=/** @class */function(){function Meta(_doc){this._doc=_doc;this._dom=common.ɵgetDOM();}Meta.prototype.addTag=function(tag,forceCreation){if(forceCreation===void 0){forceCreation=false;}if(!tag)return null;return this._getOrCreateElement(tag,forceCreation);};Meta.prototype.addTags=function(tags,forceCreation){var _this=this;if(forceCreation===void 0){forceCreation=false;}if(!tags)return[];return tags.reduce(function(result,tag){if(tag){result.push(_this._getOrCreateElement(tag,forceCreation));}return result;},[]);};Meta.prototype.getTag=function(attrSelector){if(!attrSelector)return null;return this._doc.querySelector("meta["+attrSelector+"]")||null;};Meta.prototype.getTags=function(attrSelector){if(!attrSelector)return[];var list/*NodeList*/=this._doc.querySelectorAll("meta["+attrSelector+"]");return list?[].slice.call(list):[];};Meta.prototype.updateTag=function(tag,selector){if(!tag)return null;selector=selector||this._parseSelector(tag);var meta=this.getTag(selector);if(meta){return this._setMetaElementAttributes(tag,meta);}return this._getOrCreateElement(tag,true);};Meta.prototype.removeTag=function(attrSelector){this.removeTagElement(this.getTag(attrSelector));};Meta.prototype.removeTagElement=function(meta){if(meta){this._dom.remove(meta);}};Meta.prototype._getOrCreateElement=function(meta,forceCreation){if(forceCreation===void 0){forceCreation=false;}if(!forceCreation){var selector=this._parseSelector(meta);var elem=this.getTag(selector);// It's allowed to have multiple elements with the same name so it's not enough to
// just check that element with the same name already present on the page. We also need to
// check if element has tag attributes
if(elem&&this._containsAttributes(meta,elem))return elem;}var element=this._dom.createElement('meta');this._setMetaElementAttributes(meta,element);var head=this._doc.getElementsByTagName('head')[0];head.appendChild(element);return element;};Meta.prototype._setMetaElementAttributes=function(tag,el){Object.keys(tag).forEach(function(prop){return el.setAttribute(prop,tag[prop]);});return el;};Meta.prototype._parseSelector=function(tag){var attr=tag.name?'name':'property';return attr+"=\""+tag[attr]+"\"";};Meta.prototype._containsAttributes=function(tag,elem){return Object.keys(tag).every(function(key){return elem.getAttribute(key)===tag[key];});};Meta.ɵprov=i0.ɵɵdefineInjectable({factory:createMeta,token:Meta,providedIn:"root"});Meta=__decorate([i0.Injectable({providedIn:'root',useFactory:createMeta,deps:[]}),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],Meta);return Meta;}();/**
     * Factory to create Title service.
     */function createTitle(){return new Title(i0.ɵɵinject(common.DOCUMENT));}/**
     * A service that can be used to get and set the title of a current HTML document.
     *
     * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)
     * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements
     * (representing the `<title>` tag). Instead, this service can be used to set and get the current
     * title value.
     *
     * @publicApi
     */var Title=/** @class */function(){function Title(_doc){this._doc=_doc;}/**
         * Get the title of the current HTML document.
         */Title.prototype.getTitle=function(){return this._doc.title;};/**
         * Set the title of the current HTML document.
         * @param newTitle
         */Title.prototype.setTitle=function(newTitle){this._doc.title=newTitle||'';};Title.ɵprov=i0.ɵɵdefineInjectable({factory:createTitle,token:Title,providedIn:"root"});Title=__decorate([i0.Injectable({providedIn:'root',useFactory:createTitle,deps:[]}),__param(0,i0.Inject(common.DOCUMENT)),__metadata("design:paramtypes",[Object])],Title);return Title;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var win=typeof window!=='undefined'&&window||{};/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ChangeDetectionPerfRecord=/** @class */function(){function ChangeDetectionPerfRecord(msPerTick,numTicks){this.msPerTick=msPerTick;this.numTicks=numTicks;}return ChangeDetectionPerfRecord;}();/**
     * Entry point for all Angular profiling-related debug tools. This object
     * corresponds to the `ng.profiler` in the dev console.
     */var AngularProfiler=/** @class */function(){function AngularProfiler(ref){this.appRef=ref.injector.get(i0.ApplicationRef);}// tslint:disable:no-console
/**
         * Exercises change detection in a loop and then prints the average amount of
         * time in milliseconds how long a single round of change detection takes for
         * the current state of the UI. It runs a minimum of 5 rounds for a minimum
         * of 500 milliseconds.
         *
         * Optionally, a user may pass a `config` parameter containing a map of
         * options. Supported options are:
         *
         * `record` (boolean) - causes the profiler to record a CPU profile while
         * it exercises the change detector. Example:
         *
         * ```
         * ng.profiler.timeChangeDetection({record: true})
         * ```
         */AngularProfiler.prototype.timeChangeDetection=function(config){var record=config&&config['record'];var profileName='Change Detection';// Profiler is not available in Android browsers, nor in IE 9 without dev tools opened
var isProfilerAvailable=win.console.profile!=null;if(record&&isProfilerAvailable){win.console.profile(profileName);}var start=common.ɵgetDOM().performanceNow();var numTicks=0;while(numTicks<5||common.ɵgetDOM().performanceNow()-start<500){this.appRef.tick();numTicks++;}var end=common.ɵgetDOM().performanceNow();if(record&&isProfilerAvailable){win.console.profileEnd(profileName);}var msPerTick=(end-start)/numTicks;win.console.log("ran "+numTicks+" change detection cycles");win.console.log(msPerTick.toFixed(2)+" ms per check");return new ChangeDetectionPerfRecord(msPerTick,numTicks);};return AngularProfiler;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var PROFILER_GLOBAL_NAME='profiler';/**
     * Enabled Angular debug tools that are accessible via your browser's
     * developer console.
     *
     * Usage:
     *
     * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)
     * 1. Type `ng.` (usually the console will show auto-complete suggestion)
     * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`
     *    then hit Enter.
     *
     * @publicApi
     */function enableDebugTools(ref){exportNgVar(PROFILER_GLOBAL_NAME,new AngularProfiler(ref));return ref;}/**
     * Disables Angular tools.
     *
     * @publicApi
     */function disableDebugTools(){exportNgVar(PROFILER_GLOBAL_NAME,null);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function escapeHtml(text){var escapedText={'&':'&a;','"':'&q;','\'':'&s;','<':'&l;','>':'&g;'};return text.replace(/[&"'<>]/g,function(s){return escapedText[s];});}function unescapeHtml(text){var unescapedText={'&a;':'&','&q;':'"','&s;':'\'','&l;':'<','&g;':'>'};return text.replace(/&[^;]+;/g,function(s){return unescapedText[s];});}/**
     * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.
     *
     * Example:
     *
     * ```
     * const COUNTER_KEY = makeStateKey<number>('counter');
     * let value = 10;
     *
     * transferState.set(COUNTER_KEY, value);
     * ```
     *
     * @publicApi
     */function makeStateKey(key){return key;}/**
     * A key value store that is transferred from the application on the server side to the application
     * on the client side.
     *
     * `TransferState` will be available as an injectable token. To use it import
     * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.
     *
     * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only
     * boolean, number, string, null and non-class objects will be serialized and deserialzied in a
     * non-lossy manner.
     *
     * @publicApi
     */var TransferState=/** @class */function(){function TransferState(){this.store={};this.onSerializeCallbacks={};}TransferState_1=TransferState;/** @internal */TransferState.init=function(initState){var transferState=new TransferState_1();transferState.store=initState;return transferState;};/**
         * Get the value corresponding to a key. Return `defaultValue` if key is not found.
         */TransferState.prototype.get=function(key,defaultValue){return this.store[key]!==undefined?this.store[key]:defaultValue;};/**
         * Set the value corresponding to a key.
         */TransferState.prototype.set=function(key,value){this.store[key]=value;};/**
         * Remove a key from the store.
         */TransferState.prototype.remove=function(key){delete this.store[key];};/**
         * Test whether a key exists in the store.
         */TransferState.prototype.hasKey=function(key){return this.store.hasOwnProperty(key);};/**
         * Register a callback to provide the value for a key when `toJson` is called.
         */TransferState.prototype.onSerialize=function(key,callback){this.onSerializeCallbacks[key]=callback;};/**
         * Serialize the current state of the store to JSON.
         */TransferState.prototype.toJson=function(){// Call the onSerialize callbacks and put those values into the store.
for(var key in this.onSerializeCallbacks){if(this.onSerializeCallbacks.hasOwnProperty(key)){try{this.store[key]=this.onSerializeCallbacks[key]();}catch(e){console.warn('Exception in onSerialize callback: ',e);}}}return JSON.stringify(this.store);};var TransferState_1;TransferState=TransferState_1=__decorate([i0.Injectable()],TransferState);return TransferState;}();function initTransferState(doc,appId){// Locate the script tag with the JSON data transferred from the server.
// The id of the script tag is set to the Angular appId + 'state'.
var script=doc.getElementById(appId+'-state');var initialState={};if(script&&script.textContent){try{initialState=JSON.parse(unescapeHtml(script.textContent));}catch(e){console.warn('Exception while restoring TransferState for app '+appId,e);}}return TransferState.init(initialState);}/**
     * NgModule to install on the client side while using the `TransferState` to transfer state from
     * server to client.
     *
     * @publicApi
     */var BrowserTransferStateModule=/** @class */function(){function BrowserTransferStateModule(){}BrowserTransferStateModule=__decorate([i0.NgModule({providers:[{provide:TransferState,useFactory:initTransferState,deps:[common.DOCUMENT,i0.APP_ID]}]})],BrowserTransferStateModule);return BrowserTransferStateModule;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Predicates for use with {@link DebugElement}'s query functions.
     *
     * @publicApi
     */var By=/** @class */function(){function By(){}/**
         * Match all nodes.
         *
         * @usageNotes
         * ### Example
         *
         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
         */By.all=function(){return function(){return true;};};/**
         * Match elements by the given CSS selector.
         *
         * @usageNotes
         * ### Example
         *
         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
         */By.css=function(selector){return function(debugElement){return debugElement.nativeElement!=null?elementMatches(debugElement.nativeElement,selector):false;};};/**
         * Match nodes that have the given directive present.
         *
         * @usageNotes
         * ### Example
         *
         * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
         */By.directive=function(type){return function(debugNode){return debugNode.providerTokens.indexOf(type)!==-1;};};return By;}();function elementMatches(n,selector){if(common.ɵgetDOM().isElementNode(n)){return n.matches&&n.matches(selector)||n.msMatchesSelector&&n.msMatchesSelector(selector)||n.webkitMatchesSelector&&n.webkitMatchesSelector(selector);}return false;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var VERSION=new i0.Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */Object.defineProperty(exports,'ɵgetDOM',{enumerable:true,get:function get(){return common.ɵgetDOM;}});exports.BrowserModule=BrowserModule;exports.BrowserTransferStateModule=BrowserTransferStateModule;exports.By=By;exports.DomSanitizer=DomSanitizer;exports.EVENT_MANAGER_PLUGINS=EVENT_MANAGER_PLUGINS;exports.EventManager=EventManager;exports.HAMMER_GESTURE_CONFIG=HAMMER_GESTURE_CONFIG;exports.HAMMER_LOADER=HAMMER_LOADER;exports.HammerGestureConfig=HammerGestureConfig;exports.HammerModule=HammerModule;exports.Meta=Meta;exports.Title=Title;exports.TransferState=TransferState;exports.VERSION=VERSION;exports.disableDebugTools=disableDebugTools;exports.enableDebugTools=enableDebugTools;exports.makeStateKey=makeStateKey;exports.platformBrowser=platformBrowser;exports.ɵBROWSER_SANITIZATION_PROVIDERS=BROWSER_SANITIZATION_PROVIDERS;exports.ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__=BROWSER_SANITIZATION_PROVIDERS__POST_R3__;exports.ɵBrowserDomAdapter=BrowserDomAdapter;exports.ɵBrowserGetTestability=BrowserGetTestability;exports.ɵDomEventsPlugin=DomEventsPlugin;exports.ɵDomRendererFactory2=DomRendererFactory2;exports.ɵDomSanitizerImpl=DomSanitizerImpl;exports.ɵDomSharedStylesHost=DomSharedStylesHost;exports.ɵELEMENT_PROBE_PROVIDERS=ELEMENT_PROBE_PROVIDERS;exports.ɵELEMENT_PROBE_PROVIDERS__POST_R3__=ELEMENT_PROBE_PROVIDERS__POST_R3__;exports.ɵHAMMER_PROVIDERS__POST_R3__=HAMMER_PROVIDERS__POST_R3__;exports.ɵHammerGesturesPlugin=HammerGesturesPlugin;exports.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS=INTERNAL_BROWSER_PLATFORM_PROVIDERS;exports.ɵKeyEventsPlugin=KeyEventsPlugin;exports.ɵNAMESPACE_URIS=NAMESPACE_URIS;exports.ɵSharedStylesHost=SharedStylesHost;exports.ɵTRANSITION_ID=TRANSITION_ID;exports.ɵangular_packages_platform_browser_platform_browser_a=errorHandler;exports.ɵangular_packages_platform_browser_platform_browser_b=_document;exports.ɵangular_packages_platform_browser_platform_browser_c=BROWSER_MODULE_PROVIDERS;exports.ɵangular_packages_platform_browser_platform_browser_d=createMeta;exports.ɵangular_packages_platform_browser_platform_browser_e=createTitle;exports.ɵangular_packages_platform_browser_platform_browser_f=initTransferState;exports.ɵangular_packages_platform_browser_platform_browser_g=EventManagerPlugin;exports.ɵangular_packages_platform_browser_platform_browser_h=HAMMER_PROVIDERS__PRE_R3__;exports.ɵangular_packages_platform_browser_platform_browser_i=HAMMER_PROVIDERS;exports.ɵangular_packages_platform_browser_platform_browser_j=domSanitizerImplFactory;exports.ɵangular_packages_platform_browser_platform_browser_k=appInitializerFactory;exports.ɵangular_packages_platform_browser_platform_browser_l=SERVER_TRANSITION_PROVIDERS;exports.ɵangular_packages_platform_browser_platform_browser_m=_createNgProbeR2;exports.ɵangular_packages_platform_browser_platform_browser_n=ELEMENT_PROBE_PROVIDERS__PRE_R3__;exports.ɵangular_packages_platform_browser_platform_browser_o=GenericBrowserDomAdapter;exports.ɵescapeHtml=escapeHtml;exports.ɵflattenStyles=flattenStyles;exports.ɵinitDomAdapter=initDomAdapter;exports.ɵshimContentAttribute=shimContentAttribute;exports.ɵshimHostAttribute=shimHostAttribute;Object.defineProperty(exports,'__esModule',{value:true});});},{"@angular/common":2,"@angular/core":4}],7:[function(require,module,exports){/**
 * @license Angular v9.1.9
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(global,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?factory(exports,require('@angular/common'),require('@angular/core'),require('rxjs'),require('rxjs/operators')):typeof define==='function'&&define.amd?define('@angular/router',['exports','@angular/common','@angular/core','rxjs','rxjs/operators'],factory):(global=global||self,factory((global.ng=global.ng||{},global.ng.router={}),global.ng.common,global.ng.core,global.rxjs,global.rxjs.operators));})(this,function(exports,common,core,rxjs,operators){'use strict';/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics7=function extendStatics(d,b){_extendStatics7=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics7(d,b);};function __extends(d,b){_extendStatics7(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign7=function __assign(){_assign7=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign7.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-->0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;};function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{"default":mod};}function __classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver);}function __classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}privateMap.set(receiver,value);return value;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Base for events the router goes through, as opposed to events tied to a specific
     * route. Fired one time for any given navigation.
     *
     * @usageNotes
     *
     * ```ts
     * class MyService {
     *   constructor(public router: Router, logger: Logger) {
     *     router.events.pipe(
     *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)
     *     ).subscribe((e: RouterEvent) => {
     *       logger.log(e.id, e.url);
     *     });
     *   }
     * }
     * ```
     *
     * @see `Event`
     * @publicApi
     */var RouterEvent=/** @class */function(){function RouterEvent(/** A unique ID that the router assigns to every router navigation. */id,/** The URL that is the destination for this navigation. */url){this.id=id;this.url=url;}return RouterEvent;}();/**
     * An event triggered when a navigation starts.
     *
     * @publicApi
     */var NavigationStart=/** @class */function(_super){__extends(NavigationStart,_super);function NavigationStart(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */navigationTrigger,/** @docsNotRequired */restoredState){if(navigationTrigger===void 0){navigationTrigger='imperative';}if(restoredState===void 0){restoredState=null;}var _this=_super.call(this,id,url)||this;_this.navigationTrigger=navigationTrigger;_this.restoredState=restoredState;return _this;}/** @docsNotRequired */NavigationStart.prototype.toString=function(){return"NavigationStart(id: "+this.id+", url: '"+this.url+"')";};return NavigationStart;}(RouterEvent);/**
     * An event triggered when a navigation ends successfully.
     *
     * @publicApi
     */var NavigationEnd=/** @class */function(_super){__extends(NavigationEnd,_super);function NavigationEnd(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;return _this;}/** @docsNotRequired */NavigationEnd.prototype.toString=function(){return"NavigationEnd(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"')";};return NavigationEnd;}(RouterEvent);/**
     * An event triggered when a navigation is canceled, directly or indirectly.
     *
     * This can happen when a [route guard](guide/router#milestone-5-route-guards)
     * returns `false` or initiates a redirect by returning a `UrlTree`.
     *
     * @publicApi
     */var NavigationCancel=/** @class */function(_super){__extends(NavigationCancel,_super);function NavigationCancel(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */reason){var _this=_super.call(this,id,url)||this;_this.reason=reason;return _this;}/** @docsNotRequired */NavigationCancel.prototype.toString=function(){return"NavigationCancel(id: "+this.id+", url: '"+this.url+"')";};return NavigationCancel;}(RouterEvent);/**
     * An event triggered when a navigation fails due to an unexpected error.
     *
     * @publicApi
     */var NavigationError=/** @class */function(_super){__extends(NavigationError,_super);function NavigationError(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */error){var _this=_super.call(this,id,url)||this;_this.error=error;return _this;}/** @docsNotRequired */NavigationError.prototype.toString=function(){return"NavigationError(id: "+this.id+", url: '"+this.url+"', error: "+this.error+")";};return NavigationError;}(RouterEvent);/**
     *An event triggered when routes are recognized.
     *
     * @publicApi
     */var RoutesRecognized=/** @class */function(_super){__extends(RoutesRecognized,_super);function RoutesRecognized(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects,/** @docsNotRequired */state){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;_this.state=state;return _this;}/** @docsNotRequired */RoutesRecognized.prototype.toString=function(){return"RoutesRecognized(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+")";};return RoutesRecognized;}(RouterEvent);/**
     * An event triggered at the start of the Guard phase of routing.
     *
     * @publicApi
     */var GuardsCheckStart=/** @class */function(_super){__extends(GuardsCheckStart,_super);function GuardsCheckStart(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects,/** @docsNotRequired */state){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;_this.state=state;return _this;}GuardsCheckStart.prototype.toString=function(){return"GuardsCheckStart(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+")";};return GuardsCheckStart;}(RouterEvent);/**
     * An event triggered at the end of the Guard phase of routing.
     *
     * @publicApi
     */var GuardsCheckEnd=/** @class */function(_super){__extends(GuardsCheckEnd,_super);function GuardsCheckEnd(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects,/** @docsNotRequired */state,/** @docsNotRequired */shouldActivate){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;_this.state=state;_this.shouldActivate=shouldActivate;return _this;}GuardsCheckEnd.prototype.toString=function(){return"GuardsCheckEnd(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+", shouldActivate: "+this.shouldActivate+")";};return GuardsCheckEnd;}(RouterEvent);/**
     * An event triggered at the the start of the Resolve phase of routing.
     *
     * Runs in the "resolve" phase whether or not there is anything to resolve.
     * In future, may change to only run when there are things to be resolved.
     *
     * @publicApi
     */var ResolveStart=/** @class */function(_super){__extends(ResolveStart,_super);function ResolveStart(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects,/** @docsNotRequired */state){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;_this.state=state;return _this;}ResolveStart.prototype.toString=function(){return"ResolveStart(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+")";};return ResolveStart;}(RouterEvent);/**
     * An event triggered at the end of the Resolve phase of routing.
     * @see `ResolveStart`.
     *
     * @publicApi
     */var ResolveEnd=/** @class */function(_super){__extends(ResolveEnd,_super);function ResolveEnd(/** @docsNotRequired */id,/** @docsNotRequired */url,/** @docsNotRequired */urlAfterRedirects,/** @docsNotRequired */state){var _this=_super.call(this,id,url)||this;_this.urlAfterRedirects=urlAfterRedirects;_this.state=state;return _this;}ResolveEnd.prototype.toString=function(){return"ResolveEnd(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+")";};return ResolveEnd;}(RouterEvent);/**
     * An event triggered before lazy loading a route configuration.
     *
     * @publicApi
     */var RouteConfigLoadStart=/** @class */function(){function RouteConfigLoadStart(/** @docsNotRequired */route){this.route=route;}RouteConfigLoadStart.prototype.toString=function(){return"RouteConfigLoadStart(path: "+this.route.path+")";};return RouteConfigLoadStart;}();/**
     * An event triggered when a route has been lazy loaded.
     *
     * @publicApi
     */var RouteConfigLoadEnd=/** @class */function(){function RouteConfigLoadEnd(/** @docsNotRequired */route){this.route=route;}RouteConfigLoadEnd.prototype.toString=function(){return"RouteConfigLoadEnd(path: "+this.route.path+")";};return RouteConfigLoadEnd;}();/**
     * An event triggered at the start of the child-activation
     * part of the Resolve phase of routing.
     * @see  `ChildActivationEnd`
     * @see `ResolveStart`
     *
     * @publicApi
     */var ChildActivationStart=/** @class */function(){function ChildActivationStart(/** @docsNotRequired */snapshot){this.snapshot=snapshot;}ChildActivationStart.prototype.toString=function(){var path=this.snapshot.routeConfig&&this.snapshot.routeConfig.path||'';return"ChildActivationStart(path: '"+path+"')";};return ChildActivationStart;}();/**
     * An event triggered at the end of the child-activation part
     * of the Resolve phase of routing.
     * @see `ChildActivationStart`
     * @see `ResolveStart` *
     * @publicApi
     */var ChildActivationEnd=/** @class */function(){function ChildActivationEnd(/** @docsNotRequired */snapshot){this.snapshot=snapshot;}ChildActivationEnd.prototype.toString=function(){var path=this.snapshot.routeConfig&&this.snapshot.routeConfig.path||'';return"ChildActivationEnd(path: '"+path+"')";};return ChildActivationEnd;}();/**
     * An event triggered at the start of the activation part
     * of the Resolve phase of routing.
     * @see ActivationEnd`
     * @see `ResolveStart`
     *
     * @publicApi
     */var ActivationStart=/** @class */function(){function ActivationStart(/** @docsNotRequired */snapshot){this.snapshot=snapshot;}ActivationStart.prototype.toString=function(){var path=this.snapshot.routeConfig&&this.snapshot.routeConfig.path||'';return"ActivationStart(path: '"+path+"')";};return ActivationStart;}();/**
     * An event triggered at the end of the activation part
     * of the Resolve phase of routing.
     * @see `ActivationStart`
     * @see `ResolveStart`
     *
     * @publicApi
     */var ActivationEnd=/** @class */function(){function ActivationEnd(/** @docsNotRequired */snapshot){this.snapshot=snapshot;}ActivationEnd.prototype.toString=function(){var path=this.snapshot.routeConfig&&this.snapshot.routeConfig.path||'';return"ActivationEnd(path: '"+path+"')";};return ActivationEnd;}();/**
     * An event triggered by scrolling.
     *
     * @publicApi
     */var Scroll=/** @class */function(){function Scroll(/** @docsNotRequired */routerEvent,/** @docsNotRequired */position,/** @docsNotRequired */anchor){this.routerEvent=routerEvent;this.position=position;this.anchor=anchor;}Scroll.prototype.toString=function(){var pos=this.position?this.position[0]+", "+this.position[1]:null;return"Scroll(anchor: '"+this.anchor+"', position: '"+pos+"')";};return Scroll;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * This component is used internally within the router to be a placeholder when an empty
     * router-outlet is needed. For example, with a config such as:
     *
     * `{path: 'parent', outlet: 'nav', children: [...]}`
     *
     * In order to render, there needs to be a component on this config, which will default
     * to this `EmptyOutletComponent`.
     */var ɵEmptyOutletComponent=/** @class */function(){function ɵEmptyOutletComponent(){}ɵEmptyOutletComponent=__decorate([core.Component({template:"<router-outlet></router-outlet>"})],ɵEmptyOutletComponent);return ɵEmptyOutletComponent;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The primary routing outlet.
     *
     * @publicApi
     */var PRIMARY_OUTLET='primary';var ParamsAsMap=/** @class */function(){function ParamsAsMap(params){this.params=params||{};}ParamsAsMap.prototype.has=function(name){return this.params.hasOwnProperty(name);};ParamsAsMap.prototype.get=function(name){if(this.has(name)){var v=this.params[name];return Array.isArray(v)?v[0]:v;}return null;};ParamsAsMap.prototype.getAll=function(name){if(this.has(name)){var v=this.params[name];return Array.isArray(v)?v:[v];}return[];};Object.defineProperty(ParamsAsMap.prototype,"keys",{get:function get(){return Object.keys(this.params);},enumerable:true,configurable:true});return ParamsAsMap;}();/**
     * Converts a `Params` instance to a `ParamMap`.
     * @param params The instance to convert.
     * @returns The new map instance.
     *
     * @publicApi
     */function convertToParamMap(params){return new ParamsAsMap(params);}var NAVIGATION_CANCELING_ERROR='ngNavigationCancelingError';function navigationCancelingError(message){var error=Error('NavigationCancelingError: '+message);error[NAVIGATION_CANCELING_ERROR]=true;return error;}function isNavigationCancelingError(error){return error&&error[NAVIGATION_CANCELING_ERROR];}// Matches the route configuration (`route`) against the actual URL (`segments`).
function defaultUrlMatcher(segments,segmentGroup,route){var parts=route.path.split('/');if(parts.length>segments.length){// The actual URL is shorter than the config, no match
return null;}if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||parts.length<segments.length)){// The config is longer than the actual URL but we are looking for a full match, return null
return null;}var posParams={};// Check each config part against the actual URL
for(var index=0;index<parts.length;index++){var part=parts[index];var segment=segments[index];var isParameter=part.startsWith(':');if(isParameter){posParams[part.substring(1)]=segment;}else if(part!==segment.path){// The actual URL part does not match the config, no match
return null;}}return{consumed:segments.slice(0,parts.length),posParams:posParams};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var LoadedRouterConfig=/** @class */function(){function LoadedRouterConfig(routes,module){this.routes=routes;this.module=module;}return LoadedRouterConfig;}();function validateConfig(config,parentPath){if(parentPath===void 0){parentPath='';}// forEach doesn't iterate undefined values
for(var i=0;i<config.length;i++){var route=config[i];var fullPath=getFullPath(parentPath,route);validateNode(route,fullPath);}}function validateNode(route,fullPath){if(!route){throw new Error("\n      Invalid configuration of route '"+fullPath+"': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    ");}if(Array.isArray(route)){throw new Error("Invalid configuration of route '"+fullPath+"': Array cannot be specified");}if(!route.component&&!route.children&&!route.loadChildren&&route.outlet&&route.outlet!==PRIMARY_OUTLET){throw new Error("Invalid configuration of route '"+fullPath+"': a componentless route without children or loadChildren cannot have a named outlet set");}if(route.redirectTo&&route.children){throw new Error("Invalid configuration of route '"+fullPath+"': redirectTo and children cannot be used together");}if(route.redirectTo&&route.loadChildren){throw new Error("Invalid configuration of route '"+fullPath+"': redirectTo and loadChildren cannot be used together");}if(route.children&&route.loadChildren){throw new Error("Invalid configuration of route '"+fullPath+"': children and loadChildren cannot be used together");}if(route.redirectTo&&route.component){throw new Error("Invalid configuration of route '"+fullPath+"': redirectTo and component cannot be used together");}if(route.path&&route.matcher){throw new Error("Invalid configuration of route '"+fullPath+"': path and matcher cannot be used together");}if(route.redirectTo===void 0&&!route.component&&!route.children&&!route.loadChildren){throw new Error("Invalid configuration of route '"+fullPath+"'. One of the following must be provided: component, redirectTo, children or loadChildren");}if(route.path===void 0&&route.matcher===void 0){throw new Error("Invalid configuration of route '"+fullPath+"': routes must have either a path or a matcher specified");}if(typeof route.path==='string'&&route.path.charAt(0)==='/'){throw new Error("Invalid configuration of route '"+fullPath+"': path cannot start with a slash");}if(route.path===''&&route.redirectTo!==void 0&&route.pathMatch===void 0){var exp="The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.";throw new Error("Invalid configuration of route '{path: \""+fullPath+"\", redirectTo: \""+route.redirectTo+"\"}': please provide 'pathMatch'. "+exp);}if(route.pathMatch!==void 0&&route.pathMatch!=='full'&&route.pathMatch!=='prefix'){throw new Error("Invalid configuration of route '"+fullPath+"': pathMatch can only be set to 'prefix' or 'full'");}if(route.children){validateConfig(route.children,fullPath);}}function getFullPath(parentPath,currentRoute){if(!currentRoute){return parentPath;}if(!parentPath&&!currentRoute.path){return'';}else if(parentPath&&!currentRoute.path){return parentPath+"/";}else if(!parentPath&&currentRoute.path){return currentRoute.path;}else{return parentPath+"/"+currentRoute.path;}}/**
     * Makes a copy of the config and adds any default required properties.
     */function standardizeConfig(r){var children=r.children&&r.children.map(standardizeConfig);var c=children?_assign7(_assign7({},r),{children:children}):_assign7({},r);if(!c.component&&(children||c.loadChildren)&&c.outlet&&c.outlet!==PRIMARY_OUTLET){c.component=ɵEmptyOutletComponent;}return c;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function shallowEqualArrays(a,b){if(a.length!==b.length)return false;for(var i=0;i<a.length;++i){if(!shallowEqual(a[i],b[i]))return false;}return true;}function shallowEqual(a,b){// Casting Object.keys return values to include `undefined` as there are some cases
// in IE 11 where this can happen. Cannot provide a test because the behavior only
// exists in certain circumstances in IE 11, therefore doing this cast ensures the
// logic is correct for when this edge case is hit.
var k1=Object.keys(a);var k2=Object.keys(b);if(!k1||!k2||k1.length!=k2.length){return false;}var key;for(var i=0;i<k1.length;i++){key=k1[i];if(!equalArraysOrString(a[key],b[key])){return false;}}return true;}/**
     * Test equality for arrays of strings or a string.
     */function equalArraysOrString(a,b){if(Array.isArray(a)&&Array.isArray(b)){if(a.length!=b.length)return false;return a.every(function(aItem){return b.indexOf(aItem)>-1;});}else{return a===b;}}/**
     * Flattens single-level nested arrays.
     */function flatten(arr){return Array.prototype.concat.apply([],arr);}/**
     * Return the last element of an array.
     */function last(a){return a.length>0?a[a.length-1]:null;}/**
     * Verifys all booleans in an array are `true`.
     */function and(bools){return!bools.some(function(v){return!v;});}function forEach(map,callback){for(var prop in map){if(map.hasOwnProperty(prop)){callback(map[prop],prop);}}}function waitForMap(obj,fn){if(Object.keys(obj).length===0){return rxjs.of({});}var waitHead=[];var waitTail=[];var res={};forEach(obj,function(a,k){var mapped=fn(k,a).pipe(operators.map(function(r){return res[k]=r;}));if(k===PRIMARY_OUTLET){waitHead.push(mapped);}else{waitTail.push(mapped);}});// Closure compiler has problem with using spread operator here. So we use "Array.concat".
// Note that we also need to cast the new promise because TypeScript cannot infer the type
// when calling the "of" function through "Function.apply"
return rxjs.of.apply(null,waitHead.concat(waitTail)).pipe(operators.concatAll(),operators.last(),operators.map(function(){return res;}));}function wrapIntoObservable(value){if(core.ɵisObservable(value)){return value;}if(core.ɵisPromise(value)){// Use `Promise.resolve()` to wrap promise-like instances.
// Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the
// change detection.
return rxjs.from(Promise.resolve(value));}return rxjs.of(value);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function createEmptyUrlTree(){return new UrlTree(new UrlSegmentGroup([],{}),{},null);}function containsTree(container,containee,exact){if(exact){return equalQueryParams(container.queryParams,containee.queryParams)&&equalSegmentGroups(container.root,containee.root);}return containsQueryParams(container.queryParams,containee.queryParams)&&containsSegmentGroup(container.root,containee.root);}function equalQueryParams(container,containee){// TODO: This does not handle array params correctly.
return shallowEqual(container,containee);}function equalSegmentGroups(container,containee){if(!equalPath(container.segments,containee.segments))return false;if(container.numberOfChildren!==containee.numberOfChildren)return false;for(var c in containee.children){if(!container.children[c])return false;if(!equalSegmentGroups(container.children[c],containee.children[c]))return false;}return true;}function containsQueryParams(container,containee){// TODO: This does not handle array params correctly.
return Object.keys(containee).length<=Object.keys(container).length&&Object.keys(containee).every(function(key){return equalArraysOrString(container[key],containee[key]);});}function containsSegmentGroup(container,containee){return containsSegmentGroupHelper(container,containee,containee.segments);}function containsSegmentGroupHelper(container,containee,containeePaths){if(container.segments.length>containeePaths.length){var current=container.segments.slice(0,containeePaths.length);if(!equalPath(current,containeePaths))return false;if(containee.hasChildren())return false;return true;}else if(container.segments.length===containeePaths.length){if(!equalPath(container.segments,containeePaths))return false;for(var c in containee.children){if(!container.children[c])return false;if(!containsSegmentGroup(container.children[c],containee.children[c]))return false;}return true;}else{var current=containeePaths.slice(0,container.segments.length);var next=containeePaths.slice(container.segments.length);if(!equalPath(container.segments,current))return false;if(!container.children[PRIMARY_OUTLET])return false;return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET],containee,next);}}/**
     * @description
     *
     * Represents the parsed URL.
     *
     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
     * serialized tree.
     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
     *
     * @usageNotes
     * ### Example
     *
     * ```
     * @Component({templateUrl:'template.html'})
     * class MyComponent {
     *   constructor(router: Router) {
     *     const tree: UrlTree =
     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
     *     const f = tree.fragment; // return 'fragment'
     *     const q = tree.queryParams; // returns {debug: 'true'}
     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
     *     g.children['support'].segments; // return 1 segment 'help'
     *   }
     * }
     * ```
     *
     * @publicApi
     */var UrlTree=/** @class */function(){/** @internal */function UrlTree(/** The root segment group of the URL tree */root,/** The query params of the URL */queryParams,/** The fragment of the URL */fragment){this.root=root;this.queryParams=queryParams;this.fragment=fragment;}Object.defineProperty(UrlTree.prototype,"queryParamMap",{get:function get(){if(!this._queryParamMap){this._queryParamMap=convertToParamMap(this.queryParams);}return this._queryParamMap;},enumerable:true,configurable:true});/** @docsNotRequired */UrlTree.prototype.toString=function(){return DEFAULT_SERIALIZER.serialize(this);};return UrlTree;}();/**
     * @description
     *
     * Represents the parsed URL segment group.
     *
     * See `UrlTree` for more information.
     *
     * @publicApi
     */var UrlSegmentGroup=/** @class */function(){function UrlSegmentGroup(/** The URL segments of this group. See `UrlSegment` for more information */segments,/** The list of children of this group */children){var _this=this;this.segments=segments;this.children=children;/** The parent node in the url tree */this.parent=null;forEach(children,function(v,k){return v.parent=_this;});}/** Whether the segment has child segments */UrlSegmentGroup.prototype.hasChildren=function(){return this.numberOfChildren>0;};Object.defineProperty(UrlSegmentGroup.prototype,"numberOfChildren",{/** Number of child segments */get:function get(){return Object.keys(this.children).length;},enumerable:true,configurable:true});/** @docsNotRequired */UrlSegmentGroup.prototype.toString=function(){return serializePaths(this);};return UrlSegmentGroup;}();/**
     * @description
     *
     * Represents a single URL segment.
     *
     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
     * parameters associated with the segment.
     *
     * @usageNotes
     * ### Example
     *
     * ```
     * @Component({templateUrl:'template.html'})
     * class MyComponent {
     *   constructor(router: Router) {
     *     const tree: UrlTree = router.parseUrl('/team;id=33');
     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
     *     const s: UrlSegment[] = g.segments;
     *     s[0].path; // returns 'team'
     *     s[0].parameters; // returns {id: 33}
     *   }
     * }
     * ```
     *
     * @publicApi
     */var UrlSegment=/** @class */function(){function UrlSegment(/** The path part of a URL segment */path,/** The matrix parameters associated with a segment */parameters){this.path=path;this.parameters=parameters;}Object.defineProperty(UrlSegment.prototype,"parameterMap",{get:function get(){if(!this._parameterMap){this._parameterMap=convertToParamMap(this.parameters);}return this._parameterMap;},enumerable:true,configurable:true});/** @docsNotRequired */UrlSegment.prototype.toString=function(){return serializePath(this);};return UrlSegment;}();function equalSegments(as,bs){return equalPath(as,bs)&&as.every(function(a,i){return shallowEqual(a.parameters,bs[i].parameters);});}function equalPath(as,bs){if(as.length!==bs.length)return false;return as.every(function(a,i){return a.path===bs[i].path;});}function mapChildrenIntoArray(segment,fn){var res=[];forEach(segment.children,function(child,childOutlet){if(childOutlet===PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});forEach(segment.children,function(child,childOutlet){if(childOutlet!==PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});return res;}/**
     * @description
     *
     * Serializes and deserializes a URL string into a URL tree.
     *
     * The url serialization strategy is customizable. You can
     * make all URLs case insensitive by providing a custom UrlSerializer.
     *
     * See `DefaultUrlSerializer` for an example of a URL serializer.
     *
     * @publicApi
     */var UrlSerializer=/** @class */function(){function UrlSerializer(){}return UrlSerializer;}();/**
     * @description
     *
     * A default implementation of the `UrlSerializer`.
     *
     * Example URLs:
     *
     * ```
     * /inbox/33(popup:compose)
     * /inbox/33;open=true/messages/44
     * ```
     *
     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
     * specify route specific parameters.
     *
     * @publicApi
     */var DefaultUrlSerializer=/** @class */function(){function DefaultUrlSerializer(){}/** Parses a url into a `UrlTree` */DefaultUrlSerializer.prototype.parse=function(url){var p=new UrlParser(url);return new UrlTree(p.parseRootSegment(),p.parseQueryParams(),p.parseFragment());};/** Converts a `UrlTree` into a url */DefaultUrlSerializer.prototype.serialize=function(tree){var segment="/"+serializeSegment(tree.root,true);var query=serializeQueryParams(tree.queryParams);var fragment=typeof tree.fragment==="string"?"#"+encodeUriFragment(tree.fragment):'';return""+segment+query+fragment;};return DefaultUrlSerializer;}();var DEFAULT_SERIALIZER=new DefaultUrlSerializer();function serializePaths(segment){return segment.segments.map(function(p){return serializePath(p);}).join('/');}function serializeSegment(segment,root){if(!segment.hasChildren()){return serializePaths(segment);}if(root){var primary=segment.children[PRIMARY_OUTLET]?serializeSegment(segment.children[PRIMARY_OUTLET],false):'';var children_1=[];forEach(segment.children,function(v,k){if(k!==PRIMARY_OUTLET){children_1.push(k+":"+serializeSegment(v,false));}});return children_1.length>0?primary+"("+children_1.join('//')+")":primary;}else{var children=mapChildrenIntoArray(segment,function(v,k){if(k===PRIMARY_OUTLET){return[serializeSegment(segment.children[PRIMARY_OUTLET],false)];}return[k+":"+serializeSegment(v,false)];});return serializePaths(segment)+"/("+children.join('//')+")";}}/**
     * Encodes a URI string with the default encoding. This function will only ever be called from
     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need
     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't
     * have to be encoded per https://url.spec.whatwg.org.
     */function encodeUriString(s){return encodeURIComponent(s).replace(/%40/g,'@').replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',');}/**
     * This function should be used to encode both keys and values in a query string key/value. In
     * the following URL, you need to call encodeUriQuery on "k" and "v":
     *
     * http://www.site.org/html;mk=mv?k=v#f
     */function encodeUriQuery(s){return encodeUriString(s).replace(/%3B/gi,';');}/**
     * This function should be used to encode a URL fragment. In the following URL, you need to call
     * encodeUriFragment on "f":
     *
     * http://www.site.org/html;mk=mv?k=v#f
     */function encodeUriFragment(s){return encodeURI(s);}/**
     * This function should be run on any URI segment as well as the key and value in a key/value
     * pair for matrix params. In the following URL, you need to call encodeUriSegment on "html",
     * "mk", and "mv":
     *
     * http://www.site.org/html;mk=mv?k=v#f
     */function encodeUriSegment(s){return encodeUriString(s).replace(/\(/g,'%28').replace(/\)/g,'%29').replace(/%26/gi,'&');}function decode(s){return decodeURIComponent(s);}// Query keys/values should have the "+" replaced first, as "+" in a query string is " ".
// decodeURIComponent function will not decode "+" as a space.
function decodeQuery(s){return decode(s.replace(/\+/g,'%20'));}function serializePath(path){return""+encodeUriSegment(path.path)+serializeMatrixParams(path.parameters);}function serializeMatrixParams(params){return Object.keys(params).map(function(key){return";"+encodeUriSegment(key)+"="+encodeUriSegment(params[key]);}).join('');}function serializeQueryParams(params){var strParams=Object.keys(params).map(function(name){var value=params[name];return Array.isArray(value)?value.map(function(v){return encodeUriQuery(name)+"="+encodeUriQuery(v);}).join('&'):encodeUriQuery(name)+"="+encodeUriQuery(value);});return strParams.length?"?"+strParams.join('&'):'';}var SEGMENT_RE=/^[^\/()?;=#]+/;function matchSegments(str){var match=str.match(SEGMENT_RE);return match?match[0]:'';}var QUERY_PARAM_RE=/^[^=?&#]+/;// Return the name of the query param at the start of the string or an empty string
function matchQueryParams(str){var match=str.match(QUERY_PARAM_RE);return match?match[0]:'';}var QUERY_PARAM_VALUE_RE=/^[^?&#]+/;// Return the value of the query param at the start of the string or an empty string
function matchUrlQueryParamValue(str){var match=str.match(QUERY_PARAM_VALUE_RE);return match?match[0]:'';}var UrlParser=/** @class */function(){function UrlParser(url){this.url=url;this.remaining=url;}UrlParser.prototype.parseRootSegment=function(){this.consumeOptional('/');if(this.remaining===''||this.peekStartsWith('?')||this.peekStartsWith('#')){return new UrlSegmentGroup([],{});}// The root segment group never has segments
return new UrlSegmentGroup([],this.parseChildren());};UrlParser.prototype.parseQueryParams=function(){var params={};if(this.consumeOptional('?')){do{this.parseQueryParam(params);}while(this.consumeOptional('&'));}return params;};UrlParser.prototype.parseFragment=function(){return this.consumeOptional('#')?decodeURIComponent(this.remaining):null;};UrlParser.prototype.parseChildren=function(){if(this.remaining===''){return{};}this.consumeOptional('/');var segments=[];if(!this.peekStartsWith('(')){segments.push(this.parseSegment());}while(this.peekStartsWith('/')&&!this.peekStartsWith('//')&&!this.peekStartsWith('/(')){this.capture('/');segments.push(this.parseSegment());}var children={};if(this.peekStartsWith('/(')){this.capture('/');children=this.parseParens(true);}var res={};if(this.peekStartsWith('(')){res=this.parseParens(false);}if(segments.length>0||Object.keys(children).length>0){res[PRIMARY_OUTLET]=new UrlSegmentGroup(segments,children);}return res;};// parse a segment with its matrix parameters
// ie `name;k1=v1;k2`
UrlParser.prototype.parseSegment=function(){var path=matchSegments(this.remaining);if(path===''&&this.peekStartsWith(';')){throw new Error("Empty path url segment cannot have parameters: '"+this.remaining+"'.");}this.capture(path);return new UrlSegment(decode(path),this.parseMatrixParams());};UrlParser.prototype.parseMatrixParams=function(){var params={};while(this.consumeOptional(';')){this.parseParam(params);}return params;};UrlParser.prototype.parseParam=function(params){var key=matchSegments(this.remaining);if(!key){return;}this.capture(key);var value='';if(this.consumeOptional('=')){var valueMatch=matchSegments(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}params[decode(key)]=decode(value);};// Parse a single query parameter `name[=value]`
UrlParser.prototype.parseQueryParam=function(params){var key=matchQueryParams(this.remaining);if(!key){return;}this.capture(key);var value='';if(this.consumeOptional('=')){var valueMatch=matchUrlQueryParamValue(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}var decodedKey=decodeQuery(key);var decodedVal=decodeQuery(value);if(params.hasOwnProperty(decodedKey)){// Append to existing values
var currentVal=params[decodedKey];if(!Array.isArray(currentVal)){currentVal=[currentVal];params[decodedKey]=currentVal;}currentVal.push(decodedVal);}else{// Create a new value
params[decodedKey]=decodedVal;}};// parse `(a/b//outlet_name:c/d)`
UrlParser.prototype.parseParens=function(allowPrimary){var segments={};this.capture('(');while(!this.consumeOptional(')')&&this.remaining.length>0){var path=matchSegments(this.remaining);var next=this.remaining[path.length];// if is is not one of these characters, then the segment was unescaped
// or the group was not closed
if(next!=='/'&&next!==')'&&next!==';'){throw new Error("Cannot parse url '"+this.url+"'");}var outletName=undefined;if(path.indexOf(':')>-1){outletName=path.substr(0,path.indexOf(':'));this.capture(outletName);this.capture(':');}else if(allowPrimary){outletName=PRIMARY_OUTLET;}var children=this.parseChildren();segments[outletName]=Object.keys(children).length===1?children[PRIMARY_OUTLET]:new UrlSegmentGroup([],children);this.consumeOptional('//');}return segments;};UrlParser.prototype.peekStartsWith=function(str){return this.remaining.startsWith(str);};// Consumes the prefix when it is present and returns whether it has been consumed
UrlParser.prototype.consumeOptional=function(str){if(this.peekStartsWith(str)){this.remaining=this.remaining.substring(str.length);return true;}return false;};UrlParser.prototype.capture=function(str){if(!this.consumeOptional(str)){throw new Error("Expected \""+str+"\".");}};return UrlParser;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Tree=/** @class */function(){function Tree(root){this._root=root;}Object.defineProperty(Tree.prototype,"root",{get:function get(){return this._root.value;},enumerable:true,configurable:true});/**
         * @internal
         */Tree.prototype.parent=function(t){var p=this.pathFromRoot(t);return p.length>1?p[p.length-2]:null;};/**
         * @internal
         */Tree.prototype.children=function(t){var n=findNode(t,this._root);return n?n.children.map(function(t){return t.value;}):[];};/**
         * @internal
         */Tree.prototype.firstChild=function(t){var n=findNode(t,this._root);return n&&n.children.length>0?n.children[0].value:null;};/**
         * @internal
         */Tree.prototype.siblings=function(t){var p=findPath(t,this._root);if(p.length<2)return[];var c=p[p.length-2].children.map(function(c){return c.value;});return c.filter(function(cc){return cc!==t;});};/**
         * @internal
         */Tree.prototype.pathFromRoot=function(t){return findPath(t,this._root).map(function(s){return s.value;});};return Tree;}();// DFS for the node matching the value
function findNode(value,node){var e_1,_a;if(value===node.value)return node;try{for(var _b=__values(node.children),_c=_b.next();!_c.done;_c=_b.next()){var child=_c.value;var node_1=findNode(value,child);if(node_1)return node_1;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return null;}// Return the path to the node with the given value using DFS
function findPath(value,node){var e_2,_a;if(value===node.value)return[node];try{for(var _b=__values(node.children),_c=_b.next();!_c.done;_c=_b.next()){var child=_c.value;var path=findPath(value,child);if(path.length){path.unshift(node);return path;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_2)throw e_2.error;}}return[];}var TreeNode=/** @class */function(){function TreeNode(value,children){this.value=value;this.children=children;}TreeNode.prototype.toString=function(){return"TreeNode("+this.value+")";};return TreeNode;}();// Return the list of T indexed by outlet name
function nodeChildrenAsMap(node){var map={};if(node){node.children.forEach(function(child){return map[child.value.outlet]=child;});}return map;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Represents the state of the router as a tree of activated routes.
     *
     * @usageNotes
     *
     * Every node in the route tree is an `ActivatedRoute` instance
     * that knows about the "consumed" URL segments, the extracted parameters,
     * and the resolved data.
     * Use the `ActivatedRoute` properties to traverse the tree from any node.
     *
     * ### Example
     *
     * ```
     * @Component({templateUrl:'template.html'})
     * class MyComponent {
     *   constructor(router: Router) {
     *     const state: RouterState = router.routerState;
     *     const root: ActivatedRoute = state.root;
     *     const child = root.firstChild;
     *     const id: Observable<string> = child.params.map(p => p.id);
     *     //...
     *   }
     * }
     * ```
     *
     * @see `ActivatedRoute`
     *
     * @publicApi
     */var RouterState=/** @class */function(_super){__extends(RouterState,_super);/** @internal */function RouterState(root,/** The current snapshot of the router state */snapshot){var _this=_super.call(this,root)||this;_this.snapshot=snapshot;setRouterState(_this,root);return _this;}RouterState.prototype.toString=function(){return this.snapshot.toString();};return RouterState;}(Tree);function createEmptyState(urlTree,rootComponent){var snapshot=createEmptyStateSnapshot(urlTree,rootComponent);var emptyUrl=new rxjs.BehaviorSubject([new UrlSegment('',{})]);var emptyParams=new rxjs.BehaviorSubject({});var emptyData=new rxjs.BehaviorSubject({});var emptyQueryParams=new rxjs.BehaviorSubject({});var fragment=new rxjs.BehaviorSubject('');var activated=new ActivatedRoute(emptyUrl,emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,snapshot.root);activated.snapshot=snapshot.root;return new RouterState(new TreeNode(activated,[]),snapshot);}function createEmptyStateSnapshot(urlTree,rootComponent){var emptyParams={};var emptyData={};var emptyQueryParams={};var fragment='';var activated=new ActivatedRouteSnapshot([],emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,null,urlTree.root,-1,{});return new RouterStateSnapshot('',new TreeNode(activated,[]));}/**
     * Provides access to information about a route associated with a component
     * that is loaded in an outlet.
     * Use to traverse the `RouterState` tree and extract information from nodes.
     *
     * {@example router/activated-route/module.ts region="activated-route"
     *     header="activated-route.component.ts"}
     *
     * @publicApi
     */var ActivatedRoute=/** @class */function(){/** @internal */function ActivatedRoute(/** An observable of the URL segments matched by this route. */url,/** An observable of the matrix parameters scoped to this route. */params,/** An observable of the query parameters shared by all the routes. */queryParams,/** An observable of the URL fragment shared by all the routes. */fragment,/** An observable of the static and resolved data of this route. */data,/** The outlet name of the route, a constant. */outlet,/** The component of the route, a constant. */ // TODO(vsavkin): remove |string
component,futureSnapshot){this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this._futureSnapshot=futureSnapshot;}Object.defineProperty(ActivatedRoute.prototype,"routeConfig",{/** The configuration used to match this route. */get:function get(){return this._futureSnapshot.routeConfig;},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"root",{/** The root of the router state. */get:function get(){return this._routerState.root;},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"parent",{/** The parent of this route in the router state tree. */get:function get(){return this._routerState.parent(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"firstChild",{/** The first child of this route in the router state tree. */get:function get(){return this._routerState.firstChild(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"children",{/** The children of this route in the router state tree. */get:function get(){return this._routerState.children(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"pathFromRoot",{/** The path from the root of the router state tree to this route. */get:function get(){return this._routerState.pathFromRoot(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"paramMap",{/**
             * An Observable that contains a map of the required and optional parameters
             * specific to the route.
             * The map supports retrieving single and multiple values from the same parameter.
             */get:function get(){if(!this._paramMap){this._paramMap=this.params.pipe(operators.map(function(p){return convertToParamMap(p);}));}return this._paramMap;},enumerable:true,configurable:true});Object.defineProperty(ActivatedRoute.prototype,"queryParamMap",{/**
             * An Observable that contains a map of the query parameters available to all routes.
             * The map supports retrieving single and multiple values from the query parameter.
             */get:function get(){if(!this._queryParamMap){this._queryParamMap=this.queryParams.pipe(operators.map(function(p){return convertToParamMap(p);}));}return this._queryParamMap;},enumerable:true,configurable:true});ActivatedRoute.prototype.toString=function(){return this.snapshot?this.snapshot.toString():"Future("+this._futureSnapshot+")";};return ActivatedRoute;}();/**
     * Returns the inherited params, data, and resolve for a given route.
     * By default, this only inherits values up to the nearest path-less or component-less route.
     * @internal
     */function inheritedParamsDataResolve(route,paramsInheritanceStrategy){if(paramsInheritanceStrategy===void 0){paramsInheritanceStrategy='emptyOnly';}var pathFromRoot=route.pathFromRoot;var inheritingStartingFrom=0;if(paramsInheritanceStrategy!=='always'){inheritingStartingFrom=pathFromRoot.length-1;while(inheritingStartingFrom>=1){var current=pathFromRoot[inheritingStartingFrom];var parent_1=pathFromRoot[inheritingStartingFrom-1];// current route is an empty path => inherits its parent's params and data
if(current.routeConfig&&current.routeConfig.path===''){inheritingStartingFrom--;// parent is componentless => current route should inherit its params and data
}else if(!parent_1.component){inheritingStartingFrom--;}else{break;}}}return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));}/** @internal */function flattenInherited(pathFromRoot){return pathFromRoot.reduce(function(res,curr){var params=_assign7(_assign7({},res.params),curr.params);var data=_assign7(_assign7({},res.data),curr.data);var resolve=_assign7(_assign7({},res.resolve),curr._resolvedData);return{params:params,data:data,resolve:resolve};},{params:{},data:{},resolve:{}});}/**
     * @description
     *
     * Contains the information about a route associated with a component loaded in an
     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to
     * traverse the router state tree.
     *
     * ```
     * @Component({templateUrl:'./my-component.html'})
     * class MyComponent {
     *   constructor(route: ActivatedRoute) {
     *     const id: string = route.snapshot.params.id;
     *     const url: string = route.snapshot.url.join('');
     *     const user = route.snapshot.data.user;
     *   }
     * }
     * ```
     *
     * @publicApi
     */var ActivatedRouteSnapshot=/** @class */function(){/** @internal */function ActivatedRouteSnapshot(/** The URL segments matched by this route */url,/** The matrix parameters scoped to this route */params,/** The query parameters shared by all the routes */queryParams,/** The URL fragment shared by all the routes */fragment,/** The static and resolved data of this route */data,/** The outlet name of the route */outlet,/** The component of the route */component,routeConfig,urlSegment,lastPathIndex,resolve){this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this.routeConfig=routeConfig;this._urlSegment=urlSegment;this._lastPathIndex=lastPathIndex;this._resolve=resolve;}Object.defineProperty(ActivatedRouteSnapshot.prototype,"root",{/** The root of the router state */get:function get(){return this._routerState.root;},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"parent",{/** The parent of this route in the router state tree */get:function get(){return this._routerState.parent(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"firstChild",{/** The first child of this route in the router state tree */get:function get(){return this._routerState.firstChild(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"children",{/** The children of this route in the router state tree */get:function get(){return this._routerState.children(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"pathFromRoot",{/** The path from the root of the router state tree to this route */get:function get(){return this._routerState.pathFromRoot(this);},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"paramMap",{get:function get(){if(!this._paramMap){this._paramMap=convertToParamMap(this.params);}return this._paramMap;},enumerable:true,configurable:true});Object.defineProperty(ActivatedRouteSnapshot.prototype,"queryParamMap",{get:function get(){if(!this._queryParamMap){this._queryParamMap=convertToParamMap(this.queryParams);}return this._queryParamMap;},enumerable:true,configurable:true});ActivatedRouteSnapshot.prototype.toString=function(){var url=this.url.map(function(segment){return segment.toString();}).join('/');var matched=this.routeConfig?this.routeConfig.path:'';return"Route(url:'"+url+"', path:'"+matched+"')";};return ActivatedRouteSnapshot;}();/**
     * @description
     *
     * Represents the state of the router at a moment in time.
     *
     * This is a tree of activated route snapshots. Every node in this tree knows about
     * the "consumed" URL segments, the extracted parameters, and the resolved data.
     *
     * @usageNotes
     * ### Example
     *
     * ```
     * @Component({templateUrl:'template.html'})
     * class MyComponent {
     *   constructor(router: Router) {
     *     const state: RouterState = router.routerState;
     *     const snapshot: RouterStateSnapshot = state.snapshot;
     *     const root: ActivatedRouteSnapshot = snapshot.root;
     *     const child = root.firstChild;
     *     const id: Observable<string> = child.params.map(p => p.id);
     *     //...
     *   }
     * }
     * ```
     *
     * @publicApi
     */var RouterStateSnapshot=/** @class */function(_super){__extends(RouterStateSnapshot,_super);/** @internal */function RouterStateSnapshot(/** The url from which this snapshot was created */url,root){var _this=_super.call(this,root)||this;_this.url=url;setRouterState(_this,root);return _this;}RouterStateSnapshot.prototype.toString=function(){return serializeNode(this._root);};return RouterStateSnapshot;}(Tree);function setRouterState(state,node){node.value._routerState=state;node.children.forEach(function(c){return setRouterState(state,c);});}function serializeNode(node){var c=node.children.length>0?" { "+node.children.map(serializeNode).join(', ')+" } ":'';return""+node.value+c;}/**
     * The expectation is that the activate route is created with the right set of parameters.
     * So we push new values into the observables only when they are not the initial values.
     * And we detect that by checking if the snapshot field is set.
     */function advanceActivatedRoute(route){if(route.snapshot){var currentSnapshot=route.snapshot;var nextSnapshot=route._futureSnapshot;route.snapshot=nextSnapshot;if(!shallowEqual(currentSnapshot.queryParams,nextSnapshot.queryParams)){route.queryParams.next(nextSnapshot.queryParams);}if(currentSnapshot.fragment!==nextSnapshot.fragment){route.fragment.next(nextSnapshot.fragment);}if(!shallowEqual(currentSnapshot.params,nextSnapshot.params)){route.params.next(nextSnapshot.params);}if(!shallowEqualArrays(currentSnapshot.url,nextSnapshot.url)){route.url.next(nextSnapshot.url);}if(!shallowEqual(currentSnapshot.data,nextSnapshot.data)){route.data.next(nextSnapshot.data);}}else{route.snapshot=route._futureSnapshot;// this is for resolved data
route.data.next(route._futureSnapshot.data);}}function equalParamsAndUrlSegments(a,b){var equalUrlParams=shallowEqual(a.params,b.params)&&equalSegments(a.url,b.url);var parentsMismatch=!a.parent!==!b.parent;return equalUrlParams&&!parentsMismatch&&(!a.parent||equalParamsAndUrlSegments(a.parent,b.parent));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function createRouterState(routeReuseStrategy,curr,prevState){var root=createNode(routeReuseStrategy,curr._root,prevState?prevState._root:undefined);return new RouterState(root,curr);}function createNode(routeReuseStrategy,curr,prevState){// reuse an activated route that is currently displayed on the screen
if(prevState&&routeReuseStrategy.shouldReuseRoute(curr.value,prevState.value.snapshot)){var value=prevState.value;value._futureSnapshot=curr.value;var children=createOrReuseChildren(routeReuseStrategy,curr,prevState);return new TreeNode(value,children);// retrieve an activated route that is used to be displayed, but is not currently displayed
}else{var detachedRouteHandle=routeReuseStrategy.retrieve(curr.value);if(detachedRouteHandle){var tree=detachedRouteHandle.route;setFutureSnapshotsOfActivatedRoutes(curr,tree);return tree;}else{var value=createActivatedRoute(curr.value);var children=curr.children.map(function(c){return createNode(routeReuseStrategy,c);});return new TreeNode(value,children);}}}function setFutureSnapshotsOfActivatedRoutes(curr,result){if(curr.value.routeConfig!==result.value.routeConfig){throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');}if(curr.children.length!==result.children.length){throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');}result.value._futureSnapshot=curr.value;for(var i=0;i<curr.children.length;++i){setFutureSnapshotsOfActivatedRoutes(curr.children[i],result.children[i]);}}function createOrReuseChildren(routeReuseStrategy,curr,prevState){return curr.children.map(function(child){var e_1,_a;try{for(var _b=__values(prevState.children),_c=_b.next();!_c.done;_c=_b.next()){var p=_c.value;if(routeReuseStrategy.shouldReuseRoute(p.value.snapshot,child.value)){return createNode(routeReuseStrategy,child,p);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b["return"]))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return createNode(routeReuseStrategy,child);});}function createActivatedRoute(c){return new ActivatedRoute(new rxjs.BehaviorSubject(c.url),new rxjs.BehaviorSubject(c.params),new rxjs.BehaviorSubject(c.queryParams),new rxjs.BehaviorSubject(c.fragment),new rxjs.BehaviorSubject(c.data),c.outlet,c.component,c);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function createUrlTree(route,urlTree,commands,queryParams,fragment){if(commands.length===0){return tree(urlTree.root,urlTree.root,urlTree,queryParams,fragment);}var nav=computeNavigation(commands);if(nav.toRoot()){return tree(urlTree.root,new UrlSegmentGroup([],{}),urlTree,queryParams,fragment);}var startingPosition=findStartingPosition(nav,urlTree,route);var segmentGroup=startingPosition.processChildren?updateSegmentGroupChildren(startingPosition.segmentGroup,startingPosition.index,nav.commands):updateSegmentGroup(startingPosition.segmentGroup,startingPosition.index,nav.commands);return tree(startingPosition.segmentGroup,segmentGroup,urlTree,queryParams,fragment);}function isMatrixParams(command){return _typeof(command)==='object'&&command!=null&&!command.outlets&&!command.segmentPath;}function tree(oldSegmentGroup,newSegmentGroup,urlTree,queryParams,fragment){var qp={};if(queryParams){forEach(queryParams,function(value,name){qp[name]=Array.isArray(value)?value.map(function(v){return""+v;}):""+value;});}if(urlTree.root===oldSegmentGroup){return new UrlTree(newSegmentGroup,qp,fragment);}return new UrlTree(replaceSegment(urlTree.root,oldSegmentGroup,newSegmentGroup),qp,fragment);}function replaceSegment(current,oldSegment,newSegment){var children={};forEach(current.children,function(c,outletName){if(c===oldSegment){children[outletName]=newSegment;}else{children[outletName]=replaceSegment(c,oldSegment,newSegment);}});return new UrlSegmentGroup(current.segments,children);}var Navigation=/** @class */function(){function Navigation(isAbsolute,numberOfDoubleDots,commands){this.isAbsolute=isAbsolute;this.numberOfDoubleDots=numberOfDoubleDots;this.commands=commands;if(isAbsolute&&commands.length>0&&isMatrixParams(commands[0])){throw new Error('Root segment cannot have matrix parameters');}var cmdWithOutlet=commands.find(function(c){return _typeof(c)==='object'&&c!=null&&c.outlets;});if(cmdWithOutlet&&cmdWithOutlet!==last(commands)){throw new Error('{outlets:{}} has to be the last command');}}Navigation.prototype.toRoot=function(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=='/';};return Navigation;}();/** Transforms commands to a normalized `Navigation` */function computeNavigation(commands){if(typeof commands[0]==='string'&&commands.length===1&&commands[0]==='/'){return new Navigation(true,0,commands);}var numberOfDoubleDots=0;var isAbsolute=false;var res=commands.reduce(function(res,cmd,cmdIdx){if(_typeof(cmd)==='object'&&cmd!=null){if(cmd.outlets){var outlets_1={};forEach(cmd.outlets,function(commands,name){outlets_1[name]=typeof commands==='string'?commands.split('/'):commands;});return __spread(res,[{outlets:outlets_1}]);}if(cmd.segmentPath){return __spread(res,[cmd.segmentPath]);}}if(!(typeof cmd==='string')){return __spread(res,[cmd]);}if(cmdIdx===0){cmd.split('/').forEach(function(urlPart,partIndex){if(partIndex==0&&urlPart==='.'){// skip './a'
}else if(partIndex==0&&urlPart===''){//  '/a'
isAbsolute=true;}else if(urlPart==='..'){//  '../a'
numberOfDoubleDots++;}else if(urlPart!=''){res.push(urlPart);}});return res;}return __spread(res,[cmd]);},[]);return new Navigation(isAbsolute,numberOfDoubleDots,res);}var Position=/** @class */function(){function Position(segmentGroup,processChildren,index){this.segmentGroup=segmentGroup;this.processChildren=processChildren;this.index=index;}return Position;}();function findStartingPosition(nav,tree,route){if(nav.isAbsolute){return new Position(tree.root,true,0);}if(route.snapshot._lastPathIndex===-1){return new Position(route.snapshot._urlSegment,true,0);}var modifier=isMatrixParams(nav.commands[0])?0:1;var index=route.snapshot._lastPathIndex+modifier;return createPositionApplyingDoubleDots(route.snapshot._urlSegment,index,nav.numberOfDoubleDots);}function createPositionApplyingDoubleDots(group,index,numberOfDoubleDots){var g=group;var ci=index;var dd=numberOfDoubleDots;while(dd>ci){dd-=ci;g=g.parent;if(!g){throw new Error('Invalid number of \'../\'');}ci=g.segments.length;}return new Position(g,false,ci-dd);}function getPath(command){if(_typeof(command)==='object'&&command!=null&&command.outlets){return command.outlets[PRIMARY_OUTLET];}return""+command;}function getOutlets(commands){var _a,_b;if(!(_typeof(commands[0])==='object'))return _a={},_a[PRIMARY_OUTLET]=commands,_a;if(commands[0].outlets===undefined)return _b={},_b[PRIMARY_OUTLET]=commands,_b;return commands[0].outlets;}function updateSegmentGroup(segmentGroup,startIndex,commands){if(!segmentGroup){segmentGroup=new UrlSegmentGroup([],{});}if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return updateSegmentGroupChildren(segmentGroup,startIndex,commands);}var m=prefixedWith(segmentGroup,startIndex,commands);var slicedCommands=commands.slice(m.commandIndex);if(m.match&&m.pathIndex<segmentGroup.segments.length){var g=new UrlSegmentGroup(segmentGroup.segments.slice(0,m.pathIndex),{});g.children[PRIMARY_OUTLET]=new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex),segmentGroup.children);return updateSegmentGroupChildren(g,0,slicedCommands);}else if(m.match&&slicedCommands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else if(m.match&&!segmentGroup.hasChildren()){return createNewSegmentGroup(segmentGroup,startIndex,commands);}else if(m.match){return updateSegmentGroupChildren(segmentGroup,0,slicedCommands);}else{return createNewSegmentGroup(segmentGroup,startIndex,commands);}}function updateSegmentGroupChildren(segmentGroup,startIndex,commands){if(commands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else{var outlets_2=getOutlets(commands);var children_1={};forEach(outlets_2,function(commands,outlet){if(commands!==null){children_1[outlet]=updateSegmentGroup(segmentGroup.children[outlet],startIndex,commands);}});forEach(segmentGroup.children,function(child,childOutlet){if(outlets_2[childOutlet]===undefined){children_1[childOutlet]=child;}});return new UrlSegmentGroup(segmentGroup.segments,children_1);}}function prefixedWith(segmentGroup,startIndex,commands){var currentCommandIndex=0;var currentPathIndex=startIndex;var noMatch={match:false,pathIndex:0,commandIndex:0};while(currentPathIndex<segmentGroup.segments.length){if(currentCommandIndex>=commands.length)return noMatch;var path=segmentGroup.segments[currentPathIndex];var curr=getPath(commands[currentCommandIndex]);var next=currentCommandIndex<commands.length-1?commands[currentCommandIndex+1]:null;if(currentPathIndex>0&&curr===undefined)break;if(curr&&next&&_typeof(next)==='object'&&next.outlets===undefined){if(!compare(curr,next,path))return noMatch;currentCommandIndex+=2;}else{if(!compare(curr,{},path))return noMatch;currentCommandIndex++;}currentPathIndex++;}return{match:true,pathIndex:currentPathIndex,commandIndex:currentCommandIndex};}function createNewSegmentGroup(segmentGroup,startIndex,commands){var paths=segmentGroup.segments.slice(0,startIndex);var i=0;while(i<commands.length){if(_typeof(commands[i])==='object'&&commands[i].outlets!==undefined){var children=createNewSegmentChildren(commands[i].outlets);return new UrlSegmentGroup(paths,children);}// if we start with an object literal, we need to reuse the path part from the segment
if(i===0&&isMatrixParams(commands[0])){var p=segmentGroup.segments[startIndex];paths.push(new UrlSegment(p.path,commands[0]));i++;continue;}var curr=getPath(commands[i]);var next=i<commands.length-1?commands[i+1]:null;if(curr&&next&&isMatrixParams(next)){paths.push(new UrlSegment(curr,stringify(next)));i+=2;}else{paths.push(new UrlSegment(curr,{}));i++;}}return new UrlSegmentGroup(paths,{});}function createNewSegmentChildren(outlets){var children={};forEach(outlets,function(commands,outlet){if(commands!==null){children[outlet]=createNewSegmentGroup(new UrlSegmentGroup([],{}),0,commands);}});return children;}function stringify(params){var res={};forEach(params,function(v,k){return res[k]=""+v;});return res;}function compare(path,params,segment){return path==segment.path&&shallowEqual(params,segment.parameters);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var activateRoutes=function activateRoutes(rootContexts,routeReuseStrategy,forwardEvent){return operators.map(function(t){new ActivateRoutes(routeReuseStrategy,t.targetRouterState,t.currentRouterState,forwardEvent).activate(rootContexts);return t;});};var ActivateRoutes=/** @class */function(){function ActivateRoutes(routeReuseStrategy,futureState,currState,forwardEvent){this.routeReuseStrategy=routeReuseStrategy;this.futureState=futureState;this.currState=currState;this.forwardEvent=forwardEvent;}ActivateRoutes.prototype.activate=function(parentContexts){var futureRoot=this.futureState._root;var currRoot=this.currState?this.currState._root:null;this.deactivateChildRoutes(futureRoot,currRoot,parentContexts);advanceActivatedRoute(this.futureState.root);this.activateChildRoutes(futureRoot,currRoot,parentContexts);};// De-activate the child route that are not re-used for the future state
ActivateRoutes.prototype.deactivateChildRoutes=function(futureNode,currNode,contexts){var _this=this;var children=nodeChildrenAsMap(currNode);// Recurse on the routes active in the future state to de-activate deeper children
futureNode.children.forEach(function(futureChild){var childOutletName=futureChild.value.outlet;_this.deactivateRoutes(futureChild,children[childOutletName],contexts);delete children[childOutletName];});// De-activate the routes that will not be re-used
forEach(children,function(v,childName){_this.deactivateRouteAndItsChildren(v,contexts);});};ActivateRoutes.prototype.deactivateRoutes=function(futureNode,currNode,parentContext){var future=futureNode.value;var curr=currNode?currNode.value:null;if(future===curr){// Reusing the node, check to see if the children need to be de-activated
if(future.component){// If we have a normal route, we need to go through an outlet.
var context=parentContext.getContext(future.outlet);if(context){this.deactivateChildRoutes(futureNode,currNode,context.children);}}else{// if we have a componentless route, we recurse but keep the same outlet map.
this.deactivateChildRoutes(futureNode,currNode,parentContext);}}else{if(curr){// Deactivate the current route which will not be re-used
this.deactivateRouteAndItsChildren(currNode,parentContext);}}};ActivateRoutes.prototype.deactivateRouteAndItsChildren=function(route,parentContexts){if(this.routeReuseStrategy.shouldDetach(route.value.snapshot)){this.detachAndStoreRouteSubtree(route,parentContexts);}else{this.deactivateRouteAndOutlet(route,parentContexts);}};ActivateRoutes.prototype.detachAndStoreRouteSubtree=function(route,parentContexts){var context=parentContexts.getContext(route.value.outlet);if(context&&context.outlet){var componentRef=context.outlet.detach();var contexts=context.children.onOutletDeactivated();this.routeReuseStrategy.store(route.value.snapshot,{componentRef:componentRef,route:route,contexts:contexts});}};ActivateRoutes.prototype.deactivateRouteAndOutlet=function(route,parentContexts){var _this=this;var context=parentContexts.getContext(route.value.outlet);if(context){var children=nodeChildrenAsMap(route);var contexts_1=route.value.component?context.children:parentContexts;forEach(children,function(v,k){return _this.deactivateRouteAndItsChildren(v,contexts_1);});if(context.outlet){// Destroy the component
context.outlet.deactivate();// Destroy the contexts for all the outlets that were in the component
context.children.onOutletDeactivated();}}};ActivateRoutes.prototype.activateChildRoutes=function(futureNode,currNode,contexts){var _this=this;var children=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this.activateRoutes(c,children[c.value.outlet],contexts);_this.forwardEvent(new ActivationEnd(c.value.snapshot));});if(futureNode.children.length){this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));}};ActivateRoutes.prototype.activateRoutes=function(futureNode,currNode,parentContexts){var future=futureNode.value;var curr=currNode?currNode.value:null;advanceActivatedRoute(future);// reusing the node
if(future===curr){if(future.component){// If we have a normal route, we need to go through an outlet.
var context=parentContexts.getOrCreateContext(future.outlet);this.activateChildRoutes(futureNode,currNode,context.children);}else{// if we have a componentless route, we recurse but keep the same outlet map.
this.activateChildRoutes(futureNode,currNode,parentContexts);}}else{if(future.component){// if we have a normal route, we need to place the component into the outlet and recurse.
var context=parentContexts.getOrCreateContext(future.outlet);if(this.routeReuseStrategy.shouldAttach(future.snapshot)){var stored=this.routeReuseStrategy.retrieve(future.snapshot);this.routeReuseStrategy.store(future.snapshot,null);context.children.onOutletReAttached(stored.contexts);context.attachRef=stored.componentRef;context.route=stored.route.value;if(context.outlet){// Attach right away when the outlet has already been instantiated
// Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated
context.outlet.attach(stored.componentRef,stored.route.value);}advanceActivatedRouteNodeAndItsChildren(stored.route);}else{var config=parentLoadedConfig(future.snapshot);var cmpFactoryResolver=config?config.module.componentFactoryResolver:null;context.attachRef=null;context.route=future;context.resolver=cmpFactoryResolver;if(context.outlet){// Activate the outlet when it has already been instantiated
// Otherwise it will get activated from its `ngOnInit` when instantiated
context.outlet.activateWith(future,cmpFactoryResolver);}this.activateChildRoutes(futureNode,null,context.children);}}else{// if we have a componentless route, we recurse but keep the same outlet map.
this.activateChildRoutes(futureNode,null,parentContexts);}}};return ActivateRoutes;}();function advanceActivatedRouteNodeAndItsChildren(node){advanceActivatedRoute(node.value);node.children.forEach(advanceActivatedRouteNodeAndItsChildren);}function parentLoadedConfig(snapshot){for(var s=snapshot.parent;s;s=s.parent){var route=s.routeConfig;if(route&&route._loadedConfig)return route._loadedConfig;if(route&&route.component)return null;}return null;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Simple function check, but generic so type inference will flow. Example:
     *
     * function product(a: number, b: number) {
     *   return a * b;
     * }
     *
     * if (isFunction<product>(fn)) {
     *   return fn(1, 2);
     * } else {
     *   throw "Must provide the `product` function";
     * }
     */function isFunction(v){return typeof v==='function';}function isBoolean(v){return typeof v==='boolean';}function isUrlTree(v){return v instanceof UrlTree;}function isCanLoad(guard){return guard&&isFunction(guard.canLoad);}function isCanActivate(guard){return guard&&isFunction(guard.canActivate);}function isCanActivateChild(guard){return guard&&isFunction(guard.canActivateChild);}function isCanDeactivate(guard){return guard&&isFunction(guard.canDeactivate);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NoMatch=/** @class */function(){function NoMatch(segmentGroup){this.segmentGroup=segmentGroup||null;}return NoMatch;}();var AbsoluteRedirect=/** @class */function(){function AbsoluteRedirect(urlTree){this.urlTree=urlTree;}return AbsoluteRedirect;}();function noMatch(segmentGroup){return new rxjs.Observable(function(obs){return obs.error(new NoMatch(segmentGroup));});}function absoluteRedirect(newTree){return new rxjs.Observable(function(obs){return obs.error(new AbsoluteRedirect(newTree));});}function namedOutletsRedirect(redirectTo){return new rxjs.Observable(function(obs){return obs.error(new Error("Only absolute redirects can have named outlets. redirectTo: '"+redirectTo+"'"));});}function canLoadFails(route){return new rxjs.Observable(function(obs){return obs.error(navigationCancelingError("Cannot load children because the guard of the route \"path: '"+route.path+"'\" returned false"));});}/**
     * Returns the `UrlTree` with the redirection applied.
     *
     * Lazy modules are loaded along the way.
     */function applyRedirects(moduleInjector,configLoader,urlSerializer,urlTree,config){return new ApplyRedirects(moduleInjector,configLoader,urlSerializer,urlTree,config).apply();}var ApplyRedirects=/** @class */function(){function ApplyRedirects(moduleInjector,configLoader,urlSerializer,urlTree,config){this.configLoader=configLoader;this.urlSerializer=urlSerializer;this.urlTree=urlTree;this.config=config;this.allowRedirects=true;this.ngModule=moduleInjector.get(core.NgModuleRef);}ApplyRedirects.prototype.apply=function(){var _this=this;var expanded$=this.expandSegmentGroup(this.ngModule,this.config,this.urlTree.root,PRIMARY_OUTLET);var urlTrees$=expanded$.pipe(operators.map(function(rootSegmentGroup){return _this.createUrlTree(rootSegmentGroup,_this.urlTree.queryParams,_this.urlTree.fragment);}));return urlTrees$.pipe(operators.catchError(function(e){if(e instanceof AbsoluteRedirect){// after an absolute redirect we do not apply any more redirects!
_this.allowRedirects=false;// we need to run matching, so we can fetch all lazy-loaded modules
return _this.match(e.urlTree);}if(e instanceof NoMatch){throw _this.noMatchError(e);}throw e;}));};ApplyRedirects.prototype.match=function(tree){var _this=this;var expanded$=this.expandSegmentGroup(this.ngModule,this.config,tree.root,PRIMARY_OUTLET);var mapped$=expanded$.pipe(operators.map(function(rootSegmentGroup){return _this.createUrlTree(rootSegmentGroup,tree.queryParams,tree.fragment);}));return mapped$.pipe(operators.catchError(function(e){if(e instanceof NoMatch){throw _this.noMatchError(e);}throw e;}));};ApplyRedirects.prototype.noMatchError=function(e){return new Error("Cannot match any routes. URL Segment: '"+e.segmentGroup+"'");};ApplyRedirects.prototype.createUrlTree=function(rootCandidate,queryParams,fragment){var _a;var root=rootCandidate.segments.length>0?new UrlSegmentGroup([],(_a={},_a[PRIMARY_OUTLET]=rootCandidate,_a)):rootCandidate;return new UrlTree(root,queryParams,fragment);};ApplyRedirects.prototype.expandSegmentGroup=function(ngModule,routes,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return this.expandChildren(ngModule,routes,segmentGroup).pipe(operators.map(function(children){return new UrlSegmentGroup([],children);}));}return this.expandSegment(ngModule,segmentGroup,routes,segmentGroup.segments,outlet,true);};// Recursively expand segment groups for all the child outlets
ApplyRedirects.prototype.expandChildren=function(ngModule,routes,segmentGroup){var _this=this;return waitForMap(segmentGroup.children,function(childOutlet,child){return _this.expandSegmentGroup(ngModule,routes,child,childOutlet);});};ApplyRedirects.prototype.expandSegment=function(ngModule,segmentGroup,routes,segments,outlet,allowRedirects){var _this=this;return rxjs.of.apply(void 0,__spread(routes)).pipe(operators.map(function(r){var expanded$=_this.expandSegmentAgainstRoute(ngModule,segmentGroup,routes,r,segments,outlet,allowRedirects);return expanded$.pipe(operators.catchError(function(e){if(e instanceof NoMatch){// TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -
// talk to Jason
return rxjs.of(null);}throw e;}));}),operators.concatAll(),operators.first(function(s){return!!s;}),operators.catchError(function(e,_){if(e instanceof rxjs.EmptyError||e.name==='EmptyError'){if(_this.noLeftoversInUrl(segmentGroup,segments,outlet)){return rxjs.of(new UrlSegmentGroup([],{}));}throw new NoMatch(segmentGroup);}throw e;}));};ApplyRedirects.prototype.noLeftoversInUrl=function(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];};ApplyRedirects.prototype.expandSegmentAgainstRoute=function(ngModule,segmentGroup,routes,route,paths,outlet,allowRedirects){if(getOutlet(route)!==outlet){return noMatch(segmentGroup);}if(route.redirectTo===undefined){return this.matchSegmentAgainstRoute(ngModule,segmentGroup,route,paths);}if(allowRedirects&&this.allowRedirects){return this.expandSegmentAgainstRouteUsingRedirect(ngModule,segmentGroup,routes,route,paths,outlet);}return noMatch(segmentGroup);};ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect=function(ngModule,segmentGroup,routes,route,segments,outlet){if(route.path==='**'){return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule,routes,route,outlet);}return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule,segmentGroup,routes,route,segments,outlet);};ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect=function(ngModule,routes,route,outlet){var _this=this;var newTree=this.applyRedirectCommands([],route.redirectTo,{});if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return this.lineralizeSegments(route,newTree).pipe(operators.mergeMap(function(newSegments){var group=new UrlSegmentGroup(newSegments,{});return _this.expandSegment(ngModule,group,routes,newSegments,outlet,false);}));};ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect=function(ngModule,segmentGroup,routes,route,segments,outlet){var _this=this;var _a=match(segmentGroup,route,segments),matched=_a.matched,consumedSegments=_a.consumedSegments,lastChild=_a.lastChild,positionalParamSegments=_a.positionalParamSegments;if(!matched)return noMatch(segmentGroup);var newTree=this.applyRedirectCommands(consumedSegments,route.redirectTo,positionalParamSegments);if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return this.lineralizeSegments(route,newTree).pipe(operators.mergeMap(function(newSegments){return _this.expandSegment(ngModule,segmentGroup,routes,newSegments.concat(segments.slice(lastChild)),outlet,false);}));};ApplyRedirects.prototype.matchSegmentAgainstRoute=function(ngModule,rawSegmentGroup,route,segments){var _this=this;if(route.path==='**'){if(route.loadChildren){return this.configLoader.load(ngModule.injector,route).pipe(operators.map(function(cfg){route._loadedConfig=cfg;return new UrlSegmentGroup(segments,{});}));}return rxjs.of(new UrlSegmentGroup(segments,{}));}var _a=match(rawSegmentGroup,route,segments),matched=_a.matched,consumedSegments=_a.consumedSegments,lastChild=_a.lastChild;if(!matched)return noMatch(rawSegmentGroup);var rawSlicedSegments=segments.slice(lastChild);var childConfig$=this.getChildConfig(ngModule,route,segments);return childConfig$.pipe(operators.mergeMap(function(routerConfig){var childModule=routerConfig.module;var childConfig=routerConfig.routes;var _a=split(rawSegmentGroup,consumedSegments,rawSlicedSegments,childConfig),segmentGroup=_a.segmentGroup,slicedSegments=_a.slicedSegments;if(slicedSegments.length===0&&segmentGroup.hasChildren()){var expanded$_1=_this.expandChildren(childModule,childConfig,segmentGroup);return expanded$_1.pipe(operators.map(function(children){return new UrlSegmentGroup(consumedSegments,children);}));}if(childConfig.length===0&&slicedSegments.length===0){return rxjs.of(new UrlSegmentGroup(consumedSegments,{}));}var expanded$=_this.expandSegment(childModule,segmentGroup,childConfig,slicedSegments,PRIMARY_OUTLET,true);return expanded$.pipe(operators.map(function(cs){return new UrlSegmentGroup(consumedSegments.concat(cs.segments),cs.children);}));}));};ApplyRedirects.prototype.getChildConfig=function(ngModule,route,segments){var _this=this;if(route.children){// The children belong to the same module
return rxjs.of(new LoadedRouterConfig(route.children,ngModule));}if(route.loadChildren){// lazy children belong to the loaded module
if(route._loadedConfig!==undefined){return rxjs.of(route._loadedConfig);}return runCanLoadGuard(ngModule.injector,route,segments).pipe(operators.mergeMap(function(shouldLoad){if(shouldLoad){return _this.configLoader.load(ngModule.injector,route).pipe(operators.map(function(cfg){route._loadedConfig=cfg;return cfg;}));}return canLoadFails(route);}));}return rxjs.of(new LoadedRouterConfig([],ngModule));};ApplyRedirects.prototype.lineralizeSegments=function(route,urlTree){var res=[];var c=urlTree.root;while(true){res=res.concat(c.segments);if(c.numberOfChildren===0){return rxjs.of(res);}if(c.numberOfChildren>1||!c.children[PRIMARY_OUTLET]){return namedOutletsRedirect(route.redirectTo);}c=c.children[PRIMARY_OUTLET];}};ApplyRedirects.prototype.applyRedirectCommands=function(segments,redirectTo,posParams){return this.applyRedirectCreatreUrlTree(redirectTo,this.urlSerializer.parse(redirectTo),segments,posParams);};ApplyRedirects.prototype.applyRedirectCreatreUrlTree=function(redirectTo,urlTree,segments,posParams){var newRoot=this.createSegmentGroup(redirectTo,urlTree.root,segments,posParams);return new UrlTree(newRoot,this.createQueryParams(urlTree.queryParams,this.urlTree.queryParams),urlTree.fragment);};ApplyRedirects.prototype.createQueryParams=function(redirectToParams,actualParams){var res={};forEach(redirectToParams,function(v,k){var copySourceValue=typeof v==='string'&&v.startsWith(':');if(copySourceValue){var sourceName=v.substring(1);res[k]=actualParams[sourceName];}else{res[k]=v;}});return res;};ApplyRedirects.prototype.createSegmentGroup=function(redirectTo,group,segments,posParams){var _this=this;var updatedSegments=this.createSegments(redirectTo,group.segments,segments,posParams);var children={};forEach(group.children,function(child,name){children[name]=_this.createSegmentGroup(redirectTo,child,segments,posParams);});return new UrlSegmentGroup(updatedSegments,children);};ApplyRedirects.prototype.createSegments=function(redirectTo,redirectToSegments,actualSegments,posParams){var _this=this;return redirectToSegments.map(function(s){return s.path.startsWith(':')?_this.findPosParam(redirectTo,s,posParams):_this.findOrReturn(s,actualSegments);});};ApplyRedirects.prototype.findPosParam=function(redirectTo,redirectToUrlSegment,posParams){var pos=posParams[redirectToUrlSegment.path.substring(1)];if(!pos)throw new Error("Cannot redirect to '"+redirectTo+"'. Cannot find '"+redirectToUrlSegment.path+"'.");return pos;};ApplyRedirects.prototype.findOrReturn=function(redirectToUrlSegment,actualSegments){var e_1,_a;var idx=0;try{for(var actualSegments_1=__values(actualSegments),actualSegments_1_1=actualSegments_1.next();!actualSegments_1_1.done;actualSegments_1_1=actualSegments_1.next()){var s=actualSegments_1_1.value;if(s.path===redirectToUrlSegment.path){actualSegments.splice(idx);return s;}idx++;}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(actualSegments_1_1&&!actualSegments_1_1.done&&(_a=actualSegments_1["return"]))_a.call(actualSegments_1);}finally{if(e_1)throw e_1.error;}}return redirectToUrlSegment;};return ApplyRedirects;}();function runCanLoadGuard(moduleInjector,route,segments){var canLoad=route.canLoad;if(!canLoad||canLoad.length===0)return rxjs.of(true);var obs=rxjs.from(canLoad).pipe(operators.map(function(injectionToken){var guard=moduleInjector.get(injectionToken);var guardVal;if(isCanLoad(guard)){guardVal=guard.canLoad(route,segments);}else if(isFunction(guard)){guardVal=guard(route,segments);}else{throw new Error('Invalid CanLoad guard');}return wrapIntoObservable(guardVal);}));return obs.pipe(operators.concatAll(),operators.every(function(result){return result===true;}));}function match(segmentGroup,route,segments){if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){return{matched:false,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}return{matched:true,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}var matcher=route.matcher||defaultUrlMatcher;var res=matcher(segments,segmentGroup,route);if(!res){return{matched:false,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}return{matched:true,consumedSegments:res.consumed,lastChild:res.consumed.length,positionalParamSegments:res.posParams};}function split(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,slicedSegments,config)){var s=new UrlSegmentGroup(consumedSegments,createChildrenForEmptySegments(config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));return{segmentGroup:mergeTrivialChildren(s),slicedSegments:[]};}if(slicedSegments.length===0&&containsEmptyPathRedirects(segmentGroup,slicedSegments,config)){var s=new UrlSegmentGroup(segmentGroup.segments,addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,config,segmentGroup.children));return{segmentGroup:mergeTrivialChildren(s),slicedSegments:slicedSegments};}return{segmentGroup:segmentGroup,slicedSegments:slicedSegments};}function mergeTrivialChildren(s){if(s.numberOfChildren===1&&s.children[PRIMARY_OUTLET]){var c=s.children[PRIMARY_OUTLET];return new UrlSegmentGroup(s.segments.concat(c.segments),c.children);}return s;}function addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){var e_2,_a;var res={};try{for(var routes_1=__values(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var r=routes_1_1.value;if(isEmptyPathRedirect(segmentGroup,slicedSegments,r)&&!children[getOutlet(r)]){res[getOutlet(r)]=new UrlSegmentGroup([],{});}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1["return"]))_a.call(routes_1);}finally{if(e_2)throw e_2.error;}}return _assign7(_assign7({},children),res);}function createChildrenForEmptySegments(routes,primarySegmentGroup){var e_3,_a;var res={};res[PRIMARY_OUTLET]=primarySegmentGroup;try{for(var routes_2=__values(routes),routes_2_1=routes_2.next();!routes_2_1.done;routes_2_1=routes_2.next()){var r=routes_2_1.value;if(r.path===''&&getOutlet(r)!==PRIMARY_OUTLET){res[getOutlet(r)]=new UrlSegmentGroup([],{});}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(routes_2_1&&!routes_2_1.done&&(_a=routes_2["return"]))_a.call(routes_2);}finally{if(e_3)throw e_3.error;}}return res;}function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,segments,routes){return routes.some(function(r){return isEmptyPathRedirect(segmentGroup,segments,r)&&getOutlet(r)!==PRIMARY_OUTLET;});}function containsEmptyPathRedirects(segmentGroup,segments,routes){return routes.some(function(r){return isEmptyPathRedirect(segmentGroup,segments,r);});}function isEmptyPathRedirect(segmentGroup,segments,r){if((segmentGroup.hasChildren()||segments.length>0)&&r.pathMatch==='full'){return false;}return r.path===''&&r.redirectTo!==undefined;}function getOutlet(route){return route.outlet||PRIMARY_OUTLET;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function applyRedirects$1(moduleInjector,configLoader,urlSerializer,config){return function(source){return source.pipe(operators.switchMap(function(t){return applyRedirects(moduleInjector,configLoader,urlSerializer,t.extractedUrl,config).pipe(operators.map(function(urlAfterRedirects){return _assign7(_assign7({},t),{urlAfterRedirects:urlAfterRedirects});}));}));};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var CanActivate=/** @class */function(){function CanActivate(path){this.path=path;this.route=this.path[this.path.length-1];}return CanActivate;}();var CanDeactivate=/** @class */function(){function CanDeactivate(component,route){this.component=component;this.route=route;}return CanDeactivate;}();function getAllRouteGuards(future,curr,parentContexts){var futureRoot=future._root;var currRoot=curr?curr._root:null;return getChildRouteGuards(futureRoot,currRoot,parentContexts,[futureRoot.value]);}function getCanActivateChild(p){var canActivateChild=p.routeConfig?p.routeConfig.canActivateChild:null;if(!canActivateChild||canActivateChild.length===0)return null;return{node:p,guards:canActivateChild};}function getToken(token,snapshot,moduleInjector){var config=getClosestLoadedConfig(snapshot);var injector=config?config.module.injector:moduleInjector;return injector.get(token);}function getClosestLoadedConfig(snapshot){if(!snapshot)return null;for(var s=snapshot.parent;s;s=s.parent){var route=s.routeConfig;if(route&&route._loadedConfig)return route._loadedConfig;}return null;}function getChildRouteGuards(futureNode,currNode,contexts,futurePath,checks){if(checks===void 0){checks={canDeactivateChecks:[],canActivateChecks:[]};}var prevChildren=nodeChildrenAsMap(currNode);// Process the children of the future route
futureNode.children.forEach(function(c){getRouteGuards(c,prevChildren[c.value.outlet],contexts,futurePath.concat([c.value]),checks);delete prevChildren[c.value.outlet];});// Process any children left from the current route (not active for the future route)
forEach(prevChildren,function(v,k){return deactivateRouteAndItsChildren(v,contexts.getContext(k),checks);});return checks;}function getRouteGuards(futureNode,currNode,parentContexts,futurePath,checks){if(checks===void 0){checks={canDeactivateChecks:[],canActivateChecks:[]};}var future=futureNode.value;var curr=currNode?currNode.value:null;var context=parentContexts?parentContexts.getContext(futureNode.value.outlet):null;// reusing the node
if(curr&&future.routeConfig===curr.routeConfig){var shouldRun=shouldRunGuardsAndResolvers(curr,future,future.routeConfig.runGuardsAndResolvers);if(shouldRun){checks.canActivateChecks.push(new CanActivate(futurePath));}else{// we need to set the data
future.data=curr.data;future._resolvedData=curr._resolvedData;}// If we have a component, we need to go through an outlet.
if(future.component){getChildRouteGuards(futureNode,currNode,context?context.children:null,futurePath,checks);// if we have a componentless route, we recurse but keep the same outlet map.
}else{getChildRouteGuards(futureNode,currNode,parentContexts,futurePath,checks);}if(shouldRun){var component=context&&context.outlet&&context.outlet.component||null;checks.canDeactivateChecks.push(new CanDeactivate(component,curr));}}else{if(curr){deactivateRouteAndItsChildren(currNode,context,checks);}checks.canActivateChecks.push(new CanActivate(futurePath));// If we have a component, we need to go through an outlet.
if(future.component){getChildRouteGuards(futureNode,null,context?context.children:null,futurePath,checks);// if we have a componentless route, we recurse but keep the same outlet map.
}else{getChildRouteGuards(futureNode,null,parentContexts,futurePath,checks);}}return checks;}function shouldRunGuardsAndResolvers(curr,future,mode){if(typeof mode==='function'){return mode(curr,future);}switch(mode){case'pathParamsChange':return!equalPath(curr.url,future.url);case'pathParamsOrQueryParamsChange':return!equalPath(curr.url,future.url)||!shallowEqual(curr.queryParams,future.queryParams);case'always':return true;case'paramsOrQueryParamsChange':return!equalParamsAndUrlSegments(curr,future)||!shallowEqual(curr.queryParams,future.queryParams);case'paramsChange':default:return!equalParamsAndUrlSegments(curr,future);}}function deactivateRouteAndItsChildren(route,context,checks){var children=nodeChildrenAsMap(route);var r=route.value;forEach(children,function(node,childName){if(!r.component){deactivateRouteAndItsChildren(node,context,checks);}else if(context){deactivateRouteAndItsChildren(node,context.children.getContext(childName),checks);}else{deactivateRouteAndItsChildren(node,null,checks);}});if(!r.component){checks.canDeactivateChecks.push(new CanDeactivate(null,r));}else if(context&&context.outlet&&context.outlet.isActivated){checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component,r));}else{checks.canDeactivateChecks.push(new CanDeactivate(null,r));}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var INITIAL_VALUE=Symbol('INITIAL_VALUE');function prioritizedGuardValue(){return operators.switchMap(function(obs){return rxjs.combineLatest.apply(void 0,__spread(obs.map(function(o){return o.pipe(operators.take(1),operators.startWith(INITIAL_VALUE));}))).pipe(operators.scan(function(acc,list){var isPending=false;return list.reduce(function(innerAcc,val,i){if(innerAcc!==INITIAL_VALUE)return innerAcc;// Toggle pending flag if any values haven't been set yet
if(val===INITIAL_VALUE)isPending=true;// Any other return values are only valid if we haven't yet hit a pending
// call. This guarantees that in the case of a guard at the bottom of the
// tree that returns a redirect, we will wait for the higher priority
// guard at the top to finish before performing the redirect.
if(!isPending){// Early return when we hit a `false` value as that should always
// cancel navigation
if(val===false)return val;if(i===list.length-1||isUrlTree(val)){return val;}}return innerAcc;},acc);},INITIAL_VALUE),operators.filter(function(item){return item!==INITIAL_VALUE;}),operators.map(function(item){return isUrlTree(item)?item:item===true;}),//
operators.take(1));});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function checkGuards(moduleInjector,forwardEvent){return function(source){return source.pipe(operators.mergeMap(function(t){var targetSnapshot=t.targetSnapshot,currentSnapshot=t.currentSnapshot,_a=t.guards,canActivateChecks=_a.canActivateChecks,canDeactivateChecks=_a.canDeactivateChecks;if(canDeactivateChecks.length===0&&canActivateChecks.length===0){return rxjs.of(_assign7(_assign7({},t),{guardsResult:true}));}return runCanDeactivateChecks(canDeactivateChecks,targetSnapshot,currentSnapshot,moduleInjector).pipe(operators.mergeMap(function(canDeactivate){return canDeactivate&&isBoolean(canDeactivate)?runCanActivateChecks(targetSnapshot,canActivateChecks,moduleInjector,forwardEvent):rxjs.of(canDeactivate);}),operators.map(function(guardsResult){return _assign7(_assign7({},t),{guardsResult:guardsResult});}));}));};}function runCanDeactivateChecks(checks,futureRSS,currRSS,moduleInjector){return rxjs.from(checks).pipe(operators.mergeMap(function(check){return runCanDeactivate(check.component,check.route,currRSS,futureRSS,moduleInjector);}),operators.first(function(result){return result!==true;},true));}function runCanActivateChecks(futureSnapshot,checks,moduleInjector,forwardEvent){return rxjs.from(checks).pipe(operators.concatMap(function(check){return rxjs.from([fireChildActivationStart(check.route.parent,forwardEvent),fireActivationStart(check.route,forwardEvent),runCanActivateChild(futureSnapshot,check.path,moduleInjector),runCanActivate(futureSnapshot,check.route,moduleInjector)]).pipe(operators.concatAll(),operators.first(function(result){return result!==true;},true));}),operators.first(function(result){return result!==true;},true));}/**
     * This should fire off `ActivationStart` events for each route being activated at this
     * level.
     * In other words, if you're activating `a` and `b` below, `path` will contain the
     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always
     * return
     * `true` so checks continue to run.
     */function fireActivationStart(snapshot,forwardEvent){if(snapshot!==null&&forwardEvent){forwardEvent(new ActivationStart(snapshot));}return rxjs.of(true);}/**
     * This should fire off `ChildActivationStart` events for each route being activated at this
     * level.
     * In other words, if you're activating `a` and `b` below, `path` will contain the
     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always
     * return
     * `true` so checks continue to run.
     */function fireChildActivationStart(snapshot,forwardEvent){if(snapshot!==null&&forwardEvent){forwardEvent(new ChildActivationStart(snapshot));}return rxjs.of(true);}function runCanActivate(futureRSS,futureARS,moduleInjector){var canActivate=futureARS.routeConfig?futureARS.routeConfig.canActivate:null;if(!canActivate||canActivate.length===0)return rxjs.of(true);var canActivateObservables=canActivate.map(function(c){return rxjs.defer(function(){var guard=getToken(c,futureARS,moduleInjector);var observable;if(isCanActivate(guard)){observable=wrapIntoObservable(guard.canActivate(futureARS,futureRSS));}else if(isFunction(guard)){observable=wrapIntoObservable(guard(futureARS,futureRSS));}else{throw new Error('Invalid CanActivate guard');}return observable.pipe(operators.first());});});return rxjs.of(canActivateObservables).pipe(prioritizedGuardValue());}function runCanActivateChild(futureRSS,path,moduleInjector){var futureARS=path[path.length-1];var canActivateChildGuards=path.slice(0,path.length-1).reverse().map(function(p){return getCanActivateChild(p);}).filter(function(_){return _!==null;});var canActivateChildGuardsMapped=canActivateChildGuards.map(function(d){return rxjs.defer(function(){var guardsMapped=d.guards.map(function(c){var guard=getToken(c,d.node,moduleInjector);var observable;if(isCanActivateChild(guard)){observable=wrapIntoObservable(guard.canActivateChild(futureARS,futureRSS));}else if(isFunction(guard)){observable=wrapIntoObservable(guard(futureARS,futureRSS));}else{throw new Error('Invalid CanActivateChild guard');}return observable.pipe(operators.first());});return rxjs.of(guardsMapped).pipe(prioritizedGuardValue());});});return rxjs.of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());}function runCanDeactivate(component,currARS,currRSS,futureRSS,moduleInjector){var canDeactivate=currARS&&currARS.routeConfig?currARS.routeConfig.canDeactivate:null;if(!canDeactivate||canDeactivate.length===0)return rxjs.of(true);var canDeactivateObservables=canDeactivate.map(function(c){var guard=getToken(c,currARS,moduleInjector);var observable;if(isCanDeactivate(guard)){observable=wrapIntoObservable(guard.canDeactivate(component,currARS,currRSS,futureRSS));}else if(isFunction(guard)){observable=wrapIntoObservable(guard(component,currARS,currRSS,futureRSS));}else{throw new Error('Invalid CanDeactivate guard');}return observable.pipe(operators.first());});return rxjs.of(canDeactivateObservables).pipe(prioritizedGuardValue());}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var NoMatch$1=/** @class */function(){function NoMatch(){}return NoMatch;}();function recognize(rootComponentType,config,urlTree,url,paramsInheritanceStrategy,relativeLinkResolution){if(paramsInheritanceStrategy===void 0){paramsInheritanceStrategy='emptyOnly';}if(relativeLinkResolution===void 0){relativeLinkResolution='legacy';}return new Recognizer(rootComponentType,config,urlTree,url,paramsInheritanceStrategy,relativeLinkResolution).recognize();}var Recognizer=/** @class */function(){function Recognizer(rootComponentType,config,urlTree,url,paramsInheritanceStrategy,relativeLinkResolution){this.rootComponentType=rootComponentType;this.config=config;this.urlTree=urlTree;this.url=url;this.paramsInheritanceStrategy=paramsInheritanceStrategy;this.relativeLinkResolution=relativeLinkResolution;}Recognizer.prototype.recognize=function(){try{var rootSegmentGroup=split$1(this.urlTree.root,[],[],this.config,this.relativeLinkResolution).segmentGroup;var children=this.processSegmentGroup(this.config,rootSegmentGroup,PRIMARY_OUTLET);var root=new ActivatedRouteSnapshot([],Object.freeze({}),Object.freeze(_assign7({},this.urlTree.queryParams)),this.urlTree.fragment,{},PRIMARY_OUTLET,this.rootComponentType,null,this.urlTree.root,-1,{});var rootNode=new TreeNode(root,children);var routeState=new RouterStateSnapshot(this.url,rootNode);this.inheritParamsAndData(routeState._root);return rxjs.of(routeState);}catch(e){return new rxjs.Observable(function(obs){return obs.error(e);});}};Recognizer.prototype.inheritParamsAndData=function(routeNode){var _this=this;var route=routeNode.value;var i=inheritedParamsDataResolve(route,this.paramsInheritanceStrategy);route.params=Object.freeze(i.params);route.data=Object.freeze(i.data);routeNode.children.forEach(function(n){return _this.inheritParamsAndData(n);});};Recognizer.prototype.processSegmentGroup=function(config,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return this.processChildren(config,segmentGroup);}return this.processSegment(config,segmentGroup,segmentGroup.segments,outlet);};Recognizer.prototype.processChildren=function(config,segmentGroup){var _this=this;var children=mapChildrenIntoArray(segmentGroup,function(child,childOutlet){return _this.processSegmentGroup(config,child,childOutlet);});checkOutletNameUniqueness(children);sortActivatedRouteSnapshots(children);return children;};Recognizer.prototype.processSegment=function(config,segmentGroup,segments,outlet){var e_1,_a;try{for(var config_1=__values(config),config_1_1=config_1.next();!config_1_1.done;config_1_1=config_1.next()){var r=config_1_1.value;try{return this.processSegmentAgainstRoute(r,segmentGroup,segments,outlet);}catch(e){if(!(e instanceof NoMatch$1))throw e;}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(config_1_1&&!config_1_1.done&&(_a=config_1["return"]))_a.call(config_1);}finally{if(e_1)throw e_1.error;}}if(this.noLeftoversInUrl(segmentGroup,segments,outlet)){return[];}throw new NoMatch$1();};Recognizer.prototype.noLeftoversInUrl=function(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];};Recognizer.prototype.processSegmentAgainstRoute=function(route,rawSegment,segments,outlet){if(route.redirectTo)throw new NoMatch$1();if((route.outlet||PRIMARY_OUTLET)!==outlet)throw new NoMatch$1();var snapshot;var consumedSegments=[];var rawSlicedSegments=[];if(route.path==='**'){var params=segments.length>0?last(segments).parameters:{};snapshot=new ActivatedRouteSnapshot(segments,params,Object.freeze(_assign7({},this.urlTree.queryParams)),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+segments.length,getResolve(route));}else{var result=match$1(rawSegment,route,segments);consumedSegments=result.consumedSegments;rawSlicedSegments=segments.slice(result.lastChild);snapshot=new ActivatedRouteSnapshot(consumedSegments,result.parameters,Object.freeze(_assign7({},this.urlTree.queryParams)),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+consumedSegments.length,getResolve(route));}var childConfig=getChildConfig(route);var _a=split$1(rawSegment,consumedSegments,rawSlicedSegments,childConfig,this.relativeLinkResolution),segmentGroup=_a.segmentGroup,slicedSegments=_a.slicedSegments;if(slicedSegments.length===0&&segmentGroup.hasChildren()){var children_1=this.processChildren(childConfig,segmentGroup);return[new TreeNode(snapshot,children_1)];}if(childConfig.length===0&&slicedSegments.length===0){return[new TreeNode(snapshot,[])];}var children=this.processSegment(childConfig,segmentGroup,slicedSegments,PRIMARY_OUTLET);return[new TreeNode(snapshot,children)];};return Recognizer;}();function sortActivatedRouteSnapshots(nodes){nodes.sort(function(a,b){if(a.value.outlet===PRIMARY_OUTLET)return-1;if(b.value.outlet===PRIMARY_OUTLET)return 1;return a.value.outlet.localeCompare(b.value.outlet);});}function getChildConfig(route){if(route.children){return route.children;}if(route.loadChildren){return route._loadedConfig.routes;}return[];}function match$1(segmentGroup,route,segments){if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){throw new NoMatch$1();}return{consumedSegments:[],lastChild:0,parameters:{}};}var matcher=route.matcher||defaultUrlMatcher;var res=matcher(segments,segmentGroup,route);if(!res)throw new NoMatch$1();var posParams={};forEach(res.posParams,function(v,k){posParams[k]=v.path;});var parameters=res.consumed.length>0?_assign7(_assign7({},posParams),res.consumed[res.consumed.length-1].parameters):posParams;return{consumedSegments:res.consumed,lastChild:res.consumed.length,parameters:parameters};}function checkOutletNameUniqueness(nodes){var names={};nodes.forEach(function(n){var routeWithSameOutletName=names[n.value.outlet];if(routeWithSameOutletName){var p=routeWithSameOutletName.url.map(function(s){return s.toString();}).join('/');var c=n.value.url.map(function(s){return s.toString();}).join('/');throw new Error("Two segments cannot have the same outlet name: '"+p+"' and '"+c+"'.");}names[n.value.outlet]=n.value;});}function getSourceSegmentGroup(segmentGroup){var s=segmentGroup;while(s._sourceSegment){s=s._sourceSegment;}return s;}function getPathIndexShift(segmentGroup){var s=segmentGroup;var res=s._segmentIndexShift?s._segmentIndexShift:0;while(s._sourceSegment){s=s._sourceSegment;res+=s._segmentIndexShift?s._segmentIndexShift:0;}return res-1;}function split$1(segmentGroup,consumedSegments,slicedSegments,config,relativeLinkResolution){if(slicedSegments.length>0&&containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,config)){var s_1=new UrlSegmentGroup(consumedSegments,createChildrenForEmptyPaths(segmentGroup,consumedSegments,config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));s_1._sourceSegment=segmentGroup;s_1._segmentIndexShift=consumedSegments.length;return{segmentGroup:s_1,slicedSegments:[]};}if(slicedSegments.length===0&&containsEmptyPathMatches(segmentGroup,slicedSegments,config)){var s_2=new UrlSegmentGroup(segmentGroup.segments,addEmptyPathsToChildrenIfNeeded(segmentGroup,consumedSegments,slicedSegments,config,segmentGroup.children,relativeLinkResolution));s_2._sourceSegment=segmentGroup;s_2._segmentIndexShift=consumedSegments.length;return{segmentGroup:s_2,slicedSegments:slicedSegments};}var s=new UrlSegmentGroup(segmentGroup.segments,segmentGroup.children);s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;return{segmentGroup:s,slicedSegments:slicedSegments};}function addEmptyPathsToChildrenIfNeeded(segmentGroup,consumedSegments,slicedSegments,routes,children,relativeLinkResolution){var e_2,_a;var res={};try{for(var routes_1=__values(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var r=routes_1_1.value;if(emptyPathMatch(segmentGroup,slicedSegments,r)&&!children[getOutlet$1(r)]){var s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;if(relativeLinkResolution==='legacy'){s._segmentIndexShift=segmentGroup.segments.length;}else{s._segmentIndexShift=consumedSegments.length;}res[getOutlet$1(r)]=s;}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1["return"]))_a.call(routes_1);}finally{if(e_2)throw e_2.error;}}return _assign7(_assign7({},children),res);}function createChildrenForEmptyPaths(segmentGroup,consumedSegments,routes,primarySegment){var e_3,_a;var res={};res[PRIMARY_OUTLET]=primarySegment;primarySegment._sourceSegment=segmentGroup;primarySegment._segmentIndexShift=consumedSegments.length;try{for(var routes_2=__values(routes),routes_2_1=routes_2.next();!routes_2_1.done;routes_2_1=routes_2.next()){var r=routes_2_1.value;if(r.path===''&&getOutlet$1(r)!==PRIMARY_OUTLET){var s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;res[getOutlet$1(r)]=s;}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(routes_2_1&&!routes_2_1.done&&(_a=routes_2["return"]))_a.call(routes_2);}finally{if(e_3)throw e_3.error;}}return res;}function containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.some(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r)&&getOutlet$1(r)!==PRIMARY_OUTLET;});}function containsEmptyPathMatches(segmentGroup,slicedSegments,routes){return routes.some(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r);});}function emptyPathMatch(segmentGroup,slicedSegments,r){if((segmentGroup.hasChildren()||slicedSegments.length>0)&&r.pathMatch==='full'){return false;}return r.path===''&&r.redirectTo===undefined;}function getOutlet$1(route){return route.outlet||PRIMARY_OUTLET;}function getData(route){return route.data||{};}function getResolve(route){return route.resolve||{};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function recognize$1(rootComponentType,config,serializer,paramsInheritanceStrategy,relativeLinkResolution){return function(source){return source.pipe(operators.mergeMap(function(t){return recognize(rootComponentType,config,t.urlAfterRedirects,serializer(t.urlAfterRedirects),paramsInheritanceStrategy,relativeLinkResolution).pipe(operators.map(function(targetSnapshot){return _assign7(_assign7({},t),{targetSnapshot:targetSnapshot});}));}));};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function resolveData(paramsInheritanceStrategy,moduleInjector){return function(source){return source.pipe(operators.mergeMap(function(t){var targetSnapshot=t.targetSnapshot,canActivateChecks=t.guards.canActivateChecks;if(!canActivateChecks.length){return rxjs.of(t);}return rxjs.from(canActivateChecks).pipe(operators.concatMap(function(check){return runResolve(check.route,targetSnapshot,paramsInheritanceStrategy,moduleInjector);}),operators.reduce(function(_,__){return _;}),operators.map(function(_){return t;}));}));};}function runResolve(futureARS,futureRSS,paramsInheritanceStrategy,moduleInjector){var resolve=futureARS._resolve;return resolveNode(resolve,futureARS,futureRSS,moduleInjector).pipe(operators.map(function(resolvedData){futureARS._resolvedData=resolvedData;futureARS.data=_assign7(_assign7({},futureARS.data),inheritedParamsDataResolve(futureARS,paramsInheritanceStrategy).resolve);return null;}));}function resolveNode(resolve,futureARS,futureRSS,moduleInjector){var keys=Object.keys(resolve);if(keys.length===0){return rxjs.of({});}if(keys.length===1){var key_1=keys[0];return getResolver(resolve[key_1],futureARS,futureRSS,moduleInjector).pipe(operators.map(function(value){var _a;return _a={},_a[key_1]=value,_a;}));}var data={};var runningResolvers$=rxjs.from(keys).pipe(operators.mergeMap(function(key){return getResolver(resolve[key],futureARS,futureRSS,moduleInjector).pipe(operators.map(function(value){data[key]=value;return value;}));}));return runningResolvers$.pipe(operators.last(),operators.map(function(){return data;}));}function getResolver(injectionToken,futureARS,futureRSS,moduleInjector){var resolver=getToken(injectionToken,futureARS,moduleInjector);return resolver.resolve?wrapIntoObservable(resolver.resolve(futureARS,futureRSS)):wrapIntoObservable(resolver(futureARS,futureRSS));}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Perform a side effect through a switchMap for every emission on the source Observable,
     * but return an Observable that is identical to the source. It's essentially the same as
     * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,
     * it will wait before continuing with the original value.
     */function switchTap(next){return function(source){return source.pipe(operators.switchMap(function(v){var nextResult=next(v);if(nextResult){return rxjs.from(nextResult).pipe(operators.map(function(){return v;}));}return rxjs.from([v]);}));};}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Provides a way to customize when activated routes get reused.
     *
     * @publicApi
     */var RouteReuseStrategy=/** @class */function(){function RouteReuseStrategy(){}return RouteReuseStrategy;}();/**
     * Does not detach any subtrees. Reuses routes as long as their route config is the same.
     */var DefaultRouteReuseStrategy=/** @class */function(){function DefaultRouteReuseStrategy(){}DefaultRouteReuseStrategy.prototype.shouldDetach=function(route){return false;};DefaultRouteReuseStrategy.prototype.store=function(route,detachedTree){};DefaultRouteReuseStrategy.prototype.shouldAttach=function(route){return false;};DefaultRouteReuseStrategy.prototype.retrieve=function(route){return null;};DefaultRouteReuseStrategy.prototype.shouldReuseRoute=function(future,curr){return future.routeConfig===curr.routeConfig;};return DefaultRouteReuseStrategy;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The [DI token](guide/glossary/#di-token) for a router configuration.
     * @see `ROUTES`
     * @publicApi
     */var ROUTES=new core.InjectionToken('ROUTES');var RouterConfigLoader=/** @class */function(){function RouterConfigLoader(loader,compiler,onLoadStartListener,onLoadEndListener){this.loader=loader;this.compiler=compiler;this.onLoadStartListener=onLoadStartListener;this.onLoadEndListener=onLoadEndListener;}RouterConfigLoader.prototype.load=function(parentInjector,route){var _this=this;if(this.onLoadStartListener){this.onLoadStartListener(route);}var moduleFactory$=this.loadModuleFactory(route.loadChildren);return moduleFactory$.pipe(operators.map(function(factory){if(_this.onLoadEndListener){_this.onLoadEndListener(route);}var module=factory.create(parentInjector);return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig),module);}));};RouterConfigLoader.prototype.loadModuleFactory=function(loadChildren){var _this=this;if(typeof loadChildren==='string'){return rxjs.from(this.loader.load(loadChildren));}else{return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function(t){if(t instanceof core.NgModuleFactory){return rxjs.of(t);}else{return rxjs.from(_this.compiler.compileModuleAsync(t));}}));}};return RouterConfigLoader;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Provides a way to migrate AngularJS applications to Angular.
     *
     * @publicApi
     */var UrlHandlingStrategy=/** @class */function(){function UrlHandlingStrategy(){}return UrlHandlingStrategy;}();/**
     * @publicApi
     */var DefaultUrlHandlingStrategy=/** @class */function(){function DefaultUrlHandlingStrategy(){}DefaultUrlHandlingStrategy.prototype.shouldProcessUrl=function(url){return true;};DefaultUrlHandlingStrategy.prototype.extract=function(url){return url;};DefaultUrlHandlingStrategy.prototype.merge=function(newUrlPart,wholeUrl){return newUrlPart;};return DefaultUrlHandlingStrategy;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function defaultErrorHandler(error){throw error;}function defaultMalformedUriErrorHandler(error,urlSerializer,url){return urlSerializer.parse('/');}/**
     * @internal
     */function defaultRouterHook(snapshot,runExtras){return rxjs.of(null);}/**
     * @description
     *
     * A service that provides navigation and URL manipulation capabilities.
     *
     * @see `Route`.
     * @see [Routing and Navigation Guide](guide/router).
     *
     * @ngModule RouterModule
     *
     * @publicApi
     */var Router=/** @class */function(){/**
         * Creates the router service.
         */ // TODO: vsavkin make internal after the final is out.
function Router(rootComponentType,urlSerializer,rootContexts,location,injector,loader,compiler,config){var _this=this;this.rootComponentType=rootComponentType;this.urlSerializer=urlSerializer;this.rootContexts=rootContexts;this.location=location;this.config=config;this.lastSuccessfulNavigation=null;this.currentNavigation=null;this.navigationId=0;this.isNgZoneEnabled=false;/**
             * An event stream for routing events in this NgModule.
             */this.events=new rxjs.Subject();/**
             * A handler for navigation errors in this NgModule.
             */this.errorHandler=defaultErrorHandler;/**
             * A handler for errors thrown by `Router.parseUrl(url)`
             * when `url` contains an invalid character.
             * The most common case is a `%` sign
             * that's not encoded and is not part of a percent encoded sequence.
             */this.malformedUriErrorHandler=defaultMalformedUriErrorHandler;/**
             * True if at least one navigation event has occurred,
             * false otherwise.
             */this.navigated=false;this.lastSuccessfulId=-1;/**
             * Hooks that enable you to pause navigation,
             * either before or after the preactivation phase.
             * Used by `RouterModule`.
             *
             * @internal
             */this.hooks={beforePreactivation:defaultRouterHook,afterPreactivation:defaultRouterHook};/**
             * A strategy for extracting and merging URLs.
             * Used for AngularJS to Angular migrations.
             */this.urlHandlingStrategy=new DefaultUrlHandlingStrategy();/**
             * A strategy for re-using routes.
             */this.routeReuseStrategy=new DefaultRouteReuseStrategy();/**
             * How to handle a navigation request to the current URL. One of:
             * - `'ignore'` :  The router ignores the request.
             * - `'reload'` : The router reloads the URL. Use to implement a "refresh" feature.
             */this.onSameUrlNavigation='ignore';/**
             * How to merge parameters, data, and resolved data from parent to child
             * routes. One of:
             *
             * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data
             * for path-less or component-less routes.
             * - `'always'` : Inherit parent parameters, data, and resolved data
             * for all child routes.
             */this.paramsInheritanceStrategy='emptyOnly';/**
             * Determines when the router updates the browser URL.
             * By default (`"deferred"`), updates the browser URL after navigation has finished.
             * Set to `'eager'` to update the browser URL at the beginning of navigation.
             * You can choose to update early so that, if navigation fails,
             * you can show an error message with the URL that failed.
             */this.urlUpdateStrategy='deferred';/**
             * Enables a bug fix that corrects relative link resolution in components with empty paths.
             * @see `RouterModule`
             */this.relativeLinkResolution='legacy';var onLoadStart=function onLoadStart(r){return _this.triggerEvent(new RouteConfigLoadStart(r));};var onLoadEnd=function onLoadEnd(r){return _this.triggerEvent(new RouteConfigLoadEnd(r));};this.ngModule=injector.get(core.NgModuleRef);this.console=injector.get(core.ɵConsole);var ngZone=injector.get(core.NgZone);this.isNgZoneEnabled=ngZone instanceof core.NgZone;this.resetConfig(config);this.currentUrlTree=createEmptyUrlTree();this.rawUrlTree=this.currentUrlTree;this.browserUrlTree=this.currentUrlTree;this.configLoader=new RouterConfigLoader(loader,compiler,onLoadStart,onLoadEnd);this.routerState=createEmptyState(this.currentUrlTree,this.rootComponentType);this.transitions=new rxjs.BehaviorSubject({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(true),source:'imperative',restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null});this.navigations=this.setupNavigations(this.transitions);this.processNavigations();}Router.prototype.setupNavigations=function(transitions){var _this=this;var eventsSubject=this.events;return transitions.pipe(operators.filter(function(t){return t.id!==0;}),// Extract URL
operators.map(function(t){return _assign7(_assign7({},t),{extractedUrl:_this.urlHandlingStrategy.extract(t.rawUrl)});}),// Using switchMap so we cancel executing navigations when a new one comes in
operators.switchMap(function(t){var completed=false;var errored=false;return rxjs.of(t).pipe(// Store the Navigation object
operators.tap(function(t){_this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:_this.lastSuccessfulNavigation?_assign7(_assign7({},_this.lastSuccessfulNavigation),{previousNavigation:null}):null};}),operators.switchMap(function(t){var urlTransition=!_this.navigated||t.extractedUrl.toString()!==_this.browserUrlTree.toString();var processCurrentUrl=(_this.onSameUrlNavigation==='reload'?true:urlTransition)&&_this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);if(processCurrentUrl){return rxjs.of(t).pipe(// Fire NavigationStart event
operators.switchMap(function(t){var transition=_this.transitions.getValue();eventsSubject.next(new NavigationStart(t.id,_this.serializeUrl(t.extractedUrl),t.source,t.restoredState));if(transition!==_this.transitions.getValue()){return rxjs.EMPTY;}return[t];}),// This delay is required to match old behavior that forced navigation
// to always be async
operators.switchMap(function(t){return Promise.resolve(t);}),// ApplyRedirects
applyRedirects$1(_this.ngModule.injector,_this.configLoader,_this.urlSerializer,_this.config),// Update the currentNavigation
operators.tap(function(t){_this.currentNavigation=_assign7(_assign7({},_this.currentNavigation),{finalUrl:t.urlAfterRedirects});}),// Recognize
recognize$1(_this.rootComponentType,_this.config,function(url){return _this.serializeUrl(url);},_this.paramsInheritanceStrategy,_this.relativeLinkResolution),// Update URL if in `eager` update mode
operators.tap(function(t){if(_this.urlUpdateStrategy==='eager'){if(!t.extras.skipLocationChange){_this.setBrowserUrl(t.urlAfterRedirects,!!t.extras.replaceUrl,t.id,t.extras.state);}_this.browserUrlTree=t.urlAfterRedirects;}}),// Fire RoutesRecognized
operators.tap(function(t){var routesRecognized=new RoutesRecognized(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);eventsSubject.next(routesRecognized);}));}else{var processPreviousUrl=urlTransition&&_this.rawUrlTree&&_this.urlHandlingStrategy.shouldProcessUrl(_this.rawUrlTree);/* When the current URL shouldn't be processed, but the previous one was,
                         * we handle this "error condition" by navigating to the previously
                         * successful URL, but leaving the URL intact.*/if(processPreviousUrl){var id=t.id,extractedUrl=t.extractedUrl,source=t.source,restoredState=t.restoredState,extras=t.extras;var navStart=new NavigationStart(id,_this.serializeUrl(extractedUrl),source,restoredState);eventsSubject.next(navStart);var targetSnapshot=createEmptyState(extractedUrl,_this.rootComponentType).snapshot;return rxjs.of(_assign7(_assign7({},t),{targetSnapshot:targetSnapshot,urlAfterRedirects:extractedUrl,extras:_assign7(_assign7({},extras),{skipLocationChange:false,replaceUrl:false})}));}else{/* When neither the current or previous URL can be processed, do nothing
                             * other than update router's internal reference to the current "settled"
                             * URL. This way the next navigation will be coming from the current URL
                             * in the browser.
                             */_this.rawUrlTree=t.rawUrl;_this.browserUrlTree=t.urlAfterRedirects;t.resolve(null);return rxjs.EMPTY;}}}),// Before Preactivation
switchTap(function(t){var targetSnapshot=t.targetSnapshot,navigationId=t.id,appliedUrlTree=t.extractedUrl,rawUrlTree=t.rawUrl,_a=t.extras,skipLocationChange=_a.skipLocationChange,replaceUrl=_a.replaceUrl;return _this.hooks.beforePreactivation(targetSnapshot,{navigationId:navigationId,appliedUrlTree:appliedUrlTree,rawUrlTree:rawUrlTree,skipLocationChange:!!skipLocationChange,replaceUrl:!!replaceUrl});}),// --- GUARDS ---
operators.tap(function(t){var guardsStart=new GuardsCheckStart(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);_this.triggerEvent(guardsStart);}),operators.map(function(t){return _assign7(_assign7({},t),{guards:getAllRouteGuards(t.targetSnapshot,t.currentSnapshot,_this.rootContexts)});}),checkGuards(_this.ngModule.injector,function(evt){return _this.triggerEvent(evt);}),operators.tap(function(t){if(isUrlTree(t.guardsResult)){var error=navigationCancelingError("Redirecting to \""+_this.serializeUrl(t.guardsResult)+"\"");error.url=t.guardsResult;throw error;}}),operators.tap(function(t){var guardsEnd=new GuardsCheckEnd(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);_this.triggerEvent(guardsEnd);}),operators.filter(function(t){if(!t.guardsResult){_this.resetUrlToCurrentUrlTree();var navCancel=new NavigationCancel(t.id,_this.serializeUrl(t.extractedUrl),'');eventsSubject.next(navCancel);t.resolve(false);return false;}return true;}),// --- RESOLVE ---
switchTap(function(t){if(t.guards.canActivateChecks.length){return rxjs.of(t).pipe(operators.tap(function(t){var resolveStart=new ResolveStart(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);_this.triggerEvent(resolveStart);}),resolveData(_this.paramsInheritanceStrategy,_this.ngModule.injector),//
operators.tap(function(t){var resolveEnd=new ResolveEnd(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);_this.triggerEvent(resolveEnd);}));}return undefined;}),// --- AFTER PREACTIVATION ---
switchTap(function(t){var targetSnapshot=t.targetSnapshot,navigationId=t.id,appliedUrlTree=t.extractedUrl,rawUrlTree=t.rawUrl,_a=t.extras,skipLocationChange=_a.skipLocationChange,replaceUrl=_a.replaceUrl;return _this.hooks.afterPreactivation(targetSnapshot,{navigationId:navigationId,appliedUrlTree:appliedUrlTree,rawUrlTree:rawUrlTree,skipLocationChange:!!skipLocationChange,replaceUrl:!!replaceUrl});}),operators.map(function(t){var targetRouterState=createRouterState(_this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return _assign7(_assign7({},t),{targetRouterState:targetRouterState});}),/* Once here, we are about to activate syncronously. The assumption is this
                   will succeed, and user code may read from the Router service. Therefore
                   before activation, we need to update router properties storing the current
                   URL and the RouterState, as well as updated the browser URL. All this should
                   happen *before* activating. */operators.tap(function(t){_this.currentUrlTree=t.urlAfterRedirects;_this.rawUrlTree=_this.urlHandlingStrategy.merge(_this.currentUrlTree,t.rawUrl);_this.routerState=t.targetRouterState;if(_this.urlUpdateStrategy==='deferred'){if(!t.extras.skipLocationChange){_this.setBrowserUrl(_this.rawUrlTree,!!t.extras.replaceUrl,t.id,t.extras.state);}_this.browserUrlTree=t.urlAfterRedirects;}}),activateRoutes(_this.rootContexts,_this.routeReuseStrategy,function(evt){return _this.triggerEvent(evt);}),operators.tap({next:function next(){completed=true;},complete:function complete(){completed=true;}}),operators.finalize(function(){/* When the navigation stream finishes either through error or success, we
                     * set the `completed` or `errored` flag. However, there are some situations
                     * where we could get here without either of those being set. For instance, a
                     * redirect during NavigationStart. Therefore, this is a catch-all to make
                     * sure the NavigationCancel
                     * event is fired when a navigation gets cancelled but not caught by other
                     * means. */if(!completed&&!errored){// Must reset to current URL tree here to ensure history.state is set. On a
// fresh page load, if a new navigation comes in before a successful
// navigation completes, there will be nothing in
// history.state.navigationId. This can cause sync problems with AngularJS
// sync code which looks for a value here in order to determine whether or
// not to handle a given popstate event or to leave it to the Angualr
// router.
_this.resetUrlToCurrentUrlTree();var navCancel=new NavigationCancel(t.id,_this.serializeUrl(t.extractedUrl),"Navigation ID "+t.id+" is not equal to the current navigation id "+_this.navigationId);eventsSubject.next(navCancel);t.resolve(false);}// currentNavigation should always be reset to null here. If navigation was
// successful, lastSuccessfulTransition will have already been set. Therefore
// we can safely set currentNavigation to null here.
_this.currentNavigation=null;}),operators.catchError(function(e){errored=true;/* This error type is issued during Redirect, and is handled as a
                     * cancellation rather than an error. */if(isNavigationCancelingError(e)){var redirecting=isUrlTree(e.url);if(!redirecting){// Set property only if we're not redirecting. If we landed on a page and
// redirect to `/` route, the new navigation is going to see the `/`
// isn't a change from the default currentUrlTree and won't navigate.
// This is only applicable with initial navigation, so setting
// `navigated` only when not redirecting resolves this scenario.
_this.navigated=true;_this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);}var navCancel=new NavigationCancel(t.id,_this.serializeUrl(t.extractedUrl),e.message);eventsSubject.next(navCancel);// When redirecting, we need to delay resolving the navigation
// promise and push it to the redirect navigation
if(!redirecting){t.resolve(false);}else{// setTimeout is required so this navigation finishes with
// the return EMPTY below. If it isn't allowed to finish
// processing, there can be multiple navigations to the same
// URL.
setTimeout(function(){var mergedTree=_this.urlHandlingStrategy.merge(e.url,_this.rawUrlTree);var extras={skipLocationChange:t.extras.skipLocationChange,replaceUrl:_this.urlUpdateStrategy==='eager'};return _this.scheduleNavigation(mergedTree,'imperative',null,extras,{resolve:t.resolve,reject:t.reject,promise:t.promise});},0);}/* All other errors should reset to the router's internal URL reference to
                         * the pre-error state. */}else{_this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);var navError=new NavigationError(t.id,_this.serializeUrl(t.extractedUrl),e);eventsSubject.next(navError);try{t.resolve(_this.errorHandler(e));}catch(ee){t.reject(ee);}}return rxjs.EMPTY;}));// TODO(jasonaden): remove cast once g3 is on updated TypeScript
}));};/**
         * @internal
         * TODO: this should be removed once the constructor of the router made internal
         */Router.prototype.resetRootComponentType=function(rootComponentType){this.rootComponentType=rootComponentType;// TODO: vsavkin router 4.0 should make the root component set to null
// this will simplify the lifecycle of the router.
this.routerState.root.component=this.rootComponentType;};Router.prototype.getTransition=function(){var transition=this.transitions.value;// This value needs to be set. Other values such as extractedUrl are set on initial navigation
// but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not
// processing the previous URL.
transition.urlAfterRedirects=this.browserUrlTree;return transition;};Router.prototype.setTransition=function(t){this.transitions.next(_assign7(_assign7({},this.getTransition()),t));};/**
         * Sets up the location change listener and performs the initial navigation.
         */Router.prototype.initialNavigation=function(){this.setUpLocationChangeListener();if(this.navigationId===0){this.navigateByUrl(this.location.path(true),{replaceUrl:true});}};/**
         * Sets up the location change listener.
         */Router.prototype.setUpLocationChangeListener=function(){var _this=this;// Don't need to use Zone.wrap any more, because zone.js
// already patch onPopState, so location change callback will
// run into ngZone
if(!this.locationSubscription){this.locationSubscription=this.location.subscribe(function(change){var rawUrlTree=_this.parseUrl(change['url']);var source=change['type']==='popstate'?'popstate':'hashchange';// Navigations coming from Angular router have a navigationId state property. When this
// exists, restore the state.
var state=change.state&&change.state.navigationId?change.state:null;setTimeout(function(){_this.scheduleNavigation(rawUrlTree,source,state,{replaceUrl:true});},0);});}};Object.defineProperty(Router.prototype,"url",{/** The current URL. */get:function get(){return this.serializeUrl(this.currentUrlTree);},enumerable:true,configurable:true});/** The current Navigation object if one exists */Router.prototype.getCurrentNavigation=function(){return this.currentNavigation;};/** @internal */Router.prototype.triggerEvent=function(event){this.events.next(event);};/**
         * Resets the configuration used for navigation and generating links.
         *
         * @param config The route array for the new configuration.
         *
         * @usageNotes
         *
         * ```
         * router.resetConfig([
         *  { path: 'team/:id', component: TeamCmp, children: [
         *    { path: 'simple', component: SimpleCmp },
         *    { path: 'user/:name', component: UserCmp }
         *  ]}
         * ]);
         * ```
         */Router.prototype.resetConfig=function(config){validateConfig(config);this.config=config.map(standardizeConfig);this.navigated=false;this.lastSuccessfulId=-1;};/** @docsNotRequired */Router.prototype.ngOnDestroy=function(){this.dispose();};/** Disposes of the router. */Router.prototype.dispose=function(){if(this.locationSubscription){this.locationSubscription.unsubscribe();this.locationSubscription=null;}};/**
         * Applies an array of commands to the current URL tree and creates a new URL tree.
         *
         * When given an activated route, applies the given commands starting from the route.
         * Otherwise, applies the given command starting from the root.
         *
         * @param commands An array of commands to apply.
         * @param navigationExtras Options that control the navigation strategy. This function
         * only utilizes properties in `NavigationExtras` that would change the provided URL.
         * @returns The new URL tree.
         *
         * @usageNotes
         *
         * ```
         * // create /team/33/user/11
         * router.createUrlTree(['/team', 33, 'user', 11]);
         *
         * // create /team/33;expand=true/user/11
         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
         *
         * // you can collapse static segments like this (this works only with the first passed-in value):
         * router.createUrlTree(['/team/33/user', userId]);
         *
         * // If the first segment can contain slashes, and you do not want the router to split it,
         * // you can do the following:
         * router.createUrlTree([{segmentPath: '/one/two'}]);
         *
         * // create /team/33/(user/11//right:chat)
         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
         *
         * // remove the right secondary node
         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
         *
         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
         *
         * // navigate to /team/33/user/11/details
         * router.createUrlTree(['details'], {relativeTo: route});
         *
         * // navigate to /team/33/user/22
         * router.createUrlTree(['../22'], {relativeTo: route});
         *
         * // navigate to /team/44/user/22
         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
         * ```
         */Router.prototype.createUrlTree=function(commands,navigationExtras){if(navigationExtras===void 0){navigationExtras={};}var relativeTo=navigationExtras.relativeTo,queryParams=navigationExtras.queryParams,fragment=navigationExtras.fragment,preserveQueryParams=navigationExtras.preserveQueryParams,queryParamsHandling=navigationExtras.queryParamsHandling,preserveFragment=navigationExtras.preserveFragment;if(core.isDevMode()&&preserveQueryParams&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}var a=relativeTo||this.routerState.root;var f=preserveFragment?this.currentUrlTree.fragment:fragment;var q=null;if(queryParamsHandling){switch(queryParamsHandling){case'merge':q=_assign7(_assign7({},this.currentUrlTree.queryParams),queryParams);break;case'preserve':q=this.currentUrlTree.queryParams;break;default:q=queryParams||null;}}else{q=preserveQueryParams?this.currentUrlTree.queryParams:queryParams||null;}if(q!==null){q=this.removeEmptyProps(q);}return createUrlTree(a,this.currentUrlTree,commands,q,f);};/**
         * Navigate based on the provided URL, which must be absolute.
         *
         * @param url An absolute URL. The function does not apply any delta to the current URL.
         * @param extras An object containing properties that modify the navigation strategy.
         * The function ignores any properties in the `NavigationExtras` that would change the
         * provided URL.
         *
         * @returns A Promise that resolves to 'true' when navigation succeeds,
         * to 'false' when navigation fails, or is rejected on error.
         *
         * @usageNotes
         *
         * ```
         * router.navigateByUrl("/team/33/user/11");
         *
         * // Navigate without updating the URL
         * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
         * ```
         *
         */Router.prototype.navigateByUrl=function(url,extras){if(extras===void 0){extras={skipLocationChange:false};}if(core.isDevMode()&&this.isNgZoneEnabled&&!core.NgZone.isInAngularZone()){this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");}var urlTree=isUrlTree(url)?url:this.parseUrl(url);var mergedTree=this.urlHandlingStrategy.merge(urlTree,this.rawUrlTree);return this.scheduleNavigation(mergedTree,'imperative',null,extras);};/**
         * Navigate based on the provided array of commands and a starting point.
         * If no starting route is provided, the navigation is absolute.
         *
         * Returns a promise that:
         * - resolves to 'true' when navigation succeeds,
         * - resolves to 'false' when navigation fails,
         * - is rejected when an error happens.
         *
         * @usageNotes
         *
         * ```
         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
         *
         * // Navigate without updating the URL
         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
         * ```
         *
         * The first parameter of `navigate()` is a delta to be applied to the current URL
         * or the one provided in the `relativeTo` property of the second parameter (the
         * `NavigationExtras`).
         *
         * In order to affect this browser's `history.state` entry, the `state`
         * parameter can be passed. This must be an object because the router
         * will add the `navigationId` property to this object before creating
         * the new history item.
         */Router.prototype.navigate=function(commands,extras){if(extras===void 0){extras={skipLocationChange:false};}validateCommands(commands);return this.navigateByUrl(this.createUrlTree(commands,extras),extras);};/** Serializes a `UrlTree` into a string */Router.prototype.serializeUrl=function(url){return this.urlSerializer.serialize(url);};/** Parses a string into a `UrlTree` */Router.prototype.parseUrl=function(url){var urlTree;try{urlTree=this.urlSerializer.parse(url);}catch(e){urlTree=this.malformedUriErrorHandler(e,this.urlSerializer,url);}return urlTree;};/** Returns whether the url is activated */Router.prototype.isActive=function(url,exact){if(isUrlTree(url)){return containsTree(this.currentUrlTree,url,exact);}var urlTree=this.parseUrl(url);return containsTree(this.currentUrlTree,urlTree,exact);};Router.prototype.removeEmptyProps=function(params){return Object.keys(params).reduce(function(result,key){var value=params[key];if(value!==null&&value!==undefined){result[key]=value;}return result;},{});};Router.prototype.processNavigations=function(){var _this=this;this.navigations.subscribe(function(t){_this.navigated=true;_this.lastSuccessfulId=t.id;_this.events.next(new NavigationEnd(t.id,_this.serializeUrl(t.extractedUrl),_this.serializeUrl(_this.currentUrlTree)));_this.lastSuccessfulNavigation=_this.currentNavigation;_this.currentNavigation=null;t.resolve(true);},function(e){_this.console.warn("Unhandled Navigation Error: ");});};Router.prototype.scheduleNavigation=function(rawUrl,source,restoredState,extras,priorPromise){var lastNavigation=this.getTransition();// If the user triggers a navigation imperatively (e.g., by using navigateByUrl),
// and that navigation results in 'replaceState' that leads to the same URL,
// we should skip those.
if(lastNavigation&&source!=='imperative'&&lastNavigation.source==='imperative'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return Promise.resolve(true);// return value is not used
}// Because of a bug in IE and Edge, the location class fires two events (popstate and
// hashchange) every single time. The second one should be ignored. Otherwise, the URL will
// flicker. Handles the case when a popstate was emitted first.
if(lastNavigation&&source=='hashchange'&&lastNavigation.source==='popstate'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return Promise.resolve(true);// return value is not used
}// Because of a bug in IE and Edge, the location class fires two events (popstate and
// hashchange) every single time. The second one should be ignored. Otherwise, the URL will
// flicker. Handles the case when a hashchange was emitted first.
if(lastNavigation&&source=='popstate'&&lastNavigation.source==='hashchange'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return Promise.resolve(true);// return value is not used
}var resolve;var reject;var promise;if(priorPromise){resolve=priorPromise.resolve;reject=priorPromise.reject;promise=priorPromise.promise;}else{promise=new Promise(function(res,rej){resolve=res;reject=rej;});}var id=++this.navigationId;this.setTransition({id:id,source:source,restoredState:restoredState,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:rawUrl,extras:extras,resolve:resolve,reject:reject,promise:promise,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState});// Make sure that the error is propagated even though `processNavigations` catch
// handler does not rethrow
return promise["catch"](function(e){return Promise.reject(e);});};Router.prototype.setBrowserUrl=function(url,replaceUrl,id,state){var path=this.urlSerializer.serialize(url);state=state||{};if(this.location.isCurrentPathEqualTo(path)||replaceUrl){// TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.
this.location.replaceState(path,'',_assign7(_assign7({},state),{navigationId:id}));}else{this.location.go(path,'',_assign7(_assign7({},state),{navigationId:id}));}};Router.prototype.resetStateAndUrl=function(storedState,storedUrl,rawUrl){this.routerState=storedState;this.currentUrlTree=storedUrl;this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,rawUrl);this.resetUrlToCurrentUrlTree();};Router.prototype.resetUrlToCurrentUrlTree=function(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),'',{navigationId:this.lastSuccessfulId});};return Router;}();function validateCommands(commands){for(var i=0;i<commands.length;i++){var cmd=commands[i];if(cmd==null){throw new Error("The requested path contains "+cmd+" segment at index "+i);}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Lets you link to specific routes in your app.
     *
     * Consider the following route configuration:
     * `[{ path: 'user/:name', component: UserCmp }]`.
     * When linking to this `user/:name` route, you use the `RouterLink` directive.
     *
     * If the link is static, you can use the directive as follows:
     * `<a routerLink="/user/bob">link to user component</a>`
     *
     * If you use dynamic values to generate the link, you can pass an array of path
     * segments, followed by the params for each segment.
     *
     * For instance `['/team', teamId, 'user', userName, {details: true}]`
     * means that we want to generate a link to `/team/11/user/bob;details=true`.
     *
     * Multiple static segments can be merged into one
     * (e.g., `['/team/11/user', userName, {details: true}]`).
     *
     * The first segment name can be prepended with `/`, `./`, or `../`:
     * * If the first segment begins with `/`, the router will look up the route from the root of the
     *   app.
     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will
     *   instead look in the children of the current activated route.
     * * And if the first segment begins with `../`, the router will go up one level.
     *
     * You can set query params and fragment as follows:
     *
     * ```
     * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
     *   link to user component
     * </a>
     * ```
     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.
     *
     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the
     * directive to preserve the current query params and fragment:
     *
     * ```
     * <a [routerLink]="['/user/bob']" preserveQueryParams preserveFragment>
     *   link to user component
     * </a>
     * ```
     *
     * You can tell the directive how to handle queryParams. Available options are:
     *  - `'merge'`: merge the queryParams into the current queryParams
     *  - `'preserve'`: preserve the current queryParams
     *  - default/`''`: use the queryParams only
     *
     * Same options for {@link NavigationExtras#queryParamsHandling
     * NavigationExtras#queryParamsHandling}.
     *
     * ```
     * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" queryParamsHandling="merge">
     *   link to user component
     * </a>
     * ```
     *
     * You can provide a `state` value to be persisted to the browser's History.state
     * property (See https://developer.mozilla.org/en-US/docs/Web/API/History#Properties). It's
     * used as follows:
     *
     * ```
     * <a [routerLink]="['/user/bob']" [state]="{tracingId: 123}">
     *   link to user component
     * </a>
     * ```
     *
     * And later the value can be read from the router through `router.getCurrentNavigation`.
     * For example, to capture the `tracingId` above during the `NavigationStart` event:
     *
     * ```
     * // Get NavigationStart events
     * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {
     *   const navigation = router.getCurrentNavigation();
     *   tracingService.trace({id: navigation.extras.state.tracingId});
     * });
     * ```
     *
     * The router link directive always treats the provided input as a delta to the current url.
     *
     * For instance, if the current url is `/user/(box//aux:team)`.
     *
     * Then the following link `<a [routerLink]="['/user/jim']">Jim</a>` will generate the link
     * `/user/(jim//aux:team)`.
     *
     * See {@link Router#createUrlTree createUrlTree} for more information.
     *
     * @ngModule RouterModule
     *
     * @publicApi
     */var RouterLink=/** @class */function(){function RouterLink(router,route,tabIndex,renderer,el){this.router=router;this.route=route;this.commands=[];if(tabIndex==null){renderer.setAttribute(el.nativeElement,'tabindex','0');}}Object.defineProperty(RouterLink.prototype,"routerLink",{/**
             * @param commands An array of commands to pass to {@link Router#createUrlTree
             *     Router#createUrlTree}.
             *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
             *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`
             *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`
             * @see {@link Router#createUrlTree Router#createUrlTree}
             */set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}},enumerable:true,configurable:true});Object.defineProperty(RouterLink.prototype,"preserveQueryParams",{/**
             * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.
             */set:function set(value){if(core.isDevMode()&&console&&console.warn){console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');}this.preserve=value;},enumerable:true,configurable:true});RouterLink.prototype.onClick=function(){var extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl),state:this.state};this.router.navigateByUrl(this.urlTree,extras);return true;};Object.defineProperty(RouterLink.prototype,"urlTree",{get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});},enumerable:true,configurable:true});__decorate([core.Input(),__metadata("design:type",Object)],RouterLink.prototype,"queryParams",void 0);__decorate([core.Input(),__metadata("design:type",String)],RouterLink.prototype,"fragment",void 0);__decorate([core.Input(),__metadata("design:type",String)],RouterLink.prototype,"queryParamsHandling",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLink.prototype,"preserveFragment",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLink.prototype,"skipLocationChange",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLink.prototype,"replaceUrl",void 0);__decorate([core.Input(),__metadata("design:type",Object)],RouterLink.prototype,"state",void 0);__decorate([core.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],RouterLink.prototype,"routerLink",null);__decorate([core.Input(),__metadata("design:type",Boolean),__metadata("design:paramtypes",[Boolean])],RouterLink.prototype,"preserveQueryParams",null);__decorate([core.HostListener('click'),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Boolean)],RouterLink.prototype,"onClick",null);RouterLink=__decorate([core.Directive({selector:':not(a):not(area)[routerLink]'}),__param(2,core.Attribute('tabindex')),__metadata("design:paramtypes",[Router,ActivatedRoute,String,core.Renderer2,core.ElementRef])],RouterLink);return RouterLink;}();/**
     * @description
     *
     * Lets you link to specific routes in your app.
     *
     * See `RouterLink` for more information.
     *
     * @ngModule RouterModule
     *
     * @publicApi
     */var RouterLinkWithHref=/** @class */function(){function RouterLinkWithHref(router,route,locationStrategy){var _this=this;this.router=router;this.route=route;this.locationStrategy=locationStrategy;this.commands=[];this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this.updateTargetUrlAndHref();}});}Object.defineProperty(RouterLinkWithHref.prototype,"routerLink",{/**
             * @param commands An array of commands to pass to {@link Router#createUrlTree
             *     Router#createUrlTree}.
             *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.
             *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`
             *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`
             * @see {@link Router#createUrlTree Router#createUrlTree}
             */set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}},enumerable:true,configurable:true});Object.defineProperty(RouterLinkWithHref.prototype,"preserveQueryParams",{/**
             * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.
             */set:function set(value){if(core.isDevMode()&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}this.preserve=value;},enumerable:true,configurable:true});RouterLinkWithHref.prototype.ngOnChanges=function(changes){this.updateTargetUrlAndHref();};RouterLinkWithHref.prototype.ngOnDestroy=function(){this.subscription.unsubscribe();};RouterLinkWithHref.prototype.onClick=function(button,ctrlKey,metaKey,shiftKey){if(button!==0||ctrlKey||metaKey||shiftKey){return true;}if(typeof this.target==='string'&&this.target!='_self'){return true;}var extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl),state:this.state};this.router.navigateByUrl(this.urlTree,extras);return false;};RouterLinkWithHref.prototype.updateTargetUrlAndHref=function(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));};Object.defineProperty(RouterLinkWithHref.prototype,"urlTree",{get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});},enumerable:true,configurable:true});__decorate([core.HostBinding('attr.target'),core.Input(),__metadata("design:type",String)],RouterLinkWithHref.prototype,"target",void 0);__decorate([core.Input(),__metadata("design:type",Object)],RouterLinkWithHref.prototype,"queryParams",void 0);__decorate([core.Input(),__metadata("design:type",String)],RouterLinkWithHref.prototype,"fragment",void 0);__decorate([core.Input(),__metadata("design:type",String)],RouterLinkWithHref.prototype,"queryParamsHandling",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLinkWithHref.prototype,"preserveFragment",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLinkWithHref.prototype,"skipLocationChange",void 0);__decorate([core.Input(),__metadata("design:type",Boolean)],RouterLinkWithHref.prototype,"replaceUrl",void 0);__decorate([core.Input(),__metadata("design:type",Object)],RouterLinkWithHref.prototype,"state",void 0);__decorate([core.HostBinding(),__metadata("design:type",String)],RouterLinkWithHref.prototype,"href",void 0);__decorate([core.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],RouterLinkWithHref.prototype,"routerLink",null);__decorate([core.Input(),__metadata("design:type",Boolean),__metadata("design:paramtypes",[Boolean])],RouterLinkWithHref.prototype,"preserveQueryParams",null);__decorate([core.HostListener('click',['$event.button','$event.ctrlKey','$event.metaKey','$event.shiftKey']),__metadata("design:type",Function),__metadata("design:paramtypes",[Number,Boolean,Boolean,Boolean]),__metadata("design:returntype",Boolean)],RouterLinkWithHref.prototype,"onClick",null);RouterLinkWithHref=__decorate([core.Directive({selector:'a[routerLink],area[routerLink]'}),__metadata("design:paramtypes",[Router,ActivatedRoute,common.LocationStrategy])],RouterLinkWithHref);return RouterLinkWithHref;}();function attrBoolValue(s){return s===''||!!s;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     *
     * @description
     *
     * Lets you add a CSS class to an element when the link's route becomes active.
     *
     * This directive lets you add a CSS class to an element when the link's route
     * becomes active.
     *
     * Consider the following example:
     *
     * ```
     * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
     * ```
     *
     * When the url is either '/user' or '/user/bob', the active-link class will
     * be added to the `a` tag. If the url changes, the class will be removed.
     *
     * You can set more than one class, as follows:
     *
     * ```
     * <a routerLink="/user/bob" routerLinkActive="class1 class2">Bob</a>
     * <a routerLink="/user/bob" [routerLinkActive]="['class1', 'class2']">Bob</a>
     * ```
     *
     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
     * only when the url matches the link exactly.
     *
     * ```
     * <a routerLink="/user/bob" routerLinkActive="active-link" [routerLinkActiveOptions]="{exact:
     * true}">Bob</a>
     * ```
     *
     * You can assign the RouterLinkActive instance to a template variable and directly check
     * the `isActive` status.
     * ```
     * <a routerLink="/user/bob" routerLinkActive #rla="routerLinkActive">
     *   Bob {{ rla.isActive ? '(already open)' : ''}}
     * </a>
     * ```
     *
     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
     *
     * ```
     * <div routerLinkActive="active-link" [routerLinkActiveOptions]="{exact: true}">
     *   <a routerLink="/user/jim">Jim</a>
     *   <a routerLink="/user/bob">Bob</a>
     * </div>
     * ```
     *
     * This will set the active-link class on the div tag if the url is either '/user/jim' or
     * '/user/bob'.
     *
     * @ngModule RouterModule
     *
     * @publicApi
     */var RouterLinkActive=/** @class */function(){function RouterLinkActive(router,element,renderer,link,linkWithHref){var _this=this;this.router=router;this.element=element;this.renderer=renderer;this.link=link;this.linkWithHref=linkWithHref;this.classes=[];this.isActive=false;this.routerLinkActiveOptions={exact:false};this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this.update();}});}RouterLinkActive.prototype.ngAfterContentInit=function(){var _this=this;this.links.changes.subscribe(function(_){return _this.update();});this.linksWithHrefs.changes.subscribe(function(_){return _this.update();});this.update();};Object.defineProperty(RouterLinkActive.prototype,"routerLinkActive",{set:function set(data){var classes=Array.isArray(data)?data:data.split(' ');this.classes=classes.filter(function(c){return!!c;});},enumerable:true,configurable:true});RouterLinkActive.prototype.ngOnChanges=function(changes){this.update();};RouterLinkActive.prototype.ngOnDestroy=function(){this.subscription.unsubscribe();};RouterLinkActive.prototype.update=function(){var _this=this;if(!this.links||!this.linksWithHrefs||!this.router.navigated)return;Promise.resolve().then(function(){var hasActiveLinks=_this.hasActiveLinks();if(_this.isActive!==hasActiveLinks){_this.isActive=hasActiveLinks;_this.classes.forEach(function(c){if(hasActiveLinks){_this.renderer.addClass(_this.element.nativeElement,c);}else{_this.renderer.removeClass(_this.element.nativeElement,c);}});}});};RouterLinkActive.prototype.isLinkActive=function(router){var _this=this;return function(link){return router.isActive(link.urlTree,_this.routerLinkActiveOptions.exact);};};RouterLinkActive.prototype.hasActiveLinks=function(){var isActiveCheckFn=this.isLinkActive(this.router);return this.link&&isActiveCheckFn(this.link)||this.linkWithHref&&isActiveCheckFn(this.linkWithHref)||this.links.some(isActiveCheckFn)||this.linksWithHrefs.some(isActiveCheckFn);};__decorate([core.ContentChildren(RouterLink,{descendants:true}),__metadata("design:type",core.QueryList)],RouterLinkActive.prototype,"links",void 0);__decorate([core.ContentChildren(RouterLinkWithHref,{descendants:true}),__metadata("design:type",core.QueryList)],RouterLinkActive.prototype,"linksWithHrefs",void 0);__decorate([core.Input(),__metadata("design:type",Object)],RouterLinkActive.prototype,"routerLinkActiveOptions",void 0);__decorate([core.Input(),__metadata("design:type",Object),__metadata("design:paramtypes",[Object])],RouterLinkActive.prototype,"routerLinkActive",null);RouterLinkActive=__decorate([core.Directive({selector:'[routerLinkActive]',exportAs:'routerLinkActive'}),__param(3,core.Optional()),__param(4,core.Optional()),__metadata("design:paramtypes",[Router,core.ElementRef,core.Renderer2,RouterLink,RouterLinkWithHref])],RouterLinkActive);return RouterLinkActive;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Store contextual information about a `RouterOutlet`
     *
     * @publicApi
     */var OutletContext=/** @class */function(){function OutletContext(){this.outlet=null;this.route=null;this.resolver=null;this.children=new ChildrenOutletContexts();this.attachRef=null;}return OutletContext;}();/**
     * Store contextual information about the children (= nested) `RouterOutlet`
     *
     * @publicApi
     */var ChildrenOutletContexts=/** @class */function(){function ChildrenOutletContexts(){// contexts for child outlets, by name.
this.contexts=new Map();}/** Called when a `RouterOutlet` directive is instantiated */ChildrenOutletContexts.prototype.onChildOutletCreated=function(childName,outlet){var context=this.getOrCreateContext(childName);context.outlet=outlet;this.contexts.set(childName,context);};/**
         * Called when a `RouterOutlet` directive is destroyed.
         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be
         * re-created later.
         */ChildrenOutletContexts.prototype.onChildOutletDestroyed=function(childName){var context=this.getContext(childName);if(context){context.outlet=null;}};/**
         * Called when the corresponding route is deactivated during navigation.
         * Because the component get destroyed, all children outlet are destroyed.
         */ChildrenOutletContexts.prototype.onOutletDeactivated=function(){var contexts=this.contexts;this.contexts=new Map();return contexts;};ChildrenOutletContexts.prototype.onOutletReAttached=function(contexts){this.contexts=contexts;};ChildrenOutletContexts.prototype.getOrCreateContext=function(childName){var context=this.getContext(childName);if(!context){context=new OutletContext();this.contexts.set(childName,context);}return context;};ChildrenOutletContexts.prototype.getContext=function(childName){return this.contexts.get(childName)||null;};return ChildrenOutletContexts;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Acts as a placeholder that Angular dynamically fills based on the current router state.
     *
     * Each outlet can have a unique name, determined by the optional `name` attribute.
     * The name cannot be set or changed dynamically. If not set, default value is "primary".
     *
     * ```
     * <router-outlet></router-outlet>
     * <router-outlet name='left'></router-outlet>
     * <router-outlet name='right'></router-outlet>
     * ```
     *
     * A router outlet emits an activate event when a new component is instantiated,
     * and a deactivate event when a component is destroyed.
     *
     * ```
     * <router-outlet
     *   (activate)='onActivate($event)'
     *   (deactivate)='onDeactivate($event)'></router-outlet>
     * ```
     * @ngModule RouterModule
     *
     * @publicApi
     */var RouterOutlet=/** @class */function(){function RouterOutlet(parentContexts,location,resolver,name,changeDetector){this.parentContexts=parentContexts;this.location=location;this.resolver=resolver;this.changeDetector=changeDetector;this.activated=null;this._activatedRoute=null;this.activateEvents=new core.EventEmitter();this.deactivateEvents=new core.EventEmitter();this.name=name||PRIMARY_OUTLET;parentContexts.onChildOutletCreated(this.name,this);}RouterOutlet.prototype.ngOnDestroy=function(){this.parentContexts.onChildOutletDestroyed(this.name);};RouterOutlet.prototype.ngOnInit=function(){if(!this.activated){// If the outlet was not instantiated at the time the route got activated we need to populate
// the outlet when it is initialized (ie inside a NgIf)
var context=this.parentContexts.getContext(this.name);if(context&&context.route){if(context.attachRef){// `attachRef` is populated when there is an existing component to mount
this.attach(context.attachRef,context.route);}else{// otherwise the component defined in the configuration is created
this.activateWith(context.route,context.resolver||null);}}}};Object.defineProperty(RouterOutlet.prototype,"isActivated",{get:function get(){return!!this.activated;},enumerable:true,configurable:true});Object.defineProperty(RouterOutlet.prototype,"component",{get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this.activated.instance;},enumerable:true,configurable:true});Object.defineProperty(RouterOutlet.prototype,"activatedRoute",{get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this._activatedRoute;},enumerable:true,configurable:true});Object.defineProperty(RouterOutlet.prototype,"activatedRouteData",{get:function get(){if(this._activatedRoute){return this._activatedRoute.snapshot.data;}return{};},enumerable:true,configurable:true});/**
         * Called when the `RouteReuseStrategy` instructs to detach the subtree
         */RouterOutlet.prototype.detach=function(){if(!this.activated)throw new Error('Outlet is not activated');this.location.detach();var cmp=this.activated;this.activated=null;this._activatedRoute=null;return cmp;};/**
         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree
         */RouterOutlet.prototype.attach=function(ref,activatedRoute){this.activated=ref;this._activatedRoute=activatedRoute;this.location.insert(ref.hostView);};RouterOutlet.prototype.deactivate=function(){if(this.activated){var c=this.component;this.activated.destroy();this.activated=null;this._activatedRoute=null;this.deactivateEvents.emit(c);}};RouterOutlet.prototype.activateWith=function(activatedRoute,resolver){if(this.isActivated){throw new Error('Cannot activate an already activated outlet');}this._activatedRoute=activatedRoute;var snapshot=activatedRoute._futureSnapshot;var component=snapshot.routeConfig.component;resolver=resolver||this.resolver;var factory=resolver.resolveComponentFactory(component);var childContexts=this.parentContexts.getOrCreateContext(this.name).children;var injector=new OutletInjector(activatedRoute,childContexts,this.location.injector);this.activated=this.location.createComponent(factory,this.location.length,injector);// Calling `markForCheck` to make sure we will run the change detection when the
// `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.
this.changeDetector.markForCheck();this.activateEvents.emit(this.activated.instance);};__decorate([core.Output('activate'),__metadata("design:type",Object)],RouterOutlet.prototype,"activateEvents",void 0);__decorate([core.Output('deactivate'),__metadata("design:type",Object)],RouterOutlet.prototype,"deactivateEvents",void 0);RouterOutlet=__decorate([core.Directive({selector:'router-outlet',exportAs:'outlet'}),__param(3,core.Attribute('name')),__metadata("design:paramtypes",[ChildrenOutletContexts,core.ViewContainerRef,core.ComponentFactoryResolver,String,core.ChangeDetectorRef])],RouterOutlet);return RouterOutlet;}();var OutletInjector=/** @class */function(){function OutletInjector(route,childContexts,parent){this.route=route;this.childContexts=childContexts;this.parent=parent;}OutletInjector.prototype.get=function(token,notFoundValue){if(token===ActivatedRoute){return this.route;}if(token===ChildrenOutletContexts){return this.childContexts;}return this.parent.get(token,notFoundValue);};return OutletInjector;}();/**
     *@license
     *Copyright Google Inc. All Rights Reserved.
     *
     *Use of this source code is governed by an MIT-style license that can be
     *found in the LICENSE file at https://angular.io/license
     */ /**
     * @description
     *
     * Provides a preloading strategy.
     *
     * @publicApi
     */var PreloadingStrategy=/** @class */function(){function PreloadingStrategy(){}return PreloadingStrategy;}();/**
     * @description
     *
     * Provides a preloading strategy that preloads all modules as quickly as possible.
     *
     * ```
     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
     * ```
     *
     * @publicApi
     */var PreloadAllModules=/** @class */function(){function PreloadAllModules(){}PreloadAllModules.prototype.preload=function(route,fn){return fn().pipe(operators.catchError(function(){return rxjs.of(null);}));};return PreloadAllModules;}();/**
     * @description
     *
     * Provides a preloading strategy that does not preload any modules.
     *
     * This strategy is enabled by default.
     *
     * @publicApi
     */var NoPreloading=/** @class */function(){function NoPreloading(){}NoPreloading.prototype.preload=function(route,fn){return rxjs.of(null);};return NoPreloading;}();/**
     * The preloader optimistically loads all router configurations to
     * make navigations into lazily-loaded sections of the application faster.
     *
     * The preloader runs in the background. When the router bootstraps, the preloader
     * starts listening to all navigation events. After every such event, the preloader
     * will check if any configurations can be loaded lazily.
     *
     * If a route is protected by `canLoad` guards, the preloaded will not load it.
     *
     * @publicApi
     */var RouterPreloader=/** @class */function(){function RouterPreloader(router,moduleLoader,compiler,injector,preloadingStrategy){this.router=router;this.injector=injector;this.preloadingStrategy=preloadingStrategy;var onStartLoad=function onStartLoad(r){return router.triggerEvent(new RouteConfigLoadStart(r));};var onEndLoad=function onEndLoad(r){return router.triggerEvent(new RouteConfigLoadEnd(r));};this.loader=new RouterConfigLoader(moduleLoader,compiler,onStartLoad,onEndLoad);}RouterPreloader.prototype.setUpPreloading=function(){var _this=this;this.subscription=this.router.events.pipe(operators.filter(function(e){return e instanceof NavigationEnd;}),operators.concatMap(function(){return _this.preload();})).subscribe(function(){});};RouterPreloader.prototype.preload=function(){var ngModule=this.injector.get(core.NgModuleRef);return this.processRoutes(ngModule,this.router.config);};// TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If
// this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This
// should be refactored.
RouterPreloader.prototype.ngOnDestroy=function(){this.subscription.unsubscribe();};RouterPreloader.prototype.processRoutes=function(ngModule,routes){var e_1,_a;var res=[];try{for(var routes_1=__values(routes),routes_1_1=routes_1.next();!routes_1_1.done;routes_1_1=routes_1.next()){var route=routes_1_1.value;// we already have the config loaded, just recurse
if(route.loadChildren&&!route.canLoad&&route._loadedConfig){var childConfig=route._loadedConfig;res.push(this.processRoutes(childConfig.module,childConfig.routes));// no config loaded, fetch the config
}else if(route.loadChildren&&!route.canLoad){res.push(this.preloadConfig(ngModule,route));// recurse into children
}else if(route.children){res.push(this.processRoutes(ngModule,route.children));}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(routes_1_1&&!routes_1_1.done&&(_a=routes_1["return"]))_a.call(routes_1);}finally{if(e_1)throw e_1.error;}}return rxjs.from(res).pipe(operators.mergeAll(),operators.map(function(_){return void 0;}));};RouterPreloader.prototype.preloadConfig=function(ngModule,route){var _this=this;return this.preloadingStrategy.preload(route,function(){var loaded$=_this.loader.load(ngModule.injector,route);return loaded$.pipe(operators.mergeMap(function(config){route._loadedConfig=config;return _this.processRoutes(config.module,config.routes);}));});};RouterPreloader=__decorate([core.Injectable(),__metadata("design:paramtypes",[Router,core.NgModuleFactoryLoader,core.Compiler,core.Injector,PreloadingStrategy])],RouterPreloader);return RouterPreloader;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var RouterScroller=/** @class */function(){function RouterScroller(router,/** @docsNotRequired */viewportScroller,options){if(options===void 0){options={};}this.router=router;this.viewportScroller=viewportScroller;this.options=options;this.lastId=0;this.lastSource='imperative';this.restoredId=0;this.store={};// Default both options to 'disabled'
options.scrollPositionRestoration=options.scrollPositionRestoration||'disabled';options.anchorScrolling=options.anchorScrolling||'disabled';}RouterScroller.prototype.init=function(){// we want to disable the automatic scrolling because having two places
// responsible for scrolling results race conditions, especially given
// that browser don't implement this behavior consistently
if(this.options.scrollPositionRestoration!=='disabled'){this.viewportScroller.setHistoryScrollRestoration('manual');}this.routerEventsSubscription=this.createScrollEvents();this.scrollEventsSubscription=this.consumeScrollEvents();};RouterScroller.prototype.createScrollEvents=function(){var _this=this;return this.router.events.subscribe(function(e){if(e instanceof NavigationStart){// store the scroll position of the current stable navigations.
_this.store[_this.lastId]=_this.viewportScroller.getScrollPosition();_this.lastSource=e.navigationTrigger;_this.restoredId=e.restoredState?e.restoredState.navigationId:0;}else if(e instanceof NavigationEnd){_this.lastId=e.id;_this.scheduleScrollEvent(e,_this.router.parseUrl(e.urlAfterRedirects).fragment);}});};RouterScroller.prototype.consumeScrollEvents=function(){var _this=this;return this.router.events.subscribe(function(e){if(!(e instanceof Scroll))return;// a popstate event. The pop state event will always ignore anchor scrolling.
if(e.position){if(_this.options.scrollPositionRestoration==='top'){_this.viewportScroller.scrollToPosition([0,0]);}else if(_this.options.scrollPositionRestoration==='enabled'){_this.viewportScroller.scrollToPosition(e.position);}// imperative navigation "forward"
}else{if(e.anchor&&_this.options.anchorScrolling==='enabled'){_this.viewportScroller.scrollToAnchor(e.anchor);}else if(_this.options.scrollPositionRestoration!=='disabled'){_this.viewportScroller.scrollToPosition([0,0]);}}});};RouterScroller.prototype.scheduleScrollEvent=function(routerEvent,anchor){this.router.triggerEvent(new Scroll(routerEvent,this.lastSource==='popstate'?this.store[this.restoredId]:null,anchor));};RouterScroller.prototype.ngOnDestroy=function(){if(this.routerEventsSubscription){this.routerEventsSubscription.unsubscribe();}if(this.scrollEventsSubscription){this.scrollEventsSubscription.unsubscribe();}};return RouterScroller;}();/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * The directives defined in the `RouterModule`.
     */var ROUTER_DIRECTIVES=[RouterOutlet,RouterLink,RouterLinkWithHref,RouterLinkActive,ɵEmptyOutletComponent];/**
     * A [DI token](guide/glossary/#di-token) for the router service.
     *
     * @publicApi
     */var ROUTER_CONFIGURATION=new core.InjectionToken('ROUTER_CONFIGURATION');/**
     * @docsNotRequired
     */var ROUTER_FORROOT_GUARD=new core.InjectionToken('ROUTER_FORROOT_GUARD');var ɵ0={enableTracing:false};var ROUTER_PROVIDERS=[common.Location,{provide:UrlSerializer,useClass:DefaultUrlSerializer},{provide:Router,useFactory:setupRouter,deps:[UrlSerializer,ChildrenOutletContexts,common.Location,core.Injector,core.NgModuleFactoryLoader,core.Compiler,ROUTES,ROUTER_CONFIGURATION,[UrlHandlingStrategy,new core.Optional()],[RouteReuseStrategy,new core.Optional()]]},ChildrenOutletContexts,{provide:ActivatedRoute,useFactory:rootRoute,deps:[Router]},{provide:core.NgModuleFactoryLoader,useClass:core.SystemJsNgModuleLoader},RouterPreloader,NoPreloading,PreloadAllModules,{provide:ROUTER_CONFIGURATION,useValue:ɵ0}];function routerNgProbeToken(){return new core.NgProbeToken('Router',Router);}/**
     * @usageNotes
     *
     * RouterModule can be imported multiple times: once per lazily-loaded bundle.
     * Since the router deals with a global shared resource--location, we cannot have
     * more than one router service active.
     *
     * That is why there are two ways to create the module: `RouterModule.forRoot` and
     * `RouterModule.forChild`.
     *
     * * `forRoot` creates a module that contains all the directives, the given routes, and the router
     *   service itself.
     * * `forChild` creates a module that contains all the directives and the given routes, but does not
     *   include the router service.
     *
     * When registered at the root, the module should be used as follows
     *
     * ```
     * @NgModule({
     *   imports: [RouterModule.forRoot(ROUTES)]
     * })
     * class MyNgModule {}
     * ```
     *
     * For submodules and lazy loaded submodules the module should be used as follows:
     *
     * ```
     * @NgModule({
     *   imports: [RouterModule.forChild(ROUTES)]
     * })
     * class MyNgModule {}
     * ```
     *
     * @description
     *
     * Adds router directives and providers.
     *
     * Managing state transitions is one of the hardest parts of building applications. This is
     * especially true on the web, where you also need to ensure that the state is reflected in the URL.
     * In addition, we often want to split applications into multiple bundles and load them on demand.
     * Doing this transparently is not trivial.
     *
     * The Angular router service solves these problems. Using the router, you can declaratively specify
     * application states, manage state transitions while taking care of the URL, and load bundles on
     * demand.
     *
     * @see [Routing and Navigation](guide/router.html) for an
     * overview of how the router service should be used.
     *
     * @publicApi
     */var RouterModule=/** @class */function(){// Note: We are injecting the Router so it gets created eagerly...
function RouterModule(guard,router){}RouterModule_1=RouterModule;/**
         * Creates and configures a module with all the router providers and directives.
         * Optionally sets up an application listener to perform an initial navigation.
         *
         * @param routes An array of `Route` objects that define the navigation paths for the application.
         * @param config An `ExtraOptions` configuration object that controls how navigation is performed.
         * @return The new router module.
         */RouterModule.forRoot=function(routes,config){return{ngModule:RouterModule_1,providers:[ROUTER_PROVIDERS,provideRoutes(routes),{provide:ROUTER_FORROOT_GUARD,useFactory:provideForRootGuard,deps:[[Router,new core.Optional(),new core.SkipSelf()]]},{provide:ROUTER_CONFIGURATION,useValue:config?config:{}},{provide:common.LocationStrategy,useFactory:provideLocationStrategy,deps:[common.PlatformLocation,[new core.Inject(common.APP_BASE_HREF),new core.Optional()],ROUTER_CONFIGURATION]},{provide:RouterScroller,useFactory:createRouterScroller,deps:[Router,common.ViewportScroller,ROUTER_CONFIGURATION]},{provide:PreloadingStrategy,useExisting:config&&config.preloadingStrategy?config.preloadingStrategy:NoPreloading},{provide:core.NgProbeToken,multi:true,useFactory:routerNgProbeToken},provideRouterInitializer()]};};/**
         * Creates a module with all the router directives and a provider registering routes.
         */RouterModule.forChild=function(routes){return{ngModule:RouterModule_1,providers:[provideRoutes(routes)]};};var RouterModule_1;RouterModule=RouterModule_1=__decorate([core.NgModule({declarations:ROUTER_DIRECTIVES,exports:ROUTER_DIRECTIVES,entryComponents:[ɵEmptyOutletComponent]}),__param(0,core.Optional()),__param(0,core.Inject(ROUTER_FORROOT_GUARD)),__param(1,core.Optional()),__metadata("design:paramtypes",[Object,Router])],RouterModule);return RouterModule;}();function createRouterScroller(router,viewportScroller,config){if(config.scrollOffset){viewportScroller.setOffset(config.scrollOffset);}return new RouterScroller(router,viewportScroller,config);}function provideLocationStrategy(platformLocationStrategy,baseHref,options){if(options===void 0){options={};}return options.useHash?new common.HashLocationStrategy(platformLocationStrategy,baseHref):new common.PathLocationStrategy(platformLocationStrategy,baseHref);}function provideForRootGuard(router){if(router){throw new Error("RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.");}return'guarded';}/**
     * Registers a [DI provider](guide/glossary#provider) for a set of routes.
     * @param routes The route configuration to provide.
     *
     * @usageNotes
     *
     * ```
     * @NgModule({
     *   imports: [RouterModule.forChild(ROUTES)],
     *   providers: [provideRoutes(EXTRA_ROUTES)]
     * })
     * class MyNgModule {}
     * ```
     *
     * @publicApi
     */function provideRoutes(routes){return[{provide:core.ANALYZE_FOR_ENTRY_COMPONENTS,multi:true,useValue:routes},{provide:ROUTES,multi:true,useValue:routes}];}function setupRouter(urlSerializer,contexts,location,injector,loader,compiler,config,opts,urlHandlingStrategy,routeReuseStrategy){if(opts===void 0){opts={};}var router=new Router(null,urlSerializer,contexts,location,injector,loader,compiler,flatten(config));if(urlHandlingStrategy){router.urlHandlingStrategy=urlHandlingStrategy;}if(routeReuseStrategy){router.routeReuseStrategy=routeReuseStrategy;}if(opts.errorHandler){router.errorHandler=opts.errorHandler;}if(opts.malformedUriErrorHandler){router.malformedUriErrorHandler=opts.malformedUriErrorHandler;}if(opts.enableTracing){var dom_1=common.ɵgetDOM();router.events.subscribe(function(e){dom_1.logGroup("Router Event: "+e.constructor.name);dom_1.log(e.toString());dom_1.log(e);dom_1.logGroupEnd();});}if(opts.onSameUrlNavigation){router.onSameUrlNavigation=opts.onSameUrlNavigation;}if(opts.paramsInheritanceStrategy){router.paramsInheritanceStrategy=opts.paramsInheritanceStrategy;}if(opts.urlUpdateStrategy){router.urlUpdateStrategy=opts.urlUpdateStrategy;}if(opts.relativeLinkResolution){router.relativeLinkResolution=opts.relativeLinkResolution;}return router;}function rootRoute(router){return router.routerState.root;}/**
     * Router initialization requires two steps:
     *
     * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if
     * a resolver or a guard executes asynchronously.
     *
     * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the
     * `afterPreactivation` hook provided by the router.
     * The router navigation starts, reaches the point when preactivation is done, and then
     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.
     */var RouterInitializer=/** @class */function(){function RouterInitializer(injector){this.injector=injector;this.initNavigation=false;this.resultOfPreactivationDone=new rxjs.Subject();}RouterInitializer.prototype.appInitializer=function(){var _this=this;var p=this.injector.get(common.LOCATION_INITIALIZED,Promise.resolve(null));return p.then(function(){var resolve=null;var res=new Promise(function(r){return resolve=r;});var router=_this.injector.get(Router);var opts=_this.injector.get(ROUTER_CONFIGURATION);if(_this.isLegacyDisabled(opts)||_this.isLegacyEnabled(opts)){resolve(true);}else if(opts.initialNavigation==='disabled'){router.setUpLocationChangeListener();resolve(true);}else if(opts.initialNavigation==='enabled'){router.hooks.afterPreactivation=function(){// only the initial navigation should be delayed
if(!_this.initNavigation){_this.initNavigation=true;resolve(true);return _this.resultOfPreactivationDone;// subsequent navigations should not be delayed
}else{return rxjs.of(null);}};router.initialNavigation();}else{throw new Error("Invalid initialNavigation options: '"+opts.initialNavigation+"'");}return res;});};RouterInitializer.prototype.bootstrapListener=function(bootstrappedComponentRef){var opts=this.injector.get(ROUTER_CONFIGURATION);var preloader=this.injector.get(RouterPreloader);var routerScroller=this.injector.get(RouterScroller);var router=this.injector.get(Router);var ref=this.injector.get(core.ApplicationRef);if(bootstrappedComponentRef!==ref.components[0]){return;}if(this.isLegacyEnabled(opts)){router.initialNavigation();}else if(this.isLegacyDisabled(opts)){router.setUpLocationChangeListener();}preloader.setUpPreloading();routerScroller.init();router.resetRootComponentType(ref.componentTypes[0]);this.resultOfPreactivationDone.next(null);this.resultOfPreactivationDone.complete();};RouterInitializer.prototype.isLegacyEnabled=function(opts){return opts.initialNavigation==='legacy_enabled'||opts.initialNavigation===true||opts.initialNavigation===undefined;};RouterInitializer.prototype.isLegacyDisabled=function(opts){return opts.initialNavigation==='legacy_disabled'||opts.initialNavigation===false;};RouterInitializer=__decorate([core.Injectable(),__metadata("design:paramtypes",[core.Injector])],RouterInitializer);return RouterInitializer;}();function getAppInitializer(r){return r.appInitializer.bind(r);}function getBootstrapListener(r){return r.bootstrapListener.bind(r);}/**
     * A [DI token](guide/glossary/#di-token) for the router initializer that
     * is called after the app is bootstrapped.
     *
     * @publicApi
     */var ROUTER_INITIALIZER=new core.InjectionToken('Router Initializer');function provideRouterInitializer(){return[RouterInitializer,{provide:core.APP_INITIALIZER,multi:true,useFactory:getAppInitializer,deps:[RouterInitializer]},{provide:ROUTER_INITIALIZER,useFactory:getBootstrapListener,deps:[RouterInitializer]},{provide:core.APP_BOOTSTRAP_LISTENER,multi:true,useExisting:ROUTER_INITIALIZER}];}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @publicApi
     */var VERSION=new core.Version('9.1.9');/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // This file only reexports content of the `src` folder. Keep it that way.
/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Generated bundle index. Do not edit.
     */exports.ActivatedRoute=ActivatedRoute;exports.ActivatedRouteSnapshot=ActivatedRouteSnapshot;exports.ActivationEnd=ActivationEnd;exports.ActivationStart=ActivationStart;exports.ChildActivationEnd=ChildActivationEnd;exports.ChildActivationStart=ChildActivationStart;exports.ChildrenOutletContexts=ChildrenOutletContexts;exports.DefaultUrlSerializer=DefaultUrlSerializer;exports.GuardsCheckEnd=GuardsCheckEnd;exports.GuardsCheckStart=GuardsCheckStart;exports.NavigationCancel=NavigationCancel;exports.NavigationEnd=NavigationEnd;exports.NavigationError=NavigationError;exports.NavigationStart=NavigationStart;exports.NoPreloading=NoPreloading;exports.OutletContext=OutletContext;exports.PRIMARY_OUTLET=PRIMARY_OUTLET;exports.PreloadAllModules=PreloadAllModules;exports.PreloadingStrategy=PreloadingStrategy;exports.ROUTER_CONFIGURATION=ROUTER_CONFIGURATION;exports.ROUTER_INITIALIZER=ROUTER_INITIALIZER;exports.ROUTES=ROUTES;exports.ResolveEnd=ResolveEnd;exports.ResolveStart=ResolveStart;exports.RouteConfigLoadEnd=RouteConfigLoadEnd;exports.RouteConfigLoadStart=RouteConfigLoadStart;exports.RouteReuseStrategy=RouteReuseStrategy;exports.Router=Router;exports.RouterEvent=RouterEvent;exports.RouterLink=RouterLink;exports.RouterLinkActive=RouterLinkActive;exports.RouterLinkWithHref=RouterLinkWithHref;exports.RouterModule=RouterModule;exports.RouterOutlet=RouterOutlet;exports.RouterPreloader=RouterPreloader;exports.RouterState=RouterState;exports.RouterStateSnapshot=RouterStateSnapshot;exports.RoutesRecognized=RoutesRecognized;exports.Scroll=Scroll;exports.UrlHandlingStrategy=UrlHandlingStrategy;exports.UrlSegment=UrlSegment;exports.UrlSegmentGroup=UrlSegmentGroup;exports.UrlSerializer=UrlSerializer;exports.UrlTree=UrlTree;exports.VERSION=VERSION;exports.convertToParamMap=convertToParamMap;exports.provideRoutes=provideRoutes;exports.ɵEmptyOutletComponent=ɵEmptyOutletComponent;exports.ɵROUTER_PROVIDERS=ROUTER_PROVIDERS;exports.ɵangular_packages_router_router_a=ROUTER_FORROOT_GUARD;exports.ɵangular_packages_router_router_b=routerNgProbeToken;exports.ɵangular_packages_router_router_c=createRouterScroller;exports.ɵangular_packages_router_router_d=provideLocationStrategy;exports.ɵangular_packages_router_router_e=provideForRootGuard;exports.ɵangular_packages_router_router_f=setupRouter;exports.ɵangular_packages_router_router_g=rootRoute;exports.ɵangular_packages_router_router_h=RouterInitializer;exports.ɵangular_packages_router_router_i=getAppInitializer;exports.ɵangular_packages_router_router_j=getBootstrapListener;exports.ɵangular_packages_router_router_k=provideRouterInitializer;exports.ɵangular_packages_router_router_l=ɵEmptyOutletComponent;exports.ɵangular_packages_router_router_m=Tree;exports.ɵangular_packages_router_router_n=TreeNode;exports.ɵangular_packages_router_router_o=RouterScroller;exports.ɵflatten=flatten;Object.defineProperty(exports,'__esModule',{value:true});});},{"@angular/common":2,"@angular/core":4,"rxjs":120,"rxjs/operators":318}],8:[function(require,module,exports){(function(process,global){/**
 * auth0-js v9.13.2
 * Author: Auth0
 * Date: 2020-04-09
 * License: MIT
 */!function(global,factory){"object"==_typeof(exports)&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global=global||self).auth0={});}(this,function(exports){"use strict";var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function createCommonjsModule(fn,module){return fn(module={exports:{}},module.exports),module.exports;}var urlJoin=createCommonjsModule(function(module){var context,definition;context=commonjsGlobal,definition=function definition(){function normalize(strArray){var resultArray=[];if(0===strArray.length)return"";if("string"!=typeof strArray[0])throw new TypeError("Url must be a string. Received "+strArray[0]);if(strArray[0].match(/^[^\/:]+:\/*$/)&&strArray.length>1){var first=strArray.shift();strArray[0]=first+strArray[0];}strArray[0].match(/^file:\/\/\//)?strArray[0]=strArray[0].replace(/^([^\/:]+):\/*/,"$1:///"):strArray[0]=strArray[0].replace(/^([^\/:]+):\/*/,"$1://");for(var i=0;i<strArray.length;i++){var component=strArray[i];if("string"!=typeof component)throw new TypeError("Url must be a string. Received "+component);""!==component&&(i>0&&(component=component.replace(/^[\/]+/,"")),component=i<strArray.length-1?component.replace(/[\/]+$/,""):component.replace(/[\/]+$/,"/"),resultArray.push(component));}var str=resultArray.join("/"),parts=(str=str.replace(/\/(\?|&|#[^!])/g,"$1")).split("?");return str=parts.shift()+(parts.length>0?"?":"")+parts.join("&");}return function(){return normalize("object"==_typeof(arguments[0])?arguments[0]:[].slice.call(arguments));};},module.exports?module.exports=definition():context.urljoin=definition();}),has=Object.prototype.hasOwnProperty,isArray=Array.isArray,hexTable=function(){for(var array=[],i=0;i<256;++i){array.push("%"+((i<16?"0":"")+i.toString(16)).toUpperCase());}return array;}(),arrayToObject=function arrayToObject(source,options){for(var obj=options&&options.plainObjects?Object.create(null):{},i=0;i<source.length;++i){void 0!==source[i]&&(obj[i]=source[i]);}return obj;},utils={arrayToObject:arrayToObject,assign:function assign(target,source){return Object.keys(source).reduce(function(acc,key){return acc[key]=source[key],acc;},target);},combine:function combine(a,b){return[].concat(a,b);},compact:function compact(value){for(var queue=[{obj:{o:value},prop:"o"}],refs=[],i=0;i<queue.length;++i){for(var item=queue[i],obj=item.obj[item.prop],keys=Object.keys(obj),j=0;j<keys.length;++j){var key=keys[j],val=obj[key];"object"==_typeof(val)&&null!==val&&-1===refs.indexOf(val)&&(queue.push({obj:obj,prop:key}),refs.push(val));}}return function(queue){for(;queue.length>1;){var item=queue.pop(),obj=item.obj[item.prop];if(isArray(obj)){for(var compacted=[],j=0;j<obj.length;++j){void 0!==obj[j]&&compacted.push(obj[j]);}item.obj[item.prop]=compacted;}}}(queue),value;},decode:function decode(str,decoder,charset){var strWithoutPlus=str.replace(/\+/g," ");if("iso-8859-1"===charset)return strWithoutPlus.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(strWithoutPlus);}catch(e){return strWithoutPlus;}},encode:function encode(str,defaultEncoder,charset){if(0===str.length)return str;var string=str;if("symbol"==_typeof(str)?string=Symbol.prototype.toString.call(str):"string"!=typeof str&&(string=String(str)),"iso-8859-1"===charset)return escape(string).replace(/%u[0-9a-f]{4}/gi,function($0){return"%26%23"+parseInt($0.slice(2),16)+"%3B";});for(var out="",i=0;i<string.length;++i){var c=string.charCodeAt(i);45===c||46===c||95===c||126===c||c>=48&&c<=57||c>=65&&c<=90||c>=97&&c<=122?out+=string.charAt(i):c<128?out+=hexTable[c]:c<2048?out+=hexTable[192|c>>6]+hexTable[128|63&c]:c<55296||c>=57344?out+=hexTable[224|c>>12]+hexTable[128|c>>6&63]+hexTable[128|63&c]:(i+=1,c=65536+((1023&c)<<10|1023&string.charCodeAt(i)),out+=hexTable[240|c>>18]+hexTable[128|c>>12&63]+hexTable[128|c>>6&63]+hexTable[128|63&c]);}return out;},isBuffer:function isBuffer(obj){return!(!obj||"object"!=_typeof(obj)||!(obj.constructor&&obj.constructor.isBuffer&&obj.constructor.isBuffer(obj)));},isRegExp:function isRegExp(obj){return"[object RegExp]"===Object.prototype.toString.call(obj);},merge:function merge(target,source,options){if(!source)return target;if("object"!=_typeof(source)){if(isArray(target))target.push(source);else{if(!target||"object"!=_typeof(target))return[target,source];(options&&(options.plainObjects||options.allowPrototypes)||!has.call(Object.prototype,source))&&(target[source]=!0);}return target;}if(!target||"object"!=_typeof(target))return[target].concat(source);var mergeTarget=target;return isArray(target)&&!isArray(source)&&(mergeTarget=arrayToObject(target,options)),isArray(target)&&isArray(source)?(source.forEach(function(item,i){if(has.call(target,i)){var targetItem=target[i];targetItem&&"object"==_typeof(targetItem)&&item&&"object"==_typeof(item)?target[i]=merge(targetItem,item,options):target.push(item);}else target[i]=item;}),target):Object.keys(source).reduce(function(acc,key){var value=source[key];return has.call(acc,key)?acc[key]=merge(acc[key],value,options):acc[key]=value,acc;},mergeTarget);}},replace=String.prototype.replace,percentTwenties=/%20/g,Format={RFC1738:"RFC1738",RFC3986:"RFC3986"},formats=utils.assign({"default":Format.RFC3986,formatters:{RFC1738:function RFC1738(value){return replace.call(value,percentTwenties,"+");},RFC3986:function RFC3986(value){return String(value);}}},Format),has$1=Object.prototype.hasOwnProperty,arrayPrefixGenerators={brackets:function brackets(prefix){return prefix+"[]";},comma:"comma",indices:function indices(prefix,key){return prefix+"["+key+"]";},repeat:function repeat(prefix){return prefix;}},isArray$1=Array.isArray,push=Array.prototype.push,pushToArray=function pushToArray(arr,valueOrArray){push.apply(arr,isArray$1(valueOrArray)?valueOrArray:[valueOrArray]);},toISO=Date.prototype.toISOString,defaultFormat=formats["default"],defaults={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:utils.encode,encodeValuesOnly:!1,format:defaultFormat,formatter:formats.formatters[defaultFormat],indices:!1,serializeDate:function serializeDate(date){return toISO.call(date);},skipNulls:!1,strictNullHandling:!1},stringify=function stringify(object,prefix,generateArrayPrefix,strictNullHandling,skipNulls,encoder,filter,sort,allowDots,serializeDate,formatter,encodeValuesOnly,charset){var obj=object;if("function"==typeof filter?obj=filter(prefix,obj):obj instanceof Date?obj=serializeDate(obj):"comma"===generateArrayPrefix&&isArray$1(obj)&&(obj=obj.join(",")),null===obj){if(strictNullHandling)return encoder&&!encodeValuesOnly?encoder(prefix,defaults.encoder,charset):prefix;obj="";}if(function(v){return"string"==typeof v||"number"==typeof v||"boolean"==typeof v||"symbol"==_typeof(v)||"bigint"==typeof v;}(obj)||utils.isBuffer(obj))return encoder?[formatter(encodeValuesOnly?prefix:encoder(prefix,defaults.encoder,charset))+"="+formatter(encoder(obj,defaults.encoder,charset))]:[formatter(prefix)+"="+formatter(String(obj))];var objKeys,values=[];if(void 0===obj)return values;if(isArray$1(filter))objKeys=filter;else{var keys=Object.keys(obj);objKeys=sort?keys.sort(sort):keys;}for(var i=0;i<objKeys.length;++i){var key=objKeys[i];skipNulls&&null===obj[key]||(isArray$1(obj)?pushToArray(values,stringify(obj[key],"function"==typeof generateArrayPrefix?generateArrayPrefix(prefix,key):prefix,generateArrayPrefix,strictNullHandling,skipNulls,encoder,filter,sort,allowDots,serializeDate,formatter,encodeValuesOnly,charset)):pushToArray(values,stringify(obj[key],prefix+(allowDots?"."+key:"["+key+"]"),generateArrayPrefix,strictNullHandling,skipNulls,encoder,filter,sort,allowDots,serializeDate,formatter,encodeValuesOnly,charset)));}return values;},has$2=Object.prototype.hasOwnProperty,defaults$1={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:utils.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},interpretNumericEntities=function interpretNumericEntities(str){return str.replace(/&#(\d+);/g,function($0,numberStr){return String.fromCharCode(parseInt(numberStr,10));});},parseKeys=function parseKeys(givenKey,val,options){if(givenKey){var key=options.allowDots?givenKey.replace(/\.([^.[]+)/g,"[$1]"):givenKey,child=/(\[[^[\]]*])/g,segment=options.depth>0&&/(\[[^[\]]*])/.exec(key),parent=segment?key.slice(0,segment.index):key,keys=[];if(parent){if(!options.plainObjects&&has$2.call(Object.prototype,parent)&&!options.allowPrototypes)return;keys.push(parent);}for(var i=0;options.depth>0&&null!==(segment=child.exec(key))&&i<options.depth;){if(i+=1,!options.plainObjects&&has$2.call(Object.prototype,segment[1].slice(1,-1))&&!options.allowPrototypes)return;keys.push(segment[1]);}return segment&&keys.push("["+key.slice(segment.index)+"]"),function(chain,val,options){for(var leaf=val,i=chain.length-1;i>=0;--i){var obj,root=chain[i];if("[]"===root&&options.parseArrays)obj=[].concat(leaf);else{obj=options.plainObjects?Object.create(null):{};var cleanRoot="["===root.charAt(0)&&"]"===root.charAt(root.length-1)?root.slice(1,-1):root,index=parseInt(cleanRoot,10);options.parseArrays||""!==cleanRoot?!isNaN(index)&&root!==cleanRoot&&String(index)===cleanRoot&&index>=0&&options.parseArrays&&index<=options.arrayLimit?(obj=[])[index]=leaf:obj[cleanRoot]=leaf:obj={0:leaf};}leaf=obj;}return leaf;}(keys,val,options);}},lib_parse=function lib_parse(str,opts){var options=function(opts){if(!opts)return defaults$1;if(null!==opts.decoder&&void 0!==opts.decoder&&"function"!=typeof opts.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==opts.charset&&"utf-8"!==opts.charset&&"iso-8859-1"!==opts.charset)throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined");var charset=void 0===opts.charset?defaults$1.charset:opts.charset;return{allowDots:void 0===opts.allowDots?defaults$1.allowDots:!!opts.allowDots,allowPrototypes:"boolean"==typeof opts.allowPrototypes?opts.allowPrototypes:defaults$1.allowPrototypes,arrayLimit:"number"==typeof opts.arrayLimit?opts.arrayLimit:defaults$1.arrayLimit,charset:charset,charsetSentinel:"boolean"==typeof opts.charsetSentinel?opts.charsetSentinel:defaults$1.charsetSentinel,comma:"boolean"==typeof opts.comma?opts.comma:defaults$1.comma,decoder:"function"==typeof opts.decoder?opts.decoder:defaults$1.decoder,delimiter:"string"==typeof opts.delimiter||utils.isRegExp(opts.delimiter)?opts.delimiter:defaults$1.delimiter,depth:"number"==typeof opts.depth||!1===opts.depth?+opts.depth:defaults$1.depth,ignoreQueryPrefix:!0===opts.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof opts.interpretNumericEntities?opts.interpretNumericEntities:defaults$1.interpretNumericEntities,parameterLimit:"number"==typeof opts.parameterLimit?opts.parameterLimit:defaults$1.parameterLimit,parseArrays:!1!==opts.parseArrays,plainObjects:"boolean"==typeof opts.plainObjects?opts.plainObjects:defaults$1.plainObjects,strictNullHandling:"boolean"==typeof opts.strictNullHandling?opts.strictNullHandling:defaults$1.strictNullHandling};}(opts);if(""===str||null==str)return options.plainObjects?Object.create(null):{};for(var tempObj="string"==typeof str?function(str,options){var i,obj={},cleanStr=options.ignoreQueryPrefix?str.replace(/^\?/,""):str,limit=options.parameterLimit===1/0?void 0:options.parameterLimit,parts=cleanStr.split(options.delimiter,limit),skipIndex=-1,charset=options.charset;if(options.charsetSentinel)for(i=0;i<parts.length;++i){0===parts[i].indexOf("utf8=")&&("utf8=%E2%9C%93"===parts[i]?charset="utf-8":"utf8=%26%2310003%3B"===parts[i]&&(charset="iso-8859-1"),skipIndex=i,i=parts.length);}for(i=0;i<parts.length;++i){if(i!==skipIndex){var key,val,part=parts[i],bracketEqualsPos=part.indexOf("]="),pos=-1===bracketEqualsPos?part.indexOf("="):bracketEqualsPos+1;-1===pos?(key=options.decoder(part,defaults$1.decoder,charset),val=options.strictNullHandling?null:""):(key=options.decoder(part.slice(0,pos),defaults$1.decoder,charset),val=options.decoder(part.slice(pos+1),defaults$1.decoder,charset)),val&&options.interpretNumericEntities&&"iso-8859-1"===charset&&(val=interpretNumericEntities(val)),val&&options.comma&&val.indexOf(",")>-1&&(val=val.split(",")),has$2.call(obj,key)?obj[key]=utils.combine(obj[key],val):obj[key]=val;}}return obj;}(str,options):str,obj=options.plainObjects?Object.create(null):{},keys=Object.keys(tempObj),i=0;i<keys.length;++i){var key=keys[i],newObj=parseKeys(key,tempObj[key],options);obj=utils.merge(obj,newObj,options);}return utils.compact(obj);},lib_stringify=function lib_stringify(object,opts){var objKeys,obj=object,options=function(opts){if(!opts)return defaults;if(null!==opts.encoder&&void 0!==opts.encoder&&"function"!=typeof opts.encoder)throw new TypeError("Encoder has to be a function.");var charset=opts.charset||defaults.charset;if(void 0!==opts.charset&&"utf-8"!==opts.charset&&"iso-8859-1"!==opts.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var format=formats["default"];if(void 0!==opts.format){if(!has$1.call(formats.formatters,opts.format))throw new TypeError("Unknown format option provided.");format=opts.format;}var formatter=formats.formatters[format],filter=defaults.filter;return("function"==typeof opts.filter||isArray$1(opts.filter))&&(filter=opts.filter),{addQueryPrefix:"boolean"==typeof opts.addQueryPrefix?opts.addQueryPrefix:defaults.addQueryPrefix,allowDots:void 0===opts.allowDots?defaults.allowDots:!!opts.allowDots,charset:charset,charsetSentinel:"boolean"==typeof opts.charsetSentinel?opts.charsetSentinel:defaults.charsetSentinel,delimiter:void 0===opts.delimiter?defaults.delimiter:opts.delimiter,encode:"boolean"==typeof opts.encode?opts.encode:defaults.encode,encoder:"function"==typeof opts.encoder?opts.encoder:defaults.encoder,encodeValuesOnly:"boolean"==typeof opts.encodeValuesOnly?opts.encodeValuesOnly:defaults.encodeValuesOnly,filter:filter,formatter:formatter,serializeDate:"function"==typeof opts.serializeDate?opts.serializeDate:defaults.serializeDate,skipNulls:"boolean"==typeof opts.skipNulls?opts.skipNulls:defaults.skipNulls,sort:"function"==typeof opts.sort?opts.sort:null,strictNullHandling:"boolean"==typeof opts.strictNullHandling?opts.strictNullHandling:defaults.strictNullHandling};}(opts);"function"==typeof options.filter?obj=(0,options.filter)("",obj):isArray$1(options.filter)&&(objKeys=options.filter);var arrayFormat,keys=[];if("object"!=_typeof(obj)||null===obj)return"";arrayFormat=opts&&opts.arrayFormat in arrayPrefixGenerators?opts.arrayFormat:opts&&"indices"in opts?opts.indices?"indices":"repeat":"indices";var generateArrayPrefix=arrayPrefixGenerators[arrayFormat];objKeys||(objKeys=Object.keys(obj)),options.sort&&objKeys.sort(options.sort);for(var i=0;i<objKeys.length;++i){var key=objKeys[i];options.skipNulls&&null===obj[key]||pushToArray(keys,stringify(obj[key],key,generateArrayPrefix,options.strictNullHandling,options.skipNulls,options.encode?options.encoder:null,options.filter,options.sort,options.allowDots,options.serializeDate,options.formatter,options.encodeValuesOnly,options.charset));}var joined=keys.join(options.delimiter),prefix=!0===options.addQueryPrefix?"?":"";return options.charsetSentinel&&("iso-8859-1"===options.charset?prefix+="utf8=%26%2310003%3B&":prefix+="utf8=%E2%9C%93&"),joined.length>0?prefix+joined:"";},componentEmitter=createCommonjsModule(function(module){function Emitter(obj){if(obj)return function(obj){for(var key in Emitter.prototype){obj[key]=Emitter.prototype[key];}return obj;}(obj);}module.exports=Emitter,Emitter.prototype.on=Emitter.prototype.addEventListener=function(event,fn){return this._callbacks=this._callbacks||{},(this._callbacks["$"+event]=this._callbacks["$"+event]||[]).push(fn),this;},Emitter.prototype.once=function(event,fn){function on(){this.off(event,on),fn.apply(this,arguments);}return on.fn=fn,this.on(event,on),this;},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(event,fn){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var cb,callbacks=this._callbacks["$"+event];if(!callbacks)return this;if(1==arguments.length)return delete this._callbacks["$"+event],this;for(var i=0;i<callbacks.length;i++){if((cb=callbacks[i])===fn||cb.fn===fn){callbacks.splice(i,1);break;}}return 0===callbacks.length&&delete this._callbacks["$"+event],this;},Emitter.prototype.emit=function(event){this._callbacks=this._callbacks||{};for(var args=new Array(arguments.length-1),callbacks=this._callbacks["$"+event],i=1;i<arguments.length;i++){args[i-1]=arguments[i];}if(callbacks){i=0;for(var len=(callbacks=callbacks.slice(0)).length;i<len;++i){callbacks[i].apply(this,args);}}return this;},Emitter.prototype.listeners=function(event){return this._callbacks=this._callbacks||{},this._callbacks["$"+event]||[];},Emitter.prototype.hasListeners=function(event){return!!this.listeners(event).length;};});var isObject_1=function isObject_1(obj){return null!==obj&&"object"==_typeof(obj);},requestBase=RequestBase;function RequestBase(obj){if(obj)return function(obj){for(var key in RequestBase.prototype){obj[key]=RequestBase.prototype[key];}return obj;}(obj);}RequestBase.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,this;},RequestBase.prototype.parse=function(fn){return this._parser=fn,this;},RequestBase.prototype.responseType=function(val){return this._responseType=val,this;},RequestBase.prototype.serialize=function(fn){return this._serializer=fn,this;},RequestBase.prototype.timeout=function(options){if(!options||"object"!=_typeof(options))return this._timeout=options,this._responseTimeout=0,this;for(var option in options){switch(option){case"deadline":this._timeout=options.deadline;break;case"response":this._responseTimeout=options.response;break;default:console.warn("Unknown timeout option",option);}}return this;},RequestBase.prototype.retry=function(count,fn){return 0!==arguments.length&&!0!==count||(count=1),count<=0&&(count=0),this._maxRetries=count,this._retries=0,this._retryCallback=fn,this;};var ERROR_CODES=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];RequestBase.prototype._shouldRetry=function(err,res){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var override=this._retryCallback(err,res);if(!0===override)return!0;if(!1===override)return!1;}catch(e){console.error(e);}if(res&&res.status&&res.status>=500&&501!=res.status)return!0;if(err){if(err.code&&~ERROR_CODES.indexOf(err.code))return!0;if(err.timeout&&"ECONNABORTED"==err.code)return!0;if(err.crossDomain)return!0;}return!1;},RequestBase.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this._end();},RequestBase.prototype.then=function(resolve,reject){if(!this._fullfilledPromise){var self=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise(function(innerResolve,innerReject){self.end(function(err,res){err?innerReject(err):innerResolve(res);});});}return this._fullfilledPromise.then(resolve,reject);},RequestBase.prototype["catch"]=function(cb){return this.then(void 0,cb);},RequestBase.prototype.use=function(fn){return fn(this),this;},RequestBase.prototype.ok=function(cb){if("function"!=typeof cb)throw Error("Callback required");return this._okCallback=cb,this;},RequestBase.prototype._isResponseOK=function(res){return!!res&&(this._okCallback?this._okCallback(res):res.status>=200&&res.status<300);},RequestBase.prototype.get=function(field){return this._header[field.toLowerCase()];},RequestBase.prototype.getHeader=RequestBase.prototype.get,RequestBase.prototype.set=function(field,val){if(isObject_1(field)){for(var key in field){this.set(key,field[key]);}return this;}return this._header[field.toLowerCase()]=val,this.header[field]=val,this;},RequestBase.prototype.unset=function(field){return delete this._header[field.toLowerCase()],delete this.header[field],this;},RequestBase.prototype.field=function(name,val){if(null==name)throw new Error(".field(name, val) name can not be empty");if(this._data&&console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"),isObject_1(name)){for(var key in name){this.field(key,name[key]);}return this;}if(Array.isArray(val)){for(var i in val){this.field(name,val[i]);}return this;}if(null==val)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof val&&(val=""+val),this._getFormData().append(name,val),this;},RequestBase.prototype.abort=function(){return this._aborted?this:(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort"),this);},RequestBase.prototype._auth=function(user,pass,options,base64Encoder){switch(options.type){case"basic":this.set("Authorization","Basic "+base64Encoder(user+":"+pass));break;case"auto":this.username=user,this.password=pass;break;case"bearer":this.set("Authorization","Bearer "+user);}return this;},RequestBase.prototype.withCredentials=function(on){return null==on&&(on=!0),this._withCredentials=on,this;},RequestBase.prototype.redirects=function(n){return this._maxRedirects=n,this;},RequestBase.prototype.maxResponseSize=function(n){if("number"!=typeof n)throw TypeError("Invalid argument");return this._maxResponseSize=n,this;},RequestBase.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header};},RequestBase.prototype.send=function(data){var isObj=isObject_1(data),type=this._header["content-type"];if(this._formData&&console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"),isObj&&!this._data)Array.isArray(data)?this._data=[]:this._isHost(data)||(this._data={});else if(data&&this._data&&this._isHost(this._data))throw Error("Can't merge these send calls");if(isObj&&isObject_1(this._data))for(var key in data){this._data[key]=data[key];}else"string"==typeof data?(type||this.type("form"),type=this._header["content-type"],this._data="application/x-www-form-urlencoded"==type?this._data?this._data+"&"+data:data:(this._data||"")+data):this._data=data;return!isObj||this._isHost(data)?this:(type||this.type("json"),this);},RequestBase.prototype.sortQuery=function(sort){return this._sort=void 0===sort||sort,this;},RequestBase.prototype._finalizeQueryString=function(){var query=this._query.join("&");if(query&&(this.url+=(this.url.indexOf("?")>=0?"&":"?")+query),this._query.length=0,this._sort){var index=this.url.indexOf("?");if(index>=0){var queryArr=this.url.substring(index+1).split("&");"function"==typeof this._sort?queryArr.sort(this._sort):queryArr.sort(),this.url=this.url.substring(0,index)+"?"+queryArr.join("&");}}},RequestBase.prototype._appendQueryString=function(){console.trace("Unsupported");},RequestBase.prototype._timeoutError=function(reason,timeout,errno){if(!this._aborted){var err=new Error(reason+timeout+"ms exceeded");err.timeout=timeout,err.code="ECONNABORTED",err.errno=errno,this.timedout=!0,this.abort(),this.callback(err);}},RequestBase.prototype._setTimeouts=function(){var self=this;this._timeout&&!this._timer&&(this._timer=setTimeout(function(){self._timeoutError("Timeout of ",self._timeout,"ETIME");},this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout(function(){self._timeoutError("Response timeout of ",self._responseTimeout,"ETIMEDOUT");},this._responseTimeout));};var utils$1_type=function utils$1_type(str){return str.split(/ *; */).shift();},utils$1_params=function utils$1_params(str){return str.split(/ *; */).reduce(function(obj,str){var parts=str.split(/ *= */),key=parts.shift(),val=parts.shift();return key&&val&&(obj[key]=val),obj;},{});},utils$1_parseLinks=function utils$1_parseLinks(str){return str.split(/ *, */).reduce(function(obj,str){var parts=str.split(/ *; */),url=parts[0].slice(1,-1);return obj[parts[1].split(/ *= */)[1].slice(1,-1)]=url,obj;},{});},responseBase=ResponseBase;function ResponseBase(obj){if(obj)return function(obj){for(var key in ResponseBase.prototype){obj[key]=ResponseBase.prototype[key];}return obj;}(obj);}function Agent(){this._defaults=[];}ResponseBase.prototype.get=function(field){return this.header[field.toLowerCase()];},ResponseBase.prototype._setHeaderProperties=function(header){var ct=header["content-type"]||"";this.type=utils$1_type(ct);var params=utils$1_params(ct);for(var key in params){this[key]=params[key];}this.links={};try{header.link&&(this.links=utils$1_parseLinks(header.link));}catch(err){}},ResponseBase.prototype._setStatusProperties=function(status){var type=status/100|0;this.status=this.statusCode=status,this.statusType=type,this.info=1==type,this.ok=2==type,this.redirect=3==type,this.clientError=4==type,this.serverError=5==type,this.error=(4==type||5==type)&&this.toError(),this.created=201==status,this.accepted=202==status,this.noContent=204==status,this.badRequest=400==status,this.unauthorized=401==status,this.notAcceptable=406==status,this.forbidden=403==status,this.notFound=404==status,this.unprocessableEntity=422==status;},["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert"].forEach(function(fn){Agent.prototype[fn]=function(){return this._defaults.push({fn:fn,arguments:arguments}),this;};}),Agent.prototype._setDefaults=function(req){this._defaults.forEach(function(def){req[def.fn].apply(req,def.arguments);});};for(var agentBase=Agent,client=createCommonjsModule(function(module,exports){var root;function noop(){}"undefined"!=typeof window?root=window:"undefined"!=typeof self?root=self:(console.warn("Using browser-only version of superagent in non-browser environment"),root=commonjsGlobal);var request=exports=module.exports=function(method,url){return"function"==typeof url?new exports.Request("GET",method).end(url):1==arguments.length?new exports.Request("GET",method):new exports.Request(method,url);};exports.Request=Request,request.getXHR=function(){if(!(!root.XMLHttpRequest||root.location&&"file:"==root.location.protocol&&root.ActiveXObject))return new XMLHttpRequest();try{return new ActiveXObject("Microsoft.XMLHTTP");}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0");}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0");}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP");}catch(e){}throw Error("Browser-only version of superagent could not find XHR");};var trim="".trim?function(s){return s.trim();}:function(s){return s.replace(/(^\s*|\s*$)/g,"");};function serialize(obj){if(!isObject_1(obj))return obj;var pairs=[];for(var key in obj){pushEncodedKeyValuePair(pairs,key,obj[key]);}return pairs.join("&");}function pushEncodedKeyValuePair(pairs,key,val){if(null!=val){if(Array.isArray(val))val.forEach(function(v){pushEncodedKeyValuePair(pairs,key,v);});else if(isObject_1(val))for(var subkey in val){pushEncodedKeyValuePair(pairs,key+"["+subkey+"]",val[subkey]);}else pairs.push(encodeURIComponent(key)+"="+encodeURIComponent(val));}else null===val&&pairs.push(encodeURIComponent(key));}function parseString(str){for(var pair,pos,obj={},pairs=str.split("&"),i=0,len=pairs.length;i<len;++i){-1==(pos=(pair=pairs[i]).indexOf("="))?obj[decodeURIComponent(pair)]="":obj[decodeURIComponent(pair.slice(0,pos))]=decodeURIComponent(pair.slice(pos+1));}return obj;}function isJSON(mime){return /[\/+]json($|[^-\w])/.test(mime);}function Response(req){this.req=req,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var status=this.xhr.status;1223===status&&(status=204),this._setStatusProperties(status),this.header=this.headers=function(str){for(var index,line,field,val,lines=str.split(/\r?\n/),fields={},i=0,len=lines.length;i<len;++i){-1!==(index=(line=lines[i]).indexOf(":"))&&(field=line.slice(0,index).toLowerCase(),val=trim(line.slice(index+1)),fields[field]=val);}return fields;}(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&req._responseType?this.body=this.xhr.response:this.body="HEAD"!=this.req.method?this._parseBody(this.text?this.text:this.xhr.response):null;}function Request(method,url){var self=this;this._query=this._query||[],this.method=method,this.url=url,this.header={},this._header={},this.on("end",function(){var new_err,err=null,res=null;try{res=new Response(self);}catch(e){return(err=new Error("Parser is unable to parse the response")).parse=!0,err.original=e,self.xhr?(err.rawResponse=void 0===self.xhr.responseType?self.xhr.responseText:self.xhr.response,err.status=self.xhr.status?self.xhr.status:null,err.statusCode=err.status):(err.rawResponse=null,err.status=null),self.callback(err);}self.emit("response",res);try{self._isResponseOK(res)||(new_err=new Error(res.statusText||"Unsuccessful HTTP response"));}catch(custom_err){new_err=custom_err;}new_err?(new_err.original=err,new_err.response=res,new_err.status=res.status,self.callback(new_err,res)):self.callback(null,res);});}function del(url,data,fn){var req=request("DELETE",url);return"function"==typeof data&&(fn=data,data=null),data&&req.send(data),fn&&req.end(fn),req;}request.serializeObject=serialize,request.parseString=parseString,request.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},request.serialize={"application/x-www-form-urlencoded":serialize,"application/json":JSON.stringify},request.parse={"application/x-www-form-urlencoded":parseString,"application/json":JSON.parse},responseBase(Response.prototype),Response.prototype._parseBody=function(str){var parse=request.parse[this.type];return this.req._parser?this.req._parser(this,str):(!parse&&isJSON(this.type)&&(parse=request.parse["application/json"]),parse&&str&&(str.length||str instanceof Object)?parse(str):null);},Response.prototype.toError=function(){var req=this.req,method=req.method,url=req.url,msg="cannot "+method+" "+url+" ("+this.status+")",err=new Error(msg);return err.status=this.status,err.method=method,err.url=url,err;},request.Response=Response,componentEmitter(Request.prototype),requestBase(Request.prototype),Request.prototype.type=function(type){return this.set("Content-Type",request.types[type]||type),this;},Request.prototype.accept=function(type){return this.set("Accept",request.types[type]||type),this;},Request.prototype.auth=function(user,pass,options){1===arguments.length&&(pass=""),"object"==_typeof(pass)&&null!==pass&&(options=pass,pass=""),options||(options={type:"function"==typeof btoa?"basic":"auto"});var encoder=function encoder(string){if("function"==typeof btoa)return btoa(string);throw new Error("Cannot use basic auth, btoa is not a function");};return this._auth(user,pass,options,encoder);},Request.prototype.query=function(val){return"string"!=typeof val&&(val=serialize(val)),val&&this._query.push(val),this;},Request.prototype.attach=function(field,file,options){if(file){if(this._data)throw Error("superagent can't mix .send() and .attach()");this._getFormData().append(field,file,options||file.name);}return this;},Request.prototype._getFormData=function(){return this._formData||(this._formData=new root.FormData()),this._formData;},Request.prototype.callback=function(err,res){if(this._shouldRetry(err,res))return this._retry();var fn=this._callback;this.clearTimeout(),err&&(this._maxRetries&&(err.retries=this._retries-1),this.emit("error",err)),fn(err,res);},Request.prototype.crossDomainError=function(){var err=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");err.crossDomain=!0,err.status=this.status,err.method=this.method,err.url=this.url,this.callback(err);},Request.prototype.buffer=Request.prototype.ca=Request.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this;},Request.prototype.pipe=Request.prototype.write=function(){throw Error("Streaming is not supported in browser version of superagent");},Request.prototype._isHost=function(obj){return obj&&"object"==_typeof(obj)&&!Array.isArray(obj)&&"[object Object]"!==Object.prototype.toString.call(obj);},Request.prototype.end=function(fn){return this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=fn||noop,this._finalizeQueryString(),this._end();},Request.prototype._end=function(){var self=this,xhr=this.xhr=request.getXHR(),data=this._formData||this._data;this._setTimeouts(),xhr.onreadystatechange=function(){var readyState=xhr.readyState;if(readyState>=2&&self._responseTimeoutTimer&&clearTimeout(self._responseTimeoutTimer),4==readyState){var status;try{status=xhr.status;}catch(e){status=0;}if(!status){if(self.timedout||self._aborted)return;return self.crossDomainError();}self.emit("end");}};var handleProgress=function handleProgress(direction,e){e.total>0&&(e.percent=e.loaded/e.total*100),e.direction=direction,self.emit("progress",e);};if(this.hasListeners("progress"))try{xhr.onprogress=handleProgress.bind(null,"download"),xhr.upload&&(xhr.upload.onprogress=handleProgress.bind(null,"upload"));}catch(e){}try{this.username&&this.password?xhr.open(this.method,this.url,!0,this.username,this.password):xhr.open(this.method,this.url,!0);}catch(err){return this.callback(err);}if(this._withCredentials&&(xhr.withCredentials=!0),!this._formData&&"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof data&&!this._isHost(data)){var contentType=this._header["content-type"],serialize=this._serializer||request.serialize[contentType?contentType.split(";")[0]:""];!serialize&&isJSON(contentType)&&(serialize=request.serialize["application/json"]),serialize&&(data=serialize(data));}for(var field in this.header){null!=this.header[field]&&this.header.hasOwnProperty(field)&&xhr.setRequestHeader(field,this.header[field]);}return this._responseType&&(xhr.responseType=this._responseType),this.emit("request",this),xhr.send(void 0!==data?data:null),this;},request.agent=function(){return new agentBase();},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach(function(method){agentBase.prototype[method.toLowerCase()]=function(url,fn){var req=new request.Request(method,url);return this._setDefaults(req),fn&&req.end(fn),req;};}),agentBase.prototype.del=agentBase.prototype["delete"],request.get=function(url,data,fn){var req=request("GET",url);return"function"==typeof data&&(fn=data,data=null),data&&req.query(data),fn&&req.end(fn),req;},request.head=function(url,data,fn){var req=request("HEAD",url);return"function"==typeof data&&(fn=data,data=null),data&&req.query(data),fn&&req.end(fn),req;},request.options=function(url,data,fn){var req=request("OPTIONS",url);return"function"==typeof data&&(fn=data,data=null),data&&req.send(data),fn&&req.end(fn),req;},request.del=del,request["delete"]=del,request.patch=function(url,data,fn){var req=request("PATCH",url);return"function"==typeof data&&(fn=data,data=null),data&&req.send(data),fn&&req.end(fn),req;},request.post=function(url,data,fn){var req=request("POST",url);return"function"==typeof data&&(fn=data,data=null),data&&req.send(data),fn&&req.end(fn),req;},request.put=function(url,data,fn){var req=request("PUT",url);return"function"==typeof data&&(fn=data,data=null),data&&req.send(data),fn&&req.end(fn),req;};}),byteLength_1=(client.Request,function(b64){var lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1];return 3*(validLen+placeHoldersLen)/4-placeHoldersLen;}),toByteArray_1=function toByteArray_1(b64){var tmp,i,lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1],arr=new Arr(function(b64,validLen,placeHoldersLen){return 3*(validLen+placeHoldersLen)/4-placeHoldersLen;}(0,validLen,placeHoldersLen)),curByte=0,len=placeHoldersLen>0?validLen-4:validLen;for(i=0;i<len;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)],arr[curByte++]=tmp>>16&255,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp;}2===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4,arr[curByte++]=255&tmp);1===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp);return arr;},fromByteArray_1=function fromByteArray_1(uint8){for(var tmp,len=uint8.length,extraBytes=len%3,parts=[],i=0,len2=len-extraBytes;i<len2;i+=16383){parts.push(encodeChunk(uint8,i,i+16383>len2?len2:i+16383));}1===extraBytes?(tmp=uint8[len-1],parts.push(lookup[tmp>>2]+lookup[tmp<<4&63]+"==")):2===extraBytes&&(tmp=(uint8[len-2]<<8)+uint8[len-1],parts.push(lookup[tmp>>10]+lookup[tmp>>4&63]+lookup[tmp<<2&63]+"="));return parts.join("");},lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i){lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;}function getLens(b64){var len=b64.length;if(len%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var validLen=b64.indexOf("=");return-1===validLen&&(validLen=len),[validLen,validLen===len?0:4-validLen%4];}function encodeChunk(uint8,start,end){for(var tmp,num,output=[],i=start;i<end;i+=3){tmp=(uint8[i]<<16&16711680)+(uint8[i+1]<<8&65280)+(255&uint8[i+2]),output.push(lookup[(num=tmp)>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[63&num]);}return output.join("");}revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63;var base64Js={byteLength:byteLength_1,toByteArray:toByteArray_1,fromByteArray:fromByteArray_1};var base64Url={encode:function encode(str){return base64Js.fromByteArray(function(str){for(var arr=new Array(str.length),a=0;a<str.length;a++){arr[a]=str.charCodeAt(a);}return arr;}(str)).replace(/\+/g,"-").replace(/\//g,"_");},decode:function decode(str){return str=function(str){var mod=str.length%4;return 0===mod?str:str+new Array(4-mod+1).join("=");}(str).replace(/-/g,"+").replace(/_/g,"/"),function(array){for(var result="",i=0;i<array.length;i++){result+=String.fromCharCode(array[i]);}return result;}(base64Js.toByteArray(str));}},version={raw:"9.13.2"},toString=Object.prototype.toString;function attribute(o,attr,type,text){if(type="array"===type?"object":type,o&&_typeof(o[attr])!==type)throw new Error(text);}function variable(o,type,text){if(_typeof(o)!==type)throw new Error(text);}function value(o,values,text){if(-1===values.indexOf(o))throw new Error(text);}var assert={check:function check(o,config,attributes){if(config.optional&&!o||variable(o,config.type,config.message),"object"===config.type&&attributes)for(var keys=Object.keys(attributes),index=0;index<keys.length;index++){var a=keys[index];attributes[a].optional&&!o[a]||attributes[a].condition&&!attributes[a].condition(o)||(attribute(o,a,attributes[a].type,attributes[a].message),attributes[a].values&&value(o[a],attributes[a].values,attributes[a].value_message));}},attribute:attribute,variable:variable,value:value,isArray:function isArray(array){return this.supportsIsArray()?Array.isArray(array):"[object Array]"===toString.call(array);},supportsIsArray:function supportsIsArray(){return null!=Array.isArray;}};function objectAssignPolyfill(target){if(null==target)throw new TypeError("Cannot convert first argument to object");for(var to=Object(target),i=1;i<arguments.length;i++){var nextSource=arguments[i];if(null!=nextSource)for(var keysArray=Object.keys(Object(nextSource)),nextIndex=0,len=keysArray.length;nextIndex<len;nextIndex++){var nextKey=keysArray[nextIndex],desc=Object.getOwnPropertyDescriptor(nextSource,nextKey);void 0!==desc&&desc.enumerable&&(to[nextKey]=nextSource[nextKey]);}}return to;}var objectAssign={get:function get(){return Object.assign?Object.assign:objectAssignPolyfill;},objectAssignPolyfill:objectAssignPolyfill};function pick(object,keys){return keys.reduce(function(prev,key){return object[key]&&(prev[key]=object[key]),prev;},{});}function extend(){var params=function(obj){var values=[];for(var key in obj){values.push(obj[key]);}return values;}(arguments);return params.unshift({}),objectAssign.get().apply(void 0,params);}function getLocationFromUrl(href){var match=href.match(/^(https?:|file:|chrome-extension:)\/\/(([^:\/?#]*)(?::([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);return match&&{href:href,protocol:match[1],host:match[2],hostname:match[3],port:match[4],pathname:match[5],search:match[6],hash:match[7]};}function trim(options,key){var trimmed=extend(options);return options[key]&&(trimmed[key]=options[key].trim()),trimmed;}var objectHelper={toSnakeCase:function toSnakeCase(object,exceptions){return"object"!=_typeof(object)||assert.isArray(object)||null===object?object:(exceptions=exceptions||[],Object.keys(object).reduce(function(p,key){return p[-1===exceptions.indexOf(key)?function(str){for(var code,newKey="",index=0,wasPrevNumber=!0,wasPrevUppercase=!0;index<str.length;){code=str.charCodeAt(index),!wasPrevUppercase&&code>=65&&code<=90||!wasPrevNumber&&code>=48&&code<=57?(newKey+="_",newKey+=str[index].toLowerCase()):newKey+=str[index].toLowerCase(),wasPrevNumber=code>=48&&code<=57,wasPrevUppercase=code>=65&&code<=90,index++;}return newKey;}(key):key]=toSnakeCase(object[key]),p;},{}));},toCamelCase:function toCamelCase(object,exceptions,options){return"object"!=_typeof(object)||assert.isArray(object)||null===object?object:(exceptions=exceptions||[],options=options||{},Object.keys(object).reduce(function(p,key){var parts,newKey=-1===exceptions.indexOf(key)?(parts=key.split("_")).reduce(function(p,c){return p+c.charAt(0).toUpperCase()+c.slice(1);},parts.shift()):key;return p[newKey]=toCamelCase(object[newKey]||object[key],[],options),options.keepOriginal&&(p[key]=toCamelCase(object[key],[],options)),p;},{}));},blacklist:function blacklist(object,blacklistedKeys){return Object.keys(object).reduce(function(p,key){return-1===blacklistedKeys.indexOf(key)&&(p[key]=object[key]),p;},{});},merge:function merge(object,keys){return{base:keys?pick(object,keys):object,"with":function _with(object2,keys2){return object2=keys2?pick(object2,keys2):object2,extend(this.base,object2);}};},pick:pick,getKeysNotIn:function getKeysNotIn(obj,allowedKeys){var notAllowed=[];for(var key in obj){-1===allowedKeys.indexOf(key)&&notAllowed.push(key);}return notAllowed;},extend:extend,getOriginFromUrl:function getOriginFromUrl(url){if(url){var parsed=getLocationFromUrl(url),origin=parsed.protocol+"//"+parsed.hostname;return parsed.port&&(origin+=":"+parsed.port),origin;}},getLocationFromUrl:getLocationFromUrl,trimUserDetails:function trimUserDetails(options){return function(options,keys){return keys.reduce(trim,options);}(options,["username","email","phoneNumber"]);},updatePropertyOn:function updatePropertyOn(obj,path,value){"string"==typeof path&&(path=path.split("."));var next=path[0];obj.hasOwnProperty(next)&&(1===path.length?obj[next]=value:updatePropertyOn(obj[next],path.slice(1),value));}};function RequestWrapper(req){this.request=req,this.method=req.method,this.url=req.url,this.body=req._data,this.headers=req._header;}function RequestObj(req){this.request=req;}function RequestBuilder(options){this._sendTelemetry=!1!==options._sendTelemetry||options._sendTelemetry,this._telemetryInfo=options._telemetryInfo||null,this._timesToRetryFailedRequests=options._timesToRetryFailedRequests,this.headers=options.headers||{},this._universalLoginPage=options.universalLoginPage;}function getWindow(){return window;}RequestWrapper.prototype.abort=function(){this.request.abort();},RequestWrapper.prototype.getMethod=function(){return this.method;},RequestWrapper.prototype.getBody=function(){return this.body;},RequestWrapper.prototype.getUrl=function(){return this.url;},RequestWrapper.prototype.getHeaders=function(){return this.headers;},RequestObj.prototype.set=function(key,value){return this.request=this.request.set(key,value),this;},RequestObj.prototype.send=function(body){return this.request=this.request.send(objectHelper.trimUserDetails(body)),this;},RequestObj.prototype.withCredentials=function(){return this.request=this.request.withCredentials(),this;},RequestObj.prototype.end=function(cb){return this.request=this.request.end(cb),new RequestWrapper(this.request);},RequestBuilder.prototype.setCommonConfiguration=function(ongoingRequest,options){if(options=options||{},this._timesToRetryFailedRequests>0&&(ongoingRequest=ongoingRequest.retry(this._timesToRetryFailedRequests)),options.noHeaders)return ongoingRequest;var headers=this.headers;ongoingRequest=ongoingRequest.set("Content-Type","application/json");for(var keys=Object.keys(this.headers),a=0;a<keys.length;a++){ongoingRequest=ongoingRequest.set(keys[a],headers[keys[a]]);}return this._sendTelemetry&&(ongoingRequest=ongoingRequest.set("Auth0-Client",this.getTelemetryData())),ongoingRequest;},RequestBuilder.prototype.getTelemetryData=function(){var telemetryName=this._universalLoginPage?"auth0.js-ulp":"auth0.js",clientInfo={name:telemetryName,version:version.raw};this._telemetryInfo&&((clientInfo=objectHelper.extend({},this._telemetryInfo)).env=objectHelper.extend({},this._telemetryInfo.env),clientInfo.env[telemetryName]=version.raw);var jsonClientInfo=JSON.stringify(clientInfo);return base64Url.encode(jsonClientInfo);},RequestBuilder.prototype.get=function(url,options){return new RequestObj(this.setCommonConfiguration(client.get(url),options));},RequestBuilder.prototype.post=function(url,options){return new RequestObj(this.setCommonConfiguration(client.post(url),options));},RequestBuilder.prototype.patch=function(url,options){return new RequestObj(this.setCommonConfiguration(client.patch(url),options));};var windowHelper={redirect:function redirect(url){getWindow().location=url;},getDocument:function getDocument(){return getWindow().document;},getWindow:getWindow,getOrigin:function getOrigin(){var location=getWindow().location,origin=location.origin;return origin||(origin=objectHelper.getOriginFromUrl(location.href)),origin;}};function DummyStorage(){}DummyStorage.prototype.getItem=function(){return null;},DummyStorage.prototype.removeItem=function(){},DummyStorage.prototype.setItem=function(){};var js_cookie=createCommonjsModule(function(module,exports){var factory;factory=function factory(){function extend(){for(var i=0,result={};i<arguments.length;i++){var attributes=arguments[i];for(var key in attributes){result[key]=attributes[key];}}return result;}function decode(s){return s.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent);}return function init(converter){function api(){}function set(key,value,attributes){if("undefined"!=typeof document){"number"==typeof(attributes=extend({path:"/"},api.defaults,attributes)).expires&&(attributes.expires=new Date(1*new Date()+864e5*attributes.expires)),attributes.expires=attributes.expires?attributes.expires.toUTCString():"";try{var result=JSON.stringify(value);/^[\{\[]/.test(result)&&(value=result);}catch(e){}value=converter.write?converter.write(value,key):encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),key=encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var stringifiedAttributes="";for(var attributeName in attributes){attributes[attributeName]&&(stringifiedAttributes+="; "+attributeName,!0!==attributes[attributeName]&&(stringifiedAttributes+="="+attributes[attributeName].split(";")[0]));}return document.cookie=key+"="+value+stringifiedAttributes;}}function get(key,json){if("undefined"!=typeof document){for(var jar={},cookies=document.cookie?document.cookie.split("; "):[],i=0;i<cookies.length;i++){var parts=cookies[i].split("="),cookie=parts.slice(1).join("=");json||'"'!==cookie.charAt(0)||(cookie=cookie.slice(1,-1));try{var name=decode(parts[0]);if(cookie=(converter.read||converter)(cookie,name)||decode(cookie),json)try{cookie=JSON.parse(cookie);}catch(e){}if(jar[name]=cookie,key===name)break;}catch(e){}}return key?jar[key]:jar;}}return api.set=set,api.get=function(key){return get(key,!1);},api.getJSON=function(key){return get(key,!0);},api.remove=function(key,attributes){set(key,"",extend(attributes,{expires:-1}));},api.defaults={},api.withConverter=init,api;}(function(){});},module.exports=factory();});function CookieStorage(){}function Warn(options){this.disableWarnings=options.disableWarnings;}function StorageHandler(options){if(this.warn=new Warn({}),this.storage=new CookieStorage(),!0===options.__tryLocalStorageFirst)try{var localStorage=windowHelper.getWindow().localStorage;localStorage&&(this.storage=localStorage);}catch(e){this.warn.warning(e),this.warn.warning("Can't use localStorage. Using CookieStorage instead.");}}function Storage(options){this.handler=new StorageHandler(options);}function SSODataStorage(options){this.storage=new Storage(options);}function buildResponse(error,description){return{error:error,errorDescription:description};}CookieStorage.prototype.getItem=function(key){return js_cookie.get(key);},CookieStorage.prototype.removeItem=function(key){js_cookie.remove(key);},CookieStorage.prototype.setItem=function(key,value,options){var params=objectHelper.extend({expires:1},options);js_cookie.set(key,value,params);},Warn.prototype.warning=function(message){this.disableWarnings||console.warn(message);},StorageHandler.prototype.failover=function(){this.storage instanceof DummyStorage?this.warn.warning("DummyStorage: ignore failover"):this.storage instanceof CookieStorage?(this.warn.warning("CookieStorage: failing over DummyStorage"),this.storage=new DummyStorage()):(this.warn.warning("LocalStorage: failing over CookieStorage"),this.storage=new CookieStorage());},StorageHandler.prototype.getItem=function(key){try{return this.storage.getItem(key);}catch(e){return this.warn.warning(e),this.failover(),this.getItem(key);}},StorageHandler.prototype.removeItem=function(key){try{return this.storage.removeItem(key);}catch(e){return this.warn.warning(e),this.failover(),this.removeItem(key);}},StorageHandler.prototype.setItem=function(key,value,options){try{return this.storage.setItem(key,value,options);}catch(e){return this.warn.warning(e),this.failover(),this.setItem(key,value,options);}},Storage.prototype.getItem=function(key){var value=this.handler.getItem(key);try{return JSON.parse(value);}catch(_){return value;}},Storage.prototype.removeItem=function(key){return this.handler.removeItem(key);},Storage.prototype.setItem=function(key,value,options){var json=JSON.stringify(value);return this.handler.setItem(key,json,options);},SSODataStorage.prototype.set=function(connection,sub){var ssodata={lastUsedConnection:connection,lastUsedSub:sub};this.storage.setItem("auth0.ssodata",JSON.stringify(ssodata));},SSODataStorage.prototype.get=function(){var ssodata=this.storage.getItem("auth0.ssodata");if(ssodata)return JSON.parse(ssodata);};var error={buildResponse:buildResponse,invalidToken:function invalidToken(description){return buildResponse("invalid_token",description);}};function wrapCallback(cb,options){return(options=options||{}).ignoreCasing=!!options.ignoreCasing&&options.ignoreCasing,function(err,data){var errObj;return err||data?(!err&&data.err&&(err=data.err,data=null),!err&&data.error&&(err=data,data=null),err?(errObj={original:err},objectHelper.updatePropertyOn(errObj,"original.response.req._data.password","*****"),err.response&&err.response.statusCode&&(errObj.statusCode=err.response.statusCode),err.response&&err.response.statusText&&(errObj.statusText=err.response.statusText),err.response&&err.response.body&&(err=err.response.body),err.err&&(err=err.err),errObj.code=err.code||err.error||err.error_code||err.status||null,errObj.description=err.errorDescription||err.error_description||err.description||err.error||err.details||err.err||null,options.forceLegacyError&&(errObj.error=errObj.code,errObj.error_description=errObj.description),err.error_codes&&err.error_details&&(errObj.errorDetails={codes:err.error_codes,details:err.error_details}),err.name&&(errObj.name=err.name),err.policy&&(errObj.policy=err.policy),cb(errObj)):!data.type||"text/html"!==data.type&&"text/plain"!==data.type?options.ignoreCasing?cb(null,data.body||data):cb(null,objectHelper.toCamelCase(data.body||data,[],{keepOriginal:options.keepOriginalCasing})):cb(null,data.text)):cb(error.buildResponse("generic_error","Something went wrong"));};}var tokenParams=["realm","audience","client_id","client_secret","redirect_uri","scope","code","grant_type","username","password","refresh_token","assertion","client_assertion","client_assertion_type","code_verifier"],authorizeParams=["connection","connection_scope","auth0Client","owp","device","realm","protocol","_csrf","_intstate","login_ticket","client_id","response_type","response_mode","redirect_uri","audience","scope","state","nonce","display","prompt","screen_hint","max_age","ui_locales","claims_locales","id_token_hint","login_hint","acr_values","claims","registration","request","request_uri","code_challenge","code_challenge_method","access_type","display"];var parametersWhitelist={oauthTokenParams:function oauthTokenParams(warn,params){return objectHelper.pick(params,tokenParams);},oauthAuthorizeParams:function oauthAuthorizeParams(warn,params){var notAllowed=objectHelper.getKeysNotIn(params,authorizeParams);return notAllowed.length>0&&warn.warning("Following parameters are not allowed on the `/authorize` endpoint: ["+notAllowed.join(",")+"]"),params;}},t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function e(t,e){return t(e={exports:{}},e.exports),e.exports;}var r=e(function(t,e){var r;t.exports=r=r||function(t,e){var r=Object.create||function(){function t(){}return function(e){var r;return t.prototype=e,r=new t(),t.prototype=null,r;};}(),i={},n=i.lib={},o=n.Base={extend:function extend(t){var e=r(this);return t&&e.mixIn(t),e.hasOwnProperty("init")&&this.init!==e.init||(e.init=function(){e.$super.init.apply(this,arguments);}),e.init.prototype=e,e.$super=this,e;},create:function create(){var t=this.extend();return t.init.apply(t,arguments),t;},init:function init(){},mixIn:function mixIn(t){for(var e in t){t.hasOwnProperty(e)&&(this[e]=t[e]);}t.hasOwnProperty("toString")&&(this.toString=t.toString);},clone:function clone(){return this.init.prototype.extend(this);}},s=n.WordArray=o.extend({init:function init(t,e){t=this.words=t||[],this.sigBytes=null!=e?e:4*t.length;},toString:function toString(t){return(t||a).stringify(this);},concat:function concat(t){var e=this.words,r=t.words,i=this.sigBytes,n=t.sigBytes;if(this.clamp(),i%4)for(var o=0;o<n;o++){e[i+o>>>2]|=(r[o>>>2]>>>24-o%4*8&255)<<24-(i+o)%4*8;}else for(o=0;o<n;o+=4){e[i+o>>>2]=r[o>>>2];}return this.sigBytes+=n,this;},clamp:function clamp(){var e=this.words,r=this.sigBytes;e[r>>>2]&=4294967295<<32-r%4*8,e.length=t.ceil(r/4);},clone:function clone(){var t=o.clone.call(this);return t.words=this.words.slice(0),t;},random:function random(e){for(var r,i=[],n=function n(e){e=e;var r=987654321,i=4294967295;return function(){var n=((r=36969*(65535&r)+(r>>16)&i)<<16)+(e=18e3*(65535&e)+(e>>16)&i)&i;return n/=4294967296,(n+=.5)*(t.random()>.5?1:-1);};},o=0;o<e;o+=4){var h=n(4294967296*(r||t.random()));r=987654071*h(),i.push(4294967296*h()|0);}return new s.init(i,e);}}),h=i.enc={},a=h.Hex={stringify:function stringify(t){for(var e=t.words,r=t.sigBytes,i=[],n=0;n<r;n++){var o=e[n>>>2]>>>24-n%4*8&255;i.push((o>>>4).toString(16)),i.push((15&o).toString(16));}return i.join("");},parse:function parse(t){for(var e=t.length,r=[],i=0;i<e;i+=2){r[i>>>3]|=parseInt(t.substr(i,2),16)<<24-i%8*4;}return new s.init(r,e/2);}},u=h.Latin1={stringify:function stringify(t){for(var e=t.words,r=t.sigBytes,i=[],n=0;n<r;n++){i.push(String.fromCharCode(e[n>>>2]>>>24-n%4*8&255));}return i.join("");},parse:function parse(t){for(var e=t.length,r=[],i=0;i<e;i++){r[i>>>2]|=(255&t.charCodeAt(i))<<24-i%4*8;}return new s.init(r,e);}},f=h.Utf8={stringify:function stringify(t){try{return decodeURIComponent(escape(u.stringify(t)));}catch(t){throw new Error("Malformed UTF-8 data");}},parse:function parse(t){return u.parse(unescape(encodeURIComponent(t)));}},c=n.BufferedBlockAlgorithm=o.extend({reset:function reset(){this._data=new s.init(),this._nDataBytes=0;},_append:function _append(t){"string"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes;},_process:function _process(e){var r=this._data,i=r.words,n=r.sigBytes,o=this.blockSize,h=n/(4*o),a=(h=e?t.ceil(h):t.max((0|h)-this._minBufferSize,0))*o,u=t.min(4*a,n);if(a){for(var f=0;f<a;f+=o){this._doProcessBlock(i,f);}var c=i.splice(0,a);r.sigBytes-=u;}return new s.init(c,u);},clone:function clone(){var t=o.clone.call(this);return t._data=this._data.clone(),t;},_minBufferSize:0}),p=(n.Hasher=c.extend({cfg:o.extend(),init:function init(t){this.cfg=this.cfg.extend(t),this.reset();},reset:function reset(){c.reset.call(this),this._doReset();},update:function update(t){return this._append(t),this._process(),this;},finalize:function finalize(t){return t&&this._append(t),this._doFinalize();},blockSize:16,_createHelper:function _createHelper(t){return function(e,r){return new t.init(r).finalize(e);};},_createHmacHelper:function _createHmacHelper(t){return function(e,r){return new p.HMAC.init(t,r).finalize(e);};}}),i.algo={});return i;}(Math);}),i$1=e(function(t,e){var i;t.exports=(i=r,function(t){var e=i,r=e.lib,n=r.WordArray,o=r.Hasher,s=e.algo,h=[],a=[];!function(){function e(e){for(var r=t.sqrt(e),i=2;i<=r;i++){if(!(e%i))return!1;}return!0;}function r(t){return 4294967296*(t-(0|t))|0;}for(var i=2,n=0;n<64;){e(i)&&(n<8&&(h[n]=r(t.pow(i,.5))),a[n]=r(t.pow(i,1/3)),n++),i++;}}();var u=[],f=s.SHA256=o.extend({_doReset:function _doReset(){this._hash=new n.init(h.slice(0));},_doProcessBlock:function _doProcessBlock(t,e){for(var r=this._hash.words,i=r[0],n=r[1],o=r[2],s=r[3],h=r[4],f=r[5],c=r[6],p=r[7],l=0;l<64;l++){if(l<16)u[l]=0|t[e+l];else{var d=u[l-15],m=u[l-2];u[l]=((d<<25|d>>>7)^(d<<14|d>>>18)^d>>>3)+u[l-7]+((m<<15|m>>>17)^(m<<13|m>>>19)^m>>>10)+u[l-16];}var v=i&n^i&o^n&o,y=p+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&f^~h&c)+a[l]+u[l];p=c,c=f,f=h,h=s+y|0,s=o,o=n,n=i,i=y+(((i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22))+v)|0;}r[0]=r[0]+i|0,r[1]=r[1]+n|0,r[2]=r[2]+o|0,r[3]=r[3]+s|0,r[4]=r[4]+h|0,r[5]=r[5]+f|0,r[6]=r[6]+c|0,r[7]=r[7]+p|0;},_doFinalize:function _doFinalize(){var e=this._data,r=e.words,i=8*this._nDataBytes,n=8*e.sigBytes;return r[n>>>5]|=128<<24-n%32,r[14+(n+64>>>9<<4)]=t.floor(i/4294967296),r[15+(n+64>>>9<<4)]=i,e.sigBytes=4*r.length,this._process(),this._hash;},clone:function clone(){var t=o.clone.call(this);return t._hash=this._hash.clone(),t;}});e.SHA256=o._createHelper(f),e.HmacSHA256=o._createHmacHelper(f);}(Math),i.SHA256);}),n=e(function(t,e){var i,n;t.exports=(n=(i=r).lib.WordArray,i.enc.Base64={stringify:function stringify(t){var e=t.words,r=t.sigBytes,i=this._map;t.clamp();for(var n=[],o=0;o<r;o+=3){for(var s=(e[o>>>2]>>>24-o%4*8&255)<<16|(e[o+1>>>2]>>>24-(o+1)%4*8&255)<<8|e[o+2>>>2]>>>24-(o+2)%4*8&255,h=0;h<4&&o+.75*h<r;h++){n.push(i.charAt(s>>>6*(3-h)&63));}}var a=i.charAt(64);if(a)for(;n.length%4;){n.push(a);}return n.join("");},parse:function parse(t){var e=t.length,r=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var o=0;o<r.length;o++){i[r.charCodeAt(o)]=o;}}var s=r.charAt(64);if(s){var h=t.indexOf(s);-1!==h&&(e=h);}return function(t,e,r){for(var i=[],o=0,s=0;s<e;s++){if(s%4){var h=r[t.charCodeAt(s-1)]<<s%4*2,a=r[t.charCodeAt(s)]>>>6-s%4*2;i[o>>>2]|=(h|a)<<24-o%4*8,o++;}}return n.create(i,o);}(t,e,i);},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="},i.enc.Base64);}),o=e(function(t,e){t.exports=r.enc.Hex;}),s=e(function(e,r){(function(){var t;function r(t,e,r){null!=t&&("number"==typeof t?this.fromNumber(t,e,r):this.fromString(t,null==e&&"string"!=typeof t?256:e));}function i(){return new r(null);}var n="undefined"!=typeof navigator;n&&"Microsoft Internet Explorer"==navigator.appName?(r.prototype.am=function(t,e,r,i,n,o){for(var s=32767&e,h=e>>15;--o>=0;){var a=32767&this[t],u=this[t++]>>15,f=h*a+u*s;n=((a=s*a+((32767&f)<<15)+r[i]+(1073741823&n))>>>30)+(f>>>15)+h*u+(n>>>30),r[i++]=1073741823&a;}return n;},t=30):n&&"Netscape"!=navigator.appName?(r.prototype.am=function(t,e,r,i,n,o){for(;--o>=0;){var s=e*this[t++]+r[i]+n;n=Math.floor(s/67108864),r[i++]=67108863&s;}return n;},t=26):(r.prototype.am=function(t,e,r,i,n,o){for(var s=16383&e,h=e>>14;--o>=0;){var a=16383&this[t],u=this[t++]>>14,f=h*a+u*s;n=((a=s*a+((16383&f)<<14)+r[i]+n)>>28)+(f>>14)+h*u,r[i++]=268435455&a;}return n;},t=28),r.prototype.DB=t,r.prototype.DM=(1<<t)-1,r.prototype.DV=1<<t,r.prototype.FV=Math.pow(2,52),r.prototype.F1=52-t,r.prototype.F2=2*t-52;var o,s,h="0123456789abcdefghijklmnopqrstuvwxyz",a=new Array();for(o="0".charCodeAt(0),s=0;s<=9;++s){a[o++]=s;}for(o="a".charCodeAt(0),s=10;s<36;++s){a[o++]=s;}for(o="A".charCodeAt(0),s=10;s<36;++s){a[o++]=s;}function u(t){return h.charAt(t);}function f(t,e){var r=a[t.charCodeAt(e)];return null==r?-1:r;}function c(t){var e=i();return e.fromInt(t),e;}function p(t){var e,r=1;return 0!=(e=t>>>16)&&(t=e,r+=16),0!=(e=t>>8)&&(t=e,r+=8),0!=(e=t>>4)&&(t=e,r+=4),0!=(e=t>>2)&&(t=e,r+=2),0!=(e=t>>1)&&(t=e,r+=1),r;}function l(t){this.m=t;}function d(t){this.m=t,this.mp=t.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t;}function m(t,e){return t&e;}function v(t,e){return t|e;}function y(t,e){return t^e;}function g(t,e){return t&~e;}function w(t){if(0==t)return-1;var e=0;return 0==(65535&t)&&(t>>=16,e+=16),0==(255&t)&&(t>>=8,e+=8),0==(15&t)&&(t>>=4,e+=4),0==(3&t)&&(t>>=2,e+=2),0==(1&t)&&++e,e;}function T(t){for(var e=0;0!=t;){t&=t-1,++e;}return e;}function b(){}function _(t){return t;}function A(t){this.r2=i(),this.q3=i(),r.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t;}l.prototype.convert=function(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t;},l.prototype.revert=function(t){return t;},l.prototype.reduce=function(t){t.divRemTo(this.m,null,t);},l.prototype.mulTo=function(t,e,r){t.multiplyTo(e,r),this.reduce(r);},l.prototype.sqrTo=function(t,e){t.squareTo(e),this.reduce(e);},d.prototype.convert=function(t){var e=i();return t.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),t.s<0&&e.compareTo(r.ZERO)>0&&this.m.subTo(e,e),e;},d.prototype.revert=function(t){var e=i();return t.copyTo(e),this.reduce(e),e;},d.prototype.reduce=function(t){for(;t.t<=this.mt2;){t[t.t++]=0;}for(var e=0;e<this.m.t;++e){var r=32767&t[e],i=r*this.mpl+((r*this.mph+(t[e]>>15)*this.mpl&this.um)<<15)&t.DM;for(t[r=e+this.m.t]+=this.m.am(0,i,t,e,0,this.m.t);t[r]>=t.DV;){t[r]-=t.DV,t[++r]++;}}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t);},d.prototype.mulTo=function(t,e,r){t.multiplyTo(e,r),this.reduce(r);},d.prototype.sqrTo=function(t,e){t.squareTo(e),this.reduce(e);},r.prototype.copyTo=function(t){for(var e=this.t-1;e>=0;--e){t[e]=this[e];}t.t=this.t,t.s=this.s;},r.prototype.fromInt=function(t){this.t=1,this.s=t<0?-1:0,t>0?this[0]=t:t<-1?this[0]=t+this.DV:this.t=0;},r.prototype.fromString=function(t,e){var i;if(16==e)i=4;else if(8==e)i=3;else if(256==e)i=8;else if(2==e)i=1;else if(32==e)i=5;else{if(4!=e)return void this.fromRadix(t,e);i=2;}this.t=0,this.s=0;for(var n=t.length,o=!1,s=0;--n>=0;){var h=8==i?255&t[n]:f(t,n);h<0?"-"==t.charAt(n)&&(o=!0):(o=!1,0==s?this[this.t++]=h:s+i>this.DB?(this[this.t-1]|=(h&(1<<this.DB-s)-1)<<s,this[this.t++]=h>>this.DB-s):this[this.t-1]|=h<<s,(s+=i)>=this.DB&&(s-=this.DB));}8==i&&0!=(128&t[0])&&(this.s=-1,s>0&&(this[this.t-1]|=(1<<this.DB-s)-1<<s)),this.clamp(),o&&r.ZERO.subTo(this,this);},r.prototype.clamp=function(){for(var t=this.s&this.DM;this.t>0&&this[this.t-1]==t;){--this.t;}},r.prototype.dlShiftTo=function(t,e){var r;for(r=this.t-1;r>=0;--r){e[r+t]=this[r];}for(r=t-1;r>=0;--r){e[r]=0;}e.t=this.t+t,e.s=this.s;},r.prototype.drShiftTo=function(t,e){for(var r=t;r<this.t;++r){e[r-t]=this[r];}e.t=Math.max(this.t-t,0),e.s=this.s;},r.prototype.lShiftTo=function(t,e){var r,i=t%this.DB,n=this.DB-i,o=(1<<n)-1,s=Math.floor(t/this.DB),h=this.s<<i&this.DM;for(r=this.t-1;r>=0;--r){e[r+s+1]=this[r]>>n|h,h=(this[r]&o)<<i;}for(r=s-1;r>=0;--r){e[r]=0;}e[s]=h,e.t=this.t+s+1,e.s=this.s,e.clamp();},r.prototype.rShiftTo=function(t,e){e.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t)e.t=0;else{var i=t%this.DB,n=this.DB-i,o=(1<<i)-1;e[0]=this[r]>>i;for(var s=r+1;s<this.t;++s){e[s-r-1]|=(this[s]&o)<<n,e[s-r]=this[s]>>i;}i>0&&(e[this.t-r-1]|=(this.s&o)<<n),e.t=this.t-r,e.clamp();}},r.prototype.subTo=function(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;){i+=this[r]-t[r],e[r++]=i&this.DM,i>>=this.DB;}if(t.t<this.t){for(i-=t.s;r<this.t;){i+=this[r],e[r++]=i&this.DM,i>>=this.DB;}i+=this.s;}else{for(i+=this.s;r<t.t;){i-=t[r],e[r++]=i&this.DM,i>>=this.DB;}i-=t.s;}e.s=i<0?-1:0,i<-1?e[r++]=this.DV+i:i>0&&(e[r++]=i),e.t=r,e.clamp();},r.prototype.multiplyTo=function(t,e){var i=this.abs(),n=t.abs(),o=i.t;for(e.t=o+n.t;--o>=0;){e[o]=0;}for(o=0;o<n.t;++o){e[o+i.t]=i.am(0,n[o],e,o,0,i.t);}e.s=0,e.clamp(),this.s!=t.s&&r.ZERO.subTo(e,e);},r.prototype.squareTo=function(t){for(var e=this.abs(),r=t.t=2*e.t;--r>=0;){t[r]=0;}for(r=0;r<e.t-1;++r){var i=e.am(r,e[r],t,2*r,0,1);(t[r+e.t]+=e.am(r+1,2*e[r],t,2*r+1,i,e.t-r-1))>=e.DV&&(t[r+e.t]-=e.DV,t[r+e.t+1]=1);}t.t>0&&(t[t.t-1]+=e.am(r,e[r],t,2*r,0,1)),t.s=0,t.clamp();},r.prototype.divRemTo=function(t,e,n){var o=t.abs();if(!(o.t<=0)){var s=this.abs();if(s.t<o.t)return null!=e&&e.fromInt(0),void(null!=n&&this.copyTo(n));null==n&&(n=i());var h=i(),a=this.s,u=t.s,f=this.DB-p(o[o.t-1]);f>0?(o.lShiftTo(f,h),s.lShiftTo(f,n)):(o.copyTo(h),s.copyTo(n));var c=h.t,l=h[c-1];if(0!=l){var d=l*(1<<this.F1)+(c>1?h[c-2]>>this.F2:0),m=this.FV/d,v=(1<<this.F1)/d,y=1<<this.F2,g=n.t,w=g-c,T=null==e?i():e;for(h.dlShiftTo(w,T),n.compareTo(T)>=0&&(n[n.t++]=1,n.subTo(T,n)),r.ONE.dlShiftTo(c,T),T.subTo(h,h);h.t<c;){h[h.t++]=0;}for(;--w>=0;){var b=n[--g]==l?this.DM:Math.floor(n[g]*m+(n[g-1]+y)*v);if((n[g]+=h.am(0,b,n,w,0,c))<b)for(h.dlShiftTo(w,T),n.subTo(T,n);n[g]<--b;){n.subTo(T,n);}}null!=e&&(n.drShiftTo(c,e),a!=u&&r.ZERO.subTo(e,e)),n.t=c,n.clamp(),f>0&&n.rShiftTo(f,n),a<0&&r.ZERO.subTo(n,n);}}},r.prototype.invDigit=function(){if(this.t<1)return 0;var t=this[0];if(0==(1&t))return 0;var e=3&t;return(e=(e=(e=(e=e*(2-(15&t)*e)&15)*(2-(255&t)*e)&255)*(2-((65535&t)*e&65535))&65535)*(2-t*e%this.DV)%this.DV)>0?this.DV-e:-e;},r.prototype.isEven=function(){return 0==(this.t>0?1&this[0]:this.s);},r.prototype.exp=function(t,e){if(t>4294967295||t<1)return r.ONE;var n=i(),o=i(),s=e.convert(this),h=p(t)-1;for(s.copyTo(n);--h>=0;){if(e.sqrTo(n,o),(t&1<<h)>0)e.mulTo(o,s,n);else{var a=n;n=o,o=a;}}return e.revert(n);},r.prototype.toString=function(t){if(this.s<0)return"-"+this.negate().toString(t);var e;if(16==t)e=4;else if(8==t)e=3;else if(2==t)e=1;else if(32==t)e=5;else{if(4!=t)return this.toRadix(t);e=2;}var r,i=(1<<e)-1,n=!1,o="",s=this.t,h=this.DB-s*this.DB%e;if(s-->0)for(h<this.DB&&(r=this[s]>>h)>0&&(n=!0,o=u(r));s>=0;){h<e?(r=(this[s]&(1<<h)-1)<<e-h,r|=this[--s]>>(h+=this.DB-e)):(r=this[s]>>(h-=e)&i,h<=0&&(h+=this.DB,--s)),r>0&&(n=!0),n&&(o+=u(r));}return n?o:"0";},r.prototype.negate=function(){var t=i();return r.ZERO.subTo(this,t),t;},r.prototype.abs=function(){return this.s<0?this.negate():this;},r.prototype.compareTo=function(t){var e=this.s-t.s;if(0!=e)return e;var r=this.t;if(0!=(e=r-t.t))return this.s<0?-e:e;for(;--r>=0;){if(0!=(e=this[r]-t[r]))return e;}return 0;},r.prototype.bitLength=function(){return this.t<=0?0:this.DB*(this.t-1)+p(this[this.t-1]^this.s&this.DM);},r.prototype.mod=function(t){var e=i();return this.abs().divRemTo(t,null,e),this.s<0&&e.compareTo(r.ZERO)>0&&t.subTo(e,e),e;},r.prototype.modPowInt=function(t,e){var r;return r=t<256||e.isEven()?new l(e):new d(e),this.exp(t,r);},r.ZERO=c(0),r.ONE=c(1),b.prototype.convert=_,b.prototype.revert=_,b.prototype.mulTo=function(t,e,r){t.multiplyTo(e,r);},b.prototype.sqrTo=function(t,e){t.squareTo(e);},A.prototype.convert=function(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var e=i();return t.copyTo(e),this.reduce(e),e;},A.prototype.revert=function(t){return t;},A.prototype.reduce=function(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;){t.dAddOffset(1,this.m.t+1);}for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;){t.subTo(this.m,t);}},A.prototype.mulTo=function(t,e,r){t.multiplyTo(e,r),this.reduce(r);},A.prototype.sqrTo=function(t,e){t.squareTo(e),this.reduce(e);};var S,D,B,x=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],k=(1<<26)/x[x.length-1];function E(){var t;t=new Date().getTime(),D[B++]^=255&t,D[B++]^=t>>8&255,D[B++]^=t>>16&255,D[B++]^=t>>24&255,B>=N&&(B-=N);}if(r.prototype.chunkSize=function(t){return Math.floor(Math.LN2*this.DB/Math.log(t));},r.prototype.toRadix=function(t){if(null==t&&(t=10),0==this.signum()||t<2||t>36)return"0";var e=this.chunkSize(t),r=Math.pow(t,e),n=c(r),o=i(),s=i(),h="";for(this.divRemTo(n,o,s);o.signum()>0;){h=(r+s.intValue()).toString(t).substr(1)+h,o.divRemTo(n,o,s);}return s.intValue().toString(t)+h;},r.prototype.fromRadix=function(t,e){this.fromInt(0),null==e&&(e=10);for(var i=this.chunkSize(e),n=Math.pow(e,i),o=!1,s=0,h=0,a=0;a<t.length;++a){var u=f(t,a);u<0?"-"==t.charAt(a)&&0==this.signum()&&(o=!0):(h=e*h+u,++s>=i&&(this.dMultiply(n),this.dAddOffset(h,0),s=0,h=0));}s>0&&(this.dMultiply(Math.pow(e,s)),this.dAddOffset(h,0)),o&&r.ZERO.subTo(this,this);},r.prototype.fromNumber=function(t,e,i){if("number"==typeof e){if(t<2)this.fromInt(1);else for(this.fromNumber(t,i),this.testBit(t-1)||this.bitwiseTo(r.ONE.shiftLeft(t-1),v,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);){this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(r.ONE.shiftLeft(t-1),this);}}else{var n=new Array(),o=7&t;n.length=1+(t>>3),e.nextBytes(n),o>0?n[0]&=(1<<o)-1:n[0]=0,this.fromString(n,256);}},r.prototype.bitwiseTo=function(t,e,r){var i,n,o=Math.min(t.t,this.t);for(i=0;i<o;++i){r[i]=e(this[i],t[i]);}if(t.t<this.t){for(n=t.s&this.DM,i=o;i<this.t;++i){r[i]=e(this[i],n);}r.t=this.t;}else{for(n=this.s&this.DM,i=o;i<t.t;++i){r[i]=e(n,t[i]);}r.t=t.t;}r.s=e(this.s,t.s),r.clamp();},r.prototype.changeBit=function(t,e){var i=r.ONE.shiftLeft(t);return this.bitwiseTo(i,e,i),i;},r.prototype.addTo=function(t,e){for(var r=0,i=0,n=Math.min(t.t,this.t);r<n;){i+=this[r]+t[r],e[r++]=i&this.DM,i>>=this.DB;}if(t.t<this.t){for(i+=t.s;r<this.t;){i+=this[r],e[r++]=i&this.DM,i>>=this.DB;}i+=this.s;}else{for(i+=this.s;r<t.t;){i+=t[r],e[r++]=i&this.DM,i>>=this.DB;}i+=t.s;}e.s=i<0?-1:0,i>0?e[r++]=i:i<-1&&(e[r++]=this.DV+i),e.t=r,e.clamp();},r.prototype.dMultiply=function(t){this[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp();},r.prototype.dAddOffset=function(t,e){if(0!=t){for(;this.t<=e;){this[this.t++]=0;}for(this[e]+=t;this[e]>=this.DV;){this[e]-=this.DV,++e>=this.t&&(this[this.t++]=0),++this[e];}}},r.prototype.multiplyLowerTo=function(t,e,r){var i,n=Math.min(this.t+t.t,e);for(r.s=0,r.t=n;n>0;){r[--n]=0;}for(i=r.t-this.t;n<i;++n){r[n+this.t]=this.am(0,t[n],r,n,0,this.t);}for(i=Math.min(t.t,e);n<i;++n){this.am(0,t[n],r,n,0,e-n);}r.clamp();},r.prototype.multiplyUpperTo=function(t,e,r){var i=r.t=this.t+t.t- --e;for(r.s=0;--i>=0;){r[i]=0;}for(i=Math.max(e-this.t,0);i<t.t;++i){r[this.t+i-e]=this.am(e-i,t[i],r,0,0,this.t+i-e);}r.clamp(),r.drShiftTo(1,r);},r.prototype.modInt=function(t){if(t<=0)return 0;var e=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(0==e)r=this[0]%t;else for(var i=this.t-1;i>=0;--i){r=(e*r+this[i])%t;}return r;},r.prototype.millerRabin=function(t){var e=this.subtract(r.ONE),n=e.getLowestSetBit();if(n<=0)return!1;var o=e.shiftRight(n);(t=t+1>>1)>x.length&&(t=x.length);for(var s=i(),h=0;h<t;++h){s.fromInt(x[Math.floor(Math.random()*x.length)]);var a=s.modPow(o,this);if(0!=a.compareTo(r.ONE)&&0!=a.compareTo(e)){for(var u=1;u++<n&&0!=a.compareTo(e);){if(0==(a=a.modPowInt(2,this)).compareTo(r.ONE))return!1;}if(0!=a.compareTo(e))return!1;}}return!0;},r.prototype.clone=function(){var t=i();return this.copyTo(t),t;},r.prototype.intValue=function(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1;}else{if(1==this.t)return this[0];if(0==this.t)return 0;}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0];},r.prototype.byteValue=function(){return 0==this.t?this.s:this[0]<<24>>24;},r.prototype.shortValue=function(){return 0==this.t?this.s:this[0]<<16>>16;},r.prototype.signum=function(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1;},r.prototype.toByteArray=function(){var t=this.t,e=new Array();e[0]=this.s;var r,i=this.DB-t*this.DB%8,n=0;if(t-->0)for(i<this.DB&&(r=this[t]>>i)!=(this.s&this.DM)>>i&&(e[n++]=r|this.s<<this.DB-i);t>=0;){i<8?(r=(this[t]&(1<<i)-1)<<8-i,r|=this[--t]>>(i+=this.DB-8)):(r=this[t]>>(i-=8)&255,i<=0&&(i+=this.DB,--t)),0!=(128&r)&&(r|=-256),0==n&&(128&this.s)!=(128&r)&&++n,(n>0||r!=this.s)&&(e[n++]=r);}return e;},r.prototype.equals=function(t){return 0==this.compareTo(t);},r.prototype.min=function(t){return this.compareTo(t)<0?this:t;},r.prototype.max=function(t){return this.compareTo(t)>0?this:t;},r.prototype.and=function(t){var e=i();return this.bitwiseTo(t,m,e),e;},r.prototype.or=function(t){var e=i();return this.bitwiseTo(t,v,e),e;},r.prototype.xor=function(t){var e=i();return this.bitwiseTo(t,y,e),e;},r.prototype.andNot=function(t){var e=i();return this.bitwiseTo(t,g,e),e;},r.prototype.not=function(){for(var t=i(),e=0;e<this.t;++e){t[e]=this.DM&~this[e];}return t.t=this.t,t.s=~this.s,t;},r.prototype.shiftLeft=function(t){var e=i();return t<0?this.rShiftTo(-t,e):this.lShiftTo(t,e),e;},r.prototype.shiftRight=function(t){var e=i();return t<0?this.lShiftTo(-t,e):this.rShiftTo(t,e),e;},r.prototype.getLowestSetBit=function(){for(var t=0;t<this.t;++t){if(0!=this[t])return t*this.DB+w(this[t]);}return this.s<0?this.t*this.DB:-1;},r.prototype.bitCount=function(){for(var t=0,e=this.s&this.DM,r=0;r<this.t;++r){t+=T(this[r]^e);}return t;},r.prototype.testBit=function(t){var e=Math.floor(t/this.DB);return e>=this.t?0!=this.s:0!=(this[e]&1<<t%this.DB);},r.prototype.setBit=function(t){return this.changeBit(t,v);},r.prototype.clearBit=function(t){return this.changeBit(t,g);},r.prototype.flipBit=function(t){return this.changeBit(t,y);},r.prototype.add=function(t){var e=i();return this.addTo(t,e),e;},r.prototype.subtract=function(t){var e=i();return this.subTo(t,e),e;},r.prototype.multiply=function(t){var e=i();return this.multiplyTo(t,e),e;},r.prototype.divide=function(t){var e=i();return this.divRemTo(t,e,null),e;},r.prototype.remainder=function(t){var e=i();return this.divRemTo(t,null,e),e;},r.prototype.divideAndRemainder=function(t){var e=i(),r=i();return this.divRemTo(t,e,r),new Array(e,r);},r.prototype.modPow=function(t,e){var r,n,o=t.bitLength(),s=c(1);if(o<=0)return s;r=o<18?1:o<48?3:o<144?4:o<768?5:6,n=o<8?new l(e):e.isEven()?new A(e):new d(e);var h=new Array(),a=3,u=r-1,f=(1<<r)-1;if(h[1]=n.convert(this),r>1){var m=i();for(n.sqrTo(h[1],m);a<=f;){h[a]=i(),n.mulTo(m,h[a-2],h[a]),a+=2;}}var v,y,g=t.t-1,w=!0,T=i();for(o=p(t[g])-1;g>=0;){for(o>=u?v=t[g]>>o-u&f:(v=(t[g]&(1<<o+1)-1)<<u-o,g>0&&(v|=t[g-1]>>this.DB+o-u)),a=r;0==(1&v);){v>>=1,--a;}if((o-=a)<0&&(o+=this.DB,--g),w)h[v].copyTo(s),w=!1;else{for(;a>1;){n.sqrTo(s,T),n.sqrTo(T,s),a-=2;}a>0?n.sqrTo(s,T):(y=s,s=T,T=y),n.mulTo(T,h[v],s);}for(;g>=0&&0==(t[g]&1<<o);){n.sqrTo(s,T),y=s,s=T,T=y,--o<0&&(o=this.DB-1,--g);}}return n.revert(s);},r.prototype.modInverse=function(t){var e=t.isEven();if(this.isEven()&&e||0==t.signum())return r.ZERO;for(var i=t.clone(),n=this.clone(),o=c(1),s=c(0),h=c(0),a=c(1);0!=i.signum();){for(;i.isEven();){i.rShiftTo(1,i),e?(o.isEven()&&s.isEven()||(o.addTo(this,o),s.subTo(t,s)),o.rShiftTo(1,o)):s.isEven()||s.subTo(t,s),s.rShiftTo(1,s);}for(;n.isEven();){n.rShiftTo(1,n),e?(h.isEven()&&a.isEven()||(h.addTo(this,h),a.subTo(t,a)),h.rShiftTo(1,h)):a.isEven()||a.subTo(t,a),a.rShiftTo(1,a);}i.compareTo(n)>=0?(i.subTo(n,i),e&&o.subTo(h,o),s.subTo(a,s)):(n.subTo(i,n),e&&h.subTo(o,h),a.subTo(s,a));}return 0!=n.compareTo(r.ONE)?r.ZERO:a.compareTo(t)>=0?a.subtract(t):a.signum()<0?(a.addTo(t,a),a.signum()<0?a.add(t):a):a;},r.prototype.pow=function(t){return this.exp(t,new b());},r.prototype.gcd=function(t){var e=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(e.compareTo(r)<0){var i=e;e=r,r=i;}var n=e.getLowestSetBit(),o=r.getLowestSetBit();if(o<0)return e;for(n<o&&(o=n),o>0&&(e.rShiftTo(o,e),r.rShiftTo(o,r));e.signum()>0;){(n=e.getLowestSetBit())>0&&e.rShiftTo(n,e),(n=r.getLowestSetBit())>0&&r.rShiftTo(n,r),e.compareTo(r)>=0?(e.subTo(r,e),e.rShiftTo(1,e)):(r.subTo(e,r),r.rShiftTo(1,r));}return o>0&&r.lShiftTo(o,r),r;},r.prototype.isProbablePrime=function(t){var e,r=this.abs();if(1==r.t&&r[0]<=x[x.length-1]){for(e=0;e<x.length;++e){if(r[0]==x[e])return!0;}return!1;}if(r.isEven())return!1;for(e=1;e<x.length;){for(var i=x[e],n=e+1;n<x.length&&i<k;){i*=x[n++];}for(i=r.modInt(i);e<n;){if(i%x[e++]==0)return!1;}}return r.millerRabin(t);},r.prototype.square=function(){var t=i();return this.squareTo(t),t;},r.prototype.Barrett=A,null==D){var M;if(D=new Array(),B=0,"undefined"!=typeof window&&window.crypto)if(window.crypto.getRandomValues){var I=new Uint8Array(32);for(window.crypto.getRandomValues(I),M=0;M<32;++M){D[B++]=I[M];}}else if("Netscape"==navigator.appName&&navigator.appVersion<"5"){var C=window.crypto.random(32);for(M=0;M<C.length;++M){D[B++]=255&C.charCodeAt(M);}}for(;B<N;){M=Math.floor(65536*Math.random()),D[B++]=M>>>8,D[B++]=255&M;}B=0,E();}function R(){if(null==S){for(E(),(S=new O()).init(D),B=0;B<D.length;++B){D[B]=0;}B=0;}return S.next();}function j(){}function O(){this.i=0,this.j=0,this.S=new Array();}j.prototype.nextBytes=function(t){var e;for(e=0;e<t.length;++e){t[e]=R();}},O.prototype.init=function(t){var e,r,i;for(e=0;e<256;++e){this.S[e]=e;}for(r=0,e=0;e<256;++e){i=this.S[e],this.S[e]=this.S[r=r+this.S[e]+t[e%t.length]&255],this.S[r]=i;}this.i=0,this.j=0;},O.prototype.next=function(){var t;return this.i=this.i+1&255,this.j=this.j+this.S[this.i]&255,t=this.S[this.i],this.S[this.i]=this.S[this.j],this.S[this.j]=t,this.S[t+this.S[this.i]&255];};var N=256;e.exports={"default":r,BigInteger:r,SecureRandom:j};}).call(t);}).BigInteger,h={sha1:"3021300906052b0e03021a05000414",sha224:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",sha384:"3041300d060960864801650304020205000430",sha512:"3051300d060960864801650304020305000440",md2:"3020300c06082a864886f70d020205000410",md5:"3020300c06082a864886f70d020505000410",ripemd160:"3021300906052b2403020105000414"},a={sha256:i$1};function u(t,e){if(this.n=null,this.e=0,!(null!=t&&null!=e&&t.length>0&&e.length>0))throw new Error("Invalid key data");this.n=new s(t,16),this.e=parseInt(e,16);}u.prototype.verify=function(t,e){e=e.replace(/[^0-9a-f]|[\s\n]]/gi,"");var r=new s(e,16);if(r.bitLength()>this.n.bitLength())throw new Error("Signature does not match with the key modulus.");var i=function(t){for(var e in h){var r=h[e],i=r.length;if(t.substring(0,i)===r)return{alg:e,hash:t.substring(i)};}return[];}(r.modPowInt(this.e,this.n).toString(16).replace(/^1f+00/,""));if(0===i.length)return!1;if(!a.hasOwnProperty(i.alg))throw new Error("Hashing algorithm is not supported.");var n=a[i.alg](t).toString();return i.hash===n;};for(var f=[],c=[],p="undefined"!=typeof Uint8Array?Uint8Array:Array,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",d=0,m=l.length;d<m;++d){f[d]=l[d],c[l.charCodeAt(d)]=d;}function v(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4];}function y(t,e,r){for(var i,n=[],o=e;o<r;o+=3){n.push(f[(i=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]))>>18&63]+f[i>>12&63]+f[i>>6&63]+f[63&i]);}return n.join("");}c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63;var g={byteLength:function byteLength(t){var e=v(t),r=e[1];return 3*(e[0]+r)/4-r;},toByteArray:function toByteArray(t){var e,r,i=v(t),n=i[0],o=i[1],s=new p(3*(n+o)/4-o),h=0,a=o>0?n-4:n;for(r=0;r<a;r+=4){e=c[t.charCodeAt(r)]<<18|c[t.charCodeAt(r+1)]<<12|c[t.charCodeAt(r+2)]<<6|c[t.charCodeAt(r+3)],s[h++]=e>>16&255,s[h++]=e>>8&255,s[h++]=255&e;}return 2===o&&(e=c[t.charCodeAt(r)]<<2|c[t.charCodeAt(r+1)]>>4,s[h++]=255&e),1===o&&(e=c[t.charCodeAt(r)]<<10|c[t.charCodeAt(r+1)]<<4|c[t.charCodeAt(r+2)]>>2,s[h++]=e>>8&255,s[h++]=255&e),s;},fromByteArray:function fromByteArray(t){for(var e,r=t.length,i=r%3,n=[],o=0,s=r-i;o<s;o+=16383){n.push(y(t,o,o+16383>s?s:o+16383));}return 1===i?n.push(f[(e=t[r-1])>>2]+f[e<<4&63]+"=="):2===i&&n.push(f[(e=(t[r-2]<<8)+t[r-1])>>10]+f[e>>4&63]+f[e<<2&63]+"="),n.join("");}};function w(t){var e=t.length%4;return 0===e?t:t+new Array(4-e+1).join("=");}function T(t){return t=w(t).replace(/\-/g,"+").replace(/_/g,"/"),decodeURIComponent(function(t){for(var e="",r=0;r<t.length;r++){e+=String.fromCharCode(t[r]);}return e;}(g.toByteArray(t)).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2);}).join(""));}function b(t){return function(t){for(var e="",r=0;r<t.length;r++){var i=t[r].toString(16);e+=2===i.length?i:"0"+i;}return e;}(g.toByteArray(w(t)));}var _=e(function(e,r){e.exports=function(){function e(t){return"function"==typeof t;}var r=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t);},i=0,n=void 0,o=void 0,s=function s(t,e){l[i]=t,l[i+1]=e,2===(i+=2)&&(o?o(d):w());},h="undefined"!=typeof window?window:void 0,a=h||{},u=a.MutationObserver||a.WebKitMutationObserver,f="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),c="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var t=setTimeout;return function(){return t(d,1);};}var l=new Array(1e3);function d(){for(var t=0;t<i;t+=2){(0,l[t])(l[t+1]),l[t]=void 0,l[t+1]=void 0;}i=0;}var m,v,y,g,w=void 0;function T(t,e){var r=this,i=new this.constructor(A);void 0===i[_]&&N(i);var n=r._state;if(n){var o=arguments[n-1];s(function(){return j(n,i,o,r._result);});}else C(r,i,t,e);return i;}function b(t){if(t&&"object"==_typeof(t)&&t.constructor===this)return t;var e=new this(A);return k(e,t),e;}f?w=function w(){return process.nextTick(d);}:u?(v=0,y=new u(d),g=document.createTextNode(""),y.observe(g,{characterData:!0}),w=function w(){g.data=v=++v%2;}):c?((m=new MessageChannel()).port1.onmessage=d,w=function w(){return m.port2.postMessage(0);}):w=void 0===h?function(){try{var t=Function("return this")().require("vertx");return void 0!==(n=t.runOnLoop||t.runOnContext)?function(){n(d);}:p();}catch(t){return p();}}():p();var _=Math.random().toString(36).substring(2);function A(){}var S=void 0,D=1,B=2;function x(t,r,i){r.constructor===t.constructor&&i===T&&r.constructor.resolve===b?function(t,e){e._state===D?M(t,e._result):e._state===B?I(t,e._result):C(e,void 0,function(e){return k(t,e);},function(e){return I(t,e);});}(t,r):void 0===i?M(t,r):e(i)?function(t,e,r){s(function(t){var i=!1,n=function(r,n,o,s){try{r.call(n,function(r){i||(i=!0,e!==r?k(t,r):M(t,r));},function(e){i||(i=!0,I(t,e));});}catch(t){return t;}}(r,e);!i&&n&&(i=!0,I(t,n));},t);}(t,r,i):M(t,r);}function k(t,e){if(t===e)I(t,new TypeError("You cannot resolve a promise with itself"));else if(n=_typeof(i=e),null===i||"object"!==n&&"function"!==n)M(t,e);else{var r=void 0;try{r=e.then;}catch(e){return void I(t,e);}x(t,e,r);}var i,n;}function E(t){t._onerror&&t._onerror(t._result),R(t);}function M(t,e){t._state===S&&(t._result=e,t._state=D,0!==t._subscribers.length&&s(R,t));}function I(t,e){t._state===S&&(t._state=B,t._result=e,s(E,t));}function C(t,e,r,i){var n=t._subscribers,o=n.length;t._onerror=null,n[o]=e,n[o+D]=r,n[o+B]=i,0===o&&t._state&&s(R,t);}function R(t){var e=t._subscribers,r=t._state;if(0!==e.length){for(var i=void 0,n=void 0,o=t._result,s=0;s<e.length;s+=3){n=e[s+r],(i=e[s])?j(r,i,n,o):n(o);}t._subscribers.length=0;}}function j(t,r,i,n){var o=e(i),s=void 0,h=void 0,a=!0;if(o){try{s=i(n);}catch(t){a=!1,h=t;}if(r===s)return void I(r,new TypeError("A promises callback cannot return that same promise."));}else s=n;r._state!==S||(o&&a?k(r,s):!1===a?I(r,h):t===D?M(r,s):t===B&&I(r,s));}var O=0;function N(t){t[_]=O++,t._state=void 0,t._result=void 0,t._subscribers=[];}var P=function(){function t(t,e){this._instanceConstructor=t,this.promise=new t(A),this.promise[_]||N(this.promise),r(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?M(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&M(this.promise,this._result))):I(this.promise,new Error("Array Methods must be provided an Array"));}return t.prototype._enumerate=function(t){for(var e=0;this._state===S&&e<t.length;e++){this._eachEntry(t[e],e);}},t.prototype._eachEntry=function(t,e){var r=this._instanceConstructor,i=r.resolve;if(i===b){var n=void 0,o=void 0,s=!1;try{n=t.then;}catch(t){s=!0,o=t;}if(n===T&&t._state!==S)this._settledAt(t._state,e,t._result);else if("function"!=typeof n)this._remaining--,this._result[e]=t;else if(r===V){var h=new r(A);s?I(h,o):x(h,t,n),this._willSettleAt(h,e);}else this._willSettleAt(new r(function(e){return e(t);}),e);}else this._willSettleAt(i(t),e);},t.prototype._settledAt=function(t,e,r){var i=this.promise;i._state===S&&(this._remaining--,t===B?I(i,r):this._result[e]=r),0===this._remaining&&M(i,this._result);},t.prototype._willSettleAt=function(t,e){var r=this;C(t,void 0,function(t){return r._settledAt(D,e,t);},function(t){return r._settledAt(B,e,t);});},t;}(),V=function(){function t(e){this[_]=O++,this._result=this._state=void 0,this._subscribers=[],A!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");}(),this instanceof t?function(t,e){try{e(function(e){k(t,e);},function(e){I(t,e);});}catch(e){I(t,e);}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");}());}return t.prototype["catch"]=function(t){return this.then(null,t);},t.prototype["finally"]=function(t){var r=this.constructor;return e(t)?this.then(function(e){return r.resolve(t()).then(function(){return e;});},function(e){return r.resolve(t()).then(function(){throw e;});}):this.then(t,t);},t;}();return V.prototype.then=T,V.all=function(t){return new P(this,t).promise;},V.race=function(t){var e=this;return r(t)?new e(function(r,i){for(var n=t.length,o=0;o<n;o++){e.resolve(t[o]).then(r,i);}}):new e(function(t,e){return e(new TypeError("You must pass an array to race."));});},V.resolve=b,V.reject=function(t){var e=new this(A);return I(e,t),e;},V._setScheduler=function(t){o=t;},V._setAsap=function(t){s=t;},V._asap=s,V.polyfill=function(){var e=void 0;if(void 0!==t)e=t;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")();}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment");}var r=e.Promise;if(r){var i=null;try{i=Object.prototype.toString.call(r.resolve());}catch(t){}if("[object Promise]"===i&&!r.cast)return;}e.Promise=V;},V.Promise=V,V;}();}),A=e(function(e){var r,i;r=t,i=function i(){return function(){return function(t){var e=[];if(0===t.length)return"";if("string"!=typeof t[0])throw new TypeError("Url must be a string. Received "+t[0]);if(t[0].match(/^[^\/:]+:\/*$/)&&t.length>1){var r=t.shift();t[0]=r+t[0];}t[0]=t[0].match(/^file:\/\/\//)?t[0].replace(/^([^\/:]+):\/*/,"$1:///"):t[0].replace(/^([^\/:]+):\/*/,"$1://");for(var i=0;i<t.length;i++){var n=t[i];if("string"!=typeof n)throw new TypeError("Url must be a string. Received "+n);""!==n&&(i>0&&(n=n.replace(/^[\/]+/,"")),n=n.replace(/[\/]+$/,i<t.length-1?"":"/"),e.push(n));}var o=e.join("/"),s=(o=o.replace(/\/(\?|&|#[^!])/g,"$1")).split("?");return s.shift()+(s.length>0?"?":"")+s.join("&");}("object"==_typeof(arguments[0])?arguments[0]:[].slice.call(arguments));};},e.exports?e.exports=i():r.urljoin=i();});function S(t){if(t.ok)return t.json();var e=new Error(t.statusText);return e.response=t,Promise.reject(e);}function D(t){this.name="ConfigurationError",this.message=t||"";}function B(t){this.name="TokenValidationError",this.message=t||"";}_.polyfill(),D.prototype=Error.prototype,B.prototype=Error.prototype;var x=function x(){};x.prototype.get=function(){return null;},x.prototype.has=function(){return null;},x.prototype.set=function(){return null;};var k="RS256",E=function E(t){return"number"==typeof t;},M=function M(){return new Date();},I=60;function C(t){var e=t||{};if(this.jwksCache=e.jwksCache||new x(),this.expectedAlg=e.expectedAlg||"RS256",this.issuer=e.issuer,this.audience=e.audience,this.leeway=0===e.leeway?0:e.leeway||I,this.jwksURI=e.jwksURI,this.maxAge=e.maxAge,this.__clock="function"==typeof e.__clock?e.__clock:M,this.leeway<0||this.leeway>300)throw new D("The leeway should be positive and lower than five minutes.");if(k!==this.expectedAlg)throw new D('Signature algorithm of "'+this.expectedAlg+'" is not supported. Expected the ID token to be signed with "'+k+'".');}function PluginHandler(webAuth,plugins){this.plugins=plugins;for(var a=0;a<this.plugins.length;a++){if(this.plugins[a].version!==version.raw){var pluginName="";throw this.plugins[a].constructor&&this.plugins[a].constructor.name&&(pluginName=this.plugins[a].constructor.name),new Error("Plugin "+pluginName+" version ("+this.plugins[a].version+") is not compatible with the SDK version ("+version.raw+")");}this.plugins[a].setWebAuth(webAuth);}}C.prototype.verify=function(t,e,r){if(!t)return r(new B("ID token is required but missing"),!1);var i=this.decode(t);if(i instanceof Error)return r(new B("ID token could not be decoded"),!1);var n=i.encoded.header+"."+i.encoded.payload,o=b(i.encoded.signature),s=i.header.alg,h=i.header.kid,a=i.payload.aud,u=i.payload.sub,f=i.payload.iss,c=i.payload.exp,p=i.payload.nbf,l=i.payload.iat,d=i.payload.azp,m=i.payload.auth_time,v=i.payload.nonce,y=this.__clock(),g=this;if(g.expectedAlg!==s)return r(new B('Signature algorithm of "'+s+'" is not supported. Expected the ID token to be signed with "'+k+'".'),!1);this.getRsaVerifier(f,h,function(t,s){if(t)return r(t);if(!s.verify(n,o))return r(new B("Invalid ID token signature."));if(!f||"string"!=typeof f)return r(new B("Issuer (iss) claim must be a string present in the ID token",!1));if(g.issuer!==f)return r(new B('Issuer (iss) claim mismatch in the ID token, expected "'+g.issuer+'", found "'+f+'"'),!1);if(!u||"string"!=typeof u)return r(new B("Subject (sub) claim must be a string present in the ID token"),!1);if(!a||"string"!=typeof a&&!Array.isArray(a))return r(new B("Audience (aud) claim must be a string or array of strings present in the ID token"));if(Array.isArray(a)&&!a.includes(g.audience))return r(new B('Audience (aud) claim mismatch in the ID token; expected "'+g.audience+'" but was not one of "'+a.join(", ")+'"'));if("string"==typeof a&&g.audience!==a)return r(new B('Audience (aud) claim mismatch in the ID token; expected "'+g.audience+'" but found "'+a+'"'),!1);if(e){if(!v||"string"!=typeof v)return r(new B("Nonce (nonce) claim must be a string present in the ID token"),!1);if(v!==e)return r(new B('Nonce (nonce) claim value mismatch in the ID token; expected "'+e+'", found "'+v+'"'),!1);}if(Array.isArray(a)&&a.length>1){if(!d||"string"!=typeof d)return r(new B("Authorized Party (azp) claim must be a string present in the ID token when Audience (aud) claim has multiple values",!1));if(d!==g.audience)return r(new B('Authorized Party (azp) claim mismatch in the ID token; expected "'+g.audience+'", found "'+d+'"',!1));}if(!c||!E(c))return r(new B("Expiration Time (exp) claim must be a number present in the ID token",!1));if(!l||!E(l))return r(new B("Issued At (iat) claim must be a number present in the ID token"));var h=c+g.leeway,w=new Date(0);if(w.setUTCSeconds(h),y>w)return r(new B('Expiration Time (exp) claim error in the ID token; current time "'+y+'" is after expiration time "'+w+'"',!1));if(p&&E(p)){var T=p-g.leeway,b=new Date(0);if(b.setUTCSeconds(T),y<b)return r(new B('Not Before Time (nbf) claim error in the ID token; current time "'+y+'" is before the not before time "'+b+'"'));}if(g.maxAge){if(!m||!E(m))return r(new B("Authentication Time (auth_time) claim must be a number present in the ID token when Max Age (max_age) is specified"));var _=m+g.maxAge+g.leeway,A=new Date(0);if(A.setUTCSeconds(_),y>A)return r(new B('Authentication Time (auth_time) claim in the ID token indicates that too much time has passed since the last end-user authentication. Current time "'+y+'" is after last auth time at "'+A+'"'));}return r(null,i.payload);});},C.prototype.getRsaVerifier=function(t,e,r){var i=this,n=t+e;if(this.jwksCache.has(n)){var o=this.jwksCache.get(n);r(null,new u(o.modulus,o.exp));}else!function(t,e){("undefined"==typeof fetch?function(t,e){return e=e||{},new Promise(function(r,i){var n=new XMLHttpRequest(),o=[],s=[],h={},a=function a(){return{ok:2==(n.status/100|0),statusText:n.statusText,status:n.status,url:n.responseURL,text:function text(){return Promise.resolve(n.responseText);},json:function json(){return Promise.resolve(JSON.parse(n.responseText));},blob:function blob(){return Promise.resolve(new Blob([n.response]));},clone:a,headers:{keys:function keys(){return o;},entries:function entries(){return s;},get:function get(t){return h[t.toLowerCase()];},has:function has(t){return t.toLowerCase()in h;}}};};for(var u in n.open(e.method||"get",t,!0),n.onload=function(){n.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,function(t,e,r){o.push(e=e.toLowerCase()),s.push([e,r]),h[e]=h[e]?h[e]+","+r:r;}),r(a());},n.onerror=i,n.withCredentials="include"==e.credentials,e.headers){n.setRequestHeader(u,e.headers[u]);}n.send(e.body||null);});}:fetch)(t.jwksURI||A(t.iss,".well-known","jwks.json")).then(S).then(function(r){var i,n,o,s=null;for(i=0;i<r.keys.length&&null===s;i++){if((n=r.keys[i]).kid===t.kid&&(s=n),!s)return e(new Error('Could not find a public key for Key ID (kid) "'+t.kid+'"'));}return e(null,{modulus:b((o=s).n),exp:b(o.e)});})["catch"](function(t){e(t);});}({jwksURI:this.jwksURI,iss:t,kid:e},function(t,e){return t?r(t):(i.jwksCache.set(n,e),r(null,new u(e.modulus,e.exp)));});},C.prototype.decode=function(t){var e,r,i=t.split(".");if(3!==i.length)return new B("Cannot decode a malformed JWT");try{e=JSON.parse(T(i[0])),r=JSON.parse(T(i[1]));}catch(t){return new B("Token header or payload is not valid JSON");}return{header:e,payload:r,encoded:{header:i[0],payload:i[1],signature:i[2]}};},C.prototype.validateAccessToken=function(t,e,r,s){if(this.expectedAlg!==e)return s(new B('Signature algorithm of "'+e+'" is not supported. Expected "'+this.expectedAlg+'"'));var h,a=i$1(t),u=o.stringify(a),f=u.substring(0,u.length/2),c=o.parse(f),p=n.stringify(c);return s((h={"+":"-","/":"_","=":""},p.replace(/[+\/=]/g,function(t){return h[t];})!==r?new B("Invalid access_token"):null));},PluginHandler.prototype.get=function(extensibilityPoint){for(var a=0;a<this.plugins.length;a++){if(this.plugins[a].supports(extensibilityPoint))return this.plugins[a].init();}return null;};var random={randomString:function randomString(length){var bytes=new Uint8Array(length),result=[],charset="0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz-._~",cryptoObj=windowHelper.getWindow().crypto||windowHelper.getWindow().msCrypto;if(!cryptoObj)return null;for(var random=cryptoObj.getRandomValues(bytes),a=0;a<random.length;a++){result.push(charset[random[a]%charset.length]);}return result.join("");}},DEFAULT_NAMESPACE="com.auth0.auth.";function TransactionManager(options){var transaction=options.transaction||{};this.namespace=transaction.namespace||DEFAULT_NAMESPACE,this.keyLength=transaction.keyLength||32,this.storage=new Storage(options),this.options=options;}function IframeHandler(options){if(this.url=options.url,this.callback=options.callback,this.timeout=options.timeout||6e4,this.timeoutCallback=options.timeoutCallback||null,this.eventListenerType=options.eventListenerType||"message",this.iframe=null,this.timeoutHandle=null,this._destroyTimeout=null,this.transientMessageEventListener=null,this.proxyEventListener=null,this.eventValidator=options.eventValidator||{isValid:function isValid(){return!0;}},"function"!=typeof this.callback)throw new Error("options.callback must be a function");}function WebMessageHandler(webAuth){this.webAuth=webAuth,this.warn=new Warn(webAuth.baseOptions);}function CrossOriginAuthentication(webAuth,options){this.webAuth=webAuth,this.baseOptions=options,this.request=new RequestBuilder(options),this.webMessageHandler=new WebMessageHandler(webAuth),this.storage=new Storage(options);}function createKey(origin,coId){return["co/verifier",encodeURIComponent(origin),encodeURIComponent(coId)].join("/");}function Redirect(auth0,options){this.webAuth=auth0,this.baseOptions=options,this.crossOriginAuthentication=new CrossOriginAuthentication(auth0,this.baseOptions),this.warn=new Warn({disableWarnings:!!options._disableDeprecationWarnings});}TransactionManager.prototype.process=function(options){if(!options.responseType)throw new Error("responseType is required");var lastUsedConnection=options.realm||options.connection,responseTypeIncludesIdToken=-1!==options.responseType.indexOf("id_token"),transaction=this.generateTransaction(options.appState,options.state,options.nonce,lastUsedConnection,responseTypeIncludesIdToken);return options.state||(options.state=transaction.state),responseTypeIncludesIdToken&&!options.nonce&&(options.nonce=transaction.nonce),options;},TransactionManager.prototype.generateTransaction=function(appState,state,nonce,lastUsedConnection,generateNonce){return state=state||random.randomString(this.keyLength),nonce=nonce||(generateNonce?random.randomString(this.keyLength):null),windowHelper.getWindow().location.host===this.options.domain||this.storage.setItem(this.namespace+state,{nonce:nonce,appState:appState,state:state,lastUsedConnection:lastUsedConnection},{expires:1/48}),{state:state,nonce:nonce};},TransactionManager.prototype.getStoredTransaction=function(state){var transactionData;return transactionData=this.storage.getItem(this.namespace+state),this.clearTransaction(state),transactionData;},TransactionManager.prototype.clearTransaction=function(state){this.storage.removeItem(this.namespace+state);},IframeHandler.prototype.init=function(){var _this=this,_window=windowHelper.getWindow();switch(this.iframe=_window.document.createElement("iframe"),this.iframe.style.display="none",this.proxyEventListener=function(e){_this.eventListener(e);},this.eventListenerType){case"message":this.eventSourceObject=_window;break;case"load":this.eventSourceObject=this.iframe;break;default:throw new Error("Unsupported event listener type: "+this.eventListenerType);}this.eventSourceObject.addEventListener(this.eventListenerType,this.proxyEventListener,!1),_window.document.body.appendChild(this.iframe),this.iframe.src=this.url,this.timeoutHandle=setTimeout(function(){_this.timeoutHandler();},this.timeout);},IframeHandler.prototype.eventListener=function(event){var eventData={event:event,sourceObject:this.eventSourceObject};this.eventValidator.isValid(eventData)&&(this.destroy(),this.callback(eventData));},IframeHandler.prototype.timeoutHandler=function(){this.destroy(),this.timeoutCallback&&this.timeoutCallback();},IframeHandler.prototype.destroy=function(){var _this=this;clearTimeout(this.timeoutHandle),this._destroyTimeout=setTimeout(function(){_this.eventSourceObject.removeEventListener(_this.eventListenerType,_this.proxyEventListener,!1),_this.iframe.parentNode&&_this.iframe.parentNode.removeChild(_this.iframe);},0);},WebMessageHandler.prototype.run=function(options,cb){var _this=this;options.responseMode="web_message",options.prompt="none";var currentOrigin=windowHelper.getOrigin(),redirectUriOrigin=objectHelper.getOriginFromUrl(options.redirectUri);if(redirectUriOrigin&&currentOrigin!==redirectUriOrigin)return cb({error:"origin_mismatch",error_description:"The redirectUri's origin ("+redirectUriOrigin+") should match the window's origin ("+currentOrigin+")."});!function(authorizeUrl,options,_callback2){new IframeHandler({url:authorizeUrl,eventListenerType:"message",callback:function callback(eventData){_callback2(null,eventData);},timeout:options.timeout,eventValidator:{isValid:function isValid(eventData){return"authorization_response"===eventData.event.data.type&&options.state===eventData.event.data.response.state;}},timeoutCallback:function timeoutCallback(){_callback2({error:"timeout",error_description:"Timeout during executing web_message communication",state:options.state});}}).init();}(this.webAuth.client.buildAuthorizeUrl(options),options,function(err,eventData){var error=err;if(!err&&eventData.event.data.response.error&&(error=eventData.event.data.response),!error){var parsedHash=eventData.event.data.response;return _this.webAuth.validateAuthenticationResponse(options,parsedHash,cb);}return"consent_required"===error.error&&"localhost"===windowHelper.getWindow().location.hostname&&_this.warn.warning("Consent Required. Consent can't be skipped on localhost. Read more here: https://auth0.com/docs/api-auth/user-consent#skipping-consent-for-first-party-clients"),_this.webAuth.transactionManager.clearTransaction(error.state),cb(objectHelper.pick(error,["error","error_description"]));});},CrossOriginAuthentication.prototype.login=function(options,cb){var _this=this,url=urlJoin(this.baseOptions.rootUrl,"/co/authenticate");options.username=options.username||options.email,delete options.email;var authenticateBody={client_id:options.clientID||this.baseOptions.clientID,username:options.username};options.password&&(authenticateBody.password=options.password),options.otp&&(authenticateBody.otp=options.otp);var realm=options.realm||this.baseOptions.realm;if(realm){var credentialType=options.credentialType||this.baseOptions.credentialType||"http://auth0.com/oauth/grant-type/password-realm";authenticateBody.realm=realm,authenticateBody.credential_type=credentialType;}else authenticateBody.credential_type="password";this.request.post(url).withCredentials().send(authenticateBody).end(function(err,data){if(err){var errorObject=err.response&&err.response.body||{error:"request_error",error_description:JSON.stringify(err)};return wrapCallback(cb,{forceLegacyError:!0})(errorObject);}var popupMode=!0===options.popup;options=objectHelper.blacklist(options,["password","credentialType","otp","popup"]);var authorizeOptions=objectHelper.merge(options)["with"]({loginTicket:data.body.login_ticket}),key=createKey(_this.baseOptions.rootUrl,data.body.co_id);_this.storage.setItem(key,data.body.co_verifier,{expires:1/96}),popupMode?_this.webMessageHandler.run(authorizeOptions,wrapCallback(cb,{forceLegacyError:!0})):_this.webAuth.authorize(authorizeOptions);});},CrossOriginAuthentication.prototype.callback=function(){var targetOrigin=decodeURIComponent(function(name){var parts=("&"+windowHelper.getWindow().location.hash.substring(1)).split("&"+name+"=");if(2===parts.length)return parts.pop().split("&").shift();}("origin")),theWindow=windowHelper.getWindow(),_this=this;theWindow.addEventListener("message",function(evt){if("co_verifier_request"===evt.data.type){var key=createKey(evt.origin,evt.data.request.id),verifier=function(storage,key){try{var verifier=storage.getItem(key);return storage.removeItem(key),verifier||"";}catch(e){return"";}}(_this.storage,key);evt.source.postMessage({type:"co_verifier_response",response:{verifier:verifier}},evt.origin);}}),theWindow.parent.postMessage({type:"ready"},targetOrigin);},Redirect.prototype.loginWithCredentials=function(options,cb){options.realm=options.realm||options.connection,delete options.connection,this.crossOriginAuthentication.login(options,cb);},Redirect.prototype.signupAndLogin=function(options,cb){var _this=this;return this.webAuth.client.dbConnection.signup(options,function(err){return err?cb(err):(options.realm=options.realm||options.connection,delete options.connection,_this.webAuth.login(options,cb));});};var winchan=createCommonjsModule(function(module){var WinChan=function(){var RELAY_FRAME_NAME="__winchan_relay_frame",CLOSE_CMD="die";function addListener(w,event,cb){w.attachEvent?w.attachEvent("on"+event,cb):w.addEventListener&&w.addEventListener(event,cb,!1);}function removeListener(w,event,cb){w.detachEvent?w.detachEvent("on"+event,cb):w.removeEventListener&&w.removeEventListener(event,cb,!1);}function extractOrigin(url){/^https?:\/\//.test(url)||(url=window.location.href);var m=/^(https?:\/\/[\-_a-zA-Z\.0-9:]+)/.exec(url);return m?m[1]:url;}var isIE=function(){if("undefined"==typeof navigator)return!1;var rv=-1,ua=navigator.userAgent;"Microsoft Internet Explorer"===navigator.appName?null!=new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})").exec(ua)&&(rv=parseFloat(RegExp.$1)):ua.indexOf("Trident")>-1&&null!==new RegExp("rv:([0-9]{2,2}[.0-9]{0,})").exec(ua)&&(rv=parseFloat(RegExp.$1));return rv>=8;}();return"undefined"!=typeof window&&window.JSON&&window.JSON.stringify&&window.JSON.parse&&window.postMessage?{open:function open(opts,cb){if(!cb)throw"missing required callback argument";var err,iframe;opts.url||(err="missing required 'url' parameter"),opts.relay_url||(err="missing required 'relay_url' parameter"),err&&setTimeout(function(){cb(err);},0),opts.window_name||(opts.window_name=null),opts.window_features&&!function(){try{var userAgent=navigator.userAgent;return-1!=userAgent.indexOf("Fennec/")||-1!=userAgent.indexOf("Firefox/")&&-1!=userAgent.indexOf("Android");}catch(e){}return!1;}()||(opts.window_features=void 0);var messageTarget,origin=opts.origin||extractOrigin(opts.url);if(origin!==extractOrigin(opts.relay_url))return setTimeout(function(){cb("invalid arguments: origin of url and relay_url must match");},0);isIE&&((iframe=document.createElement("iframe")).setAttribute("src",opts.relay_url),iframe.style.display="none",iframe.setAttribute("name",RELAY_FRAME_NAME),document.body.appendChild(iframe),messageTarget=iframe.contentWindow);var w=opts.popup||window.open(opts.url,opts.window_name,opts.window_features);opts.popup&&(w.location.href=opts.url),messageTarget||(messageTarget=w);var closeInterval=setInterval(function(){w&&w.closed&&(cleanup(),cb&&(cb("User closed the popup window"),cb=null));},500),req=JSON.stringify({a:"request",d:opts.params});function cleanup(){if(iframe&&document.body.removeChild(iframe),iframe=void 0,closeInterval&&(closeInterval=clearInterval(closeInterval)),removeListener(window,"message",onMessage),removeListener(window,"unload",cleanup),w)try{w.close();}catch(securityViolation){messageTarget.postMessage(CLOSE_CMD,origin);}w=messageTarget=void 0;}function onMessage(e){if(e.origin===origin){try{var d=JSON.parse(e.data);}catch(err){if(cb)return cb(err);throw err;}"ready"===d.a?messageTarget.postMessage(req,origin):"error"===d.a?(cleanup(),cb&&(cb(d.d),cb=null)):"response"===d.a&&(cleanup(),cb&&(cb(null,d.d),cb=null));}}return addListener(window,"unload",cleanup),addListener(window,"message",onMessage),{originalPopup:w,close:cleanup,focus:function focus(){if(w)try{w.focus();}catch(e){}}};},onOpen:function onOpen(cb){var o="*",msgTarget=isIE?function(){window.location;for(var frames=window.opener.frames,i=frames.length-1;i>=0;i--){try{if(frames[i].location.protocol===window.location.protocol&&frames[i].location.host===window.location.host&&frames[i].name===RELAY_FRAME_NAME)return frames[i];}catch(e){}}}():window.opener;if(!msgTarget)throw"can't find relay frame";function doPost(msg){msg=JSON.stringify(msg),isIE?msgTarget.doPost(msg,o):msgTarget.postMessage(msg,o);}function onDie(e){if(e.data===CLOSE_CMD)try{window.close();}catch(o_O){}}addListener(isIE?msgTarget:window,"message",function onMessage(e){var d;try{d=JSON.parse(e.data);}catch(err){}d&&"request"===d.a&&(removeListener(window,"message",onMessage),o=e.origin,cb&&setTimeout(function(){cb(o,d.d,function(r){cb=void 0,doPost({a:"response",d:r});});},0));}),addListener(isIE?msgTarget:window,"message",onDie);try{doPost({a:"ready"});}catch(e){addListener(msgTarget,"load",function(e){doPost({a:"ready"});});}var onUnload=function onUnload(){try{removeListener(isIE?msgTarget:window,"message",onDie);}catch(ohWell){}cb&&doPost({a:"error",d:"client closed window"}),cb=void 0;try{window.close();}catch(e){}};return addListener(window,"unload",onUnload),{detach:function detach(){removeListener(window,"unload",onUnload);}};}}:{open:function open(url,winopts,arg,cb){setTimeout(function(){cb("unsupported browser");},0);},onOpen:function onOpen(cb){setTimeout(function(){cb("unsupported browser");},0);}};}();module.exports&&(module.exports=WinChan);});var urlHelper={extractOrigin:function extractOrigin(url){/^https?:\/\//.test(url)||(url=window.location.href);var m=/^(https?:\/\/[-_a-zA-Z.0-9:]+)/.exec(url);return m?m[1]:url;}};function PopupHandler(){this._current_popup=null;}function Popup(webAuth,options){this.baseOptions=options,this.baseOptions.popupOrigin=options.popupOrigin,this.client=webAuth.client,this.webAuth=webAuth,this.transactionManager=new TransactionManager(this.baseOptions),this.crossOriginAuthentication=new CrossOriginAuthentication(webAuth,this.baseOptions),this.warn=new Warn({disableWarnings:!!options._disableDeprecationWarnings});}function SilentAuthenticationHandler(options){this.authenticationUrl=options.authenticationUrl,this.timeout=options.timeout||6e4,this.handler=null,this.postMessageDataType=options.postMessageDataType||!1,this.postMessageOrigin=options.postMessageOrigin||windowHelper.getWindow().location.origin||windowHelper.getWindow().location.protocol+"//"+windowHelper.getWindow().location.hostname+(windowHelper.getWindow().location.port?":"+windowHelper.getWindow().location.port:"");}function UsernamePassword(options){this.baseOptions=options,this.request=new RequestBuilder(options),this.transactionManager=new TransactionManager(this.baseOptions);}function HostedPages(client,options){this.baseOptions=options,this.client=client,this.baseOptions.universalLoginPage=!0,this.request=new RequestBuilder(this.baseOptions),this.warn=new Warn({disableWarnings:!!options._disableDeprecationWarnings});}function defaultClock(){return new Date();}function WebAuth(options){assert.check(options,{type:"object",message:"options parameter is not valid"},{domain:{type:"string",message:"domain option is required"},clientID:{type:"string",message:"clientID option is required"},responseType:{optional:!0,type:"string",message:"responseType is not valid"},responseMode:{optional:!0,type:"string",message:"responseMode is not valid"},redirectUri:{optional:!0,type:"string",message:"redirectUri is not valid"},scope:{optional:!0,type:"string",message:"scope is not valid"},audience:{optional:!0,type:"string",message:"audience is not valid"},popupOrigin:{optional:!0,type:"string",message:"popupOrigin is not valid"},leeway:{optional:!0,type:"number",message:"leeway is not valid"},plugins:{optional:!0,type:"array",message:"plugins is not valid"},maxAge:{optional:!0,type:"number",message:"maxAge is not valid"},_disableDeprecationWarnings:{optional:!0,type:"boolean",message:"_disableDeprecationWarnings option is not valid"},_sendTelemetry:{optional:!0,type:"boolean",message:"_sendTelemetry option is not valid"},_telemetryInfo:{optional:!0,type:"object",message:"_telemetryInfo option is not valid"},_timesToRetryFailedRequests:{optional:!0,type:"number",message:"_timesToRetryFailedRequests option is not valid"}}),options.overrides&&assert.check(options.overrides,{type:"object",message:"overrides option is not valid"},{__tenant:{optional:!0,type:"string",message:"__tenant option is required"},__token_issuer:{optional:!0,type:"string",message:"__token_issuer option is required"},__jwks_uri:{optional:!0,type:"string",message:"__jwks_uri is required"}}),this.baseOptions=options,this.baseOptions.plugins=new PluginHandler(this,this.baseOptions.plugins||[]),this.baseOptions._sendTelemetry=!1!==this.baseOptions._sendTelemetry||this.baseOptions._sendTelemetry,this.baseOptions._timesToRetryFailedRequests=options._timesToRetryFailedRequests?parseInt(options._timesToRetryFailedRequests,0):0,this.baseOptions.tenant=this.baseOptions.overrides&&this.baseOptions.overrides.__tenant||this.baseOptions.domain.split(".")[0],this.baseOptions.token_issuer=this.baseOptions.overrides&&this.baseOptions.overrides.__token_issuer||"https://"+this.baseOptions.domain+"/",this.baseOptions.jwksURI=this.baseOptions.overrides&&this.baseOptions.overrides.__jwks_uri,this.transactionManager=new TransactionManager(this.baseOptions),this.client=new Authentication(this.baseOptions),this.redirect=new Redirect(this,this.baseOptions),this.popup=new Popup(this,this.baseOptions),this.crossOriginAuthentication=new CrossOriginAuthentication(this,this.baseOptions),this.webMessageHandler=new WebMessageHandler(this),this._universalLogin=new HostedPages(this,this.baseOptions),this.ssodataStorage=new SSODataStorage(this.baseOptions);}function PasswordlessAuthentication(request,options){this.baseOptions=options,this.request=request;}function DBConnection(request,options){this.baseOptions=options,this.request=request;}function Authentication(auth0,options){2===arguments.length?this.auth0=auth0:options=auth0,assert.check(options,{type:"object",message:"options parameter is not valid"},{domain:{type:"string",message:"domain option is required"},clientID:{type:"string",message:"clientID option is required"},responseType:{optional:!0,type:"string",message:"responseType is not valid"},responseMode:{optional:!0,type:"string",message:"responseMode is not valid"},redirectUri:{optional:!0,type:"string",message:"redirectUri is not valid"},scope:{optional:!0,type:"string",message:"scope is not valid"},audience:{optional:!0,type:"string",message:"audience is not valid"},_disableDeprecationWarnings:{optional:!0,type:"boolean",message:"_disableDeprecationWarnings option is not valid"},_sendTelemetry:{optional:!0,type:"boolean",message:"_sendTelemetry option is not valid"},_telemetryInfo:{optional:!0,type:"object",message:"_telemetryInfo option is not valid"}}),this.baseOptions=options,this.baseOptions._sendTelemetry=!1!==this.baseOptions._sendTelemetry||this.baseOptions._sendTelemetry,this.baseOptions.rootUrl="https://"+this.baseOptions.domain,this.request=new RequestBuilder(this.baseOptions),this.passwordless=new PasswordlessAuthentication(this.request,this.baseOptions),this.dbConnection=new DBConnection(this.request,this.baseOptions),this.warn=new Warn({disableWarnings:!!options._disableDeprecationWarnings}),this.ssodataStorage=new SSODataStorage(this.baseOptions);}function Management(options){assert.check(options,{type:"object",message:"options parameter is not valid"},{domain:{type:"string",message:"domain option is required"},token:{type:"string",message:"token option is required"},_sendTelemetry:{optional:!0,type:"boolean",message:"_sendTelemetry option is not valid"},_telemetryInfo:{optional:!0,type:"object",message:"_telemetryInfo option is not valid"}}),this.baseOptions=options,this.baseOptions.headers={Authorization:"Bearer "+this.baseOptions.token},this.request=new RequestBuilder(this.baseOptions),this.baseOptions.rootUrl=urlJoin("https://"+this.baseOptions.domain,"api","v2");}PopupHandler.prototype.calculatePosition=function(options){var width=options.width||500,height=options.height||600,_window=windowHelper.getWindow(),screenX=void 0!==_window.screenX?_window.screenX:_window.screenLeft,screenY=void 0!==_window.screenY?_window.screenY:_window.screenTop,outerWidth=void 0!==_window.outerWidth?_window.outerWidth:_window.document.body.clientWidth,outerHeight=void 0!==_window.outerHeight?_window.outerHeight:_window.document.body.clientHeight;return{width:width,height:height,left:options.left||screenX+(outerWidth-width)/2,top:options.top||screenY+(outerHeight-height)/2};},PopupHandler.prototype.preload=function(options){var _this=this,_window=windowHelper.getWindow(),popupPosition=this.calculatePosition(options.popupOptions||{}),popupOptions=objectHelper.merge(popupPosition)["with"](options.popupOptions),url=options.url||"about:blank",windowFeatures=lib_stringify(popupOptions,{encode:!1,delimiter:","});return this._current_popup&&!this._current_popup.closed?this._current_popup:(this._current_popup=_window.open(url,"auth0_signup_popup",windowFeatures),this._current_popup.kill=function(){this.close(),_this._current_popup=null;},this._current_popup);},PopupHandler.prototype.load=function(url,relayUrl,options,cb){var _this=this,popupPosition=this.calculatePosition(options.popupOptions||{}),popupOptions=objectHelper.merge(popupPosition)["with"](options.popupOptions),winchanOptions=objectHelper.merge({url:url,relay_url:relayUrl,window_features:lib_stringify(popupOptions,{delimiter:",",encode:!1}),popup:this._current_popup})["with"](options),popup=winchan.open(winchanOptions,function(err,data){if(!err||"SyntaxError"!==err.name)return _this._current_popup=null,cb(err,data);});return popup.focus(),popup;},Popup.prototype.buildPopupHandler=function(){var pluginHandler=this.baseOptions.plugins.get("popup.getPopupHandler");return pluginHandler?pluginHandler.getPopupHandler():new PopupHandler();},Popup.prototype.preload=function(options){options=options||{};var popup=this.buildPopupHandler();return popup.preload(options),popup;},Popup.prototype.getPopupHandler=function(options,preload){return options.popupHandler?options.popupHandler:preload?this.preload(options):this.buildPopupHandler();},Popup.prototype.callback=function(options){var _this=this,theWindow=windowHelper.getWindow(),originUrl=(options=options||{}).popupOrigin||this.baseOptions.popupOrigin||windowHelper.getOrigin();theWindow.opener?winchan.onOpen(function(popupOrigin,r,cb){if(popupOrigin!==originUrl)return cb({error:"origin_mismatch",error_description:"The popup's origin ("+popupOrigin+") should match the `popupOrigin` parameter ("+originUrl+")."});_this.webAuth.parseHash(options||{},function(err,data){return cb(err||data);});}):theWindow.doPost=function(msg){theWindow.parent&&theWindow.parent.postMessage(msg,originUrl);};},Popup.prototype.authorize=function(options,cb){var url,relayUrl,popOpts={},pluginHandler=this.baseOptions.plugins.get("popup.authorize"),params=objectHelper.merge(this.baseOptions,["clientID","scope","domain","audience","tenant","responseType","redirectUri","_csrf","state","_intstate","nonce"])["with"](objectHelper.blacklist(options,["popupHandler"]));return assert.check(params,{type:"object",message:"options parameter is not valid"},{responseType:{type:"string",message:"responseType option is required"}}),relayUrl=urlJoin(this.baseOptions.rootUrl,"relay.html"),options.owp?params.owp=!0:(popOpts.origin=urlHelper.extractOrigin(params.redirectUri),relayUrl=params.redirectUri),options.popupOptions&&(popOpts.popupOptions=objectHelper.pick(options.popupOptions,["width","height","top","left"])),pluginHandler&&(params=pluginHandler.processParams(params)),(params=this.transactionManager.process(params)).scope=params.scope||"openid profile email",delete params.domain,url=this.client.buildAuthorizeUrl(params),this.getPopupHandler(options).load(url,relayUrl,popOpts,wrapCallback(cb,{keepOriginalCasing:!0}));},Popup.prototype.loginWithCredentials=function(options,cb){options.realm=options.realm||options.connection,options.popup=!0,options=objectHelper.merge(this.baseOptions,["redirectUri","responseType","state","nonce"])["with"](objectHelper.blacklist(options,["popupHandler","connection"])),options=this.transactionManager.process(options),this.crossOriginAuthentication.login(options,cb);},Popup.prototype.passwordlessVerify=function(options,cb){var _this=this;return this.client.passwordless.verify(objectHelper.blacklist(options,["popupHandler"]),function(err){if(err)return cb(err);options.username=options.phoneNumber||options.email,options.password=options.verificationCode,delete options.email,delete options.phoneNumber,delete options.verificationCode,delete options.type,_this.client.loginWithResourceOwner(options,cb);});},Popup.prototype.signupAndLogin=function(options,cb){var _this=this;return this.client.dbConnection.signup(options,function(err){if(err)return cb(err);_this.loginWithCredentials(options,cb);});},SilentAuthenticationHandler.create=function(options){return new SilentAuthenticationHandler(options);},SilentAuthenticationHandler.prototype.login=function(usePostMessage,callback){this.handler=new IframeHandler({auth0:this.auth0,url:this.authenticationUrl,eventListenerType:usePostMessage?"message":"load",callback:this.getCallbackHandler(callback,usePostMessage),timeout:this.timeout,eventValidator:this.getEventValidator(),timeoutCallback:function timeoutCallback(){callback(null,"#error=timeout&error_description=Timeout+during+authentication+renew.");},usePostMessage:usePostMessage||!1}),this.handler.init();},SilentAuthenticationHandler.prototype.getEventValidator=function(){var _this=this;return{isValid:function isValid(eventData){switch(eventData.event.type){case"message":return eventData.event.origin===_this.postMessageOrigin&&eventData.event.source===_this.handler.iframe.contentWindow&&(!1===_this.postMessageDataType||eventData.event.data.type&&eventData.event.data.type===_this.postMessageDataType);case"load":if("about:"===eventData.sourceObject.contentWindow.location.protocol)return!1;default:return!0;}}};},SilentAuthenticationHandler.prototype.getCallbackHandler=function(callback,usePostMessage){return function(eventData){var callbackValue;callbackValue=usePostMessage?"object"==_typeof(eventData.event.data)&&eventData.event.data.hash?eventData.event.data.hash:eventData.event.data:eventData.sourceObject.contentWindow.location.hash,callback(null,callbackValue);};},UsernamePassword.prototype.login=function(options,cb){var url,body;return url=urlJoin(this.baseOptions.rootUrl,"usernamepassword","login"),options.username=options.username||options.email,options=objectHelper.blacklist(options,["email"]),body=objectHelper.merge(this.baseOptions,["clientID","redirectUri","tenant","responseType","responseMode","scope","audience"])["with"](options),body=this.transactionManager.process(body),body=objectHelper.toSnakeCase(body,["auth0Client"]),this.request.post(url).send(body).end(wrapCallback(cb));},UsernamePassword.prototype.callback=function(formHtml){var div,_document=windowHelper.getDocument();(div=_document.createElement("div")).innerHTML=formHtml,_document.body.appendChild(div).children[0].submit();},HostedPages.prototype.login=function(options,cb){if(windowHelper.getWindow().location.host!==this.baseOptions.domain)throw new Error("This method is meant to be used only inside the Universal Login Page.");var usernamePassword,params=objectHelper.merge(this.baseOptions,["clientID","redirectUri","tenant","responseType","responseMode","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);return assert.check(params,{type:"object",message:"options parameter is not valid"},{responseType:{type:"string",message:"responseType option is required"}}),(usernamePassword=new UsernamePassword(this.baseOptions)).login(params,function(err,data){return err?cb(err):usernamePassword.callback(data);});},HostedPages.prototype.signupAndLogin=function(options,cb){var _this=this;return _this.client.client.dbConnection.signup(options,function(err){return err?cb(err):_this.login(options,cb);});},HostedPages.prototype.getSSOData=function(withActiveDirectories,cb){var url,params="";return"function"==typeof withActiveDirectories&&(cb=withActiveDirectories,withActiveDirectories=!1),assert.check(withActiveDirectories,{type:"boolean",message:"withActiveDirectories parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),withActiveDirectories&&(params="?"+lib_stringify({ldaps:1,client_id:this.baseOptions.clientID})),url=urlJoin(this.baseOptions.rootUrl,"user","ssodata",params),this.request.get(url,{noHeaders:!0}).withCredentials().end(wrapCallback(cb));},WebAuth.prototype.parseHash=function(options,cb){var parsedQs,err;cb||"function"!=typeof options?options=options||{}:(cb=options,options={});var _window=windowHelper.getWindow(),hashStr=void 0===options.hash?_window.location.hash:options.hash;if(hashStr=hashStr.replace(/^#?\/?/,""),(parsedQs=lib_parse(hashStr)).hasOwnProperty("error"))return err=error.buildResponse(parsedQs.error,parsedQs.error_description),parsedQs.state&&(err.state=parsedQs.state),cb(err);if(!parsedQs.hasOwnProperty("access_token")&&!parsedQs.hasOwnProperty("id_token")&&!parsedQs.hasOwnProperty("refresh_token"))return cb(null,null);var responseTypes=(this.baseOptions.responseType||options.responseType||"").split(" ");return responseTypes.length>0&&-1!==responseTypes.indexOf("token")&&!parsedQs.hasOwnProperty("access_token")?cb(error.buildResponse("invalid_hash","response_type contains `token`, but the parsed hash does not contain an `access_token` property")):responseTypes.length>0&&-1!==responseTypes.indexOf("id_token")&&!parsedQs.hasOwnProperty("id_token")?cb(error.buildResponse("invalid_hash","response_type contains `id_token`, but the parsed hash does not contain an `id_token` property")):this.validateAuthenticationResponse(options,parsedQs,cb);},WebAuth.prototype.validateAuthenticationResponse=function(options,parsedHash,cb){var _this=this;options.__enableIdPInitiatedLogin=options.__enableIdPInitiatedLogin||options.__enableImpersonation;var state=parsedHash.state,transaction=this.transactionManager.getStoredTransaction(state),transactionState=options.state||transaction&&transaction.state||null,transactionStateMatchesState=transactionState===state;if(!(!state&&!transactionState&&options.__enableIdPInitiatedLogin)&&!transactionStateMatchesState)return cb({error:"invalid_token",errorDescription:"`state` does not match."});var transactionNonce=options.nonce||transaction&&transaction.nonce||null,appState=options.state||transaction&&transaction.appState||null,callback=function callback(err,payload){if(err)return cb(err);var sub;transaction&&transaction.lastUsedConnection&&(payload&&(sub=payload.sub),_this.ssodataStorage.set(transaction.lastUsedConnection,sub));return cb(null,function(qsParams,appState,token){return{accessToken:qsParams.access_token||null,idToken:qsParams.id_token||null,idTokenPayload:token||null,appState:appState||null,refreshToken:qsParams.refresh_token||null,state:qsParams.state||null,expiresIn:qsParams.expires_in?parseInt(qsParams.expires_in,10):null,tokenType:qsParams.token_type||null,scope:qsParams.scope||null};}(parsedHash,appState,payload));};return parsedHash.id_token?this.validateToken(parsedHash.id_token,transactionNonce,function(validationError,payload){if(!validationError)return parsedHash.access_token&&payload.at_hash?new C().validateAccessToken(parsedHash.access_token,"RS256",payload.at_hash,function(err){return err?callback(error.invalidToken(err.message)):callback(null,payload);}):callback(null,payload);if("invalid_token"!==validationError.error||validationError.errorDescription&&validationError.errorDescription.indexOf("Nonce (nonce) claim value mismatch in the ID token")>-1)return callback(validationError);var decodedToken=new C().decode(parsedHash.id_token);if("HS256"!==decodedToken.header.alg)return callback(validationError);if((decodedToken.payload.nonce||null)!==transactionNonce)return callback({error:"invalid_token",errorDescription:'Nonce (nonce) claim value mismatch in the ID token; expected "'+transactionNonce+'", found "'+decodedToken.payload.nonce+'"'});if(!parsedHash.access_token){return callback({error:"invalid_token",description:"The id_token cannot be validated because it was signed with the HS256 algorithm and public clients (like a browser) can’t store secrets. Please read the associated doc for possible ways to fix this. Read more: https://auth0.com/docs/errors/libraries/auth0-js/invalid-token#parsing-an-hs256-signed-id-token-without-an-access-token"});}return _this.client.userInfo(parsedHash.access_token,function(errUserInfo,profile){return errUserInfo?callback(errUserInfo):callback(null,profile);});}):callback(null,null);},WebAuth.prototype.validateToken=function(token,nonce,cb){new C({issuer:this.baseOptions.token_issuer,jwksURI:this.baseOptions.jwksURI,audience:this.baseOptions.clientID,leeway:this.baseOptions.leeway||60,maxAge:this.baseOptions.maxAge,__clock:this.baseOptions.__clock||defaultClock}).verify(token,nonce,function(err,payload){if(err)return cb(error.invalidToken(err.message));cb(null,payload);});},WebAuth.prototype.renewAuth=function(options,cb){var usePostMessage=!!options.usePostMessage,postMessageDataType=options.postMessageDataType||!1,postMessageOrigin=options.postMessageOrigin||windowHelper.getWindow().origin,timeout=options.timeout,_this=this,params=objectHelper.merge(this.baseOptions,["clientID","redirectUri","responseType","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);params.responseType=params.responseType||"token",params.responseMode=params.responseMode||"fragment",params=this.transactionManager.process(params),assert.check(params,{type:"object",message:"options parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),params.prompt="none",params=objectHelper.blacklist(params,["usePostMessage","tenant","postMessageDataType","postMessageOrigin"]),SilentAuthenticationHandler.create({authenticationUrl:this.client.buildAuthorizeUrl(params),postMessageDataType:postMessageDataType,postMessageOrigin:postMessageOrigin,timeout:timeout}).login(usePostMessage,function(err,hash){if("object"==_typeof(hash))return cb(err,hash);_this.parseHash({hash:hash},cb);});},WebAuth.prototype.checkSession=function(options,cb){var params=objectHelper.merge(this.baseOptions,["clientID","responseType","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);return"code"===params.responseType?cb({error:"error",error_description:"responseType can't be `code`"}):(options.nonce||(params=this.transactionManager.process(params)),params.redirectUri?(assert.check(params,{type:"object",message:"options parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),params=objectHelper.blacklist(params,["usePostMessage","tenant","postMessageDataType"]),void this.webMessageHandler.run(params,wrapCallback(cb,{forceLegacyError:!0,ignoreCasing:!0}))):cb({error:"error",error_description:"redirectUri can't be empty"}));},WebAuth.prototype.changePassword=function(options,cb){return this.client.dbConnection.changePassword(options,cb);},WebAuth.prototype.passwordlessStart=function(options,cb){var authParams=objectHelper.merge(this.baseOptions,["responseType","responseMode","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options.authParams);return options.authParams=this.transactionManager.process(authParams),this.client.passwordless.start(options,cb);},WebAuth.prototype.signup=function(options,cb){return this.client.dbConnection.signup(options,cb);},WebAuth.prototype.authorize=function(options){var params=objectHelper.merge(this.baseOptions,["clientID","responseType","responseMode","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);assert.check(params,{type:"object",message:"options parameter is not valid"},{responseType:{type:"string",message:"responseType option is required"}}),(params=this.transactionManager.process(params)).scope=params.scope||"openid profile email",windowHelper.redirect(this.client.buildAuthorizeUrl(params));},WebAuth.prototype.signupAndAuthorize=function(options,cb){var _this=this;return this.client.dbConnection.signup(objectHelper.blacklist(options,["popupHandler"]),function(err){if(err)return cb(err);options.realm=options.connection,options.username||(options.username=options.email),_this.client.login(options,cb);});},WebAuth.prototype.login=function(options,cb){var params=objectHelper.merge(this.baseOptions,["clientID","responseType","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);params=this.transactionManager.process(params),windowHelper.getWindow().location.host===this.baseOptions.domain?(params.connection=params.realm,delete params.realm,this._universalLogin.login(params,cb)):this.crossOriginAuthentication.login(params,cb);},WebAuth.prototype.passwordlessLogin=function(options,cb){var params=objectHelper.merge(this.baseOptions,["clientID","responseType","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);if(params=this.transactionManager.process(params),windowHelper.getWindow().location.host===this.baseOptions.domain)this.passwordlessVerify(params,cb);else{var crossOriginOptions=objectHelper.extend({credentialType:"http://auth0.com/oauth/grant-type/passwordless/otp",realm:params.connection,username:params.email||params.phoneNumber,otp:params.verificationCode},objectHelper.blacklist(params,["connection","email","phoneNumber","verificationCode"]));this.crossOriginAuthentication.login(crossOriginOptions,cb);}},WebAuth.prototype.crossOriginAuthenticationCallback=function(){this.crossOriginVerification();},WebAuth.prototype.crossOriginVerification=function(){this.crossOriginAuthentication.callback();},WebAuth.prototype.logout=function(options){windowHelper.redirect(this.client.buildLogoutUrl(options));},WebAuth.prototype.passwordlessVerify=function(options,cb){var _this=this,params=objectHelper.merge(this.baseOptions,["clientID","responseType","responseMode","redirectUri","scope","audience","_csrf","state","_intstate","nonce"])["with"](options);return assert.check(params,{type:"object",message:"options parameter is not valid"},{responseType:{type:"string",message:"responseType option is required"}}),params=this.transactionManager.process(params),this.client.passwordless.verify(params,function(err){return err?cb(err):windowHelper.redirect(_this.client.passwordless.buildVerifyUrl(params));});},PasswordlessAuthentication.prototype.buildVerifyUrl=function(options){var params,qString;return assert.check(options,{type:"object",message:"options parameter is not valid"},{connection:{type:"string",message:"connection option is required"},verificationCode:{type:"string",message:"verificationCode option is required"},phoneNumber:{optional:!1,type:"string",message:"phoneNumber option is required",condition:function condition(o){return!o.email;}},email:{optional:!1,type:"string",message:"email option is required",condition:function condition(o){return!o.phoneNumber;}}}),params=objectHelper.merge(this.baseOptions,["clientID","responseType","responseMode","redirectUri","scope","audience","_csrf","state","_intstate","protocol","nonce"])["with"](options),this.baseOptions._sendTelemetry&&(params.auth0Client=this.request.getTelemetryData()),params=objectHelper.toSnakeCase(params,["auth0Client"]),qString=lib_stringify(params),urlJoin(this.baseOptions.rootUrl,"passwordless","verify_redirect","?"+qString);},PasswordlessAuthentication.prototype.start=function(options,cb){var url,body;return assert.check(options,{type:"object",message:"options parameter is not valid"},{connection:{type:"string",message:"connection option is required"},send:{type:"string",message:"send option is required",values:["link","code"],value_message:"send is not valid ([link, code])"},phoneNumber:{optional:!0,type:"string",message:"phoneNumber option is required",condition:function condition(o){return"code"===o.send||!o.email;}},email:{optional:!0,type:"string",message:"email option is required",condition:function condition(o){return"link"===o.send||!o.phoneNumber;}},authParams:{optional:!0,type:"object",message:"authParams option is required"}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"passwordless","start"),(body=objectHelper.merge(this.baseOptions,["clientID","responseType","redirectUri","scope"])["with"](options)).scope&&(body.authParams=body.authParams||{},body.authParams.scope=body.authParams.scope||body.scope),body.redirectUri&&(body.authParams=body.authParams||{},body.authParams.redirect_uri=body.authParams.redirectUri||body.redirectUri),body.responseType&&(body.authParams=body.authParams||{},body.authParams.response_type=body.authParams.responseType||body.responseType),delete body.redirectUri,delete body.responseType,delete body.scope,body=objectHelper.toSnakeCase(body,["auth0Client","authParams"]),this.request.post(url).send(body).end(wrapCallback(cb));},PasswordlessAuthentication.prototype.verify=function(options,cb){var url,cleanOption;return assert.check(options,{type:"object",message:"options parameter is not valid"},{connection:{type:"string",message:"connection option is required"},verificationCode:{type:"string",message:"verificationCode option is required"},phoneNumber:{optional:!1,type:"string",message:"phoneNumber option is required",condition:function condition(o){return!o.email;}},email:{optional:!1,type:"string",message:"email option is required",condition:function condition(o){return!o.phoneNumber;}}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),cleanOption=objectHelper.pick(options,["connection","verificationCode","phoneNumber","email","auth0Client"]),cleanOption=objectHelper.toSnakeCase(cleanOption,["auth0Client"]),url=urlJoin(this.baseOptions.rootUrl,"passwordless","verify"),this.request.post(url).send(cleanOption).end(wrapCallback(cb));},DBConnection.prototype.signup=function(options,cb){var url,body,metadata;return assert.check(options,{type:"object",message:"options parameter is not valid"},{connection:{type:"string",message:"connection option is required"},email:{type:"string",message:"email option is required"},password:{type:"string",message:"password option is required"}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"dbconnections","signup"),metadata=(body=objectHelper.merge(this.baseOptions,["clientID"])["with"](options)).user_metadata||body.userMetadata,body=objectHelper.blacklist(body,["scope","userMetadata","user_metadata"]),body=objectHelper.toSnakeCase(body,["auth0Client"]),metadata&&(body.user_metadata=metadata),this.request.post(url).send(body).end(wrapCallback(cb));},DBConnection.prototype.changePassword=function(options,cb){var url,body;return assert.check(options,{type:"object",message:"options parameter is not valid"},{connection:{type:"string",message:"connection option is required"},email:{type:"string",message:"email option is required"}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"dbconnections","change_password"),body=objectHelper.merge(this.baseOptions,["clientID"])["with"](options,["email","connection"]),body=objectHelper.toSnakeCase(body,["auth0Client"]),this.request.post(url).send(body).end(wrapCallback(cb));},Authentication.prototype.buildAuthorizeUrl=function(options){var params,qString;return assert.check(options,{type:"object",message:"options parameter is not valid"}),params=objectHelper.merge(this.baseOptions,["clientID","responseType","responseMode","redirectUri","scope","audience"])["with"](options),assert.check(params,{type:"object",message:"options parameter is not valid"},{clientID:{type:"string",message:"clientID option is required"},redirectUri:{optional:!0,type:"string",message:"redirectUri option is required"},responseType:{type:"string",message:"responseType option is required"},nonce:{type:"string",message:"nonce option is required",condition:function condition(o){return-1===o.responseType.indexOf("code")&&-1!==o.responseType.indexOf("id_token");}},scope:{optional:!0,type:"string",message:"scope option is required"},audience:{optional:!0,type:"string",message:"audience option is required"}}),this.baseOptions._sendTelemetry&&(params.auth0Client=this.request.getTelemetryData()),params.connection_scope&&assert.isArray(params.connection_scope)&&(params.connection_scope=params.connection_scope.join(",")),params=objectHelper.blacklist(params,["username","popupOptions","domain","tenant","timeout","appState"]),params=objectHelper.toSnakeCase(params,["auth0Client"]),params=parametersWhitelist.oauthAuthorizeParams(this.warn,params),qString=lib_stringify(params),urlJoin(this.baseOptions.rootUrl,"authorize","?"+qString);},Authentication.prototype.buildLogoutUrl=function(options){var params,qString;return assert.check(options,{optional:!0,type:"object",message:"options parameter is not valid"}),params=objectHelper.merge(this.baseOptions,["clientID"])["with"](options||{}),this.baseOptions._sendTelemetry&&(params.auth0Client=this.request.getTelemetryData()),params=objectHelper.toSnakeCase(params,["auth0Client","returnTo"]),qString=lib_stringify(objectHelper.blacklist(params,["federated"])),options&&void 0!==options.federated&&!1!==options.federated&&"false"!==options.federated&&(qString+="&federated"),urlJoin(this.baseOptions.rootUrl,"v2","logout","?"+qString);},Authentication.prototype.loginWithDefaultDirectory=function(options,cb){return assert.check(options,{type:"object",message:"options parameter is not valid"},{username:{type:"string",message:"username option is required"},password:{type:"string",message:"password option is required"},scope:{optional:!0,type:"string",message:"scope option is required"},audience:{optional:!0,type:"string",message:"audience option is required"}}),options.grantType="password",this.oauthToken(options,cb);},Authentication.prototype.login=function(options,cb){return assert.check(options,{type:"object",message:"options parameter is not valid"},{username:{type:"string",message:"username option is required"},password:{type:"string",message:"password option is required"},realm:{type:"string",message:"realm option is required"},scope:{optional:!0,type:"string",message:"scope option is required"},audience:{optional:!0,type:"string",message:"audience option is required"}}),options.grantType="http://auth0.com/oauth/grant-type/password-realm",this.oauthToken(options,cb);},Authentication.prototype.oauthToken=function(options,cb){var url,body;return assert.check(options,{type:"object",message:"options parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"oauth","token"),body=objectHelper.merge(this.baseOptions,["clientID","scope","audience"])["with"](options),assert.check(body,{type:"object",message:"options parameter is not valid"},{clientID:{type:"string",message:"clientID option is required"},grantType:{type:"string",message:"grantType option is required"},scope:{optional:!0,type:"string",message:"scope option is required"},audience:{optional:!0,type:"string",message:"audience option is required"}}),body=objectHelper.toSnakeCase(body,["auth0Client"]),body=parametersWhitelist.oauthTokenParams(this.warn,body),this.request.post(url).send(body).end(wrapCallback(cb));},Authentication.prototype.loginWithResourceOwner=function(options,cb){var url,body;return assert.check(options,{type:"object",message:"options parameter is not valid"},{username:{type:"string",message:"username option is required"},password:{type:"string",message:"password option is required"},connection:{type:"string",message:"connection option is required"},scope:{optional:!0,type:"string",message:"scope option is required"}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"oauth","ro"),body=objectHelper.merge(this.baseOptions,["clientID","scope"])["with"](options,["username","password","scope","connection","device"]),(body=objectHelper.toSnakeCase(body,["auth0Client"])).grant_type=body.grant_type||"password",this.request.post(url).send(body).end(wrapCallback(cb));},Authentication.prototype.getSSOData=function(withActiveDirectories,cb){if(this.auth0||(this.auth0=new WebAuth(this.baseOptions)),windowHelper.getWindow().location.host===this.baseOptions.domain)return this.auth0._universalLogin.getSSOData(withActiveDirectories,cb);"function"==typeof withActiveDirectories&&(cb=withActiveDirectories),assert.check(cb,{type:"function",message:"cb parameter is not valid"});var clientId=this.baseOptions.clientID,ssodataInformation=this.ssodataStorage.get()||{};this.auth0.checkSession({responseType:"token id_token",scope:"openid profile email",connection:ssodataInformation.lastUsedConnection,timeout:5e3},function(err,result){return err?"login_required"===err.error?cb(null,{sso:!1}):("consent_required"===err.error&&(err.error_description="Consent required. When using `getSSOData`, the user has to be authenticated with the following scope: `openid profile email`."),cb(err,{sso:!1})):ssodataInformation.lastUsedSub&&ssodataInformation.lastUsedSub!==result.idTokenPayload.sub?cb(err,{sso:!1}):cb(null,{lastUsedConnection:{name:ssodataInformation.lastUsedConnection},lastUsedUserID:result.idTokenPayload.sub,lastUsedUsername:result.idTokenPayload.email||result.idTokenPayload.name,lastUsedClientID:clientId,sessionClients:[clientId],sso:!0});});},Authentication.prototype.userInfo=function(accessToken,cb){var url;return assert.check(accessToken,{type:"string",message:"accessToken parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"userinfo"),this.request.get(url).set("Authorization","Bearer "+accessToken).end(wrapCallback(cb,{ignoreCasing:!0}));},Authentication.prototype.getChallenge=function(cb){if(assert.check(cb,{type:"function",message:"cb parameter is not valid"}),!this.baseOptions.state)return cb();var url=urlJoin(this.baseOptions.rootUrl,"usernamepassword","challenge");return this.request.post(url).send({state:this.baseOptions.state}).end(wrapCallback(cb,{ignoreCasing:!0}));},Authentication.prototype.delegation=function(options,cb){var url,body;return assert.check(options,{type:"object",message:"options parameter is not valid"},{grant_type:{type:"string",message:"grant_type option is required"}}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"delegation"),body=objectHelper.merge(this.baseOptions,["clientID"])["with"](options),body=objectHelper.toSnakeCase(body,["auth0Client"]),this.request.post(url).send(body).end(wrapCallback(cb));},Authentication.prototype.getUserCountry=function(cb){var url;return assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"user","geoloc","country"),this.request.get(url).end(wrapCallback(cb));},Management.prototype.getUser=function(userId,cb){var url;return assert.check(userId,{type:"string",message:"userId parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"users",userId),this.request.get(url).end(wrapCallback(cb,{ignoreCasing:!0}));},Management.prototype.patchUserMetadata=function(userId,userMetadata,cb){var url;return assert.check(userId,{type:"string",message:"userId parameter is not valid"}),assert.check(userMetadata,{type:"object",message:"userMetadata parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"users",userId),this.request.patch(url).send({user_metadata:userMetadata}).end(wrapCallback(cb,{ignoreCasing:!0}));},Management.prototype.patchUserAttributes=function(userId,user,cb){var url;return assert.check(userId,{type:"string",message:"userId parameter is not valid"}),assert.check(user,{type:"object",message:"user parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"users",userId),this.request.patch(url).send(user).end(wrapCallback(cb,{ignoreCasing:!0}));},Management.prototype.linkUser=function(userId,secondaryUserToken,cb){var url;return assert.check(userId,{type:"string",message:"userId parameter is not valid"}),assert.check(secondaryUserToken,{type:"string",message:"secondaryUserToken parameter is not valid"}),assert.check(cb,{type:"function",message:"cb parameter is not valid"}),url=urlJoin(this.baseOptions.rootUrl,"users",userId,"identities"),this.request.post(url).send({link_with:secondaryUserToken}).end(wrapCallback(cb,{ignoreCasing:!0}));};var index={Authentication:Authentication,Management:Management,WebAuth:WebAuth,version:version};exports.Authentication=Authentication,exports.Management=Management,exports.WebAuth=WebAuth,exports["default"]=index,exports.version=version,Object.defineProperty(exports,"__esModule",{value:!0});});}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"_process":119}],9:[function(require,module,exports){require('../../modules/es.reflect.apply');require('../../modules/es.reflect.construct');require('../../modules/es.reflect.define-property');require('../../modules/es.reflect.delete-property');require('../../modules/es.reflect.get');require('../../modules/es.reflect.get-own-property-descriptor');require('../../modules/es.reflect.get-prototype-of');require('../../modules/es.reflect.has');require('../../modules/es.reflect.is-extensible');require('../../modules/es.reflect.own-keys');require('../../modules/es.reflect.prevent-extensions');require('../../modules/es.reflect.set');require('../../modules/es.reflect.set-prototype-of');var path=require('../../internals/path');module.exports=path.Reflect;},{"../../internals/path":73,"../../modules/es.reflect.apply":95,"../../modules/es.reflect.construct":96,"../../modules/es.reflect.define-property":97,"../../modules/es.reflect.delete-property":98,"../../modules/es.reflect.get":101,"../../modules/es.reflect.get-own-property-descriptor":99,"../../modules/es.reflect.get-prototype-of":100,"../../modules/es.reflect.has":102,"../../modules/es.reflect.is-extensible":103,"../../modules/es.reflect.own-keys":104,"../../modules/es.reflect.prevent-extensions":105,"../../modules/es.reflect.set":107,"../../modules/es.reflect.set-prototype-of":106}],10:[function(require,module,exports){var parent=require('../../es/reflect');require('../../modules/esnext.reflect.define-metadata');require('../../modules/esnext.reflect.delete-metadata');require('../../modules/esnext.reflect.get-metadata');require('../../modules/esnext.reflect.get-metadata-keys');require('../../modules/esnext.reflect.get-own-metadata');require('../../modules/esnext.reflect.get-own-metadata-keys');require('../../modules/esnext.reflect.has-metadata');require('../../modules/esnext.reflect.has-own-metadata');require('../../modules/esnext.reflect.metadata');module.exports=parent;},{"../../es/reflect":9,"../../modules/esnext.reflect.define-metadata":110,"../../modules/esnext.reflect.delete-metadata":111,"../../modules/esnext.reflect.get-metadata":113,"../../modules/esnext.reflect.get-metadata-keys":112,"../../modules/esnext.reflect.get-own-metadata":115,"../../modules/esnext.reflect.get-own-metadata-keys":114,"../../modules/esnext.reflect.has-metadata":116,"../../modules/esnext.reflect.has-own-metadata":117,"../../modules/esnext.reflect.metadata":118}],11:[function(require,module,exports){module.exports=function(it){if(typeof it!='function'){throw TypeError(String(it)+' is not a function');}return it;};},{}],12:[function(require,module,exports){var isObject=require('../internals/is-object');module.exports=function(it){if(!isObject(it)&&it!==null){throw TypeError("Can't set "+String(it)+' as a prototype');}return it;};},{"../internals/is-object":54}],13:[function(require,module,exports){module.exports=function(it,Constructor,name){if(!(it instanceof Constructor)){throw TypeError('Incorrect '+(name?name+' ':'')+'invocation');}return it;};},{}],14:[function(require,module,exports){var isObject=require('../internals/is-object');module.exports=function(it){if(!isObject(it)){throw TypeError(String(it)+' is not an object');}return it;};},{"../internals/is-object":54}],15:[function(require,module,exports){var toIndexedObject=require('../internals/to-indexed-object');var toLength=require('../internals/to-length');var toAbsoluteIndex=require('../internals/to-absolute-index');// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod=function createMethod(IS_INCLUDES){return function($this,el,fromIndex){var O=toIndexedObject($this);var length=toLength(O.length);var index=toAbsoluteIndex(fromIndex,length);var value;// Array#includes uses SameValueZero equality algorithm
// eslint-disable-next-line no-self-compare
if(IS_INCLUDES&&el!=el)while(length>index){value=O[index++];// eslint-disable-next-line no-self-compare
if(value!=value)return true;// Array#indexOf ignores holes, Array#includes - not
}else for(;length>index;index++){if((IS_INCLUDES||index in O)&&O[index]===el)return IS_INCLUDES||index||0;}return!IS_INCLUDES&&-1;};};module.exports={// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
includes:createMethod(true),// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
indexOf:createMethod(false)};},{"../internals/to-absolute-index":84,"../internals/to-indexed-object":85,"../internals/to-length":87}],16:[function(require,module,exports){var bind=require('../internals/function-bind-context');var IndexedObject=require('../internals/indexed-object');var toObject=require('../internals/to-object');var toLength=require('../internals/to-length');var arraySpeciesCreate=require('../internals/array-species-create');var push=[].push;// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod=function createMethod(TYPE){var IS_MAP=TYPE==1;var IS_FILTER=TYPE==2;var IS_SOME=TYPE==3;var IS_EVERY=TYPE==4;var IS_FIND_INDEX=TYPE==6;var NO_HOLES=TYPE==5||IS_FIND_INDEX;return function($this,callbackfn,that,specificCreate){var O=toObject($this);var self=IndexedObject(O);var boundFunction=bind(callbackfn,that,3);var length=toLength(self.length);var index=0;var create=specificCreate||arraySpeciesCreate;var target=IS_MAP?create($this,length):IS_FILTER?create($this,0):undefined;var value,result;for(;length>index;index++){if(NO_HOLES||index in self){value=self[index];result=boundFunction(value,index,O);if(TYPE){if(IS_MAP)target[index]=result;// map
else if(result)switch(TYPE){case 3:return true;// some
case 5:return value;// find
case 6:return index;// findIndex
case 2:push.call(target,value);// filter
}else if(IS_EVERY)return false;// every
}}}return IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:target;};};module.exports={// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
forEach:createMethod(0),// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
map:createMethod(1),// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
filter:createMethod(2),// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
some:createMethod(3),// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
every:createMethod(4),// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
find:createMethod(5),// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
findIndex:createMethod(6)};},{"../internals/array-species-create":17,"../internals/function-bind-context":37,"../internals/indexed-object":46,"../internals/to-length":87,"../internals/to-object":88}],17:[function(require,module,exports){var isObject=require('../internals/is-object');var isArray=require('../internals/is-array');var wellKnownSymbol=require('../internals/well-known-symbol');var SPECIES=wellKnownSymbol('species');// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports=function(originalArray,length){var C;if(isArray(originalArray)){C=originalArray.constructor;// cross-realm fallback
if(typeof C=='function'&&(C===Array||isArray(C.prototype)))C=undefined;else if(isObject(C)){C=C[SPECIES];if(C===null)C=undefined;}}return new(C===undefined?Array:C)(length===0?0:length);};},{"../internals/is-array":52,"../internals/is-object":54,"../internals/well-known-symbol":93}],18:[function(require,module,exports){var anObject=require('../internals/an-object');// call something on iterator step with safe closing on error
module.exports=function(iterator,fn,value,ENTRIES){try{return ENTRIES?fn(anObject(value)[0],value[1]):fn(value);// 7.4.6 IteratorClose(iterator, completion)
}catch(error){var returnMethod=iterator['return'];if(returnMethod!==undefined)anObject(returnMethod.call(iterator));throw error;}};},{"../internals/an-object":14}],19:[function(require,module,exports){var wellKnownSymbol=require('../internals/well-known-symbol');var ITERATOR=wellKnownSymbol('iterator');var SAFE_CLOSING=false;try{var called=0;var iteratorWithReturn={next:function next(){return{done:!!called++};},'return':function _return(){SAFE_CLOSING=true;}};iteratorWithReturn[ITERATOR]=function(){return this;};// eslint-disable-next-line no-throw-literal
Array.from(iteratorWithReturn,function(){throw 2;});}catch(error){/* empty */}module.exports=function(exec,SKIP_CLOSING){if(!SKIP_CLOSING&&!SAFE_CLOSING)return false;var ITERATION_SUPPORT=false;try{var object={};object[ITERATOR]=function(){return{next:function next(){return{done:ITERATION_SUPPORT=true};}};};exec(object);}catch(error){/* empty */}return ITERATION_SUPPORT;};},{"../internals/well-known-symbol":93}],20:[function(require,module,exports){var toString={}.toString;module.exports=function(it){return toString.call(it).slice(8,-1);};},{}],21:[function(require,module,exports){var TO_STRING_TAG_SUPPORT=require('../internals/to-string-tag-support');var classofRaw=require('../internals/classof-raw');var wellKnownSymbol=require('../internals/well-known-symbol');var TO_STRING_TAG=wellKnownSymbol('toStringTag');// ES3 wrong here
var CORRECT_ARGUMENTS=classofRaw(function(){return arguments;}())=='Arguments';// fallback for IE11 Script Access Denied error
var tryGet=function tryGet(it,key){try{return it[key];}catch(error){/* empty */}};// getting tag from ES6+ `Object.prototype.toString`
module.exports=TO_STRING_TAG_SUPPORT?classofRaw:function(it){var O,tag,result;return it===undefined?'Undefined':it===null?'Null'// @@toStringTag case
:typeof(tag=tryGet(O=Object(it),TO_STRING_TAG))=='string'?tag// builtinTag case
:CORRECT_ARGUMENTS?classofRaw(O)// ES3 arguments fallback
:(result=classofRaw(O))=='Object'&&typeof O.callee=='function'?'Arguments':result;};},{"../internals/classof-raw":20,"../internals/to-string-tag-support":90,"../internals/well-known-symbol":93}],22:[function(require,module,exports){'use strict';var defineProperty=require('../internals/object-define-property').f;var create=require('../internals/object-create');var redefineAll=require('../internals/redefine-all');var bind=require('../internals/function-bind-context');var anInstance=require('../internals/an-instance');var iterate=require('../internals/iterate');var defineIterator=require('../internals/define-iterator');var setSpecies=require('../internals/set-species');var DESCRIPTORS=require('../internals/descriptors');var fastKey=require('../internals/internal-metadata').fastKey;var InternalStateModule=require('../internals/internal-state');var setInternalState=InternalStateModule.set;var internalStateGetterFor=InternalStateModule.getterFor;module.exports={getConstructor:function getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var C=wrapper(function(that,iterable){anInstance(that,C,CONSTRUCTOR_NAME);setInternalState(that,{type:CONSTRUCTOR_NAME,index:create(null),first:undefined,last:undefined,size:0});if(!DESCRIPTORS)that.size=0;if(iterable!=undefined)iterate(iterable,that[ADDER],that,IS_MAP);});var getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME);var define=function define(that,key,value){var state=getInternalState(that);var entry=getEntry(that,key);var previous,index;// change existing entry
if(entry){entry.value=value;// create new entry
}else{state.last=entry={index:index=fastKey(key,true),key:key,value:value,previous:previous=state.last,next:undefined,removed:false};if(!state.first)state.first=entry;if(previous)previous.next=entry;if(DESCRIPTORS)state.size++;else that.size++;// add to index
if(index!=='F')state.index[index]=entry;}return that;};var getEntry=function getEntry(that,key){var state=getInternalState(that);// fast case
var index=fastKey(key);var entry;if(index!=='F')return state.index[index];// frozen object case
for(entry=state.first;entry;entry=entry.next){if(entry.key==key)return entry;}};redefineAll(C.prototype,{// 23.1.3.1 Map.prototype.clear()
// 23.2.3.2 Set.prototype.clear()
clear:function clear(){var that=this;var state=getInternalState(that);var data=state.index;var entry=state.first;while(entry){entry.removed=true;if(entry.previous)entry.previous=entry.previous.next=undefined;delete data[entry.index];entry=entry.next;}state.first=state.last=undefined;if(DESCRIPTORS)state.size=0;else that.size=0;},// 23.1.3.3 Map.prototype.delete(key)
// 23.2.3.4 Set.prototype.delete(value)
'delete':function _delete(key){var that=this;var state=getInternalState(that);var entry=getEntry(that,key);if(entry){var next=entry.next;var prev=entry.previous;delete state.index[entry.index];entry.removed=true;if(prev)prev.next=next;if(next)next.previous=prev;if(state.first==entry)state.first=next;if(state.last==entry)state.last=prev;if(DESCRIPTORS)state.size--;else that.size--;}return!!entry;},// 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
// 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
forEach:function forEach(callbackfn/* , that = undefined */){var state=getInternalState(this);var boundFunction=bind(callbackfn,arguments.length>1?arguments[1]:undefined,3);var entry;while(entry=entry?entry.next:state.first){boundFunction(entry.value,entry.key,this);// revert to the last existing entry
while(entry&&entry.removed){entry=entry.previous;}}},// 23.1.3.7 Map.prototype.has(key)
// 23.2.3.7 Set.prototype.has(value)
has:function has(key){return!!getEntry(this,key);}});redefineAll(C.prototype,IS_MAP?{// 23.1.3.6 Map.prototype.get(key)
get:function get(key){var entry=getEntry(this,key);return entry&&entry.value;},// 23.1.3.9 Map.prototype.set(key, value)
set:function set(key,value){return define(this,key===0?0:key,value);}}:{// 23.2.3.1 Set.prototype.add(value)
add:function add(value){return define(this,value=value===0?0:value,value);}});if(DESCRIPTORS)defineProperty(C.prototype,'size',{get:function get(){return getInternalState(this).size;}});return C;},setStrong:function setStrong(C,CONSTRUCTOR_NAME,IS_MAP){var ITERATOR_NAME=CONSTRUCTOR_NAME+' Iterator';var getInternalCollectionState=internalStateGetterFor(CONSTRUCTOR_NAME);var getInternalIteratorState=internalStateGetterFor(ITERATOR_NAME);// add .keys, .values, .entries, [@@iterator]
// 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
defineIterator(C,CONSTRUCTOR_NAME,function(iterated,kind){setInternalState(this,{type:ITERATOR_NAME,target:iterated,state:getInternalCollectionState(iterated),kind:kind,last:undefined});},function(){var state=getInternalIteratorState(this);var kind=state.kind;var entry=state.last;// revert to the last existing entry
while(entry&&entry.removed){entry=entry.previous;}// get next entry
if(!state.target||!(state.last=entry=entry?entry.next:state.state.first)){// or finish the iteration
state.target=undefined;return{value:undefined,done:true};}// return step by kind
if(kind=='keys')return{value:entry.key,done:false};if(kind=='values')return{value:entry.value,done:false};return{value:[entry.key,entry.value],done:false};},IS_MAP?'entries':'values',!IS_MAP,true);// add [@@species], 23.1.2.2, 23.2.2.2
setSpecies(CONSTRUCTOR_NAME);}};},{"../internals/an-instance":13,"../internals/define-iterator":30,"../internals/descriptors":31,"../internals/function-bind-context":37,"../internals/internal-metadata":49,"../internals/internal-state":50,"../internals/iterate":56,"../internals/object-create":61,"../internals/object-define-property":63,"../internals/redefine-all":74,"../internals/set-species":79}],23:[function(require,module,exports){'use strict';var redefineAll=require('../internals/redefine-all');var getWeakData=require('../internals/internal-metadata').getWeakData;var anObject=require('../internals/an-object');var isObject=require('../internals/is-object');var anInstance=require('../internals/an-instance');var iterate=require('../internals/iterate');var ArrayIterationModule=require('../internals/array-iteration');var $has=require('../internals/has');var InternalStateModule=require('../internals/internal-state');var setInternalState=InternalStateModule.set;var internalStateGetterFor=InternalStateModule.getterFor;var find=ArrayIterationModule.find;var findIndex=ArrayIterationModule.findIndex;var id=0;// fallback for uncaught frozen keys
var uncaughtFrozenStore=function uncaughtFrozenStore(store){return store.frozen||(store.frozen=new UncaughtFrozenStore());};var UncaughtFrozenStore=function UncaughtFrozenStore(){this.entries=[];};var findUncaughtFrozen=function findUncaughtFrozen(store,key){return find(store.entries,function(it){return it[0]===key;});};UncaughtFrozenStore.prototype={get:function get(key){var entry=findUncaughtFrozen(this,key);if(entry)return entry[1];},has:function has(key){return!!findUncaughtFrozen(this,key);},set:function set(key,value){var entry=findUncaughtFrozen(this,key);if(entry)entry[1]=value;else this.entries.push([key,value]);},'delete':function _delete(key){var index=findIndex(this.entries,function(it){return it[0]===key;});if(~index)this.entries.splice(index,1);return!!~index;}};module.exports={getConstructor:function getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER){var C=wrapper(function(that,iterable){anInstance(that,C,CONSTRUCTOR_NAME);setInternalState(that,{type:CONSTRUCTOR_NAME,id:id++,frozen:undefined});if(iterable!=undefined)iterate(iterable,that[ADDER],that,IS_MAP);});var getInternalState=internalStateGetterFor(CONSTRUCTOR_NAME);var define=function define(that,key,value){var state=getInternalState(that);var data=getWeakData(anObject(key),true);if(data===true)uncaughtFrozenStore(state).set(key,value);else data[state.id]=value;return that;};redefineAll(C.prototype,{// 23.3.3.2 WeakMap.prototype.delete(key)
// 23.4.3.3 WeakSet.prototype.delete(value)
'delete':function _delete(key){var state=getInternalState(this);if(!isObject(key))return false;var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state)['delete'](key);return data&&$has(data,state.id)&&delete data[state.id];},// 23.3.3.4 WeakMap.prototype.has(key)
// 23.4.3.4 WeakSet.prototype.has(value)
has:function has(key){var state=getInternalState(this);if(!isObject(key))return false;var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state).has(key);return data&&$has(data,state.id);}});redefineAll(C.prototype,IS_MAP?{// 23.3.3.3 WeakMap.prototype.get(key)
get:function get(key){var state=getInternalState(this);if(isObject(key)){var data=getWeakData(key);if(data===true)return uncaughtFrozenStore(state).get(key);return data?data[state.id]:undefined;}},// 23.3.3.5 WeakMap.prototype.set(key, value)
set:function set(key,value){return define(this,key,value);}}:{// 23.4.3.1 WeakSet.prototype.add(value)
add:function add(value){return define(this,value,true);}});return C;}};},{"../internals/an-instance":13,"../internals/an-object":14,"../internals/array-iteration":16,"../internals/has":42,"../internals/internal-metadata":49,"../internals/internal-state":50,"../internals/is-object":54,"../internals/iterate":56,"../internals/redefine-all":74}],24:[function(require,module,exports){'use strict';var $=require('../internals/export');var global=require('../internals/global');var isForced=require('../internals/is-forced');var redefine=require('../internals/redefine');var InternalMetadataModule=require('../internals/internal-metadata');var iterate=require('../internals/iterate');var anInstance=require('../internals/an-instance');var isObject=require('../internals/is-object');var fails=require('../internals/fails');var checkCorrectnessOfIteration=require('../internals/check-correctness-of-iteration');var setToStringTag=require('../internals/set-to-string-tag');var inheritIfRequired=require('../internals/inherit-if-required');module.exports=function(CONSTRUCTOR_NAME,wrapper,common){var IS_MAP=CONSTRUCTOR_NAME.indexOf('Map')!==-1;var IS_WEAK=CONSTRUCTOR_NAME.indexOf('Weak')!==-1;var ADDER=IS_MAP?'set':'add';var NativeConstructor=global[CONSTRUCTOR_NAME];var NativePrototype=NativeConstructor&&NativeConstructor.prototype;var Constructor=NativeConstructor;var exported={};var fixMethod=function fixMethod(KEY){var nativeMethod=NativePrototype[KEY];redefine(NativePrototype,KEY,KEY=='add'?function add(value){nativeMethod.call(this,value===0?0:value);return this;}:KEY=='delete'?function(key){return IS_WEAK&&!isObject(key)?false:nativeMethod.call(this,key===0?0:key);}:KEY=='get'?function get(key){return IS_WEAK&&!isObject(key)?undefined:nativeMethod.call(this,key===0?0:key);}:KEY=='has'?function has(key){return IS_WEAK&&!isObject(key)?false:nativeMethod.call(this,key===0?0:key);}:function set(key,value){nativeMethod.call(this,key===0?0:key,value);return this;});};// eslint-disable-next-line max-len
if(isForced(CONSTRUCTOR_NAME,typeof NativeConstructor!='function'||!(IS_WEAK||NativePrototype.forEach&&!fails(function(){new NativeConstructor().entries().next();})))){// create collection constructor
Constructor=common.getConstructor(wrapper,CONSTRUCTOR_NAME,IS_MAP,ADDER);InternalMetadataModule.REQUIRED=true;}else if(isForced(CONSTRUCTOR_NAME,true)){var instance=new Constructor();// early implementations not supports chaining
var HASNT_CHAINING=instance[ADDER](IS_WEAK?{}:-0,1)!=instance;// V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
var THROWS_ON_PRIMITIVES=fails(function(){instance.has(1);});// most early implementations doesn't supports iterables, most modern - not close it correctly
// eslint-disable-next-line no-new
var ACCEPT_ITERABLES=checkCorrectnessOfIteration(function(iterable){new NativeConstructor(iterable);});// for early implementations -0 and +0 not the same
var BUGGY_ZERO=!IS_WEAK&&fails(function(){// V8 ~ Chromium 42- fails only with 5+ elements
var $instance=new NativeConstructor();var index=5;while(index--){$instance[ADDER](index,index);}return!$instance.has(-0);});if(!ACCEPT_ITERABLES){Constructor=wrapper(function(dummy,iterable){anInstance(dummy,Constructor,CONSTRUCTOR_NAME);var that=inheritIfRequired(new NativeConstructor(),dummy,Constructor);if(iterable!=undefined)iterate(iterable,that[ADDER],that,IS_MAP);return that;});Constructor.prototype=NativePrototype;NativePrototype.constructor=Constructor;}if(THROWS_ON_PRIMITIVES||BUGGY_ZERO){fixMethod('delete');fixMethod('has');IS_MAP&&fixMethod('get');}if(BUGGY_ZERO||HASNT_CHAINING)fixMethod(ADDER);// weak collections should not contains .clear method
if(IS_WEAK&&NativePrototype.clear)delete NativePrototype.clear;}exported[CONSTRUCTOR_NAME]=Constructor;$({global:true,forced:Constructor!=NativeConstructor},exported);setToStringTag(Constructor,CONSTRUCTOR_NAME);if(!IS_WEAK)common.setStrong(Constructor,CONSTRUCTOR_NAME,IS_MAP);return Constructor;};},{"../internals/an-instance":13,"../internals/check-correctness-of-iteration":19,"../internals/export":34,"../internals/fails":35,"../internals/global":41,"../internals/inherit-if-required":47,"../internals/internal-metadata":49,"../internals/is-forced":53,"../internals/is-object":54,"../internals/iterate":56,"../internals/redefine":75,"../internals/set-to-string-tag":80}],25:[function(require,module,exports){var has=require('../internals/has');var ownKeys=require('../internals/own-keys');var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');var definePropertyModule=require('../internals/object-define-property');module.exports=function(target,source){var keys=ownKeys(source);var defineProperty=definePropertyModule.f;var getOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;for(var i=0;i<keys.length;i++){var key=keys[i];if(!has(target,key))defineProperty(target,key,getOwnPropertyDescriptor(source,key));}};},{"../internals/has":42,"../internals/object-define-property":63,"../internals/object-get-own-property-descriptor":64,"../internals/own-keys":72}],26:[function(require,module,exports){var fails=require('../internals/fails');module.exports=!fails(function(){function F(){/* empty */}F.prototype.constructor=null;return Object.getPrototypeOf(new F())!==F.prototype;});},{"../internals/fails":35}],27:[function(require,module,exports){'use strict';var IteratorPrototype=require('../internals/iterators-core').IteratorPrototype;var create=require('../internals/object-create');var createPropertyDescriptor=require('../internals/create-property-descriptor');var setToStringTag=require('../internals/set-to-string-tag');var Iterators=require('../internals/iterators');var returnThis=function returnThis(){return this;};module.exports=function(IteratorConstructor,NAME,next){var TO_STRING_TAG=NAME+' Iterator';IteratorConstructor.prototype=create(IteratorPrototype,{next:createPropertyDescriptor(1,next)});setToStringTag(IteratorConstructor,TO_STRING_TAG,false,true);Iterators[TO_STRING_TAG]=returnThis;return IteratorConstructor;};},{"../internals/create-property-descriptor":29,"../internals/iterators":58,"../internals/iterators-core":57,"../internals/object-create":61,"../internals/set-to-string-tag":80}],28:[function(require,module,exports){var DESCRIPTORS=require('../internals/descriptors');var definePropertyModule=require('../internals/object-define-property');var createPropertyDescriptor=require('../internals/create-property-descriptor');module.exports=DESCRIPTORS?function(object,key,value){return definePropertyModule.f(object,key,createPropertyDescriptor(1,value));}:function(object,key,value){object[key]=value;return object;};},{"../internals/create-property-descriptor":29,"../internals/descriptors":31,"../internals/object-define-property":63}],29:[function(require,module,exports){module.exports=function(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value:value};};},{}],30:[function(require,module,exports){'use strict';var $=require('../internals/export');var createIteratorConstructor=require('../internals/create-iterator-constructor');var getPrototypeOf=require('../internals/object-get-prototype-of');var setPrototypeOf=require('../internals/object-set-prototype-of');var setToStringTag=require('../internals/set-to-string-tag');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var redefine=require('../internals/redefine');var wellKnownSymbol=require('../internals/well-known-symbol');var IS_PURE=require('../internals/is-pure');var Iterators=require('../internals/iterators');var IteratorsCore=require('../internals/iterators-core');var IteratorPrototype=IteratorsCore.IteratorPrototype;var BUGGY_SAFARI_ITERATORS=IteratorsCore.BUGGY_SAFARI_ITERATORS;var ITERATOR=wellKnownSymbol('iterator');var KEYS='keys';var VALUES='values';var ENTRIES='entries';var returnThis=function returnThis(){return this;};module.exports=function(Iterable,NAME,IteratorConstructor,next,DEFAULT,IS_SET,FORCED){createIteratorConstructor(IteratorConstructor,NAME,next);var getIterationMethod=function getIterationMethod(KIND){if(KIND===DEFAULT&&defaultIterator)return defaultIterator;if(!BUGGY_SAFARI_ITERATORS&&KIND in IterablePrototype)return IterablePrototype[KIND];switch(KIND){case KEYS:return function keys(){return new IteratorConstructor(this,KIND);};case VALUES:return function values(){return new IteratorConstructor(this,KIND);};case ENTRIES:return function entries(){return new IteratorConstructor(this,KIND);};}return function(){return new IteratorConstructor(this);};};var TO_STRING_TAG=NAME+' Iterator';var INCORRECT_VALUES_NAME=false;var IterablePrototype=Iterable.prototype;var nativeIterator=IterablePrototype[ITERATOR]||IterablePrototype['@@iterator']||DEFAULT&&IterablePrototype[DEFAULT];var defaultIterator=!BUGGY_SAFARI_ITERATORS&&nativeIterator||getIterationMethod(DEFAULT);var anyNativeIterator=NAME=='Array'?IterablePrototype.entries||nativeIterator:nativeIterator;var CurrentIteratorPrototype,methods,KEY;// fix native
if(anyNativeIterator){CurrentIteratorPrototype=getPrototypeOf(anyNativeIterator.call(new Iterable()));if(IteratorPrototype!==Object.prototype&&CurrentIteratorPrototype.next){if(!IS_PURE&&getPrototypeOf(CurrentIteratorPrototype)!==IteratorPrototype){if(setPrototypeOf){setPrototypeOf(CurrentIteratorPrototype,IteratorPrototype);}else if(typeof CurrentIteratorPrototype[ITERATOR]!='function'){createNonEnumerableProperty(CurrentIteratorPrototype,ITERATOR,returnThis);}}// Set @@toStringTag to native iterators
setToStringTag(CurrentIteratorPrototype,TO_STRING_TAG,true,true);if(IS_PURE)Iterators[TO_STRING_TAG]=returnThis;}}// fix Array#{values, @@iterator}.name in V8 / FF
if(DEFAULT==VALUES&&nativeIterator&&nativeIterator.name!==VALUES){INCORRECT_VALUES_NAME=true;defaultIterator=function values(){return nativeIterator.call(this);};}// define iterator
if((!IS_PURE||FORCED)&&IterablePrototype[ITERATOR]!==defaultIterator){createNonEnumerableProperty(IterablePrototype,ITERATOR,defaultIterator);}Iterators[NAME]=defaultIterator;// export additional methods
if(DEFAULT){methods={values:getIterationMethod(VALUES),keys:IS_SET?defaultIterator:getIterationMethod(KEYS),entries:getIterationMethod(ENTRIES)};if(FORCED)for(KEY in methods){if(BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME||!(KEY in IterablePrototype)){redefine(IterablePrototype,KEY,methods[KEY]);}}else $({target:NAME,proto:true,forced:BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME},methods);}return methods;};},{"../internals/create-iterator-constructor":27,"../internals/create-non-enumerable-property":28,"../internals/export":34,"../internals/is-pure":55,"../internals/iterators":58,"../internals/iterators-core":57,"../internals/object-get-prototype-of":67,"../internals/object-set-prototype-of":71,"../internals/redefine":75,"../internals/set-to-string-tag":80,"../internals/well-known-symbol":93}],31:[function(require,module,exports){var fails=require('../internals/fails');// Thank's IE8 for his funny defineProperty
module.exports=!fails(function(){return Object.defineProperty({},1,{get:function get(){return 7;}})[1]!=7;});},{"../internals/fails":35}],32:[function(require,module,exports){var global=require('../internals/global');var isObject=require('../internals/is-object');var document=global.document;// typeof document.createElement is 'object' in old IE
var EXISTS=isObject(document)&&isObject(document.createElement);module.exports=function(it){return EXISTS?document.createElement(it):{};};},{"../internals/global":41,"../internals/is-object":54}],33:[function(require,module,exports){// IE8- don't enum bug keys
module.exports=['constructor','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','toLocaleString','toString','valueOf'];},{}],34:[function(require,module,exports){var global=require('../internals/global');var getOwnPropertyDescriptor=require('../internals/object-get-own-property-descriptor').f;var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var redefine=require('../internals/redefine');var setGlobal=require('../internals/set-global');var copyConstructorProperties=require('../internals/copy-constructor-properties');var isForced=require('../internals/is-forced');/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/module.exports=function(options,source){var TARGET=options.target;var GLOBAL=options.global;var STATIC=options.stat;var FORCED,target,key,targetProperty,sourceProperty,descriptor;if(GLOBAL){target=global;}else if(STATIC){target=global[TARGET]||setGlobal(TARGET,{});}else{target=(global[TARGET]||{}).prototype;}if(target)for(key in source){sourceProperty=source[key];if(options.noTargetGet){descriptor=getOwnPropertyDescriptor(target,key);targetProperty=descriptor&&descriptor.value;}else targetProperty=target[key];FORCED=isForced(GLOBAL?key:TARGET+(STATIC?'.':'#')+key,options.forced);// contained in target
if(!FORCED&&targetProperty!==undefined){if(_typeof(sourceProperty)===_typeof(targetProperty))continue;copyConstructorProperties(sourceProperty,targetProperty);}// add a flag to not completely full polyfills
if(options.sham||targetProperty&&targetProperty.sham){createNonEnumerableProperty(sourceProperty,'sham',true);}// extend global
redefine(target,key,sourceProperty,options);}};},{"../internals/copy-constructor-properties":25,"../internals/create-non-enumerable-property":28,"../internals/global":41,"../internals/is-forced":53,"../internals/object-get-own-property-descriptor":64,"../internals/redefine":75,"../internals/set-global":78}],35:[function(require,module,exports){module.exports=function(exec){try{return!!exec();}catch(error){return true;}};},{}],36:[function(require,module,exports){var fails=require('../internals/fails');module.exports=!fails(function(){return Object.isExtensible(Object.preventExtensions({}));});},{"../internals/fails":35}],37:[function(require,module,exports){var aFunction=require('../internals/a-function');// optional / simple context binding
module.exports=function(fn,that,length){aFunction(fn);if(that===undefined)return fn;switch(length){case 0:return function(){return fn.call(that);};case 1:return function(a){return fn.call(that,a);};case 2:return function(a,b){return fn.call(that,a,b);};case 3:return function(a,b,c){return fn.call(that,a,b,c);};}return function()/* ...args */{return fn.apply(that,arguments);};};},{"../internals/a-function":11}],38:[function(require,module,exports){'use strict';var aFunction=require('../internals/a-function');var isObject=require('../internals/is-object');var slice=[].slice;var factories={};var construct=function construct(C,argsLength,args){if(!(argsLength in factories)){for(var list=[],i=0;i<argsLength;i++){list[i]='a['+i+']';}// eslint-disable-next-line no-new-func
factories[argsLength]=Function('C,a','return new C('+list.join(',')+')');}return factories[argsLength](C,args);};// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports=Function.bind||function bind(that/* , ...args */){var fn=aFunction(this);var partArgs=slice.call(arguments,1);var boundFunction=function bound()/* args... */{var args=partArgs.concat(slice.call(arguments));return this instanceof boundFunction?construct(fn,args.length,args):fn.apply(that,args);};if(isObject(fn.prototype))boundFunction.prototype=fn.prototype;return boundFunction;};},{"../internals/a-function":11,"../internals/is-object":54}],39:[function(require,module,exports){var path=require('../internals/path');var global=require('../internals/global');var aFunction=function aFunction(variable){return typeof variable=='function'?variable:undefined;};module.exports=function(namespace,method){return arguments.length<2?aFunction(path[namespace])||aFunction(global[namespace]):path[namespace]&&path[namespace][method]||global[namespace]&&global[namespace][method];};},{"../internals/global":41,"../internals/path":73}],40:[function(require,module,exports){var classof=require('../internals/classof');var Iterators=require('../internals/iterators');var wellKnownSymbol=require('../internals/well-known-symbol');var ITERATOR=wellKnownSymbol('iterator');module.exports=function(it){if(it!=undefined)return it[ITERATOR]||it['@@iterator']||Iterators[classof(it)];};},{"../internals/classof":21,"../internals/iterators":58,"../internals/well-known-symbol":93}],41:[function(require,module,exports){(function(global){var check=function check(it){return it&&it.Math==Math&&it;};// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports=// eslint-disable-next-line no-undef
check((typeof globalThis==="undefined"?"undefined":_typeof(globalThis))=='object'&&globalThis)||check((typeof window==="undefined"?"undefined":_typeof(window))=='object'&&window)||check((typeof self==="undefined"?"undefined":_typeof(self))=='object'&&self)||check(_typeof(global)=='object'&&global)||// eslint-disable-next-line no-new-func
Function('return this')();}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],42:[function(require,module,exports){var hasOwnProperty={}.hasOwnProperty;module.exports=function(it,key){return hasOwnProperty.call(it,key);};},{}],43:[function(require,module,exports){module.exports={};},{}],44:[function(require,module,exports){var getBuiltIn=require('../internals/get-built-in');module.exports=getBuiltIn('document','documentElement');},{"../internals/get-built-in":39}],45:[function(require,module,exports){var DESCRIPTORS=require('../internals/descriptors');var fails=require('../internals/fails');var createElement=require('../internals/document-create-element');// Thank's IE8 for his funny defineProperty
module.exports=!DESCRIPTORS&&!fails(function(){return Object.defineProperty(createElement('div'),'a',{get:function get(){return 7;}}).a!=7;});},{"../internals/descriptors":31,"../internals/document-create-element":32,"../internals/fails":35}],46:[function(require,module,exports){var fails=require('../internals/fails');var classof=require('../internals/classof-raw');var split=''.split;// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports=fails(function(){// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
// eslint-disable-next-line no-prototype-builtins
return!Object('z').propertyIsEnumerable(0);})?function(it){return classof(it)=='String'?split.call(it,''):Object(it);}:Object;},{"../internals/classof-raw":20,"../internals/fails":35}],47:[function(require,module,exports){var isObject=require('../internals/is-object');var setPrototypeOf=require('../internals/object-set-prototype-of');// makes subclassing work correct for wrapped built-ins
module.exports=function($this,dummy,Wrapper){var NewTarget,NewTargetPrototype;if(// it can work only with native `setPrototypeOf`
setPrototypeOf&&// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
typeof(NewTarget=dummy.constructor)=='function'&&NewTarget!==Wrapper&&isObject(NewTargetPrototype=NewTarget.prototype)&&NewTargetPrototype!==Wrapper.prototype)setPrototypeOf($this,NewTargetPrototype);return $this;};},{"../internals/is-object":54,"../internals/object-set-prototype-of":71}],48:[function(require,module,exports){var store=require('../internals/shared-store');var functionToString=Function.toString;// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if(typeof store.inspectSource!='function'){store.inspectSource=function(it){return functionToString.call(it);};}module.exports=store.inspectSource;},{"../internals/shared-store":82}],49:[function(require,module,exports){var hiddenKeys=require('../internals/hidden-keys');var isObject=require('../internals/is-object');var has=require('../internals/has');var defineProperty=require('../internals/object-define-property').f;var uid=require('../internals/uid');var FREEZING=require('../internals/freezing');var METADATA=uid('meta');var id=0;var isExtensible=Object.isExtensible||function(){return true;};var setMetadata=function setMetadata(it){defineProperty(it,METADATA,{value:{objectID:'O'+ ++id,// object ID
weakData:{}// weak collections IDs
}});};var fastKey=function fastKey(it,create){// return a primitive with prefix
if(!isObject(it))return _typeof(it)=='symbol'?it:(typeof it=='string'?'S':'P')+it;if(!has(it,METADATA)){// can't set metadata to uncaught frozen object
if(!isExtensible(it))return'F';// not necessary to add metadata
if(!create)return'E';// add missing metadata
setMetadata(it);// return object ID
}return it[METADATA].objectID;};var getWeakData=function getWeakData(it,create){if(!has(it,METADATA)){// can't set metadata to uncaught frozen object
if(!isExtensible(it))return true;// not necessary to add metadata
if(!create)return false;// add missing metadata
setMetadata(it);// return the store of weak collections IDs
}return it[METADATA].weakData;};// add metadata on freeze-family methods calling
var onFreeze=function onFreeze(it){if(FREEZING&&meta.REQUIRED&&isExtensible(it)&&!has(it,METADATA))setMetadata(it);return it;};var meta=module.exports={REQUIRED:false,fastKey:fastKey,getWeakData:getWeakData,onFreeze:onFreeze};hiddenKeys[METADATA]=true;},{"../internals/freezing":36,"../internals/has":42,"../internals/hidden-keys":43,"../internals/is-object":54,"../internals/object-define-property":63,"../internals/uid":91}],50:[function(require,module,exports){var NATIVE_WEAK_MAP=require('../internals/native-weak-map');var global=require('../internals/global');var isObject=require('../internals/is-object');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var objectHas=require('../internals/has');var sharedKey=require('../internals/shared-key');var hiddenKeys=require('../internals/hidden-keys');var WeakMap=global.WeakMap;var set,get,has;var enforce=function enforce(it){return has(it)?get(it):set(it,{});};var getterFor=function getterFor(TYPE){return function(it){var state;if(!isObject(it)||(state=get(it)).type!==TYPE){throw TypeError('Incompatible receiver, '+TYPE+' required');}return state;};};if(NATIVE_WEAK_MAP){var store=new WeakMap();var wmget=store.get;var wmhas=store.has;var wmset=store.set;set=function set(it,metadata){wmset.call(store,it,metadata);return metadata;};get=function get(it){return wmget.call(store,it)||{};};has=function has(it){return wmhas.call(store,it);};}else{var STATE=sharedKey('state');hiddenKeys[STATE]=true;set=function set(it,metadata){createNonEnumerableProperty(it,STATE,metadata);return metadata;};get=function get(it){return objectHas(it,STATE)?it[STATE]:{};};has=function has(it){return objectHas(it,STATE);};}module.exports={set:set,get:get,has:has,enforce:enforce,getterFor:getterFor};},{"../internals/create-non-enumerable-property":28,"../internals/global":41,"../internals/has":42,"../internals/hidden-keys":43,"../internals/is-object":54,"../internals/native-weak-map":60,"../internals/shared-key":81}],51:[function(require,module,exports){var wellKnownSymbol=require('../internals/well-known-symbol');var Iterators=require('../internals/iterators');var ITERATOR=wellKnownSymbol('iterator');var ArrayPrototype=Array.prototype;// check on default Array iterator
module.exports=function(it){return it!==undefined&&(Iterators.Array===it||ArrayPrototype[ITERATOR]===it);};},{"../internals/iterators":58,"../internals/well-known-symbol":93}],52:[function(require,module,exports){var classof=require('../internals/classof-raw');// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports=Array.isArray||function isArray(arg){return classof(arg)=='Array';};},{"../internals/classof-raw":20}],53:[function(require,module,exports){var fails=require('../internals/fails');var replacement=/#|\.prototype\./;var isForced=function isForced(feature,detection){var value=data[normalize(feature)];return value==POLYFILL?true:value==NATIVE?false:typeof detection=='function'?fails(detection):!!detection;};var normalize=isForced.normalize=function(string){return String(string).replace(replacement,'.').toLowerCase();};var data=isForced.data={};var NATIVE=isForced.NATIVE='N';var POLYFILL=isForced.POLYFILL='P';module.exports=isForced;},{"../internals/fails":35}],54:[function(require,module,exports){module.exports=function(it){return _typeof(it)==='object'?it!==null:typeof it==='function';};},{}],55:[function(require,module,exports){module.exports=false;},{}],56:[function(require,module,exports){var anObject=require('../internals/an-object');var isArrayIteratorMethod=require('../internals/is-array-iterator-method');var toLength=require('../internals/to-length');var bind=require('../internals/function-bind-context');var getIteratorMethod=require('../internals/get-iterator-method');var callWithSafeIterationClosing=require('../internals/call-with-safe-iteration-closing');var Result=function Result(stopped,result){this.stopped=stopped;this.result=result;};var iterate=module.exports=function(iterable,fn,that,AS_ENTRIES,IS_ITERATOR){var boundFunction=bind(fn,that,AS_ENTRIES?2:1);var iterator,iterFn,index,length,result,next,step;if(IS_ITERATOR){iterator=iterable;}else{iterFn=getIteratorMethod(iterable);if(typeof iterFn!='function')throw TypeError('Target is not iterable');// optimisation for array iterators
if(isArrayIteratorMethod(iterFn)){for(index=0,length=toLength(iterable.length);length>index;index++){result=AS_ENTRIES?boundFunction(anObject(step=iterable[index])[0],step[1]):boundFunction(iterable[index]);if(result&&result instanceof Result)return result;}return new Result(false);}iterator=iterFn.call(iterable);}next=iterator.next;while(!(step=next.call(iterator)).done){result=callWithSafeIterationClosing(iterator,boundFunction,step.value,AS_ENTRIES);if(_typeof(result)=='object'&&result&&result instanceof Result)return result;}return new Result(false);};iterate.stop=function(result){return new Result(true,result);};},{"../internals/an-object":14,"../internals/call-with-safe-iteration-closing":18,"../internals/function-bind-context":37,"../internals/get-iterator-method":40,"../internals/is-array-iterator-method":51,"../internals/to-length":87}],57:[function(require,module,exports){'use strict';var getPrototypeOf=require('../internals/object-get-prototype-of');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var has=require('../internals/has');var wellKnownSymbol=require('../internals/well-known-symbol');var IS_PURE=require('../internals/is-pure');var ITERATOR=wellKnownSymbol('iterator');var BUGGY_SAFARI_ITERATORS=false;var returnThis=function returnThis(){return this;};// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype,PrototypeOfArrayIteratorPrototype,arrayIterator;if([].keys){arrayIterator=[].keys();// Safari 8 has buggy iterators w/o `next`
if(!('next'in arrayIterator))BUGGY_SAFARI_ITERATORS=true;else{PrototypeOfArrayIteratorPrototype=getPrototypeOf(getPrototypeOf(arrayIterator));if(PrototypeOfArrayIteratorPrototype!==Object.prototype)IteratorPrototype=PrototypeOfArrayIteratorPrototype;}}if(IteratorPrototype==undefined)IteratorPrototype={};// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if(!IS_PURE&&!has(IteratorPrototype,ITERATOR)){createNonEnumerableProperty(IteratorPrototype,ITERATOR,returnThis);}module.exports={IteratorPrototype:IteratorPrototype,BUGGY_SAFARI_ITERATORS:BUGGY_SAFARI_ITERATORS};},{"../internals/create-non-enumerable-property":28,"../internals/has":42,"../internals/is-pure":55,"../internals/object-get-prototype-of":67,"../internals/well-known-symbol":93}],58:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments);},{"dup":43}],59:[function(require,module,exports){var fails=require('../internals/fails');module.exports=!!Object.getOwnPropertySymbols&&!fails(function(){// Chrome 38 Symbol has incorrect toString conversion
// eslint-disable-next-line no-undef
return!String(Symbol());});},{"../internals/fails":35}],60:[function(require,module,exports){var global=require('../internals/global');var inspectSource=require('../internals/inspect-source');var WeakMap=global.WeakMap;module.exports=typeof WeakMap==='function'&&/native code/.test(inspectSource(WeakMap));},{"../internals/global":41,"../internals/inspect-source":48}],61:[function(require,module,exports){var anObject=require('../internals/an-object');var defineProperties=require('../internals/object-define-properties');var enumBugKeys=require('../internals/enum-bug-keys');var hiddenKeys=require('../internals/hidden-keys');var html=require('../internals/html');var documentCreateElement=require('../internals/document-create-element');var sharedKey=require('../internals/shared-key');var GT='>';var LT='<';var PROTOTYPE='prototype';var SCRIPT='script';var IE_PROTO=sharedKey('IE_PROTO');var EmptyConstructor=function EmptyConstructor(){/* empty */};var scriptTag=function scriptTag(content){return LT+SCRIPT+GT+content+LT+'/'+SCRIPT+GT;};// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX=function NullProtoObjectViaActiveX(activeXDocument){activeXDocument.write(scriptTag(''));activeXDocument.close();var temp=activeXDocument.parentWindow.Object;activeXDocument=null;// avoid memory leak
return temp;};// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame=function NullProtoObjectViaIFrame(){// Thrash, waste and sodomy: IE GC bug
var iframe=documentCreateElement('iframe');var JS='java'+SCRIPT+':';var iframeDocument;iframe.style.display='none';html.appendChild(iframe);// https://github.com/zloirock/core-js/issues/475
iframe.src=String(JS);iframeDocument=iframe.contentWindow.document;iframeDocument.open();iframeDocument.write(scriptTag('document.F=Object'));iframeDocument.close();return iframeDocument.F;};// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;var _NullProtoObject=function NullProtoObject(){try{/* global ActiveXObject */activeXDocument=document.domain&&new ActiveXObject('htmlfile');}catch(error){/* ignore */}_NullProtoObject=activeXDocument?NullProtoObjectViaActiveX(activeXDocument):NullProtoObjectViaIFrame();var length=enumBugKeys.length;while(length--){delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];}return _NullProtoObject();};hiddenKeys[IE_PROTO]=true;// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports=Object.create||function create(O,Properties){var result;if(O!==null){EmptyConstructor[PROTOTYPE]=anObject(O);result=new EmptyConstructor();EmptyConstructor[PROTOTYPE]=null;// add "__proto__" for Object.getPrototypeOf polyfill
result[IE_PROTO]=O;}else result=_NullProtoObject();return Properties===undefined?result:defineProperties(result,Properties);};},{"../internals/an-object":14,"../internals/document-create-element":32,"../internals/enum-bug-keys":33,"../internals/hidden-keys":43,"../internals/html":44,"../internals/object-define-properties":62,"../internals/shared-key":81}],62:[function(require,module,exports){var DESCRIPTORS=require('../internals/descriptors');var definePropertyModule=require('../internals/object-define-property');var anObject=require('../internals/an-object');var objectKeys=require('../internals/object-keys');// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports=DESCRIPTORS?Object.defineProperties:function defineProperties(O,Properties){anObject(O);var keys=objectKeys(Properties);var length=keys.length;var index=0;var key;while(length>index){definePropertyModule.f(O,key=keys[index++],Properties[key]);}return O;};},{"../internals/an-object":14,"../internals/descriptors":31,"../internals/object-define-property":63,"../internals/object-keys":69}],63:[function(require,module,exports){var DESCRIPTORS=require('../internals/descriptors');var IE8_DOM_DEFINE=require('../internals/ie8-dom-define');var anObject=require('../internals/an-object');var toPrimitive=require('../internals/to-primitive');var nativeDefineProperty=Object.defineProperty;// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f=DESCRIPTORS?nativeDefineProperty:function defineProperty(O,P,Attributes){anObject(O);P=toPrimitive(P,true);anObject(Attributes);if(IE8_DOM_DEFINE)try{return nativeDefineProperty(O,P,Attributes);}catch(error){/* empty */}if('get'in Attributes||'set'in Attributes)throw TypeError('Accessors not supported');if('value'in Attributes)O[P]=Attributes.value;return O;};},{"../internals/an-object":14,"../internals/descriptors":31,"../internals/ie8-dom-define":45,"../internals/to-primitive":89}],64:[function(require,module,exports){var DESCRIPTORS=require('../internals/descriptors');var propertyIsEnumerableModule=require('../internals/object-property-is-enumerable');var createPropertyDescriptor=require('../internals/create-property-descriptor');var toIndexedObject=require('../internals/to-indexed-object');var toPrimitive=require('../internals/to-primitive');var has=require('../internals/has');var IE8_DOM_DEFINE=require('../internals/ie8-dom-define');var nativeGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f=DESCRIPTORS?nativeGetOwnPropertyDescriptor:function getOwnPropertyDescriptor(O,P){O=toIndexedObject(O);P=toPrimitive(P,true);if(IE8_DOM_DEFINE)try{return nativeGetOwnPropertyDescriptor(O,P);}catch(error){/* empty */}if(has(O,P))return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O,P),O[P]);};},{"../internals/create-property-descriptor":29,"../internals/descriptors":31,"../internals/has":42,"../internals/ie8-dom-define":45,"../internals/object-property-is-enumerable":70,"../internals/to-indexed-object":85,"../internals/to-primitive":89}],65:[function(require,module,exports){var internalObjectKeys=require('../internals/object-keys-internal');var enumBugKeys=require('../internals/enum-bug-keys');var hiddenKeys=enumBugKeys.concat('length','prototype');// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){return internalObjectKeys(O,hiddenKeys);};},{"../internals/enum-bug-keys":33,"../internals/object-keys-internal":68}],66:[function(require,module,exports){exports.f=Object.getOwnPropertySymbols;},{}],67:[function(require,module,exports){var has=require('../internals/has');var toObject=require('../internals/to-object');var sharedKey=require('../internals/shared-key');var CORRECT_PROTOTYPE_GETTER=require('../internals/correct-prototype-getter');var IE_PROTO=sharedKey('IE_PROTO');var ObjectPrototype=Object.prototype;// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports=CORRECT_PROTOTYPE_GETTER?Object.getPrototypeOf:function(O){O=toObject(O);if(has(O,IE_PROTO))return O[IE_PROTO];if(typeof O.constructor=='function'&&O instanceof O.constructor){return O.constructor.prototype;}return O instanceof Object?ObjectPrototype:null;};},{"../internals/correct-prototype-getter":26,"../internals/has":42,"../internals/shared-key":81,"../internals/to-object":88}],68:[function(require,module,exports){var has=require('../internals/has');var toIndexedObject=require('../internals/to-indexed-object');var indexOf=require('../internals/array-includes').indexOf;var hiddenKeys=require('../internals/hidden-keys');module.exports=function(object,names){var O=toIndexedObject(object);var i=0;var result=[];var key;for(key in O){!has(hiddenKeys,key)&&has(O,key)&&result.push(key);}// Don't enum bug & hidden keys
while(names.length>i){if(has(O,key=names[i++])){~indexOf(result,key)||result.push(key);}}return result;};},{"../internals/array-includes":15,"../internals/has":42,"../internals/hidden-keys":43,"../internals/to-indexed-object":85}],69:[function(require,module,exports){var internalObjectKeys=require('../internals/object-keys-internal');var enumBugKeys=require('../internals/enum-bug-keys');// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports=Object.keys||function keys(O){return internalObjectKeys(O,enumBugKeys);};},{"../internals/enum-bug-keys":33,"../internals/object-keys-internal":68}],70:[function(require,module,exports){'use strict';var nativePropertyIsEnumerable={}.propertyIsEnumerable;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;// Nashorn ~ JDK8 bug
var NASHORN_BUG=getOwnPropertyDescriptor&&!nativePropertyIsEnumerable.call({1:2},1);// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f=NASHORN_BUG?function propertyIsEnumerable(V){var descriptor=getOwnPropertyDescriptor(this,V);return!!descriptor&&descriptor.enumerable;}:nativePropertyIsEnumerable;},{}],71:[function(require,module,exports){var anObject=require('../internals/an-object');var aPossiblePrototype=require('../internals/a-possible-prototype');// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */module.exports=Object.setPrototypeOf||('__proto__'in{}?function(){var CORRECT_SETTER=false;var test={};var setter;try{setter=Object.getOwnPropertyDescriptor(Object.prototype,'__proto__').set;setter.call(test,[]);CORRECT_SETTER=test instanceof Array;}catch(error){/* empty */}return function setPrototypeOf(O,proto){anObject(O);aPossiblePrototype(proto);if(CORRECT_SETTER)setter.call(O,proto);else O.__proto__=proto;return O;};}():undefined);},{"../internals/a-possible-prototype":12,"../internals/an-object":14}],72:[function(require,module,exports){var getBuiltIn=require('../internals/get-built-in');var getOwnPropertyNamesModule=require('../internals/object-get-own-property-names');var getOwnPropertySymbolsModule=require('../internals/object-get-own-property-symbols');var anObject=require('../internals/an-object');// all object keys, includes non-enumerable and symbols
module.exports=getBuiltIn('Reflect','ownKeys')||function ownKeys(it){var keys=getOwnPropertyNamesModule.f(anObject(it));var getOwnPropertySymbols=getOwnPropertySymbolsModule.f;return getOwnPropertySymbols?keys.concat(getOwnPropertySymbols(it)):keys;};},{"../internals/an-object":14,"../internals/get-built-in":39,"../internals/object-get-own-property-names":65,"../internals/object-get-own-property-symbols":66}],73:[function(require,module,exports){var global=require('../internals/global');module.exports=global;},{"../internals/global":41}],74:[function(require,module,exports){var redefine=require('../internals/redefine');module.exports=function(target,src,options){for(var key in src){redefine(target,key,src[key],options);}return target;};},{"../internals/redefine":75}],75:[function(require,module,exports){var global=require('../internals/global');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var has=require('../internals/has');var setGlobal=require('../internals/set-global');var inspectSource=require('../internals/inspect-source');var InternalStateModule=require('../internals/internal-state');var getInternalState=InternalStateModule.get;var enforceInternalState=InternalStateModule.enforce;var TEMPLATE=String(String).split('String');(module.exports=function(O,key,value,options){var unsafe=options?!!options.unsafe:false;var simple=options?!!options.enumerable:false;var noTargetGet=options?!!options.noTargetGet:false;if(typeof value=='function'){if(typeof key=='string'&&!has(value,'name'))createNonEnumerableProperty(value,'name',key);enforceInternalState(value).source=TEMPLATE.join(typeof key=='string'?key:'');}if(O===global){if(simple)O[key]=value;else setGlobal(key,value);return;}else if(!unsafe){delete O[key];}else if(!noTargetGet&&O[key]){simple=true;}if(simple)O[key]=value;else createNonEnumerableProperty(O,key,value);// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype,'toString',function toString(){return typeof this=='function'&&getInternalState(this).source||inspectSource(this);});},{"../internals/create-non-enumerable-property":28,"../internals/global":41,"../internals/has":42,"../internals/inspect-source":48,"../internals/internal-state":50,"../internals/set-global":78}],76:[function(require,module,exports){// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
var Map=require('../modules/es.map');var WeakMap=require('../modules/es.weak-map');var shared=require('../internals/shared');var metadata=shared('metadata');var store=metadata.store||(metadata.store=new WeakMap());var getOrCreateMetadataMap=function getOrCreateMetadataMap(target,targetKey,create){var targetMetadata=store.get(target);if(!targetMetadata){if(!create)return;store.set(target,targetMetadata=new Map());}var keyMetadata=targetMetadata.get(targetKey);if(!keyMetadata){if(!create)return;targetMetadata.set(targetKey,keyMetadata=new Map());}return keyMetadata;};var ordinaryHasOwnMetadata=function ordinaryHasOwnMetadata(MetadataKey,O,P){var metadataMap=getOrCreateMetadataMap(O,P,false);return metadataMap===undefined?false:metadataMap.has(MetadataKey);};var ordinaryGetOwnMetadata=function ordinaryGetOwnMetadata(MetadataKey,O,P){var metadataMap=getOrCreateMetadataMap(O,P,false);return metadataMap===undefined?undefined:metadataMap.get(MetadataKey);};var ordinaryDefineOwnMetadata=function ordinaryDefineOwnMetadata(MetadataKey,MetadataValue,O,P){getOrCreateMetadataMap(O,P,true).set(MetadataKey,MetadataValue);};var ordinaryOwnMetadataKeys=function ordinaryOwnMetadataKeys(target,targetKey){var metadataMap=getOrCreateMetadataMap(target,targetKey,false);var keys=[];if(metadataMap)metadataMap.forEach(function(_,key){keys.push(key);});return keys;};var toMetadataKey=function toMetadataKey(it){return it===undefined||_typeof(it)=='symbol'?it:String(it);};module.exports={store:store,getMap:getOrCreateMetadataMap,has:ordinaryHasOwnMetadata,get:ordinaryGetOwnMetadata,set:ordinaryDefineOwnMetadata,keys:ordinaryOwnMetadataKeys,toKey:toMetadataKey};},{"../internals/shared":83,"../modules/es.map":94,"../modules/es.weak-map":109}],77:[function(require,module,exports){// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports=function(it){if(it==undefined)throw TypeError("Can't call method on "+it);return it;};},{}],78:[function(require,module,exports){var global=require('../internals/global');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');module.exports=function(key,value){try{createNonEnumerableProperty(global,key,value);}catch(error){global[key]=value;}return value;};},{"../internals/create-non-enumerable-property":28,"../internals/global":41}],79:[function(require,module,exports){'use strict';var getBuiltIn=require('../internals/get-built-in');var definePropertyModule=require('../internals/object-define-property');var wellKnownSymbol=require('../internals/well-known-symbol');var DESCRIPTORS=require('../internals/descriptors');var SPECIES=wellKnownSymbol('species');module.exports=function(CONSTRUCTOR_NAME){var Constructor=getBuiltIn(CONSTRUCTOR_NAME);var defineProperty=definePropertyModule.f;if(DESCRIPTORS&&Constructor&&!Constructor[SPECIES]){defineProperty(Constructor,SPECIES,{configurable:true,get:function get(){return this;}});}};},{"../internals/descriptors":31,"../internals/get-built-in":39,"../internals/object-define-property":63,"../internals/well-known-symbol":93}],80:[function(require,module,exports){var defineProperty=require('../internals/object-define-property').f;var has=require('../internals/has');var wellKnownSymbol=require('../internals/well-known-symbol');var TO_STRING_TAG=wellKnownSymbol('toStringTag');module.exports=function(it,TAG,STATIC){if(it&&!has(it=STATIC?it:it.prototype,TO_STRING_TAG)){defineProperty(it,TO_STRING_TAG,{configurable:true,value:TAG});}};},{"../internals/has":42,"../internals/object-define-property":63,"../internals/well-known-symbol":93}],81:[function(require,module,exports){var shared=require('../internals/shared');var uid=require('../internals/uid');var keys=shared('keys');module.exports=function(key){return keys[key]||(keys[key]=uid(key));};},{"../internals/shared":83,"../internals/uid":91}],82:[function(require,module,exports){var global=require('../internals/global');var setGlobal=require('../internals/set-global');var SHARED='__core-js_shared__';var store=global[SHARED]||setGlobal(SHARED,{});module.exports=store;},{"../internals/global":41,"../internals/set-global":78}],83:[function(require,module,exports){var IS_PURE=require('../internals/is-pure');var store=require('../internals/shared-store');(module.exports=function(key,value){return store[key]||(store[key]=value!==undefined?value:{});})('versions',[]).push({version:'3.6.5',mode:IS_PURE?'pure':'global',copyright:'© 2020 Denis Pushkarev (zloirock.ru)'});},{"../internals/is-pure":55,"../internals/shared-store":82}],84:[function(require,module,exports){var toInteger=require('../internals/to-integer');var max=Math.max;var min=Math.min;// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports=function(index,length){var integer=toInteger(index);return integer<0?max(integer+length,0):min(integer,length);};},{"../internals/to-integer":86}],85:[function(require,module,exports){// toObject with fallback for non-array-like ES3 strings
var IndexedObject=require('../internals/indexed-object');var requireObjectCoercible=require('../internals/require-object-coercible');module.exports=function(it){return IndexedObject(requireObjectCoercible(it));};},{"../internals/indexed-object":46,"../internals/require-object-coercible":77}],86:[function(require,module,exports){var ceil=Math.ceil;var floor=Math.floor;// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports=function(argument){return isNaN(argument=+argument)?0:(argument>0?floor:ceil)(argument);};},{}],87:[function(require,module,exports){var toInteger=require('../internals/to-integer');var min=Math.min;// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports=function(argument){return argument>0?min(toInteger(argument),0x1FFFFFFFFFFFFF):0;// 2 ** 53 - 1 == 9007199254740991
};},{"../internals/to-integer":86}],88:[function(require,module,exports){var requireObjectCoercible=require('../internals/require-object-coercible');// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports=function(argument){return Object(requireObjectCoercible(argument));};},{"../internals/require-object-coercible":77}],89:[function(require,module,exports){var isObject=require('../internals/is-object');// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports=function(input,PREFERRED_STRING){if(!isObject(input))return input;var fn,val;if(PREFERRED_STRING&&typeof(fn=input.toString)=='function'&&!isObject(val=fn.call(input)))return val;if(typeof(fn=input.valueOf)=='function'&&!isObject(val=fn.call(input)))return val;if(!PREFERRED_STRING&&typeof(fn=input.toString)=='function'&&!isObject(val=fn.call(input)))return val;throw TypeError("Can't convert object to primitive value");};},{"../internals/is-object":54}],90:[function(require,module,exports){var wellKnownSymbol=require('../internals/well-known-symbol');var TO_STRING_TAG=wellKnownSymbol('toStringTag');var test={};test[TO_STRING_TAG]='z';module.exports=String(test)==='[object z]';},{"../internals/well-known-symbol":93}],91:[function(require,module,exports){var id=0;var postfix=Math.random();module.exports=function(key){return'Symbol('+String(key===undefined?'':key)+')_'+(++id+postfix).toString(36);};},{}],92:[function(require,module,exports){var NATIVE_SYMBOL=require('../internals/native-symbol');module.exports=NATIVE_SYMBOL// eslint-disable-next-line no-undef
&&!Symbol.sham// eslint-disable-next-line no-undef
&&_typeof(Symbol.iterator)=='symbol';},{"../internals/native-symbol":59}],93:[function(require,module,exports){var global=require('../internals/global');var shared=require('../internals/shared');var has=require('../internals/has');var uid=require('../internals/uid');var NATIVE_SYMBOL=require('../internals/native-symbol');var USE_SYMBOL_AS_UID=require('../internals/use-symbol-as-uid');var WellKnownSymbolsStore=shared('wks');var _Symbol=global.Symbol;var createWellKnownSymbol=USE_SYMBOL_AS_UID?_Symbol:_Symbol&&_Symbol.withoutSetter||uid;module.exports=function(name){if(!has(WellKnownSymbolsStore,name)){if(NATIVE_SYMBOL&&has(_Symbol,name))WellKnownSymbolsStore[name]=_Symbol[name];else WellKnownSymbolsStore[name]=createWellKnownSymbol('Symbol.'+name);}return WellKnownSymbolsStore[name];};},{"../internals/global":41,"../internals/has":42,"../internals/native-symbol":59,"../internals/shared":83,"../internals/uid":91,"../internals/use-symbol-as-uid":92}],94:[function(require,module,exports){'use strict';var collection=require('../internals/collection');var collectionStrong=require('../internals/collection-strong');// `Map` constructor
// https://tc39.github.io/ecma262/#sec-map-objects
module.exports=collection('Map',function(init){return function Map(){return init(this,arguments.length?arguments[0]:undefined);};},collectionStrong);},{"../internals/collection":24,"../internals/collection-strong":22}],95:[function(require,module,exports){var $=require('../internals/export');var getBuiltIn=require('../internals/get-built-in');var aFunction=require('../internals/a-function');var anObject=require('../internals/an-object');var fails=require('../internals/fails');var nativeApply=getBuiltIn('Reflect','apply');var functionApply=Function.apply;// MS Edge argumentsList argument is optional
var OPTIONAL_ARGUMENTS_LIST=!fails(function(){nativeApply(function(){/* empty */});});// `Reflect.apply` method
// https://tc39.github.io/ecma262/#sec-reflect.apply
$({target:'Reflect',stat:true,forced:OPTIONAL_ARGUMENTS_LIST},{apply:function apply(target,thisArgument,argumentsList){aFunction(target);anObject(argumentsList);return nativeApply?nativeApply(target,thisArgument,argumentsList):functionApply.call(target,thisArgument,argumentsList);}});},{"../internals/a-function":11,"../internals/an-object":14,"../internals/export":34,"../internals/fails":35,"../internals/get-built-in":39}],96:[function(require,module,exports){var $=require('../internals/export');var getBuiltIn=require('../internals/get-built-in');var aFunction=require('../internals/a-function');var anObject=require('../internals/an-object');var isObject=require('../internals/is-object');var create=require('../internals/object-create');var bind=require('../internals/function-bind');var fails=require('../internals/fails');var nativeConstruct=getBuiltIn('Reflect','construct');// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG=fails(function(){function F(){/* empty */}return!(nativeConstruct(function(){/* empty */},[],F)instanceof F);});var ARGS_BUG=!fails(function(){nativeConstruct(function(){/* empty */});});var FORCED=NEW_TARGET_BUG||ARGS_BUG;$({target:'Reflect',stat:true,forced:FORCED,sham:FORCED},{construct:function construct(Target,args/* , newTarget */){aFunction(Target);anObject(args);var newTarget=arguments.length<3?Target:aFunction(arguments[2]);if(ARGS_BUG&&!NEW_TARGET_BUG)return nativeConstruct(Target,args,newTarget);if(Target==newTarget){// w/o altered newTarget, optimization for 0-4 arguments
switch(args.length){case 0:return new Target();case 1:return new Target(args[0]);case 2:return new Target(args[0],args[1]);case 3:return new Target(args[0],args[1],args[2]);case 4:return new Target(args[0],args[1],args[2],args[3]);}// w/o altered newTarget, lot of arguments case
var $args=[null];$args.push.apply($args,args);return new(bind.apply(Target,$args))();}// with altered newTarget, not support built-in constructors
var proto=newTarget.prototype;var instance=create(isObject(proto)?proto:Object.prototype);var result=Function.apply.call(Target,instance,args);return isObject(result)?result:instance;}});},{"../internals/a-function":11,"../internals/an-object":14,"../internals/export":34,"../internals/fails":35,"../internals/function-bind":38,"../internals/get-built-in":39,"../internals/is-object":54,"../internals/object-create":61}],97:[function(require,module,exports){var $=require('../internals/export');var DESCRIPTORS=require('../internals/descriptors');var anObject=require('../internals/an-object');var toPrimitive=require('../internals/to-primitive');var definePropertyModule=require('../internals/object-define-property');var fails=require('../internals/fails');// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
var ERROR_INSTEAD_OF_FALSE=fails(function(){// eslint-disable-next-line no-undef
Reflect.defineProperty(definePropertyModule.f({},1,{value:1}),1,{value:2});});// `Reflect.defineProperty` method
// https://tc39.github.io/ecma262/#sec-reflect.defineproperty
$({target:'Reflect',stat:true,forced:ERROR_INSTEAD_OF_FALSE,sham:!DESCRIPTORS},{defineProperty:function defineProperty(target,propertyKey,attributes){anObject(target);var key=toPrimitive(propertyKey,true);anObject(attributes);try{definePropertyModule.f(target,key,attributes);return true;}catch(error){return false;}}});},{"../internals/an-object":14,"../internals/descriptors":31,"../internals/export":34,"../internals/fails":35,"../internals/object-define-property":63,"../internals/to-primitive":89}],98:[function(require,module,exports){var $=require('../internals/export');var anObject=require('../internals/an-object');var getOwnPropertyDescriptor=require('../internals/object-get-own-property-descriptor').f;// `Reflect.deleteProperty` method
// https://tc39.github.io/ecma262/#sec-reflect.deleteproperty
$({target:'Reflect',stat:true},{deleteProperty:function deleteProperty(target,propertyKey){var descriptor=getOwnPropertyDescriptor(anObject(target),propertyKey);return descriptor&&!descriptor.configurable?false:delete target[propertyKey];}});},{"../internals/an-object":14,"../internals/export":34,"../internals/object-get-own-property-descriptor":64}],99:[function(require,module,exports){var $=require('../internals/export');var DESCRIPTORS=require('../internals/descriptors');var anObject=require('../internals/an-object');var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');// `Reflect.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-reflect.getownpropertydescriptor
$({target:'Reflect',stat:true,sham:!DESCRIPTORS},{getOwnPropertyDescriptor:function getOwnPropertyDescriptor(target,propertyKey){return getOwnPropertyDescriptorModule.f(anObject(target),propertyKey);}});},{"../internals/an-object":14,"../internals/descriptors":31,"../internals/export":34,"../internals/object-get-own-property-descriptor":64}],100:[function(require,module,exports){var $=require('../internals/export');var anObject=require('../internals/an-object');var objectGetPrototypeOf=require('../internals/object-get-prototype-of');var CORRECT_PROTOTYPE_GETTER=require('../internals/correct-prototype-getter');// `Reflect.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-reflect.getprototypeof
$({target:'Reflect',stat:true,sham:!CORRECT_PROTOTYPE_GETTER},{getPrototypeOf:function getPrototypeOf(target){return objectGetPrototypeOf(anObject(target));}});},{"../internals/an-object":14,"../internals/correct-prototype-getter":26,"../internals/export":34,"../internals/object-get-prototype-of":67}],101:[function(require,module,exports){var $=require('../internals/export');var isObject=require('../internals/is-object');var anObject=require('../internals/an-object');var has=require('../internals/has');var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');var getPrototypeOf=require('../internals/object-get-prototype-of');// `Reflect.get` method
// https://tc39.github.io/ecma262/#sec-reflect.get
function get(target,propertyKey/* , receiver */){var receiver=arguments.length<3?target:arguments[2];var descriptor,prototype;if(anObject(target)===receiver)return target[propertyKey];if(descriptor=getOwnPropertyDescriptorModule.f(target,propertyKey))return has(descriptor,'value')?descriptor.value:descriptor.get===undefined?undefined:descriptor.get.call(receiver);if(isObject(prototype=getPrototypeOf(target)))return get(prototype,propertyKey,receiver);}$({target:'Reflect',stat:true},{get:get});},{"../internals/an-object":14,"../internals/export":34,"../internals/has":42,"../internals/is-object":54,"../internals/object-get-own-property-descriptor":64,"../internals/object-get-prototype-of":67}],102:[function(require,module,exports){var $=require('../internals/export');// `Reflect.has` method
// https://tc39.github.io/ecma262/#sec-reflect.has
$({target:'Reflect',stat:true},{has:function has(target,propertyKey){return propertyKey in target;}});},{"../internals/export":34}],103:[function(require,module,exports){var $=require('../internals/export');var anObject=require('../internals/an-object');var objectIsExtensible=Object.isExtensible;// `Reflect.isExtensible` method
// https://tc39.github.io/ecma262/#sec-reflect.isextensible
$({target:'Reflect',stat:true},{isExtensible:function isExtensible(target){anObject(target);return objectIsExtensible?objectIsExtensible(target):true;}});},{"../internals/an-object":14,"../internals/export":34}],104:[function(require,module,exports){var $=require('../internals/export');var ownKeys=require('../internals/own-keys');// `Reflect.ownKeys` method
// https://tc39.github.io/ecma262/#sec-reflect.ownkeys
$({target:'Reflect',stat:true},{ownKeys:ownKeys});},{"../internals/export":34,"../internals/own-keys":72}],105:[function(require,module,exports){var $=require('../internals/export');var getBuiltIn=require('../internals/get-built-in');var anObject=require('../internals/an-object');var FREEZING=require('../internals/freezing');// `Reflect.preventExtensions` method
// https://tc39.github.io/ecma262/#sec-reflect.preventextensions
$({target:'Reflect',stat:true,sham:!FREEZING},{preventExtensions:function preventExtensions(target){anObject(target);try{var objectPreventExtensions=getBuiltIn('Object','preventExtensions');if(objectPreventExtensions)objectPreventExtensions(target);return true;}catch(error){return false;}}});},{"../internals/an-object":14,"../internals/export":34,"../internals/freezing":36,"../internals/get-built-in":39}],106:[function(require,module,exports){var $=require('../internals/export');var anObject=require('../internals/an-object');var aPossiblePrototype=require('../internals/a-possible-prototype');var objectSetPrototypeOf=require('../internals/object-set-prototype-of');// `Reflect.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-reflect.setprototypeof
if(objectSetPrototypeOf)$({target:'Reflect',stat:true},{setPrototypeOf:function setPrototypeOf(target,proto){anObject(target);aPossiblePrototype(proto);try{objectSetPrototypeOf(target,proto);return true;}catch(error){return false;}}});},{"../internals/a-possible-prototype":12,"../internals/an-object":14,"../internals/export":34,"../internals/object-set-prototype-of":71}],107:[function(require,module,exports){var $=require('../internals/export');var anObject=require('../internals/an-object');var isObject=require('../internals/is-object');var has=require('../internals/has');var fails=require('../internals/fails');var definePropertyModule=require('../internals/object-define-property');var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');var getPrototypeOf=require('../internals/object-get-prototype-of');var createPropertyDescriptor=require('../internals/create-property-descriptor');// `Reflect.set` method
// https://tc39.github.io/ecma262/#sec-reflect.set
function set(target,propertyKey,V/* , receiver */){var receiver=arguments.length<4?target:arguments[3];var ownDescriptor=getOwnPropertyDescriptorModule.f(anObject(target),propertyKey);var existingDescriptor,prototype;if(!ownDescriptor){if(isObject(prototype=getPrototypeOf(target))){return set(prototype,propertyKey,V,receiver);}ownDescriptor=createPropertyDescriptor(0);}if(has(ownDescriptor,'value')){if(ownDescriptor.writable===false||!isObject(receiver))return false;if(existingDescriptor=getOwnPropertyDescriptorModule.f(receiver,propertyKey)){if(existingDescriptor.get||existingDescriptor.set||existingDescriptor.writable===false)return false;existingDescriptor.value=V;definePropertyModule.f(receiver,propertyKey,existingDescriptor);}else definePropertyModule.f(receiver,propertyKey,createPropertyDescriptor(0,V));return true;}return ownDescriptor.set===undefined?false:(ownDescriptor.set.call(receiver,V),true);}// MS Edge 17-18 Reflect.set allows setting the property to object
// with non-writable property on the prototype
var MS_EDGE_BUG=fails(function(){var object=definePropertyModule.f({},'a',{configurable:true});// eslint-disable-next-line no-undef
return Reflect.set(getPrototypeOf(object),'a',1,object)!==false;});$({target:'Reflect',stat:true,forced:MS_EDGE_BUG},{set:set});},{"../internals/an-object":14,"../internals/create-property-descriptor":29,"../internals/export":34,"../internals/fails":35,"../internals/has":42,"../internals/is-object":54,"../internals/object-define-property":63,"../internals/object-get-own-property-descriptor":64,"../internals/object-get-prototype-of":67}],108:[function(require,module,exports){'use strict';var collection=require('../internals/collection');var collectionStrong=require('../internals/collection-strong');// `Set` constructor
// https://tc39.github.io/ecma262/#sec-set-objects
module.exports=collection('Set',function(init){return function Set(){return init(this,arguments.length?arguments[0]:undefined);};},collectionStrong);},{"../internals/collection":24,"../internals/collection-strong":22}],109:[function(require,module,exports){'use strict';var global=require('../internals/global');var redefineAll=require('../internals/redefine-all');var InternalMetadataModule=require('../internals/internal-metadata');var collection=require('../internals/collection');var collectionWeak=require('../internals/collection-weak');var isObject=require('../internals/is-object');var enforceIternalState=require('../internals/internal-state').enforce;var NATIVE_WEAK_MAP=require('../internals/native-weak-map');var IS_IE11=!global.ActiveXObject&&'ActiveXObject'in global;var isExtensible=Object.isExtensible;var InternalWeakMap;var wrapper=function wrapper(init){return function WeakMap(){return init(this,arguments.length?arguments[0]:undefined);};};// `WeakMap` constructor
// https://tc39.github.io/ecma262/#sec-weakmap-constructor
var $WeakMap=module.exports=collection('WeakMap',wrapper,collectionWeak);// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if(NATIVE_WEAK_MAP&&IS_IE11){InternalWeakMap=collectionWeak.getConstructor(wrapper,'WeakMap',true);InternalMetadataModule.REQUIRED=true;var WeakMapPrototype=$WeakMap.prototype;var nativeDelete=WeakMapPrototype['delete'];var nativeHas=WeakMapPrototype.has;var nativeGet=WeakMapPrototype.get;var nativeSet=WeakMapPrototype.set;redefineAll(WeakMapPrototype,{'delete':function _delete(key){if(isObject(key)&&!isExtensible(key)){var state=enforceIternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeDelete.call(this,key)||state.frozen['delete'](key);}return nativeDelete.call(this,key);},has:function has(key){if(isObject(key)&&!isExtensible(key)){var state=enforceIternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeHas.call(this,key)||state.frozen.has(key);}return nativeHas.call(this,key);},get:function get(key){if(isObject(key)&&!isExtensible(key)){var state=enforceIternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();return nativeHas.call(this,key)?nativeGet.call(this,key):state.frozen.get(key);}return nativeGet.call(this,key);},set:function set(key,value){if(isObject(key)&&!isExtensible(key)){var state=enforceIternalState(this);if(!state.frozen)state.frozen=new InternalWeakMap();nativeHas.call(this,key)?nativeSet.call(this,key,value):state.frozen.set(key,value);}else nativeSet.call(this,key,value);return this;}});}},{"../internals/collection":24,"../internals/collection-weak":23,"../internals/global":41,"../internals/internal-metadata":49,"../internals/internal-state":50,"../internals/is-object":54,"../internals/native-weak-map":60,"../internals/redefine-all":74}],110:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var toMetadataKey=ReflectMetadataModule.toKey;var ordinaryDefineOwnMetadata=ReflectMetadataModule.set;// `Reflect.defineMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{defineMetadata:function defineMetadata(metadataKey,metadataValue,target/* , targetKey */){var targetKey=arguments.length<4?undefined:toMetadataKey(arguments[3]);ordinaryDefineOwnMetadata(metadataKey,metadataValue,anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],111:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var toMetadataKey=ReflectMetadataModule.toKey;var getOrCreateMetadataMap=ReflectMetadataModule.getMap;var store=ReflectMetadataModule.store;// `Reflect.deleteMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{deleteMetadata:function deleteMetadata(metadataKey,target/* , targetKey */){var targetKey=arguments.length<3?undefined:toMetadataKey(arguments[2]);var metadataMap=getOrCreateMetadataMap(anObject(target),targetKey,false);if(metadataMap===undefined||!metadataMap['delete'](metadataKey))return false;if(metadataMap.size)return true;var targetMetadata=store.get(target);targetMetadata['delete'](targetKey);return!!targetMetadata.size||store['delete'](target);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],112:[function(require,module,exports){var $=require('../internals/export');// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
var Set=require('../modules/es.set');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var getPrototypeOf=require('../internals/object-get-prototype-of');var iterate=require('../internals/iterate');var ordinaryOwnMetadataKeys=ReflectMetadataModule.keys;var toMetadataKey=ReflectMetadataModule.toKey;var from=function from(iter){var result=[];iterate(iter,result.push,result);return result;};var ordinaryMetadataKeys=function ordinaryMetadataKeys(O,P){var oKeys=ordinaryOwnMetadataKeys(O,P);var parent=getPrototypeOf(O);if(parent===null)return oKeys;var pKeys=ordinaryMetadataKeys(parent,P);return pKeys.length?oKeys.length?from(new Set(oKeys.concat(pKeys))):pKeys:oKeys;};// `Reflect.getMetadataKeys` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{getMetadataKeys:function getMetadataKeys(target/* , targetKey */){var targetKey=arguments.length<2?undefined:toMetadataKey(arguments[1]);return ordinaryMetadataKeys(anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/iterate":56,"../internals/object-get-prototype-of":67,"../internals/reflect-metadata":76,"../modules/es.set":108}],113:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var getPrototypeOf=require('../internals/object-get-prototype-of');var ordinaryHasOwnMetadata=ReflectMetadataModule.has;var ordinaryGetOwnMetadata=ReflectMetadataModule.get;var toMetadataKey=ReflectMetadataModule.toKey;var ordinaryGetMetadata=function ordinaryGetMetadata(MetadataKey,O,P){var hasOwn=ordinaryHasOwnMetadata(MetadataKey,O,P);if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey,O,P);var parent=getPrototypeOf(O);return parent!==null?ordinaryGetMetadata(MetadataKey,parent,P):undefined;};// `Reflect.getMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{getMetadata:function getMetadata(metadataKey,target/* , targetKey */){var targetKey=arguments.length<3?undefined:toMetadataKey(arguments[2]);return ordinaryGetMetadata(metadataKey,anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/object-get-prototype-of":67,"../internals/reflect-metadata":76}],114:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var ordinaryOwnMetadataKeys=ReflectMetadataModule.keys;var toMetadataKey=ReflectMetadataModule.toKey;// `Reflect.getOwnMetadataKeys` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{getOwnMetadataKeys:function getOwnMetadataKeys(target/* , targetKey */){var targetKey=arguments.length<2?undefined:toMetadataKey(arguments[1]);return ordinaryOwnMetadataKeys(anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],115:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var ordinaryGetOwnMetadata=ReflectMetadataModule.get;var toMetadataKey=ReflectMetadataModule.toKey;// `Reflect.getOwnMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{getOwnMetadata:function getOwnMetadata(metadataKey,target/* , targetKey */){var targetKey=arguments.length<3?undefined:toMetadataKey(arguments[2]);return ordinaryGetOwnMetadata(metadataKey,anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],116:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var getPrototypeOf=require('../internals/object-get-prototype-of');var ordinaryHasOwnMetadata=ReflectMetadataModule.has;var toMetadataKey=ReflectMetadataModule.toKey;var ordinaryHasMetadata=function ordinaryHasMetadata(MetadataKey,O,P){var hasOwn=ordinaryHasOwnMetadata(MetadataKey,O,P);if(hasOwn)return true;var parent=getPrototypeOf(O);return parent!==null?ordinaryHasMetadata(MetadataKey,parent,P):false;};// `Reflect.hasMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{hasMetadata:function hasMetadata(metadataKey,target/* , targetKey */){var targetKey=arguments.length<3?undefined:toMetadataKey(arguments[2]);return ordinaryHasMetadata(metadataKey,anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/object-get-prototype-of":67,"../internals/reflect-metadata":76}],117:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var ordinaryHasOwnMetadata=ReflectMetadataModule.has;var toMetadataKey=ReflectMetadataModule.toKey;// `Reflect.hasOwnMetadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{hasOwnMetadata:function hasOwnMetadata(metadataKey,target/* , targetKey */){var targetKey=arguments.length<3?undefined:toMetadataKey(arguments[2]);return ordinaryHasOwnMetadata(metadataKey,anObject(target),targetKey);}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],118:[function(require,module,exports){var $=require('../internals/export');var ReflectMetadataModule=require('../internals/reflect-metadata');var anObject=require('../internals/an-object');var toMetadataKey=ReflectMetadataModule.toKey;var ordinaryDefineOwnMetadata=ReflectMetadataModule.set;// `Reflect.metadata` method
// https://github.com/rbuckton/reflect-metadata
$({target:'Reflect',stat:true},{metadata:function metadata(metadataKey,metadataValue){return function decorator(target,key){ordinaryDefineOwnMetadata(metadataKey,metadataValue,anObject(target),toMetadataKey(key));};}});},{"../internals/an-object":14,"../internals/export":34,"../internals/reflect-metadata":76}],119:[function(require,module,exports){// shim for using process in browser
var process=module.exports={};// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations
return setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined
if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations
return clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects
function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues
process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],120:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("./internal/Observable");exports.Observable=Observable_1.Observable;var ConnectableObservable_1=require("./internal/observable/ConnectableObservable");exports.ConnectableObservable=ConnectableObservable_1.ConnectableObservable;var groupBy_1=require("./internal/operators/groupBy");exports.GroupedObservable=groupBy_1.GroupedObservable;var observable_1=require("./internal/symbol/observable");exports.observable=observable_1.observable;var Subject_1=require("./internal/Subject");exports.Subject=Subject_1.Subject;var BehaviorSubject_1=require("./internal/BehaviorSubject");exports.BehaviorSubject=BehaviorSubject_1.BehaviorSubject;var ReplaySubject_1=require("./internal/ReplaySubject");exports.ReplaySubject=ReplaySubject_1.ReplaySubject;var AsyncSubject_1=require("./internal/AsyncSubject");exports.AsyncSubject=AsyncSubject_1.AsyncSubject;var asap_1=require("./internal/scheduler/asap");exports.asapScheduler=asap_1.asap;var async_1=require("./internal/scheduler/async");exports.asyncScheduler=async_1.async;var queue_1=require("./internal/scheduler/queue");exports.queueScheduler=queue_1.queue;var animationFrame_1=require("./internal/scheduler/animationFrame");exports.animationFrameScheduler=animationFrame_1.animationFrame;var VirtualTimeScheduler_1=require("./internal/scheduler/VirtualTimeScheduler");exports.VirtualTimeScheduler=VirtualTimeScheduler_1.VirtualTimeScheduler;exports.VirtualAction=VirtualTimeScheduler_1.VirtualAction;var Scheduler_1=require("./internal/Scheduler");exports.Scheduler=Scheduler_1.Scheduler;var Subscription_1=require("./internal/Subscription");exports.Subscription=Subscription_1.Subscription;var Subscriber_1=require("./internal/Subscriber");exports.Subscriber=Subscriber_1.Subscriber;var Notification_1=require("./internal/Notification");exports.Notification=Notification_1.Notification;exports.NotificationKind=Notification_1.NotificationKind;var pipe_1=require("./internal/util/pipe");exports.pipe=pipe_1.pipe;var noop_1=require("./internal/util/noop");exports.noop=noop_1.noop;var identity_1=require("./internal/util/identity");exports.identity=identity_1.identity;var isObservable_1=require("./internal/util/isObservable");exports.isObservable=isObservable_1.isObservable;var ArgumentOutOfRangeError_1=require("./internal/util/ArgumentOutOfRangeError");exports.ArgumentOutOfRangeError=ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;var EmptyError_1=require("./internal/util/EmptyError");exports.EmptyError=EmptyError_1.EmptyError;var ObjectUnsubscribedError_1=require("./internal/util/ObjectUnsubscribedError");exports.ObjectUnsubscribedError=ObjectUnsubscribedError_1.ObjectUnsubscribedError;var UnsubscriptionError_1=require("./internal/util/UnsubscriptionError");exports.UnsubscriptionError=UnsubscriptionError_1.UnsubscriptionError;var TimeoutError_1=require("./internal/util/TimeoutError");exports.TimeoutError=TimeoutError_1.TimeoutError;var bindCallback_1=require("./internal/observable/bindCallback");exports.bindCallback=bindCallback_1.bindCallback;var bindNodeCallback_1=require("./internal/observable/bindNodeCallback");exports.bindNodeCallback=bindNodeCallback_1.bindNodeCallback;var combineLatest_1=require("./internal/observable/combineLatest");exports.combineLatest=combineLatest_1.combineLatest;var concat_1=require("./internal/observable/concat");exports.concat=concat_1.concat;var defer_1=require("./internal/observable/defer");exports.defer=defer_1.defer;var empty_1=require("./internal/observable/empty");exports.empty=empty_1.empty;var forkJoin_1=require("./internal/observable/forkJoin");exports.forkJoin=forkJoin_1.forkJoin;var from_1=require("./internal/observable/from");exports.from=from_1.from;var fromEvent_1=require("./internal/observable/fromEvent");exports.fromEvent=fromEvent_1.fromEvent;var fromEventPattern_1=require("./internal/observable/fromEventPattern");exports.fromEventPattern=fromEventPattern_1.fromEventPattern;var generate_1=require("./internal/observable/generate");exports.generate=generate_1.generate;var iif_1=require("./internal/observable/iif");exports.iif=iif_1.iif;var interval_1=require("./internal/observable/interval");exports.interval=interval_1.interval;var merge_1=require("./internal/observable/merge");exports.merge=merge_1.merge;var never_1=require("./internal/observable/never");exports.never=never_1.never;var of_1=require("./internal/observable/of");exports.of=of_1.of;var onErrorResumeNext_1=require("./internal/observable/onErrorResumeNext");exports.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext;var pairs_1=require("./internal/observable/pairs");exports.pairs=pairs_1.pairs;var partition_1=require("./internal/observable/partition");exports.partition=partition_1.partition;var race_1=require("./internal/observable/race");exports.race=race_1.race;var range_1=require("./internal/observable/range");exports.range=range_1.range;var throwError_1=require("./internal/observable/throwError");exports.throwError=throwError_1.throwError;var timer_1=require("./internal/observable/timer");exports.timer=timer_1.timer;var using_1=require("./internal/observable/using");exports.using=using_1.using;var zip_1=require("./internal/observable/zip");exports.zip=zip_1.zip;var scheduled_1=require("./internal/scheduled/scheduled");exports.scheduled=scheduled_1.scheduled;var empty_2=require("./internal/observable/empty");exports.EMPTY=empty_2.EMPTY;var never_2=require("./internal/observable/never");exports.NEVER=never_2.NEVER;var config_1=require("./internal/config");exports.config=config_1.config;},{"./internal/AsyncSubject":121,"./internal/BehaviorSubject":122,"./internal/Notification":124,"./internal/Observable":125,"./internal/ReplaySubject":128,"./internal/Scheduler":129,"./internal/Subject":130,"./internal/Subscriber":132,"./internal/Subscription":133,"./internal/config":134,"./internal/observable/ConnectableObservable":135,"./internal/observable/bindCallback":137,"./internal/observable/bindNodeCallback":138,"./internal/observable/combineLatest":139,"./internal/observable/concat":140,"./internal/observable/defer":141,"./internal/observable/empty":142,"./internal/observable/forkJoin":143,"./internal/observable/from":144,"./internal/observable/fromEvent":146,"./internal/observable/fromEventPattern":147,"./internal/observable/generate":148,"./internal/observable/iif":149,"./internal/observable/interval":150,"./internal/observable/merge":151,"./internal/observable/never":152,"./internal/observable/of":153,"./internal/observable/onErrorResumeNext":154,"./internal/observable/pairs":155,"./internal/observable/partition":156,"./internal/observable/race":157,"./internal/observable/range":158,"./internal/observable/throwError":159,"./internal/observable/timer":160,"./internal/observable/using":161,"./internal/observable/zip":162,"./internal/operators/groupBy":198,"./internal/scheduled/scheduled":270,"./internal/scheduler/VirtualTimeScheduler":280,"./internal/scheduler/animationFrame":281,"./internal/scheduler/asap":282,"./internal/scheduler/async":283,"./internal/scheduler/queue":284,"./internal/symbol/observable":286,"./internal/util/ArgumentOutOfRangeError":288,"./internal/util/EmptyError":289,"./internal/util/ObjectUnsubscribedError":291,"./internal/util/TimeoutError":292,"./internal/util/UnsubscriptionError":293,"./internal/util/identity":296,"./internal/util/isObservable":305,"./internal/util/noop":308,"./internal/util/pipe":310}],121:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics8=function extendStatics(d,b){_extendStatics8=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics8(d,b);};return function(d,b){_extendStatics8(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("./Subject");var Subscription_1=require("./Subscription");var AsyncSubject=function(_super){__extends(AsyncSubject,_super);function AsyncSubject(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.value=null;_this.hasNext=false;_this.hasCompleted=false;return _this;}AsyncSubject.prototype._subscribe=function(subscriber){if(this.hasError){subscriber.error(this.thrownError);return Subscription_1.Subscription.EMPTY;}else if(this.hasCompleted&&this.hasNext){subscriber.next(this.value);subscriber.complete();return Subscription_1.Subscription.EMPTY;}return _super.prototype._subscribe.call(this,subscriber);};AsyncSubject.prototype.next=function(value){if(!this.hasCompleted){this.value=value;this.hasNext=true;}};AsyncSubject.prototype.error=function(error){if(!this.hasCompleted){_super.prototype.error.call(this,error);}};AsyncSubject.prototype.complete=function(){this.hasCompleted=true;if(this.hasNext){_super.prototype.next.call(this,this.value);}_super.prototype.complete.call(this);};return AsyncSubject;}(Subject_1.Subject);exports.AsyncSubject=AsyncSubject;},{"./Subject":130,"./Subscription":133}],122:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics9=function extendStatics(d,b){_extendStatics9=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics9(d,b);};return function(d,b){_extendStatics9(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("./Subject");var ObjectUnsubscribedError_1=require("./util/ObjectUnsubscribedError");var BehaviorSubject=function(_super){__extends(BehaviorSubject,_super);function BehaviorSubject(_value){var _this=_super.call(this)||this;_this._value=_value;return _this;}Object.defineProperty(BehaviorSubject.prototype,"value",{get:function get(){return this.getValue();},enumerable:true,configurable:true});BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);if(subscription&&!subscription.closed){subscriber.next(this._value);}return subscription;};BehaviorSubject.prototype.getValue=function(){if(this.hasError){throw this.thrownError;}else if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else{return this._value;}};BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value);};return BehaviorSubject;}(Subject_1.Subject);exports.BehaviorSubject=BehaviorSubject;},{"./Subject":130,"./util/ObjectUnsubscribedError":291}],123:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics10=function extendStatics(d,b){_extendStatics10=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics10(d,b);};return function(d,b){_extendStatics10(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("./Subscriber");var InnerSubscriber=function(_super){__extends(InnerSubscriber,_super);function InnerSubscriber(parent,outerValue,outerIndex){var _this=_super.call(this)||this;_this.parent=parent;_this.outerValue=outerValue;_this.outerIndex=outerIndex;_this.index=0;return _this;}InnerSubscriber.prototype._next=function(value){this.parent.notifyNext(this.outerValue,value,this.outerIndex,this.index++,this);};InnerSubscriber.prototype._error=function(error){this.parent.notifyError(error,this);this.unsubscribe();};InnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(this);this.unsubscribe();};return InnerSubscriber;}(Subscriber_1.Subscriber);exports.InnerSubscriber=InnerSubscriber;},{"./Subscriber":132}],124:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var empty_1=require("./observable/empty");var of_1=require("./observable/of");var throwError_1=require("./observable/throwError");var NotificationKind;(function(NotificationKind){NotificationKind["NEXT"]="N";NotificationKind["ERROR"]="E";NotificationKind["COMPLETE"]="C";})(NotificationKind=exports.NotificationKind||(exports.NotificationKind={}));var Notification=function(){function Notification(kind,value,error){this.kind=kind;this.value=value;this.error=error;this.hasValue=kind==='N';}Notification.prototype.observe=function(observer){switch(this.kind){case'N':return observer.next&&observer.next(this.value);case'E':return observer.error&&observer.error(this.error);case'C':return observer.complete&&observer.complete();}};Notification.prototype["do"]=function(next,error,complete){var kind=this.kind;switch(kind){case'N':return next&&next(this.value);case'E':return error&&error(this.error);case'C':return complete&&complete();}};Notification.prototype.accept=function(nextOrObserver,error,complete){if(nextOrObserver&&typeof nextOrObserver.next==='function'){return this.observe(nextOrObserver);}else{return this["do"](nextOrObserver,error,complete);}};Notification.prototype.toObservable=function(){var kind=this.kind;switch(kind){case'N':return of_1.of(this.value);case'E':return throwError_1.throwError(this.error);case'C':return empty_1.empty();}throw new Error('unexpected notification kind value');};Notification.createNext=function(value){if(typeof value!=='undefined'){return new Notification('N',value);}return Notification.undefinedValueNotification;};Notification.createError=function(err){return new Notification('E',undefined,err);};Notification.createComplete=function(){return Notification.completeNotification;};Notification.completeNotification=new Notification('C');Notification.undefinedValueNotification=new Notification('N',undefined);return Notification;}();exports.Notification=Notification;},{"./observable/empty":142,"./observable/of":153,"./observable/throwError":159}],125:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var canReportError_1=require("./util/canReportError");var toSubscriber_1=require("./util/toSubscriber");var observable_1=require("./symbol/observable");var pipe_1=require("./util/pipe");var config_1=require("./config");var Observable=function(){function Observable(subscribe){this._isScalar=false;if(subscribe){this._subscribe=subscribe;}}Observable.prototype.lift=function(operator){var observable=new Observable();observable.source=this;observable.operator=operator;return observable;};Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator;var sink=toSubscriber_1.toSubscriber(observerOrNext,error,complete);if(operator){sink.add(operator.call(sink,this.source));}else{sink.add(this.source||config_1.config.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink));}if(config_1.config.useDeprecatedSynchronousErrorHandling){if(sink.syncErrorThrowable){sink.syncErrorThrowable=false;if(sink.syncErrorThrown){throw sink.syncErrorValue;}}}return sink;};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink);}catch(err){if(config_1.config.useDeprecatedSynchronousErrorHandling){sink.syncErrorThrown=true;sink.syncErrorValue=err;}if(canReportError_1.canReportError(sink)){sink.error(err);}else{console.warn(err);}}};Observable.prototype.forEach=function(next,promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var subscription;subscription=_this.subscribe(function(value){try{next(value);}catch(err){reject(err);if(subscription){subscription.unsubscribe();}}},reject,resolve);});};Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber);};Observable.prototype[observable_1.observable]=function(){return this;};Observable.prototype.pipe=function(){var operations=[];for(var _i=0;_i<arguments.length;_i++){operations[_i]=arguments[_i];}if(operations.length===0){return this;}return pipe_1.pipeFromArray(operations)(this);};Observable.prototype.toPromise=function(promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x;},function(err){return reject(err);},function(){return resolve(value);});});};Observable.create=function(subscribe){return new Observable(subscribe);};return Observable;}();exports.Observable=Observable;function getPromiseCtor(promiseCtor){if(!promiseCtor){promiseCtor=config_1.config.Promise||Promise;}if(!promiseCtor){throw new Error('no Promise impl found');}return promiseCtor;}},{"./config":134,"./symbol/observable":286,"./util/canReportError":294,"./util/pipe":310,"./util/toSubscriber":317}],126:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var config_1=require("./config");var hostReportError_1=require("./util/hostReportError");exports.empty={closed:true,next:function next(value){},error:function error(err){if(config_1.config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError_1.hostReportError(err);}},complete:function complete(){}};},{"./config":134,"./util/hostReportError":295}],127:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics11=function extendStatics(d,b){_extendStatics11=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics11(d,b);};return function(d,b){_extendStatics11(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("./Subscriber");var OuterSubscriber=function(_super){__extends(OuterSubscriber,_super);function OuterSubscriber(){return _super!==null&&_super.apply(this,arguments)||this;}OuterSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};OuterSubscriber.prototype.notifyError=function(error,innerSub){this.destination.error(error);};OuterSubscriber.prototype.notifyComplete=function(innerSub){this.destination.complete();};return OuterSubscriber;}(Subscriber_1.Subscriber);exports.OuterSubscriber=OuterSubscriber;},{"./Subscriber":132}],128:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics12=function extendStatics(d,b){_extendStatics12=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics12(d,b);};return function(d,b){_extendStatics12(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("./Subject");var queue_1=require("./scheduler/queue");var Subscription_1=require("./Subscription");var observeOn_1=require("./operators/observeOn");var ObjectUnsubscribedError_1=require("./util/ObjectUnsubscribedError");var SubjectSubscription_1=require("./SubjectSubscription");var ReplaySubject=function(_super){__extends(ReplaySubject,_super);function ReplaySubject(bufferSize,windowTime,scheduler){if(bufferSize===void 0){bufferSize=Number.POSITIVE_INFINITY;}if(windowTime===void 0){windowTime=Number.POSITIVE_INFINITY;}var _this=_super.call(this)||this;_this.scheduler=scheduler;_this._events=[];_this._infiniteTimeWindow=false;_this._bufferSize=bufferSize<1?1:bufferSize;_this._windowTime=windowTime<1?1:windowTime;if(windowTime===Number.POSITIVE_INFINITY){_this._infiniteTimeWindow=true;_this.next=_this.nextInfiniteTimeWindow;}else{_this.next=_this.nextTimeWindow;}return _this;}ReplaySubject.prototype.nextInfiniteTimeWindow=function(value){var _events=this._events;_events.push(value);if(_events.length>this._bufferSize){_events.shift();}_super.prototype.next.call(this,value);};ReplaySubject.prototype.nextTimeWindow=function(value){this._events.push(new ReplayEvent(this._getNow(),value));this._trimBufferThenGetEvents();_super.prototype.next.call(this,value);};ReplaySubject.prototype._subscribe=function(subscriber){var _infiniteTimeWindow=this._infiniteTimeWindow;var _events=_infiniteTimeWindow?this._events:this._trimBufferThenGetEvents();var scheduler=this.scheduler;var len=_events.length;var subscription;if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else if(this.isStopped||this.hasError){subscription=Subscription_1.Subscription.EMPTY;}else{this.observers.push(subscriber);subscription=new SubjectSubscription_1.SubjectSubscription(this,subscriber);}if(scheduler){subscriber.add(subscriber=new observeOn_1.ObserveOnSubscriber(subscriber,scheduler));}if(_infiniteTimeWindow){for(var i=0;i<len&&!subscriber.closed;i++){subscriber.next(_events[i]);}}else{for(var i=0;i<len&&!subscriber.closed;i++){subscriber.next(_events[i].value);}}if(this.hasError){subscriber.error(this.thrownError);}else if(this.isStopped){subscriber.complete();}return subscription;};ReplaySubject.prototype._getNow=function(){return(this.scheduler||queue_1.queue).now();};ReplaySubject.prototype._trimBufferThenGetEvents=function(){var now=this._getNow();var _bufferSize=this._bufferSize;var _windowTime=this._windowTime;var _events=this._events;var eventsCount=_events.length;var spliceCount=0;while(spliceCount<eventsCount){if(now-_events[spliceCount].time<_windowTime){break;}spliceCount++;}if(eventsCount>_bufferSize){spliceCount=Math.max(spliceCount,eventsCount-_bufferSize);}if(spliceCount>0){_events.splice(0,spliceCount);}return _events;};return ReplaySubject;}(Subject_1.Subject);exports.ReplaySubject=ReplaySubject;var ReplayEvent=function(){function ReplayEvent(time,value){this.time=time;this.value=value;}return ReplayEvent;}();},{"./Subject":130,"./SubjectSubscription":131,"./Subscription":133,"./operators/observeOn":213,"./scheduler/queue":284,"./util/ObjectUnsubscribedError":291}],129:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Scheduler=function(){function Scheduler(SchedulerAction,now){if(now===void 0){now=Scheduler.now;}this.SchedulerAction=SchedulerAction;this.now=now;}Scheduler.prototype.schedule=function(work,delay,state){if(delay===void 0){delay=0;}return new this.SchedulerAction(this,work).schedule(state,delay);};Scheduler.now=function(){return Date.now();};return Scheduler;}();exports.Scheduler=Scheduler;},{}],130:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics13=function extendStatics(d,b){_extendStatics13=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics13(d,b);};return function(d,b){_extendStatics13(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("./Observable");var Subscriber_1=require("./Subscriber");var Subscription_1=require("./Subscription");var ObjectUnsubscribedError_1=require("./util/ObjectUnsubscribedError");var SubjectSubscription_1=require("./SubjectSubscription");var rxSubscriber_1=require("../internal/symbol/rxSubscriber");var SubjectSubscriber=function(_super){__extends(SubjectSubscriber,_super);function SubjectSubscriber(destination){var _this=_super.call(this,destination)||this;_this.destination=destination;return _this;}return SubjectSubscriber;}(Subscriber_1.Subscriber);exports.SubjectSubscriber=SubjectSubscriber;var Subject=function(_super){__extends(Subject,_super);function Subject(){var _this=_super.call(this)||this;_this.observers=[];_this.closed=false;_this.isStopped=false;_this.hasError=false;_this.thrownError=null;return _this;}Subject.prototype[rxSubscriber_1.rxSubscriber]=function(){return new SubjectSubscriber(this);};Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);subject.operator=operator;return subject;};Subject.prototype.next=function(value){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}if(!this.isStopped){var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].next(value);}}};Subject.prototype.error=function(err){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}this.hasError=true;this.thrownError=err;this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].error(err);}this.observers.length=0;};Subject.prototype.complete=function(){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].complete();}this.observers.length=0;};Subject.prototype.unsubscribe=function(){this.isStopped=true;this.closed=true;this.observers=null;};Subject.prototype._trySubscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else{return _super.prototype._trySubscribe.call(this,subscriber);}};Subject.prototype._subscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else if(this.hasError){subscriber.error(this.thrownError);return Subscription_1.Subscription.EMPTY;}else if(this.isStopped){subscriber.complete();return Subscription_1.Subscription.EMPTY;}else{this.observers.push(subscriber);return new SubjectSubscription_1.SubjectSubscription(this,subscriber);}};Subject.prototype.asObservable=function(){var observable=new Observable_1.Observable();observable.source=this;return observable;};Subject.create=function(destination,source){return new AnonymousSubject(destination,source);};return Subject;}(Observable_1.Observable);exports.Subject=Subject;var AnonymousSubject=function(_super){__extends(AnonymousSubject,_super);function AnonymousSubject(destination,source){var _this=_super.call(this)||this;_this.destination=destination;_this.source=source;return _this;}AnonymousSubject.prototype.next=function(value){var destination=this.destination;if(destination&&destination.next){destination.next(value);}};AnonymousSubject.prototype.error=function(err){var destination=this.destination;if(destination&&destination.error){this.destination.error(err);}};AnonymousSubject.prototype.complete=function(){var destination=this.destination;if(destination&&destination.complete){this.destination.complete();}};AnonymousSubject.prototype._subscribe=function(subscriber){var source=this.source;if(source){return this.source.subscribe(subscriber);}else{return Subscription_1.Subscription.EMPTY;}};return AnonymousSubject;}(Subject);exports.AnonymousSubject=AnonymousSubject;},{"../internal/symbol/rxSubscriber":287,"./Observable":125,"./SubjectSubscription":131,"./Subscriber":132,"./Subscription":133,"./util/ObjectUnsubscribedError":291}],131:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics14=function extendStatics(d,b){_extendStatics14=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics14(d,b);};return function(d,b){_extendStatics14(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscription_1=require("./Subscription");var SubjectSubscription=function(_super){__extends(SubjectSubscription,_super);function SubjectSubscription(subject,subscriber){var _this=_super.call(this)||this;_this.subject=subject;_this.subscriber=subscriber;_this.closed=false;return _this;}SubjectSubscription.prototype.unsubscribe=function(){if(this.closed){return;}this.closed=true;var subject=this.subject;var observers=subject.observers;this.subject=null;if(!observers||observers.length===0||subject.isStopped||subject.closed){return;}var subscriberIndex=observers.indexOf(this.subscriber);if(subscriberIndex!==-1){observers.splice(subscriberIndex,1);}};return SubjectSubscription;}(Subscription_1.Subscription);exports.SubjectSubscription=SubjectSubscription;},{"./Subscription":133}],132:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics15=function extendStatics(d,b){_extendStatics15=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics15(d,b);};return function(d,b){_extendStatics15(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var isFunction_1=require("./util/isFunction");var Observer_1=require("./Observer");var Subscription_1=require("./Subscription");var rxSubscriber_1=require("../internal/symbol/rxSubscriber");var config_1=require("./config");var hostReportError_1=require("./util/hostReportError");var Subscriber=function(_super){__extends(Subscriber,_super);function Subscriber(destinationOrNext,error,complete){var _this=_super.call(this)||this;_this.syncErrorValue=null;_this.syncErrorThrown=false;_this.syncErrorThrowable=false;_this.isStopped=false;switch(arguments.length){case 0:_this.destination=Observer_1.empty;break;case 1:if(!destinationOrNext){_this.destination=Observer_1.empty;break;}if(_typeof(destinationOrNext)==='object'){if(destinationOrNext instanceof Subscriber){_this.syncErrorThrowable=destinationOrNext.syncErrorThrowable;_this.destination=destinationOrNext;destinationOrNext.add(_this);}else{_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext);}break;}default:_this.syncErrorThrowable=true;_this.destination=new SafeSubscriber(_this,destinationOrNext,error,complete);break;}return _this;}Subscriber.prototype[rxSubscriber_1.rxSubscriber]=function(){return this;};Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);subscriber.syncErrorThrowable=false;return subscriber;};Subscriber.prototype.next=function(value){if(!this.isStopped){this._next(value);}};Subscriber.prototype.error=function(err){if(!this.isStopped){this.isStopped=true;this._error(err);}};Subscriber.prototype.complete=function(){if(!this.isStopped){this.isStopped=true;this._complete();}};Subscriber.prototype.unsubscribe=function(){if(this.closed){return;}this.isStopped=true;_super.prototype.unsubscribe.call(this);};Subscriber.prototype._next=function(value){this.destination.next(value);};Subscriber.prototype._error=function(err){this.destination.error(err);this.unsubscribe();};Subscriber.prototype._complete=function(){this.destination.complete();this.unsubscribe();};Subscriber.prototype._unsubscribeAndRecycle=function(){var _parentOrParents=this._parentOrParents;this._parentOrParents=null;this.unsubscribe();this.closed=false;this.isStopped=false;this._parentOrParents=_parentOrParents;return this;};return Subscriber;}(Subscription_1.Subscription);exports.Subscriber=Subscriber;var SafeSubscriber=function(_super){__extends(SafeSubscriber,_super);function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){var _this=_super.call(this)||this;_this._parentSubscriber=_parentSubscriber;var next;var context=_this;if(isFunction_1.isFunction(observerOrNext)){next=observerOrNext;}else if(observerOrNext){next=observerOrNext.next;error=observerOrNext.error;complete=observerOrNext.complete;if(observerOrNext!==Observer_1.empty){context=Object.create(observerOrNext);if(isFunction_1.isFunction(context.unsubscribe)){_this.add(context.unsubscribe.bind(context));}context.unsubscribe=_this.unsubscribe.bind(_this);}}_this._context=context;_this._next=next;_this._error=error;_this._complete=complete;return _this;}SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;if(!config_1.config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._next,value);}else if(this.__tryOrSetError(_parentSubscriber,this._next,value)){this.unsubscribe();}}};SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;var useDeprecatedSynchronousErrorHandling=config_1.config.useDeprecatedSynchronousErrorHandling;if(this._error){if(!useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._error,err);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,this._error,err);this.unsubscribe();}}else if(!_parentSubscriber.syncErrorThrowable){this.unsubscribe();if(useDeprecatedSynchronousErrorHandling){throw err;}hostReportError_1.hostReportError(err);}else{if(useDeprecatedSynchronousErrorHandling){_parentSubscriber.syncErrorValue=err;_parentSubscriber.syncErrorThrown=true;}else{hostReportError_1.hostReportError(err);}this.unsubscribe();}}};SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function wrappedComplete(){return _this._complete.call(_this._context);};if(!config_1.config.useDeprecatedSynchronousErrorHandling||!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(wrappedComplete);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,wrappedComplete);this.unsubscribe();}}else{this.unsubscribe();}}};SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value);}catch(err){this.unsubscribe();if(config_1.config.useDeprecatedSynchronousErrorHandling){throw err;}else{hostReportError_1.hostReportError(err);}}};SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){if(!config_1.config.useDeprecatedSynchronousErrorHandling){throw new Error('bad call');}try{fn.call(this._context,value);}catch(err){if(config_1.config.useDeprecatedSynchronousErrorHandling){parent.syncErrorValue=err;parent.syncErrorThrown=true;return true;}else{hostReportError_1.hostReportError(err);return true;}}return false;};SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null;this._parentSubscriber=null;_parentSubscriber.unsubscribe();};return SafeSubscriber;}(Subscriber);exports.SafeSubscriber=SafeSubscriber;},{"../internal/symbol/rxSubscriber":287,"./Observer":126,"./Subscription":133,"./config":134,"./util/hostReportError":295,"./util/isFunction":300}],133:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isArray_1=require("./util/isArray");var isObject_1=require("./util/isObject");var isFunction_1=require("./util/isFunction");var UnsubscriptionError_1=require("./util/UnsubscriptionError");var Subscription=function(){function Subscription(unsubscribe){this.closed=false;this._parentOrParents=null;this._subscriptions=null;if(unsubscribe){this._unsubscribe=unsubscribe;}}Subscription.prototype.unsubscribe=function(){var errors;if(this.closed){return;}var _a=this,_parentOrParents=_a._parentOrParents,_unsubscribe=_a._unsubscribe,_subscriptions=_a._subscriptions;this.closed=true;this._parentOrParents=null;this._subscriptions=null;if(_parentOrParents instanceof Subscription){_parentOrParents.remove(this);}else if(_parentOrParents!==null){for(var index=0;index<_parentOrParents.length;++index){var parent_1=_parentOrParents[index];parent_1.remove(this);}}if(isFunction_1.isFunction(_unsubscribe)){try{_unsubscribe.call(this);}catch(e){errors=e instanceof UnsubscriptionError_1.UnsubscriptionError?flattenUnsubscriptionErrors(e.errors):[e];}}if(isArray_1.isArray(_subscriptions)){var index=-1;var len=_subscriptions.length;while(++index<len){var sub=_subscriptions[index];if(isObject_1.isObject(sub)){try{sub.unsubscribe();}catch(e){errors=errors||[];if(e instanceof UnsubscriptionError_1.UnsubscriptionError){errors=errors.concat(flattenUnsubscriptionErrors(e.errors));}else{errors.push(e);}}}}}if(errors){throw new UnsubscriptionError_1.UnsubscriptionError(errors);}};Subscription.prototype.add=function(teardown){var subscription=teardown;if(!teardown){return Subscription.EMPTY;}switch(_typeof(teardown)){case'function':subscription=new Subscription(teardown);case'object':if(subscription===this||subscription.closed||typeof subscription.unsubscribe!=='function'){return subscription;}else if(this.closed){subscription.unsubscribe();return subscription;}else if(!(subscription instanceof Subscription)){var tmp=subscription;subscription=new Subscription();subscription._subscriptions=[tmp];}break;default:{throw new Error('unrecognized teardown '+teardown+' added to Subscription.');}}var _parentOrParents=subscription._parentOrParents;if(_parentOrParents===null){subscription._parentOrParents=this;}else if(_parentOrParents instanceof Subscription){if(_parentOrParents===this){return subscription;}subscription._parentOrParents=[_parentOrParents,this];}else if(_parentOrParents.indexOf(this)===-1){_parentOrParents.push(this);}else{return subscription;}var subscriptions=this._subscriptions;if(subscriptions===null){this._subscriptions=[subscription];}else{subscriptions.push(subscription);}return subscription;};Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);if(subscriptionIndex!==-1){subscriptions.splice(subscriptionIndex,1);}}};Subscription.EMPTY=function(empty){empty.closed=true;return empty;}(new Subscription());return Subscription;}();exports.Subscription=Subscription;function flattenUnsubscriptionErrors(errors){return errors.reduce(function(errs,err){return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError?err.errors:err);},[]);}},{"./util/UnsubscriptionError":293,"./util/isArray":297,"./util/isFunction":300,"./util/isObject":304}],134:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _enable_super_gross_mode_that_will_cause_bad_things=false;exports.config={Promise:undefined,set useDeprecatedSynchronousErrorHandling(value){if(value){var error=new Error();console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n'+error.stack);}else if(_enable_super_gross_mode_that_will_cause_bad_things){console.log('RxJS: Back to a better error behavior. Thank you. <3');}_enable_super_gross_mode_that_will_cause_bad_things=value;},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things;}};},{}],135:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics16=function extendStatics(d,b){_extendStatics16=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics16(d,b);};return function(d,b){_extendStatics16(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var Observable_1=require("../Observable");var Subscriber_1=require("../Subscriber");var Subscription_1=require("../Subscription");var refCount_1=require("../operators/refCount");var ConnectableObservable=function(_super){__extends(ConnectableObservable,_super);function ConnectableObservable(source,subjectFactory){var _this=_super.call(this)||this;_this.source=source;_this.subjectFactory=subjectFactory;_this._refCount=0;_this._isComplete=false;return _this;}ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber);};ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;if(!subject||subject.isStopped){this._subject=this.subjectFactory();}return this._subject;};ConnectableObservable.prototype.connect=function(){var connection=this._connection;if(!connection){this._isComplete=false;connection=this._connection=new Subscription_1.Subscription();connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this)));if(connection.closed){this._connection=null;connection=Subscription_1.Subscription.EMPTY;}}return connection;};ConnectableObservable.prototype.refCount=function(){return refCount_1.refCount()(this);};return ConnectableObservable;}(Observable_1.Observable);exports.ConnectableObservable=ConnectableObservable;exports.connectableObservableDescriptor=function(){var connectableProto=ConnectableObservable.prototype;return{operator:{value:null},_refCount:{value:0,writable:true},_subject:{value:null,writable:true},_connection:{value:null,writable:true},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:true},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}};}();var ConnectableSubscriber=function(_super){__extends(ConnectableSubscriber,_super);function ConnectableSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;_this.connectable=connectable;return _this;}ConnectableSubscriber.prototype._error=function(err){this._unsubscribe();_super.prototype._error.call(this,err);};ConnectableSubscriber.prototype._complete=function(){this.connectable._isComplete=true;this._unsubscribe();_super.prototype._complete.call(this);};ConnectableSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var connection=connectable._connection;connectable._refCount=0;connectable._subject=null;connectable._connection=null;if(connection){connection.unsubscribe();}}};return ConnectableSubscriber;}(Subject_1.SubjectSubscriber);var RefCountOperator=function(){function RefCountOperator(connectable){this.connectable=connectable;}RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable);var subscription=source.subscribe(refCounter);if(!refCounter.closed){refCounter.connection=connectable.connect();}return subscription;};return RefCountOperator;}();var RefCountSubscriber=function(_super){__extends(RefCountSubscriber,_super);function RefCountSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;_this.connectable=connectable;return _this;}RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable){this.connection=null;return;}this.connectable=null;var refCount=connectable._refCount;if(refCount<=0){this.connection=null;return;}connectable._refCount=refCount-1;if(refCount>1){this.connection=null;return;}var connection=this.connection;var sharedConnection=connectable._connection;this.connection=null;if(sharedConnection&&(!connection||sharedConnection===connection)){sharedConnection.unsubscribe();}};return RefCountSubscriber;}(Subscriber_1.Subscriber);},{"../Observable":125,"../Subject":130,"../Subscriber":132,"../Subscription":133,"../operators/refCount":224}],136:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics17=function extendStatics(d,b){_extendStatics17=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics17(d,b);};return function(d,b){_extendStatics17(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var asap_1=require("../scheduler/asap");var isNumeric_1=require("../util/isNumeric");var SubscribeOnObservable=function(_super){__extends(SubscribeOnObservable,_super);function SubscribeOnObservable(source,delayTime,scheduler){if(delayTime===void 0){delayTime=0;}if(scheduler===void 0){scheduler=asap_1.asap;}var _this=_super.call(this)||this;_this.source=source;_this.delayTime=delayTime;_this.scheduler=scheduler;if(!isNumeric_1.isNumeric(delayTime)||delayTime<0){_this.delayTime=0;}if(!scheduler||typeof scheduler.schedule!=='function'){_this.scheduler=asap_1.asap;}return _this;}SubscribeOnObservable.create=function(source,delay,scheduler){if(delay===void 0){delay=0;}if(scheduler===void 0){scheduler=asap_1.asap;}return new SubscribeOnObservable(source,delay,scheduler);};SubscribeOnObservable.dispatch=function(arg){var source=arg.source,subscriber=arg.subscriber;return this.add(source.subscribe(subscriber));};SubscribeOnObservable.prototype._subscribe=function(subscriber){var delay=this.delayTime;var source=this.source;var scheduler=this.scheduler;return scheduler.schedule(SubscribeOnObservable.dispatch,delay,{source:source,subscriber:subscriber});};return SubscribeOnObservable;}(Observable_1.Observable);exports.SubscribeOnObservable=SubscribeOnObservable;},{"../Observable":125,"../scheduler/asap":282,"../util/isNumeric":303}],137:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var AsyncSubject_1=require("../AsyncSubject");var map_1=require("../operators/map");var canReportError_1=require("../util/canReportError");var isArray_1=require("../util/isArray");var isScheduler_1=require("../util/isScheduler");function bindCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(isScheduler_1.isScheduler(resultSelector)){scheduler=resultSelector;}else{return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return bindCallback(callbackFunc,scheduler).apply(void 0,args).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));};}}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var context=this;var subject;var params={context:context,subject:subject,callbackFunc:callbackFunc,scheduler:scheduler};return new Observable_1.Observable(function(subscriber){if(!scheduler){if(!subject){subject=new AsyncSubject_1.AsyncSubject();var handler=function handler(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){if(canReportError_1.canReportError(subject)){subject.error(err);}else{console.warn(err);}}}return subject.subscribe(subscriber);}else{var state={args:args,subscriber:subscriber,params:params};return scheduler.schedule(dispatch,0,state);}});};}exports.bindCallback=bindCallback;function dispatch(state){var _this=this;var self=this;var args=state.args,subscriber=state.subscriber,params=state.params;var callbackFunc=params.callbackFunc,context=params.context,scheduler=params.scheduler;var subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject_1.AsyncSubject();var handler=function handler(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}));};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){subject.error(err);}}this.add(subject.subscribe(subscriber));}function dispatchNext(state){var value=state.value,subject=state.subject;subject.next(value);subject.complete();}function dispatchError(state){var err=state.err,subject=state.subject;subject.error(err);}},{"../AsyncSubject":121,"../Observable":125,"../operators/map":202,"../util/canReportError":294,"../util/isArray":297,"../util/isScheduler":307}],138:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var AsyncSubject_1=require("../AsyncSubject");var map_1=require("../operators/map");var canReportError_1=require("../util/canReportError");var isScheduler_1=require("../util/isScheduler");var isArray_1=require("../util/isArray");function bindNodeCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(isScheduler_1.isScheduler(resultSelector)){scheduler=resultSelector;}else{return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return bindNodeCallback(callbackFunc,scheduler).apply(void 0,args).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));};}}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var params={subject:undefined,args:args,callbackFunc:callbackFunc,scheduler:scheduler,context:this};return new Observable_1.Observable(function(subscriber){var context=params.context;var subject=params.subject;if(!scheduler){if(!subject){subject=params.subject=new AsyncSubject_1.AsyncSubject();var handler=function handler(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var err=innerArgs.shift();if(err){subject.error(err);return;}subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){if(canReportError_1.canReportError(subject)){subject.error(err);}else{console.warn(err);}}}return subject.subscribe(subscriber);}else{return scheduler.schedule(dispatch,0,{params:params,subscriber:subscriber,context:context});}});};}exports.bindNodeCallback=bindNodeCallback;function dispatch(state){var _this=this;var params=state.params,subscriber=state.subscriber,context=state.context;var callbackFunc=params.callbackFunc,args=params.args,scheduler=params.scheduler;var subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject_1.AsyncSubject();var handler=function handler(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i]=arguments[_i];}var err=innerArgs.shift();if(err){_this.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}));}};try{callbackFunc.apply(context,args.concat([handler]));}catch(err){this.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));}}this.add(subject.subscribe(subscriber));}function dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value);subject.complete();}function dispatchError(arg){var err=arg.err,subject=arg.subject;subject.error(err);}},{"../AsyncSubject":121,"../Observable":125,"../operators/map":202,"../util/canReportError":294,"../util/isArray":297,"../util/isScheduler":307}],139:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics18=function extendStatics(d,b){_extendStatics18=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics18(d,b);};return function(d,b){_extendStatics18(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var isScheduler_1=require("../util/isScheduler");var isArray_1=require("../util/isArray");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");var fromArray_1=require("./fromArray");var NONE={};function combineLatest(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var resultSelector=null;var scheduler=null;if(isScheduler_1.isScheduler(observables[observables.length-1])){scheduler=observables.pop();}if(typeof observables[observables.length-1]==='function'){resultSelector=observables.pop();}if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0];}return fromArray_1.fromArray(observables,scheduler).lift(new CombineLatestOperator(resultSelector));}exports.combineLatest=combineLatest;var CombineLatestOperator=function(){function CombineLatestOperator(resultSelector){this.resultSelector=resultSelector;}CombineLatestOperator.prototype.call=function(subscriber,source){return source.subscribe(new CombineLatestSubscriber(subscriber,this.resultSelector));};return CombineLatestOperator;}();exports.CombineLatestOperator=CombineLatestOperator;var CombineLatestSubscriber=function(_super){__extends(CombineLatestSubscriber,_super);function CombineLatestSubscriber(destination,resultSelector){var _this=_super.call(this,destination)||this;_this.resultSelector=resultSelector;_this.active=0;_this.values=[];_this.observables=[];return _this;}CombineLatestSubscriber.prototype._next=function(observable){this.values.push(NONE);this.observables.push(observable);};CombineLatestSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{this.active=len;this.toRespond=len;for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult_1.subscribeToResult(this,observable,observable,i));}}};CombineLatestSubscriber.prototype.notifyComplete=function(unused){if((this.active-=1)===0){this.destination.complete();}};CombineLatestSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var values=this.values;var oldVal=values[outerIndex];var toRespond=!this.toRespond?0:oldVal===NONE?--this.toRespond:this.toRespond;values[outerIndex]=innerValue;if(toRespond===0){if(this.resultSelector){this._tryResultSelector(values);}else{this.destination.next(values.slice());}}};CombineLatestSubscriber.prototype._tryResultSelector=function(values){var result;try{result=this.resultSelector.apply(this,values);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return CombineLatestSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.CombineLatestSubscriber=CombineLatestSubscriber;},{"../OuterSubscriber":127,"../util/isArray":297,"../util/isScheduler":307,"../util/subscribeToResult":316,"./fromArray":145}],140:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var of_1=require("./of");var concatAll_1=require("../operators/concatAll");function concat(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return concatAll_1.concatAll()(of_1.of.apply(void 0,observables));}exports.concat=concat;},{"../operators/concatAll":174,"./of":153}],141:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var from_1=require("./from");var empty_1=require("./empty");function defer(observableFactory){return new Observable_1.Observable(function(subscriber){var input;try{input=observableFactory();}catch(err){subscriber.error(err);return undefined;}var source=input?from_1.from(input):empty_1.empty();return source.subscribe(subscriber);});}exports.defer=defer;},{"../Observable":125,"./empty":142,"./from":144}],142:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");exports.EMPTY=new Observable_1.Observable(function(subscriber){return subscriber.complete();});function empty(scheduler){return scheduler?emptyScheduled(scheduler):exports.EMPTY;}exports.empty=empty;function emptyScheduled(scheduler){return new Observable_1.Observable(function(subscriber){return scheduler.schedule(function(){return subscriber.complete();});});}},{"../Observable":125}],143:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var isArray_1=require("../util/isArray");var map_1=require("../operators/map");var isObject_1=require("../util/isObject");var from_1=require("./from");function forkJoin(){var sources=[];for(var _i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i];}if(sources.length===1){var first_1=sources[0];if(isArray_1.isArray(first_1)){return forkJoinInternal(first_1,null);}if(isObject_1.isObject(first_1)&&Object.getPrototypeOf(first_1)===Object.prototype){var keys=Object.keys(first_1);return forkJoinInternal(keys.map(function(key){return first_1[key];}),keys);}}if(typeof sources[sources.length-1]==='function'){var resultSelector_1=sources.pop();sources=sources.length===1&&isArray_1.isArray(sources[0])?sources[0]:sources;return forkJoinInternal(sources,null).pipe(map_1.map(function(args){return resultSelector_1.apply(void 0,args);}));}return forkJoinInternal(sources,null);}exports.forkJoin=forkJoin;function forkJoinInternal(sources,keys){return new Observable_1.Observable(function(subscriber){var len=sources.length;if(len===0){subscriber.complete();return;}var values=new Array(len);var completed=0;var emitted=0;var _loop_1=function _loop_1(i){var source=from_1.from(sources[i]);var hasValue=false;subscriber.add(source.subscribe({next:function next(value){if(!hasValue){hasValue=true;emitted++;}values[i]=value;},error:function error(err){return subscriber.error(err);},complete:function complete(){completed++;if(completed===len||!hasValue){if(emitted===len){subscriber.next(keys?keys.reduce(function(result,key,i){return result[key]=values[i],result;},{}):values);}subscriber.complete();}}}));};for(var i=0;i<len;i++){_loop_1(i);}});}},{"../Observable":125,"../operators/map":202,"../util/isArray":297,"../util/isObject":304,"./from":144}],144:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var subscribeTo_1=require("../util/subscribeTo");var scheduled_1=require("../scheduled/scheduled");function from(input,scheduler){if(!scheduler){if(input instanceof Observable_1.Observable){return input;}return new Observable_1.Observable(subscribeTo_1.subscribeTo(input));}else{return scheduled_1.scheduled(input,scheduler);}}exports.from=from;},{"../Observable":125,"../scheduled/scheduled":270,"../util/subscribeTo":311}],145:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var subscribeToArray_1=require("../util/subscribeToArray");var scheduleArray_1=require("../scheduled/scheduleArray");function fromArray(input,scheduler){if(!scheduler){return new Observable_1.Observable(subscribeToArray_1.subscribeToArray(input));}else{return scheduleArray_1.scheduleArray(input,scheduler);}}exports.fromArray=fromArray;},{"../Observable":125,"../scheduled/scheduleArray":266,"../util/subscribeToArray":312}],146:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var isArray_1=require("../util/isArray");var isFunction_1=require("../util/isFunction");var map_1=require("../operators/map");var toString=function(){return Object.prototype.toString;}();function fromEvent(target,eventName,options,resultSelector){if(isFunction_1.isFunction(options)){resultSelector=options;options=undefined;}if(resultSelector){return fromEvent(target,eventName,options).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));}return new Observable_1.Observable(function(subscriber){function handler(e){if(arguments.length>1){subscriber.next(Array.prototype.slice.call(arguments));}else{subscriber.next(e);}}setupSubscription(target,eventName,handler,subscriber,options);});}exports.fromEvent=fromEvent;function setupSubscription(sourceObj,eventName,handler,subscriber,options){var unsubscribe;if(isEventTarget(sourceObj)){var source_1=sourceObj;sourceObj.addEventListener(eventName,handler,options);unsubscribe=function unsubscribe(){return source_1.removeEventListener(eventName,handler,options);};}else if(isJQueryStyleEventEmitter(sourceObj)){var source_2=sourceObj;sourceObj.on(eventName,handler);unsubscribe=function unsubscribe(){return source_2.off(eventName,handler);};}else if(isNodeStyleEventEmitter(sourceObj)){var source_3=sourceObj;sourceObj.addListener(eventName,handler);unsubscribe=function unsubscribe(){return source_3.removeListener(eventName,handler);};}else if(sourceObj&&sourceObj.length){for(var i=0,len=sourceObj.length;i<len;i++){setupSubscription(sourceObj[i],eventName,handler,subscriber,options);}}else{throw new TypeError('Invalid event target');}subscriber.add(unsubscribe);}function isNodeStyleEventEmitter(sourceObj){return sourceObj&&typeof sourceObj.addListener==='function'&&typeof sourceObj.removeListener==='function';}function isJQueryStyleEventEmitter(sourceObj){return sourceObj&&typeof sourceObj.on==='function'&&typeof sourceObj.off==='function';}function isEventTarget(sourceObj){return sourceObj&&typeof sourceObj.addEventListener==='function'&&typeof sourceObj.removeEventListener==='function';}},{"../Observable":125,"../operators/map":202,"../util/isArray":297,"../util/isFunction":300}],147:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var isArray_1=require("../util/isArray");var isFunction_1=require("../util/isFunction");var map_1=require("../operators/map");function fromEventPattern(addHandler,removeHandler,resultSelector){if(resultSelector){return fromEventPattern(addHandler,removeHandler).pipe(map_1.map(function(args){return isArray_1.isArray(args)?resultSelector.apply(void 0,args):resultSelector(args);}));}return new Observable_1.Observable(function(subscriber){var handler=function handler(){var e=[];for(var _i=0;_i<arguments.length;_i++){e[_i]=arguments[_i];}return subscriber.next(e.length===1?e[0]:e);};var retValue;try{retValue=addHandler(handler);}catch(err){subscriber.error(err);return undefined;}if(!isFunction_1.isFunction(removeHandler)){return undefined;}return function(){return removeHandler(handler,retValue);};});}exports.fromEventPattern=fromEventPattern;},{"../Observable":125,"../operators/map":202,"../util/isArray":297,"../util/isFunction":300}],148:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var identity_1=require("../util/identity");var isScheduler_1=require("../util/isScheduler");function generate(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler){var resultSelector;var initialState;if(arguments.length==1){var options=initialStateOrOptions;initialState=options.initialState;condition=options.condition;iterate=options.iterate;resultSelector=options.resultSelector||identity_1.identity;scheduler=options.scheduler;}else if(resultSelectorOrObservable===undefined||isScheduler_1.isScheduler(resultSelectorOrObservable)){initialState=initialStateOrOptions;resultSelector=identity_1.identity;scheduler=resultSelectorOrObservable;}else{initialState=initialStateOrOptions;resultSelector=resultSelectorOrObservable;}return new Observable_1.Observable(function(subscriber){var state=initialState;if(scheduler){return scheduler.schedule(dispatch,0,{subscriber:subscriber,iterate:iterate,condition:condition,resultSelector:resultSelector,state:state});}do{if(condition){var conditionResult=void 0;try{conditionResult=condition(state);}catch(err){subscriber.error(err);return undefined;}if(!conditionResult){subscriber.complete();break;}}var value=void 0;try{value=resultSelector(state);}catch(err){subscriber.error(err);return undefined;}subscriber.next(value);if(subscriber.closed){break;}try{state=iterate(state);}catch(err){subscriber.error(err);return undefined;}}while(true);return undefined;});}exports.generate=generate;function dispatch(state){var subscriber=state.subscriber,condition=state.condition;if(subscriber.closed){return undefined;}if(state.needIterate){try{state.state=state.iterate(state.state);}catch(err){subscriber.error(err);return undefined;}}else{state.needIterate=true;}if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state);}catch(err){subscriber.error(err);return undefined;}if(!conditionResult){subscriber.complete();return undefined;}if(subscriber.closed){return undefined;}}var value;try{value=state.resultSelector(state.state);}catch(err){subscriber.error(err);return undefined;}if(subscriber.closed){return undefined;}subscriber.next(value);if(subscriber.closed){return undefined;}return this.schedule(state);}},{"../Observable":125,"../util/identity":296,"../util/isScheduler":307}],149:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var defer_1=require("./defer");var empty_1=require("./empty");function iif(condition,trueResult,falseResult){if(trueResult===void 0){trueResult=empty_1.EMPTY;}if(falseResult===void 0){falseResult=empty_1.EMPTY;}return defer_1.defer(function(){return condition()?trueResult:falseResult;});}exports.iif=iif;},{"./defer":141,"./empty":142}],150:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var async_1=require("../scheduler/async");var isNumeric_1=require("../util/isNumeric");function interval(period,scheduler){if(period===void 0){period=0;}if(scheduler===void 0){scheduler=async_1.async;}if(!isNumeric_1.isNumeric(period)||period<0){period=0;}if(!scheduler||typeof scheduler.schedule!=='function'){scheduler=async_1.async;}return new Observable_1.Observable(function(subscriber){subscriber.add(scheduler.schedule(dispatch,period,{subscriber:subscriber,counter:0,period:period}));return subscriber;});}exports.interval=interval;function dispatch(state){var subscriber=state.subscriber,counter=state.counter,period=state.period;subscriber.next(counter);this.schedule({subscriber:subscriber,counter:counter+1,period:period},period);}},{"../Observable":125,"../scheduler/async":283,"../util/isNumeric":303}],151:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var isScheduler_1=require("../util/isScheduler");var mergeAll_1=require("../operators/mergeAll");var fromArray_1=require("./fromArray");function merge(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var concurrent=Number.POSITIVE_INFINITY;var scheduler=null;var last=observables[observables.length-1];if(isScheduler_1.isScheduler(last)){scheduler=observables.pop();if(observables.length>1&&typeof observables[observables.length-1]==='number'){concurrent=observables.pop();}}else if(typeof last==='number'){concurrent=observables.pop();}if(scheduler===null&&observables.length===1&&observables[0]instanceof Observable_1.Observable){return observables[0];}return mergeAll_1.mergeAll(concurrent)(fromArray_1.fromArray(observables,scheduler));}exports.merge=merge;},{"../Observable":125,"../operators/mergeAll":207,"../util/isScheduler":307,"./fromArray":145}],152:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var noop_1=require("../util/noop");exports.NEVER=new Observable_1.Observable(noop_1.noop);function never(){return exports.NEVER;}exports.never=never;},{"../Observable":125,"../util/noop":308}],153:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isScheduler_1=require("../util/isScheduler");var fromArray_1=require("./fromArray");var scheduleArray_1=require("../scheduled/scheduleArray");function of(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var scheduler=args[args.length-1];if(isScheduler_1.isScheduler(scheduler)){args.pop();return scheduleArray_1.scheduleArray(args,scheduler);}else{return fromArray_1.fromArray(args);}}exports.of=of;},{"../scheduled/scheduleArray":266,"../util/isScheduler":307,"./fromArray":145}],154:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var from_1=require("./from");var isArray_1=require("../util/isArray");var empty_1=require("./empty");function onErrorResumeNext(){var sources=[];for(var _i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i];}if(sources.length===0){return empty_1.EMPTY;}var first=sources[0],remainder=sources.slice(1);if(sources.length===1&&isArray_1.isArray(first)){return onErrorResumeNext.apply(void 0,first);}return new Observable_1.Observable(function(subscriber){var subNext=function subNext(){return subscriber.add(onErrorResumeNext.apply(void 0,remainder).subscribe(subscriber));};return from_1.from(first).subscribe({next:function next(value){subscriber.next(value);},error:subNext,complete:subNext});});}exports.onErrorResumeNext=onErrorResumeNext;},{"../Observable":125,"../util/isArray":297,"./empty":142,"./from":144}],155:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var Subscription_1=require("../Subscription");function pairs(obj,scheduler){if(!scheduler){return new Observable_1.Observable(function(subscriber){var keys=Object.keys(obj);for(var i=0;i<keys.length&&!subscriber.closed;i++){var key=keys[i];if(obj.hasOwnProperty(key)){subscriber.next([key,obj[key]]);}}subscriber.complete();});}else{return new Observable_1.Observable(function(subscriber){var keys=Object.keys(obj);var subscription=new Subscription_1.Subscription();subscription.add(scheduler.schedule(dispatch,0,{keys:keys,index:0,subscriber:subscriber,subscription:subscription,obj:obj}));return subscription;});}}exports.pairs=pairs;function dispatch(state){var keys=state.keys,index=state.index,subscriber=state.subscriber,subscription=state.subscription,obj=state.obj;if(!subscriber.closed){if(index<keys.length){var key=keys[index];subscriber.next([key,obj[key]]);subscription.add(this.schedule({keys:keys,index:index+1,subscriber:subscriber,subscription:subscription,obj:obj}));}else{subscriber.complete();}}}exports.dispatch=dispatch;},{"../Observable":125,"../Subscription":133}],156:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var not_1=require("../util/not");var subscribeTo_1=require("../util/subscribeTo");var filter_1=require("../operators/filter");var Observable_1=require("../Observable");function partition(source,predicate,thisArg){return[filter_1.filter(predicate,thisArg)(new Observable_1.Observable(subscribeTo_1.subscribeTo(source))),filter_1.filter(not_1.not(predicate,thisArg))(new Observable_1.Observable(subscribeTo_1.subscribeTo(source)))];}exports.partition=partition;},{"../Observable":125,"../operators/filter":193,"../util/not":309,"../util/subscribeTo":311}],157:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics19=function extendStatics(d,b){_extendStatics19=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics19(d,b);};return function(d,b){_extendStatics19(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var isArray_1=require("../util/isArray");var fromArray_1=require("./fromArray");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function race(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}if(observables.length===1){if(isArray_1.isArray(observables[0])){observables=observables[0];}else{return observables[0];}}return fromArray_1.fromArray(observables,undefined).lift(new RaceOperator());}exports.race=race;var RaceOperator=function(){function RaceOperator(){}RaceOperator.prototype.call=function(subscriber,source){return source.subscribe(new RaceSubscriber(subscriber));};return RaceOperator;}();exports.RaceOperator=RaceOperator;var RaceSubscriber=function(_super){__extends(RaceSubscriber,_super);function RaceSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasFirst=false;_this.observables=[];_this.subscriptions=[];return _this;}RaceSubscriber.prototype._next=function(observable){this.observables.push(observable);};RaceSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{for(var i=0;i<len&&!this.hasFirst;i++){var observable=observables[i];var subscription=subscribeToResult_1.subscribeToResult(this,observable,observable,i);if(this.subscriptions){this.subscriptions.push(subscription);}this.add(subscription);}this.observables=null;}};RaceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(!this.hasFirst){this.hasFirst=true;for(var i=0;i<this.subscriptions.length;i++){if(i!==outerIndex){var subscription=this.subscriptions[i];subscription.unsubscribe();this.remove(subscription);}}this.subscriptions=null;}this.destination.next(innerValue);};return RaceSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.RaceSubscriber=RaceSubscriber;},{"../OuterSubscriber":127,"../util/isArray":297,"../util/subscribeToResult":316,"./fromArray":145}],158:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");function range(start,count,scheduler){if(start===void 0){start=0;}return new Observable_1.Observable(function(subscriber){if(count===undefined){count=start;start=0;}var index=0;var current=start;if(scheduler){return scheduler.schedule(dispatch,0,{index:index,count:count,start:start,subscriber:subscriber});}else{do{if(index++>=count){subscriber.complete();break;}subscriber.next(current++);if(subscriber.closed){break;}}while(true);}return undefined;});}exports.range=range;function dispatch(state){var start=state.start,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count){subscriber.complete();return;}subscriber.next(start);if(subscriber.closed){return;}state.index=index+1;state.start=start+1;this.schedule(state);}exports.dispatch=dispatch;},{"../Observable":125}],159:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");function throwError(error,scheduler){if(!scheduler){return new Observable_1.Observable(function(subscriber){return subscriber.error(error);});}else{return new Observable_1.Observable(function(subscriber){return scheduler.schedule(dispatch,0,{error:error,subscriber:subscriber});});}}exports.throwError=throwError;function dispatch(_a){var error=_a.error,subscriber=_a.subscriber;subscriber.error(error);}},{"../Observable":125}],160:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var async_1=require("../scheduler/async");var isNumeric_1=require("../util/isNumeric");var isScheduler_1=require("../util/isScheduler");function timer(dueTime,periodOrScheduler,scheduler){if(dueTime===void 0){dueTime=0;}var period=-1;if(isNumeric_1.isNumeric(periodOrScheduler)){period=Number(periodOrScheduler)<1&&1||Number(periodOrScheduler);}else if(isScheduler_1.isScheduler(periodOrScheduler)){scheduler=periodOrScheduler;}if(!isScheduler_1.isScheduler(scheduler)){scheduler=async_1.async;}return new Observable_1.Observable(function(subscriber){var due=isNumeric_1.isNumeric(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber});});}exports.timer=timer;function dispatch(state){var index=state.index,period=state.period,subscriber=state.subscriber;subscriber.next(index);if(subscriber.closed){return;}else if(period===-1){return subscriber.complete();}state.index=index+1;this.schedule(state,period);}},{"../Observable":125,"../scheduler/async":283,"../util/isNumeric":303,"../util/isScheduler":307}],161:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var from_1=require("./from");var empty_1=require("./empty");function using(resourceFactory,observableFactory){return new Observable_1.Observable(function(subscriber){var resource;try{resource=resourceFactory();}catch(err){subscriber.error(err);return undefined;}var result;try{result=observableFactory(resource);}catch(err){subscriber.error(err);return undefined;}var source=result?from_1.from(result):empty_1.EMPTY;var subscription=source.subscribe(subscriber);return function(){subscription.unsubscribe();if(resource){resource.unsubscribe();}};});}exports.using=using;},{"../Observable":125,"./empty":142,"./from":144}],162:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics20=function extendStatics(d,b){_extendStatics20=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics20(d,b);};return function(d,b){_extendStatics20(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var fromArray_1=require("./fromArray");var isArray_1=require("../util/isArray");var Subscriber_1=require("../Subscriber");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");var iterator_1=require("../../internal/symbol/iterator");function zip(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var resultSelector=observables[observables.length-1];if(typeof resultSelector==='function'){observables.pop();}return fromArray_1.fromArray(observables,undefined).lift(new ZipOperator(resultSelector));}exports.zip=zip;var ZipOperator=function(){function ZipOperator(resultSelector){this.resultSelector=resultSelector;}ZipOperator.prototype.call=function(subscriber,source){return source.subscribe(new ZipSubscriber(subscriber,this.resultSelector));};return ZipOperator;}();exports.ZipOperator=ZipOperator;var ZipSubscriber=function(_super){__extends(ZipSubscriber,_super);function ZipSubscriber(destination,resultSelector,values){if(values===void 0){values=Object.create(null);}var _this=_super.call(this,destination)||this;_this.iterators=[];_this.active=0;_this.resultSelector=typeof resultSelector==='function'?resultSelector:null;_this.values=values;return _this;}ZipSubscriber.prototype._next=function(value){var iterators=this.iterators;if(isArray_1.isArray(value)){iterators.push(new StaticArrayIterator(value));}else if(typeof value[iterator_1.iterator]==='function'){iterators.push(new StaticIterator(value[iterator_1.iterator]()));}else{iterators.push(new ZipBufferIterator(this.destination,this,value));}};ZipSubscriber.prototype._complete=function(){var iterators=this.iterators;var len=iterators.length;this.unsubscribe();if(len===0){this.destination.complete();return;}this.active=len;for(var i=0;i<len;i++){var iterator=iterators[i];if(iterator.stillUnsubscribed){var destination=this.destination;destination.add(iterator.subscribe(iterator,i));}else{this.active--;}}};ZipSubscriber.prototype.notifyInactive=function(){this.active--;if(this.active===0){this.destination.complete();}};ZipSubscriber.prototype.checkIterators=function(){var iterators=this.iterators;var len=iterators.length;var destination=this.destination;for(var i=0;i<len;i++){var iterator=iterators[i];if(typeof iterator.hasValue==='function'&&!iterator.hasValue()){return;}}var shouldComplete=false;var args=[];for(var i=0;i<len;i++){var iterator=iterators[i];var result=iterator.next();if(iterator.hasCompleted()){shouldComplete=true;}if(result.done){destination.complete();return;}args.push(result.value);}if(this.resultSelector){this._tryresultSelector(args);}else{destination.next(args);}if(shouldComplete){destination.complete();}};ZipSubscriber.prototype._tryresultSelector=function(args){var result;try{result=this.resultSelector.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return ZipSubscriber;}(Subscriber_1.Subscriber);exports.ZipSubscriber=ZipSubscriber;var StaticIterator=function(){function StaticIterator(iterator){this.iterator=iterator;this.nextResult=iterator.next();}StaticIterator.prototype.hasValue=function(){return true;};StaticIterator.prototype.next=function(){var result=this.nextResult;this.nextResult=this.iterator.next();return result;};StaticIterator.prototype.hasCompleted=function(){var nextResult=this.nextResult;return nextResult&&nextResult.done;};return StaticIterator;}();var StaticArrayIterator=function(){function StaticArrayIterator(array){this.array=array;this.index=0;this.length=0;this.length=array.length;}StaticArrayIterator.prototype[iterator_1.iterator]=function(){return this;};StaticArrayIterator.prototype.next=function(value){var i=this.index++;var array=this.array;return i<this.length?{value:array[i],done:false}:{value:null,done:true};};StaticArrayIterator.prototype.hasValue=function(){return this.array.length>this.index;};StaticArrayIterator.prototype.hasCompleted=function(){return this.array.length===this.index;};return StaticArrayIterator;}();var ZipBufferIterator=function(_super){__extends(ZipBufferIterator,_super);function ZipBufferIterator(destination,parent,observable){var _this=_super.call(this,destination)||this;_this.parent=parent;_this.observable=observable;_this.stillUnsubscribed=true;_this.buffer=[];_this.isComplete=false;return _this;}ZipBufferIterator.prototype[iterator_1.iterator]=function(){return this;};ZipBufferIterator.prototype.next=function(){var buffer=this.buffer;if(buffer.length===0&&this.isComplete){return{value:null,done:true};}else{return{value:buffer.shift(),done:false};}};ZipBufferIterator.prototype.hasValue=function(){return this.buffer.length>0;};ZipBufferIterator.prototype.hasCompleted=function(){return this.buffer.length===0&&this.isComplete;};ZipBufferIterator.prototype.notifyComplete=function(){if(this.buffer.length>0){this.isComplete=true;this.parent.notifyInactive();}else{this.destination.complete();}};ZipBufferIterator.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.buffer.push(innerValue);this.parent.checkIterators();};ZipBufferIterator.prototype.subscribe=function(value,index){return subscribeToResult_1.subscribeToResult(this,this.observable,this,index);};return ZipBufferIterator;}(OuterSubscriber_1.OuterSubscriber);},{"../../internal/symbol/iterator":285,"../OuterSubscriber":127,"../Subscriber":132,"../util/isArray":297,"../util/subscribeToResult":316,"./fromArray":145}],163:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics21=function extendStatics(d,b){_extendStatics21=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics21(d,b);};return function(d,b){_extendStatics21(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function audit(durationSelector){return function auditOperatorFunction(source){return source.lift(new AuditOperator(durationSelector));};}exports.audit=audit;var AuditOperator=function(){function AuditOperator(durationSelector){this.durationSelector=durationSelector;}AuditOperator.prototype.call=function(subscriber,source){return source.subscribe(new AuditSubscriber(subscriber,this.durationSelector));};return AuditOperator;}();var AuditSubscriber=function(_super){__extends(AuditSubscriber,_super);function AuditSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;_this.durationSelector=durationSelector;_this.hasValue=false;return _this;}AuditSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;if(!this.throttled){var duration=void 0;try{var durationSelector=this.durationSelector;duration=durationSelector(value);}catch(err){return this.destination.error(err);}var innerSubscription=subscribeToResult_1.subscribeToResult(this,duration);if(!innerSubscription||innerSubscription.closed){this.clearThrottle();}else{this.add(this.throttled=innerSubscription);}}};AuditSubscriber.prototype.clearThrottle=function(){var _a=this,value=_a.value,hasValue=_a.hasValue,throttled=_a.throttled;if(throttled){this.remove(throttled);this.throttled=null;throttled.unsubscribe();}if(hasValue){this.value=null;this.hasValue=false;this.destination.next(value);}};AuditSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex){this.clearThrottle();};AuditSubscriber.prototype.notifyComplete=function(){this.clearThrottle();};return AuditSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],164:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var audit_1=require("./audit");var timer_1=require("../observable/timer");function auditTime(duration,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return audit_1.audit(function(){return timer_1.timer(duration,scheduler);});}exports.auditTime=auditTime;},{"../observable/timer":160,"../scheduler/async":283,"./audit":163}],165:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics22=function extendStatics(d,b){_extendStatics22=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics22(d,b);};return function(d,b){_extendStatics22(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function buffer(closingNotifier){return function bufferOperatorFunction(source){return source.lift(new BufferOperator(closingNotifier));};}exports.buffer=buffer;var BufferOperator=function(){function BufferOperator(closingNotifier){this.closingNotifier=closingNotifier;}BufferOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferSubscriber(subscriber,this.closingNotifier));};return BufferOperator;}();var BufferSubscriber=function(_super){__extends(BufferSubscriber,_super);function BufferSubscriber(destination,closingNotifier){var _this=_super.call(this,destination)||this;_this.buffer=[];_this.add(subscribeToResult_1.subscribeToResult(_this,closingNotifier));return _this;}BufferSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var buffer=this.buffer;this.buffer=[];this.destination.next(buffer);};return BufferSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],166:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics23=function extendStatics(d,b){_extendStatics23=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics23(d,b);};return function(d,b){_extendStatics23(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function bufferCount(bufferSize,startBufferEvery){if(startBufferEvery===void 0){startBufferEvery=null;}return function bufferCountOperatorFunction(source){return source.lift(new BufferCountOperator(bufferSize,startBufferEvery));};}exports.bufferCount=bufferCount;var BufferCountOperator=function(){function BufferCountOperator(bufferSize,startBufferEvery){this.bufferSize=bufferSize;this.startBufferEvery=startBufferEvery;if(!startBufferEvery||bufferSize===startBufferEvery){this.subscriberClass=BufferCountSubscriber;}else{this.subscriberClass=BufferSkipCountSubscriber;}}BufferCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new this.subscriberClass(subscriber,this.bufferSize,this.startBufferEvery));};return BufferCountOperator;}();var BufferCountSubscriber=function(_super){__extends(BufferCountSubscriber,_super);function BufferCountSubscriber(destination,bufferSize){var _this=_super.call(this,destination)||this;_this.bufferSize=bufferSize;_this.buffer=[];return _this;}BufferCountSubscriber.prototype._next=function(value){var buffer=this.buffer;buffer.push(value);if(buffer.length==this.bufferSize){this.destination.next(buffer);this.buffer=[];}};BufferCountSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer.length>0){this.destination.next(buffer);}_super.prototype._complete.call(this);};return BufferCountSubscriber;}(Subscriber_1.Subscriber);var BufferSkipCountSubscriber=function(_super){__extends(BufferSkipCountSubscriber,_super);function BufferSkipCountSubscriber(destination,bufferSize,startBufferEvery){var _this=_super.call(this,destination)||this;_this.bufferSize=bufferSize;_this.startBufferEvery=startBufferEvery;_this.buffers=[];_this.count=0;return _this;}BufferSkipCountSubscriber.prototype._next=function(value){var _a=this,bufferSize=_a.bufferSize,startBufferEvery=_a.startBufferEvery,buffers=_a.buffers,count=_a.count;this.count++;if(count%startBufferEvery===0){buffers.push([]);}for(var i=buffers.length;i--;){var buffer=buffers[i];buffer.push(value);if(buffer.length===bufferSize){buffers.splice(i,1);this.destination.next(buffer);}}};BufferSkipCountSubscriber.prototype._complete=function(){var _a=this,buffers=_a.buffers,destination=_a.destination;while(buffers.length>0){var buffer=buffers.shift();if(buffer.length>0){destination.next(buffer);}}_super.prototype._complete.call(this);};return BufferSkipCountSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],167:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics24=function extendStatics(d,b){_extendStatics24=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics24(d,b);};return function(d,b){_extendStatics24(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var Subscriber_1=require("../Subscriber");var isScheduler_1=require("../util/isScheduler");function bufferTime(bufferTimeSpan){var length=arguments.length;var scheduler=async_1.async;if(isScheduler_1.isScheduler(arguments[arguments.length-1])){scheduler=arguments[arguments.length-1];length--;}var bufferCreationInterval=null;if(length>=2){bufferCreationInterval=arguments[1];}var maxBufferSize=Number.POSITIVE_INFINITY;if(length>=3){maxBufferSize=arguments[2];}return function bufferTimeOperatorFunction(source){return source.lift(new BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler));};}exports.bufferTime=bufferTime;var BufferTimeOperator=function(){function BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){this.bufferTimeSpan=bufferTimeSpan;this.bufferCreationInterval=bufferCreationInterval;this.maxBufferSize=maxBufferSize;this.scheduler=scheduler;}BufferTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferTimeSubscriber(subscriber,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler));};return BufferTimeOperator;}();var Context=function(){function Context(){this.buffer=[];}return Context;}();var BufferTimeSubscriber=function(_super){__extends(BufferTimeSubscriber,_super);function BufferTimeSubscriber(destination,bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){var _this=_super.call(this,destination)||this;_this.bufferTimeSpan=bufferTimeSpan;_this.bufferCreationInterval=bufferCreationInterval;_this.maxBufferSize=maxBufferSize;_this.scheduler=scheduler;_this.contexts=[];var context=_this.openContext();_this.timespanOnly=bufferCreationInterval==null||bufferCreationInterval<0;if(_this.timespanOnly){var timeSpanOnlyState={subscriber:_this,context:context,bufferTimeSpan:bufferTimeSpan};_this.add(context.closeAction=scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}else{var closeState={subscriber:_this,context:context};var creationState={bufferTimeSpan:bufferTimeSpan,bufferCreationInterval:bufferCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,closeState));_this.add(scheduler.schedule(dispatchBufferCreation,bufferCreationInterval,creationState));}return _this;}BufferTimeSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;var filledBufferContext;for(var i=0;i<len;i++){var context_1=contexts[i];var buffer=context_1.buffer;buffer.push(value);if(buffer.length==this.maxBufferSize){filledBufferContext=context_1;}}if(filledBufferContext){this.onBufferFull(filledBufferContext);}};BufferTimeSubscriber.prototype._error=function(err){this.contexts.length=0;_super.prototype._error.call(this,err);};BufferTimeSubscriber.prototype._complete=function(){var _a=this,contexts=_a.contexts,destination=_a.destination;while(contexts.length>0){var context_2=contexts.shift();destination.next(context_2.buffer);}_super.prototype._complete.call(this);};BufferTimeSubscriber.prototype._unsubscribe=function(){this.contexts=null;};BufferTimeSubscriber.prototype.onBufferFull=function(context){this.closeContext(context);var closeAction=context.closeAction;closeAction.unsubscribe();this.remove(closeAction);if(!this.closed&&this.timespanOnly){context=this.openContext();var bufferTimeSpan=this.bufferTimeSpan;var timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=this.scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}};BufferTimeSubscriber.prototype.openContext=function(){var context=new Context();this.contexts.push(context);return context;};BufferTimeSubscriber.prototype.closeContext=function(context){this.destination.next(context.buffer);var contexts=this.contexts;var spliceIndex=contexts?contexts.indexOf(context):-1;if(spliceIndex>=0){contexts.splice(contexts.indexOf(context),1);}};return BufferTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchBufferTimeSpanOnly(state){var subscriber=state.subscriber;var prevContext=state.context;if(prevContext){subscriber.closeContext(prevContext);}if(!subscriber.closed){state.context=subscriber.openContext();state.context.closeAction=this.schedule(state,state.bufferTimeSpan);}}function dispatchBufferCreation(state){var bufferCreationInterval=state.bufferCreationInterval,bufferTimeSpan=state.bufferTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler;var context=subscriber.openContext();var action=this;if(!subscriber.closed){subscriber.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,{subscriber:subscriber,context:context}));action.schedule(state,bufferCreationInterval);}}function dispatchBufferClose(arg){var subscriber=arg.subscriber,context=arg.context;subscriber.closeContext(context);}},{"../Subscriber":132,"../scheduler/async":283,"../util/isScheduler":307}],168:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics25=function extendStatics(d,b){_extendStatics25=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics25(d,b);};return function(d,b){_extendStatics25(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscription_1=require("../Subscription");var subscribeToResult_1=require("../util/subscribeToResult");var OuterSubscriber_1=require("../OuterSubscriber");function bufferToggle(openings,closingSelector){return function bufferToggleOperatorFunction(source){return source.lift(new BufferToggleOperator(openings,closingSelector));};}exports.bufferToggle=bufferToggle;var BufferToggleOperator=function(){function BufferToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}BufferToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferToggleSubscriber(subscriber,this.openings,this.closingSelector));};return BufferToggleOperator;}();var BufferToggleSubscriber=function(_super){__extends(BufferToggleSubscriber,_super);function BufferToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;_this.openings=openings;_this.closingSelector=closingSelector;_this.contexts=[];_this.add(subscribeToResult_1.subscribeToResult(_this,openings));return _this;}BufferToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;for(var i=0;i<len;i++){contexts[i].buffer.push(value);}};BufferToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;while(contexts.length>0){var context_1=contexts.shift();context_1.subscription.unsubscribe();context_1.buffer=null;context_1.subscription=null;}this.contexts=null;_super.prototype._error.call(this,err);};BufferToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;while(contexts.length>0){var context_2=contexts.shift();this.destination.next(context_2.buffer);context_2.subscription.unsubscribe();context_2.buffer=null;context_2.subscription=null;}this.contexts=null;_super.prototype._complete.call(this);};BufferToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){outerValue?this.closeBuffer(outerValue):this.openBuffer(innerValue);};BufferToggleSubscriber.prototype.notifyComplete=function(innerSub){this.closeBuffer(innerSub.context);};BufferToggleSubscriber.prototype.openBuffer=function(value){try{var closingSelector=this.closingSelector;var closingNotifier=closingSelector.call(this,value);if(closingNotifier){this.trySubscribe(closingNotifier);}}catch(err){this._error(err);}};BufferToggleSubscriber.prototype.closeBuffer=function(context){var contexts=this.contexts;if(contexts&&context){var buffer=context.buffer,subscription=context.subscription;this.destination.next(buffer);contexts.splice(contexts.indexOf(context),1);this.remove(subscription);subscription.unsubscribe();}};BufferToggleSubscriber.prototype.trySubscribe=function(closingNotifier){var contexts=this.contexts;var buffer=[];var subscription=new Subscription_1.Subscription();var context={buffer:buffer,subscription:subscription};contexts.push(context);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context);if(!innerSubscription||innerSubscription.closed){this.closeBuffer(context);}else{innerSubscription.context=context;this.add(innerSubscription);subscription.add(innerSubscription);}};return BufferToggleSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subscription":133,"../util/subscribeToResult":316}],169:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics26=function extendStatics(d,b){_extendStatics26=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics26(d,b);};return function(d,b){_extendStatics26(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscription_1=require("../Subscription");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function bufferWhen(closingSelector){return function(source){return source.lift(new BufferWhenOperator(closingSelector));};}exports.bufferWhen=bufferWhen;var BufferWhenOperator=function(){function BufferWhenOperator(closingSelector){this.closingSelector=closingSelector;}BufferWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferWhenSubscriber(subscriber,this.closingSelector));};return BufferWhenOperator;}();var BufferWhenSubscriber=function(_super){__extends(BufferWhenSubscriber,_super);function BufferWhenSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;_this.closingSelector=closingSelector;_this.subscribing=false;_this.openBuffer();return _this;}BufferWhenSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferWhenSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer){this.destination.next(buffer);}_super.prototype._complete.call(this);};BufferWhenSubscriber.prototype._unsubscribe=function(){this.buffer=null;this.subscribing=false;};BufferWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openBuffer();};BufferWhenSubscriber.prototype.notifyComplete=function(){if(this.subscribing){this.complete();}else{this.openBuffer();}};BufferWhenSubscriber.prototype.openBuffer=function(){var closingSubscription=this.closingSubscription;if(closingSubscription){this.remove(closingSubscription);closingSubscription.unsubscribe();}var buffer=this.buffer;if(this.buffer){this.destination.next(buffer);}this.buffer=[];var closingNotifier;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector();}catch(err){return this.error(err);}closingSubscription=new Subscription_1.Subscription();this.closingSubscription=closingSubscription;this.add(closingSubscription);this.subscribing=true;closingSubscription.add(subscribeToResult_1.subscribeToResult(this,closingNotifier));this.subscribing=false;};return BufferWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subscription":133,"../util/subscribeToResult":316}],170:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics27=function extendStatics(d,b){_extendStatics27=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics27(d,b);};return function(d,b){_extendStatics27(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function catchError(selector){return function catchErrorOperatorFunction(source){var operator=new CatchOperator(selector);var caught=source.lift(operator);return operator.caught=caught;};}exports.catchError=catchError;var CatchOperator=function(){function CatchOperator(selector){this.selector=selector;}CatchOperator.prototype.call=function(subscriber,source){return source.subscribe(new CatchSubscriber(subscriber,this.selector,this.caught));};return CatchOperator;}();var CatchSubscriber=function(_super){__extends(CatchSubscriber,_super);function CatchSubscriber(destination,selector,caught){var _this=_super.call(this,destination)||this;_this.selector=selector;_this.caught=caught;return _this;}CatchSubscriber.prototype.error=function(err){if(!this.isStopped){var result=void 0;try{result=this.selector(err,this.caught);}catch(err2){_super.prototype.error.call(this,err2);return;}this._unsubscribeAndRecycle();var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,undefined,undefined);this.add(innerSubscriber);var innerSubscription=subscribeToResult_1.subscribeToResult(this,result,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){this.add(innerSubscription);}}};return CatchSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../util/subscribeToResult":316}],171:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var combineLatest_1=require("../observable/combineLatest");function combineAll(project){return function(source){return source.lift(new combineLatest_1.CombineLatestOperator(project));};}exports.combineAll=combineAll;},{"../observable/combineLatest":139}],172:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isArray_1=require("../util/isArray");var combineLatest_1=require("../observable/combineLatest");var from_1=require("../observable/from");var none={};function combineLatest(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}var project=null;if(typeof observables[observables.length-1]==='function'){project=observables.pop();}if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0].slice();}return function(source){return source.lift.call(from_1.from([source].concat(observables)),new combineLatest_1.CombineLatestOperator(project));};}exports.combineLatest=combineLatest;},{"../observable/combineLatest":139,"../observable/from":144,"../util/isArray":297}],173:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var concat_1=require("../observable/concat");function concat(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function(source){return source.lift.call(concat_1.concat.apply(void 0,[source].concat(observables)));};}exports.concat=concat;},{"../observable/concat":140}],174:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var mergeAll_1=require("./mergeAll");function concatAll(){return mergeAll_1.mergeAll(1);}exports.concatAll=concatAll;},{"./mergeAll":207}],175:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var mergeMap_1=require("./mergeMap");function concatMap(project,resultSelector){return mergeMap_1.mergeMap(project,resultSelector,1);}exports.concatMap=concatMap;},{"./mergeMap":208}],176:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var concatMap_1=require("./concatMap");function concatMapTo(innerObservable,resultSelector){return concatMap_1.concatMap(function(){return innerObservable;},resultSelector);}exports.concatMapTo=concatMapTo;},{"./concatMap":175}],177:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics28=function extendStatics(d,b){_extendStatics28=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics28(d,b);};return function(d,b){_extendStatics28(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function count(predicate){return function(source){return source.lift(new CountOperator(predicate,source));};}exports.count=count;var CountOperator=function(){function CountOperator(predicate,source){this.predicate=predicate;this.source=source;}CountOperator.prototype.call=function(subscriber,source){return source.subscribe(new CountSubscriber(subscriber,this.predicate,this.source));};return CountOperator;}();var CountSubscriber=function(_super){__extends(CountSubscriber,_super);function CountSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.count=0;_this.index=0;return _this;}CountSubscriber.prototype._next=function(value){if(this.predicate){this._tryPredicate(value);}else{this.count++;}};CountSubscriber.prototype._tryPredicate=function(value){var result;try{result=this.predicate(value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(result){this.count++;}};CountSubscriber.prototype._complete=function(){this.destination.next(this.count);this.destination.complete();};return CountSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],178:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics29=function extendStatics(d,b){_extendStatics29=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics29(d,b);};return function(d,b){_extendStatics29(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function debounce(durationSelector){return function(source){return source.lift(new DebounceOperator(durationSelector));};}exports.debounce=debounce;var DebounceOperator=function(){function DebounceOperator(durationSelector){this.durationSelector=durationSelector;}DebounceOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceSubscriber(subscriber,this.durationSelector));};return DebounceOperator;}();var DebounceSubscriber=function(_super){__extends(DebounceSubscriber,_super);function DebounceSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;_this.durationSelector=durationSelector;_this.hasValue=false;_this.durationSubscription=null;return _this;}DebounceSubscriber.prototype._next=function(value){try{var result=this.durationSelector.call(this,value);if(result){this._tryNext(value,result);}}catch(err){this.destination.error(err);}};DebounceSubscriber.prototype._complete=function(){this.emitValue();this.destination.complete();};DebounceSubscriber.prototype._tryNext=function(value,duration){var subscription=this.durationSubscription;this.value=value;this.hasValue=true;if(subscription){subscription.unsubscribe();this.remove(subscription);}subscription=subscribeToResult_1.subscribeToResult(this,duration);if(subscription&&!subscription.closed){this.add(this.durationSubscription=subscription);}};DebounceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue();};DebounceSubscriber.prototype.notifyComplete=function(){this.emitValue();};DebounceSubscriber.prototype.emitValue=function(){if(this.hasValue){var value=this.value;var subscription=this.durationSubscription;if(subscription){this.durationSubscription=null;subscription.unsubscribe();this.remove(subscription);}this.value=null;this.hasValue=false;_super.prototype._next.call(this,value);}};return DebounceSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],179:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics30=function extendStatics(d,b){_extendStatics30=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics30(d,b);};return function(d,b){_extendStatics30(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var async_1=require("../scheduler/async");function debounceTime(dueTime,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return function(source){return source.lift(new DebounceTimeOperator(dueTime,scheduler));};}exports.debounceTime=debounceTime;var DebounceTimeOperator=function(){function DebounceTimeOperator(dueTime,scheduler){this.dueTime=dueTime;this.scheduler=scheduler;}DebounceTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceTimeSubscriber(subscriber,this.dueTime,this.scheduler));};return DebounceTimeOperator;}();var DebounceTimeSubscriber=function(_super){__extends(DebounceTimeSubscriber,_super);function DebounceTimeSubscriber(destination,dueTime,scheduler){var _this=_super.call(this,destination)||this;_this.dueTime=dueTime;_this.scheduler=scheduler;_this.debouncedSubscription=null;_this.lastValue=null;_this.hasValue=false;return _this;}DebounceTimeSubscriber.prototype._next=function(value){this.clearDebounce();this.lastValue=value;this.hasValue=true;this.add(this.debouncedSubscription=this.scheduler.schedule(dispatchNext,this.dueTime,this));};DebounceTimeSubscriber.prototype._complete=function(){this.debouncedNext();this.destination.complete();};DebounceTimeSubscriber.prototype.debouncedNext=function(){this.clearDebounce();if(this.hasValue){var lastValue=this.lastValue;this.lastValue=null;this.hasValue=false;this.destination.next(lastValue);}};DebounceTimeSubscriber.prototype.clearDebounce=function(){var debouncedSubscription=this.debouncedSubscription;if(debouncedSubscription!==null){this.remove(debouncedSubscription);debouncedSubscription.unsubscribe();this.debouncedSubscription=null;}};return DebounceTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNext(subscriber){subscriber.debouncedNext();}},{"../Subscriber":132,"../scheduler/async":283}],180:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics31=function extendStatics(d,b){_extendStatics31=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics31(d,b);};return function(d,b){_extendStatics31(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function defaultIfEmpty(defaultValue){if(defaultValue===void 0){defaultValue=null;}return function(source){return source.lift(new DefaultIfEmptyOperator(defaultValue));};}exports.defaultIfEmpty=defaultIfEmpty;var DefaultIfEmptyOperator=function(){function DefaultIfEmptyOperator(defaultValue){this.defaultValue=defaultValue;}DefaultIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new DefaultIfEmptySubscriber(subscriber,this.defaultValue));};return DefaultIfEmptyOperator;}();var DefaultIfEmptySubscriber=function(_super){__extends(DefaultIfEmptySubscriber,_super);function DefaultIfEmptySubscriber(destination,defaultValue){var _this=_super.call(this,destination)||this;_this.defaultValue=defaultValue;_this.isEmpty=true;return _this;}DefaultIfEmptySubscriber.prototype._next=function(value){this.isEmpty=false;this.destination.next(value);};DefaultIfEmptySubscriber.prototype._complete=function(){if(this.isEmpty){this.destination.next(this.defaultValue);}this.destination.complete();};return DefaultIfEmptySubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],181:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics32=function extendStatics(d,b){_extendStatics32=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics32(d,b);};return function(d,b){_extendStatics32(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var isDate_1=require("../util/isDate");var Subscriber_1=require("../Subscriber");var Notification_1=require("../Notification");function delay(delay,scheduler){if(scheduler===void 0){scheduler=async_1.async;}var absoluteDelay=isDate_1.isDate(delay);var delayFor=absoluteDelay?+delay-scheduler.now():Math.abs(delay);return function(source){return source.lift(new DelayOperator(delayFor,scheduler));};}exports.delay=delay;var DelayOperator=function(){function DelayOperator(delay,scheduler){this.delay=delay;this.scheduler=scheduler;}DelayOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelaySubscriber(subscriber,this.delay,this.scheduler));};return DelayOperator;}();var DelaySubscriber=function(_super){__extends(DelaySubscriber,_super);function DelaySubscriber(destination,delay,scheduler){var _this=_super.call(this,destination)||this;_this.delay=delay;_this.scheduler=scheduler;_this.queue=[];_this.active=false;_this.errored=false;return _this;}DelaySubscriber.dispatch=function(state){var source=state.source;var queue=source.queue;var scheduler=state.scheduler;var destination=state.destination;while(queue.length>0&&queue[0].time-scheduler.now()<=0){queue.shift().notification.observe(destination);}if(queue.length>0){var delay_1=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay_1);}else{this.unsubscribe();source.active=false;}};DelaySubscriber.prototype._schedule=function(scheduler){this.active=true;var destination=this.destination;destination.add(scheduler.schedule(DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}));};DelaySubscriber.prototype.scheduleNotification=function(notification){if(this.errored===true){return;}var scheduler=this.scheduler;var message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message);if(this.active===false){this._schedule(scheduler);}};DelaySubscriber.prototype._next=function(value){this.scheduleNotification(Notification_1.Notification.createNext(value));};DelaySubscriber.prototype._error=function(err){this.errored=true;this.queue=[];this.destination.error(err);this.unsubscribe();};DelaySubscriber.prototype._complete=function(){this.scheduleNotification(Notification_1.Notification.createComplete());this.unsubscribe();};return DelaySubscriber;}(Subscriber_1.Subscriber);var DelayMessage=function(){function DelayMessage(time,notification){this.time=time;this.notification=notification;}return DelayMessage;}();},{"../Notification":124,"../Subscriber":132,"../scheduler/async":283,"../util/isDate":299}],182:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics33=function extendStatics(d,b){_extendStatics33=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics33(d,b);};return function(d,b){_extendStatics33(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Observable_1=require("../Observable");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function delayWhen(delayDurationSelector,subscriptionDelay){if(subscriptionDelay){return function(source){return new SubscriptionDelayObservable(source,subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));};}return function(source){return source.lift(new DelayWhenOperator(delayDurationSelector));};}exports.delayWhen=delayWhen;var DelayWhenOperator=function(){function DelayWhenOperator(delayDurationSelector){this.delayDurationSelector=delayDurationSelector;}DelayWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelayWhenSubscriber(subscriber,this.delayDurationSelector));};return DelayWhenOperator;}();var DelayWhenSubscriber=function(_super){__extends(DelayWhenSubscriber,_super);function DelayWhenSubscriber(destination,delayDurationSelector){var _this=_super.call(this,destination)||this;_this.delayDurationSelector=delayDurationSelector;_this.completed=false;_this.delayNotifierSubscriptions=[];_this.index=0;return _this;}DelayWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(outerValue);this.removeSubscription(innerSub);this.tryComplete();};DelayWhenSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};DelayWhenSubscriber.prototype.notifyComplete=function(innerSub){var value=this.removeSubscription(innerSub);if(value){this.destination.next(value);}this.tryComplete();};DelayWhenSubscriber.prototype._next=function(value){var index=this.index++;try{var delayNotifier=this.delayDurationSelector(value,index);if(delayNotifier){this.tryDelay(delayNotifier,value);}}catch(err){this.destination.error(err);}};DelayWhenSubscriber.prototype._complete=function(){this.completed=true;this.tryComplete();this.unsubscribe();};DelayWhenSubscriber.prototype.removeSubscription=function(subscription){subscription.unsubscribe();var subscriptionIdx=this.delayNotifierSubscriptions.indexOf(subscription);if(subscriptionIdx!==-1){this.delayNotifierSubscriptions.splice(subscriptionIdx,1);}return subscription.outerValue;};DelayWhenSubscriber.prototype.tryDelay=function(delayNotifier,value){var notifierSubscription=subscribeToResult_1.subscribeToResult(this,delayNotifier,value);if(notifierSubscription&&!notifierSubscription.closed){var destination=this.destination;destination.add(notifierSubscription);this.delayNotifierSubscriptions.push(notifierSubscription);}};DelayWhenSubscriber.prototype.tryComplete=function(){if(this.completed&&this.delayNotifierSubscriptions.length===0){this.destination.complete();}};return DelayWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);var SubscriptionDelayObservable=function(_super){__extends(SubscriptionDelayObservable,_super);function SubscriptionDelayObservable(source,subscriptionDelay){var _this=_super.call(this)||this;_this.source=source;_this.subscriptionDelay=subscriptionDelay;return _this;}SubscriptionDelayObservable.prototype._subscribe=function(subscriber){this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber,this.source));};return SubscriptionDelayObservable;}(Observable_1.Observable);var SubscriptionDelaySubscriber=function(_super){__extends(SubscriptionDelaySubscriber,_super);function SubscriptionDelaySubscriber(parent,source){var _this=_super.call(this)||this;_this.parent=parent;_this.source=source;_this.sourceSubscribed=false;return _this;}SubscriptionDelaySubscriber.prototype._next=function(unused){this.subscribeToSource();};SubscriptionDelaySubscriber.prototype._error=function(err){this.unsubscribe();this.parent.error(err);};SubscriptionDelaySubscriber.prototype._complete=function(){this.unsubscribe();this.subscribeToSource();};SubscriptionDelaySubscriber.prototype.subscribeToSource=function(){if(!this.sourceSubscribed){this.sourceSubscribed=true;this.unsubscribe();this.source.subscribe(this.parent);}};return SubscriptionDelaySubscriber;}(Subscriber_1.Subscriber);},{"../Observable":125,"../OuterSubscriber":127,"../Subscriber":132,"../util/subscribeToResult":316}],183:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics34=function extendStatics(d,b){_extendStatics34=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics34(d,b);};return function(d,b){_extendStatics34(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function dematerialize(){return function dematerializeOperatorFunction(source){return source.lift(new DeMaterializeOperator());};}exports.dematerialize=dematerialize;var DeMaterializeOperator=function(){function DeMaterializeOperator(){}DeMaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DeMaterializeSubscriber(subscriber));};return DeMaterializeOperator;}();var DeMaterializeSubscriber=function(_super){__extends(DeMaterializeSubscriber,_super);function DeMaterializeSubscriber(destination){return _super.call(this,destination)||this;}DeMaterializeSubscriber.prototype._next=function(value){value.observe(this.destination);};return DeMaterializeSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],184:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics35=function extendStatics(d,b){_extendStatics35=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics35(d,b);};return function(d,b){_extendStatics35(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function distinct(keySelector,flushes){return function(source){return source.lift(new DistinctOperator(keySelector,flushes));};}exports.distinct=distinct;var DistinctOperator=function(){function DistinctOperator(keySelector,flushes){this.keySelector=keySelector;this.flushes=flushes;}DistinctOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctSubscriber(subscriber,this.keySelector,this.flushes));};return DistinctOperator;}();var DistinctSubscriber=function(_super){__extends(DistinctSubscriber,_super);function DistinctSubscriber(destination,keySelector,flushes){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.values=new Set();if(flushes){_this.add(subscribeToResult_1.subscribeToResult(_this,flushes));}return _this;}DistinctSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values.clear();};DistinctSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};DistinctSubscriber.prototype._next=function(value){if(this.keySelector){this._useKeySelector(value);}else{this._finalizeNext(value,value);}};DistinctSubscriber.prototype._useKeySelector=function(value){var key;var destination=this.destination;try{key=this.keySelector(value);}catch(err){destination.error(err);return;}this._finalizeNext(key,value);};DistinctSubscriber.prototype._finalizeNext=function(key,value){var values=this.values;if(!values.has(key)){values.add(key);this.destination.next(value);}};return DistinctSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.DistinctSubscriber=DistinctSubscriber;},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],185:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics36=function extendStatics(d,b){_extendStatics36=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics36(d,b);};return function(d,b){_extendStatics36(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function distinctUntilChanged(compare,keySelector){return function(source){return source.lift(new DistinctUntilChangedOperator(compare,keySelector));};}exports.distinctUntilChanged=distinctUntilChanged;var DistinctUntilChangedOperator=function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare;this.keySelector=keySelector;}DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector));};return DistinctUntilChangedOperator;}();var DistinctUntilChangedSubscriber=function(_super){__extends(DistinctUntilChangedSubscriber,_super);function DistinctUntilChangedSubscriber(destination,compare,keySelector){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.hasKey=false;if(typeof compare==='function'){_this.compare=compare;}return _this;}DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y;};DistinctUntilChangedSubscriber.prototype._next=function(value){var key;try{var keySelector=this.keySelector;key=keySelector?keySelector(value):value;}catch(err){return this.destination.error(err);}var result=false;if(this.hasKey){try{var compare=this.compare;result=compare(this.key,key);}catch(err){return this.destination.error(err);}}else{this.hasKey=true;}if(!result){this.key=key;this.destination.next(value);}};return DistinctUntilChangedSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],186:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var distinctUntilChanged_1=require("./distinctUntilChanged");function distinctUntilKeyChanged(key,compare){return distinctUntilChanged_1.distinctUntilChanged(function(x,y){return compare?compare(x[key],y[key]):x[key]===y[key];});}exports.distinctUntilKeyChanged=distinctUntilKeyChanged;},{"./distinctUntilChanged":185}],187:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ArgumentOutOfRangeError_1=require("../util/ArgumentOutOfRangeError");var filter_1=require("./filter");var throwIfEmpty_1=require("./throwIfEmpty");var defaultIfEmpty_1=require("./defaultIfEmpty");var take_1=require("./take");function elementAt(index,defaultValue){if(index<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(filter_1.filter(function(v,i){return i===index;}),take_1.take(1),hasDefaultValue?defaultIfEmpty_1.defaultIfEmpty(defaultValue):throwIfEmpty_1.throwIfEmpty(function(){return new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}));};}exports.elementAt=elementAt;},{"../util/ArgumentOutOfRangeError":288,"./defaultIfEmpty":180,"./filter":193,"./take":245,"./throwIfEmpty":252}],188:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var concat_1=require("../observable/concat");var of_1=require("../observable/of");function endWith(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i]=arguments[_i];}return function(source){return concat_1.concat(source,of_1.of.apply(void 0,array));};}exports.endWith=endWith;},{"../observable/concat":140,"../observable/of":153}],189:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics37=function extendStatics(d,b){_extendStatics37=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics37(d,b);};return function(d,b){_extendStatics37(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function every(predicate,thisArg){return function(source){return source.lift(new EveryOperator(predicate,thisArg,source));};}exports.every=every;var EveryOperator=function(){function EveryOperator(predicate,thisArg,source){this.predicate=predicate;this.thisArg=thisArg;this.source=source;}EveryOperator.prototype.call=function(observer,source){return source.subscribe(new EverySubscriber(observer,this.predicate,this.thisArg,this.source));};return EveryOperator;}();var EverySubscriber=function(_super){__extends(EverySubscriber,_super);function EverySubscriber(destination,predicate,thisArg,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.thisArg=thisArg;_this.source=source;_this.index=0;_this.thisArg=thisArg||_this;return _this;}EverySubscriber.prototype.notifyComplete=function(everyValueMatch){this.destination.next(everyValueMatch);this.destination.complete();};EverySubscriber.prototype._next=function(value){var result=false;try{result=this.predicate.call(this.thisArg,value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(!result){this.notifyComplete(false);}};EverySubscriber.prototype._complete=function(){this.notifyComplete(true);};return EverySubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],190:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics38=function extendStatics(d,b){_extendStatics38=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics38(d,b);};return function(d,b){_extendStatics38(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function exhaust(){return function(source){return source.lift(new SwitchFirstOperator());};}exports.exhaust=exhaust;var SwitchFirstOperator=function(){function SwitchFirstOperator(){}SwitchFirstOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstSubscriber(subscriber));};return SwitchFirstOperator;}();var SwitchFirstSubscriber=function(_super){__extends(SwitchFirstSubscriber,_super);function SwitchFirstSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasCompleted=false;_this.hasSubscription=false;return _this;}SwitchFirstSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.hasSubscription=true;this.add(subscribeToResult_1.subscribeToResult(this,value));}};SwitchFirstSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}};SwitchFirstSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub);this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return SwitchFirstSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],191:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics39=function extendStatics(d,b){_extendStatics39=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics39(d,b);};return function(d,b){_extendStatics39(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");var map_1=require("./map");var from_1=require("../observable/from");function exhaustMap(project,resultSelector){if(resultSelector){return function(source){return source.pipe(exhaustMap(function(a,i){return from_1.from(project(a,i)).pipe(map_1.map(function(b,ii){return resultSelector(a,b,i,ii);}));}));};}return function(source){return source.lift(new ExhaustMapOperator(project));};}exports.exhaustMap=exhaustMap;var ExhaustMapOperator=function(){function ExhaustMapOperator(project){this.project=project;}ExhaustMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExhaustMapSubscriber(subscriber,this.project));};return ExhaustMapOperator;}();var ExhaustMapSubscriber=function(_super){__extends(ExhaustMapSubscriber,_super);function ExhaustMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;_this.project=project;_this.hasSubscription=false;_this.hasCompleted=false;_this.index=0;return _this;}ExhaustMapSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.tryNext(value);}};ExhaustMapSubscriber.prototype.tryNext=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(err){this.destination.error(err);return;}this.hasSubscription=true;this._innerSub(result,value,index);};ExhaustMapSubscriber.prototype._innerSub=function(result,value,index){var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,value,index);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=subscribeToResult_1.subscribeToResult(this,result,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};ExhaustMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}this.unsubscribe();};ExhaustMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};ExhaustMapSubscriber.prototype.notifyError=function(err){this.destination.error(err);};ExhaustMapSubscriber.prototype.notifyComplete=function(innerSub){var destination=this.destination;destination.remove(innerSub);this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return ExhaustMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../observable/from":144,"../util/subscribeToResult":316,"./map":202}],192:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics40=function extendStatics(d,b){_extendStatics40=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics40(d,b);};return function(d,b){_extendStatics40(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function expand(project,concurrent,scheduler){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(scheduler===void 0){scheduler=undefined;}concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent;return function(source){return source.lift(new ExpandOperator(project,concurrent,scheduler));};}exports.expand=expand;var ExpandOperator=function(){function ExpandOperator(project,concurrent,scheduler){this.project=project;this.concurrent=concurrent;this.scheduler=scheduler;}ExpandOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExpandSubscriber(subscriber,this.project,this.concurrent,this.scheduler));};return ExpandOperator;}();exports.ExpandOperator=ExpandOperator;var ExpandSubscriber=function(_super){__extends(ExpandSubscriber,_super);function ExpandSubscriber(destination,project,concurrent,scheduler){var _this=_super.call(this,destination)||this;_this.project=project;_this.concurrent=concurrent;_this.scheduler=scheduler;_this.index=0;_this.active=0;_this.hasCompleted=false;if(concurrent<Number.POSITIVE_INFINITY){_this.buffer=[];}return _this;}ExpandSubscriber.dispatch=function(arg){var subscriber=arg.subscriber,result=arg.result,value=arg.value,index=arg.index;subscriber.subscribeToProjection(result,value,index);};ExpandSubscriber.prototype._next=function(value){var destination=this.destination;if(destination.closed){this._complete();return;}var index=this.index++;if(this.active<this.concurrent){destination.next(value);try{var project=this.project;var result=project(value,index);if(!this.scheduler){this.subscribeToProjection(result,value,index);}else{var state={subscriber:this,result:result,value:value,index:index};var destination_1=this.destination;destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch,0,state));}}catch(e){destination.error(e);}}else{this.buffer.push(value);}};ExpandSubscriber.prototype.subscribeToProjection=function(result,value,index){this.active++;var destination=this.destination;destination.add(subscribeToResult_1.subscribeToResult(this,result,value,index));};ExpandSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.hasCompleted&&this.active===0){this.destination.complete();}this.unsubscribe();};ExpandSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this._next(innerValue);};ExpandSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;var destination=this.destination;destination.remove(innerSub);this.active--;if(buffer&&buffer.length>0){this._next(buffer.shift());}if(this.hasCompleted&&this.active===0){this.destination.complete();}};return ExpandSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.ExpandSubscriber=ExpandSubscriber;},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],193:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics41=function extendStatics(d,b){_extendStatics41=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics41(d,b);};return function(d,b){_extendStatics41(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function filter(predicate,thisArg){return function filterOperatorFunction(source){return source.lift(new FilterOperator(predicate,thisArg));};}exports.filter=filter;var FilterOperator=function(){function FilterOperator(predicate,thisArg){this.predicate=predicate;this.thisArg=thisArg;}FilterOperator.prototype.call=function(subscriber,source){return source.subscribe(new FilterSubscriber(subscriber,this.predicate,this.thisArg));};return FilterOperator;}();var FilterSubscriber=function(_super){__extends(FilterSubscriber,_super);function FilterSubscriber(destination,predicate,thisArg){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.thisArg=thisArg;_this.count=0;return _this;}FilterSubscriber.prototype._next=function(value){var result;try{result=this.predicate.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}if(result){this.destination.next(value);}};return FilterSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],194:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics42=function extendStatics(d,b){_extendStatics42=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics42(d,b);};return function(d,b){_extendStatics42(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Subscription_1=require("../Subscription");function finalize(callback){return function(source){return source.lift(new FinallyOperator(callback));};}exports.finalize=finalize;var FinallyOperator=function(){function FinallyOperator(callback){this.callback=callback;}FinallyOperator.prototype.call=function(subscriber,source){return source.subscribe(new FinallySubscriber(subscriber,this.callback));};return FinallyOperator;}();var FinallySubscriber=function(_super){__extends(FinallySubscriber,_super);function FinallySubscriber(destination,callback){var _this=_super.call(this,destination)||this;_this.add(new Subscription_1.Subscription(callback));return _this;}return FinallySubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../Subscription":133}],195:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics43=function extendStatics(d,b){_extendStatics43=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics43(d,b);};return function(d,b){_extendStatics43(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function find(predicate,thisArg){if(typeof predicate!=='function'){throw new TypeError('predicate is not a function');}return function(source){return source.lift(new FindValueOperator(predicate,source,false,thisArg));};}exports.find=find;var FindValueOperator=function(){function FindValueOperator(predicate,source,yieldIndex,thisArg){this.predicate=predicate;this.source=source;this.yieldIndex=yieldIndex;this.thisArg=thisArg;}FindValueOperator.prototype.call=function(observer,source){return source.subscribe(new FindValueSubscriber(observer,this.predicate,this.source,this.yieldIndex,this.thisArg));};return FindValueOperator;}();exports.FindValueOperator=FindValueOperator;var FindValueSubscriber=function(_super){__extends(FindValueSubscriber,_super);function FindValueSubscriber(destination,predicate,source,yieldIndex,thisArg){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.yieldIndex=yieldIndex;_this.thisArg=thisArg;_this.index=0;return _this;}FindValueSubscriber.prototype.notifyComplete=function(value){var destination=this.destination;destination.next(value);destination.complete();this.unsubscribe();};FindValueSubscriber.prototype._next=function(value){var _a=this,predicate=_a.predicate,thisArg=_a.thisArg;var index=this.index++;try{var result=predicate.call(thisArg||this,value,index,this.source);if(result){this.notifyComplete(this.yieldIndex?index:value);}}catch(err){this.destination.error(err);}};FindValueSubscriber.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:undefined);};return FindValueSubscriber;}(Subscriber_1.Subscriber);exports.FindValueSubscriber=FindValueSubscriber;},{"../Subscriber":132}],196:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var find_1=require("../operators/find");function findIndex(predicate,thisArg){return function(source){return source.lift(new find_1.FindValueOperator(predicate,source,true,thisArg));};}exports.findIndex=findIndex;},{"../operators/find":195}],197:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var EmptyError_1=require("../util/EmptyError");var filter_1=require("./filter");var take_1=require("./take");var defaultIfEmpty_1=require("./defaultIfEmpty");var throwIfEmpty_1=require("./throwIfEmpty");var identity_1=require("../util/identity");function first(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter_1.filter(function(v,i){return predicate(v,i,source);}):identity_1.identity,take_1.take(1),hasDefaultValue?defaultIfEmpty_1.defaultIfEmpty(defaultValue):throwIfEmpty_1.throwIfEmpty(function(){return new EmptyError_1.EmptyError();}));};}exports.first=first;},{"../util/EmptyError":289,"../util/identity":296,"./defaultIfEmpty":180,"./filter":193,"./take":245,"./throwIfEmpty":252}],198:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics44=function extendStatics(d,b){_extendStatics44=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics44(d,b);};return function(d,b){_extendStatics44(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Subscription_1=require("../Subscription");var Observable_1=require("../Observable");var Subject_1=require("../Subject");function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return function(source){return source.lift(new GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector));};}exports.groupBy=groupBy;var GroupByOperator=function(){function GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector){this.keySelector=keySelector;this.elementSelector=elementSelector;this.durationSelector=durationSelector;this.subjectSelector=subjectSelector;}GroupByOperator.prototype.call=function(subscriber,source){return source.subscribe(new GroupBySubscriber(subscriber,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector));};return GroupByOperator;}();var GroupBySubscriber=function(_super){__extends(GroupBySubscriber,_super);function GroupBySubscriber(destination,keySelector,elementSelector,durationSelector,subjectSelector){var _this=_super.call(this,destination)||this;_this.keySelector=keySelector;_this.elementSelector=elementSelector;_this.durationSelector=durationSelector;_this.subjectSelector=subjectSelector;_this.groups=null;_this.attemptedToUnsubscribe=false;_this.count=0;return _this;}GroupBySubscriber.prototype._next=function(value){var key;try{key=this.keySelector(value);}catch(err){this.error(err);return;}this._group(value,key);};GroupBySubscriber.prototype._group=function(value,key){var groups=this.groups;if(!groups){groups=this.groups=new Map();}var group=groups.get(key);var element;if(this.elementSelector){try{element=this.elementSelector(value);}catch(err){this.error(err);}}else{element=value;}if(!group){group=this.subjectSelector?this.subjectSelector():new Subject_1.Subject();groups.set(key,group);var groupedObservable=new GroupedObservable(key,group,this);this.destination.next(groupedObservable);if(this.durationSelector){var duration=void 0;try{duration=this.durationSelector(new GroupedObservable(key,group));}catch(err){this.error(err);return;}this.add(duration.subscribe(new GroupDurationSubscriber(key,group,this)));}}if(!group.closed){group.next(element);}};GroupBySubscriber.prototype._error=function(err){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.error(err);});groups.clear();}this.destination.error(err);};GroupBySubscriber.prototype._complete=function(){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.complete();});groups.clear();}this.destination.complete();};GroupBySubscriber.prototype.removeGroup=function(key){this.groups["delete"](key);};GroupBySubscriber.prototype.unsubscribe=function(){if(!this.closed){this.attemptedToUnsubscribe=true;if(this.count===0){_super.prototype.unsubscribe.call(this);}}};return GroupBySubscriber;}(Subscriber_1.Subscriber);var GroupDurationSubscriber=function(_super){__extends(GroupDurationSubscriber,_super);function GroupDurationSubscriber(key,group,parent){var _this=_super.call(this,group)||this;_this.key=key;_this.group=group;_this.parent=parent;return _this;}GroupDurationSubscriber.prototype._next=function(value){this.complete();};GroupDurationSubscriber.prototype._unsubscribe=function(){var _a=this,parent=_a.parent,key=_a.key;this.key=this.parent=null;if(parent){parent.removeGroup(key);}};return GroupDurationSubscriber;}(Subscriber_1.Subscriber);var GroupedObservable=function(_super){__extends(GroupedObservable,_super);function GroupedObservable(key,groupSubject,refCountSubscription){var _this=_super.call(this)||this;_this.key=key;_this.groupSubject=groupSubject;_this.refCountSubscription=refCountSubscription;return _this;}GroupedObservable.prototype._subscribe=function(subscriber){var subscription=new Subscription_1.Subscription();var _a=this,refCountSubscription=_a.refCountSubscription,groupSubject=_a.groupSubject;if(refCountSubscription&&!refCountSubscription.closed){subscription.add(new InnerRefCountSubscription(refCountSubscription));}subscription.add(groupSubject.subscribe(subscriber));return subscription;};return GroupedObservable;}(Observable_1.Observable);exports.GroupedObservable=GroupedObservable;var InnerRefCountSubscription=function(_super){__extends(InnerRefCountSubscription,_super);function InnerRefCountSubscription(parent){var _this=_super.call(this)||this;_this.parent=parent;parent.count++;return _this;}InnerRefCountSubscription.prototype.unsubscribe=function(){var parent=this.parent;if(!parent.closed&&!this.closed){_super.prototype.unsubscribe.call(this);parent.count-=1;if(parent.count===0&&parent.attemptedToUnsubscribe){parent.unsubscribe();}}};return InnerRefCountSubscription;}(Subscription_1.Subscription);},{"../Observable":125,"../Subject":130,"../Subscriber":132,"../Subscription":133}],199:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics45=function extendStatics(d,b){_extendStatics45=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics45(d,b);};return function(d,b){_extendStatics45(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function ignoreElements(){return function ignoreElementsOperatorFunction(source){return source.lift(new IgnoreElementsOperator());};}exports.ignoreElements=ignoreElements;var IgnoreElementsOperator=function(){function IgnoreElementsOperator(){}IgnoreElementsOperator.prototype.call=function(subscriber,source){return source.subscribe(new IgnoreElementsSubscriber(subscriber));};return IgnoreElementsOperator;}();var IgnoreElementsSubscriber=function(_super){__extends(IgnoreElementsSubscriber,_super);function IgnoreElementsSubscriber(){return _super!==null&&_super.apply(this,arguments)||this;}IgnoreElementsSubscriber.prototype._next=function(unused){};return IgnoreElementsSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],200:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics46=function extendStatics(d,b){_extendStatics46=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics46(d,b);};return function(d,b){_extendStatics46(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function isEmpty(){return function(source){return source.lift(new IsEmptyOperator());};}exports.isEmpty=isEmpty;var IsEmptyOperator=function(){function IsEmptyOperator(){}IsEmptyOperator.prototype.call=function(observer,source){return source.subscribe(new IsEmptySubscriber(observer));};return IsEmptyOperator;}();var IsEmptySubscriber=function(_super){__extends(IsEmptySubscriber,_super);function IsEmptySubscriber(destination){return _super.call(this,destination)||this;}IsEmptySubscriber.prototype.notifyComplete=function(isEmpty){var destination=this.destination;destination.next(isEmpty);destination.complete();};IsEmptySubscriber.prototype._next=function(value){this.notifyComplete(false);};IsEmptySubscriber.prototype._complete=function(){this.notifyComplete(true);};return IsEmptySubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],201:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var EmptyError_1=require("../util/EmptyError");var filter_1=require("./filter");var takeLast_1=require("./takeLast");var throwIfEmpty_1=require("./throwIfEmpty");var defaultIfEmpty_1=require("./defaultIfEmpty");var identity_1=require("../util/identity");function last(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?filter_1.filter(function(v,i){return predicate(v,i,source);}):identity_1.identity,takeLast_1.takeLast(1),hasDefaultValue?defaultIfEmpty_1.defaultIfEmpty(defaultValue):throwIfEmpty_1.throwIfEmpty(function(){return new EmptyError_1.EmptyError();}));};}exports.last=last;},{"../util/EmptyError":289,"../util/identity":296,"./defaultIfEmpty":180,"./filter":193,"./takeLast":246,"./throwIfEmpty":252}],202:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics47=function extendStatics(d,b){_extendStatics47=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics47(d,b);};return function(d,b){_extendStatics47(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function map(project,thisArg){return function mapOperation(source){if(typeof project!=='function'){throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');}return source.lift(new MapOperator(project,thisArg));};}exports.map=map;var MapOperator=function(){function MapOperator(project,thisArg){this.project=project;this.thisArg=thisArg;}MapOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapSubscriber(subscriber,this.project,this.thisArg));};return MapOperator;}();exports.MapOperator=MapOperator;var MapSubscriber=function(_super){__extends(MapSubscriber,_super);function MapSubscriber(destination,project,thisArg){var _this=_super.call(this,destination)||this;_this.project=project;_this.count=0;_this.thisArg=thisArg||_this;return _this;}MapSubscriber.prototype._next=function(value){var result;try{result=this.project.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return MapSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],203:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics48=function extendStatics(d,b){_extendStatics48=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics48(d,b);};return function(d,b){_extendStatics48(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function mapTo(value){return function(source){return source.lift(new MapToOperator(value));};}exports.mapTo=mapTo;var MapToOperator=function(){function MapToOperator(value){this.value=value;}MapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapToSubscriber(subscriber,this.value));};return MapToOperator;}();var MapToSubscriber=function(_super){__extends(MapToSubscriber,_super);function MapToSubscriber(destination,value){var _this=_super.call(this,destination)||this;_this.value=value;return _this;}MapToSubscriber.prototype._next=function(x){this.destination.next(this.value);};return MapToSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],204:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics49=function extendStatics(d,b){_extendStatics49=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics49(d,b);};return function(d,b){_extendStatics49(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Notification_1=require("../Notification");function materialize(){return function materializeOperatorFunction(source){return source.lift(new MaterializeOperator());};}exports.materialize=materialize;var MaterializeOperator=function(){function MaterializeOperator(){}MaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new MaterializeSubscriber(subscriber));};return MaterializeOperator;}();var MaterializeSubscriber=function(_super){__extends(MaterializeSubscriber,_super);function MaterializeSubscriber(destination){return _super.call(this,destination)||this;}MaterializeSubscriber.prototype._next=function(value){this.destination.next(Notification_1.Notification.createNext(value));};MaterializeSubscriber.prototype._error=function(err){var destination=this.destination;destination.next(Notification_1.Notification.createError(err));destination.complete();};MaterializeSubscriber.prototype._complete=function(){var destination=this.destination;destination.next(Notification_1.Notification.createComplete());destination.complete();};return MaterializeSubscriber;}(Subscriber_1.Subscriber);},{"../Notification":124,"../Subscriber":132}],205:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var reduce_1=require("./reduce");function max(comparer){var max=typeof comparer==='function'?function(x,y){return comparer(x,y)>0?x:y;}:function(x,y){return x>y?x:y;};return reduce_1.reduce(max);}exports.max=max;},{"./reduce":223}],206:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var merge_1=require("../observable/merge");function merge(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function(source){return source.lift.call(merge_1.merge.apply(void 0,[source].concat(observables)));};}exports.merge=merge;},{"../observable/merge":151}],207:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var mergeMap_1=require("./mergeMap");var identity_1=require("../util/identity");function mergeAll(concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return mergeMap_1.mergeMap(identity_1.identity,concurrent);}exports.mergeAll=mergeAll;},{"../util/identity":296,"./mergeMap":208}],208:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics50=function extendStatics(d,b){_extendStatics50=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics50(d,b);};return function(d,b){_extendStatics50(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var subscribeToResult_1=require("../util/subscribeToResult");var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var map_1=require("./map");var from_1=require("../observable/from");function mergeMap(project,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='function'){return function(source){return source.pipe(mergeMap(function(a,i){return from_1.from(project(a,i)).pipe(map_1.map(function(b,ii){return resultSelector(a,b,i,ii);}));},concurrent));};}else if(typeof resultSelector==='number'){concurrent=resultSelector;}return function(source){return source.lift(new MergeMapOperator(project,concurrent));};}exports.mergeMap=mergeMap;var MergeMapOperator=function(){function MergeMapOperator(project,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}this.project=project;this.concurrent=concurrent;}MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.concurrent));};return MergeMapOperator;}();exports.MergeMapOperator=MergeMapOperator;var MergeMapSubscriber=function(_super){__extends(MergeMapSubscriber,_super);function MergeMapSubscriber(destination,project,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}var _this=_super.call(this,destination)||this;_this.project=project;_this.concurrent=concurrent;_this.hasCompleted=false;_this.buffer=[];_this.active=0;_this.index=0;return _this;}MergeMapSubscriber.prototype._next=function(value){if(this.active<this.concurrent){this._tryNext(value);}else{this.buffer.push(value);}};MergeMapSubscriber.prototype._tryNext=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(err){this.destination.error(err);return;}this.active++;this._innerSub(result,value,index);};MergeMapSubscriber.prototype._innerSub=function(ish,value,index){var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,value,index);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=subscribeToResult_1.subscribeToResult(this,ish,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){this.destination.complete();}this.unsubscribe();};MergeMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};MergeMapSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){this.destination.complete();}};return MergeMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeMapSubscriber=MergeMapSubscriber;},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../observable/from":144,"../util/subscribeToResult":316,"./map":202}],209:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var mergeMap_1=require("./mergeMap");function mergeMapTo(innerObservable,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='function'){return mergeMap_1.mergeMap(function(){return innerObservable;},resultSelector,concurrent);}if(typeof resultSelector==='number'){concurrent=resultSelector;}return mergeMap_1.mergeMap(function(){return innerObservable;},concurrent);}exports.mergeMapTo=mergeMapTo;},{"./mergeMap":208}],210:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics51=function extendStatics(d,b){_extendStatics51=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics51(d,b);};return function(d,b){_extendStatics51(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var subscribeToResult_1=require("../util/subscribeToResult");var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");function mergeScan(accumulator,seed,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return function(source){return source.lift(new MergeScanOperator(accumulator,seed,concurrent));};}exports.mergeScan=mergeScan;var MergeScanOperator=function(){function MergeScanOperator(accumulator,seed,concurrent){this.accumulator=accumulator;this.seed=seed;this.concurrent=concurrent;}MergeScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new MergeScanSubscriber(subscriber,this.accumulator,this.seed,this.concurrent));};return MergeScanOperator;}();exports.MergeScanOperator=MergeScanOperator;var MergeScanSubscriber=function(_super){__extends(MergeScanSubscriber,_super);function MergeScanSubscriber(destination,accumulator,acc,concurrent){var _this=_super.call(this,destination)||this;_this.accumulator=accumulator;_this.acc=acc;_this.concurrent=concurrent;_this.hasValue=false;_this.hasCompleted=false;_this.buffer=[];_this.active=0;_this.index=0;return _this;}MergeScanSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var index=this.index++;var destination=this.destination;var ish=void 0;try{var accumulator=this.accumulator;ish=accumulator(this.acc,value,index);}catch(e){return destination.error(e);}this.active++;this._innerSub(ish,value,index);}else{this.buffer.push(value);}};MergeScanSubscriber.prototype._innerSub=function(ish,value,index){var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,value,index);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=subscribeToResult_1.subscribeToResult(this,ish,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}};MergeScanSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}this.unsubscribe();};MergeScanSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var destination=this.destination;this.acc=innerValue;this.hasValue=true;destination.next(innerValue);};MergeScanSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;var destination=this.destination;destination.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}};return MergeScanSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeScanSubscriber=MergeScanSubscriber;},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../util/subscribeToResult":316}],211:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var reduce_1=require("./reduce");function min(comparer){var min=typeof comparer==='function'?function(x,y){return comparer(x,y)<0?x:y;}:function(x,y){return x<y?x:y;};return reduce_1.reduce(min);}exports.min=min;},{"./reduce":223}],212:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ConnectableObservable_1=require("../observable/ConnectableObservable");function multicast(subjectOrSubjectFactory,selector){return function multicastOperatorFunction(source){var subjectFactory;if(typeof subjectOrSubjectFactory==='function'){subjectFactory=subjectOrSubjectFactory;}else{subjectFactory=function subjectFactory(){return subjectOrSubjectFactory;};}if(typeof selector==='function'){return source.lift(new MulticastOperator(subjectFactory,selector));}var connectable=Object.create(source,ConnectableObservable_1.connectableObservableDescriptor);connectable.source=source;connectable.subjectFactory=subjectFactory;return connectable;};}exports.multicast=multicast;var MulticastOperator=function(){function MulticastOperator(subjectFactory,selector){this.subjectFactory=subjectFactory;this.selector=selector;}MulticastOperator.prototype.call=function(subscriber,source){var selector=this.selector;var subject=this.subjectFactory();var subscription=selector(subject).subscribe(subscriber);subscription.add(source.subscribe(subject));return subscription;};return MulticastOperator;}();exports.MulticastOperator=MulticastOperator;},{"../observable/ConnectableObservable":135}],213:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics52=function extendStatics(d,b){_extendStatics52=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics52(d,b);};return function(d,b){_extendStatics52(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Notification_1=require("../Notification");function observeOn(scheduler,delay){if(delay===void 0){delay=0;}return function observeOnOperatorFunction(source){return source.lift(new ObserveOnOperator(scheduler,delay));};}exports.observeOn=observeOn;var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){if(delay===void 0){delay=0;}this.scheduler=scheduler;this.delay=delay;}ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay));};return ObserveOnOperator;}();exports.ObserveOnOperator=ObserveOnOperator;var ObserveOnSubscriber=function(_super){__extends(ObserveOnSubscriber,_super);function ObserveOnSubscriber(destination,scheduler,delay){if(delay===void 0){delay=0;}var _this=_super.call(this,destination)||this;_this.scheduler=scheduler;_this.delay=delay;return _this;}ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination);this.unsubscribe();};ObserveOnSubscriber.prototype.scheduleMessage=function(notification){var destination=this.destination;destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)));};ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification_1.Notification.createNext(value));};ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(Notification_1.Notification.createError(err));this.unsubscribe();};ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification_1.Notification.createComplete());this.unsubscribe();};return ObserveOnSubscriber;}(Subscriber_1.Subscriber);exports.ObserveOnSubscriber=ObserveOnSubscriber;var ObserveOnMessage=function(){function ObserveOnMessage(notification,destination){this.notification=notification;this.destination=destination;}return ObserveOnMessage;}();exports.ObserveOnMessage=ObserveOnMessage;},{"../Notification":124,"../Subscriber":132}],214:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics53=function extendStatics(d,b){_extendStatics53=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics53(d,b);};return function(d,b){_extendStatics53(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var from_1=require("../observable/from");var isArray_1=require("../util/isArray");var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function onErrorResumeNext(){var nextSources=[];for(var _i=0;_i<arguments.length;_i++){nextSources[_i]=arguments[_i];}if(nextSources.length===1&&isArray_1.isArray(nextSources[0])){nextSources=nextSources[0];}return function(source){return source.lift(new OnErrorResumeNextOperator(nextSources));};}exports.onErrorResumeNext=onErrorResumeNext;function onErrorResumeNextStatic(){var nextSources=[];for(var _i=0;_i<arguments.length;_i++){nextSources[_i]=arguments[_i];}var source=null;if(nextSources.length===1&&isArray_1.isArray(nextSources[0])){nextSources=nextSources[0];}source=nextSources.shift();return from_1.from(source,null).lift(new OnErrorResumeNextOperator(nextSources));}exports.onErrorResumeNextStatic=onErrorResumeNextStatic;var OnErrorResumeNextOperator=function(){function OnErrorResumeNextOperator(nextSources){this.nextSources=nextSources;}OnErrorResumeNextOperator.prototype.call=function(subscriber,source){return source.subscribe(new OnErrorResumeNextSubscriber(subscriber,this.nextSources));};return OnErrorResumeNextOperator;}();var OnErrorResumeNextSubscriber=function(_super){__extends(OnErrorResumeNextSubscriber,_super);function OnErrorResumeNextSubscriber(destination,nextSources){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.nextSources=nextSources;return _this;}OnErrorResumeNextSubscriber.prototype.notifyError=function(error,innerSub){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype.notifyComplete=function(innerSub){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype._error=function(err){this.subscribeToNextSource();this.unsubscribe();};OnErrorResumeNextSubscriber.prototype._complete=function(){this.subscribeToNextSource();this.unsubscribe();};OnErrorResumeNextSubscriber.prototype.subscribeToNextSource=function(){var next=this.nextSources.shift();if(!!next){var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,undefined,undefined);var destination=this.destination;destination.add(innerSubscriber);var innerSubscription=subscribeToResult_1.subscribeToResult(this,next,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){destination.add(innerSubscription);}}else{this.destination.complete();}};return OnErrorResumeNextSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../observable/from":144,"../util/isArray":297,"../util/subscribeToResult":316}],215:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics54=function extendStatics(d,b){_extendStatics54=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics54(d,b);};return function(d,b){_extendStatics54(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function pairwise(){return function(source){return source.lift(new PairwiseOperator());};}exports.pairwise=pairwise;var PairwiseOperator=function(){function PairwiseOperator(){}PairwiseOperator.prototype.call=function(subscriber,source){return source.subscribe(new PairwiseSubscriber(subscriber));};return PairwiseOperator;}();var PairwiseSubscriber=function(_super){__extends(PairwiseSubscriber,_super);function PairwiseSubscriber(destination){var _this=_super.call(this,destination)||this;_this.hasPrev=false;return _this;}PairwiseSubscriber.prototype._next=function(value){var pair;if(this.hasPrev){pair=[this.prev,value];}else{this.hasPrev=true;}this.prev=value;if(pair){this.destination.next(pair);}};return PairwiseSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],216:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var not_1=require("../util/not");var filter_1=require("./filter");function partition(predicate,thisArg){return function(source){return[filter_1.filter(predicate,thisArg)(source),filter_1.filter(not_1.not(predicate,thisArg))(source)];};}exports.partition=partition;},{"../util/not":309,"./filter":193}],217:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var map_1=require("./map");function pluck(){var properties=[];for(var _i=0;_i<arguments.length;_i++){properties[_i]=arguments[_i];}var length=properties.length;if(length===0){throw new Error('list of properties cannot be empty.');}return function(source){return map_1.map(plucker(properties,length))(source);};}exports.pluck=pluck;function plucker(props,length){var mapper=function mapper(x){var currentProp=x;for(var i=0;i<length;i++){var p=currentProp[props[i]];if(typeof p!=='undefined'){currentProp=p;}else{return undefined;}}return currentProp;};return mapper;}},{"./map":202}],218:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var multicast_1=require("./multicast");function publish(selector){return selector?multicast_1.multicast(function(){return new Subject_1.Subject();},selector):multicast_1.multicast(new Subject_1.Subject());}exports.publish=publish;},{"../Subject":130,"./multicast":212}],219:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var BehaviorSubject_1=require("../BehaviorSubject");var multicast_1=require("./multicast");function publishBehavior(value){return function(source){return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source);};}exports.publishBehavior=publishBehavior;},{"../BehaviorSubject":122,"./multicast":212}],220:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var AsyncSubject_1=require("../AsyncSubject");var multicast_1=require("./multicast");function publishLast(){return function(source){return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source);};}exports.publishLast=publishLast;},{"../AsyncSubject":121,"./multicast":212}],221:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ReplaySubject_1=require("../ReplaySubject");var multicast_1=require("./multicast");function publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler){if(selectorOrScheduler&&typeof selectorOrScheduler!=='function'){scheduler=selectorOrScheduler;}var selector=typeof selectorOrScheduler==='function'?selectorOrScheduler:undefined;var subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler);return function(source){return multicast_1.multicast(function(){return subject;},selector)(source);};}exports.publishReplay=publishReplay;},{"../ReplaySubject":128,"./multicast":212}],222:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isArray_1=require("../util/isArray");var race_1=require("../observable/race");function race(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function raceOperatorFunction(source){if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0];}return source.lift.call(race_1.race.apply(void 0,[source].concat(observables)));};}exports.race=race;},{"../observable/race":157,"../util/isArray":297}],223:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var scan_1=require("./scan");var takeLast_1=require("./takeLast");var defaultIfEmpty_1=require("./defaultIfEmpty");var pipe_1=require("../util/pipe");function reduce(accumulator,seed){if(arguments.length>=2){return function reduceOperatorFunctionWithSeed(source){return pipe_1.pipe(scan_1.scan(accumulator,seed),takeLast_1.takeLast(1),defaultIfEmpty_1.defaultIfEmpty(seed))(source);};}return function reduceOperatorFunction(source){return pipe_1.pipe(scan_1.scan(function(acc,value,index){return accumulator(acc,value,index+1);}),takeLast_1.takeLast(1))(source);};}exports.reduce=reduce;},{"../util/pipe":310,"./defaultIfEmpty":180,"./scan":231,"./takeLast":246}],224:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics55=function extendStatics(d,b){_extendStatics55=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics55(d,b);};return function(d,b){_extendStatics55(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function refCount(){return function refCountOperatorFunction(source){return source.lift(new RefCountOperator(source));};}exports.refCount=refCount;var RefCountOperator=function(){function RefCountOperator(connectable){this.connectable=connectable;}RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable);var subscription=source.subscribe(refCounter);if(!refCounter.closed){refCounter.connection=connectable.connect();}return subscription;};return RefCountOperator;}();var RefCountSubscriber=function(_super){__extends(RefCountSubscriber,_super);function RefCountSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;_this.connectable=connectable;return _this;}RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable){this.connection=null;return;}this.connectable=null;var refCount=connectable._refCount;if(refCount<=0){this.connection=null;return;}connectable._refCount=refCount-1;if(refCount>1){this.connection=null;return;}var connection=this.connection;var sharedConnection=connectable._connection;this.connection=null;if(sharedConnection&&(!connection||sharedConnection===connection)){sharedConnection.unsubscribe();}};return RefCountSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],225:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics56=function extendStatics(d,b){_extendStatics56=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics56(d,b);};return function(d,b){_extendStatics56(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var empty_1=require("../observable/empty");function repeat(count){if(count===void 0){count=-1;}return function(source){if(count===0){return empty_1.empty();}else if(count<0){return source.lift(new RepeatOperator(-1,source));}else{return source.lift(new RepeatOperator(count-1,source));}};}exports.repeat=repeat;var RepeatOperator=function(){function RepeatOperator(count,source){this.count=count;this.source=source;}RepeatOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatSubscriber(subscriber,this.count,this.source));};return RepeatOperator;}();var RepeatSubscriber=function(_super){__extends(RepeatSubscriber,_super);function RepeatSubscriber(destination,count,source){var _this=_super.call(this,destination)||this;_this.count=count;_this.source=source;return _this;}RepeatSubscriber.prototype.complete=function(){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.complete.call(this);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RepeatSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../observable/empty":142}],226:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics57=function extendStatics(d,b){_extendStatics57=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics57(d,b);};return function(d,b){_extendStatics57(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function repeatWhen(notifier){return function(source){return source.lift(new RepeatWhenOperator(notifier));};}exports.repeatWhen=repeatWhen;var RepeatWhenOperator=function(){function RepeatWhenOperator(notifier){this.notifier=notifier;}RepeatWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatWhenSubscriber(subscriber,this.notifier,source));};return RepeatWhenOperator;}();var RepeatWhenSubscriber=function(_super){__extends(RepeatWhenSubscriber,_super);function RepeatWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;_this.notifier=notifier;_this.source=source;_this.sourceIsBeingSubscribedTo=true;return _this;}RepeatWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.sourceIsBeingSubscribedTo=true;this.source.subscribe(this);};RepeatWhenSubscriber.prototype.notifyComplete=function(innerSub){if(this.sourceIsBeingSubscribedTo===false){return _super.prototype.complete.call(this);}};RepeatWhenSubscriber.prototype.complete=function(){this.sourceIsBeingSubscribedTo=false;if(!this.isStopped){if(!this.retries){this.subscribeToRetries();}if(!this.retriesSubscription||this.retriesSubscription.closed){return _super.prototype.complete.call(this);}this._unsubscribeAndRecycle();this.notifications.next();}};RepeatWhenSubscriber.prototype._unsubscribe=function(){var _a=this,notifications=_a.notifications,retriesSubscription=_a.retriesSubscription;if(notifications){notifications.unsubscribe();this.notifications=null;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=null;}this.retries=null;};RepeatWhenSubscriber.prototype._unsubscribeAndRecycle=function(){var _unsubscribe=this._unsubscribe;this._unsubscribe=null;_super.prototype._unsubscribeAndRecycle.call(this);this._unsubscribe=_unsubscribe;return this;};RepeatWhenSubscriber.prototype.subscribeToRetries=function(){this.notifications=new Subject_1.Subject();var retries;try{var notifier=this.notifier;retries=notifier(this.notifications);}catch(e){return _super.prototype.complete.call(this);}this.retries=retries;this.retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries);};return RepeatWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subject":130,"../util/subscribeToResult":316}],227:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics58=function extendStatics(d,b){_extendStatics58=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics58(d,b);};return function(d,b){_extendStatics58(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function retry(count){if(count===void 0){count=-1;}return function(source){return source.lift(new RetryOperator(count,source));};}exports.retry=retry;var RetryOperator=function(){function RetryOperator(count,source){this.count=count;this.source=source;}RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetrySubscriber(subscriber,this.count,this.source));};return RetryOperator;}();var RetrySubscriber=function(_super){__extends(RetrySubscriber,_super);function RetrySubscriber(destination,count,source){var _this=_super.call(this,destination)||this;_this.count=count;_this.source=source;return _this;}RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.error.call(this,err);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RetrySubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],228:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics59=function extendStatics(d,b){_extendStatics59=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics59(d,b);};return function(d,b){_extendStatics59(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function retryWhen(notifier){return function(source){return source.lift(new RetryWhenOperator(notifier,source));};}exports.retryWhen=retryWhen;var RetryWhenOperator=function(){function RetryWhenOperator(notifier,source){this.notifier=notifier;this.source=source;}RetryWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetryWhenSubscriber(subscriber,this.notifier,this.source));};return RetryWhenOperator;}();var RetryWhenSubscriber=function(_super){__extends(RetryWhenSubscriber,_super);function RetryWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;_this.notifier=notifier;_this.source=source;return _this;}RetryWhenSubscriber.prototype.error=function(err){if(!this.isStopped){var errors=this.errors;var retries=this.retries;var retriesSubscription=this.retriesSubscription;if(!retries){errors=new Subject_1.Subject();try{var notifier=this.notifier;retries=notifier(errors);}catch(e){return _super.prototype.error.call(this,e);}retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries);}else{this.errors=null;this.retriesSubscription=null;}this._unsubscribeAndRecycle();this.errors=errors;this.retries=retries;this.retriesSubscription=retriesSubscription;errors.next(err);}};RetryWhenSubscriber.prototype._unsubscribe=function(){var _a=this,errors=_a.errors,retriesSubscription=_a.retriesSubscription;if(errors){errors.unsubscribe();this.errors=null;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=null;}this.retries=null;};RetryWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _unsubscribe=this._unsubscribe;this._unsubscribe=null;this._unsubscribeAndRecycle();this._unsubscribe=_unsubscribe;this.source.subscribe(this);};return RetryWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subject":130,"../util/subscribeToResult":316}],229:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics60=function extendStatics(d,b){_extendStatics60=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics60(d,b);};return function(d,b){_extendStatics60(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function sample(notifier){return function(source){return source.lift(new SampleOperator(notifier));};}exports.sample=sample;var SampleOperator=function(){function SampleOperator(notifier){this.notifier=notifier;}SampleOperator.prototype.call=function(subscriber,source){var sampleSubscriber=new SampleSubscriber(subscriber);var subscription=source.subscribe(sampleSubscriber);subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber,this.notifier));return subscription;};return SampleOperator;}();var SampleSubscriber=function(_super){__extends(SampleSubscriber,_super);function SampleSubscriber(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.hasValue=false;return _this;}SampleSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;};SampleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue();};SampleSubscriber.prototype.notifyComplete=function(){this.emitValue();};SampleSubscriber.prototype.emitValue=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.value);}};return SampleSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],230:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics61=function extendStatics(d,b){_extendStatics61=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics61(d,b);};return function(d,b){_extendStatics61(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var async_1=require("../scheduler/async");function sampleTime(period,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return function(source){return source.lift(new SampleTimeOperator(period,scheduler));};}exports.sampleTime=sampleTime;var SampleTimeOperator=function(){function SampleTimeOperator(period,scheduler){this.period=period;this.scheduler=scheduler;}SampleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new SampleTimeSubscriber(subscriber,this.period,this.scheduler));};return SampleTimeOperator;}();var SampleTimeSubscriber=function(_super){__extends(SampleTimeSubscriber,_super);function SampleTimeSubscriber(destination,period,scheduler){var _this=_super.call(this,destination)||this;_this.period=period;_this.scheduler=scheduler;_this.hasValue=false;_this.add(scheduler.schedule(dispatchNotification,period,{subscriber:_this,period:period}));return _this;}SampleTimeSubscriber.prototype._next=function(value){this.lastValue=value;this.hasValue=true;};SampleTimeSubscriber.prototype.notifyNext=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.lastValue);}};return SampleTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNotification(state){var subscriber=state.subscriber,period=state.period;subscriber.notifyNext();this.schedule(state,period);}},{"../Subscriber":132,"../scheduler/async":283}],231:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics62=function extendStatics(d,b){_extendStatics62=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics62(d,b);};return function(d,b){_extendStatics62(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function scan(accumulator,seed){var hasSeed=false;if(arguments.length>=2){hasSeed=true;}return function scanOperatorFunction(source){return source.lift(new ScanOperator(accumulator,seed,hasSeed));};}exports.scan=scan;var ScanOperator=function(){function ScanOperator(accumulator,seed,hasSeed){if(hasSeed===void 0){hasSeed=false;}this.accumulator=accumulator;this.seed=seed;this.hasSeed=hasSeed;}ScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new ScanSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed));};return ScanOperator;}();var ScanSubscriber=function(_super){__extends(ScanSubscriber,_super);function ScanSubscriber(destination,accumulator,_seed,hasSeed){var _this=_super.call(this,destination)||this;_this.accumulator=accumulator;_this._seed=_seed;_this.hasSeed=hasSeed;_this.index=0;return _this;}Object.defineProperty(ScanSubscriber.prototype,"seed",{get:function get(){return this._seed;},set:function set(value){this.hasSeed=true;this._seed=value;},enumerable:true,configurable:true});ScanSubscriber.prototype._next=function(value){if(!this.hasSeed){this.seed=value;this.destination.next(value);}else{return this._tryNext(value);}};ScanSubscriber.prototype._tryNext=function(value){var index=this.index++;var result;try{result=this.accumulator(this.seed,value,index);}catch(err){this.destination.error(err);}this.seed=result;this.destination.next(result);};return ScanSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],232:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics63=function extendStatics(d,b){_extendStatics63=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics63(d,b);};return function(d,b){_extendStatics63(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function sequenceEqual(compareTo,comparator){return function(source){return source.lift(new SequenceEqualOperator(compareTo,comparator));};}exports.sequenceEqual=sequenceEqual;var SequenceEqualOperator=function(){function SequenceEqualOperator(compareTo,comparator){this.compareTo=compareTo;this.comparator=comparator;}SequenceEqualOperator.prototype.call=function(subscriber,source){return source.subscribe(new SequenceEqualSubscriber(subscriber,this.compareTo,this.comparator));};return SequenceEqualOperator;}();exports.SequenceEqualOperator=SequenceEqualOperator;var SequenceEqualSubscriber=function(_super){__extends(SequenceEqualSubscriber,_super);function SequenceEqualSubscriber(destination,compareTo,comparator){var _this=_super.call(this,destination)||this;_this.compareTo=compareTo;_this.comparator=comparator;_this._a=[];_this._b=[];_this._oneComplete=false;_this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination,_this)));return _this;}SequenceEqualSubscriber.prototype._next=function(value){if(this._oneComplete&&this._b.length===0){this.emit(false);}else{this._a.push(value);this.checkValues();}};SequenceEqualSubscriber.prototype._complete=function(){if(this._oneComplete){this.emit(this._a.length===0&&this._b.length===0);}else{this._oneComplete=true;}this.unsubscribe();};SequenceEqualSubscriber.prototype.checkValues=function(){var _c=this,_a=_c._a,_b=_c._b,comparator=_c.comparator;while(_a.length>0&&_b.length>0){var a=_a.shift();var b=_b.shift();var areEqual=false;try{areEqual=comparator?comparator(a,b):a===b;}catch(e){this.destination.error(e);}if(!areEqual){this.emit(false);}}};SequenceEqualSubscriber.prototype.emit=function(value){var destination=this.destination;destination.next(value);destination.complete();};SequenceEqualSubscriber.prototype.nextB=function(value){if(this._oneComplete&&this._a.length===0){this.emit(false);}else{this._b.push(value);this.checkValues();}};SequenceEqualSubscriber.prototype.completeB=function(){if(this._oneComplete){this.emit(this._a.length===0&&this._b.length===0);}else{this._oneComplete=true;}};return SequenceEqualSubscriber;}(Subscriber_1.Subscriber);exports.SequenceEqualSubscriber=SequenceEqualSubscriber;var SequenceEqualCompareToSubscriber=function(_super){__extends(SequenceEqualCompareToSubscriber,_super);function SequenceEqualCompareToSubscriber(destination,parent){var _this=_super.call(this,destination)||this;_this.parent=parent;return _this;}SequenceEqualCompareToSubscriber.prototype._next=function(value){this.parent.nextB(value);};SequenceEqualCompareToSubscriber.prototype._error=function(err){this.parent.error(err);this.unsubscribe();};SequenceEqualCompareToSubscriber.prototype._complete=function(){this.parent.completeB();this.unsubscribe();};return SequenceEqualCompareToSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],233:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var multicast_1=require("./multicast");var refCount_1=require("./refCount");var Subject_1=require("../Subject");function shareSubjectFactory(){return new Subject_1.Subject();}function share(){return function(source){return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source));};}exports.share=share;},{"../Subject":130,"./multicast":212,"./refCount":224}],234:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ReplaySubject_1=require("../ReplaySubject");function shareReplay(configOrBufferSize,windowTime,scheduler){var config;if(configOrBufferSize&&_typeof(configOrBufferSize)==='object'){config=configOrBufferSize;}else{config={bufferSize:configOrBufferSize,windowTime:windowTime,refCount:false,scheduler:scheduler};}return function(source){return source.lift(shareReplayOperator(config));};}exports.shareReplay=shareReplay;function shareReplayOperator(_a){var _b=_a.bufferSize,bufferSize=_b===void 0?Number.POSITIVE_INFINITY:_b,_c=_a.windowTime,windowTime=_c===void 0?Number.POSITIVE_INFINITY:_c,useRefCount=_a.refCount,scheduler=_a.scheduler;var subject;var refCount=0;var subscription;var hasError=false;var isComplete=false;return function shareReplayOperation(source){refCount++;if(!subject||hasError){hasError=false;subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler);subscription=source.subscribe({next:function next(value){subject.next(value);},error:function error(err){hasError=true;subject.error(err);},complete:function complete(){isComplete=true;subscription=undefined;subject.complete();}});}var innerSub=subject.subscribe(this);this.add(function(){refCount--;innerSub.unsubscribe();if(subscription&&!isComplete&&useRefCount&&refCount===0){subscription.unsubscribe();subscription=undefined;subject=undefined;}});};}},{"../ReplaySubject":128}],235:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics64=function extendStatics(d,b){_extendStatics64=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics64(d,b);};return function(d,b){_extendStatics64(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var EmptyError_1=require("../util/EmptyError");function single(predicate){return function(source){return source.lift(new SingleOperator(predicate,source));};}exports.single=single;var SingleOperator=function(){function SingleOperator(predicate,source){this.predicate=predicate;this.source=source;}SingleOperator.prototype.call=function(subscriber,source){return source.subscribe(new SingleSubscriber(subscriber,this.predicate,this.source));};return SingleOperator;}();var SingleSubscriber=function(_super){__extends(SingleSubscriber,_super);function SingleSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.source=source;_this.seenValue=false;_this.index=0;return _this;}SingleSubscriber.prototype.applySingleValue=function(value){if(this.seenValue){this.destination.error('Sequence contains more than one element');}else{this.seenValue=true;this.singleValue=value;}};SingleSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate){this.tryNext(value,index);}else{this.applySingleValue(value);}};SingleSubscriber.prototype.tryNext=function(value,index){try{if(this.predicate(value,index,this.source)){this.applySingleValue(value);}}catch(err){this.destination.error(err);}};SingleSubscriber.prototype._complete=function(){var destination=this.destination;if(this.index>0){destination.next(this.seenValue?this.singleValue:undefined);destination.complete();}else{destination.error(new EmptyError_1.EmptyError());}};return SingleSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../util/EmptyError":289}],236:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics65=function extendStatics(d,b){_extendStatics65=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics65(d,b);};return function(d,b){_extendStatics65(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function skip(count){return function(source){return source.lift(new SkipOperator(count));};}exports.skip=skip;var SkipOperator=function(){function SkipOperator(total){this.total=total;}SkipOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipSubscriber(subscriber,this.total));};return SkipOperator;}();var SkipSubscriber=function(_super){__extends(SkipSubscriber,_super);function SkipSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.count=0;return _this;}SkipSubscriber.prototype._next=function(x){if(++this.count>this.total){this.destination.next(x);}};return SkipSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],237:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics66=function extendStatics(d,b){_extendStatics66=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics66(d,b);};return function(d,b){_extendStatics66(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var ArgumentOutOfRangeError_1=require("../util/ArgumentOutOfRangeError");function skipLast(count){return function(source){return source.lift(new SkipLastOperator(count));};}exports.skipLast=skipLast;var SkipLastOperator=function(){function SkipLastOperator(_skipCount){this._skipCount=_skipCount;if(this._skipCount<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}SkipLastOperator.prototype.call=function(subscriber,source){if(this._skipCount===0){return source.subscribe(new Subscriber_1.Subscriber(subscriber));}else{return source.subscribe(new SkipLastSubscriber(subscriber,this._skipCount));}};return SkipLastOperator;}();var SkipLastSubscriber=function(_super){__extends(SkipLastSubscriber,_super);function SkipLastSubscriber(destination,_skipCount){var _this=_super.call(this,destination)||this;_this._skipCount=_skipCount;_this._count=0;_this._ring=new Array(_skipCount);return _this;}SkipLastSubscriber.prototype._next=function(value){var skipCount=this._skipCount;var count=this._count++;if(count<skipCount){this._ring[count]=value;}else{var currentIndex=count%skipCount;var ring=this._ring;var oldValue=ring[currentIndex];ring[currentIndex]=value;this.destination.next(oldValue);}};return SkipLastSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../util/ArgumentOutOfRangeError":288}],238:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics67=function extendStatics(d,b){_extendStatics67=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics67(d,b);};return function(d,b){_extendStatics67(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function skipUntil(notifier){return function(source){return source.lift(new SkipUntilOperator(notifier));};}exports.skipUntil=skipUntil;var SkipUntilOperator=function(){function SkipUntilOperator(notifier){this.notifier=notifier;}SkipUntilOperator.prototype.call=function(destination,source){return source.subscribe(new SkipUntilSubscriber(destination,this.notifier));};return SkipUntilOperator;}();var SkipUntilSubscriber=function(_super){__extends(SkipUntilSubscriber,_super);function SkipUntilSubscriber(destination,notifier){var _this=_super.call(this,destination)||this;_this.hasValue=false;var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(_this,undefined,undefined);_this.add(innerSubscriber);_this.innerSubscription=innerSubscriber;var innerSubscription=subscribeToResult_1.subscribeToResult(_this,notifier,undefined,undefined,innerSubscriber);if(innerSubscription!==innerSubscriber){_this.add(innerSubscription);_this.innerSubscription=innerSubscription;}return _this;}SkipUntilSubscriber.prototype._next=function(value){if(this.hasValue){_super.prototype._next.call(this,value);}};SkipUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.hasValue=true;if(this.innerSubscription){this.innerSubscription.unsubscribe();}};SkipUntilSubscriber.prototype.notifyComplete=function(){};return SkipUntilSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../util/subscribeToResult":316}],239:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics68=function extendStatics(d,b){_extendStatics68=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics68(d,b);};return function(d,b){_extendStatics68(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function skipWhile(predicate){return function(source){return source.lift(new SkipWhileOperator(predicate));};}exports.skipWhile=skipWhile;var SkipWhileOperator=function(){function SkipWhileOperator(predicate){this.predicate=predicate;}SkipWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipWhileSubscriber(subscriber,this.predicate));};return SkipWhileOperator;}();var SkipWhileSubscriber=function(_super){__extends(SkipWhileSubscriber,_super);function SkipWhileSubscriber(destination,predicate){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.skipping=true;_this.index=0;return _this;}SkipWhileSubscriber.prototype._next=function(value){var destination=this.destination;if(this.skipping){this.tryCallPredicate(value);}if(!this.skipping){destination.next(value);}};SkipWhileSubscriber.prototype.tryCallPredicate=function(value){try{var result=this.predicate(value,this.index++);this.skipping=Boolean(result);}catch(err){this.destination.error(err);}};return SkipWhileSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],240:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var concat_1=require("../observable/concat");var isScheduler_1=require("../util/isScheduler");function startWith(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i]=arguments[_i];}var scheduler=array[array.length-1];if(isScheduler_1.isScheduler(scheduler)){array.pop();return function(source){return concat_1.concat(array,source,scheduler);};}else{return function(source){return concat_1.concat(array,source);};}}exports.startWith=startWith;},{"../observable/concat":140,"../util/isScheduler":307}],241:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var SubscribeOnObservable_1=require("../observable/SubscribeOnObservable");function subscribeOn(scheduler,delay){if(delay===void 0){delay=0;}return function subscribeOnOperatorFunction(source){return source.lift(new SubscribeOnOperator(scheduler,delay));};}exports.subscribeOn=subscribeOn;var SubscribeOnOperator=function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler;this.delay=delay;}SubscribeOnOperator.prototype.call=function(subscriber,source){return new SubscribeOnObservable_1.SubscribeOnObservable(source,this.delay,this.scheduler).subscribe(subscriber);};return SubscribeOnOperator;}();},{"../observable/SubscribeOnObservable":136}],242:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var switchMap_1=require("./switchMap");var identity_1=require("../util/identity");function switchAll(){return switchMap_1.switchMap(identity_1.identity);}exports.switchAll=switchAll;},{"../util/identity":296,"./switchMap":243}],243:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics69=function extendStatics(d,b){_extendStatics69=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics69(d,b);};return function(d,b){_extendStatics69(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var InnerSubscriber_1=require("../InnerSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");var map_1=require("./map");var from_1=require("../observable/from");function switchMap(project,resultSelector){if(typeof resultSelector==='function'){return function(source){return source.pipe(switchMap(function(a,i){return from_1.from(project(a,i)).pipe(map_1.map(function(b,ii){return resultSelector(a,b,i,ii);}));}));};}return function(source){return source.lift(new SwitchMapOperator(project));};}exports.switchMap=switchMap;var SwitchMapOperator=function(){function SwitchMapOperator(project){this.project=project;}SwitchMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapSubscriber(subscriber,this.project));};return SwitchMapOperator;}();var SwitchMapSubscriber=function(_super){__extends(SwitchMapSubscriber,_super);function SwitchMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;_this.project=project;_this.index=0;return _this;}SwitchMapSubscriber.prototype._next=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(error){this.destination.error(error);return;}this._innerSub(result,value,index);};SwitchMapSubscriber.prototype._innerSub=function(result,value,index){var innerSubscription=this.innerSubscription;if(innerSubscription){innerSubscription.unsubscribe();}var innerSubscriber=new InnerSubscriber_1.InnerSubscriber(this,value,index);var destination=this.destination;destination.add(innerSubscriber);this.innerSubscription=subscribeToResult_1.subscribeToResult(this,result,undefined,undefined,innerSubscriber);if(this.innerSubscription!==innerSubscriber){destination.add(this.innerSubscription);}};SwitchMapSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;if(!innerSubscription||innerSubscription.closed){_super.prototype._complete.call(this);}this.unsubscribe();};SwitchMapSubscriber.prototype._unsubscribe=function(){this.innerSubscription=null;};SwitchMapSubscriber.prototype.notifyComplete=function(innerSub){var destination=this.destination;destination.remove(innerSub);this.innerSubscription=null;if(this.isStopped){_super.prototype._complete.call(this);}};SwitchMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};return SwitchMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../InnerSubscriber":123,"../OuterSubscriber":127,"../observable/from":144,"../util/subscribeToResult":316,"./map":202}],244:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var switchMap_1=require("./switchMap");function switchMapTo(innerObservable,resultSelector){return resultSelector?switchMap_1.switchMap(function(){return innerObservable;},resultSelector):switchMap_1.switchMap(function(){return innerObservable;});}exports.switchMapTo=switchMapTo;},{"./switchMap":243}],245:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics70=function extendStatics(d,b){_extendStatics70=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics70(d,b);};return function(d,b){_extendStatics70(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var ArgumentOutOfRangeError_1=require("../util/ArgumentOutOfRangeError");var empty_1=require("../observable/empty");function take(count){return function(source){if(count===0){return empty_1.empty();}else{return source.lift(new TakeOperator(count));}};}exports.take=take;var TakeOperator=function(){function TakeOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeSubscriber(subscriber,this.total));};return TakeOperator;}();var TakeSubscriber=function(_super){__extends(TakeSubscriber,_super);function TakeSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.count=0;return _this;}TakeSubscriber.prototype._next=function(value){var total=this.total;var count=++this.count;if(count<=total){this.destination.next(value);if(count===total){this.destination.complete();this.unsubscribe();}}};return TakeSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../observable/empty":142,"../util/ArgumentOutOfRangeError":288}],246:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics71=function extendStatics(d,b){_extendStatics71=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics71(d,b);};return function(d,b){_extendStatics71(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var ArgumentOutOfRangeError_1=require("../util/ArgumentOutOfRangeError");var empty_1=require("../observable/empty");function takeLast(count){return function takeLastOperatorFunction(source){if(count===0){return empty_1.empty();}else{return source.lift(new TakeLastOperator(count));}};}exports.takeLast=takeLast;var TakeLastOperator=function(){function TakeLastOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}TakeLastOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeLastSubscriber(subscriber,this.total));};return TakeLastOperator;}();var TakeLastSubscriber=function(_super){__extends(TakeLastSubscriber,_super);function TakeLastSubscriber(destination,total){var _this=_super.call(this,destination)||this;_this.total=total;_this.ring=new Array();_this.count=0;return _this;}TakeLastSubscriber.prototype._next=function(value){var ring=this.ring;var total=this.total;var count=this.count++;if(ring.length<total){ring.push(value);}else{var index=count%total;ring[index]=value;}};TakeLastSubscriber.prototype._complete=function(){var destination=this.destination;var count=this.count;if(count>0){var total=this.count>=this.total?this.total:this.count;var ring=this.ring;for(var i=0;i<total;i++){var idx=count++%total;destination.next(ring[idx]);}}destination.complete();};return TakeLastSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../observable/empty":142,"../util/ArgumentOutOfRangeError":288}],247:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics72=function extendStatics(d,b){_extendStatics72=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics72(d,b);};return function(d,b){_extendStatics72(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function takeUntil(notifier){return function(source){return source.lift(new TakeUntilOperator(notifier));};}exports.takeUntil=takeUntil;var TakeUntilOperator=function(){function TakeUntilOperator(notifier){this.notifier=notifier;}TakeUntilOperator.prototype.call=function(subscriber,source){var takeUntilSubscriber=new TakeUntilSubscriber(subscriber);var notifierSubscription=subscribeToResult_1.subscribeToResult(takeUntilSubscriber,this.notifier);if(notifierSubscription&&!takeUntilSubscriber.seenValue){takeUntilSubscriber.add(notifierSubscription);return source.subscribe(takeUntilSubscriber);}return takeUntilSubscriber;};return TakeUntilOperator;}();var TakeUntilSubscriber=function(_super){__extends(TakeUntilSubscriber,_super);function TakeUntilSubscriber(destination){var _this=_super.call(this,destination)||this;_this.seenValue=false;return _this;}TakeUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.seenValue=true;this.complete();};TakeUntilSubscriber.prototype.notifyComplete=function(){};return TakeUntilSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],248:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics73=function extendStatics(d,b){_extendStatics73=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics73(d,b);};return function(d,b){_extendStatics73(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function takeWhile(predicate,inclusive){if(inclusive===void 0){inclusive=false;}return function(source){return source.lift(new TakeWhileOperator(predicate,inclusive));};}exports.takeWhile=takeWhile;var TakeWhileOperator=function(){function TakeWhileOperator(predicate,inclusive){this.predicate=predicate;this.inclusive=inclusive;}TakeWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeWhileSubscriber(subscriber,this.predicate,this.inclusive));};return TakeWhileOperator;}();var TakeWhileSubscriber=function(_super){__extends(TakeWhileSubscriber,_super);function TakeWhileSubscriber(destination,predicate,inclusive){var _this=_super.call(this,destination)||this;_this.predicate=predicate;_this.inclusive=inclusive;_this.index=0;return _this;}TakeWhileSubscriber.prototype._next=function(value){var destination=this.destination;var result;try{result=this.predicate(value,this.index++);}catch(err){destination.error(err);return;}this.nextOrComplete(value,result);};TakeWhileSubscriber.prototype.nextOrComplete=function(value,predicateResult){var destination=this.destination;if(Boolean(predicateResult)){destination.next(value);}else{if(this.inclusive){destination.next(value);}destination.complete();}};return TakeWhileSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132}],249:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics74=function extendStatics(d,b){_extendStatics74=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics74(d,b);};return function(d,b){_extendStatics74(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var noop_1=require("../util/noop");var isFunction_1=require("../util/isFunction");function tap(nextOrObserver,error,complete){return function tapOperatorFunction(source){return source.lift(new DoOperator(nextOrObserver,error,complete));};}exports.tap=tap;var DoOperator=function(){function DoOperator(nextOrObserver,error,complete){this.nextOrObserver=nextOrObserver;this.error=error;this.complete=complete;}DoOperator.prototype.call=function(subscriber,source){return source.subscribe(new TapSubscriber(subscriber,this.nextOrObserver,this.error,this.complete));};return DoOperator;}();var TapSubscriber=function(_super){__extends(TapSubscriber,_super);function TapSubscriber(destination,observerOrNext,error,complete){var _this=_super.call(this,destination)||this;_this._tapNext=noop_1.noop;_this._tapError=noop_1.noop;_this._tapComplete=noop_1.noop;_this._tapError=error||noop_1.noop;_this._tapComplete=complete||noop_1.noop;if(isFunction_1.isFunction(observerOrNext)){_this._context=_this;_this._tapNext=observerOrNext;}else if(observerOrNext){_this._context=observerOrNext;_this._tapNext=observerOrNext.next||noop_1.noop;_this._tapError=observerOrNext.error||noop_1.noop;_this._tapComplete=observerOrNext.complete||noop_1.noop;}return _this;}TapSubscriber.prototype._next=function(value){try{this._tapNext.call(this._context,value);}catch(err){this.destination.error(err);return;}this.destination.next(value);};TapSubscriber.prototype._error=function(err){try{this._tapError.call(this._context,err);}catch(err){this.destination.error(err);return;}this.destination.error(err);};TapSubscriber.prototype._complete=function(){try{this._tapComplete.call(this._context);}catch(err){this.destination.error(err);return;}return this.destination.complete();};return TapSubscriber;}(Subscriber_1.Subscriber);},{"../Subscriber":132,"../util/isFunction":300,"../util/noop":308}],250:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics75=function extendStatics(d,b){_extendStatics75=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics75(d,b);};return function(d,b){_extendStatics75(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");exports.defaultThrottleConfig={leading:true,trailing:false};function throttle(durationSelector,config){if(config===void 0){config=exports.defaultThrottleConfig;}return function(source){return source.lift(new ThrottleOperator(durationSelector,config.leading,config.trailing));};}exports.throttle=throttle;var ThrottleOperator=function(){function ThrottleOperator(durationSelector,leading,trailing){this.durationSelector=durationSelector;this.leading=leading;this.trailing=trailing;}ThrottleOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleSubscriber(subscriber,this.durationSelector,this.leading,this.trailing));};return ThrottleOperator;}();var ThrottleSubscriber=function(_super){__extends(ThrottleSubscriber,_super);function ThrottleSubscriber(destination,durationSelector,_leading,_trailing){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.durationSelector=durationSelector;_this._leading=_leading;_this._trailing=_trailing;_this._hasValue=false;return _this;}ThrottleSubscriber.prototype._next=function(value){this._hasValue=true;this._sendValue=value;if(!this._throttled){if(this._leading){this.send();}else{this.throttle(value);}}};ThrottleSubscriber.prototype.send=function(){var _a=this,_hasValue=_a._hasValue,_sendValue=_a._sendValue;if(_hasValue){this.destination.next(_sendValue);this.throttle(_sendValue);}this._hasValue=false;this._sendValue=null;};ThrottleSubscriber.prototype.throttle=function(value){var duration=this.tryDurationSelector(value);if(!!duration){this.add(this._throttled=subscribeToResult_1.subscribeToResult(this,duration));}};ThrottleSubscriber.prototype.tryDurationSelector=function(value){try{return this.durationSelector(value);}catch(err){this.destination.error(err);return null;}};ThrottleSubscriber.prototype.throttlingDone=function(){var _a=this,_throttled=_a._throttled,_trailing=_a._trailing;if(_throttled){_throttled.unsubscribe();}this._throttled=null;if(_trailing){this.send();}};ThrottleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.throttlingDone();};ThrottleSubscriber.prototype.notifyComplete=function(){this.throttlingDone();};return ThrottleSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],251:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics76=function extendStatics(d,b){_extendStatics76=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics76(d,b);};return function(d,b){_extendStatics76(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var async_1=require("../scheduler/async");var throttle_1=require("./throttle");function throttleTime(duration,scheduler,config){if(scheduler===void 0){scheduler=async_1.async;}if(config===void 0){config=throttle_1.defaultThrottleConfig;}return function(source){return source.lift(new ThrottleTimeOperator(duration,scheduler,config.leading,config.trailing));};}exports.throttleTime=throttleTime;var ThrottleTimeOperator=function(){function ThrottleTimeOperator(duration,scheduler,leading,trailing){this.duration=duration;this.scheduler=scheduler;this.leading=leading;this.trailing=trailing;}ThrottleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleTimeSubscriber(subscriber,this.duration,this.scheduler,this.leading,this.trailing));};return ThrottleTimeOperator;}();var ThrottleTimeSubscriber=function(_super){__extends(ThrottleTimeSubscriber,_super);function ThrottleTimeSubscriber(destination,duration,scheduler,leading,trailing){var _this=_super.call(this,destination)||this;_this.duration=duration;_this.scheduler=scheduler;_this.leading=leading;_this.trailing=trailing;_this._hasTrailingValue=false;_this._trailingValue=null;return _this;}ThrottleTimeSubscriber.prototype._next=function(value){if(this.throttled){if(this.trailing){this._trailingValue=value;this._hasTrailingValue=true;}}else{this.add(this.throttled=this.scheduler.schedule(dispatchNext,this.duration,{subscriber:this}));if(this.leading){this.destination.next(value);}else if(this.trailing){this._trailingValue=value;this._hasTrailingValue=true;}}};ThrottleTimeSubscriber.prototype._complete=function(){if(this._hasTrailingValue){this.destination.next(this._trailingValue);this.destination.complete();}else{this.destination.complete();}};ThrottleTimeSubscriber.prototype.clearThrottle=function(){var throttled=this.throttled;if(throttled){if(this.trailing&&this._hasTrailingValue){this.destination.next(this._trailingValue);this._trailingValue=null;this._hasTrailingValue=false;}throttled.unsubscribe();this.remove(throttled);this.throttled=null;}};return ThrottleTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNext(arg){var subscriber=arg.subscriber;subscriber.clearThrottle();}},{"../Subscriber":132,"../scheduler/async":283,"./throttle":250}],252:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics77=function extendStatics(d,b){_extendStatics77=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics77(d,b);};return function(d,b){_extendStatics77(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var EmptyError_1=require("../util/EmptyError");var Subscriber_1=require("../Subscriber");function throwIfEmpty(errorFactory){if(errorFactory===void 0){errorFactory=defaultErrorFactory;}return function(source){return source.lift(new ThrowIfEmptyOperator(errorFactory));};}exports.throwIfEmpty=throwIfEmpty;var ThrowIfEmptyOperator=function(){function ThrowIfEmptyOperator(errorFactory){this.errorFactory=errorFactory;}ThrowIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrowIfEmptySubscriber(subscriber,this.errorFactory));};return ThrowIfEmptyOperator;}();var ThrowIfEmptySubscriber=function(_super){__extends(ThrowIfEmptySubscriber,_super);function ThrowIfEmptySubscriber(destination,errorFactory){var _this=_super.call(this,destination)||this;_this.errorFactory=errorFactory;_this.hasValue=false;return _this;}ThrowIfEmptySubscriber.prototype._next=function(value){this.hasValue=true;this.destination.next(value);};ThrowIfEmptySubscriber.prototype._complete=function(){if(!this.hasValue){var err=void 0;try{err=this.errorFactory();}catch(e){err=e;}this.destination.error(err);}else{return this.destination.complete();}};return ThrowIfEmptySubscriber;}(Subscriber_1.Subscriber);function defaultErrorFactory(){return new EmptyError_1.EmptyError();}},{"../Subscriber":132,"../util/EmptyError":289}],253:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var scan_1=require("./scan");var defer_1=require("../observable/defer");var map_1=require("./map");function timeInterval(scheduler){if(scheduler===void 0){scheduler=async_1.async;}return function(source){return defer_1.defer(function(){return source.pipe(scan_1.scan(function(_a,value){var current=_a.current;return{value:value,current:scheduler.now(),last:current};},{current:scheduler.now(),value:undefined,last:undefined}),map_1.map(function(_a){var current=_a.current,last=_a.last,value=_a.value;return new TimeInterval(value,current-last);}));});};}exports.timeInterval=timeInterval;var TimeInterval=function(){function TimeInterval(value,interval){this.value=value;this.interval=interval;}return TimeInterval;}();exports.TimeInterval=TimeInterval;},{"../observable/defer":141,"../scheduler/async":283,"./map":202,"./scan":231}],254:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var TimeoutError_1=require("../util/TimeoutError");var timeoutWith_1=require("./timeoutWith");var throwError_1=require("../observable/throwError");function timeout(due,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return timeoutWith_1.timeoutWith(due,throwError_1.throwError(new TimeoutError_1.TimeoutError()),scheduler);}exports.timeout=timeout;},{"../observable/throwError":159,"../scheduler/async":283,"../util/TimeoutError":292,"./timeoutWith":255}],255:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics78=function extendStatics(d,b){_extendStatics78=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics78(d,b);};return function(d,b){_extendStatics78(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var isDate_1=require("../util/isDate");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function timeoutWith(due,withObservable,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return function(source){var absoluteTimeout=isDate_1.isDate(due);var waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return source.lift(new TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler));};}exports.timeoutWith=timeoutWith;var TimeoutWithOperator=function(){function TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler){this.waitFor=waitFor;this.absoluteTimeout=absoluteTimeout;this.withObservable=withObservable;this.scheduler=scheduler;}TimeoutWithOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutWithSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler));};return TimeoutWithOperator;}();var TimeoutWithSubscriber=function(_super){__extends(TimeoutWithSubscriber,_super);function TimeoutWithSubscriber(destination,absoluteTimeout,waitFor,withObservable,scheduler){var _this=_super.call(this,destination)||this;_this.absoluteTimeout=absoluteTimeout;_this.waitFor=waitFor;_this.withObservable=withObservable;_this.scheduler=scheduler;_this.action=null;_this.scheduleTimeout();return _this;}TimeoutWithSubscriber.dispatchTimeout=function(subscriber){var withObservable=subscriber.withObservable;subscriber._unsubscribeAndRecycle();subscriber.add(subscribeToResult_1.subscribeToResult(subscriber,withObservable));};TimeoutWithSubscriber.prototype.scheduleTimeout=function(){var action=this.action;if(action){this.action=action.schedule(this,this.waitFor);}else{this.add(this.action=this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout,this.waitFor,this));}};TimeoutWithSubscriber.prototype._next=function(value){if(!this.absoluteTimeout){this.scheduleTimeout();}_super.prototype._next.call(this,value);};TimeoutWithSubscriber.prototype._unsubscribe=function(){this.action=null;this.scheduler=null;this.withObservable=null;};return TimeoutWithSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../scheduler/async":283,"../util/isDate":299,"../util/subscribeToResult":316}],256:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var async_1=require("../scheduler/async");var map_1=require("./map");function timestamp(scheduler){if(scheduler===void 0){scheduler=async_1.async;}return map_1.map(function(value){return new Timestamp(value,scheduler.now());});}exports.timestamp=timestamp;var Timestamp=function(){function Timestamp(value,timestamp){this.value=value;this.timestamp=timestamp;}return Timestamp;}();exports.Timestamp=Timestamp;},{"../scheduler/async":283,"./map":202}],257:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var reduce_1=require("./reduce");function toArrayReducer(arr,item,index){if(index===0){return[item];}arr.push(item);return arr;}function toArray(){return reduce_1.reduce(toArrayReducer,[]);}exports.toArray=toArray;},{"./reduce":223}],258:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics79=function extendStatics(d,b){_extendStatics79=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics79(d,b);};return function(d,b){_extendStatics79(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function window(windowBoundaries){return function windowOperatorFunction(source){return source.lift(new WindowOperator(windowBoundaries));};}exports.window=window;var WindowOperator=function(){function WindowOperator(windowBoundaries){this.windowBoundaries=windowBoundaries;}WindowOperator.prototype.call=function(subscriber,source){var windowSubscriber=new WindowSubscriber(subscriber);var sourceSubscription=source.subscribe(windowSubscriber);if(!sourceSubscription.closed){windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber,this.windowBoundaries));}return sourceSubscription;};return WindowOperator;}();var WindowSubscriber=function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination){var _this=_super.call(this,destination)||this;_this.window=new Subject_1.Subject();destination.next(_this.window);return _this;}WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow();};WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(innerSub){this._complete();};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();};WindowSubscriber.prototype._unsubscribe=function(){this.window=null;};WindowSubscriber.prototype.openWindow=function(){var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var destination=this.destination;var newWindow=this.window=new Subject_1.Subject();destination.next(newWindow);};return WindowSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subject":130,"../util/subscribeToResult":316}],259:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics80=function extendStatics(d,b){_extendStatics80=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics80(d,b);};return function(d,b){_extendStatics80(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var Subject_1=require("../Subject");function windowCount(windowSize,startWindowEvery){if(startWindowEvery===void 0){startWindowEvery=0;}return function windowCountOperatorFunction(source){return source.lift(new WindowCountOperator(windowSize,startWindowEvery));};}exports.windowCount=windowCount;var WindowCountOperator=function(){function WindowCountOperator(windowSize,startWindowEvery){this.windowSize=windowSize;this.startWindowEvery=startWindowEvery;}WindowCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowCountSubscriber(subscriber,this.windowSize,this.startWindowEvery));};return WindowCountOperator;}();var WindowCountSubscriber=function(_super){__extends(WindowCountSubscriber,_super);function WindowCountSubscriber(destination,windowSize,startWindowEvery){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.windowSize=windowSize;_this.startWindowEvery=startWindowEvery;_this.windows=[new Subject_1.Subject()];_this.count=0;destination.next(_this.windows[0]);return _this;}WindowCountSubscriber.prototype._next=function(value){var startWindowEvery=this.startWindowEvery>0?this.startWindowEvery:this.windowSize;var destination=this.destination;var windowSize=this.windowSize;var windows=this.windows;var len=windows.length;for(var i=0;i<len&&!this.closed;i++){windows[i].next(value);}var c=this.count-windowSize+1;if(c>=0&&c%startWindowEvery===0&&!this.closed){windows.shift().complete();}if(++this.count%startWindowEvery===0&&!this.closed){var window_1=new Subject_1.Subject();windows.push(window_1);destination.next(window_1);}};WindowCountSubscriber.prototype._error=function(err){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().error(err);}}this.destination.error(err);};WindowCountSubscriber.prototype._complete=function(){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().complete();}}this.destination.complete();};WindowCountSubscriber.prototype._unsubscribe=function(){this.count=0;this.windows=null;};return WindowCountSubscriber;}(Subscriber_1.Subscriber);},{"../Subject":130,"../Subscriber":132}],260:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics81=function extendStatics(d,b){_extendStatics81=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics81(d,b);};return function(d,b){_extendStatics81(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var async_1=require("../scheduler/async");var Subscriber_1=require("../Subscriber");var isNumeric_1=require("../util/isNumeric");var isScheduler_1=require("../util/isScheduler");function windowTime(windowTimeSpan){var scheduler=async_1.async;var windowCreationInterval=null;var maxWindowSize=Number.POSITIVE_INFINITY;if(isScheduler_1.isScheduler(arguments[3])){scheduler=arguments[3];}if(isScheduler_1.isScheduler(arguments[2])){scheduler=arguments[2];}else if(isNumeric_1.isNumeric(arguments[2])){maxWindowSize=arguments[2];}if(isScheduler_1.isScheduler(arguments[1])){scheduler=arguments[1];}else if(isNumeric_1.isNumeric(arguments[1])){windowCreationInterval=arguments[1];}return function windowTimeOperatorFunction(source){return source.lift(new WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler));};}exports.windowTime=windowTime;var WindowTimeOperator=function(){function WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){this.windowTimeSpan=windowTimeSpan;this.windowCreationInterval=windowCreationInterval;this.maxWindowSize=maxWindowSize;this.scheduler=scheduler;}WindowTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowTimeSubscriber(subscriber,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler));};return WindowTimeOperator;}();var CountedSubject=function(_super){__extends(CountedSubject,_super);function CountedSubject(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this._numberOfNextedValues=0;return _this;}CountedSubject.prototype.next=function(value){this._numberOfNextedValues++;_super.prototype.next.call(this,value);};Object.defineProperty(CountedSubject.prototype,"numberOfNextedValues",{get:function get(){return this._numberOfNextedValues;},enumerable:true,configurable:true});return CountedSubject;}(Subject_1.Subject);var WindowTimeSubscriber=function(_super){__extends(WindowTimeSubscriber,_super);function WindowTimeSubscriber(destination,windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.windowTimeSpan=windowTimeSpan;_this.windowCreationInterval=windowCreationInterval;_this.maxWindowSize=maxWindowSize;_this.scheduler=scheduler;_this.windows=[];var window=_this.openWindow();if(windowCreationInterval!==null&&windowCreationInterval>=0){var closeState={subscriber:_this,window:window,context:null};var creationState={windowTimeSpan:windowTimeSpan,windowCreationInterval:windowCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(scheduler.schedule(dispatchWindowClose,windowTimeSpan,closeState));_this.add(scheduler.schedule(dispatchWindowCreation,windowCreationInterval,creationState));}else{var timeSpanOnlyState={subscriber:_this,window:window,windowTimeSpan:windowTimeSpan};_this.add(scheduler.schedule(dispatchWindowTimeSpanOnly,windowTimeSpan,timeSpanOnlyState));}return _this;}WindowTimeSubscriber.prototype._next=function(value){var windows=this.windows;var len=windows.length;for(var i=0;i<len;i++){var window_1=windows[i];if(!window_1.closed){window_1.next(value);if(window_1.numberOfNextedValues>=this.maxWindowSize){this.closeWindow(window_1);}}}};WindowTimeSubscriber.prototype._error=function(err){var windows=this.windows;while(windows.length>0){windows.shift().error(err);}this.destination.error(err);};WindowTimeSubscriber.prototype._complete=function(){var windows=this.windows;while(windows.length>0){var window_2=windows.shift();if(!window_2.closed){window_2.complete();}}this.destination.complete();};WindowTimeSubscriber.prototype.openWindow=function(){var window=new CountedSubject();this.windows.push(window);var destination=this.destination;destination.next(window);return window;};WindowTimeSubscriber.prototype.closeWindow=function(window){window.complete();var windows=this.windows;windows.splice(windows.indexOf(window),1);};return WindowTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchWindowTimeSpanOnly(state){var subscriber=state.subscriber,windowTimeSpan=state.windowTimeSpan,window=state.window;if(window){subscriber.closeWindow(window);}state.window=subscriber.openWindow();this.schedule(state,windowTimeSpan);}function dispatchWindowCreation(state){var windowTimeSpan=state.windowTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,windowCreationInterval=state.windowCreationInterval;var window=subscriber.openWindow();var action=this;var context={action:action,subscription:null};var timeSpanState={subscriber:subscriber,window:window,context:context};context.subscription=scheduler.schedule(dispatchWindowClose,windowTimeSpan,timeSpanState);action.add(context.subscription);action.schedule(state,windowCreationInterval);}function dispatchWindowClose(state){var subscriber=state.subscriber,window=state.window,context=state.context;if(context&&context.action&&context.subscription){context.action.remove(context.subscription);}subscriber.closeWindow(window);}},{"../Subject":130,"../Subscriber":132,"../scheduler/async":283,"../util/isNumeric":303,"../util/isScheduler":307}],261:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics82=function extendStatics(d,b){_extendStatics82=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics82(d,b);};return function(d,b){_extendStatics82(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var Subscription_1=require("../Subscription");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function windowToggle(openings,closingSelector){return function(source){return source.lift(new WindowToggleOperator(openings,closingSelector));};}exports.windowToggle=windowToggle;var WindowToggleOperator=function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowToggleSubscriber(subscriber,this.openings,this.closingSelector));};return WindowToggleOperator;}();var WindowToggleSubscriber=function(_super){__extends(WindowToggleSubscriber,_super);function WindowToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;_this.openings=openings;_this.closingSelector=closingSelector;_this.contexts=[];_this.add(_this.openSubscription=subscribeToResult_1.subscribeToResult(_this,openings,openings));return _this;}WindowToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;if(contexts){var len=contexts.length;for(var i=0;i<len;i++){contexts[i].window.next(value);}}};WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_1=contexts[index];context_1.window.error(err);context_1.subscription.unsubscribe();}}_super.prototype._error.call(this,err);};WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_2=contexts[index];context_2.window.complete();context_2.subscription.unsubscribe();}}_super.prototype._complete.call(this);};WindowToggleSubscriber.prototype._unsubscribe=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context_3=contexts[index];context_3.window.unsubscribe();context_3.subscription.unsubscribe();}}};WindowToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(outerValue===this.openings){var closingNotifier=void 0;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector(innerValue);}catch(e){return this.error(e);}var window_1=new Subject_1.Subject();var subscription=new Subscription_1.Subscription();var context_4={window:window_1,subscription:subscription};this.contexts.push(context_4);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context_4);if(innerSubscription.closed){this.closeWindow(this.contexts.length-1);}else{innerSubscription.context=context_4;subscription.add(innerSubscription);}this.destination.next(window_1);}else{this.closeWindow(this.contexts.indexOf(outerValue));}};WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err);};WindowToggleSubscriber.prototype.notifyComplete=function(inner){if(inner!==this.openSubscription){this.closeWindow(this.contexts.indexOf(inner.context));}};WindowToggleSubscriber.prototype.closeWindow=function(index){if(index===-1){return;}var contexts=this.contexts;var context=contexts[index];var window=context.window,subscription=context.subscription;contexts.splice(index,1);window.complete();subscription.unsubscribe();};return WindowToggleSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subject":130,"../Subscription":133,"../util/subscribeToResult":316}],262:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics83=function extendStatics(d,b){_extendStatics83=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics83(d,b);};return function(d,b){_extendStatics83(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subject_1=require("../Subject");var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function windowWhen(closingSelector){return function windowWhenOperatorFunction(source){return source.lift(new WindowOperator(closingSelector));};}exports.windowWhen=windowWhen;var WindowOperator=function(){function WindowOperator(closingSelector){this.closingSelector=closingSelector;}WindowOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowSubscriber(subscriber,this.closingSelector));};return WindowOperator;}();var WindowSubscriber=function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;_this.destination=destination;_this.closingSelector=closingSelector;_this.openWindow();return _this;}WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);this.unsubscribeClosingNotification();};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();this.unsubscribeClosingNotification();};WindowSubscriber.prototype.unsubscribeClosingNotification=function(){if(this.closingNotification){this.closingNotification.unsubscribe();}};WindowSubscriber.prototype.openWindow=function(innerSub){if(innerSub===void 0){innerSub=null;}if(innerSub){this.remove(innerSub);innerSub.unsubscribe();}var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var window=this.window=new Subject_1.Subject();this.destination.next(window);var closingNotifier;try{var closingSelector=this.closingSelector;closingNotifier=closingSelector();}catch(e){this.destination.error(e);this.window.error(e);return;}this.add(this.closingNotification=subscribeToResult_1.subscribeToResult(this,closingNotifier));};return WindowSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../Subject":130,"../util/subscribeToResult":316}],263:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics84=function extendStatics(d,b){_extendStatics84=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics84(d,b);};return function(d,b){_extendStatics84(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var OuterSubscriber_1=require("../OuterSubscriber");var subscribeToResult_1=require("../util/subscribeToResult");function withLatestFrom(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}return function(source){var project;if(typeof args[args.length-1]==='function'){project=args.pop();}var observables=args;return source.lift(new WithLatestFromOperator(observables,project));};}exports.withLatestFrom=withLatestFrom;var WithLatestFromOperator=function(){function WithLatestFromOperator(observables,project){this.observables=observables;this.project=project;}WithLatestFromOperator.prototype.call=function(subscriber,source){return source.subscribe(new WithLatestFromSubscriber(subscriber,this.observables,this.project));};return WithLatestFromOperator;}();var WithLatestFromSubscriber=function(_super){__extends(WithLatestFromSubscriber,_super);function WithLatestFromSubscriber(destination,observables,project){var _this=_super.call(this,destination)||this;_this.observables=observables;_this.project=project;_this.toRespond=[];var len=observables.length;_this.values=new Array(len);for(var i=0;i<len;i++){_this.toRespond.push(i);}for(var i=0;i<len;i++){var observable=observables[i];_this.add(subscribeToResult_1.subscribeToResult(_this,observable,observable,i));}return _this;}WithLatestFromSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue;var toRespond=this.toRespond;if(toRespond.length>0){var found=toRespond.indexOf(outerIndex);if(found!==-1){toRespond.splice(found,1);}}};WithLatestFromSubscriber.prototype.notifyComplete=function(){};WithLatestFromSubscriber.prototype._next=function(value){if(this.toRespond.length===0){var args=[value].concat(this.values);if(this.project){this._tryProject(args);}else{this.destination.next(args);}}};WithLatestFromSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return WithLatestFromSubscriber;}(OuterSubscriber_1.OuterSubscriber);},{"../OuterSubscriber":127,"../util/subscribeToResult":316}],264:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var zip_1=require("../observable/zip");function zip(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i];}return function zipOperatorFunction(source){return source.lift.call(zip_1.zip.apply(void 0,[source].concat(observables)));};}exports.zip=zip;},{"../observable/zip":162}],265:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var zip_1=require("../observable/zip");function zipAll(project){return function(source){return source.lift(new zip_1.ZipOperator(project));};}exports.zipAll=zipAll;},{"../observable/zip":162}],266:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var Subscription_1=require("../Subscription");function scheduleArray(input,scheduler){return new Observable_1.Observable(function(subscriber){var sub=new Subscription_1.Subscription();var i=0;sub.add(scheduler.schedule(function(){if(i===input.length){subscriber.complete();return;}subscriber.next(input[i++]);if(!subscriber.closed){sub.add(this.schedule());}}));return sub;});}exports.scheduleArray=scheduleArray;},{"../Observable":125,"../Subscription":133}],267:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var Subscription_1=require("../Subscription");var iterator_1=require("../symbol/iterator");function scheduleIterable(input,scheduler){if(!input){throw new Error('Iterable cannot be null');}return new Observable_1.Observable(function(subscriber){var sub=new Subscription_1.Subscription();var iterator;sub.add(function(){if(iterator&&typeof iterator["return"]==='function'){iterator["return"]();}});sub.add(scheduler.schedule(function(){iterator=input[iterator_1.iterator]();sub.add(scheduler.schedule(function(){if(subscriber.closed){return;}var value;var done;try{var result=iterator.next();value=result.value;done=result.done;}catch(err){subscriber.error(err);return;}if(done){subscriber.complete();}else{subscriber.next(value);this.schedule();}}));}));return sub;});}exports.scheduleIterable=scheduleIterable;},{"../Observable":125,"../Subscription":133,"../symbol/iterator":285}],268:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var Subscription_1=require("../Subscription");var observable_1=require("../symbol/observable");function scheduleObservable(input,scheduler){return new Observable_1.Observable(function(subscriber){var sub=new Subscription_1.Subscription();sub.add(scheduler.schedule(function(){var observable=input[observable_1.observable]();sub.add(observable.subscribe({next:function next(value){sub.add(scheduler.schedule(function(){return subscriber.next(value);}));},error:function error(err){sub.add(scheduler.schedule(function(){return subscriber.error(err);}));},complete:function complete(){sub.add(scheduler.schedule(function(){return subscriber.complete();}));}}));}));return sub;});}exports.scheduleObservable=scheduleObservable;},{"../Observable":125,"../Subscription":133,"../symbol/observable":286}],269:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");var Subscription_1=require("../Subscription");function schedulePromise(input,scheduler){return new Observable_1.Observable(function(subscriber){var sub=new Subscription_1.Subscription();sub.add(scheduler.schedule(function(){return input.then(function(value){sub.add(scheduler.schedule(function(){subscriber.next(value);sub.add(scheduler.schedule(function(){return subscriber.complete();}));}));},function(err){sub.add(scheduler.schedule(function(){return subscriber.error(err);}));});}));return sub;});}exports.schedulePromise=schedulePromise;},{"../Observable":125,"../Subscription":133}],270:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var scheduleObservable_1=require("./scheduleObservable");var schedulePromise_1=require("./schedulePromise");var scheduleArray_1=require("./scheduleArray");var scheduleIterable_1=require("./scheduleIterable");var isInteropObservable_1=require("../util/isInteropObservable");var isPromise_1=require("../util/isPromise");var isArrayLike_1=require("../util/isArrayLike");var isIterable_1=require("../util/isIterable");function scheduled(input,scheduler){if(input!=null){if(isInteropObservable_1.isInteropObservable(input)){return scheduleObservable_1.scheduleObservable(input,scheduler);}else if(isPromise_1.isPromise(input)){return schedulePromise_1.schedulePromise(input,scheduler);}else if(isArrayLike_1.isArrayLike(input)){return scheduleArray_1.scheduleArray(input,scheduler);}else if(isIterable_1.isIterable(input)||typeof input==='string'){return scheduleIterable_1.scheduleIterable(input,scheduler);}}throw new TypeError((input!==null&&_typeof(input)||input)+' is not observable');}exports.scheduled=scheduled;},{"../util/isArrayLike":298,"../util/isInteropObservable":301,"../util/isIterable":302,"../util/isPromise":306,"./scheduleArray":266,"./scheduleIterable":267,"./scheduleObservable":268,"./schedulePromise":269}],271:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics85=function extendStatics(d,b){_extendStatics85=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics85(d,b);};return function(d,b){_extendStatics85(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Subscription_1=require("../Subscription");var Action=function(_super){__extends(Action,_super);function Action(scheduler,work){return _super.call(this)||this;}Action.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}return this;};return Action;}(Subscription_1.Subscription);exports.Action=Action;},{"../Subscription":133}],272:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics86=function extendStatics(d,b){_extendStatics86=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics86(d,b);};return function(d,b){_extendStatics86(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncAction_1=require("./AsyncAction");var AnimationFrameAction=function(_super){__extends(AnimationFrameAction,_super);function AnimationFrameAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}AnimationFrameAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}scheduler.actions.push(this);return scheduler.scheduled||(scheduler.scheduled=requestAnimationFrame(function(){return scheduler.flush(null);}));};AnimationFrameAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}if(scheduler.actions.length===0){cancelAnimationFrame(id);scheduler.scheduled=undefined;}return undefined;};return AnimationFrameAction;}(AsyncAction_1.AsyncAction);exports.AnimationFrameAction=AnimationFrameAction;},{"./AsyncAction":276}],273:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics87=function extendStatics(d,b){_extendStatics87=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics87(d,b);};return function(d,b){_extendStatics87(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncScheduler_1=require("./AsyncScheduler");var AnimationFrameScheduler=function(_super){__extends(AnimationFrameScheduler,_super);function AnimationFrameScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}AnimationFrameScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AnimationFrameScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.AnimationFrameScheduler=AnimationFrameScheduler;},{"./AsyncScheduler":277}],274:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics88=function extendStatics(d,b){_extendStatics88=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics88(d,b);};return function(d,b){_extendStatics88(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Immediate_1=require("../util/Immediate");var AsyncAction_1=require("./AsyncAction");var AsapAction=function(_super){__extends(AsapAction,_super);function AsapAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}AsapAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}scheduler.actions.push(this);return scheduler.scheduled||(scheduler.scheduled=Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler,null)));};AsapAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}if(scheduler.actions.length===0){Immediate_1.Immediate.clearImmediate(id);scheduler.scheduled=undefined;}return undefined;};return AsapAction;}(AsyncAction_1.AsyncAction);exports.AsapAction=AsapAction;},{"../util/Immediate":290,"./AsyncAction":276}],275:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics89=function extendStatics(d,b){_extendStatics89=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics89(d,b);};return function(d,b){_extendStatics89(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncScheduler_1=require("./AsyncScheduler");var AsapScheduler=function(_super){__extends(AsapScheduler,_super);function AsapScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}AsapScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AsapScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.AsapScheduler=AsapScheduler;},{"./AsyncScheduler":277}],276:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics90=function extendStatics(d,b){_extendStatics90=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics90(d,b);};return function(d,b){_extendStatics90(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Action_1=require("./Action");var AsyncAction=function(_super){__extends(AsyncAction,_super);function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;_this.pending=false;return _this;}AsyncAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(this.closed){return this;}this.state=state;var id=this.id;var scheduler=this.scheduler;if(id!=null){this.id=this.recycleAsyncId(scheduler,id,delay);}this.pending=true;this.delay=delay;this.id=this.id||this.requestAsyncId(scheduler,this.id,delay);return this;};AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}return setInterval(scheduler.flush.bind(scheduler,this),delay);};AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&this.delay===delay&&this.pending===false){return id;}clearInterval(id);return undefined;};AsyncAction.prototype.execute=function(state,delay){if(this.closed){return new Error('executing a cancelled action');}this.pending=false;var error=this._execute(state,delay);if(error){return error;}else if(this.pending===false&&this.id!=null){this.id=this.recycleAsyncId(this.scheduler,this.id,null);}};AsyncAction.prototype._execute=function(state,delay){var errored=false;var errorValue=undefined;try{this.work(state);}catch(e){errored=true;errorValue=!!e&&e||new Error(e);}if(errored){this.unsubscribe();return errorValue;}};AsyncAction.prototype._unsubscribe=function(){var id=this.id;var scheduler=this.scheduler;var actions=scheduler.actions;var index=actions.indexOf(this);this.work=null;this.state=null;this.pending=false;this.scheduler=null;if(index!==-1){actions.splice(index,1);}if(id!=null){this.id=this.recycleAsyncId(scheduler,id,null);}this.delay=null;};return AsyncAction;}(Action_1.Action);exports.AsyncAction=AsyncAction;},{"./Action":271}],277:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics91=function extendStatics(d,b){_extendStatics91=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics91(d,b);};return function(d,b){_extendStatics91(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var Scheduler_1=require("../Scheduler");var AsyncScheduler=function(_super){__extends(AsyncScheduler,_super);function AsyncScheduler(SchedulerAction,now){if(now===void 0){now=Scheduler_1.Scheduler.now;}var _this=_super.call(this,SchedulerAction,function(){if(AsyncScheduler.delegate&&AsyncScheduler.delegate!==_this){return AsyncScheduler.delegate.now();}else{return now();}})||this;_this.actions=[];_this.active=false;_this.scheduled=undefined;return _this;}AsyncScheduler.prototype.schedule=function(work,delay,state){if(delay===void 0){delay=0;}if(AsyncScheduler.delegate&&AsyncScheduler.delegate!==this){return AsyncScheduler.delegate.schedule(work,delay,state);}else{return _super.prototype.schedule.call(this,work,delay,state);}};AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active){actions.push(action);return;}var error;this.active=true;do{if(error=action.execute(action.state,action.delay)){break;}}while(action=actions.shift());this.active=false;if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};return AsyncScheduler;}(Scheduler_1.Scheduler);exports.AsyncScheduler=AsyncScheduler;},{"../Scheduler":129}],278:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics92=function extendStatics(d,b){_extendStatics92=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics92(d,b);};return function(d,b){_extendStatics92(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncAction_1=require("./AsyncAction");var QueueAction=function(_super){__extends(QueueAction,_super);function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;return _this;}QueueAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(delay>0){return _super.prototype.schedule.call(this,state,delay);}this.delay=delay;this.state=state;this.scheduler.flush(this);return this;};QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay);};QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}return scheduler.flush(this);};return QueueAction;}(AsyncAction_1.AsyncAction);exports.QueueAction=QueueAction;},{"./AsyncAction":276}],279:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics93=function extendStatics(d,b){_extendStatics93=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics93(d,b);};return function(d,b){_extendStatics93(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncScheduler_1=require("./AsyncScheduler");var QueueScheduler=function(_super){__extends(QueueScheduler,_super);function QueueScheduler(){return _super!==null&&_super.apply(this,arguments)||this;}return QueueScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.QueueScheduler=QueueScheduler;},{"./AsyncScheduler":277}],280:[function(require,module,exports){"use strict";var __extends=this&&this.__extends||function(){var _extendStatics94=function extendStatics(d,b){_extendStatics94=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics94(d,b);};return function(d,b){_extendStatics94(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};}();Object.defineProperty(exports,"__esModule",{value:true});var AsyncAction_1=require("./AsyncAction");var AsyncScheduler_1=require("./AsyncScheduler");var VirtualTimeScheduler=function(_super){__extends(VirtualTimeScheduler,_super);function VirtualTimeScheduler(SchedulerAction,maxFrames){if(SchedulerAction===void 0){SchedulerAction=VirtualAction;}if(maxFrames===void 0){maxFrames=Number.POSITIVE_INFINITY;}var _this=_super.call(this,SchedulerAction,function(){return _this.frame;})||this;_this.maxFrames=maxFrames;_this.frame=0;_this.index=-1;return _this;}VirtualTimeScheduler.prototype.flush=function(){var _a=this,actions=_a.actions,maxFrames=_a.maxFrames;var error,action;while((action=actions[0])&&action.delay<=maxFrames){actions.shift();this.frame=action.delay;if(error=action.execute(action.state,action.delay)){break;}}if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};VirtualTimeScheduler.frameTimeFactor=10;return VirtualTimeScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.VirtualTimeScheduler=VirtualTimeScheduler;var VirtualAction=function(_super){__extends(VirtualAction,_super);function VirtualAction(scheduler,work,index){if(index===void 0){index=scheduler.index+=1;}var _this=_super.call(this,scheduler,work)||this;_this.scheduler=scheduler;_this.work=work;_this.index=index;_this.active=true;_this.index=scheduler.index=index;return _this;}VirtualAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(!this.id){return _super.prototype.schedule.call(this,state,delay);}this.active=false;var action=new VirtualAction(this.scheduler,this.work);this.add(action);return action.schedule(state,delay);};VirtualAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}this.delay=scheduler.frame+delay;var actions=scheduler.actions;actions.push(this);actions.sort(VirtualAction.sortActions);return true;};VirtualAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}return undefined;};VirtualAction.prototype._execute=function(state,delay){if(this.active===true){return _super.prototype._execute.call(this,state,delay);}};VirtualAction.sortActions=function(a,b){if(a.delay===b.delay){if(a.index===b.index){return 0;}else if(a.index>b.index){return 1;}else{return-1;}}else if(a.delay>b.delay){return 1;}else{return-1;}};return VirtualAction;}(AsyncAction_1.AsyncAction);exports.VirtualAction=VirtualAction;},{"./AsyncAction":276,"./AsyncScheduler":277}],281:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var AnimationFrameAction_1=require("./AnimationFrameAction");var AnimationFrameScheduler_1=require("./AnimationFrameScheduler");exports.animationFrame=new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);},{"./AnimationFrameAction":272,"./AnimationFrameScheduler":273}],282:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var AsapAction_1=require("./AsapAction");var AsapScheduler_1=require("./AsapScheduler");exports.asap=new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);},{"./AsapAction":274,"./AsapScheduler":275}],283:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var AsyncAction_1=require("./AsyncAction");var AsyncScheduler_1=require("./AsyncScheduler");exports.async=new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);},{"./AsyncAction":276,"./AsyncScheduler":277}],284:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var QueueAction_1=require("./QueueAction");var QueueScheduler_1=require("./QueueScheduler");exports.queue=new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);},{"./QueueAction":278,"./QueueScheduler":279}],285:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function getSymbolIterator(){if(typeof Symbol!=='function'||!Symbol.iterator){return'@@iterator';}return Symbol.iterator;}exports.getSymbolIterator=getSymbolIterator;exports.iterator=getSymbolIterator();exports.$$iterator=exports.iterator;},{}],286:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.observable=function(){return typeof Symbol==='function'&&Symbol.observable||'@@observable';}();},{}],287:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.rxSubscriber=function(){return typeof Symbol==='function'?Symbol('rxSubscriber'):'@@rxSubscriber_'+Math.random();}();exports.$$rxSubscriber=exports.rxSubscriber;},{}],288:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ArgumentOutOfRangeErrorImpl=function(){function ArgumentOutOfRangeErrorImpl(){Error.call(this);this.message='argument out of range';this.name='ArgumentOutOfRangeError';return this;}ArgumentOutOfRangeErrorImpl.prototype=Object.create(Error.prototype);return ArgumentOutOfRangeErrorImpl;}();exports.ArgumentOutOfRangeError=ArgumentOutOfRangeErrorImpl;},{}],289:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var EmptyErrorImpl=function(){function EmptyErrorImpl(){Error.call(this);this.message='no elements in sequence';this.name='EmptyError';return this;}EmptyErrorImpl.prototype=Object.create(Error.prototype);return EmptyErrorImpl;}();exports.EmptyError=EmptyErrorImpl;},{}],290:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var nextHandle=1;var RESOLVED=function(){return Promise.resolve();}();var activeHandles={};function findAndClearHandle(handle){if(handle in activeHandles){delete activeHandles[handle];return true;}return false;}exports.Immediate={setImmediate:function setImmediate(cb){var handle=nextHandle++;activeHandles[handle]=true;RESOLVED.then(function(){return findAndClearHandle(handle)&&cb();});return handle;},clearImmediate:function clearImmediate(handle){findAndClearHandle(handle);}};exports.TestTools={pending:function pending(){return Object.keys(activeHandles).length;}};},{}],291:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var ObjectUnsubscribedErrorImpl=function(){function ObjectUnsubscribedErrorImpl(){Error.call(this);this.message='object unsubscribed';this.name='ObjectUnsubscribedError';return this;}ObjectUnsubscribedErrorImpl.prototype=Object.create(Error.prototype);return ObjectUnsubscribedErrorImpl;}();exports.ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl;},{}],292:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var TimeoutErrorImpl=function(){function TimeoutErrorImpl(){Error.call(this);this.message='Timeout has occurred';this.name='TimeoutError';return this;}TimeoutErrorImpl.prototype=Object.create(Error.prototype);return TimeoutErrorImpl;}();exports.TimeoutError=TimeoutErrorImpl;},{}],293:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var UnsubscriptionErrorImpl=function(){function UnsubscriptionErrorImpl(errors){Error.call(this);this.message=errors?errors.length+" errors occurred during unsubscription:\n"+errors.map(function(err,i){return i+1+") "+err.toString();}).join('\n  '):'';this.name='UnsubscriptionError';this.errors=errors;return this;}UnsubscriptionErrorImpl.prototype=Object.create(Error.prototype);return UnsubscriptionErrorImpl;}();exports.UnsubscriptionError=UnsubscriptionErrorImpl;},{}],294:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");function canReportError(observer){while(observer){var _a=observer,closed_1=_a.closed,destination=_a.destination,isStopped=_a.isStopped;if(closed_1||isStopped){return false;}else if(destination&&destination instanceof Subscriber_1.Subscriber){observer=destination;}else{observer=null;}}return true;}exports.canReportError=canReportError;},{"../Subscriber":132}],295:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function hostReportError(err){setTimeout(function(){throw err;},0);}exports.hostReportError=hostReportError;},{}],296:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function identity(x){return x;}exports.identity=identity;},{}],297:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isArray=function(){return Array.isArray||function(x){return x&&typeof x.length==='number';};}();},{}],298:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isArrayLike=function(x){return x&&typeof x.length==='number'&&typeof x!=='function';};},{}],299:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function isDate(value){return value instanceof Date&&!isNaN(+value);}exports.isDate=isDate;},{}],300:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function isFunction(x){return typeof x==='function';}exports.isFunction=isFunction;},{}],301:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var observable_1=require("../symbol/observable");function isInteropObservable(input){return input&&typeof input[observable_1.observable]==='function';}exports.isInteropObservable=isInteropObservable;},{"../symbol/observable":286}],302:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var iterator_1=require("../symbol/iterator");function isIterable(input){return input&&typeof input[iterator_1.iterator]==='function';}exports.isIterable=isIterable;},{"../symbol/iterator":285}],303:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var isArray_1=require("./isArray");function isNumeric(val){return!isArray_1.isArray(val)&&val-parseFloat(val)+1>=0;}exports.isNumeric=isNumeric;},{"./isArray":297}],304:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function isObject(x){return x!==null&&_typeof(x)==='object';}exports.isObject=isObject;},{}],305:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Observable_1=require("../Observable");function isObservable(obj){return!!obj&&(obj instanceof Observable_1.Observable||typeof obj.lift==='function'&&typeof obj.subscribe==='function');}exports.isObservable=isObservable;},{"../Observable":125}],306:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function isPromise(value){return!!value&&typeof value.subscribe!=='function'&&typeof value.then==='function';}exports.isPromise=isPromise;},{}],307:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function isScheduler(value){return value&&typeof value.schedule==='function';}exports.isScheduler=isScheduler;},{}],308:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function noop(){}exports.noop=noop;},{}],309:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});function not(pred,thisArg){function notPred(){return!notPred.pred.apply(notPred.thisArg,arguments);}notPred.pred=pred;notPred.thisArg=thisArg;return notPred;}exports.not=not;},{}],310:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var identity_1=require("./identity");function pipe(){var fns=[];for(var _i=0;_i<arguments.length;_i++){fns[_i]=arguments[_i];}return pipeFromArray(fns);}exports.pipe=pipe;function pipeFromArray(fns){if(fns.length===0){return identity_1.identity;}if(fns.length===1){return fns[0];}return function piped(input){return fns.reduce(function(prev,fn){return fn(prev);},input);};}exports.pipeFromArray=pipeFromArray;},{"./identity":296}],311:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var subscribeToArray_1=require("./subscribeToArray");var subscribeToPromise_1=require("./subscribeToPromise");var subscribeToIterable_1=require("./subscribeToIterable");var subscribeToObservable_1=require("./subscribeToObservable");var isArrayLike_1=require("./isArrayLike");var isPromise_1=require("./isPromise");var isObject_1=require("./isObject");var iterator_1=require("../symbol/iterator");var observable_1=require("../symbol/observable");exports.subscribeTo=function(result){if(!!result&&typeof result[observable_1.observable]==='function'){return subscribeToObservable_1.subscribeToObservable(result);}else if(isArrayLike_1.isArrayLike(result)){return subscribeToArray_1.subscribeToArray(result);}else if(isPromise_1.isPromise(result)){return subscribeToPromise_1.subscribeToPromise(result);}else if(!!result&&typeof result[iterator_1.iterator]==='function'){return subscribeToIterable_1.subscribeToIterable(result);}else{var value=isObject_1.isObject(result)?'an invalid object':"'"+result+"'";var msg="You provided "+value+" where a stream was expected."+' You can provide an Observable, Promise, Array, or Iterable.';throw new TypeError(msg);}};},{"../symbol/iterator":285,"../symbol/observable":286,"./isArrayLike":298,"./isObject":304,"./isPromise":306,"./subscribeToArray":312,"./subscribeToIterable":313,"./subscribeToObservable":314,"./subscribeToPromise":315}],312:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.subscribeToArray=function(array){return function(subscriber){for(var i=0,len=array.length;i<len&&!subscriber.closed;i++){subscriber.next(array[i]);}subscriber.complete();};};},{}],313:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var iterator_1=require("../symbol/iterator");exports.subscribeToIterable=function(iterable){return function(subscriber){var iterator=iterable[iterator_1.iterator]();do{var item=iterator.next();if(item.done){subscriber.complete();break;}subscriber.next(item.value);if(subscriber.closed){break;}}while(true);if(typeof iterator["return"]==='function'){subscriber.add(function(){if(iterator["return"]){iterator["return"]();}});}return subscriber;};};},{"../symbol/iterator":285}],314:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var observable_1=require("../symbol/observable");exports.subscribeToObservable=function(obj){return function(subscriber){var obs=obj[observable_1.observable]();if(typeof obs.subscribe!=='function'){throw new TypeError('Provided object does not correctly implement Symbol.observable');}else{return obs.subscribe(subscriber);}};};},{"../symbol/observable":286}],315:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var hostReportError_1=require("./hostReportError");exports.subscribeToPromise=function(promise){return function(subscriber){promise.then(function(value){if(!subscriber.closed){subscriber.next(value);subscriber.complete();}},function(err){return subscriber.error(err);}).then(null,hostReportError_1.hostReportError);return subscriber;};};},{"./hostReportError":295}],316:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var InnerSubscriber_1=require("../InnerSubscriber");var subscribeTo_1=require("./subscribeTo");var Observable_1=require("../Observable");function subscribeToResult(outerSubscriber,result,outerValue,outerIndex,innerSubscriber){if(innerSubscriber===void 0){innerSubscriber=new InnerSubscriber_1.InnerSubscriber(outerSubscriber,outerValue,outerIndex);}if(innerSubscriber.closed){return undefined;}if(result instanceof Observable_1.Observable){return result.subscribe(innerSubscriber);}return subscribeTo_1.subscribeTo(result)(innerSubscriber);}exports.subscribeToResult=subscribeToResult;},{"../InnerSubscriber":123,"../Observable":125,"./subscribeTo":311}],317:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var Subscriber_1=require("../Subscriber");var rxSubscriber_1=require("../symbol/rxSubscriber");var Observer_1=require("../Observer");function toSubscriber(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber_1.Subscriber){return nextOrObserver;}if(nextOrObserver[rxSubscriber_1.rxSubscriber]){return nextOrObserver[rxSubscriber_1.rxSubscriber]();}}if(!nextOrObserver&&!error&&!complete){return new Subscriber_1.Subscriber(Observer_1.empty);}return new Subscriber_1.Subscriber(nextOrObserver,error,complete);}exports.toSubscriber=toSubscriber;},{"../Observer":126,"../Subscriber":132,"../symbol/rxSubscriber":287}],318:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var audit_1=require("../internal/operators/audit");exports.audit=audit_1.audit;var auditTime_1=require("../internal/operators/auditTime");exports.auditTime=auditTime_1.auditTime;var buffer_1=require("../internal/operators/buffer");exports.buffer=buffer_1.buffer;var bufferCount_1=require("../internal/operators/bufferCount");exports.bufferCount=bufferCount_1.bufferCount;var bufferTime_1=require("../internal/operators/bufferTime");exports.bufferTime=bufferTime_1.bufferTime;var bufferToggle_1=require("../internal/operators/bufferToggle");exports.bufferToggle=bufferToggle_1.bufferToggle;var bufferWhen_1=require("../internal/operators/bufferWhen");exports.bufferWhen=bufferWhen_1.bufferWhen;var catchError_1=require("../internal/operators/catchError");exports.catchError=catchError_1.catchError;var combineAll_1=require("../internal/operators/combineAll");exports.combineAll=combineAll_1.combineAll;var combineLatest_1=require("../internal/operators/combineLatest");exports.combineLatest=combineLatest_1.combineLatest;var concat_1=require("../internal/operators/concat");exports.concat=concat_1.concat;var concatAll_1=require("../internal/operators/concatAll");exports.concatAll=concatAll_1.concatAll;var concatMap_1=require("../internal/operators/concatMap");exports.concatMap=concatMap_1.concatMap;var concatMapTo_1=require("../internal/operators/concatMapTo");exports.concatMapTo=concatMapTo_1.concatMapTo;var count_1=require("../internal/operators/count");exports.count=count_1.count;var debounce_1=require("../internal/operators/debounce");exports.debounce=debounce_1.debounce;var debounceTime_1=require("../internal/operators/debounceTime");exports.debounceTime=debounceTime_1.debounceTime;var defaultIfEmpty_1=require("../internal/operators/defaultIfEmpty");exports.defaultIfEmpty=defaultIfEmpty_1.defaultIfEmpty;var delay_1=require("../internal/operators/delay");exports.delay=delay_1.delay;var delayWhen_1=require("../internal/operators/delayWhen");exports.delayWhen=delayWhen_1.delayWhen;var dematerialize_1=require("../internal/operators/dematerialize");exports.dematerialize=dematerialize_1.dematerialize;var distinct_1=require("../internal/operators/distinct");exports.distinct=distinct_1.distinct;var distinctUntilChanged_1=require("../internal/operators/distinctUntilChanged");exports.distinctUntilChanged=distinctUntilChanged_1.distinctUntilChanged;var distinctUntilKeyChanged_1=require("../internal/operators/distinctUntilKeyChanged");exports.distinctUntilKeyChanged=distinctUntilKeyChanged_1.distinctUntilKeyChanged;var elementAt_1=require("../internal/operators/elementAt");exports.elementAt=elementAt_1.elementAt;var endWith_1=require("../internal/operators/endWith");exports.endWith=endWith_1.endWith;var every_1=require("../internal/operators/every");exports.every=every_1.every;var exhaust_1=require("../internal/operators/exhaust");exports.exhaust=exhaust_1.exhaust;var exhaustMap_1=require("../internal/operators/exhaustMap");exports.exhaustMap=exhaustMap_1.exhaustMap;var expand_1=require("../internal/operators/expand");exports.expand=expand_1.expand;var filter_1=require("../internal/operators/filter");exports.filter=filter_1.filter;var finalize_1=require("../internal/operators/finalize");exports.finalize=finalize_1.finalize;var find_1=require("../internal/operators/find");exports.find=find_1.find;var findIndex_1=require("../internal/operators/findIndex");exports.findIndex=findIndex_1.findIndex;var first_1=require("../internal/operators/first");exports.first=first_1.first;var groupBy_1=require("../internal/operators/groupBy");exports.groupBy=groupBy_1.groupBy;var ignoreElements_1=require("../internal/operators/ignoreElements");exports.ignoreElements=ignoreElements_1.ignoreElements;var isEmpty_1=require("../internal/operators/isEmpty");exports.isEmpty=isEmpty_1.isEmpty;var last_1=require("../internal/operators/last");exports.last=last_1.last;var map_1=require("../internal/operators/map");exports.map=map_1.map;var mapTo_1=require("../internal/operators/mapTo");exports.mapTo=mapTo_1.mapTo;var materialize_1=require("../internal/operators/materialize");exports.materialize=materialize_1.materialize;var max_1=require("../internal/operators/max");exports.max=max_1.max;var merge_1=require("../internal/operators/merge");exports.merge=merge_1.merge;var mergeAll_1=require("../internal/operators/mergeAll");exports.mergeAll=mergeAll_1.mergeAll;var mergeMap_1=require("../internal/operators/mergeMap");exports.mergeMap=mergeMap_1.mergeMap;var mergeMap_2=require("../internal/operators/mergeMap");exports.flatMap=mergeMap_2.mergeMap;var mergeMapTo_1=require("../internal/operators/mergeMapTo");exports.mergeMapTo=mergeMapTo_1.mergeMapTo;var mergeScan_1=require("../internal/operators/mergeScan");exports.mergeScan=mergeScan_1.mergeScan;var min_1=require("../internal/operators/min");exports.min=min_1.min;var multicast_1=require("../internal/operators/multicast");exports.multicast=multicast_1.multicast;var observeOn_1=require("../internal/operators/observeOn");exports.observeOn=observeOn_1.observeOn;var onErrorResumeNext_1=require("../internal/operators/onErrorResumeNext");exports.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext;var pairwise_1=require("../internal/operators/pairwise");exports.pairwise=pairwise_1.pairwise;var partition_1=require("../internal/operators/partition");exports.partition=partition_1.partition;var pluck_1=require("../internal/operators/pluck");exports.pluck=pluck_1.pluck;var publish_1=require("../internal/operators/publish");exports.publish=publish_1.publish;var publishBehavior_1=require("../internal/operators/publishBehavior");exports.publishBehavior=publishBehavior_1.publishBehavior;var publishLast_1=require("../internal/operators/publishLast");exports.publishLast=publishLast_1.publishLast;var publishReplay_1=require("../internal/operators/publishReplay");exports.publishReplay=publishReplay_1.publishReplay;var race_1=require("../internal/operators/race");exports.race=race_1.race;var reduce_1=require("../internal/operators/reduce");exports.reduce=reduce_1.reduce;var repeat_1=require("../internal/operators/repeat");exports.repeat=repeat_1.repeat;var repeatWhen_1=require("../internal/operators/repeatWhen");exports.repeatWhen=repeatWhen_1.repeatWhen;var retry_1=require("../internal/operators/retry");exports.retry=retry_1.retry;var retryWhen_1=require("../internal/operators/retryWhen");exports.retryWhen=retryWhen_1.retryWhen;var refCount_1=require("../internal/operators/refCount");exports.refCount=refCount_1.refCount;var sample_1=require("../internal/operators/sample");exports.sample=sample_1.sample;var sampleTime_1=require("../internal/operators/sampleTime");exports.sampleTime=sampleTime_1.sampleTime;var scan_1=require("../internal/operators/scan");exports.scan=scan_1.scan;var sequenceEqual_1=require("../internal/operators/sequenceEqual");exports.sequenceEqual=sequenceEqual_1.sequenceEqual;var share_1=require("../internal/operators/share");exports.share=share_1.share;var shareReplay_1=require("../internal/operators/shareReplay");exports.shareReplay=shareReplay_1.shareReplay;var single_1=require("../internal/operators/single");exports.single=single_1.single;var skip_1=require("../internal/operators/skip");exports.skip=skip_1.skip;var skipLast_1=require("../internal/operators/skipLast");exports.skipLast=skipLast_1.skipLast;var skipUntil_1=require("../internal/operators/skipUntil");exports.skipUntil=skipUntil_1.skipUntil;var skipWhile_1=require("../internal/operators/skipWhile");exports.skipWhile=skipWhile_1.skipWhile;var startWith_1=require("../internal/operators/startWith");exports.startWith=startWith_1.startWith;var subscribeOn_1=require("../internal/operators/subscribeOn");exports.subscribeOn=subscribeOn_1.subscribeOn;var switchAll_1=require("../internal/operators/switchAll");exports.switchAll=switchAll_1.switchAll;var switchMap_1=require("../internal/operators/switchMap");exports.switchMap=switchMap_1.switchMap;var switchMapTo_1=require("../internal/operators/switchMapTo");exports.switchMapTo=switchMapTo_1.switchMapTo;var take_1=require("../internal/operators/take");exports.take=take_1.take;var takeLast_1=require("../internal/operators/takeLast");exports.takeLast=takeLast_1.takeLast;var takeUntil_1=require("../internal/operators/takeUntil");exports.takeUntil=takeUntil_1.takeUntil;var takeWhile_1=require("../internal/operators/takeWhile");exports.takeWhile=takeWhile_1.takeWhile;var tap_1=require("../internal/operators/tap");exports.tap=tap_1.tap;var throttle_1=require("../internal/operators/throttle");exports.throttle=throttle_1.throttle;var throttleTime_1=require("../internal/operators/throttleTime");exports.throttleTime=throttleTime_1.throttleTime;var throwIfEmpty_1=require("../internal/operators/throwIfEmpty");exports.throwIfEmpty=throwIfEmpty_1.throwIfEmpty;var timeInterval_1=require("../internal/operators/timeInterval");exports.timeInterval=timeInterval_1.timeInterval;var timeout_1=require("../internal/operators/timeout");exports.timeout=timeout_1.timeout;var timeoutWith_1=require("../internal/operators/timeoutWith");exports.timeoutWith=timeoutWith_1.timeoutWith;var timestamp_1=require("../internal/operators/timestamp");exports.timestamp=timestamp_1.timestamp;var toArray_1=require("../internal/operators/toArray");exports.toArray=toArray_1.toArray;var window_1=require("../internal/operators/window");exports.window=window_1.window;var windowCount_1=require("../internal/operators/windowCount");exports.windowCount=windowCount_1.windowCount;var windowTime_1=require("../internal/operators/windowTime");exports.windowTime=windowTime_1.windowTime;var windowToggle_1=require("../internal/operators/windowToggle");exports.windowToggle=windowToggle_1.windowToggle;var windowWhen_1=require("../internal/operators/windowWhen");exports.windowWhen=windowWhen_1.windowWhen;var withLatestFrom_1=require("../internal/operators/withLatestFrom");exports.withLatestFrom=withLatestFrom_1.withLatestFrom;var zip_1=require("../internal/operators/zip");exports.zip=zip_1.zip;var zipAll_1=require("../internal/operators/zipAll");exports.zipAll=zipAll_1.zipAll;},{"../internal/operators/audit":163,"../internal/operators/auditTime":164,"../internal/operators/buffer":165,"../internal/operators/bufferCount":166,"../internal/operators/bufferTime":167,"../internal/operators/bufferToggle":168,"../internal/operators/bufferWhen":169,"../internal/operators/catchError":170,"../internal/operators/combineAll":171,"../internal/operators/combineLatest":172,"../internal/operators/concat":173,"../internal/operators/concatAll":174,"../internal/operators/concatMap":175,"../internal/operators/concatMapTo":176,"../internal/operators/count":177,"../internal/operators/debounce":178,"../internal/operators/debounceTime":179,"../internal/operators/defaultIfEmpty":180,"../internal/operators/delay":181,"../internal/operators/delayWhen":182,"../internal/operators/dematerialize":183,"../internal/operators/distinct":184,"../internal/operators/distinctUntilChanged":185,"../internal/operators/distinctUntilKeyChanged":186,"../internal/operators/elementAt":187,"../internal/operators/endWith":188,"../internal/operators/every":189,"../internal/operators/exhaust":190,"../internal/operators/exhaustMap":191,"../internal/operators/expand":192,"../internal/operators/filter":193,"../internal/operators/finalize":194,"../internal/operators/find":195,"../internal/operators/findIndex":196,"../internal/operators/first":197,"../internal/operators/groupBy":198,"../internal/operators/ignoreElements":199,"../internal/operators/isEmpty":200,"../internal/operators/last":201,"../internal/operators/map":202,"../internal/operators/mapTo":203,"../internal/operators/materialize":204,"../internal/operators/max":205,"../internal/operators/merge":206,"../internal/operators/mergeAll":207,"../internal/operators/mergeMap":208,"../internal/operators/mergeMapTo":209,"../internal/operators/mergeScan":210,"../internal/operators/min":211,"../internal/operators/multicast":212,"../internal/operators/observeOn":213,"../internal/operators/onErrorResumeNext":214,"../internal/operators/pairwise":215,"../internal/operators/partition":216,"../internal/operators/pluck":217,"../internal/operators/publish":218,"../internal/operators/publishBehavior":219,"../internal/operators/publishLast":220,"../internal/operators/publishReplay":221,"../internal/operators/race":222,"../internal/operators/reduce":223,"../internal/operators/refCount":224,"../internal/operators/repeat":225,"../internal/operators/repeatWhen":226,"../internal/operators/retry":227,"../internal/operators/retryWhen":228,"../internal/operators/sample":229,"../internal/operators/sampleTime":230,"../internal/operators/scan":231,"../internal/operators/sequenceEqual":232,"../internal/operators/share":233,"../internal/operators/shareReplay":234,"../internal/operators/single":235,"../internal/operators/skip":236,"../internal/operators/skipLast":237,"../internal/operators/skipUntil":238,"../internal/operators/skipWhile":239,"../internal/operators/startWith":240,"../internal/operators/subscribeOn":241,"../internal/operators/switchAll":242,"../internal/operators/switchMap":243,"../internal/operators/switchMapTo":244,"../internal/operators/take":245,"../internal/operators/takeLast":246,"../internal/operators/takeUntil":247,"../internal/operators/takeWhile":248,"../internal/operators/tap":249,"../internal/operators/throttle":250,"../internal/operators/throttleTime":251,"../internal/operators/throwIfEmpty":252,"../internal/operators/timeInterval":253,"../internal/operators/timeout":254,"../internal/operators/timeoutWith":255,"../internal/operators/timestamp":256,"../internal/operators/toArray":257,"../internal/operators/window":258,"../internal/operators/windowCount":259,"../internal/operators/windowTime":260,"../internal/operators/windowToggle":261,"../internal/operators/windowWhen":262,"../internal/operators/withLatestFrom":263,"../internal/operators/zip":264,"../internal/operators/zipAll":265}],319:[function(require,module,exports){(function(global){/**
* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes
* (c) 2010-2020 Google LLC. https://angular.io/
* License: MIT
*/(function(factory){typeof define==='function'&&define.amd?define(factory):factory();})(function(){'use strict';/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Zone$1=function(global){var performance=global['performance'];function mark(name){performance&&performance['mark']&&performance['mark'](name);}function performanceMeasure(name,label){performance&&performance['measure']&&performance['measure'](name,label);}mark('Zone');// Initialize before it's accessed below.
// __Zone_symbol_prefix global can be used to override the default zone
// symbol prefix with a custom one if needed.
var symbolPrefix=global['__Zone_symbol_prefix']||'__zone_symbol__';function __symbol__(name){return symbolPrefix+name;}var checkDuplicate=global[__symbol__('forceDuplicateZoneCheck')]===true;if(global['Zone']){// if global['Zone'] already exists (maybe zone.js was already loaded or
// some other lib also registered a global object named Zone), we may need
// to throw an error, but sometimes user may not want this error.
// For example,
// we have two web pages, page1 includes zone.js, page2 doesn't.
// and the 1st time user load page1 and page2, everything work fine,
// but when user load page2 again, error occurs because global['Zone'] already exists.
// so we add a flag to let user choose whether to throw this error or not.
// By default, if existing Zone is from zone.js, we will not throw the error.
if(checkDuplicate||typeof global['Zone'].__symbol__!=='function'){throw new Error('Zone already loaded.');}else{return global['Zone'];}}var Zone=/** @class */function(){function Zone(parent,zoneSpec){this._parent=parent;this._name=zoneSpec?zoneSpec.name||'unnamed':'<root>';this._properties=zoneSpec&&zoneSpec.properties||{};this._zoneDelegate=new ZoneDelegate(this,this._parent&&this._parent._zoneDelegate,zoneSpec);}Zone.assertZonePatched=function(){if(global['Promise']!==patches['ZoneAwarePromise']){throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` '+'has been overwritten.\n'+'Most likely cause is that a Promise polyfill has been loaded '+'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. '+'If you must load one, do so before loading zone.js.)');}};Object.defineProperty(Zone,"root",{get:function get(){var zone=Zone.current;while(zone.parent){zone=zone.parent;}return zone;},enumerable:true,configurable:true});Object.defineProperty(Zone,"current",{get:function get(){return _currentZoneFrame.zone;},enumerable:true,configurable:true});Object.defineProperty(Zone,"currentTask",{get:function get(){return _currentTask;},enumerable:true,configurable:true});// tslint:disable-next-line:require-internal-with-underscore
Zone.__load_patch=function(name,fn){if(patches.hasOwnProperty(name)){if(checkDuplicate){throw Error('Already loaded patch: '+name);}}else if(!global['__Zone_disable_'+name]){var perfName='Zone:'+name;mark(perfName);patches[name]=fn(global,Zone,_api);performanceMeasure(perfName,perfName);}};Object.defineProperty(Zone.prototype,"parent",{get:function get(){return this._parent;},enumerable:true,configurable:true});Object.defineProperty(Zone.prototype,"name",{get:function get(){return this._name;},enumerable:true,configurable:true});Zone.prototype.get=function(key){var zone=this.getZoneWith(key);if(zone)return zone._properties[key];};Zone.prototype.getZoneWith=function(key){var current=this;while(current){if(current._properties.hasOwnProperty(key)){return current;}current=current._parent;}return null;};Zone.prototype.fork=function(zoneSpec){if(!zoneSpec)throw new Error('ZoneSpec required!');return this._zoneDelegate.fork(this,zoneSpec);};Zone.prototype.wrap=function(callback,source){if(typeof callback!=='function'){throw new Error('Expecting function got: '+callback);}var _callback=this._zoneDelegate.intercept(this,callback,source);var zone=this;return function(){return zone.runGuarded(_callback,this,arguments,source);};};Zone.prototype.run=function(callback,applyThis,applyArgs,source){_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{return this._zoneDelegate.invoke(this,callback,applyThis,applyArgs,source);}finally{_currentZoneFrame=_currentZoneFrame.parent;}};Zone.prototype.runGuarded=function(callback,applyThis,applyArgs,source){if(applyThis===void 0){applyThis=null;}_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{try{return this._zoneDelegate.invoke(this,callback,applyThis,applyArgs,source);}catch(error){if(this._zoneDelegate.handleError(this,error)){throw error;}}}finally{_currentZoneFrame=_currentZoneFrame.parent;}};Zone.prototype.runTask=function(task,applyThis,applyArgs){if(task.zone!=this){throw new Error('A task can only be run in the zone of creation! (Creation: '+(task.zone||NO_ZONE).name+'; Execution: '+this.name+')');}// https://github.com/angular/zone.js/issues/778, sometimes eventTask
// will run in notScheduled(canceled) state, we should not try to
// run such kind of task but just return
if(task.state===notScheduled&&(task.type===eventTask||task.type===macroTask)){return;}var reEntryGuard=task.state!=running;reEntryGuard&&task._transitionTo(running,scheduled);task.runCount++;var previousTask=_currentTask;_currentTask=task;_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{if(task.type==macroTask&&task.data&&!task.data.isPeriodic){task.cancelFn=undefined;}try{return this._zoneDelegate.invokeTask(this,task,applyThis,applyArgs);}catch(error){if(this._zoneDelegate.handleError(this,error)){throw error;}}}finally{// if the task's state is notScheduled or unknown, then it has already been cancelled
// we should not reset the state to scheduled
if(task.state!==notScheduled&&task.state!==unknown){if(task.type==eventTask||task.data&&task.data.isPeriodic){reEntryGuard&&task._transitionTo(scheduled,running);}else{task.runCount=0;this._updateTaskCount(task,-1);reEntryGuard&&task._transitionTo(notScheduled,running,notScheduled);}}_currentZoneFrame=_currentZoneFrame.parent;_currentTask=previousTask;}};Zone.prototype.scheduleTask=function(task){if(task.zone&&task.zone!==this){// check if the task was rescheduled, the newZone
// should not be the children of the original zone
var newZone=this;while(newZone){if(newZone===task.zone){throw Error("can not reschedule task to "+this.name+" which is descendants of the original zone "+task.zone.name);}newZone=newZone.parent;}}task._transitionTo(scheduling,notScheduled);var zoneDelegates=[];task._zoneDelegates=zoneDelegates;task._zone=this;try{task=this._zoneDelegate.scheduleTask(this,task);}catch(err){// should set task's state to unknown when scheduleTask throw error
// because the err may from reschedule, so the fromState maybe notScheduled
task._transitionTo(unknown,scheduling,notScheduled);// TODO: @JiaLiPassion, should we check the result from handleError?
this._zoneDelegate.handleError(this,err);throw err;}if(task._zoneDelegates===zoneDelegates){// we have to check because internally the delegate can reschedule the task.
this._updateTaskCount(task,1);}if(task.state==scheduling){task._transitionTo(scheduled,scheduling);}return task;};Zone.prototype.scheduleMicroTask=function(source,callback,data,customSchedule){return this.scheduleTask(new ZoneTask(microTask,source,callback,data,customSchedule,undefined));};Zone.prototype.scheduleMacroTask=function(source,callback,data,customSchedule,customCancel){return this.scheduleTask(new ZoneTask(macroTask,source,callback,data,customSchedule,customCancel));};Zone.prototype.scheduleEventTask=function(source,callback,data,customSchedule,customCancel){return this.scheduleTask(new ZoneTask(eventTask,source,callback,data,customSchedule,customCancel));};Zone.prototype.cancelTask=function(task){if(task.zone!=this)throw new Error('A task can only be cancelled in the zone of creation! (Creation: '+(task.zone||NO_ZONE).name+'; Execution: '+this.name+')');task._transitionTo(canceling,scheduled,running);try{this._zoneDelegate.cancelTask(this,task);}catch(err){// if error occurs when cancelTask, transit the state to unknown
task._transitionTo(unknown,canceling);this._zoneDelegate.handleError(this,err);throw err;}this._updateTaskCount(task,-1);task._transitionTo(notScheduled,canceling);task.runCount=0;return task;};Zone.prototype._updateTaskCount=function(task,count){var zoneDelegates=task._zoneDelegates;if(count==-1){task._zoneDelegates=null;}for(var i=0;i<zoneDelegates.length;i++){zoneDelegates[i]._updateTaskCount(task.type,count);}};return Zone;}();// tslint:disable-next-line:require-internal-with-underscore
Zone.__symbol__=__symbol__;var DELEGATE_ZS={name:'',onHasTask:function onHasTask(delegate,_,target,hasTaskState){return delegate.hasTask(target,hasTaskState);},onScheduleTask:function onScheduleTask(delegate,_,target,task){return delegate.scheduleTask(target,task);},onInvokeTask:function onInvokeTask(delegate,_,target,task,applyThis,applyArgs){return delegate.invokeTask(target,task,applyThis,applyArgs);},onCancelTask:function onCancelTask(delegate,_,target,task){return delegate.cancelTask(target,task);}};var ZoneDelegate=/** @class */function(){function ZoneDelegate(zone,parentDelegate,zoneSpec){this._taskCounts={'microTask':0,'macroTask':0,'eventTask':0};this.zone=zone;this._parentDelegate=parentDelegate;this._forkZS=zoneSpec&&(zoneSpec&&zoneSpec.onFork?zoneSpec:parentDelegate._forkZS);this._forkDlgt=zoneSpec&&(zoneSpec.onFork?parentDelegate:parentDelegate._forkDlgt);this._forkCurrZone=zoneSpec&&(zoneSpec.onFork?this.zone:parentDelegate._forkCurrZone);this._interceptZS=zoneSpec&&(zoneSpec.onIntercept?zoneSpec:parentDelegate._interceptZS);this._interceptDlgt=zoneSpec&&(zoneSpec.onIntercept?parentDelegate:parentDelegate._interceptDlgt);this._interceptCurrZone=zoneSpec&&(zoneSpec.onIntercept?this.zone:parentDelegate._interceptCurrZone);this._invokeZS=zoneSpec&&(zoneSpec.onInvoke?zoneSpec:parentDelegate._invokeZS);this._invokeDlgt=zoneSpec&&(zoneSpec.onInvoke?parentDelegate:parentDelegate._invokeDlgt);this._invokeCurrZone=zoneSpec&&(zoneSpec.onInvoke?this.zone:parentDelegate._invokeCurrZone);this._handleErrorZS=zoneSpec&&(zoneSpec.onHandleError?zoneSpec:parentDelegate._handleErrorZS);this._handleErrorDlgt=zoneSpec&&(zoneSpec.onHandleError?parentDelegate:parentDelegate._handleErrorDlgt);this._handleErrorCurrZone=zoneSpec&&(zoneSpec.onHandleError?this.zone:parentDelegate._handleErrorCurrZone);this._scheduleTaskZS=zoneSpec&&(zoneSpec.onScheduleTask?zoneSpec:parentDelegate._scheduleTaskZS);this._scheduleTaskDlgt=zoneSpec&&(zoneSpec.onScheduleTask?parentDelegate:parentDelegate._scheduleTaskDlgt);this._scheduleTaskCurrZone=zoneSpec&&(zoneSpec.onScheduleTask?this.zone:parentDelegate._scheduleTaskCurrZone);this._invokeTaskZS=zoneSpec&&(zoneSpec.onInvokeTask?zoneSpec:parentDelegate._invokeTaskZS);this._invokeTaskDlgt=zoneSpec&&(zoneSpec.onInvokeTask?parentDelegate:parentDelegate._invokeTaskDlgt);this._invokeTaskCurrZone=zoneSpec&&(zoneSpec.onInvokeTask?this.zone:parentDelegate._invokeTaskCurrZone);this._cancelTaskZS=zoneSpec&&(zoneSpec.onCancelTask?zoneSpec:parentDelegate._cancelTaskZS);this._cancelTaskDlgt=zoneSpec&&(zoneSpec.onCancelTask?parentDelegate:parentDelegate._cancelTaskDlgt);this._cancelTaskCurrZone=zoneSpec&&(zoneSpec.onCancelTask?this.zone:parentDelegate._cancelTaskCurrZone);this._hasTaskZS=null;this._hasTaskDlgt=null;this._hasTaskDlgtOwner=null;this._hasTaskCurrZone=null;var zoneSpecHasTask=zoneSpec&&zoneSpec.onHasTask;var parentHasTask=parentDelegate&&parentDelegate._hasTaskZS;if(zoneSpecHasTask||parentHasTask){// If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such
// a case all task related interceptors must go through this ZD. We can't short circuit it.
this._hasTaskZS=zoneSpecHasTask?zoneSpec:DELEGATE_ZS;this._hasTaskDlgt=parentDelegate;this._hasTaskDlgtOwner=this;this._hasTaskCurrZone=zone;if(!zoneSpec.onScheduleTask){this._scheduleTaskZS=DELEGATE_ZS;this._scheduleTaskDlgt=parentDelegate;this._scheduleTaskCurrZone=this.zone;}if(!zoneSpec.onInvokeTask){this._invokeTaskZS=DELEGATE_ZS;this._invokeTaskDlgt=parentDelegate;this._invokeTaskCurrZone=this.zone;}if(!zoneSpec.onCancelTask){this._cancelTaskZS=DELEGATE_ZS;this._cancelTaskDlgt=parentDelegate;this._cancelTaskCurrZone=this.zone;}}}ZoneDelegate.prototype.fork=function(targetZone,zoneSpec){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,targetZone,zoneSpec):new Zone(targetZone,zoneSpec);};ZoneDelegate.prototype.intercept=function(targetZone,callback,source){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,targetZone,callback,source):callback;};ZoneDelegate.prototype.invoke=function(targetZone,callback,applyThis,applyArgs,source){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,targetZone,callback,applyThis,applyArgs,source):callback.apply(applyThis,applyArgs);};ZoneDelegate.prototype.handleError=function(targetZone,error){return this._handleErrorZS?this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,targetZone,error):true;};ZoneDelegate.prototype.scheduleTask=function(targetZone,task){var returnTask=task;if(this._scheduleTaskZS){if(this._hasTaskZS){returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);}// clang-format off
returnTask=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,targetZone,task);// clang-format on
if(!returnTask)returnTask=task;}else{if(task.scheduleFn){task.scheduleFn(task);}else if(task.type==microTask){scheduleMicroTask(task);}else{throw new Error('Task is missing scheduleFn.');}}return returnTask;};ZoneDelegate.prototype.invokeTask=function(targetZone,task,applyThis,applyArgs){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,targetZone,task,applyThis,applyArgs):task.callback.apply(applyThis,applyArgs);};ZoneDelegate.prototype.cancelTask=function(targetZone,task){var value;if(this._cancelTaskZS){value=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,targetZone,task);}else{if(!task.cancelFn){throw Error('Task is not cancelable');}value=task.cancelFn(task);}return value;};ZoneDelegate.prototype.hasTask=function(targetZone,isEmpty){// hasTask should not throw error so other ZoneDelegate
// can still trigger hasTask callback
try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,targetZone,isEmpty);}catch(err){this.handleError(targetZone,err);}};// tslint:disable-next-line:require-internal-with-underscore
ZoneDelegate.prototype._updateTaskCount=function(type,count){var counts=this._taskCounts;var prev=counts[type];var next=counts[type]=prev+count;if(next<0){throw new Error('More tasks executed then were scheduled.');}if(prev==0||next==0){var isEmpty={microTask:counts['microTask']>0,macroTask:counts['macroTask']>0,eventTask:counts['eventTask']>0,change:type};this.hasTask(this.zone,isEmpty);}};return ZoneDelegate;}();var ZoneTask=/** @class */function(){function ZoneTask(type,source,callback,options,scheduleFn,cancelFn){// tslint:disable-next-line:require-internal-with-underscore
this._zone=null;this.runCount=0;// tslint:disable-next-line:require-internal-with-underscore
this._zoneDelegates=null;// tslint:disable-next-line:require-internal-with-underscore
this._state='notScheduled';this.type=type;this.source=source;this.data=options;this.scheduleFn=scheduleFn;this.cancelFn=cancelFn;if(!callback){throw new Error('callback is not defined');}this.callback=callback;var self=this;// TODO: @JiaLiPassion options should have interface
if(type===eventTask&&options&&options.useG){this.invoke=ZoneTask.invokeTask;}else{this.invoke=function(){return ZoneTask.invokeTask.call(global,self,this,arguments);};}}ZoneTask.invokeTask=function(task,target,args){if(!task){task=this;}_numberOfNestedTaskFrames++;try{task.runCount++;return task.zone.runTask(task,target,args);}finally{if(_numberOfNestedTaskFrames==1){drainMicroTaskQueue();}_numberOfNestedTaskFrames--;}};Object.defineProperty(ZoneTask.prototype,"zone",{get:function get(){return this._zone;},enumerable:true,configurable:true});Object.defineProperty(ZoneTask.prototype,"state",{get:function get(){return this._state;},enumerable:true,configurable:true});ZoneTask.prototype.cancelScheduleRequest=function(){this._transitionTo(notScheduled,scheduling);};// tslint:disable-next-line:require-internal-with-underscore
ZoneTask.prototype._transitionTo=function(toState,fromState1,fromState2){if(this._state===fromState1||this._state===fromState2){this._state=toState;if(toState==notScheduled){this._zoneDelegates=null;}}else{throw new Error(this.type+" '"+this.source+"': can not transition to '"+toState+"', expecting state '"+fromState1+"'"+(fromState2?' or \''+fromState2+'\'':'')+", was '"+this._state+"'.");}};ZoneTask.prototype.toString=function(){if(this.data&&typeof this.data.handleId!=='undefined'){return this.data.handleId.toString();}else{return Object.prototype.toString.call(this);}};// add toJSON method to prevent cyclic error when
// call JSON.stringify(zoneTask)
ZoneTask.prototype.toJSON=function(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount};};return ZoneTask;}();//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
///  MICROTASK QUEUE
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
var symbolSetTimeout=__symbol__('setTimeout');var symbolPromise=__symbol__('Promise');var symbolThen=__symbol__('then');var _microTaskQueue=[];var _isDrainingMicrotaskQueue=false;var nativeMicroTaskQueuePromise;function scheduleMicroTask(task){// if we are not running in any task, and there has not been anything scheduled
// we must bootstrap the initial task creation by manually scheduling the drain
if(_numberOfNestedTaskFrames===0&&_microTaskQueue.length===0){// We are not running in Task, so we need to kickstart the microtask queue.
if(!nativeMicroTaskQueuePromise){if(global[symbolPromise]){nativeMicroTaskQueuePromise=global[symbolPromise].resolve(0);}}if(nativeMicroTaskQueuePromise){var nativeThen=nativeMicroTaskQueuePromise[symbolThen];if(!nativeThen){// native Promise is not patchable, we need to use `then` directly
// issue 1078
nativeThen=nativeMicroTaskQueuePromise['then'];}nativeThen.call(nativeMicroTaskQueuePromise,drainMicroTaskQueue);}else{global[symbolSetTimeout](drainMicroTaskQueue,0);}}task&&_microTaskQueue.push(task);}function drainMicroTaskQueue(){if(!_isDrainingMicrotaskQueue){_isDrainingMicrotaskQueue=true;while(_microTaskQueue.length){var queue=_microTaskQueue;_microTaskQueue=[];for(var i=0;i<queue.length;i++){var task=queue[i];try{task.zone.runTask(task,null,null);}catch(error){_api.onUnhandledError(error);}}}_api.microtaskDrainDone();_isDrainingMicrotaskQueue=false;}}//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
///  BOOTSTRAP
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
var NO_ZONE={name:'NO ZONE'};var notScheduled='notScheduled',scheduling='scheduling',scheduled='scheduled',running='running',canceling='canceling',unknown='unknown';var microTask='microTask',macroTask='macroTask',eventTask='eventTask';var patches={};var _api={symbol:__symbol__,currentZoneFrame:function currentZoneFrame(){return _currentZoneFrame;},onUnhandledError:noop,microtaskDrainDone:noop,scheduleMicroTask:scheduleMicroTask,showUncaughtError:function showUncaughtError(){return!Zone[__symbol__('ignoreConsoleErrorUncaughtError')];},patchEventTarget:function patchEventTarget(){return[];},patchOnProperties:noop,patchMethod:function patchMethod(){return noop;},bindArguments:function bindArguments(){return[];},patchThen:function patchThen(){return noop;},patchMacroTask:function patchMacroTask(){return noop;},setNativePromise:function setNativePromise(NativePromise){// sometimes NativePromise.resolve static function
// is not ready yet, (such as core-js/es6.promise)
// so we need to check here.
if(NativePromise&&typeof NativePromise.resolve==='function'){nativeMicroTaskQueuePromise=NativePromise.resolve(0);}},patchEventPrototype:function patchEventPrototype(){return noop;},isIEOrEdge:function isIEOrEdge(){return false;},getGlobalObjects:function getGlobalObjects(){return undefined;},ObjectDefineProperty:function ObjectDefineProperty(){return noop;},ObjectGetOwnPropertyDescriptor:function ObjectGetOwnPropertyDescriptor(){return undefined;},ObjectCreate:function ObjectCreate(){return undefined;},ArraySlice:function ArraySlice(){return[];},patchClass:function patchClass(){return noop;},wrapWithCurrentZone:function wrapWithCurrentZone(){return noop;},filterProperties:function filterProperties(){return[];},attachOriginToPatched:function attachOriginToPatched(){return noop;},_redefineProperty:function _redefineProperty(){return noop;},patchCallbacks:function patchCallbacks(){return noop;}};var _currentZoneFrame={parent:null,zone:new Zone(null,null)};var _currentTask=null;var _numberOfNestedTaskFrames=0;function noop(){}performanceMeasure('Zone','Zone');return global['Zone']=Zone;}(typeof window!=='undefined'&&window||typeof self!=='undefined'&&self||global);/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch('ZoneAwarePromise',function(global,Zone,api){var ObjectGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var ObjectDefineProperty=Object.defineProperty;function readableObjectToString(obj){if(obj&&obj.toString===Object.prototype.toString){var className=obj.constructor&&obj.constructor.name;return(className?className:'')+': '+JSON.stringify(obj);}return obj?obj.toString():Object.prototype.toString.call(obj);}var __symbol__=api.symbol;var _uncaughtPromiseErrors=[];var isDisableWrappingUncaughtPromiseRejection=global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')]===true;var symbolPromise=__symbol__('Promise');var symbolThen=__symbol__('then');var creationTrace='__creationTrace__';api.onUnhandledError=function(e){if(api.showUncaughtError()){var rejection=e&&e.rejection;if(rejection){console.error('Unhandled Promise rejection:',rejection instanceof Error?rejection.message:rejection,'; Zone:',e.zone.name,'; Task:',e.task&&e.task.source,'; Value:',rejection,rejection instanceof Error?rejection.stack:undefined);}else{console.error(e);}}};api.microtaskDrainDone=function(){var _loop_1=function _loop_1(){var uncaughtPromiseError=_uncaughtPromiseErrors.shift();try{uncaughtPromiseError.zone.runGuarded(function(){throw uncaughtPromiseError;});}catch(error){handleUnhandledRejection(error);}};while(_uncaughtPromiseErrors.length){_loop_1();}};var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL=__symbol__('unhandledPromiseRejectionHandler');function handleUnhandledRejection(e){api.onUnhandledError(e);try{var handler=Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];if(typeof handler==='function'){handler.call(this,e);}}catch(err){}}function isThenable(value){return value&&value.then;}function forwardResolution(value){return value;}function forwardRejection(rejection){return ZoneAwarePromise.reject(rejection);}var symbolState=__symbol__('state');var symbolValue=__symbol__('value');var symbolFinally=__symbol__('finally');var symbolParentPromiseValue=__symbol__('parentPromiseValue');var symbolParentPromiseState=__symbol__('parentPromiseState');var source='Promise.then';var UNRESOLVED=null;var RESOLVED=true;var REJECTED=false;var REJECTED_NO_CATCH=0;function makeResolver(promise,state){return function(v){try{resolvePromise(promise,state,v);}catch(err){resolvePromise(promise,false,err);}// Do not return value or you will break the Promise spec.
};}var once=function once(){var wasCalled=false;return function wrapper(wrappedFunction){return function(){if(wasCalled){return;}wasCalled=true;wrappedFunction.apply(null,arguments);};};};var TYPE_ERROR='Promise resolved with itself';var CURRENT_TASK_TRACE_SYMBOL=__symbol__('currentTaskTrace');// Promise Resolution
function resolvePromise(promise,state,value){var onceWrapper=once();if(promise===value){throw new TypeError(TYPE_ERROR);}if(promise[symbolState]===UNRESOLVED){// should only get value.then once based on promise spec.
var then=null;try{if(_typeof(value)==='object'||typeof value==='function'){then=value&&value.then;}}catch(err){onceWrapper(function(){resolvePromise(promise,false,err);})();return promise;}// if (value instanceof ZoneAwarePromise) {
if(state!==REJECTED&&value instanceof ZoneAwarePromise&&value.hasOwnProperty(symbolState)&&value.hasOwnProperty(symbolValue)&&value[symbolState]!==UNRESOLVED){clearRejectedNoCatch(value);resolvePromise(promise,value[symbolState],value[symbolValue]);}else if(state!==REJECTED&&typeof then==='function'){try{then.call(value,onceWrapper(makeResolver(promise,state)),onceWrapper(makeResolver(promise,false)));}catch(err){onceWrapper(function(){resolvePromise(promise,false,err);})();}}else{promise[symbolState]=state;var queue=promise[symbolValue];promise[symbolValue]=value;if(promise[symbolFinally]===symbolFinally){// the promise is generated by Promise.prototype.finally
if(state===RESOLVED){// the state is resolved, should ignore the value
// and use parent promise value
promise[symbolState]=promise[symbolParentPromiseState];promise[symbolValue]=promise[symbolParentPromiseValue];}}// record task information in value when error occurs, so we can
// do some additional work such as render longStackTrace
if(state===REJECTED&&value instanceof Error){// check if longStackTraceZone is here
var trace=Zone.currentTask&&Zone.currentTask.data&&Zone.currentTask.data[creationTrace];if(trace){// only keep the long stack trace into error when in longStackTraceZone
ObjectDefineProperty(value,CURRENT_TASK_TRACE_SYMBOL,{configurable:true,enumerable:false,writable:true,value:trace});}}for(var i=0;i<queue.length;){scheduleResolveOrReject(promise,queue[i++],queue[i++],queue[i++],queue[i++]);}if(queue.length==0&&state==REJECTED){promise[symbolState]=REJECTED_NO_CATCH;var uncaughtPromiseError=value;if(!isDisableWrappingUncaughtPromiseRejection){// If disable wrapping uncaught promise reject
// and the rejected value is an Error object,
// use the value instead of wrapping it.
try{// Here we throws a new Error to print more readable error log
// and if the value is not an error, zone.js builds an `Error`
// Object here to attach the stack information.
throw new Error('Uncaught (in promise): '+readableObjectToString(value)+(value&&value.stack?'\n'+value.stack:''));}catch(err){uncaughtPromiseError=err;}}uncaughtPromiseError.rejection=value;uncaughtPromiseError.promise=promise;uncaughtPromiseError.zone=Zone.current;uncaughtPromiseError.task=Zone.currentTask;_uncaughtPromiseErrors.push(uncaughtPromiseError);api.scheduleMicroTask();// to make sure that it is running
}}}// Resolving an already resolved promise is a noop.
return promise;}var REJECTION_HANDLED_HANDLER=__symbol__('rejectionHandledHandler');function clearRejectedNoCatch(promise){if(promise[symbolState]===REJECTED_NO_CATCH){// if the promise is rejected no catch status
// and queue.length > 0, means there is a error handler
// here to handle the rejected promise, we should trigger
// windows.rejectionhandled eventHandler or nodejs rejectionHandled
// eventHandler
try{var handler=Zone[REJECTION_HANDLED_HANDLER];if(handler&&typeof handler==='function'){handler.call(this,{rejection:promise[symbolValue],promise:promise});}}catch(err){}promise[symbolState]=REJECTED;for(var i=0;i<_uncaughtPromiseErrors.length;i++){if(promise===_uncaughtPromiseErrors[i].promise){_uncaughtPromiseErrors.splice(i,1);}}}}function scheduleResolveOrReject(promise,zone,chainPromise,onFulfilled,onRejected){clearRejectedNoCatch(promise);var promiseState=promise[symbolState];var delegate=promiseState?typeof onFulfilled==='function'?onFulfilled:forwardResolution:typeof onRejected==='function'?onRejected:forwardRejection;zone.scheduleMicroTask(source,function(){try{var parentPromiseValue=promise[symbolValue];var isFinallyPromise=!!chainPromise&&symbolFinally===chainPromise[symbolFinally];if(isFinallyPromise){// if the promise is generated from finally call, keep parent promise's state and value
chainPromise[symbolParentPromiseValue]=parentPromiseValue;chainPromise[symbolParentPromiseState]=promiseState;}// should not pass value to finally callback
var value=zone.run(delegate,undefined,isFinallyPromise&&delegate!==forwardRejection&&delegate!==forwardResolution?[]:[parentPromiseValue]);resolvePromise(chainPromise,true,value);}catch(error){// if error occurs, should always return this error
resolvePromise(chainPromise,false,error);}},chainPromise);}var ZONE_AWARE_PROMISE_TO_STRING='function ZoneAwarePromise() { [native code] }';var noop=function noop(){};var ZoneAwarePromise=/** @class */function(){function ZoneAwarePromise(executor){var promise=this;if(!(promise instanceof ZoneAwarePromise)){throw new Error('Must be an instanceof Promise.');}promise[symbolState]=UNRESOLVED;promise[symbolValue]=[];// queue;
try{executor&&executor(makeResolver(promise,RESOLVED),makeResolver(promise,REJECTED));}catch(error){resolvePromise(promise,false,error);}}ZoneAwarePromise.toString=function(){return ZONE_AWARE_PROMISE_TO_STRING;};ZoneAwarePromise.resolve=function(value){return resolvePromise(new this(null),RESOLVED,value);};ZoneAwarePromise.reject=function(error){return resolvePromise(new this(null),REJECTED,error);};ZoneAwarePromise.race=function(values){var resolve;var reject;var promise=new this(function(res,rej){resolve=res;reject=rej;});function onResolve(value){resolve(value);}function onReject(error){reject(error);}for(var _i=0,values_1=values;_i<values_1.length;_i++){var value=values_1[_i];if(!isThenable(value)){value=this.resolve(value);}value.then(onResolve,onReject);}return promise;};ZoneAwarePromise.all=function(values){return ZoneAwarePromise.allWithCallback(values);};ZoneAwarePromise.allSettled=function(values){var P=this&&this.prototype instanceof ZoneAwarePromise?this:ZoneAwarePromise;return P.allWithCallback(values,{thenCallback:function thenCallback(value){return{status:'fulfilled',value:value};},errorCallback:function errorCallback(err){return{status:'rejected',reason:err};}});};ZoneAwarePromise.allWithCallback=function(values,callback){var resolve;var reject;var promise=new this(function(res,rej){resolve=res;reject=rej;});// Start at 2 to prevent prematurely resolving if .then is called immediately.
var unresolvedCount=2;var valueIndex=0;var resolvedValues=[];var _loop_2=function _loop_2(value){if(!isThenable(value)){value=this_1.resolve(value);}var curValueIndex=valueIndex;try{value.then(function(value){resolvedValues[curValueIndex]=callback?callback.thenCallback(value):value;unresolvedCount--;if(unresolvedCount===0){resolve(resolvedValues);}},function(err){if(!callback){reject(err);}else{resolvedValues[curValueIndex]=callback.errorCallback(err);unresolvedCount--;if(unresolvedCount===0){resolve(resolvedValues);}}});}catch(thenErr){reject(thenErr);}unresolvedCount++;valueIndex++;};var this_1=this;for(var _i=0,values_2=values;_i<values_2.length;_i++){var value=values_2[_i];_loop_2(value);}// Make the unresolvedCount zero-based again.
unresolvedCount-=2;if(unresolvedCount===0){resolve(resolvedValues);}return promise;};Object.defineProperty(ZoneAwarePromise.prototype,Symbol.toStringTag,{get:function get(){return'Promise';},enumerable:true,configurable:true});Object.defineProperty(ZoneAwarePromise.prototype,Symbol.species,{get:function get(){return ZoneAwarePromise;},enumerable:true,configurable:true});ZoneAwarePromise.prototype.then=function(onFulfilled,onRejected){var C=this.constructor[Symbol.species];if(!C||typeof C!=='function'){C=this.constructor||ZoneAwarePromise;}var chainPromise=new C(noop);var zone=Zone.current;if(this[symbolState]==UNRESOLVED){this[symbolValue].push(zone,chainPromise,onFulfilled,onRejected);}else{scheduleResolveOrReject(this,zone,chainPromise,onFulfilled,onRejected);}return chainPromise;};ZoneAwarePromise.prototype["catch"]=function(onRejected){return this.then(null,onRejected);};ZoneAwarePromise.prototype["finally"]=function(onFinally){var C=this.constructor[Symbol.species];if(!C||typeof C!=='function'){C=ZoneAwarePromise;}var chainPromise=new C(noop);chainPromise[symbolFinally]=symbolFinally;var zone=Zone.current;if(this[symbolState]==UNRESOLVED){this[symbolValue].push(zone,chainPromise,onFinally,onFinally);}else{scheduleResolveOrReject(this,zone,chainPromise,onFinally,onFinally);}return chainPromise;};return ZoneAwarePromise;}();// Protect against aggressive optimizers dropping seemingly unused properties.
// E.g. Closure Compiler in advanced mode.
ZoneAwarePromise['resolve']=ZoneAwarePromise.resolve;ZoneAwarePromise['reject']=ZoneAwarePromise.reject;ZoneAwarePromise['race']=ZoneAwarePromise.race;ZoneAwarePromise['all']=ZoneAwarePromise.all;var NativePromise=global[symbolPromise]=global['Promise'];var ZONE_AWARE_PROMISE=Zone.__symbol__('ZoneAwarePromise');var desc=ObjectGetOwnPropertyDescriptor(global,'Promise');if(!desc||desc.configurable){desc&&delete desc.writable;desc&&delete desc.value;if(!desc){desc={configurable:true,enumerable:true};}desc.get=function(){// if we already set ZoneAwarePromise, use patched one
// otherwise return native one.
return global[ZONE_AWARE_PROMISE]?global[ZONE_AWARE_PROMISE]:global[symbolPromise];};desc.set=function(NewNativePromise){if(NewNativePromise===ZoneAwarePromise){// if the NewNativePromise is ZoneAwarePromise
// save to global
global[ZONE_AWARE_PROMISE]=NewNativePromise;}else{// if the NewNativePromise is not ZoneAwarePromise
// for example: after load zone.js, some library just
// set es6-promise to global, if we set it to global
// directly, assertZonePatched will fail and angular
// will not loaded, so we just set the NewNativePromise
// to global[symbolPromise], so the result is just like
// we load ES6 Promise before zone.js
global[symbolPromise]=NewNativePromise;if(!NewNativePromise.prototype[symbolThen]){patchThen(NewNativePromise);}api.setNativePromise(NewNativePromise);}};ObjectDefineProperty(global,'Promise',desc);}global['Promise']=ZoneAwarePromise;var symbolThenPatched=__symbol__('thenPatched');function patchThen(Ctor){var proto=Ctor.prototype;var prop=ObjectGetOwnPropertyDescriptor(proto,'then');if(prop&&(prop.writable===false||!prop.configurable)){// check Ctor.prototype.then propertyDescriptor is writable or not
// in meteor env, writable is false, we should ignore such case
return;}var originalThen=proto.then;// Keep a reference to the original method.
proto[symbolThen]=originalThen;Ctor.prototype.then=function(onResolve,onReject){var _this=this;var wrapped=new ZoneAwarePromise(function(resolve,reject){originalThen.call(_this,resolve,reject);});return wrapped.then(onResolve,onReject);};Ctor[symbolThenPatched]=true;}api.patchThen=patchThen;function zoneify(fn){return function(){var resultPromise=fn.apply(this,arguments);if(resultPromise instanceof ZoneAwarePromise){return resultPromise;}var ctor=resultPromise.constructor;if(!ctor[symbolThenPatched]){patchThen(ctor);}return resultPromise;};}if(NativePromise){patchThen(NativePromise);var fetch_1=global['fetch'];if(typeof fetch_1=='function'){global[api.symbol('fetch')]=fetch_1;global['fetch']=zoneify(fetch_1);}}// This is not part of public API, but it is useful for tests, so we expose it.
Promise[Zone.__symbol__('uncaughtPromiseErrors')]=_uncaughtPromiseErrors;return ZoneAwarePromise;});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /**
     * Suppress closure compiler errors about unknown 'Zone' variable
     * @fileoverview
     * @suppress {undefinedVars,globalThis,missingRequire}
     */ /// <reference types="node"/>
// issue #989, to reduce bundle size, use short name
/** Object.getOwnPropertyDescriptor */var ObjectGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;/** Object.defineProperty */var ObjectDefineProperty=Object.defineProperty;/** Object.getPrototypeOf */var ObjectGetPrototypeOf=Object.getPrototypeOf;/** Object.create */var ObjectCreate=Object.create;/** Array.prototype.slice */var ArraySlice=Array.prototype.slice;/** addEventListener string const */var ADD_EVENT_LISTENER_STR='addEventListener';/** removeEventListener string const */var REMOVE_EVENT_LISTENER_STR='removeEventListener';/** zoneSymbol addEventListener */var ZONE_SYMBOL_ADD_EVENT_LISTENER=Zone.__symbol__(ADD_EVENT_LISTENER_STR);/** zoneSymbol removeEventListener */var ZONE_SYMBOL_REMOVE_EVENT_LISTENER=Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);/** true string const */var TRUE_STR='true';/** false string const */var FALSE_STR='false';/** Zone symbol prefix string const. */var ZONE_SYMBOL_PREFIX=Zone.__symbol__('');function wrapWithCurrentZone(callback,source){return Zone.current.wrap(callback,source);}function scheduleMacroTaskWithCurrentZone(source,callback,data,customSchedule,customCancel){return Zone.current.scheduleMacroTask(source,callback,data,customSchedule,customCancel);}var zoneSymbol=Zone.__symbol__;var isWindowExists=typeof window!=='undefined';var internalWindow=isWindowExists?window:undefined;var _global=isWindowExists&&internalWindow||(typeof self==="undefined"?"undefined":_typeof(self))==='object'&&self||global;var REMOVE_ATTRIBUTE='removeAttribute';var NULL_ON_PROP_VALUE=[null];function bindArguments(args,source){for(var i=args.length-1;i>=0;i--){if(typeof args[i]==='function'){args[i]=wrapWithCurrentZone(args[i],source+'_'+i);}}return args;}function patchPrototype(prototype,fnNames){var source=prototype.constructor['name'];var _loop_3=function _loop_3(i){var name_1=fnNames[i];var delegate=prototype[name_1];if(delegate){var prototypeDesc=ObjectGetOwnPropertyDescriptor(prototype,name_1);if(!isPropertyWritable(prototypeDesc)){return"continue";}prototype[name_1]=function(delegate){var patched=function patched(){return delegate.apply(this,bindArguments(arguments,source+'.'+name_1));};attachOriginToPatched(patched,delegate);return patched;}(delegate);}};for(var i=0;i<fnNames.length;i++){_loop_3(i);}}function isPropertyWritable(propertyDesc){if(!propertyDesc){return true;}if(propertyDesc.writable===false){return false;}return!(typeof propertyDesc.get==='function'&&typeof propertyDesc.set==='undefined');}var isWebWorker=typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope;// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
// this code.
var isNode=!('nw'in _global)&&typeof _global.process!=='undefined'&&{}.toString.call(_global.process)==='[object process]';var isBrowser=!isNode&&!isWebWorker&&!!(isWindowExists&&internalWindow['HTMLElement']);// we are in electron of nw, so we are both browser and nodejs
// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify
// this code.
var isMix=typeof _global.process!=='undefined'&&{}.toString.call(_global.process)==='[object process]'&&!isWebWorker&&!!(isWindowExists&&internalWindow['HTMLElement']);var zoneSymbolEventNames={};var wrapFn=function wrapFn(event){// https://github.com/angular/zone.js/issues/911, in IE, sometimes
// event will be undefined, so we need to use window.event
event=event||_global.event;if(!event){return;}var eventNameSymbol=zoneSymbolEventNames[event.type];if(!eventNameSymbol){eventNameSymbol=zoneSymbolEventNames[event.type]=zoneSymbol('ON_PROPERTY'+event.type);}var target=this||event.target||_global;var listener=target[eventNameSymbol];var result;if(isBrowser&&target===internalWindow&&event.type==='error'){// window.onerror have different signiture
// https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror
// and onerror callback will prevent default when callback return true
var errorEvent=event;result=listener&&listener.call(this,errorEvent.message,errorEvent.filename,errorEvent.lineno,errorEvent.colno,errorEvent.error);if(result===true){event.preventDefault();}}else{result=listener&&listener.apply(this,arguments);if(result!=undefined&&!result){event.preventDefault();}}return result;};function patchProperty(obj,prop,prototype){var desc=ObjectGetOwnPropertyDescriptor(obj,prop);if(!desc&&prototype){// when patch window object, use prototype to check prop exist or not
var prototypeDesc=ObjectGetOwnPropertyDescriptor(prototype,prop);if(prototypeDesc){desc={enumerable:true,configurable:true};}}// if the descriptor not exists or is not configurable
// just return
if(!desc||!desc.configurable){return;}var onPropPatchedSymbol=zoneSymbol('on'+prop+'patched');if(obj.hasOwnProperty(onPropPatchedSymbol)&&obj[onPropPatchedSymbol]){return;}// A property descriptor cannot have getter/setter and be writable
// deleting the writable and value properties avoids this error:
//
// TypeError: property descriptors must not specify a value or be writable when a
// getter or setter has been specified
delete desc.writable;delete desc.value;var originalDescGet=desc.get;var originalDescSet=desc.set;// substr(2) cuz 'onclick' -> 'click', etc
var eventName=prop.substr(2);var eventNameSymbol=zoneSymbolEventNames[eventName];if(!eventNameSymbol){eventNameSymbol=zoneSymbolEventNames[eventName]=zoneSymbol('ON_PROPERTY'+eventName);}desc.set=function(newValue){// in some of windows's onproperty callback, this is undefined
// so we need to check it
var target=this;if(!target&&obj===_global){target=_global;}if(!target){return;}var previousValue=target[eventNameSymbol];if(previousValue){target.removeEventListener(eventName,wrapFn);}// issue #978, when onload handler was added before loading zone.js
// we should remove it with originalDescSet
if(originalDescSet){originalDescSet.apply(target,NULL_ON_PROP_VALUE);}if(typeof newValue==='function'){target[eventNameSymbol]=newValue;target.addEventListener(eventName,wrapFn,false);}else{target[eventNameSymbol]=null;}};// The getter would return undefined for unassigned properties but the default value of an
// unassigned property is null
desc.get=function(){// in some of windows's onproperty callback, this is undefined
// so we need to check it
var target=this;if(!target&&obj===_global){target=_global;}if(!target){return null;}var listener=target[eventNameSymbol];if(listener){return listener;}else if(originalDescGet){// result will be null when use inline event attribute,
// such as <button onclick="func();">OK</button>
// because the onclick function is internal raw uncompiled handler
// the onclick will be evaluated when first time event was triggered or
// the property is accessed, https://github.com/angular/zone.js/issues/525
// so we should use original native get to retrieve the handler
var value=originalDescGet&&originalDescGet.call(this);if(value){desc.set.call(this,value);if(typeof target[REMOVE_ATTRIBUTE]==='function'){target.removeAttribute(prop);}return value;}}return null;};ObjectDefineProperty(obj,prop,desc);obj[onPropPatchedSymbol]=true;}function patchOnProperties(obj,properties,prototype){if(properties){for(var i=0;i<properties.length;i++){patchProperty(obj,'on'+properties[i],prototype);}}else{var onProperties=[];for(var prop in obj){if(prop.substr(0,2)=='on'){onProperties.push(prop);}}for(var j=0;j<onProperties.length;j++){patchProperty(obj,onProperties[j],prototype);}}}var originalInstanceKey=zoneSymbol('originalInstance');// wrap some native API on `window`
function patchClass(className){var OriginalClass=_global[className];if(!OriginalClass)return;// keep original class in global
_global[zoneSymbol(className)]=OriginalClass;_global[className]=function(){var a=bindArguments(arguments,className);switch(a.length){case 0:this[originalInstanceKey]=new OriginalClass();break;case 1:this[originalInstanceKey]=new OriginalClass(a[0]);break;case 2:this[originalInstanceKey]=new OriginalClass(a[0],a[1]);break;case 3:this[originalInstanceKey]=new OriginalClass(a[0],a[1],a[2]);break;case 4:this[originalInstanceKey]=new OriginalClass(a[0],a[1],a[2],a[3]);break;default:throw new Error('Arg list too long.');}};// attach original delegate to patched function
attachOriginToPatched(_global[className],OriginalClass);var instance=new OriginalClass(function(){});var prop;for(prop in instance){// https://bugs.webkit.org/show_bug.cgi?id=44721
if(className==='XMLHttpRequest'&&prop==='responseBlob')continue;(function(prop){if(typeof instance[prop]==='function'){_global[className].prototype[prop]=function(){return this[originalInstanceKey][prop].apply(this[originalInstanceKey],arguments);};}else{ObjectDefineProperty(_global[className].prototype,prop,{set:function set(fn){if(typeof fn==='function'){this[originalInstanceKey][prop]=wrapWithCurrentZone(fn,className+'.'+prop);// keep callback in wrapped function so we can
// use it in Function.prototype.toString to return
// the native one.
attachOriginToPatched(this[originalInstanceKey][prop],fn);}else{this[originalInstanceKey][prop]=fn;}},get:function get(){return this[originalInstanceKey][prop];}});}})(prop);}for(prop in OriginalClass){if(prop!=='prototype'&&OriginalClass.hasOwnProperty(prop)){_global[className][prop]=OriginalClass[prop];}}}function copySymbolProperties(src,dest){if(typeof Object.getOwnPropertySymbols!=='function'){return;}var symbols=Object.getOwnPropertySymbols(src);symbols.forEach(function(symbol){var desc=Object.getOwnPropertyDescriptor(src,symbol);Object.defineProperty(dest,symbol,{get:function get(){return src[symbol];},set:function set(value){if(desc&&(!desc.writable||typeof desc.set!=='function')){// if src[symbol] is not writable or not have a setter, just return
return;}src[symbol]=value;},enumerable:desc?desc.enumerable:true,configurable:desc?desc.configurable:true});});}var shouldCopySymbolProperties=false;function patchMethod(target,name,patchFn){var proto=target;while(proto&&!proto.hasOwnProperty(name)){proto=ObjectGetPrototypeOf(proto);}if(!proto&&target[name]){// somehow we did not find it, but we can see it. This happens on IE for Window properties.
proto=target;}var delegateName=zoneSymbol(name);var delegate=null;if(proto&&!(delegate=proto[delegateName])){delegate=proto[delegateName]=proto[name];// check whether proto[name] is writable
// some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob
var desc=proto&&ObjectGetOwnPropertyDescriptor(proto,name);if(isPropertyWritable(desc)){var patchDelegate_1=patchFn(delegate,delegateName,name);proto[name]=function(){return patchDelegate_1(this,arguments);};attachOriginToPatched(proto[name],delegate);if(shouldCopySymbolProperties){copySymbolProperties(delegate,proto[name]);}}}return delegate;}// TODO: @JiaLiPassion, support cancel task later if necessary
function patchMacroTask(obj,funcName,metaCreator){var setNative=null;function scheduleTask(task){var data=task.data;data.args[data.cbIdx]=function(){task.invoke.apply(this,arguments);};setNative.apply(data.target,data.args);return task;}setNative=patchMethod(obj,funcName,function(delegate){return function(self,args){var meta=metaCreator(self,args);if(meta.cbIdx>=0&&typeof args[meta.cbIdx]==='function'){return scheduleMacroTaskWithCurrentZone(meta.name,args[meta.cbIdx],meta,scheduleTask);}else{// cause an error by calling it directly.
return delegate.apply(self,args);}};});}function attachOriginToPatched(patched,original){patched[zoneSymbol('OriginalDelegate')]=original;}var isDetectedIEOrEdge=false;var ieOrEdge=false;function isIE(){try{var ua=internalWindow.navigator.userAgent;if(ua.indexOf('MSIE ')!==-1||ua.indexOf('Trident/')!==-1){return true;}}catch(error){}return false;}function isIEOrEdge(){if(isDetectedIEOrEdge){return ieOrEdge;}isDetectedIEOrEdge=true;try{var ua=internalWindow.navigator.userAgent;if(ua.indexOf('MSIE ')!==-1||ua.indexOf('Trident/')!==-1||ua.indexOf('Edge/')!==-1){ieOrEdge=true;}}catch(error){}return ieOrEdge;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // override Function.prototype.toString to make zone.js patched function
// look like native function
Zone.__load_patch('toString',function(global){// patch Func.prototype.toString to let them look like native
var originalFunctionToString=Function.prototype.toString;var ORIGINAL_DELEGATE_SYMBOL=zoneSymbol('OriginalDelegate');var PROMISE_SYMBOL=zoneSymbol('Promise');var ERROR_SYMBOL=zoneSymbol('Error');var newFunctionToString=function toString(){if(typeof this==='function'){var originalDelegate=this[ORIGINAL_DELEGATE_SYMBOL];if(originalDelegate){if(typeof originalDelegate==='function'){return originalFunctionToString.call(originalDelegate);}else{return Object.prototype.toString.call(originalDelegate);}}if(this===Promise){var nativePromise=global[PROMISE_SYMBOL];if(nativePromise){return originalFunctionToString.call(nativePromise);}}if(this===Error){var nativeError=global[ERROR_SYMBOL];if(nativeError){return originalFunctionToString.call(nativeError);}}}return originalFunctionToString.call(this);};newFunctionToString[ORIGINAL_DELEGATE_SYMBOL]=originalFunctionToString;Function.prototype.toString=newFunctionToString;// patch Object.prototype.toString to let them look like native
var originalObjectToString=Object.prototype.toString;var PROMISE_OBJECT_TO_STRING='[object Promise]';Object.prototype.toString=function(){if(this instanceof Promise){return PROMISE_OBJECT_TO_STRING;}return originalObjectToString.call(this);};});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var passiveSupported=false;if(typeof window!=='undefined'){try{var options=Object.defineProperty({},'passive',{get:function get(){passiveSupported=true;}});window.addEventListener('test',options,options);window.removeEventListener('test',options,options);}catch(err){passiveSupported=false;}}// an identifier to tell ZoneTask do not create a new invoke closure
var OPTIMIZED_ZONE_EVENT_TASK_DATA={useG:true};var zoneSymbolEventNames$1={};var globalSources={};var EVENT_NAME_SYMBOL_REGX=new RegExp('^'+ZONE_SYMBOL_PREFIX+'(\\w+)(true|false)$');var IMMEDIATE_PROPAGATION_SYMBOL=zoneSymbol('propagationStopped');function prepareEventNames(eventName,eventNameToString){var falseEventName=(eventNameToString?eventNameToString(eventName):eventName)+FALSE_STR;var trueEventName=(eventNameToString?eventNameToString(eventName):eventName)+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames$1[eventName]={};zoneSymbolEventNames$1[eventName][FALSE_STR]=symbol;zoneSymbolEventNames$1[eventName][TRUE_STR]=symbolCapture;}function patchEventTarget(_global,apis,patchOptions){var ADD_EVENT_LISTENER=patchOptions&&patchOptions.add||ADD_EVENT_LISTENER_STR;var REMOVE_EVENT_LISTENER=patchOptions&&patchOptions.rm||REMOVE_EVENT_LISTENER_STR;var LISTENERS_EVENT_LISTENER=patchOptions&&patchOptions.listeners||'eventListeners';var REMOVE_ALL_LISTENERS_EVENT_LISTENER=patchOptions&&patchOptions.rmAll||'removeAllListeners';var zoneSymbolAddEventListener=zoneSymbol(ADD_EVENT_LISTENER);var ADD_EVENT_LISTENER_SOURCE='.'+ADD_EVENT_LISTENER+':';var PREPEND_EVENT_LISTENER='prependListener';var PREPEND_EVENT_LISTENER_SOURCE='.'+PREPEND_EVENT_LISTENER+':';var invokeTask=function invokeTask(task,target,event){// for better performance, check isRemoved which is set
// by removeEventListener
if(task.isRemoved){return;}var delegate=task.callback;if(_typeof(delegate)==='object'&&delegate.handleEvent){// create the bind version of handleEvent when invoke
task.callback=function(event){return delegate.handleEvent(event);};task.originalDelegate=delegate;}// invoke static task.invoke
task.invoke(task,target,[event]);var options=task.options;if(options&&_typeof(options)==='object'&&options.once){// if options.once is true, after invoke once remove listener here
// only browser need to do this, nodejs eventEmitter will cal removeListener
// inside EventEmitter.once
var delegate_1=task.originalDelegate?task.originalDelegate:task.callback;target[REMOVE_EVENT_LISTENER].call(target,event.type,delegate_1,options);}};// global shared zoneAwareCallback to handle all event callback with capture = false
var globalZoneAwareCallback=function globalZoneAwareCallback(event){// https://github.com/angular/zone.js/issues/911, in IE, sometimes
// event will be undefined, so we need to use window.event
event=event||_global.event;if(!event){return;}// event.target is needed for Samsung TV and SourceBuffer
// || global is needed https://github.com/angular/zone.js/issues/190
var target=this||event.target||_global;var tasks=target[zoneSymbolEventNames$1[event.type][FALSE_STR]];if(tasks){// invoke all tasks which attached to current target with given event.type and capture = false
// for performance concern, if task.length === 1, just invoke
if(tasks.length===1){invokeTask(tasks[0],target,event);}else{// https://github.com/angular/zone.js/issues/836
// copy the tasks array before invoke, to avoid
// the callback will remove itself or other listener
var copyTasks=tasks.slice();for(var i=0;i<copyTasks.length;i++){if(event&&event[IMMEDIATE_PROPAGATION_SYMBOL]===true){break;}invokeTask(copyTasks[i],target,event);}}}};// global shared zoneAwareCallback to handle all event callback with capture = true
var globalZoneAwareCaptureCallback=function globalZoneAwareCaptureCallback(event){// https://github.com/angular/zone.js/issues/911, in IE, sometimes
// event will be undefined, so we need to use window.event
event=event||_global.event;if(!event){return;}// event.target is needed for Samsung TV and SourceBuffer
// || global is needed https://github.com/angular/zone.js/issues/190
var target=this||event.target||_global;var tasks=target[zoneSymbolEventNames$1[event.type][TRUE_STR]];if(tasks){// invoke all tasks which attached to current target with given event.type and capture = false
// for performance concern, if task.length === 1, just invoke
if(tasks.length===1){invokeTask(tasks[0],target,event);}else{// https://github.com/angular/zone.js/issues/836
// copy the tasks array before invoke, to avoid
// the callback will remove itself or other listener
var copyTasks=tasks.slice();for(var i=0;i<copyTasks.length;i++){if(event&&event[IMMEDIATE_PROPAGATION_SYMBOL]===true){break;}invokeTask(copyTasks[i],target,event);}}}};function patchEventTargetMethods(obj,patchOptions){if(!obj){return false;}var useGlobalCallback=true;if(patchOptions&&patchOptions.useG!==undefined){useGlobalCallback=patchOptions.useG;}var validateHandler=patchOptions&&patchOptions.vh;var checkDuplicate=true;if(patchOptions&&patchOptions.chkDup!==undefined){checkDuplicate=patchOptions.chkDup;}var returnTarget=false;if(patchOptions&&patchOptions.rt!==undefined){returnTarget=patchOptions.rt;}var proto=obj;while(proto&&!proto.hasOwnProperty(ADD_EVENT_LISTENER)){proto=ObjectGetPrototypeOf(proto);}if(!proto&&obj[ADD_EVENT_LISTENER]){// somehow we did not find it, but we can see it. This happens on IE for Window properties.
proto=obj;}if(!proto){return false;}if(proto[zoneSymbolAddEventListener]){return false;}var eventNameToString=patchOptions&&patchOptions.eventNameToString;// a shared global taskData to pass data for scheduleEventTask
// so we do not need to create a new object just for pass some data
var taskData={};var nativeAddEventListener=proto[zoneSymbolAddEventListener]=proto[ADD_EVENT_LISTENER];var nativeRemoveEventListener=proto[zoneSymbol(REMOVE_EVENT_LISTENER)]=proto[REMOVE_EVENT_LISTENER];var nativeListeners=proto[zoneSymbol(LISTENERS_EVENT_LISTENER)]=proto[LISTENERS_EVENT_LISTENER];var nativeRemoveAllListeners=proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)]=proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];var nativePrependEventListener;if(patchOptions&&patchOptions.prepend){nativePrependEventListener=proto[zoneSymbol(patchOptions.prepend)]=proto[patchOptions.prepend];}/**
             * This util function will build an option object with passive option
             * to handle all possible input from the user.
             */function buildEventListenerOptions(options,passive){if(!passiveSupported&&_typeof(options)==='object'&&options){// doesn't support passive but user want to pass an object as options.
// this will not work on some old browser, so we just pass a boolean
// as useCapture parameter
return!!options.capture;}if(!passiveSupported||!passive){return options;}if(typeof options==='boolean'){return{capture:options,passive:true};}if(!options){return{passive:true};}if(_typeof(options)==='object'&&options.passive!==false){return Object.assign(Object.assign({},options),{passive:true});}return options;}var customScheduleGlobal=function customScheduleGlobal(task){// if there is already a task for the eventName + capture,
// just return, because we use the shared globalZoneAwareCallback here.
if(taskData.isExisting){return;}return nativeAddEventListener.call(taskData.target,taskData.eventName,taskData.capture?globalZoneAwareCaptureCallback:globalZoneAwareCallback,taskData.options);};var customCancelGlobal=function customCancelGlobal(task){// if task is not marked as isRemoved, this call is directly
// from Zone.prototype.cancelTask, we should remove the task
// from tasksList of target first
if(!task.isRemoved){var symbolEventNames=zoneSymbolEventNames$1[task.eventName];var symbolEventName=void 0;if(symbolEventNames){symbolEventName=symbolEventNames[task.capture?TRUE_STR:FALSE_STR];}var existingTasks=symbolEventName&&task.target[symbolEventName];if(existingTasks){for(var i=0;i<existingTasks.length;i++){var existingTask=existingTasks[i];if(existingTask===task){existingTasks.splice(i,1);// set isRemoved to data for faster invokeTask check
task.isRemoved=true;if(existingTasks.length===0){// all tasks for the eventName + capture have gone,
// remove globalZoneAwareCallback and remove the task cache from target
task.allRemoved=true;task.target[symbolEventName]=null;}break;}}}}// if all tasks for the eventName + capture have gone,
// we will really remove the global event callback,
// if not, return
if(!task.allRemoved){return;}return nativeRemoveEventListener.call(task.target,task.eventName,task.capture?globalZoneAwareCaptureCallback:globalZoneAwareCallback,task.options);};var customScheduleNonGlobal=function customScheduleNonGlobal(task){return nativeAddEventListener.call(taskData.target,taskData.eventName,task.invoke,taskData.options);};var customSchedulePrepend=function customSchedulePrepend(task){return nativePrependEventListener.call(taskData.target,taskData.eventName,task.invoke,taskData.options);};var customCancelNonGlobal=function customCancelNonGlobal(task){return nativeRemoveEventListener.call(task.target,task.eventName,task.invoke,task.options);};var customSchedule=useGlobalCallback?customScheduleGlobal:customScheduleNonGlobal;var customCancel=useGlobalCallback?customCancelGlobal:customCancelNonGlobal;var compareTaskCallbackVsDelegate=function compareTaskCallbackVsDelegate(task,delegate){var typeOfDelegate=_typeof(delegate);return typeOfDelegate==='function'&&task.callback===delegate||typeOfDelegate==='object'&&task.originalDelegate===delegate;};var compare=patchOptions&&patchOptions.diff?patchOptions.diff:compareTaskCallbackVsDelegate;var blackListedEvents=Zone[zoneSymbol('BLACK_LISTED_EVENTS')];var passiveEvents=_global[zoneSymbol('PASSIVE_EVENTS')];var makeAddListener=function makeAddListener(nativeListener,addSource,customScheduleFn,customCancelFn,returnTarget,prepend){if(returnTarget===void 0){returnTarget=false;}if(prepend===void 0){prepend=false;}return function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName);}var delegate=arguments[1];if(!delegate){return nativeListener.apply(this,arguments);}if(isNode&&eventName==='uncaughtException'){// don't patch uncaughtException of nodejs to prevent endless loop
return nativeListener.apply(this,arguments);}// don't create the bind delegate function for handleEvent
// case here to improve addEventListener performance
// we will create the bind delegate when invoke
var isHandleEvent=false;if(typeof delegate!=='function'){if(!delegate.handleEvent){return nativeListener.apply(this,arguments);}isHandleEvent=true;}if(validateHandler&&!validateHandler(nativeListener,delegate,target,arguments)){return;}var passive=passiveSupported&&!!passiveEvents&&passiveEvents.indexOf(eventName)!==-1;var options=buildEventListenerOptions(arguments[2],passive);if(blackListedEvents){// check black list
for(var i=0;i<blackListedEvents.length;i++){if(eventName===blackListedEvents[i]){if(passive){return nativeListener.call(target,eventName,delegate,options);}else{return nativeListener.apply(this,arguments);}}}}var capture=!options?false:typeof options==='boolean'?true:options.capture;var once=options&&_typeof(options)==='object'?options.once:false;var zone=Zone.current;var symbolEventNames=zoneSymbolEventNames$1[eventName];if(!symbolEventNames){prepareEventNames(eventName,eventNameToString);symbolEventNames=zoneSymbolEventNames$1[eventName];}var symbolEventName=symbolEventNames[capture?TRUE_STR:FALSE_STR];var existingTasks=target[symbolEventName];var isExisting=false;if(existingTasks){// already have task registered
isExisting=true;if(checkDuplicate){for(var i=0;i<existingTasks.length;i++){if(compare(existingTasks[i],delegate)){// same callback, same capture, same event name, just return
return;}}}}else{existingTasks=target[symbolEventName]=[];}var source;var constructorName=target.constructor['name'];var targetSource=globalSources[constructorName];if(targetSource){source=targetSource[eventName];}if(!source){source=constructorName+addSource+(eventNameToString?eventNameToString(eventName):eventName);}// do not create a new object as task.data to pass those things
// just use the global shared one
taskData.options=options;if(once){// if addEventListener with once options, we don't pass it to
// native addEventListener, instead we keep the once setting
// and handle ourselves.
taskData.options.once=false;}taskData.target=target;taskData.capture=capture;taskData.eventName=eventName;taskData.isExisting=isExisting;var data=useGlobalCallback?OPTIMIZED_ZONE_EVENT_TASK_DATA:undefined;// keep taskData into data to allow onScheduleEventTask to access the task information
if(data){data.taskData=taskData;}var task=zone.scheduleEventTask(source,delegate,data,customScheduleFn,customCancelFn);// should clear taskData.target to avoid memory leak
// issue, https://github.com/angular/angular/issues/20442
taskData.target=null;// need to clear up taskData because it is a global object
if(data){data.taskData=null;}// have to save those information to task in case
// application may call task.zone.cancelTask() directly
if(once){options.once=true;}if(!(!passiveSupported&&typeof task.options==='boolean')){// if not support passive, and we pass an option object
// to addEventListener, we should save the options to task
task.options=options;}task.target=target;task.capture=capture;task.eventName=eventName;if(isHandleEvent){// save original delegate for compare to check duplicate
task.originalDelegate=delegate;}if(!prepend){existingTasks.push(task);}else{existingTasks.unshift(task);}if(returnTarget){return target;}};};proto[ADD_EVENT_LISTENER]=makeAddListener(nativeAddEventListener,ADD_EVENT_LISTENER_SOURCE,customSchedule,customCancel,returnTarget);if(nativePrependEventListener){proto[PREPEND_EVENT_LISTENER]=makeAddListener(nativePrependEventListener,PREPEND_EVENT_LISTENER_SOURCE,customSchedulePrepend,customCancel,returnTarget,true);}proto[REMOVE_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName);}var options=arguments[2];var capture=!options?false:typeof options==='boolean'?true:options.capture;var delegate=arguments[1];if(!delegate){return nativeRemoveEventListener.apply(this,arguments);}if(validateHandler&&!validateHandler(nativeRemoveEventListener,delegate,target,arguments)){return;}var symbolEventNames=zoneSymbolEventNames$1[eventName];var symbolEventName;if(symbolEventNames){symbolEventName=symbolEventNames[capture?TRUE_STR:FALSE_STR];}var existingTasks=symbolEventName&&target[symbolEventName];if(existingTasks){for(var i=0;i<existingTasks.length;i++){var existingTask=existingTasks[i];if(compare(existingTask,delegate)){existingTasks.splice(i,1);// set isRemoved to data for faster invokeTask check
existingTask.isRemoved=true;if(existingTasks.length===0){// all tasks for the eventName + capture have gone,
// remove globalZoneAwareCallback and remove the task cache from target
existingTask.allRemoved=true;target[symbolEventName]=null;// in the target, we have an event listener which is added by on_property
// such as target.onclick = function() {}, so we need to clear this internal
// property too if all delegates all removed
if(typeof eventName==='string'){var onPropertySymbol=ZONE_SYMBOL_PREFIX+'ON_PROPERTY'+eventName;target[onPropertySymbol]=null;}}existingTask.zone.cancelTask(existingTask);if(returnTarget){return target;}return;}}}// issue 930, didn't find the event name or callback
// from zone kept existingTasks, the callback maybe
// added outside of zone, we need to call native removeEventListener
// to try to remove it.
return nativeRemoveEventListener.apply(this,arguments);};proto[LISTENERS_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName);}var listeners=[];var tasks=findEventTasks(target,eventNameToString?eventNameToString(eventName):eventName);for(var i=0;i<tasks.length;i++){var task=tasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;listeners.push(delegate);}return listeners;};proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(!eventName){var keys=Object.keys(target);for(var i=0;i<keys.length;i++){var prop=keys[i];var match=EVENT_NAME_SYMBOL_REGX.exec(prop);var evtName=match&&match[1];// in nodejs EventEmitter, removeListener event is
// used for monitoring the removeListener call,
// so just keep removeListener eventListener until
// all other eventListeners are removed
if(evtName&&evtName!=='removeListener'){this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this,evtName);}}// remove removeListener listener finally
this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this,'removeListener');}else{if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName);}var symbolEventNames=zoneSymbolEventNames$1[eventName];if(symbolEventNames){var symbolEventName=symbolEventNames[FALSE_STR];var symbolCaptureEventName=symbolEventNames[TRUE_STR];var tasks=target[symbolEventName];var captureTasks=target[symbolCaptureEventName];if(tasks){var removeTasks=tasks.slice();for(var i=0;i<removeTasks.length;i++){var task=removeTasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;this[REMOVE_EVENT_LISTENER].call(this,eventName,delegate,task.options);}}if(captureTasks){var removeTasks=captureTasks.slice();for(var i=0;i<removeTasks.length;i++){var task=removeTasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;this[REMOVE_EVENT_LISTENER].call(this,eventName,delegate,task.options);}}}}if(returnTarget){return this;}};// for native toString patch
attachOriginToPatched(proto[ADD_EVENT_LISTENER],nativeAddEventListener);attachOriginToPatched(proto[REMOVE_EVENT_LISTENER],nativeRemoveEventListener);if(nativeRemoveAllListeners){attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER],nativeRemoveAllListeners);}if(nativeListeners){attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER],nativeListeners);}return true;}var results=[];for(var i=0;i<apis.length;i++){results[i]=patchEventTargetMethods(apis[i],patchOptions);}return results;}function findEventTasks(target,eventName){if(!eventName){var foundTasks=[];for(var prop in target){var match=EVENT_NAME_SYMBOL_REGX.exec(prop);var evtName=match&&match[1];if(evtName&&(!eventName||evtName===eventName)){var tasks=target[prop];if(tasks){for(var i=0;i<tasks.length;i++){foundTasks.push(tasks[i]);}}}}return foundTasks;}var symbolEventName=zoneSymbolEventNames$1[eventName];if(!symbolEventName){prepareEventNames(eventName);symbolEventName=zoneSymbolEventNames$1[eventName];}var captureFalseTasks=target[symbolEventName[FALSE_STR]];var captureTrueTasks=target[symbolEventName[TRUE_STR]];if(!captureFalseTasks){return captureTrueTasks?captureTrueTasks.slice():[];}else{return captureTrueTasks?captureFalseTasks.concat(captureTrueTasks):captureFalseTasks.slice();}}function patchEventPrototype(global,api){var Event=global['Event'];if(Event&&Event.prototype){api.patchMethod(Event.prototype,'stopImmediatePropagation',function(delegate){return function(self,args){self[IMMEDIATE_PROPAGATION_SYMBOL]=true;// we need to call the native stopImmediatePropagation
// in case in some hybrid application, some part of
// application will be controlled by zone, some are not
delegate&&delegate.apply(self,args);};});}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function patchCallbacks(api,target,targetName,method,callbacks){var symbol=Zone.__symbol__(method);if(target[symbol]){return;}var nativeDelegate=target[symbol]=target[method];target[method]=function(name,opts,options){if(opts&&opts.prototype){callbacks.forEach(function(callback){var source=targetName+"."+method+"::"+callback;var prototype=opts.prototype;if(prototype.hasOwnProperty(callback)){var descriptor=api.ObjectGetOwnPropertyDescriptor(prototype,callback);if(descriptor&&descriptor.value){descriptor.value=api.wrapWithCurrentZone(descriptor.value,source);api._redefineProperty(opts.prototype,callback,descriptor);}else if(prototype[callback]){prototype[callback]=api.wrapWithCurrentZone(prototype[callback],source);}}else if(prototype[callback]){prototype[callback]=api.wrapWithCurrentZone(prototype[callback],source);}});}return nativeDelegate.call(target,name,opts,options);};api.attachOriginToPatched(target[method],nativeDelegate);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var globalEventHandlersEventNames=['abort','animationcancel','animationend','animationiteration','auxclick','beforeinput','blur','cancel','canplay','canplaythrough','change','compositionstart','compositionupdate','compositionend','cuechange','click','close','contextmenu','curechange','dblclick','drag','dragend','dragenter','dragexit','dragleave','dragover','drop','durationchange','emptied','ended','error','focus','focusin','focusout','gotpointercapture','input','invalid','keydown','keypress','keyup','load','loadstart','loadeddata','loadedmetadata','lostpointercapture','mousedown','mouseenter','mouseleave','mousemove','mouseout','mouseover','mouseup','mousewheel','orientationchange','pause','play','playing','pointercancel','pointerdown','pointerenter','pointerleave','pointerlockchange','mozpointerlockchange','webkitpointerlockerchange','pointerlockerror','mozpointerlockerror','webkitpointerlockerror','pointermove','pointout','pointerover','pointerup','progress','ratechange','reset','resize','scroll','seeked','seeking','select','selectionchange','selectstart','show','sort','stalled','submit','suspend','timeupdate','volumechange','touchcancel','touchmove','touchstart','touchend','transitioncancel','transitionend','waiting','wheel'];var documentEventNames=['afterscriptexecute','beforescriptexecute','DOMContentLoaded','freeze','fullscreenchange','mozfullscreenchange','webkitfullscreenchange','msfullscreenchange','fullscreenerror','mozfullscreenerror','webkitfullscreenerror','msfullscreenerror','readystatechange','visibilitychange','resume'];var windowEventNames=['absolutedeviceorientation','afterinput','afterprint','appinstalled','beforeinstallprompt','beforeprint','beforeunload','devicelight','devicemotion','deviceorientation','deviceorientationabsolute','deviceproximity','hashchange','languagechange','message','mozbeforepaint','offline','online','paint','pageshow','pagehide','popstate','rejectionhandled','storage','unhandledrejection','unload','userproximity','vrdisplayconnected','vrdisplaydisconnected','vrdisplaypresentchange'];var htmlElementEventNames=['beforecopy','beforecut','beforepaste','copy','cut','paste','dragstart','loadend','animationstart','search','transitionrun','transitionstart','webkitanimationend','webkitanimationiteration','webkitanimationstart','webkittransitionend'];var mediaElementEventNames=['encrypted','waitingforkey','msneedkey','mozinterruptbegin','mozinterruptend'];var ieElementEventNames=['activate','afterupdate','ariarequest','beforeactivate','beforedeactivate','beforeeditfocus','beforeupdate','cellchange','controlselect','dataavailable','datasetchanged','datasetcomplete','errorupdate','filterchange','layoutcomplete','losecapture','move','moveend','movestart','propertychange','resizeend','resizestart','rowenter','rowexit','rowsdelete','rowsinserted','command','compassneedscalibration','deactivate','help','mscontentzoom','msmanipulationstatechanged','msgesturechange','msgesturedoubletap','msgestureend','msgesturehold','msgesturestart','msgesturetap','msgotpointercapture','msinertiastart','mslostpointercapture','mspointercancel','mspointerdown','mspointerenter','mspointerhover','mspointerleave','mspointermove','mspointerout','mspointerover','mspointerup','pointerout','mssitemodejumplistitemremoved','msthumbnailclick','stop','storagecommit'];var webglEventNames=['webglcontextrestored','webglcontextlost','webglcontextcreationerror'];var formEventNames=['autocomplete','autocompleteerror'];var detailEventNames=['toggle'];var frameEventNames=['load'];var frameSetEventNames=['blur','error','focus','load','resize','scroll','messageerror'];var marqueeEventNames=['bounce','finish','start'];var XMLHttpRequestEventNames=['loadstart','progress','abort','error','load','progress','timeout','loadend','readystatechange'];var IDBIndexEventNames=['upgradeneeded','complete','abort','success','error','blocked','versionchange','close'];var websocketEventNames=['close','error','open','message'];var workerEventNames=['error','message'];var eventNames=globalEventHandlersEventNames.concat(webglEventNames,formEventNames,detailEventNames,documentEventNames,windowEventNames,htmlElementEventNames,ieElementEventNames);function filterProperties(target,onProperties,ignoreProperties){if(!ignoreProperties||ignoreProperties.length===0){return onProperties;}var tip=ignoreProperties.filter(function(ip){return ip.target===target;});if(!tip||tip.length===0){return onProperties;}var targetIgnoreProperties=tip[0].ignoreProperties;return onProperties.filter(function(op){return targetIgnoreProperties.indexOf(op)===-1;});}function patchFilteredProperties(target,onProperties,ignoreProperties,prototype){// check whether target is available, sometimes target will be undefined
// because different browser or some 3rd party plugin.
if(!target){return;}var filteredProperties=filterProperties(target,onProperties,ignoreProperties);patchOnProperties(target,filteredProperties,prototype);}function propertyDescriptorPatch(api,_global){if(isNode&&!isMix){return;}if(Zone[api.symbol('patchEvents')]){// events are already been patched by legacy patch.
return;}var supportsWebSocket=typeof WebSocket!=='undefined';var ignoreProperties=_global['__Zone_ignore_on_properties'];// for browsers that we can patch the descriptor:  Chrome & Firefox
if(isBrowser){var internalWindow_1=window;var ignoreErrorProperties=isIE?[{target:internalWindow_1,ignoreProperties:['error']}]:[];// in IE/Edge, onProp not exist in window object, but in WindowPrototype
// so we need to pass WindowPrototype to check onProp exist or not
patchFilteredProperties(internalWindow_1,eventNames.concat(['messageerror']),ignoreProperties?ignoreProperties.concat(ignoreErrorProperties):ignoreProperties,ObjectGetPrototypeOf(internalWindow_1));patchFilteredProperties(Document.prototype,eventNames,ignoreProperties);if(typeof internalWindow_1['SVGElement']!=='undefined'){patchFilteredProperties(internalWindow_1['SVGElement'].prototype,eventNames,ignoreProperties);}patchFilteredProperties(Element.prototype,eventNames,ignoreProperties);patchFilteredProperties(HTMLElement.prototype,eventNames,ignoreProperties);patchFilteredProperties(HTMLMediaElement.prototype,mediaElementEventNames,ignoreProperties);patchFilteredProperties(HTMLFrameSetElement.prototype,windowEventNames.concat(frameSetEventNames),ignoreProperties);patchFilteredProperties(HTMLBodyElement.prototype,windowEventNames.concat(frameSetEventNames),ignoreProperties);patchFilteredProperties(HTMLFrameElement.prototype,frameEventNames,ignoreProperties);patchFilteredProperties(HTMLIFrameElement.prototype,frameEventNames,ignoreProperties);var HTMLMarqueeElement_1=internalWindow_1['HTMLMarqueeElement'];if(HTMLMarqueeElement_1){patchFilteredProperties(HTMLMarqueeElement_1.prototype,marqueeEventNames,ignoreProperties);}var Worker_1=internalWindow_1['Worker'];if(Worker_1){patchFilteredProperties(Worker_1.prototype,workerEventNames,ignoreProperties);}}var XMLHttpRequest=_global['XMLHttpRequest'];if(XMLHttpRequest){// XMLHttpRequest is not available in ServiceWorker, so we need to check here
patchFilteredProperties(XMLHttpRequest.prototype,XMLHttpRequestEventNames,ignoreProperties);}var XMLHttpRequestEventTarget=_global['XMLHttpRequestEventTarget'];if(XMLHttpRequestEventTarget){patchFilteredProperties(XMLHttpRequestEventTarget&&XMLHttpRequestEventTarget.prototype,XMLHttpRequestEventNames,ignoreProperties);}if(typeof IDBIndex!=='undefined'){patchFilteredProperties(IDBIndex.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBRequest.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBOpenDBRequest.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBDatabase.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBTransaction.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBCursor.prototype,IDBIndexEventNames,ignoreProperties);}if(supportsWebSocket){patchFilteredProperties(WebSocket.prototype,websocketEventNames,ignoreProperties);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch('util',function(global,Zone,api){api.patchOnProperties=patchOnProperties;api.patchMethod=patchMethod;api.bindArguments=bindArguments;api.patchMacroTask=patchMacroTask;// In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to
// define which events will not be patched by `Zone.js`.
// In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep
// the name consistent with angular repo.
// The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for
// backwards compatibility.
var SYMBOL_BLACK_LISTED_EVENTS=Zone.__symbol__('BLACK_LISTED_EVENTS');var SYMBOL_UNPATCHED_EVENTS=Zone.__symbol__('UNPATCHED_EVENTS');if(global[SYMBOL_UNPATCHED_EVENTS]){global[SYMBOL_BLACK_LISTED_EVENTS]=global[SYMBOL_UNPATCHED_EVENTS];}if(global[SYMBOL_BLACK_LISTED_EVENTS]){Zone[SYMBOL_BLACK_LISTED_EVENTS]=Zone[SYMBOL_UNPATCHED_EVENTS]=global[SYMBOL_BLACK_LISTED_EVENTS];}api.patchEventPrototype=patchEventPrototype;api.patchEventTarget=patchEventTarget;api.isIEOrEdge=isIEOrEdge;api.ObjectDefineProperty=ObjectDefineProperty;api.ObjectGetOwnPropertyDescriptor=ObjectGetOwnPropertyDescriptor;api.ObjectCreate=ObjectCreate;api.ArraySlice=ArraySlice;api.patchClass=patchClass;api.wrapWithCurrentZone=wrapWithCurrentZone;api.filterProperties=filterProperties;api.attachOriginToPatched=attachOriginToPatched;api._redefineProperty=Object.defineProperty;api.patchCallbacks=patchCallbacks;api.getGlobalObjects=function(){return{globalSources:globalSources,zoneSymbolEventNames:zoneSymbolEventNames$1,eventNames:eventNames,isBrowser:isBrowser,isMix:isMix,isNode:isNode,TRUE_STR:TRUE_STR,FALSE_STR:FALSE_STR,ZONE_SYMBOL_PREFIX:ZONE_SYMBOL_PREFIX,ADD_EVENT_LISTENER_STR:ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR:REMOVE_EVENT_LISTENER_STR};};});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ /*
     * This is necessary for Chrome and Chrome mobile, to enable
     * things like redefining `createdCallback` on an element.
     */var zoneSymbol$1;var _defineProperty;var _getOwnPropertyDescriptor;var _create;var unconfigurablesKey;function propertyPatch(){zoneSymbol$1=Zone.__symbol__;_defineProperty=Object[zoneSymbol$1('defineProperty')]=Object.defineProperty;_getOwnPropertyDescriptor=Object[zoneSymbol$1('getOwnPropertyDescriptor')]=Object.getOwnPropertyDescriptor;_create=Object.create;unconfigurablesKey=zoneSymbol$1('unconfigurables');Object.defineProperty=function(obj,prop,desc){if(isUnconfigurable(obj,prop)){throw new TypeError('Cannot assign to read only property \''+prop+'\' of '+obj);}var originalConfigurableFlag=desc.configurable;if(prop!=='prototype'){desc=rewriteDescriptor(obj,prop,desc);}return _tryDefineProperty(obj,prop,desc,originalConfigurableFlag);};Object.defineProperties=function(obj,props){Object.keys(props).forEach(function(prop){Object.defineProperty(obj,prop,props[prop]);});return obj;};Object.create=function(obj,proto){if(_typeof(proto)==='object'&&!Object.isFrozen(proto)){Object.keys(proto).forEach(function(prop){proto[prop]=rewriteDescriptor(obj,prop,proto[prop]);});}return _create(obj,proto);};Object.getOwnPropertyDescriptor=function(obj,prop){var desc=_getOwnPropertyDescriptor(obj,prop);if(desc&&isUnconfigurable(obj,prop)){desc.configurable=false;}return desc;};}function _redefineProperty(obj,prop,desc){var originalConfigurableFlag=desc.configurable;desc=rewriteDescriptor(obj,prop,desc);return _tryDefineProperty(obj,prop,desc,originalConfigurableFlag);}function isUnconfigurable(obj,prop){return obj&&obj[unconfigurablesKey]&&obj[unconfigurablesKey][prop];}function rewriteDescriptor(obj,prop,desc){// issue-927, if the desc is frozen, don't try to change the desc
if(!Object.isFrozen(desc)){desc.configurable=true;}if(!desc.configurable){// issue-927, if the obj is frozen, don't try to set the desc to obj
if(!obj[unconfigurablesKey]&&!Object.isFrozen(obj)){_defineProperty(obj,unconfigurablesKey,{writable:true,value:{}});}if(obj[unconfigurablesKey]){obj[unconfigurablesKey][prop]=true;}}return desc;}function _tryDefineProperty(obj,prop,desc,originalConfigurableFlag){try{return _defineProperty(obj,prop,desc);}catch(error){if(desc.configurable){// In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's
// retry with the original flag value
if(typeof originalConfigurableFlag=='undefined'){delete desc.configurable;}else{desc.configurable=originalConfigurableFlag;}try{return _defineProperty(obj,prop,desc);}catch(error){var descJson=null;try{descJson=JSON.stringify(desc);}catch(error){descJson=desc.toString();}console.log("Attempting to configure '"+prop+"' with descriptor '"+descJson+"' on object '"+obj+"' and got error, giving up: "+error);}}else{throw error;}}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function eventTargetLegacyPatch(_global,api){var _a=api.getGlobalObjects(),eventNames=_a.eventNames,globalSources=_a.globalSources,zoneSymbolEventNames=_a.zoneSymbolEventNames,TRUE_STR=_a.TRUE_STR,FALSE_STR=_a.FALSE_STR,ZONE_SYMBOL_PREFIX=_a.ZONE_SYMBOL_PREFIX;var WTF_ISSUE_555='Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';var NO_EVENT_TARGET='ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'.split(',');var EVENT_TARGET='EventTarget';var apis=[];var isWtf=_global['wtf'];var WTF_ISSUE_555_ARRAY=WTF_ISSUE_555.split(',');if(isWtf){// Workaround for: https://github.com/google/tracing-framework/issues/555
apis=WTF_ISSUE_555_ARRAY.map(function(v){return'HTML'+v+'Element';}).concat(NO_EVENT_TARGET);}else if(_global[EVENT_TARGET]){apis.push(EVENT_TARGET);}else{// Note: EventTarget is not available in all browsers,
// if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget
apis=NO_EVENT_TARGET;}var isDisableIECheck=_global['__Zone_disable_IE_check']||false;var isEnableCrossContextCheck=_global['__Zone_enable_cross_context_check']||false;var ieOrEdge=api.isIEOrEdge();var ADD_EVENT_LISTENER_SOURCE='.addEventListener:';var FUNCTION_WRAPPER='[object FunctionWrapper]';var BROWSER_TOOLS='function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';var pointerEventsMap={'MSPointerCancel':'pointercancel','MSPointerDown':'pointerdown','MSPointerEnter':'pointerenter','MSPointerHover':'pointerhover','MSPointerLeave':'pointerleave','MSPointerMove':'pointermove','MSPointerOut':'pointerout','MSPointerOver':'pointerover','MSPointerUp':'pointerup'};//  predefine all __zone_symbol__ + eventName + true/false string
for(var i=0;i<eventNames.length;i++){var eventName=eventNames[i];var falseEventName=eventName+FALSE_STR;var trueEventName=eventName+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames[eventName]={};zoneSymbolEventNames[eventName][FALSE_STR]=symbol;zoneSymbolEventNames[eventName][TRUE_STR]=symbolCapture;}//  predefine all task.source string
for(var i=0;i<WTF_ISSUE_555_ARRAY.length;i++){var target=WTF_ISSUE_555_ARRAY[i];var targets=globalSources[target]={};for(var j=0;j<eventNames.length;j++){var eventName=eventNames[j];targets[eventName]=target+ADD_EVENT_LISTENER_SOURCE+eventName;}}var checkIEAndCrossContext=function checkIEAndCrossContext(nativeDelegate,delegate,target,args){if(!isDisableIECheck&&ieOrEdge){if(isEnableCrossContextCheck){try{var testString=delegate.toString();if(testString===FUNCTION_WRAPPER||testString==BROWSER_TOOLS){nativeDelegate.apply(target,args);return false;}}catch(error){nativeDelegate.apply(target,args);return false;}}else{var testString=delegate.toString();if(testString===FUNCTION_WRAPPER||testString==BROWSER_TOOLS){nativeDelegate.apply(target,args);return false;}}}else if(isEnableCrossContextCheck){try{delegate.toString();}catch(error){nativeDelegate.apply(target,args);return false;}}return true;};var apiTypes=[];for(var i=0;i<apis.length;i++){var type=_global[apis[i]];apiTypes.push(type&&type.prototype);}// vh is validateHandler to check event handler
// is valid or not(for security check)
api.patchEventTarget(_global,apiTypes,{vh:checkIEAndCrossContext,transferEventName:function transferEventName(eventName){var pointerEventName=pointerEventsMap[eventName];return pointerEventName||eventName;}});Zone[api.symbol('patchEventTarget')]=!!_global[EVENT_TARGET];return true;}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */ // we have to patch the instance since the proto is non-configurable
function apply(api,_global){var _a=api.getGlobalObjects(),ADD_EVENT_LISTENER_STR=_a.ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR=_a.REMOVE_EVENT_LISTENER_STR;var WS=_global.WebSocket;// On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener
// On older Chrome, no need since EventTarget was already patched
if(!_global.EventTarget){api.patchEventTarget(_global,[WS.prototype]);}_global.WebSocket=function(x,y){var socket=arguments.length>1?new WS(x,y):new WS(x);var proxySocket;var proxySocketProto;// Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance
var onmessageDesc=api.ObjectGetOwnPropertyDescriptor(socket,'onmessage');if(onmessageDesc&&onmessageDesc.configurable===false){proxySocket=api.ObjectCreate(socket);// socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'
// but proxySocket not, so we will keep socket as prototype and pass it to
// patchOnProperties method
proxySocketProto=socket;[ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR,'send','close'].forEach(function(propName){proxySocket[propName]=function(){var args=api.ArraySlice.call(arguments);if(propName===ADD_EVENT_LISTENER_STR||propName===REMOVE_EVENT_LISTENER_STR){var eventName=args.length>0?args[0]:undefined;if(eventName){var propertySymbol=Zone.__symbol__('ON_PROPERTY'+eventName);socket[propertySymbol]=proxySocket[propertySymbol];}}return socket[propName].apply(socket,args);};});}else{// we can patch the real socket
proxySocket=socket;}api.patchOnProperties(proxySocket,['close','error','message','open'],proxySocketProto);return proxySocket;};var globalWebSocket=_global['WebSocket'];for(var prop in WS){globalWebSocket[prop]=WS[prop];}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function propertyDescriptorLegacyPatch(api,_global){var _a=api.getGlobalObjects(),isNode=_a.isNode,isMix=_a.isMix;if(isNode&&!isMix){return;}if(!canPatchViaPropertyDescriptor(api,_global)){var supportsWebSocket=typeof WebSocket!=='undefined';// Safari, Android browsers (Jelly Bean)
patchViaCapturingAllTheEvents(api);api.patchClass('XMLHttpRequest');if(supportsWebSocket){apply(api,_global);}Zone[api.symbol('patchEvents')]=true;}}function canPatchViaPropertyDescriptor(api,_global){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if((isBrowser||isMix)&&!api.ObjectGetOwnPropertyDescriptor(HTMLElement.prototype,'onclick')&&typeof Element!=='undefined'){// WebKit https://bugs.webkit.org/show_bug.cgi?id=134364
// IDL interface attributes are not configurable
var desc=api.ObjectGetOwnPropertyDescriptor(Element.prototype,'onclick');if(desc&&!desc.configurable)return false;// try to use onclick to detect whether we can patch via propertyDescriptor
// because XMLHttpRequest is not available in service worker
if(desc){api.ObjectDefineProperty(Element.prototype,'onclick',{enumerable:true,configurable:true,get:function get(){return true;}});var div=document.createElement('div');var result=!!div.onclick;api.ObjectDefineProperty(Element.prototype,'onclick',desc);return result;}}var XMLHttpRequest=_global['XMLHttpRequest'];if(!XMLHttpRequest){// XMLHttpRequest is not available in service worker
return false;}var ON_READY_STATE_CHANGE='onreadystatechange';var XMLHttpRequestPrototype=XMLHttpRequest.prototype;var xhrDesc=api.ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE);// add enumerable and configurable here because in opera
// by default XMLHttpRequest.prototype.onreadystatechange is undefined
// without adding enumerable and configurable will cause onreadystatechange
// non-configurable
// and if XMLHttpRequest.prototype.onreadystatechange is undefined,
// we should set a real desc instead a fake one
if(xhrDesc){api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,{enumerable:true,configurable:true,get:function get(){return true;}});var req=new XMLHttpRequest();var result=!!req.onreadystatechange;// restore original desc
api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,xhrDesc||{});return result;}else{var SYMBOL_FAKE_ONREADYSTATECHANGE_1=api.symbol('fake');api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,{enumerable:true,configurable:true,get:function get(){return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];},set:function set(value){this[SYMBOL_FAKE_ONREADYSTATECHANGE_1]=value;}});var req=new XMLHttpRequest();var detectFunc=function detectFunc(){};req.onreadystatechange=detectFunc;var result=req[SYMBOL_FAKE_ONREADYSTATECHANGE_1]===detectFunc;req.onreadystatechange=null;return result;}}// Whenever any eventListener fires, we check the eventListener target and all parents
// for `onwhatever` properties and replace them with zone-bound functions
// - Chrome (for now)
function patchViaCapturingAllTheEvents(api){var eventNames=api.getGlobalObjects().eventNames;var unboundKey=api.symbol('unbound');var _loop_4=function _loop_4(i){var property=eventNames[i];var onproperty='on'+property;self.addEventListener(property,function(event){var elt=event.target,bound,source;if(elt){source=elt.constructor['name']+'.'+onproperty;}else{source='unknown.'+onproperty;}while(elt){if(elt[onproperty]&&!elt[onproperty][unboundKey]){bound=api.wrapWithCurrentZone(elt[onproperty],source);bound[unboundKey]=elt[onproperty];elt[onproperty]=bound;}elt=elt.parentElement;}},true);};for(var i=0;i<eventNames.length;i++){_loop_4(i);}}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function registerElementPatch(_global,api){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if(!isBrowser&&!isMix||!('registerElement'in _global.document)){return;}var callbacks=['createdCallback','attachedCallback','detachedCallback','attributeChangedCallback'];api.patchCallbacks(api,document,'Document','registerElement',callbacks);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(_global){var symbolPrefix=_global['__Zone_symbol_prefix']||'__zone_symbol__';function __symbol__(name){return symbolPrefix+name;}_global[__symbol__('legacyPatch')]=function(){var Zone=_global['Zone'];Zone.__load_patch('defineProperty',function(global,Zone,api){api._redefineProperty=_redefineProperty;propertyPatch();});Zone.__load_patch('registerElement',function(global,Zone,api){registerElementPatch(global,api);});Zone.__load_patch('EventTargetLegacy',function(global,Zone,api){eventTargetLegacyPatch(global,api);propertyDescriptorLegacyPatch(api,global);});};})(typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{});/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var taskSymbol=zoneSymbol('zoneTask');function patchTimer(window,setName,cancelName,nameSuffix){var setNative=null;var clearNative=null;setName+=nameSuffix;cancelName+=nameSuffix;var tasksByHandleId={};function scheduleTask(task){var data=task.data;function timer(){try{task.invoke.apply(this,arguments);}finally{// issue-934, task will be cancelled
// even it is a periodic task such as
// setInterval
if(!(task.data&&task.data.isPeriodic)){if(typeof data.handleId==='number'){// in non-nodejs env, we remove timerId
// from local cache
delete tasksByHandleId[data.handleId];}else if(data.handleId){// Node returns complex objects as handleIds
// we remove task reference from timer object
data.handleId[taskSymbol]=null;}}}}data.args[0]=timer;data.handleId=setNative.apply(window,data.args);return task;}function clearTask(task){return clearNative(task.data.handleId);}setNative=patchMethod(window,setName,function(delegate){return function(self,args){if(typeof args[0]==='function'){var options={isPeriodic:nameSuffix==='Interval',delay:nameSuffix==='Timeout'||nameSuffix==='Interval'?args[1]||0:undefined,args:args};var task=scheduleMacroTaskWithCurrentZone(setName,args[0],options,scheduleTask,clearTask);if(!task){return task;}// Node.js must additionally support the ref and unref functions.
var handle=task.data.handleId;if(typeof handle==='number'){// for non nodejs env, we save handleId: task
// mapping in local cache for clearTimeout
tasksByHandleId[handle]=task;}else if(handle){// for nodejs env, we save task
// reference in timerId Object for clearTimeout
handle[taskSymbol]=task;}// check whether handle is null, because some polyfill or browser
// may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame
if(handle&&handle.ref&&handle.unref&&typeof handle.ref==='function'&&typeof handle.unref==='function'){task.ref=handle.ref.bind(handle);task.unref=handle.unref.bind(handle);}if(typeof handle==='number'||handle){return handle;}return task;}else{// cause an error by calling it directly.
return delegate.apply(window,args);}};});clearNative=patchMethod(window,cancelName,function(delegate){return function(self,args){var id=args[0];var task;if(typeof id==='number'){// non nodejs env.
task=tasksByHandleId[id];}else{// nodejs env.
task=id&&id[taskSymbol];// other environments.
if(!task){task=id;}}if(task&&typeof task.type==='string'){if(task.state!=='notScheduled'&&(task.cancelFn&&task.data.isPeriodic||task.runCount===0)){if(typeof id==='number'){delete tasksByHandleId[id];}else if(id){id[taskSymbol]=null;}// Do not cancel already canceled functions
task.zone.cancelTask(task);}}else{// cause an error by calling it directly.
delegate.apply(window,args);}};});}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function patchCustomElements(_global,api){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if(!isBrowser&&!isMix||!_global['customElements']||!('customElements'in _global)){return;}var callbacks=['connectedCallback','disconnectedCallback','adoptedCallback','attributeChangedCallback'];api.patchCallbacks(api,_global.customElements,'customElements','define',callbacks);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function eventTargetPatch(_global,api){if(Zone[api.symbol('patchEventTarget')]){// EventTarget is already patched.
return;}var _a=api.getGlobalObjects(),eventNames=_a.eventNames,zoneSymbolEventNames=_a.zoneSymbolEventNames,TRUE_STR=_a.TRUE_STR,FALSE_STR=_a.FALSE_STR,ZONE_SYMBOL_PREFIX=_a.ZONE_SYMBOL_PREFIX;//  predefine all __zone_symbol__ + eventName + true/false string
for(var i=0;i<eventNames.length;i++){var eventName=eventNames[i];var falseEventName=eventName+FALSE_STR;var trueEventName=eventName+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames[eventName]={};zoneSymbolEventNames[eventName][FALSE_STR]=symbol;zoneSymbolEventNames[eventName][TRUE_STR]=symbolCapture;}var EVENT_TARGET=_global['EventTarget'];if(!EVENT_TARGET||!EVENT_TARGET.prototype){return;}api.patchEventTarget(_global,[EVENT_TARGET&&EVENT_TARGET.prototype]);return true;}function patchEvent(global,api){api.patchEventPrototype(global,api);}/**
     * @license
     * Copyright Google Inc. All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch('legacy',function(global){var legacyPatch=global[Zone.__symbol__('legacyPatch')];if(legacyPatch){legacyPatch();}});Zone.__load_patch('timers',function(global){var set='set';var clear='clear';patchTimer(global,set,clear,'Timeout');patchTimer(global,set,clear,'Interval');patchTimer(global,set,clear,'Immediate');});Zone.__load_patch('requestAnimationFrame',function(global){patchTimer(global,'request','cancel','AnimationFrame');patchTimer(global,'mozRequest','mozCancel','AnimationFrame');patchTimer(global,'webkitRequest','webkitCancel','AnimationFrame');});Zone.__load_patch('blocking',function(global,Zone){var blockingMethods=['alert','prompt','confirm'];for(var i=0;i<blockingMethods.length;i++){var name_2=blockingMethods[i];patchMethod(global,name_2,function(delegate,symbol,name){return function(s,args){return Zone.current.run(delegate,global,args,name);};});}});Zone.__load_patch('EventTarget',function(global,Zone,api){patchEvent(global,api);eventTargetPatch(global,api);// patch XMLHttpRequestEventTarget's addEventListener/removeEventListener
var XMLHttpRequestEventTarget=global['XMLHttpRequestEventTarget'];if(XMLHttpRequestEventTarget&&XMLHttpRequestEventTarget.prototype){api.patchEventTarget(global,[XMLHttpRequestEventTarget.prototype]);}patchClass('MutationObserver');patchClass('WebKitMutationObserver');patchClass('IntersectionObserver');patchClass('FileReader');});Zone.__load_patch('on_property',function(global,Zone,api){propertyDescriptorPatch(api,global);});Zone.__load_patch('customElements',function(global,Zone,api){patchCustomElements(global,api);});Zone.__load_patch('XHR',function(global,Zone){// Treat XMLHttpRequest as a macrotask.
patchXHR(global);var XHR_TASK=zoneSymbol('xhrTask');var XHR_SYNC=zoneSymbol('xhrSync');var XHR_LISTENER=zoneSymbol('xhrListener');var XHR_SCHEDULED=zoneSymbol('xhrScheduled');var XHR_URL=zoneSymbol('xhrURL');var XHR_ERROR_BEFORE_SCHEDULED=zoneSymbol('xhrErrorBeforeScheduled');function patchXHR(window){var XMLHttpRequest=window['XMLHttpRequest'];if(!XMLHttpRequest){// XMLHttpRequest is not available in service worker
return;}var XMLHttpRequestPrototype=XMLHttpRequest.prototype;function findPendingTask(target){return target[XHR_TASK];}var oriAddListener=XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];var oriRemoveListener=XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];if(!oriAddListener){var XMLHttpRequestEventTarget_1=window['XMLHttpRequestEventTarget'];if(XMLHttpRequestEventTarget_1){var XMLHttpRequestEventTargetPrototype=XMLHttpRequestEventTarget_1.prototype;oriAddListener=XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];oriRemoveListener=XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];}}var READY_STATE_CHANGE='readystatechange';var SCHEDULED='scheduled';function scheduleTask(task){var data=task.data;var target=data.target;target[XHR_SCHEDULED]=false;target[XHR_ERROR_BEFORE_SCHEDULED]=false;// remove existing event listener
var listener=target[XHR_LISTENER];if(!oriAddListener){oriAddListener=target[ZONE_SYMBOL_ADD_EVENT_LISTENER];oriRemoveListener=target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];}if(listener){oriRemoveListener.call(target,READY_STATE_CHANGE,listener);}var newListener=target[XHR_LISTENER]=function(){if(target.readyState===target.DONE){// sometimes on some browsers XMLHttpRequest will fire onreadystatechange with
// readyState=4 multiple times, so we need to check task state here
if(!data.aborted&&target[XHR_SCHEDULED]&&task.state===SCHEDULED){// check whether the xhr has registered onload listener
// if that is the case, the task should invoke after all
// onload listeners finish.
var loadTasks=target[Zone.__symbol__('loadfalse')];if(loadTasks&&loadTasks.length>0){var oriInvoke_1=task.invoke;task.invoke=function(){// need to load the tasks again, because in other
// load listener, they may remove themselves
var loadTasks=target[Zone.__symbol__('loadfalse')];for(var i=0;i<loadTasks.length;i++){if(loadTasks[i]===task){loadTasks.splice(i,1);}}if(!data.aborted&&task.state===SCHEDULED){oriInvoke_1.call(task);}};loadTasks.push(task);}else{task.invoke();}}else if(!data.aborted&&target[XHR_SCHEDULED]===false){// error occurs when xhr.send()
target[XHR_ERROR_BEFORE_SCHEDULED]=true;}}};oriAddListener.call(target,READY_STATE_CHANGE,newListener);var storedTask=target[XHR_TASK];if(!storedTask){target[XHR_TASK]=task;}sendNative.apply(target,data.args);target[XHR_SCHEDULED]=true;return task;}function placeholderCallback(){}function clearTask(task){var data=task.data;// Note - ideally, we would call data.target.removeEventListener here, but it's too late
// to prevent it from firing. So instead, we store info for the event listener.
data.aborted=true;return abortNative.apply(data.target,data.args);}var openNative=patchMethod(XMLHttpRequestPrototype,'open',function(){return function(self,args){self[XHR_SYNC]=args[2]==false;self[XHR_URL]=args[1];return openNative.apply(self,args);};});var XMLHTTPREQUEST_SOURCE='XMLHttpRequest.send';var fetchTaskAborting=zoneSymbol('fetchTaskAborting');var fetchTaskScheduling=zoneSymbol('fetchTaskScheduling');var sendNative=patchMethod(XMLHttpRequestPrototype,'send',function(){return function(self,args){if(Zone.current[fetchTaskScheduling]===true){// a fetch is scheduling, so we are using xhr to polyfill fetch
// and because we already schedule macroTask for fetch, we should
// not schedule a macroTask for xhr again
return sendNative.apply(self,args);}if(self[XHR_SYNC]){// if the XHR is sync there is no task to schedule, just execute the code.
return sendNative.apply(self,args);}else{var options={target:self,url:self[XHR_URL],isPeriodic:false,args:args,aborted:false};var task=scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE,placeholderCallback,options,scheduleTask,clearTask);if(self&&self[XHR_ERROR_BEFORE_SCHEDULED]===true&&!options.aborted&&task.state===SCHEDULED){// xhr request throw error when send
// we should invoke task instead of leaving a scheduled
// pending macroTask
task.invoke();}}};});var abortNative=patchMethod(XMLHttpRequestPrototype,'abort',function(){return function(self,args){var task=findPendingTask(self);if(task&&typeof task.type=='string'){// If the XHR has already completed, do nothing.
// If the XHR has already been aborted, do nothing.
// Fix #569, call abort multiple times before done will cause
// macroTask task count be negative number
if(task.cancelFn==null||task.data&&task.data.aborted){return;}task.zone.cancelTask(task);}else if(Zone.current[fetchTaskAborting]===true){// the abort is called from fetch polyfill, we need to call native abort of XHR.
return abortNative.apply(self,args);}// Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no
// task
// to cancel. Do nothing.
};});}});Zone.__load_patch('geolocation',function(global){/// GEO_LOCATION
if(global['navigator']&&global['navigator'].geolocation){patchPrototype(global['navigator'].geolocation,['getCurrentPosition','watchPosition']);}});Zone.__load_patch('PromiseRejectionEvent',function(global,Zone){// handle unhandled promise rejection
function findPromiseRejectionHandler(evtName){return function(e){var eventTasks=findEventTasks(global,evtName);eventTasks.forEach(function(eventTask){// windows has added unhandledrejection event listener
// trigger the event listener
var PromiseRejectionEvent=global['PromiseRejectionEvent'];if(PromiseRejectionEvent){var evt=new PromiseRejectionEvent(evtName,{promise:e.promise,reason:e.rejection});eventTask.invoke(evt);}});};}if(global['PromiseRejectionEvent']){Zone[zoneSymbol('unhandledPromiseRejectionHandler')]=findPromiseRejectionHandler('unhandledrejection');Zone[zoneSymbol('rejectionHandledHandler')]=findPromiseRejectionHandler('rejectionhandled');}});});}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{}],320:[function(require,module,exports){"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var core_1=require("@angular/core");var router_1=require("@angular/router");var mainPage_component_1=require("./components/mainPage/mainPage.component");var userPage_component_1=require("./components/userPage/userPage.component");var messages_component_1=require("./components/messages/messages.component");var errorPage_component_1=require("./components/errorPage/errorPage.component");var newItem_component_1=require("./components/newItem/newItem.component");var fullList_component_1=require("./components/fullList/fullList.component");var aboutApp_component_1=require("./components/aboutApp/aboutApp.component");var routes=[{path:'',component:mainPage_component_1.MainPage},{path:'user',component:userPage_component_1.UserPage},{path:'messages',component:messages_component_1.AppMessaging},{path:'new/:type',component:newItem_component_1.NewItem},{path:'list/:type',component:fullList_component_1.FullList},{path:'about',component:aboutApp_component_1.AboutApp},{path:'**',component:errorPage_component_1.ErrorPage}];var AppRoutingModule=function AppRoutingModule(){_classCallCheck(this,AppRoutingModule);};AppRoutingModule=__decorate([core_1.NgModule({imports:[router_1.RouterModule.forRoot(routes)],exports:[router_1.RouterModule]})],AppRoutingModule);exports.AppRoutingModule=AppRoutingModule;},{"./components/aboutApp/aboutApp.component":323,"./components/errorPage/errorPage.component":324,"./components/fullList/fullList.component":325,"./components/mainPage/mainPage.component":327,"./components/messages/messages.component":328,"./components/newItem/newItem.component":330,"./components/userPage/userPage.component":332,"@angular/core":4,"@angular/router":7}],321:[function(require,module,exports){"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});var core_1=require("@angular/core");var auth_service_1=require("./services/auth.service");var AppComponent=function AppComponent(authService){_classCallCheck(this,AppComponent);this.authService=authService;this.navTabs=[{name:'Home',link:'/'},{name:'Messages',link:'/messages'},{name:'User Page',link:'/user'},{name:'About',link:'/about'}];this.authService.checkHash();};AppComponent=__decorate([core_1.Component({selector:'app-root',templateUrl:'./app//app.component.html'}),__metadata("design:paramtypes",[auth_service_1.AuthService])],AppComponent);exports.AppComponent=AppComponent;},{"./services/auth.service":334,"@angular/core":4}],322:[function(require,module,exports){"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};Object.defineProperty(exports,"__esModule",{value:true});var core_1=require("@angular/core");var platform_browser_1=require("@angular/platform-browser");var http_1=require("@angular/common/http");var app_component_1=require("./app.component");var app_routing_module_1=require("./app-routing.module");var mainPage_component_1=require("./components/mainPage/mainPage.component");var userPage_component_1=require("./components/userPage/userPage.component");var messages_component_1=require("./components/messages/messages.component");var errorPage_component_1=require("./components/errorPage/errorPage.component");var newItem_component_1=require("./components/newItem/newItem.component");var myPosts_component_1=require("./components/myPosts/myPosts.component");var popUp_component_1=require("./components/popUp/popUp.component");var fullList_component_1=require("./components/fullList/fullList.component");var loader_component_1=require("./components/loader/loader.component");var aboutApp_component_1=require("./components/aboutApp/aboutApp.component");var AppModule=function AppModule(){_classCallCheck(this,AppModule);};AppModule=__decorate([core_1.NgModule({imports:[platform_browser_1.BrowserModule,app_routing_module_1.AppRoutingModule,http_1.HttpClientModule],declarations:[app_component_1.AppComponent,mainPage_component_1.MainPage,userPage_component_1.UserPage,messages_component_1.AppMessaging,errorPage_component_1.ErrorPage,newItem_component_1.NewItem,myPosts_component_1.MyPosts,popUp_component_1.PopUp,fullList_component_1.FullList,loader_component_1.Loader,aboutApp_component_1.AboutApp],providers:[],bootstrap:[app_component_1.AppComponent]})],AppModule);exports.AppModule=AppModule;},{"./app-routing.module":320,"./app.component":321,"./components/aboutApp/aboutApp.component":323,"./components/errorPage/errorPage.component":324,"./components/fullList/fullList.component":325,"./components/loader/loader.component":326,"./components/mainPage/mainPage.component":327,"./components/messages/messages.component":328,"./components/myPosts/myPosts.component":329,"./components/newItem/newItem.component":330,"./components/popUp/popUp.component":331,"./components/userPage/userPage.component":332,"@angular/common/http":1,"@angular/core":4,"@angular/platform-browser":6}],323:[function(require,module,exports){"use strict";/*
    About App
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var AboutApp=// CTOR
function AboutApp(){_classCallCheck(this,AboutApp);};AboutApp=__decorate([core_1.Component({selector:'app-about',templateUrl:'./app//aboutApp.component.html'}),__metadata("design:paramtypes",[])],AboutApp);exports.AboutApp=AboutApp;},{"@angular/core":4}],324:[function(require,module,exports){"use strict";/*
    Error Page
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var common_1=require("@angular/common");var ErrorPage=/*#__PURE__*/function(){// CTOR
function ErrorPage(location){_classCallCheck(this,ErrorPage);this.location=location;// Error message to display onscreen
this.error={title:'Sorry!',message:"The page you were looking for doesn't exist.",code:404};}/*
    Function Name: goBack()
    Function Description: Sends the user back to the previous page
    Parameters: e (event) - Post to edit.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(ErrorPage,[{key:"goBack",value:function goBack(){this.location.back();}}]);return ErrorPage;}();ErrorPage=__decorate([core_1.Component({selector:'app-error-page',templateUrl:'./app//errorPage.component.html'}),__metadata("design:paramtypes",[common_1.Location])],ErrorPage);exports.ErrorPage=ErrorPage;},{"@angular/common":2,"@angular/core":4}],325:[function(require,module,exports){"use strict";/*
    Full List
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var router_1=require("@angular/router");// App-related imports
var auth_service_1=require("../../services/auth.service");var items_service_1=require("../../services/items.service");var FullList=/*#__PURE__*/function(){// CTOR
function FullList(route,itemsService,router,authService){_classCallCheck(this,FullList);this.route=route;this.itemsService=itemsService;this.router=router;this.authService=authService;this.editType='post';// get the type of list and the current page
this.type=this.route.snapshot.paramMap.get('type');this.page=Number(this.route.snapshot.queryParamMap.get('page'));// if the type is new items, get the new items
if(this.type=='New'){this.itemsService.getNewItems(this.page);}// if the type is suggested items, get the suggested items
else if(this.type=='Suggested'){this.itemsService.getSuggestedItems(this.page);}this.editMode=false;}/*
    Function Name: sendHug()
    Function Description: Send a hug to a user through a post they've written. The hug
                          itself is sent by the items service.
    Parameters: itemID (number) - ID of the post.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(FullList,[{key:"sendHug",value:function sendHug(itemID){var item={};// if the type of list is 'new posts', find the ID in the list of new posts
if(this.type=='New'){item=this.itemsService.fullItemsList.fullNewItems.filter(function(e){return e.id==itemID;})[0];}// if the type of list is 'suggested posts', find the ID in the list of suggested posts
else if(this.type=='Suggested'){item=this.itemsService.fullItemsList.fullSuggestedItems.filter(function(e){return e.id==itemID;})[0];}this.itemsService.sendHug(item);}/*
    Function Name: nextPage()
    Function Description: Go to the next page of posts. Sends a request to the
                          items service to get the data for the next page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"nextPage",value:function nextPage(){// if the list is the new posts list, get the next page of new posts
if(this.type=='New'){this.page+=1;this.itemsService.fullItemsPage.fullNewItems+=1;this.itemsService.getNewItems(this.itemsService.fullItemsPage.fullNewItems);}// if the list is the suggested posts list, get the next page of suggested posts
else if(this.type=='Suggested'){this.page+=1;this.itemsService.fullItemsPage.fullSuggestedItems+=1;this.itemsService.getSuggestedItems(this.itemsService.fullItemsPage.fullSuggestedItems);}// changes the URL query parameter (page) according to the new page
this.router.navigate([],{relativeTo:this.route,queryParams:{page:this.page},replaceUrl:true});}/*
    Function Name: prevPage()
    Function Description: Go to the previous page of posts. Sends a request to the
                          items service to get the data for the previous page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"prevPage",value:function prevPage(){// if the list is the new posts list, get the previous page of new posts
if(this.type=='New'){this.page-=1;this.itemsService.fullItemsPage.fullNewItems-=1;this.itemsService.getNewItems(this.itemsService.fullItemsPage.fullNewItems);}// if the list is the suggested posts list, get the previous page of suggested posts
else if(this.type=='Suggested'){this.page-=1;this.itemsService.fullItemsPage.fullSuggestedItems-=1;this.itemsService.getSuggestedItems(this.itemsService.fullItemsPage.fullSuggestedItems);}// changes the URL query parameter (page) according to the new page
this.router.navigate([],{relativeTo:this.route,queryParams:{page:this.page},replaceUrl:true});}/*
    Function Name: editPost()
    Function Description: Triggers edit mode in order to edit a post.
    Parameters: post (Post) - Post to edit.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"editPost",value:function editPost(post){this.postToEdit=post;this.editMode=true;}/*
    Function Name: changeMode()
    Function Description: Remove the edit popup.
    Parameters: edit (boolean) - indicating whether edit mode should be active.
                                 When the user finishes editing, the event emitter
                                 in the popup component sends 'false' to this function
                                 to remove the popup.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"changeMode",value:function changeMode(edit){this.editMode=edit;}/*
    Function Name: deletePost()
    Function Description: Send a request to the items service to delete a post.
    Parameters: post_id (number) - ID of the post to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deletePost",value:function deletePost(postID){this.itemsService.deletePost(postID);}}]);return FullList;}();FullList=__decorate([core_1.Component({selector:'app-full-list',templateUrl:'./app//fullList.component.html'}),__metadata("design:paramtypes",[router_1.ActivatedRoute,items_service_1.ItemsService,router_1.Router,auth_service_1.AuthService])],FullList);exports.FullList=FullList;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4,"@angular/router":7}],326:[function(require,module,exports){"use strict";/*
    Loader
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");// App-related imports
var items_service_1=require("../../services/items.service");var auth_service_1=require("../../services/auth.service");var Loader=/*#__PURE__*/function(){// CTOR
function Loader(itemsService,authService){_classCallCheck(this,Loader);this.itemsService=itemsService;this.authService=authService;// message to display to the user while waiting
this.message='';// loader screen visibility
this.visible=true;}/*
    Function Name: ngOnInit()
    Function Description: This method is automatically triggered by Angular upon
                          page initiation. It checks for the existence of the data
                          the parent component is waiting (via checkLoadingTarget()) for and adjusts the
                          loader itself (its message and visibility) accordingly.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(Loader,[{key:"ngOnInit",value:function ngOnInit(){this.checkLoadingTarget();}/*
    Function Name: ngOnChanges()
    Function Description: This method is automatically triggered by Angular upon
                          changes in parent component. It checks for the existence of the data
                          the parent component is waiting (via checkLoadingTarget()) for and adjusts the
                          loader itself (its message and visibility) accordingly.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"ngOnChanges",value:function ngOnChanges(){if(this.waitingFor){this.visible=true;this.checkLoadingTarget();}}/*
    Function Name: checkLoadingTarget()
    Function Description: Checks for the existence of the data the parent component
                          is waiting (via checkLoadingTarget()) for and adjusts the
                          loader itself (its message and visibility) accordingly.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"checkLoadingTarget",value:function checkLoadingTarget(){var _this2=this;// if the app is waiting for user data to be fetched from the server
if(this.waitingFor=='user'){this.message='Fetching user data...';// subscribe to the subject following user data
this.authService.isUserDataResolved.subscribe(function(value){// the subject's value is changed to 'true' upon fetching user data,
// so if the value is true, there's no longer need for the loader
// screen.
if(value==true){_this2.visible=false;_this2.waitingFor='';}});}// if the app is waiting for posts data to be fetched from the server
else if(this.waitingFor=='posts'){this.message='Fetching posts...';}// if the app is waiting for incoming messages data to be fetched from the server
else if(this.waitingFor=='inbox messages'){this.message='Fetching messages...';// subscribe to the subject following user data
this.authService.isUserDataResolved.subscribe(function(value){// if user data has been fetched, the app can attempt to fetch
// the logged in user's messages
if(value==true){// subscribe to the subject following user messages data
_this2.itemsService.isUserInboxResolved.subscribe(function(value){// the subject's value is changed to 'true' upon fetching user
// messages, so if the value is true, there's no longer need
// for the loader screen
if(value==true){_this2.visible=false;_this2.waitingFor='';}});}});}// if the app is waiting for outgoing messages data to be fetched from the server
else if(this.waitingFor=='outbox messages'){this.message='Fetching messages...';// subscribe to the subject following user data
this.authService.isUserDataResolved.subscribe(function(value){// if user data has been fetched, the app can attempt to fetch
// the logged in user's messages
if(value==true){// subscribe to the subject following user messages data
_this2.itemsService.isUserOutboxResolved.subscribe(function(value){// the subject's value is changed to 'true' upon fetching user
// messages, so if the value is true, there's no longer need
// for the loader screen
if(value==true){_this2.visible=false;_this2.waitingFor='';}});}});}// if the app is waiting for the user's posts to be fetched from the server
else if(this.waitingFor=='user posts'){this.message='Fetching user posts...';// subscribe to the subject following user's posts
this.itemsService.isUserPostsResolved.subscribe(function(value){// the subject's value is changed to 'true' upon fetching user
// posts, so if the value is true, there's no longer need for the
// loader screen
if(value==true){_this2.visible=false;_this2.waitingFor='';}});}}}]);return Loader;}();__decorate([core_1.Input(),__metadata("design:type",String)],Loader.prototype,"waitingFor",void 0);Loader=__decorate([core_1.Component({selector:'app-loader',templateUrl:'./app//loader.component.html'}),__metadata("design:paramtypes",[items_service_1.ItemsService,auth_service_1.AuthService])],Loader);exports.Loader=Loader;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4}],327:[function(require,module,exports){"use strict";/*
    Main Page
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");// App-related imports
var auth_service_1=require("../../services/auth.service");var items_service_1=require("../../services/items.service");var MainPage=/*#__PURE__*/function(){// CTOR
function MainPage(itemsService,authService){_classCallCheck(this,MainPage);this.itemsService=itemsService;this.authService=authService;this.editType='post';this.itemsService.getItems();this.editMode=false;}_createClass2(MainPage,[{key:"ngOnInit",value:function ngOnInit(){}/*
    Function Name: sendHug()
    Function Description: Send a hug to a user through a post they've written. The hug
                          itself is sent by the items service.
    Parameters: itemID (number) - ID of the post.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"sendHug",value:function sendHug(itemID){var item={};// if the item is in the new list, gets it from there
if(this.itemsService.newItemsArray.filter(function(e){return e.id==itemID;})){item=this.itemsService.newItemsArray.filter(function(e){return e.id==itemID;})[0];}// if not, the item must be in the suggested list, so it gets it from there
else{item=this.itemsService.sugItemsArray.filter(function(e){return e.id==itemID;})[0];}this.itemsService.sendHug(item);}/*
    Function Name: editPost()
    Function Description: Triggers edit mode in order to edit a post.
    Parameters: post (Post) - Post to edit.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"editPost",value:function editPost(post){this.postToEdit=post;this.editMode=true;}/*
    Function Name: changeMode()
    Function Description: Remove the edit popup.
    Parameters: edit (boolean) - indicating whether edit mode should be active.
                                 When the user finishes editing, the event emitter
                                 in the popup component sends 'false' to this function
                                 to remove the popup.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"changeMode",value:function changeMode(edit){this.editMode=edit;}/*
    Function Name: deletePost()
    Function Description: Send a request to the items service to delete a post.
    Parameters: post_id (number) - ID of the post to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deletePost",value:function deletePost(postID){this.itemsService.deletePost(postID);}}]);return MainPage;}();MainPage=__decorate([core_1.Component({selector:'app-main-page',templateUrl:'./app//mainPage.component.html'}),__metadata("design:paramtypes",[items_service_1.ItemsService,auth_service_1.AuthService])],MainPage);exports.MainPage=MainPage;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4}],328:[function(require,module,exports){"use strict";/*
    Messages Page
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");// App-related imports
var auth_service_1=require("../../services/auth.service");var items_service_1=require("../../services/items.service");var AppMessaging=/*#__PURE__*/function(){// CTOR
function AppMessaging(authService,itemsService){var _this3=this;_classCallCheck(this,AppMessaging);this.authService=authService;this.itemsService=itemsService;this.messType='inbox';// loader sub-component variable
this.waitFor="".concat(this.messType," messages");// subscribe to the subject following user data
this.authService.isUserDataResolved.subscribe(function(value){// if the value is true, user data has been fetched, so the app can
// now fetch the user's messages
if(value==true){// Gets the user's messages via the items service
_this3.itemsService.getMessages(_this3.messType,_this3.authService.userData.id);}});}_createClass2(AppMessaging,[{key:"ngOnInit",value:function ngOnInit(){}/*
    Function Name: login()
    Function Description: Activates Auth0 login via the authentication service.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"login",value:function login(){this.authService.login();}/*
    Function Name: deleteMessage()
    Function Description: Delete a specific message from the user's messages, via
                          the items service.
    Parameters: messageID (number) - the ID of the message to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deleteMessage",value:function deleteMessage(messageID){this.itemsService.deleteMessage(messageID);}/*
    Function Name: nextPage()
    Function Description: Go to the next page of messages. Sends a request to the
                          items service to get the data for the next page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"nextPage",value:function nextPage(){if(this.messType=='inbox'){this.itemsService.userMessagesPage.inbox+=1;}else if(this.messType=='outbox'){this.itemsService.userMessagesPage.outbox+=1;}this.itemsService.getMessages(this.messType,this.authService.userData.id);}/*
    Function Name: prevPage()
    Function Description: Go to the previous page of messages. Sends a request to the
                          items service to get the data for the previous page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"prevPage",value:function prevPage(){if(this.messType=='inbox'){this.itemsService.userMessagesPage.inbox-=1;}else if(this.messType=='outbox'){this.itemsService.userMessagesPage.outbox-=1;}this.itemsService.getMessages(this.messType,this.authService.userData.id);}/*
    Function Name: changeMailbox()
    Function Description: Changes the currently active mailbox (inbox or outbox).
    Parameters: newType (string) - The mailbox to change to.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"changeMailbox",value:function changeMailbox(newType){this.messType=newType;this.waitFor="".concat(this.messType," messages");this.itemsService.getMessages(this.messType,this.authService.userData.id);}}]);return AppMessaging;}();AppMessaging=__decorate([core_1.Component({selector:'app-messages',templateUrl:'./app//messages.component.html'}),__metadata("design:paramtypes",[auth_service_1.AuthService,items_service_1.ItemsService])],AppMessaging);exports.AppMessaging=AppMessaging;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4}],329:[function(require,module,exports){"use strict";/*
    My Posts
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var items_service_1=require("../../services/items.service");var auth_service_1=require("../../services/auth.service");var MyPosts=/*#__PURE__*/function(){// CTOR
function MyPosts(itemsService,authService){_classCallCheck(this,MyPosts);this.itemsService=itemsService;this.authService=authService;this.editType='post';// loader sub-component variable
this.waitFor='user posts';itemsService.getUserPosts(this.authService.userData.id);this.editMode=false;}_createClass2(MyPosts,[{key:"ngOnInit",value:function ngOnInit(){}/*
    Function Name: editPost()
    Function Description: Triggers edit mode in order to edit a post.
    Parameters: post (Post) - Post to edit.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"editPost",value:function editPost(post){this.postToEdit=post;this.editMode=true;}/*
    Function Name: changeMode()
    Function Description: Remove the edit popup.
    Parameters: edit (boolean) - indicating whether edit mode should be active.
                                 When the user finishes editing, the event emitter
                                 in the popup component sends 'false' to this function
                                 to remove the popup.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"changeMode",value:function changeMode(edit){this.editMode=edit;}/*
    Function Name: deletePost()
    Function Description: Send a request to the items service to delete a post.
    Parameters: post_id (number) - ID of the post to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deletePost",value:function deletePost(post_id){this.itemsService.deletePost(post_id);}/*
    Function Name: nextPage()
    Function Description: Go to the next page of user posts. Sends a request to the
                          items service to get the data for the next page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"nextPage",value:function nextPage(){this.itemsService.userPostsPage+=1;this.itemsService.getUserPosts(this.authService.userData.id);}/*
    Function Name: prevPage()
    Function Description: Go to the previous page of user posts. Sends a request to the
                          items service to get the data for the previous page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"prevPage",value:function prevPage(){this.itemsService.userPostsPage-=1;this.itemsService.getUserPosts(this.authService.userData.id);}}]);return MyPosts;}();MyPosts=__decorate([core_1.Component({selector:'app-my-posts',templateUrl:'./app//myPosts.component.html'}),__metadata("design:paramtypes",[items_service_1.ItemsService,auth_service_1.AuthService])],MyPosts);exports.MyPosts=MyPosts;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4}],330:[function(require,module,exports){"use strict";/*
    New Item
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var router_1=require("@angular/router");var items_service_1=require("../../services/items.service");var auth_service_1=require("../../services/auth.service");var alerts_service_1=require("../../services/alerts.service");var NewItem=/*#__PURE__*/function(){// CTOR
function NewItem(itemsService,authService,route,alertService){_classCallCheck(this,NewItem);this.itemsService=itemsService;this.authService=authService;this.route=route;this.alertService=alertService;// variable declaration
this.itemType='';// Gets the URL parameters
var type=this.route.snapshot.paramMap.get('type');var user=this.route.snapshot.queryParamMap.get('user');var userID=this.route.snapshot.queryParamMap.get('userID');// If there's a type parameter, sets the type property
if(type){this.itemType=type;}// If there's a user parameter, sets the user property
if(user&&userID){this.user=user;this.forID=userID;}}/*
    Function Name: sendPost()
    Function Description: Sends a request to create a new post to the items service.
    Parameters: e (event) - This method is triggered by pressing a button; this parameter
                            contains the click event data.
                postText (string) - A string containing the post's text.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(NewItem,[{key:"sendPost",value:function sendPost(e,postText){e.preventDefault();// create a new post object to send
var newPost={user_id:this.authService.userData.id,user:this.authService.userData.displayName,text:postText,date:new Date(),givenHugs:0};this.itemsService.sendPost(newPost);}/*
    Function Name: sendMessage()
    Function Description: Sends a request to create a new message to the items service.
    Parameters: e (event) - This method is triggered by pressing a button; this parameter
                            contains the click event data.
                messageText (string) - A string containing the new message's text.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"sendMessage",value:function sendMessage(e,messageText){e.preventDefault();// if the user is attempting to send a message to themselves
if(this.authService.userData.id==this.forID){this.alertService.createAlert({type:'Error',message:'You can\'t send a message to yourself!'});}// if the user is sending a message to someone else, make the request
else{// create a new message object to send
var newMessage={from:this.authService.userData.displayName,fromId:this.authService.userData.id,forId:this.forID,messageText:messageText,date:new Date()};this.itemsService.sendMessage(newMessage);}}}]);return NewItem;}();NewItem=__decorate([core_1.Component({selector:'app-new-item',templateUrl:'./app//newItem.component.html'}),__metadata("design:paramtypes",[items_service_1.ItemsService,auth_service_1.AuthService,router_1.ActivatedRoute,alerts_service_1.AlertsService])],NewItem);exports.NewItem=NewItem;},{"../../services/alerts.service":333,"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4,"@angular/router":7}],331:[function(require,module,exports){"use strict";/*
    Popup
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");// App-related import
var auth_service_1=require("../../services/auth.service");var items_service_1=require("../../services/items.service");var PopUp=/*#__PURE__*/function(){// CTOR
function PopUp(authService,itemsService){_classCallCheck(this,PopUp);this.authService=authService;this.itemsService=itemsService;// indicates whether edit mode is still required
this.editMode=new core_1.EventEmitter();}/*
    Function Name: updateDisplayN()
    Function Description: Sends a request via the auth service to edit the user's display name.
    Parameters: e (event) - This method is triggered by pressing a button; this parameter
                            contains the click event data.
                newDisplayName (string) - A string containing the user's new name.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(PopUp,[{key:"updateDisplayN",value:function updateDisplayN(e,newDisplayName){e.preventDefault();this.authService.userData.displayName=newDisplayName;this.authService.updateUserData();this.editMode.emit(false);}/*
    Function Name: updatePost()
    Function Description: Sends a request to edit a post's text to the items service.
    Parameters: e (event) - This method is triggered by pressing a button; this parameter
                            contains the click event data.
                newText (string) - A string containing the new text for the post.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"updatePost",value:function updatePost(e,newText){e.preventDefault();this.editedItem.text=newText;this.itemsService.editPost(this.editedItem);this.editMode.emit(false);}/*
    Function Name: exitEdit()
    Function Description: Emits an event to disable edit mode. Exiting edit mode is
                          done by the parent component upon getting the 'false' value.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"exitEdit",value:function exitEdit(){this.editMode.emit(false);}}]);return PopUp;}();__decorate([core_1.Input(),__metadata("design:type",String)],PopUp.prototype,"toEdit",void 0);__decorate([core_1.Input(),__metadata("design:type",Object)],PopUp.prototype,"editedItem",void 0);__decorate([core_1.Output(),__metadata("design:type",Object)],PopUp.prototype,"editMode",void 0);PopUp=__decorate([core_1.Component({selector:'app-pop-up',templateUrl:'./app//popUp.component.html'}),__metadata("design:paramtypes",[auth_service_1.AuthService,items_service_1.ItemsService])],PopUp);exports.PopUp=PopUp;},{"../../services/auth.service":334,"../../services/items.service":335,"@angular/core":4}],332:[function(require,module,exports){"use strict";/*
    User Page
    Send a Hug Component
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");// App-related imports
var auth_service_1=require("../../services/auth.service");var UserPage=/*#__PURE__*/function(){// CTOR
function UserPage(authService){_classCallCheck(this,UserPage);this.authService=authService;this.editType='user';// loader sub-component variable
this.waitFor="user";this.authService.checkHash();this.editMode=false;}_createClass2(UserPage,[{key:"ngOnInit",value:function ngOnInit(){}/*
    Function Name: login()
    Function Description: Activates Auth0 login via the authentication service.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"login",value:function login(){this.authService.login();}/*
    Function Name: logout()
    Function Description: Activates Auth0 logout via the authentication service.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"logout",value:function logout(){this.authService.logout();}/*
    Function Name: editName()
    Function Description: Activate the edit popup to edit a user's display name.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"editName",value:function editName(){this.userToEdit=this.authService.userData;this.editMode=true;}/*
    Function Name: changeMode()
    Function Description: Remove the edit popup.
    Parameters: edit (boolean) - indicating whether edit mode should be active.
                                 When the user finishes editing, the event emitter
                                 in the popup component sends 'false' to this function
                                 to remove the popup.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"changeMode",value:function changeMode(edit){this.editMode=edit;}}]);return UserPage;}();UserPage=__decorate([core_1.Component({selector:'app-user-page',templateUrl:'./app//userPage.component.html'}),__metadata("design:paramtypes",[auth_service_1.AuthService])],UserPage);exports.UserPage=UserPage;},{"../../services/auth.service":334,"@angular/core":4}],333:[function(require,module,exports){"use strict";/*
    Alerts Service
    Send a Hug Service
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var AlertsService=/*#__PURE__*/function(){// CTOR
function AlertsService(){_classCallCheck(this,AlertsService);}/*
    Function Name: createAlert()
    Function Description: Create a new alert and display it to the user. Checks to
                          ensure there's only one active alert and displays required
                          buttons/links.
    Parameters: alert (AlertMessage) - The alert message to display (based on the alert interface).
                reload (boolean) - Indicating whether a reload button is required.
                navigate (string) - Optional parameter indicating whether there needs to
                                    be a navigation link in the alert.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(AlertsService,[{key:"createAlert",value:function createAlert(alert){var reload=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var navigate=arguments.length>2?arguments[2]:undefined;// checks if there's already an alert, in which case it's removed
if(document.querySelector('.alertMessage')){document.querySelector('.alertMessage').remove();}// builds the alert and adds it to the DOM; also adds an event listener to
// the 'close' button.
var alertMessage=this.buildAlertElement(alert);document.getElementById('alertContainer').append(alertMessage);document.getElementById('alertButton').addEventListener('click',this.closeAlert);// if reload option is required
if(reload){this.addReloadButton(alertMessage);document.getElementById('reloadBtn').addEventListener('click',this.reloadPage);}// if return to homepage option is required
else if(navigate=='/'){this.addNavigateButton(alertMessage);}}/*
    Function Name: closeAlert()
    Function Description: Removes the alert.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"closeAlert",value:function closeAlert(){document.querySelector('.alertMessage').remove();}/*
    Function Name: closeAlert()
    Function Description: Removes the alert and reloads the page.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"reloadPage",value:function reloadPage(){document.querySelector('.alertMessage').remove();window.location.reload();}/*
    Function Name: buildAlertElement()
    Function Description: Builds the alert div element to add to the DOM.
    Parameters: alert (AlertMessage) - The alert message to display (based on the alert interface).
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"buildAlertElement",value:function buildAlertElement(alert){// alert div
var alertMessage=document.createElement('div');alertMessage.className="alertMessage ".concat(alert.type);// alert title
var alertHeadline=document.createElement('h3');alertHeadline.className="alertType";alertHeadline.textContent=alert.type;alertMessage.append(alertHeadline);// alert text
var alertText=document.createElement('div');alertText.className='alertText';alertText.textContent=alert.message;alertMessage.append(alertText);// 'close alert' button
var closeButton=document.createElement('button');closeButton.className='appButton';closeButton.id='alertButton';closeButton.textContent='Close';alertMessage.append(closeButton);return alertMessage;}/*
    Function Name: addReloadButton()
    Function Description: Adds a 'reload page' button to the alert message div.
    Parameters: alertMessage (HTMLDivElement) - The alert message div.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"addReloadButton",value:function addReloadButton(alertMessage){var reloadButton=document.createElement('button');reloadButton.className='appButton';reloadButton.id='reloadBtn';reloadButton.textContent='Reload Page';alertMessage.append(reloadButton);}/*
    Function Name: addNavigateButton()
    Function Description: Adds a 'navigate to page' button to the alert message div.
    Parameters: alertMessage (HTMLDivElement) - The alert message div.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"addNavigateButton",value:function addNavigateButton(alertMessage){var navButton=document.createElement('a');navButton.href='/';navButton.className='appButton';navButton.id='navButton';navButton.textContent="Home Page";alertMessage.append(navButton);}}]);return AlertsService;}();AlertsService=__decorate([core_1.Injectable({providedIn:'root'}),__metadata("design:paramtypes",[])],AlertsService);exports.AlertsService=AlertsService;},{"@angular/core":4}],334:[function(require,module,exports){"use strict";/*
    Auth Service
    Send a Hug Service
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result["default"]=mod;return result;};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var http_1=require("@angular/common/http");// Other essential imports
var rxjs_1=require("rxjs");var Auth0=__importStar(require("auth0-js"));// App-related imports
var environment_1=require("../../environments/environment");var AuthService=/*#__PURE__*/function(){// CTOR
function AuthService(Http){_classCallCheck(this,AuthService);this.Http=Http;// Auth0 variable
this.auth0=new Auth0.WebAuth({clientID:environment_1.environment.auth0.clientID,domain:environment_1.environment.auth0.domain,responseType:'token',redirectUri:environment_1.environment.auth0.redirectUri,audience:environment_1.environment.auth0.audience});this.serverUrl=environment_1.environment.backend.domain;// authentication information
this.token='';this.authHeader=new http_1.HttpHeaders();this.authenticated=false;this.userData={id:0,auth0Id:'',displayName:'',receivedHugs:0,givenHugs:0,postsNum:0,loginCount:0,role:'',jwt:''};// documents whether the user just logged in or they're still logged in following
// their previous login
this.loggedIn=false;this.isUserDataResolved=new rxjs_1.BehaviorSubject(false);}/*
    Function Name: login()
    Function Description: Activates Auth0 login/authorize.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(AuthService,[{key:"login",value:function login(){this.auth0.authorize();}/*
    Function Name: checkHash()
    Function Description: Checks the URL hash for a token.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"checkHash",value:function checkHash(){var _this4=this;// if there's a token in the hash, parse it
if(window.location.hash){// Parses the token (in the URL hash).
this.auth0.parseHash({hash:window.location.hash},function(err,authResult){if(authResult){window.location.hash='';if(authResult.accessToken){// parses the token payload
_this4.token=authResult.accessToken;var payload=_this4.parseJWT(authResult.accessToken);_this4.loggedIn=true;// gets the user's data
_this4.getUserData(payload);}}else if(err){return'Error: '+err;}});}// if there's no token in the hash, check localStorage to see if there's
// an active token there
this.getToken();}/*
    Function Name: parseJWT()
    Function Description: Parse the token payload.
    Parameters: token (string) - A string containing the JWT.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"parseJWT",value:function parseJWT(token){var base64Url=token.split('.')[1];var base64=base64Url.replace(/-/g,'+').replace(/_/g,'/');var jsonPayload=decodeURIComponent(atob(base64).split('').map(function(c){return'%'+('00'+c.charCodeAt(0).toString(16)).slice(-2);}).join(''));return JSON.parse(jsonPayload);}/*
    Function Name: getUserData()
    Function Description: Sends a request to the server to get the user's data.
                          Since getting a user's data requires permissions, a success
                          response to this request means the JWT is valid and verified,
                          so the user has successfully authenticated.
    Parameters: jwtPayload (any) - The JWT payload.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getUserData",value:function getUserData(jwtPayload){var _this5=this;// if there's a JWT
if(jwtPayload){// attempts to get the user's data
this.Http.get("".concat(this.serverUrl,"/users/").concat(jwtPayload.sub),{headers:new http_1.HttpHeaders({'Authorization':"Bearer ".concat(this.token)})// if successful, get the user data
}).subscribe(function(response){var data=response.user;_this5.userData={id:data.id,auth0Id:jwtPayload.sub,displayName:data.displayName,receivedHugs:data.receivedH,givenHugs:data.givenH,postsNum:data.posts,loginCount:data.loginCount,role:data.role,jwt:_this5.token};// set the authentication-variables accordingly
_this5.authenticated=true;_this5.authHeader=new http_1.HttpHeaders({'Authorization':"Bearer ".concat(_this5.token)});_this5.setToken();_this5.isUserDataResolved.next(true);// if the user just logged in, update the login count
if(_this5.loggedIn){_this5.updateUserData();}// if there's an error, check the error type
},function(err){var statusCode=err.status;// if a user with that ID doens't exist, try to create it
if(statusCode==404){_this5.createUser(jwtPayload);}else{_this5.isUserDataResolved.next(true);}});}// If there's no currently-saved token
else{jwtPayload=this.getToken();}}/*
    Function Name: createUser()
    Function Description: Sends a request to the server to create a new user.
                          Since getting a user's data requires permissions, a success
                          response to this request means the JWT is valid and verified,
                          so the user has successfully authenticated. This method is
                          only triggered if the user doesn't already exist.
    Parameters: jwtPayload (any) - The JWT payload.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"createUser",value:function createUser(jwtPayload){var _this6=this;// post request to create the user
this.Http.post("".concat(this.serverUrl,"/users"),{id:jwtPayload.sub,displayName:'user'+Math.round(Math.random()*100)},{headers:new http_1.HttpHeaders({'Authorization':"Bearer ".concat(this.token)})//if the request succeeds, get the user's data
}).subscribe(function(response){var data=response.user;_this6.userData={id:data.id,auth0Id:jwtPayload.sub,displayName:data.displayName,receivedHugs:data.receivedH,givenHugs:data.givenH,postsNum:data.postsNum,loginCount:data.loginCount,role:data.role,jwt:_this6.token};// set the authentication-variables accordingly
_this6.authenticated=true;_this6.authHeader=new http_1.HttpHeaders({'Authorization':"Bearer ".concat(_this6.token)});_this6.setToken();_this6.isUserDataResolved.next(true);// error handling
},function(err){console.log(err);_this6.isUserDataResolved.next(true);});}/*
    Function Name: logout()
    Function Description: Activates Auth0 logout.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"logout",value:function logout(){this.auth0.logout({returnTo:environment_1.environment.auth0.logoutUri,clientID:environment_1.environment.auth0.clientID});//clears the user's data
this.authenticated=false;this.token='';this.userData={id:0,auth0Id:'',displayName:'',receivedHugs:0,givenHugs:0,postsNum:0,loginCount:0,role:'',jwt:''};localStorage.setItem("ACTIVE_JWT",'');}/*
    Function Name: setToken()
    Function Description: Sets the token in local storage.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"setToken",value:function setToken(){localStorage.setItem("ACTIVE_JWT",this.token);}/*
    Function Name: getToken()
    Function Description: Gets the currently active token from localStorage.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getToken",value:function getToken(){var jwt=localStorage.getItem("ACTIVE_JWT");if(jwt){// Parses the token and checks its expiration
var payload=this.parseJWT(jwt);var expiration=payload['exp']*1000;// If app auth token is not expired, request new token
if(expiration>Date.now()){this.token=jwt;this.loggedIn=false;// gets the user's data and refreshes the token at the same time in
// order to save time getting the information to the UI
this.getUserData(payload);this.refreshToken();}// If it expired, clears the user's data
else{this.logout();}}}/*
    Function Name: refreshToken()
    Function Description: Attempts to silently refresh the token.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"refreshToken",value:function refreshToken(){var _this7=this;this.auth0.checkSession({},function(err,authResult){// if refreshing the token was successful, parse the JWT and get the
// token variable to the new token
if(authResult&&authResult.accessToken){_this7.token=authResult.accessToken;var payload=_this7.parseJWT(authResult.accessToken);_this7.getUserData(payload);}// if there was an error refreshing the token
else if(err){return'Error: '+err;}});}/*
    Function Name: updateUserData()
    Function Description: Sends a request to the server to update the login count
                          and display name in the database.
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"updateUserData",value:function updateUserData(){this.Http.patch("".concat(this.serverUrl,"/users/").concat(this.userData.id),{displayName:this.userData.displayName,receivedH:this.userData.receivedHugs,givenH:this.userData.givenHugs,posts:this.userData.postsNum,loginCount:this.userData.loginCount+1},{headers:this.authHeader}).subscribe(function(response){console.log(response);});}/*
    Function Name: canUser()
    Function Description: Check whether the user has permission to perform an action.
    Parameters: permission (string) - The required permission.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"canUser",value:function canUser(permission){// if there's an active token, check the logged in user's permissions
if(this.token){var canUserDo;var tokenPayload=this.parseJWT(this.token);var permissions=tokenPayload['permissions'];// if it's within the user's permissions, return true;
// otherwise return false
canUserDo=permissions.includes(permission);return canUserDo;}// if there isn't, no user is logged in, so of course there's no permission
else{return false;}}}]);return AuthService;}();AuthService=__decorate([core_1.Injectable({providedIn:'root'}),__metadata("design:paramtypes",[http_1.HttpClient])],AuthService);exports.AuthService=AuthService;},{"../../environments/environment":336,"@angular/common/http":1,"@angular/core":4,"auth0-js":8,"rxjs":120}],335:[function(require,module,exports){"use strict";/*
    Items Service
    Send a Hug Service
*/var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;};var __metadata=this&&this.__metadata||function(k,v){if((typeof Reflect==="undefined"?"undefined":_typeof(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(k,v);};Object.defineProperty(exports,"__esModule",{value:true});// Angular imports
var core_1=require("@angular/core");var http_1=require("@angular/common/http");var rxjs_1=require("rxjs");var auth_service_1=require("./auth.service");var alerts_service_1=require("./alerts.service");var environment_1=require("../../environments/environment");var ItemsService=/*#__PURE__*/function(){// CTOR
function ItemsService(Http,authService,alertsService){_classCallCheck(this,ItemsService);this.Http=Http;this.authService=authService;this.alertsService=alertsService;this.serverUrl=environment_1.environment.backend.domain;this.newItemsArray=[];this.sugItemsArray=[];// Full list variables
this.fullItemsList={fullNewItems:[],fullSuggestedItems:[]};this.fullItemsPage={fullNewItems:0,fullSuggestedItems:0};this.totalFullItemsPage={fullNewItems:0,fullSuggestedItems:0};// User posts variables
this.userPosts=[];this.isUserPostsResolved=new rxjs_1.BehaviorSubject(false);// User messages variables
this.userMessages={inbox:[],outbox:[]};this.userMessagesPage={inbox:0,outbox:0};this.totalUserMessagesPages={inbox:0,outbox:0};this.isUserInboxResolved=new rxjs_1.BehaviorSubject(false);this.isUserOutboxResolved=new rxjs_1.BehaviorSubject(false);// default assignment
this.fullItemsPage.fullNewItems=1;this.fullItemsPage.fullSuggestedItems=1;this.totalFullItemsPage.fullNewItems=1;this.totalFullItemsPage.fullSuggestedItems=1;this.userPostsPage=1;this.totalUserPostsPages=1;this.userMessagesPage.inbox=1;this.totalUserMessagesPages.inbox=1;this.userMessagesPage.outbox=1;this.totalUserMessagesPages.outbox=1;}// POST-RELATED METHODS
// ==============================================================
/*
    Function Name: getItems()
    Function Description: Gets ten recent posts and ten suggested posts for the
                          main page (MainPage component).
    Parameters: None.
    ----------------
    Programmer: Shir Bar Lev.
    */_createClass2(ItemsService,[{key:"getItems",value:function getItems(){var _this8=this;this.Http.get(this.serverUrl).subscribe(function(response){var data=response;_this8.newItemsArray=data.recent;_this8.sugItemsArray=data.suggested;// if there was an error, alert the user
},function(err){_this8.createErrorAlert(err);});}/*
    Function Name: getNewItems()
    Function Description: Gets a paginated list of new items.
    Parameters: page (number) - Current page.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getNewItems",value:function getNewItems(page){var _this9=this;// URL and page query parameter
var Url=this.serverUrl+'/posts/new';var params=new http_1.HttpParams().set('page',"".concat(page));// HTTP request
this.Http.get(Url,{params:params}).subscribe(function(response){var data=response.posts;_this9.fullItemsList.fullNewItems=data;_this9.fullItemsPage.fullNewItems=page;_this9.totalFullItemsPage.fullNewItems=response.total_pages;// if there was an error, alert the user
},function(err){_this9.createErrorAlert(err);});}/*
    Function Name: getSuggestedItems()
    Function Description: Gets a paginated list of suggested items.
    Parameters: page (number) - Current page.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getSuggestedItems",value:function getSuggestedItems(page){var _this10=this;// URL and page query parameter
var Url=this.serverUrl+'/posts/suggested';var params=new http_1.HttpParams().set('page',"".concat(page));// HTTP request
this.Http.get(Url,{params:params}).subscribe(function(response){var data=response.posts;_this10.fullItemsList.fullSuggestedItems=data;_this10.fullItemsPage.fullSuggestedItems=page;_this10.totalFullItemsPage.fullSuggestedItems=response.total_pages;// if there was an error, alert the user
},function(err){_this10.createErrorAlert(err);});}/*
    Function Name: getUserPosts()
    Function Description: Gets a paginated list of the user's posts.
    Parameters: userID (number) - the ID of the user whose posts need to be fetched.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getUserPosts",value:function getUserPosts(userID){var _this11=this;var Url=this.serverUrl+"/users/".concat(userID,"/posts");// if the current page is 0, send page 1 to the server (default)
var currentPage=this.userPostsPage?this.userPostsPage:1;var params=new http_1.HttpParams().set('page',"".concat(currentPage));// HTTP request
this.Http.get(Url,{headers:this.authService.authHeader,params:params}).subscribe(function(response){var data=response.posts;_this11.userPosts=data;_this11.totalUserPostsPages=response.total_pages;// if there are 0 pages, current page is also 0; otherwise it's whatever
// the server returns
_this11.userPostsPage=_this11.totalUserPostsPages?response.page:0;_this11.isUserPostsResolved.next(true);// if there was an error, alert the user
},function(err){_this11.isUserPostsResolved.next(true);_this11.createErrorAlert(err);});}/*
    Function Name: sendPost()
    Function Description: Create a new post.
    Parameters: post (Post) - the post to attempt to add to the database.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"sendPost",value:function sendPost(post){var _this12=this;var Url=this.serverUrl+'/posts';this.Http.post(Url,post,{headers:this.authService.authHeader}).subscribe(function(response){if(response.success==true){_this12.createSuccessAlert('Your post was published! Return to home page to view the post.',false,'/');}// if there was an error, alert the user
},function(err){_this12.createErrorAlert(err);});}/*
    Function Name: deletePost()
    Function Description: Delete a post from the database.
    Parameters: post_id (number) - the ID of the post to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deletePost",value:function deletePost(post_id){var _this13=this;var Url=this.serverUrl+"/posts/".concat(post_id);this.Http["delete"](Url,{headers:this.authService.authHeader}).subscribe(function(response){if(response.success==true){_this13.createSuccessAlert("Post ".concat(response.deleted," was deleted. Refresh to view the updated post list."),true);}// if there was an error, alert the user
},function(err){_this13.createErrorAlert(err);});}/*
    Function Name: editPost()
    Function Description: Edit an existing post. This is used only for editing the post's text.
    Parameters: post (Post) - the updated data of the post.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"editPost",value:function editPost(post){var _this14=this;var Url=this.serverUrl+"/posts/".concat(post.id);this.Http.patch(Url,post,{headers:this.authService.authHeader}).subscribe(function(response){if(response.success==true){_this14.createSuccessAlert('Your post was edited. Refresh to view the updated post.',true);}// if there was an error, alert the user
},function(err){_this14.createErrorAlert(err);});}/*
    Function Name: sendHug()
    Function Description: Send a hug to a user through a post they've written.
    Parameters: item (Post) - the post for which to send a hug.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"sendHug",value:function sendHug(item){var _this15=this;var Url=this.serverUrl+"/posts/".concat(item.id);item.givenHugs+=1;this.Http.patch(Url,item,{headers:this.authService.authHeader}).subscribe(function(response){if(response.success==true){_this15.createSuccessAlert('Your hug was sent!',false);}// if there was an error, alert the user
},function(err){_this15.createErrorAlert(err);});}// MESSAGE-RELATED METHODS
// ==============================================================
/*
    Function Name: getMessages()
    Function Description: Checks which mailbox was requested and forwards the request
                          to the appropriate getter function.
    Parameters: type (string) - Type of mailbox to fetch.
                userID (number) - the ID of the user whose messages to fetch.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getMessages",value:function getMessages(type,userID){if(type=='inbox'){this.getInboxMessages(userID);}else if(type=='outbox'){this.getOutboxMessages(userID);}}/*
    Function Name: getInboxMessages()
    Function Description: Get the user's incoming messages.
    Parameters: userID (number) - the ID of the user whose messages to fetch.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getInboxMessages",value:function getInboxMessages(userID){var _this16=this;// if the current page is 0, send page 1 to the server (default)
var currentPage=this.userMessagesPage.inbox?this.userMessagesPage.inbox:1;var params=new http_1.HttpParams().set('userID',"".concat(userID)).set('page',"".concat(currentPage)).set('type','inbox');// try to get the user's messages
this.Http.get("".concat(this.serverUrl,"/messages"),{headers:this.authService.authHeader,params:params}).subscribe(function(response){var messages=response.messages;_this16.userMessages.inbox=[];messages.forEach(function(element){_this16.userMessages.inbox.push(element);});_this16.totalUserMessagesPages.inbox=response.total_pages;// if there are 0 pages, current page is also 0; otherwise it's whatever
// the server returns
_this16.userMessagesPage.inbox=_this16.totalUserMessagesPages.inbox?response.current_page:0;_this16.isUserInboxResolved.next(true);// if there was an error, alert the user
},function(err){_this16.isUserInboxResolved.next(true);_this16.createErrorAlert(err);});}/*
    Function Name: getOutboxMessages()
    Function Description: Get the user's outgoing messages.
    Parameters: userID (number) - the ID of the user whose messages to fetch.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"getOutboxMessages",value:function getOutboxMessages(userID){var _this17=this;// if the current page is 0, send page 1 to the server (default)
var currentPage=this.userMessagesPage.outbox?this.userMessagesPage.outbox:1;var params=new http_1.HttpParams().set('userID',"".concat(userID)).set('page',"".concat(currentPage)).set('type','outbox');// try to get the user's messages
this.Http.get("".concat(this.serverUrl,"/messages"),{headers:this.authService.authHeader,params:params}).subscribe(function(response){var messages=response.messages;_this17.userMessages.outbox=[];messages.forEach(function(element){_this17.userMessages.outbox.push(element);});_this17.totalUserMessagesPages.outbox=response.total_pages;// if there are 0 pages, current page is also 0; otherwise it's whatever
// the server returns
_this17.userMessagesPage.outbox=_this17.totalUserMessagesPages.outbox?response.current_page:0;_this17.isUserOutboxResolved.next(true);// if there was an error, alert the user
},function(err){_this17.isUserOutboxResolved.next(true);_this17.createErrorAlert(err);});}/*
    Function Name: sendMessage()
    Function Description: Send a message.
    Parameters: message (Message) - the message to send.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"sendMessage",value:function sendMessage(message){var _this18=this;var Url=this.serverUrl+'/messages';this.Http.post(Url,message,{headers:this.authService.authHeader}).subscribe(function(response){if(response.success==true){_this18.createSuccessAlert('Your message was sent!',false,'/');}// if there was an error, alert the user
},function(err){_this18.createErrorAlert(err);});}/*
    Function Name: deleteMessage()
    Function Description: Delete a message.
    Parameters: messageId (number) - the ID of the message to delete.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"deleteMessage",value:function deleteMessage(messageId){var _this19=this;var Url=this.serverUrl+"/messages/".concat(messageId);// try to delete the message
this.Http["delete"](Url,{headers:this.authService.authHeader}).subscribe(function(response){_this19.createSuccessAlert("Message ".concat(response.deleted," was deleted! Refresh to view the updated message list."),true);// if there was an error, alert the user
},function(err){_this19.createErrorAlert(err);});}// ALERT METHODS
// ==============================================================
/*
    Function Name: createSuccessAlert()
    Function Description: Creates an alert for the user to know their action succeeded.
    Parameters: message (string) - the alert text.
                reload (boolean) - whether a reload button is required; defaults to false.
                navigate (string) - Optional parameter indicating the navigation target (if needed).
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"createSuccessAlert",value:function createSuccessAlert(message){var reload=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var navigate=arguments.length>2?arguments[2]:undefined;// an alert message
var alert={type:'Success',message:message};this.alertsService.createAlert(alert,reload,navigate);}/*
    Function Name: createErrorAlert()
    Function Description: Checks what type of error occurred and returns an alert.
    Parameters: err (HttpErrorResponse) - The HTTP error response from the server.
    ----------------
    Programmer: Shir Bar Lev.
    */},{key:"createErrorAlert",value:function createErrorAlert(err){// an alert message
var alert={type:'Error',message:err.error.message};// if it's an auth error, the structure is slightly different
if(err.status==403||err.status==401){alert.message=err.error.message.description;}this.alertsService.createAlert(alert);}}]);return ItemsService;}();ItemsService=__decorate([core_1.Injectable({providedIn:'root'}),__metadata("design:paramtypes",[http_1.HttpClient,auth_service_1.AuthService,alerts_service_1.AlertsService])],ItemsService);exports.ItemsService=ItemsService;},{"../../environments/environment":336,"./alerts.service":333,"./auth.service":334,"@angular/common/http":1,"@angular/core":4,"rxjs":120}],336:[function(require,module,exports){"use strict";// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
Object.defineProperty(exports,"__esModule",{value:true});exports.environment={production:false,auth0:{domain:'dev-sbac.auth0.com',clientID:'rgZL4I04pep3P2GRIEVQtDkWcHjv9sru',audience:'sendhug',redirectUri:'http://localhost:3000/user',logoutUri:'http://localhost:3000'},backend:{domain:'http://localhost:5000'}};/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */ // import 'zone.js/dist/zone-error';  // Included with Angular CLI.
},{}],337:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});require("zone.js/dist/zone");require("core-js/features/reflect");var core_1=require("@angular/core");var platform_browser_dynamic_1=require("@angular/platform-browser-dynamic");var app_module_1=require("./app/app.module");var environment_1=require("./environments/environment");if(environment_1.environment.production){core_1.enableProdMode();}platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);},{"./app/app.module":322,"./environments/environment":336,"@angular/core":4,"@angular/platform-browser-dynamic":5,"core-js/features/reflect":10,"zone.js/dist/zone":319}]},{},[337]);
//# sourceMappingURL=app.bundle.js.map
